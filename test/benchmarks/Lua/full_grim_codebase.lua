ac_anchor_anchor_gone = 0
ac_anchor_anchor_here = 1
ac_belts_forward = 0
ac_belts_reverse = 1
ac_belts_slow_fore = 2
ac_belts_stop = 3
ac_belts_start_rev = 4
ac_belts_slow_rev = 5
ac_belts_start_fore = 6
ac_chain_gone = 0
ac_chain_here = 1
ac_chain_bunched = 2
ac_chain_wrapped = 3
CheckFirstTime("ac.lua")
dofile("mn_conveyor.lua")
dofile("ac_chain.lua")
dofile("ac_belts.lua")
ac = Set:create("ac.set", "anchor room", { ac_cnvws = 0, ac_ovrhd = 1 })
ac.chain_state = "gone"
ac.chain_actor = nil
ac.chain_vol = 80
underwater_ambience_list = { "undwAmb1.wav", "undwAmb2.wav", "undwAmb3.wav", "undwAmb4.wav", "undwAmb5.wav", "undwAmb6.wav" }
underwater_ambience_parm_list = { min_delay = 6000, max_delay = 12000, min_volume = 30, max_volume = 75 }
ac.belt_actor = Actor:create(nil, nil, nil, "/actx014/")
ac.belt_actor.default = function(arg1) -- line 24
    arg1:set_costume("ac_belts.cos")
    arg1:put_in_set(ac)
    arg1:setpos(7.60617, -2.99209, -0.0117)
    arg1:setrot(0, 180, 0)
    if not cy.lever.up then
        arg1:stop_chore()
        arg1:play_chore_looping(ac_belts_reverse)
    else
        arg1:stop_chore()
        arg1:play_chore_looping(ac_belts_forward)
    end
end
ac.drift_pos = { x = 8.3852701, y = -1.78484, z = 0.33329999 }
ac.drift_rot = { x = 0, y = 95.778801, z = 0 }
ac.manny_drift_up = function(arg1) -- line 43
    local local1, local2
    local2 = 0.0099999998
    local1 = manny:getpos()
    while local1.z < ac.drift_pos.z do
        local1 = manny:getpos()
        local1.z = local1.z + local2
        manny:setpos(local1.x, local1.y, local1.z)
        break_here()
    end
end
ac.manny_bob = function(arg1) -- line 56
    local local1, local2
    local1 = 45
    while TRUE do
        local2 = manny:getpos()
        local2.z = local2.z + sin(local1) / 100
        local1 = local1 + 5
        if local1 > 360 then
            local1 = local1 - 360
        end
        manny:setpos(local2.x, local2.y, local2.z)
        break_here()
    end
end
not_close = function(arg1, arg2, arg3) -- line 72
    if not arg3 then
        arg3 = 0.01
    end
    if abs(arg1 - arg2) > abs(arg3) then
        return TRUE
    else
        return FALSE
    end
end
ac.manny_move_to_drift_point = function(arg1) -- line 84
    local local1, local2, local3
    local local4, local5
    local local6, local7, local8
    local local9, local10
    local9 = 0.44999999
    manny:set_turn_rate(10)
    local10 = { x = 8.5172396, y = -2.9839599, z = -0.40000001 }
    local1 = GetActorYawToPoint(manny.hActor, local10)
    manny:setrot(0, local1, 0, TRUE)
    while find_script(ac.manny_drift_up) do
        WalkActorForward(manny.hActor)
        if local9 < 0.5 then
            local9 = local9 + 0.0099999998
            manny:set_walk_rate(local9)
        end
        break_here()
    end
    start_script(ac.manny_bob, ac)
    local1 = GetActorYawToPoint(manny.hActor, ac.drift_pos)
    while local1 < 0 do
        local1 = local1 + 360
    end
    while local1 > 360 do
        local1 = local1 - 360
    end
    local4 = manny:get_positive_rot()
    local4 = local4.y
    local5 = (local1 - local4) / 100
    while proximity(manny.hActor, ac.drift_pos.x, ac.drift_pos.y, ac.drift_pos.z) > local9 * 3 do
        WalkActorForward(manny.hActor)
        if local9 < 0.5 then
            local9 = local9 + 0.0099999998
            manny:set_walk_rate(local9)
        end
        if local5 < 0 and local4 > local1 or (local5 > 0 and local4 < local1) then
            local4 = local4 + local5
            manny:setrot(0, local4, 0)
        end
        break_here()
        manny:head_look_at_point(ac.drift_pos.x, ac.drift_pos.y, ac.drift_pos.z)
    end
    manny:set_chore_looping(mn_conveyor_loop_current, FALSE, "mn_conveyor.cos")
    FadeOutChore(manny.hActor, "mn_conveyor.cos", mn_conveyor_loop_current, 3000)
    local2 = 0
    while local2 < 2000 do
        WalkActorForward(manny.hActor)
        if local5 < 0 and local4 > local1 or (local5 > 0 and local4 < local1) then
            local4 = local4 + local5
            manny:setrot(0, local4, 0)
        end
        break_here()
        manny:head_look_at_point(ac.drift_pos.x, ac.drift_pos.y, ac.drift_pos.z)
        local2 = local2 + system.frameTime
    end
    FadeInChore(manny.hActor, "mn_conveyor.cos", mn_conveyor_drift, 3000)
    local4 = local1
    manny:setrot(0, local4, 0)
    stop_script(ac.manny_bob)
    local3 = manny:getpos()
    local6 = (ac.drift_pos.x - local3.x) / 80
    local7 = (ac.drift_pos.y - local3.y) / 80
    local8 = (ac.drift_pos.z - local3.z) / 80
    local4 = manny:get_positive_rot()
    local4 = local4.y
    local5 = (ac.drift_rot.y - local4) / 80
    while local2 < 1500 do
        if not_close(local3.x, ac.drift_pos.x) then
            local3.x = local3.x + local6
        end
        if not_close(local3.y, ac.drift_pos.y) then
            local3.y = local3.y + local7
        end
        if not_close(local3.z, ac.drift_pos.z) then
            local3.z = local3.z + local8
        end
        if local5 < 0 and local4 > ac.drift_rot.y or (local5 > 0 and local4 < ac.drift_rot.y) then
            local4 = local4 + local5
            manny:setrot(0, local4, 0)
        end
        manny:setpos(local3.x, local3.y, local3.z)
        break_here()
        manny:head_look_at_point(ac.drift_pos.x, ac.drift_pos.y, ac.drift_pos.z)
        local2 = local2 + system.frameTime
        if local2 >= 2000 then
            manny:stop_chore(mn_conveyor_loop_current, "mn_conveyor.cos")
        end
    end
    manny:stop_chore(mn_conveyor_loop_current, "mn_conveyor.cos")
    while not_close(local3.x, ac.drift_pos.x) or not_close(local3.y, ac.drift_pos.y) or not_close(local3.z, ac.drift_pos.z) or (local5 < 0 and local4 > ac.drift_rot.y) or (local5 > 0 and local4 < ac.drift_rot.y) do
        if not_close(local3.x, ac.drift_pos.x) then
            local3.x = local3.x + local6
        end
        if not_close(local3.y, ac.drift_pos.y) then
            local3.y = local3.y + local7
        end
        if not_close(local3.z, ac.drift_pos.z) then
            local3.z = local3.z + local8
        end
        if local5 < 0 and local4 > ac.drift_rot.y or (local5 > 0 and local4 < ac.drift_rot.y) then
            local4 = local4 + local5
            manny:setrot(0, local4, 0)
        end
        manny:setpos(local3.x, local3.y, local3.z)
        manny:head_look_at_point(ac.drift_pos.x, ac.drift_pos.y, ac.drift_pos.z)
        break_here()
    end
    fade_sfx("current.IMU", 2000, 0)
    ac.at_belt_end = FALSE
    manny:setrot(ac.drift_rot.x, ac.drift_rot.y, ac.drift_rot.z, TRUE)
    manny:setpos(ac.drift_pos.x, ac.drift_pos.y, ac.drift_pos.z)
    manny:head_look_at(nil)
end
drift_button_handler = function(arg1, arg2, arg3) -- line 216
    local local1
    local1 = GetControlState(LCONTROLKEY) or GetControlState(RCONTROLKEY)
    if cutSceneLevel <= 0 then
        if control_map.INVENTORY[arg1] and arg2 then
            system.default_response("not now")
        elseif control_map.MOVE_FORWARD[arg1] and arg2 then
            single_start_script(ac.crawl_forward, ac)
        elseif control_map.MOVE_BACKWARD[arg1] and arg2 then
            single_start_script(ac.crawl_backward, ac)
        elseif control_map.LOOK_AT[arg1] and arg2 and not local1 then
            if hot_object then
                start_script(Sentence, "lookAt", hot_object)
            else
                PrintDebug("No hot object!\n")
            end
        else
            CommonButtonHandler(arg1, arg2, arg3)
        end
    else
        CommonButtonHandler(arg1, arg2, arg3)
    end
end
ac.crawl_forward = function(arg1) -- line 242
    stop_script(ac.crawl_backward)
    stop_script(ac.stop_crawl)
    manny:set_walk_rate(0.3)
    manny:stop_chore(mn_conveyor_drift, "mn_conveyor.cos")
    manny:stop_chore(mn_conveyor_crawl, "mn_conveyor.cos")
    manny:play_chore_looping(mn_conveyor_crawl, "mn_conveyor.cos")
    while get_generic_control_state("MOVE_FORWARD") do
        manny:set_walk_chore(-1)
        WalkActorForward(manny.hActor)
        break_here()
        if ac.at_belt_end and not manny:find_sector_name("ac_gh_box") then
            ac.at_belt_end = FALSE
        end
        if conveyor_hand == 1 then
            start_sfx("mn_crwl1.WAV", IM_LOW_PRIORITY, 50)
        elseif conveyor_hand == 2 then
            start_sfx("mn_crwl2.WAV", IM_LOW_PRIORITY, 50)
        end
        conveyor_hand = 0
    end
    start_script(ac.stop_crawl, ac)
end
ac.crawl_backward = function(arg1) -- line 269
    stop_script(ac.crawl_forward)
    stop_script(ac.stop_crawl)
    if not ac.at_belt_end then
        manny:set_walk_rate(-0.3)
        manny:stop_chore(mn_conveyor_drift, "mn_conveyor.cos")
        manny:stop_chore(mn_conveyor_crawl, "mn_conveyor.cos")
        manny:play_chore_looping(mn_conveyor_crawl, "mn_conveyor.cos")
        while get_generic_control_state("MOVE_BACKWARD") and not ac.at_belt_end do
            manny:set_walk_chore(-1)
            WalkActorForward(manny.hActor)
            break_here()
            if conveyor_hand == 1 then
                start_sfx("mn_crwl1.WAV", IM_LOW_PRIORITY, 50)
            elseif conveyor_hand == 2 then
                start_sfx("mn_crwl2.WAV", IM_LOW_PRIORITY, 50)
            end
            conveyor_hand = 0
        end
        start_script(ac.stop_crawl, ac)
    end
end
ac.stop_crawl = function(arg1) -- line 293
    manny:play_chore_looping(mn_conveyor_drift, "mn_conveyor.cos")
    manny:set_chore_looping(mn_conveyor_crawl, FALSE, "mn_conveyor.cos")
    FadeOutChore(manny.hActor, "mn_conveyor.cos", mn_conveyor_crawl, 250)
    sleep_for(250)
    manny:stop_chore(mn_conveyor_crawl, "mn_conveyor.cos")
end
ac.stop_drifting = function(arg1) -- line 301
    if ac.drifting then
        if ac.prev_button_handler ~= nil and ac.prev_button_handler ~= drift_button_handler then
            system.buttonHandler = ac.prev_button_handler
        else
            system.buttonHandler = SampleButtonHandler
        end
        manny:stop_chore(mn_conveyor_drift, "mn_conveyor.cos")
        manny:stop_chore(mn_conveyor_crawl, "mn_conveyor.cos")
        manny:pop_costume()
        manny:set_walk_chore(ms_walk)
        manny:set_walk_rate(0.4)
        manny:set_turn_chores(ms_swivel_lf, ms_swivel_rt)
        manny:set_rest_chore(ms_rest)
        manny:set_turn_rate(85)
        manny:follow_boxes()
        ac.drifting = FALSE
        inventory_disabled = FALSE
    end
end
ac.walk_too_far = function() -- line 330
    if not ac.tried_walking then
        ac.tried_walking = TRUE
        START_CUT_SCENE()
        ac:switch_to_set()
        manny:put_in_set(ac)
        manny:setpos(2.06181, -4.08239, -0.4)
        manny:setrot(0, 300.824, 0)
        manny:walkto(3.10194, -3.82774, -0.4)
        manny:wait_for_actor()
        manny:say_line("/cwma013/")
        manny:wait_for_message()
        END_CUT_SCENE()
    end
end
ac.set_up_actors = function(arg1) -- line 347
    if ac.chain_state ~= "gone" then
        if ac.chain_actor == nil then
            ac.chain_actor = Actor:create(nil, nil, nil, "Chain object state")
        end
        ac.chain_actor:set_costume("ac_chain.cos")
        ac.chain_actor:put_in_set(ac)
        ac.chain_actor:set_visibility(TRUE)
    elseif ac.chain_actor ~= nil then
        ac.chain_actor:complete_chore(ac_chain_gone)
    end
    if ac.chain_state == "here" then
        ac:add_object_state(0, "ac_1_ch.bm", "ac_1_ch.zbm", OBJSTATE_STATE)
        ac:add_object_state(0, "ac_2_ch.bm", "ac_2_ch.zbm", OBJSTATE_STATE)
        ac.chain_actor:complete_chore(ac_chain_here)
    elseif ac.chain_state == "bunched" then
        ac:add_object_state(0, "ac_1_bu.bm", "ac_1_bu.zbm", OBJSTATE_STATE)
        ac:add_object_state(0, "ac_2_bu.bm", "ac_2_bu.zbm", OBJSTATE_STATE)
        ac:add_object_state(0, "ac_3_bu.bm", "ac_3_bu.zbm", OBJSTATE_STATE)
        ac.chain_actor:complete_chore(ac_chain_bunched)
    elseif ac.chain_state == "wrapped" then
        ac:add_object_state(0, "ac_1_ha.bm", "ac_1_ha.zbm", OBJSTATE_STATE)
        ac:add_object_state(0, "ac_2_ha.bm", "ac_2_ha.zbm", OBJSTATE_STATE)
        ac:add_object_state(0, "ac_3_ha.bm", "ac_3_ha.zbm", OBJSTATE_STATE)
        ac.chain_actor:complete_chore(ac_chain_wrapped)
    end
    if raised_lamancha then
        ac:add_object_state(0, "ac_noanchor.bm", nil, OBJSTATE_UNDERLAY)
        ac.anchor:set_object_state("ac_anchor.cos")
        ac.anchor:complete_chore(0)
    end
    ac.belt_actor:default()
end
ac.enter = function(arg1) -- line 387
    ac:set_up_actors()
    start_sfx("cy_cvgo.IMU", IM_MED_PRIORITY, 100)
    ac:add_ambient_sfx(underwater_ambience_list, underwater_ambience_parm_list)
    if ac.chain_state ~= "gone" then
        start_sfx("chnUndw.imu", IM_MED_PRIORITY, ac.chain_vol)
    end
end
ac.exit = function(arg1) -- line 398
    ac.belt_actor:free()
    ac:stop_drifting()
    if ac.chain_actor then
        ac.chain_actor:free()
    end
    stop_sound("cy_cvgo.IMU")
    stop_sound("bubvox.imu")
    stop_sound("chnUndw.imu")
end
ac.cy_door = Object:create(ac, "door", 4.5749998, -3.2750001, 0.40000001, { range = 0.60000002 })
ac.cy_door.use_pnt_x = 4.5749998
ac.cy_door.use_pnt_y = -3.2750001
ac.cy_door.use_pnt_z = 0.40000001
ac.cy_door.use_rot_x = 0
ac.cy_door.use_rot_y = 88.706398
ac.cy_door.use_rot_z = 0
ac.cy_door.out_pnt_x = 4.5749998
ac.cy_door.out_pnt_y = -3.2750001
ac.cy_door.out_pnt_z = 0.40000001
ac.cy_door.out_rot_x = 0
ac.cy_door.out_rot_y = 88.706398
ac.cy_door.out_rot_z = 0
ac.cy_box = ac.cy_door
ac.cy_door.walkOut = function(arg1) -- line 436
    START_CUT_SCENE()
    cy:switch_to_set()
    manny:put_in_set(cy)
    ac:stop_drifting()
    inventory_disabled = TRUE
    manny:setpos(cy.conveyor_exit.use_pnt_x, cy.conveyor_exit.use_pnt_y, cy.conveyor_exit.use_pnt_z)
    manny:setrot(cy.conveyor_exit.use_rot_x, cy.conveyor_exit.use_rot_y + 180, cy.conveyor_exit.use_rot_z)
    END_CUT_SCENE()
end
ac.anchor = Object:create(ac, "/actx001/anchor", 9.2937899, -1.47218, -0.12, { range = 1.5 })
ac.anchor.use_pnt_x = 9.14363
ac.anchor.use_pnt_y = -1.70524
ac.anchor.use_pnt_z = -0.40000001
ac.anchor.use_rot_x = 0
ac.anchor.use_rot_y = 1052.99
ac.anchor.use_rot_z = 0
ac.anchor.lookAt = function(arg1) -- line 456
    manny:say_line("/acma002/")
end
ac.anchor.pickUp = function(arg1) -- line 460
    manny:say_line("/acma003/")
end
ac.anchor.use_scythe = function(arg1) -- line 464
    manny:say_line("/acma004/")
end
ac.anchor.use_stockings = function(arg1) -- line 468
    manny:say_line("/acma005/")
end
ac.anchor.use_chisel = function(arg1) -- line 472
    manny:say_line("/acma006/")
end
ac.anchor.use = function(arg1) -- line 476
    ac.gh_door:walkOut()
end
ac.gh_door = Object:create(ac, "/actx007/anchor", 9.2937899, -1.47218, -0.12, { range = 0 })
ac.gh_door.use_pnt_x = 9.14363
ac.gh_door.use_pnt_y = -1.70524
ac.gh_door.use_pnt_z = -0.40000001
ac.gh_door.use_rot_x = 0
ac.gh_door.use_rot_y = 1052.99
ac.gh_door.use_rot_z = 0
ac.gh_door.out_pnt_x = 9.4553699
ac.gh_door.out_pnt_y = -1.43809
ac.gh_door.out_pnt_z = -0.40000001
ac.gh_door.out_rot_x = 0
ac.gh_door.out_rot_y = 999.01898
ac.gh_door.out_rot_z = 0
ac.ac_gh_box = ac.gh_door
ac.gh_door:make_untouchable()
ac.gh_door.walkOut = function(arg1) -- line 500
    if not raised_lamancha then
        START_CUT_SCENE()
        IrisDown(320, 240, 1000)
        sleep_for(1000)
        ac.belt_actor:free()
        fade_sfx("cy_cvgo.IMU", 200)
        fade_sfx("chnUndw.imu", 200)
        ImSetState(STATE_NULL)
        stop_sound("cy_cvgo.IMU", 200)
        stop_sound("chnUndw.imu", 200)
        sleep_for(200)
        if not gh.been_there then
            start_script(cut_scene.lamancha, cut_scene)
        else
            gh:come_out_door(gh.ac_door)
            IrisUp(609, 314, 1000)
        end
        END_CUT_SCENE()
    else
        ac.at_belt_end = TRUE
    end
end
ac.drift_trigger = { name = "drift trigger" }
ac.drift_trigger.walkOut = function(arg1) -- line 528
    START_CUT_SCENE()
    manny:clear_hands()
    manny:set_walk_chore(-1)
    manny:set_turn_chores(-1, -1)
    manny:set_rest_chore(-1)
    manny:push_costume("mn_conveyor.cos")
    manny:say_line("/voma007/")
    manny:play_chore(mn_conveyor_start_current, "mn_conveyor.cos")
    manny:ignore_boxes()
    start_sfx("current.IMU")
    start_script(ac.manny_drift_up, ac)
    start_script(ac.manny_move_to_drift_point, ac)
    manny:wait_for_chore(mn_conveyor_start_current, "mn_conveyor.cos")
    manny:play_chore_looping(mn_conveyor_loop_current, "mn_conveyor.cos")
    wait_for_script(ac.manny_move_to_drift_point)
    ac.prev_button_handler = system.buttonHandler
    system.buttonHandler = drift_button_handler
    inventory_disabled = TRUE
    ac.drifting = TRUE
    END_CUT_SCENE()
end
ac.mn_door = Object:create(ac, "path", 0, 0, 0, { range = 0 })
ac.mn_door.use_pnt_x = 1.8935
ac.mn_door.use_pnt_y = -4.2574601
ac.mn_door.use_pnt_z = -0.40000001
ac.mn_door.use_rot_x = 0
ac.mn_door.use_rot_y = 110.836
ac.mn_door.use_rot_z = 0
ac.mn_door.out_pnt_x = -2.4612501
ac.mn_door.out_pnt_y = -5.1782598
ac.mn_door.out_pnt_z = -0.40000001
ac.mn_door.out_rot_x = 0
ac.mn_door.out_rot_y = 97.321503
ac.mn_door.out_rot_z = 0
ac.mn_door.touchable = FALSE
ac.mn_box = ac.mn_door
ac.mn_door.walkOut = function(arg1) -- line 570
    mn:come_out_door(mn.ac_door)
end
action_inv_empty_hand_in = 0
action_inv_empty_hand_out = 1
action_inv_bone_in = 2
action_inv_bone_out = 3
action_inv_extinguisher_in = 4
action_inv_extinguisher_out = 5
action_inv_logbook_in = 6
action_inv_logbook_out = 7
action_inv_scythe_in = 8
action_inv_scythe_out = 9
action_inv_photo_in = 10
action_inv_photo_out = 11
action_inv_key_in = 12
action_inv_key_out = 13
action_manny_gestures_head_tilt = 0
action_manny_gestures_head_nod = 1
action_manny_gestures_head_twist = 2
action_manny_gestures_shrug = 3
action_manny_gestures_hand_gesture = 4
action_manny_gestures_pointing = 5
action_manny_gestures_head_forward = 6
action_scythe_takeout_scythe = 0
action_scythe_putaway_scythe = 1
action_scythe_putaway_scythe_get = 2
action_wait_idles_scratch = 0
action_wait_idles_smoke1 = 1
action_wait_idles_smoke_hold = 2
action_wait_idles_smoke_loop = 3
action_wait_idles_smoke_flick = 4
action_wait_idles_smoke_no_flick = 5
action_wait_idles_smoke_stomp = 6
CheckFirstTime("_actors1.lua")
ledge_rope = Actor:create(nil, nil, nil, "Rope")
ledge_rope.default = function(arg1) -- line 15
    ledge_rope:ignore_boxes()
    ledge_rope:set_costume("ledge_rope.cos")
end
tie_rope = Actor:create(nil, nil, nil, "Rope")
tie_rope.default = function(arg1) -- line 21
    tie_rope:ignore_boxes()
    tie_rope:set_costume("rope_climb.cos")
end
CheckFirstTime("_actors2.lua")
dofile("ra_walks.lua")
aitor = Actor:create(nil, nil, nil, "Aitor")
aitor.default = function(arg1) -- line 17
    aitor:set_talk_color(Yellow)
    aitor:set_costume(nil)
    aitor:set_costume("aitor_idles.cos")
    aitor:push_costume("aitor_cask.cos")
    aitor:ignore_boxes()
end
alexi = Actor:create(nil, nil, nil, "Alexi")
alexi:set_talk_color(MakeColor(240, 183, 144))
beat_waiter = Actor:create(nil, nil, nil, "Beatnik waiter")
beat_waiter:set_talk_color(Green)
beat_waiter.default = function(arg1) -- line 30
    if beat_waiter.frozen then
        beat_waiter:thaw(TRUE)
    end
    beat_waiter:stop_chore()
    beat_waiter:set_costume(nil)
    beat_waiter:set_costume("waiter.cos")
    beat_waiter:set_mumble_chore(waiter_mumble, "waiter.cos")
    beat_waiter:set_talk_chore(1, waiter_stop_talk)
    beat_waiter:set_talk_chore(2, waiter_a)
    beat_waiter:set_talk_chore(3, waiter_c)
    beat_waiter:set_talk_chore(4, waiter_e)
    beat_waiter:set_talk_chore(5, waiter_f)
    beat_waiter:set_talk_chore(6, waiter_l)
    beat_waiter:set_talk_chore(7, waiter_m)
    beat_waiter:set_talk_chore(8, waiter_o)
    beat_waiter:set_talk_chore(9, waiter_t)
    beat_waiter:set_talk_chore(10, waiter_u)
    beat_waiter:shut_up()
    beat_waiter:push_costume("waiter_idles.cos")
    beat_waiter:set_head(3, 4, 4, 165, 28, 80)
    beat_waiter:head_look_at(nil)
    beat_waiter:set_look_rate(140)
    beat_waiter:follow_boxes()
    beat_waiter:set_walk_chore(waiter_idles_walk_cycle, "waiter_idles.cos")
    beat_waiter:set_walk_rate(0.4)
    beat_waiter:set_turn_chores(waiter_idles_swivel_left, waiter_idles_swivel_right)
end
bogen = Actor:create(nil, nil, nil, "Bogen")
bogen:set_talk_color(Blue)
carla = Actor:create(nil, nil, nil, "Carla")
carla:set_talk_color(Blue)
charlie = Actor:create(nil, nil, nil, "Charlie")
charlie:set_talk_color(Cyan)
croupier = Actor:create(nil, nil, nil, "Croupier")
croupier:set_talk_color(Green)
gunnar = Actor:create(nil, nil, nil, "Gunnar")
gunnar:set_talk_color(MakeColor(159, 183, 224))
lupe = Actor:create(nil, nil, nil, "Lupe")
lupe.default = function(arg1) -- line 75
    lupe:set_talk_color(Magenta)
    lupe:ignore_boxes()
end
maximino = Actor:create(nil, nil, nil, "Maximino")
maximino:set_talk_color(Red)
membrillo = Actor:create(nil, nil, nil, "Membrillo")
membrillo:set_talk_color(Cyan)
membrillo.default = function(arg1) -- line 86
    membrillo:set_colormap("glottis.cmp")
end
naranja = Actor:create(nil, nil, nil, "Naranja")
naranja:set_talk_color(Green)
naranja.default = function(arg1) -- line 92
    naranja:set_colormap("naranja.cmp")
end
raoul = Actor:create(nil, nil, nil, "Raoul")
raoul.default = function(arg1, arg2) -- line 97
    raoul:set_costume(nil)
    raoul:set_talk_color(Red)
    raoul:set_colormap("raoul.cmp")
    if arg2 then
        raoul.costume_state = arg2
    else
        raoul.costume_state = "walks"
    end
    if raoul.costume_state == "bored" then
        raoul:set_costume("raoul_bored.cos")
        raoul:set_mumble_chore(raoul_bored_mumble)
        raoul:set_talk_chore(1, raoul_bored_no_talk)
        raoul:set_talk_chore(2, raoul_bored_a)
        raoul:set_talk_chore(3, raoul_bored_c)
        raoul:set_talk_chore(4, raoul_bored_e)
        raoul:set_talk_chore(5, raoul_bored_f)
        raoul:set_talk_chore(6, raoul_bored_l)
        raoul:set_talk_chore(7, raoul_bored_m)
        raoul:set_talk_chore(8, raoul_bored_o)
        raoul:set_talk_chore(9, raoul_bored_t)
        raoul:set_talk_chore(10, raoul_bored_u)
        raoul:ignore_boxes()
    elseif raoul.costume_state == "yelling" then
        raoul:set_costume("raoul_yelling.cos")
        raoul:set_mumble_chore(raoul_yelling_mumble)
        raoul:set_talk_chore(1, raoul_yelling_no_talk)
        raoul:set_talk_chore(2, raoul_yelling_a)
        raoul:set_talk_chore(3, raoul_yelling_c)
        raoul:set_talk_chore(4, raoul_yelling_e)
        raoul:set_talk_chore(5, raoul_yelling_f)
        raoul:set_talk_chore(6, raoul_yelling_l)
        raoul:set_talk_chore(7, raoul_yelling_m)
        raoul:set_talk_chore(8, raoul_yelling_o)
        raoul:set_talk_chore(9, raoul_yelling_t)
        raoul:set_talk_chore(10, raoul_yelling_u)
        raoul:ignore_boxes()
    elseif raoul.costume_state == "walks" then
        raoul:set_costume("ra_walks.cos")
        raoul:set_walk_chore(ra_walks_walk_loop1)
        raoul:set_rest_chore(ra_walks_idle)
        raoul:set_mumble_chore(ra_walks_mumble)
        raoul:set_talk_chore(1, ra_walks_no_talk)
        raoul:set_talk_chore(2, ra_walks_a)
        raoul:set_talk_chore(3, ra_walks_c)
        raoul:set_talk_chore(4, ra_walks_e)
        raoul:set_talk_chore(5, ra_walks_f)
        raoul:set_talk_chore(6, ra_walks_l)
        raoul:set_talk_chore(7, ra_walks_m)
        raoul:set_talk_chore(8, ra_walks_o)
        raoul:set_talk_chore(9, ra_walks_t)
        raoul:set_talk_chore(10, ra_walks_u)
        raoul:follow_boxes()
    end
    raoul:set_visibility(TRUE)
end
slisko = Actor:create(nil, nil, nil, "Slisko")
slisko:set_talk_color(MakeColor(240, 240, 259))
virago = Actor:create(nil, nil, nil, "Virago")
virago:set_talk_color(Green)
CheckFirstTime("_actors3.lua")
bibi = Actor:create(nil, nil, nil, "Bibi")
bibi:set_talk_color(Blue)
large_hit_man = Actor:create(nil, nil, nil, "Large Hit Man")
large_hit_man:set_talk_color(Blue)
pugsy = Actor:create(nil, nil, nil, "Pugsy")
pugsy:set_talk_color(Red)
skinny_hit_man = Actor:create(nil, nil, nil, "Skinny Hit Man")
skinny_hit_man:set_talk_color(Red)
CheckFirstTime("_actors4.lua")
dofile("mechanic_idles.lua")
dofile("thunderboy1_idles.lua")
bowlsley = Actor:create(nil, nil, nil, "Bowlsley")
bowlsley:set_talk_color(Green)
gate_keeper = Actor:create(nil, nil, nil, "Gate Keeper")
gate_keeper:set_talk_color(Yellow)
hector = Actor:create(nil, nil, nil, "Hector")
hector:set_talk_color(Yellow)
makeup_woman = Actor:create(nil, nil, nil, "Makeup Woman")
makeup_woman:set_talk_color(Magenta)
mayan_mechanic = { parent = Actor }
mayan_mechanic.create = function(arg1, arg2, arg3) -- line 30
    local local1
    local1 = Actor:create(nil, nil, nil, arg2)
    local1.parent = arg1
    local1.talk_color = arg3
    return local1
end
mayan_mechanic.default = function(arg1) -- line 39
    arg1:set_costume(nil)
    arg1:set_costume("mechanic_idles.cos")
    arg1:set_talk_color(arg1.talk_color)
    arg1:set_mumble_chore(mechanic_idles_mumble)
    arg1:set_talk_chore(1, mechanic_idles_stop_talk)
    arg1:set_talk_chore(2, mechanic_idles_a)
    arg1:set_talk_chore(3, mechanic_idles_c)
    arg1:set_talk_chore(4, mechanic_idles_e)
    arg1:set_talk_chore(5, mechanic_idles_f)
    arg1:set_talk_chore(6, mechanic_idles_l)
    arg1:set_talk_chore(7, mechanic_idles_m)
    arg1:set_talk_chore(8, mechanic_idles_o)
    arg1:set_talk_chore(9, mechanic_idles_t)
    arg1:set_talk_chore(10, mechanic_idles_u)
end
mechanic1 = mayan_mechanic:create("/sytx089/", Yellow)
mechanic2 = mayan_mechanic:create("/sytx090/", Green)
mechanic3 = mayan_mechanic:create("/sytx090/", LightBlue)
thunder_boy_1 = Actor:create(nil, nil, nil, "Thunder Boy")
thunder_boy_1.default = function(arg1) -- line 63
    arg1:set_costume(nil)
    arg1:set_costume("thunderboy1_idles.cos")
    arg1:set_mumble_chore(thunderboy1_idles_mumble)
    arg1:set_talk_chore(1, thunderboy1_idles_stop_talk)
    arg1:set_talk_chore(2, thunderboy1_idles_a)
    arg1:set_talk_chore(3, thunderboy1_idles_c)
    arg1:set_talk_chore(4, thunderboy1_idles_e)
    arg1:set_talk_chore(5, thunderboy1_idles_f)
    arg1:set_talk_chore(6, thunderboy1_idles_l)
    arg1:set_talk_chore(7, thunderboy1_idles_m)
    arg1:set_talk_chore(8, thunderboy1_idles_o)
    arg1:set_talk_chore(9, thunderboy1_idles_t)
    arg1:set_talk_chore(10, thunderboy1_idles_u)
    arg1:push_costume("thb1_coffee.cos")
    arg1:set_talk_color(Green)
end
thunder_boy_2 = Actor:create(nil, nil, nil, "Thunder Boy")
thunder_boy_2.default = function(arg1) -- line 82
    arg1:set_costume(nil)
    arg1:set_costume("thunderboy2_idles.cos")
    arg1:set_mumble_chore(thunderboy2_idles_mumble)
    arg1:set_talk_chore(1, thunderboy2_idles_stop_talk)
    arg1:set_talk_chore(2, thunderboy2_idles_a)
    arg1:set_talk_chore(3, thunderboy2_idles_c)
    arg1:set_talk_chore(4, thunderboy2_idles_e)
    arg1:set_talk_chore(5, thunderboy2_idles_f)
    arg1:set_talk_chore(6, thunderboy2_idles_l)
    arg1:set_talk_chore(7, thunderboy2_idles_m)
    arg1:set_talk_chore(8, thunderboy2_idles_o)
    arg1:set_talk_chore(9, thunderboy2_idles_t)
    arg1:set_talk_chore(10, thunderboy2_idles_u)
    arg1:push_costume("thb2_coffee.cos")
    arg1:set_talk_color(Red)
end
unicycle_man = Actor:create(nil, nil, nil, "/sytx199/")
unicycle_man.default = function(arg1) -- line 101
    arg1:set_costume(nil)
    arg1:set_costume("unicycle_man.cos")
    arg1:set_talk_color(Green)
    arg1:set_mumble_chore(unicycle_man_mumble)
    arg1:set_talk_chore(1, unicycle_man_no_talk)
    arg1:set_talk_chore(2, unicycle_man_a)
    arg1:set_talk_chore(3, unicycle_man_c)
    arg1:set_talk_chore(4, unicycle_man_e)
    arg1:set_talk_chore(5, unicycle_man_f)
    arg1:set_talk_chore(6, unicycle_man_l)
    arg1:set_talk_chore(7, unicycle_man_m)
    arg1:set_talk_chore(8, unicycle_man_o)
    arg1:set_talk_chore(9, unicycle_man_t)
    arg1:set_talk_chore(10, unicycle_man_u)
end
CheckFirstTime("_actors.lua")
system.actorCount = 0
system.actorTable = { }
system.actorTemplate = { name = "<unnamed>", hActor = nil }
Actor = system.actorTemplate
Actor.is_holding = nil
Actor.is_talking = nil
Actor.walk_chore = nil
Actor.default_look_rate = 200
Actor.last_chore = nil
Actor.last_play_chore = nil
CHORE_LOOP = TRUE
CHORE_NOLOOP = FALSE
MODE_BACKGROUND = TRUE
MODE_NORMAL = FALSE
Actor.hold_chore = nil
Actor.MARKER_LEFT_WALK = 10
Actor.MARKER_RIGHT_WALK = 15
Actor.MARKER_LEFT_RUN = 20
Actor.MARKER_RIGHT_RUN = 25
Actor.MARKER_LEFT_TURN = 30
Actor.MARKER_RIGHT_TURN = 35
Actor.idles_allowed = TRUE
Actor.last_chore_played = nil
Actor.last_cos_played = nil
Actor.base_costume = nil
Actor.create = function(arg1, arg2, arg3, arg4, arg5) -- line 73
    local local1 = { }
    local1.parent = arg1
    if arg5 then
        local1.name = arg5
    else
        local1.name = arg2
    end
    local1.hActor = LoadActor(arg5)
    local1.footsteps = nil
    local1.saylineTable = { }
    system.actorTable[local1.name] = local1
    system.actorCount = system.actorCount + 1
    system.actorTable[local1.hActor] = local1
    arg1.create_dialogStack(local1)
    return local1
end
Actor.getpos = function(arg1) -- line 103
    local local1 = { }
    local1.x, local1.y, local1.z = GetActorPos(arg1.hActor)
    return local1
end
Actor.getrot = function(arg1) -- line 115
    local local1 = { }
    local1.x, local1.y, local1.z = GetActorRot(arg1.hActor)
    return local1
end
Actor.get_positive_rot = function(arg1) -- line 126
    local local1 = { }
    local1.x, local1.y, local1.z = GetActorRot(arg1.hActor)
    while local1.y < 0 do
        local1.y = local1.y + 360
    end
    while local1.y > 360 do
        local1.y = local1.y - 360
    end
    while local1.x < 0 do
        local1.x = local1.x + 360
    end
    while local1.x > 360 do
        local1.x = local1.z - 360
    end
    while local1.z < 0 do
        local1.z = local1.z + 360
    end
    while local1.z > 360 do
        local1.z = local1.z - 360
    end
    return local1
end
Actor.get_positive_yaw_to_point = function(arg1, arg2) -- line 160
    local local1 = GetActorYawToPoint(arg1.hActor, { x = arg2.x, y = arg2.y, z = arg2.z })
    while local1 < 0 do
        local1 = local1 + 360
    end
    while local1 > 360 do
        local1 = local1 - 360
    end
    return local1
end
Actor.setpos = function(arg1, arg2, arg3, arg4) -- line 179
    if type(arg2) == "table" then
        arg1:moveto(arg2.x, arg2.y, arg2.z)
    else
        arg1:moveto(arg2, arg3, arg4)
    end
end
Actor.set_softimage_pos = function(arg1, arg2, arg3, arg4) -- line 191
    if type(arg2) == "table" then
        arg1:moveto(arg2.x / 10, -arg2.z / 10, arg2.y / 10)
    else
        arg1:moveto(arg2 / 10, -arg4 / 10, arg3 / 10)
    end
end
Actor.get_softimage_pos = function(arg1) -- line 204
    local local1 = arg1:getpos()
    local1.y, local1.z = local1.z, -local1.y
    local1.x, local1.y, local1.z = local1.x * 10, local1.y * 10, local1.z * 10
    return local1
end
convert_softimage_pos = function(arg1, arg2, arg3) -- line 218
    local local1 = arg1 / 10
    local local2 = 0 - arg3 / 10
    local local3 = arg2 / 10
    return local1, local2, local3
end
Actor.turn_toward_entity = function(arg1, arg2, arg3, arg4) -- line 232
    if arg3 then
        while TurnActorTo(arg1.hActor, arg2, arg3, arg4) do
            break_here()
        end
    elseif arg2.use_pnt_x ~= nil then
        while TurnActorTo(arg1.hActor, arg2.use_pnt_x, arg2.use_pnt_y, arg2.use_pnt_z) do
            break_here()
        end
    else
        arg2, arg3, arg4 = arg2:getpos()
        while TurnActorTo(arg1.hActor, arg2, arg3, arg4) do
            break_here()
        end
    end
end
Actor.face_entity = function(arg1, arg2, arg3, arg4) -- line 260
    local local1
    local local2
    if type(arg2) == "table" then
        if arg2.interest_actor then
            local1 = arg2.interest_actor:getpos()
        elseif arg2.getpos then
            local1 = arg2:getpos()
        elseif arg2.x then
            local1 = arg2
        else
            PrintDebug("Actor:face_entity() -- invalid argument\n")
        end
    else
        local1 = { }
        local1.x = arg2
        local1.y = arg3
        local1.z = arg4
    end
    if local1 then
        local2 = GetActorYawToPoint(arg1.hActor, local1)
        arg1:setrot(0, local2, 0, TRUE)
    end
end
Actor.set_colormap = function(arg1, arg2) -- line 292
    SetActorColormap(arg1.hActor, arg2)
end
Actor.setrot = function(arg1, arg2, arg3, arg4, arg5) -- line 302
    if type(arg2) == "table" then
        SetActorRot(arg1.hActor, arg2.x, arg2.y, arg2.z, arg3)
    else
        SetActorRot(arg1.hActor, arg2, arg3, arg4, arg5)
    end
end
Actor.walkto = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) -- line 319
    arg1:set_run(FALSE)
    if arg1.set_walk_backwards then
        arg1:set_walk_backwards(FALSE)
    end
    if arg1 == system.currentActor then
        ResetMarioControls()
    end
    if type(arg2) == "table" then
        return arg1:walkto_object(arg2, arg3)
    else
        SetActorConstrain(arg1.hActor, FALSE)
        if arg1 == system.currentActor then
            WalkVector.x = 0
            WalkVector.y = 0
            WalkVector.z = 0
        end
        WalkActorTo(arg1.hActor, arg2, arg3, arg4)
        if arg5 then
            while arg1:is_moving() do
                break_here()
            end
            arg1:setrot(arg5, arg6, arg7, TRUE)
        end
    end
end
Actor.runto = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7) -- line 349
    if arg1.set_walk_backwards then
        arg1:set_walk_backwards(FALSE)
    end
    if arg1 == system.currentActor then
        ResetMarioControls()
    end
    arg1:set_run(TRUE)
    if type(arg2) == "table" then
        arg1:walkto_object(arg2, arg3)
    else
        SetActorConstrain(arg1.hActor, FALSE)
        if arg1 == system.currentActor then
            WalkVector.x = 0
            WalkVector.y = 0
            WalkVector.z = 0
        end
        WalkActorTo(arg1.hActor, arg2, arg3, arg4)
        if arg5 then
            while arg1:is_moving() do
                break_here()
            end
            arg1:setrot(arg5, arg6, arg7, TRUE)
        end
    end
    arg1:wait_for_actor()
    arg1:set_run(FALSE)
end
Actor.walk_and_face = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7) -- line 386
    arg1:walkto(arg2, arg3, arg4)
    while arg1:is_moving() do
        break_here()
    end
    arg1:setrot(arg5, arg6, arg7, TRUE)
    arg1:wait_for_actor()
end
Actor.walk_forward = function(arg1) -- line 400
    WalkActorForward(arg1.hActor)
end
Actor.moveto = function(arg1, arg2, arg3, arg4) -- line 409
    if type(arg2) == "table" then
        PutActorAt(arg1.hActor, arg2.use_pnt_x, arg2.use_pnt_y, arg2.use_pnt_z)
    else
        PutActorAt(arg1.hActor, arg2, arg3, arg4)
    end
end
Actor.scale = function(arg1, arg2) -- line 421
    SetActorScale(arg1.hActor, arg2)
end
Actor.driveto = function(arg1, arg2, arg3, arg4) -- line 429
    DriveActorTo(arg1.hActor, arg2, arg3, arg4)
end
Actor.set_run = function(arg1, arg2) -- line 433
end
Actor.force_auto_run = function(arg1, arg2) -- line 437
end
Actor.walkto_object = function(arg1, arg2, arg3) -- line 445
    local local1, local2, local3, local4, local5, local6, local7
    local local8, local9
    arg1:set_run(FALSE)
    if arg1.set_walk_backwards then
        arg1:set_walk_backwards(FALSE)
    end
    if arg2.parent == Ladder then
        if arg3 then
            local9 = arg2.base.out_pnt_z
            local8 = arg2.top.out_pnt_z
        else
            local9 = arg2.base.use_pnt_z
            local8 = arg2.top.use_pnt_z
        end
        local1 = arg1:getpos()
        if abs(local9 - local1.z) < abs(local8 - local1.z) then
            arg2 = arg2.base
        else
            arg2 = arg2.top
        end
    end
    if arg3 then
        local2 = arg2.out_pnt_x
        local3 = arg2.out_pnt_y
        local4 = arg2.out_pnt_z
        local5 = arg2.out_rot_x
        local6 = arg2.out_rot_y
        local7 = arg2.out_rot_z
    else
        local2 = arg2.use_pnt_x
        local3 = arg2.use_pnt_y
        local4 = arg2.use_pnt_z
        local5 = arg2.use_rot_x
        local6 = arg2.use_rot_y
        local7 = arg2.use_rot_z
    end
    if local2 then
        PrintDebug("Walking " .. arg1.name .. " to " .. arg2.name .. "\t" .. local2 .. "\t" .. local3 .. "\t" .. local4 .. "\n")
        PrintDebug("IndexFB_disabled: " .. tostring(indexFB_disabled) .. "\n")
        if arg1 == system.currentActor then
            stop_movement_scripts()
        end
        SetActorConstrain(arg1.hActor, FALSE)
        arg1:walkto(local2, local3, local4, local5, local6, local7)
        while arg1:is_moving() or arg1:is_turning() do
            break_here()
        end
        if arg1 == system.currentActor and MarioControl then
            WalkVector.x = 0
            WalkVector.y = 0
            WalkVector.z = 0
            single_start_script(WalkManny)
        end
        local1 = object_proximity(arg2, arg3)
        if local1 <= MAX_PROX then
            PrintDebug("made it to the use/out point of " .. arg2.name .. "!\n")
            return TRUE
        else
            PrintDebug("Didn't make it to the use/out point of " .. arg2.name .. "!\n")
            return FALSE
        end
    else
        PrintDebug("Object has no use/out point!\n")
    end
end
Actor.walk_closeto_object = function(arg1, arg2, arg3) -- line 527
    local local1, local2, local3, local4, local5, local6, local7
    local local8 = 0
    arg1:set_run(FALSE)
    if arg1.set_walk_backwards then
        arg1:set_walk_backwards(FALSE)
    end
    local2 = arg2.use_pnt_x
    local3 = arg2.use_pnt_y
    local4 = arg2.use_pnt_z
    local5 = arg2.use_rot_x
    local6 = arg2.use_rot_y
    local7 = arg2.use_rot_z
    if local2 then
        PrintDebug("Walking " .. arg1.name .. " to " .. arg2.name .. "\t" .. local2 .. "\t" .. local3 .. "\t" .. local4 .. " within " .. arg3 .. "\n")
        if arg1 == system.currentActor then
            stop_movement_scripts()
        end
        SetActorConstrain(arg1.hActor, FALSE)
        arg1:walkto(local2, local3, local4, local5, local6, local7)
        while arg1:is_moving() or arg1:is_turning() and local8 < 20000 do
            break_here()
            local8 = local8 + system.frameTime
        end
        if arg1 == system.currentActor and MarioControl then
            WalkVector.x = 0
            WalkVector.y = 0
            WalkVector.z = 0
            single_start_script(WalkManny)
        end
        local1 = proximity(manny.hActor, local2, local3, local4)
        if local1 <= arg3 then
            PrintDebug("made it close to the use point of " .. arg2.name .. "!\n")
            return TRUE
        else
            PrintDebug("Didn't make it to the use point of " .. arg2.name .. ", proximity = " .. local1 .. "!\n")
            return FALSE
        end
    else
        PrintDebug("Object has no use/out point!\n")
    end
end
COLLISION_OFF = 0
COLLISION_BOX = 1
COLLISION_SPHERE = 2
Actor.set_collision_mode = function(arg1, arg2, arg3) -- line 585
    SetActorCollisionMode(arg1.hActor, arg2)
    if arg3 ~= nil and arg2 ~= COLLISION_OFF then
        SetActorCollisionScale(arg1.hActor, arg3)
    end
end
Actor.set_time_scale = function(arg1, arg2) -- line 592
    SetActorTimeScale(arg1.hActor, arg2)
end
Actor.offsetBy = function(arg1, arg2, arg3, arg4) -- line 601
    local local1
    local1 = arg1:getpos()
    if arg2 then
        local1.x = local1.x + arg2
    end
    if arg3 then
        local1.y = local1.y + arg3
    end
    if arg4 then
        local1.z = local1.z + arg4
    end
    arg1:setpos(local1.x, local1.y, local1.z)
end
Actor.turn_right = function(arg1, arg2) -- line 617
    local local1 = arg1:getrot()
    arg1:setrot(local1.x, local1.y - arg2, local1.z, TRUE)
end
Actor.turn_left = function(arg1, arg2) -- line 622
    local local1 = arg1:getrot()
    arg1:setrot(local1.x, local1.y + arg2, local1.z, TRUE)
end
Actor.teleport_out_of_hot_box = function(arg1) -- line 636
    local local1, local2, local3
    local local4 = { }
    local local5, local6
    local1, local2, local3 = arg1:find_sector_type(HOT)
    if local1 then
        if arg1.is_backward then
            local6 = arg1:getrot()
            arg1:setrot(local6.x, local6.y + 180, local6.z)
        end
        local4.x, local4.y, local4.z = GetSectorOppositeEdge(arg1.hActor, local2)
        if local4.x then
            arg1:setpos(local4.x, local4.y, local4.z)
            system.currentSet:force_camerachange()
        end
        if arg1.is_backward then
            arg1:setrot(local6.x, local6.y, local6.z)
        end
    end
end
Actor.play_chore = function(arg1, arg2, arg3) -- line 662
    if arg1:get_costume() and arg2 ~= nil then
        arg1.last_chore_played = arg2
        arg1.last_cos_played = arg3
        PlayActorChore(arg1.hActor, arg2, arg3)
    elseif arg2 == nil then
        PrintDebug("(" .. tostring(arg1.name) .. ")  Actor:play_chore() trying to play nil chore.\n")
    end
end
Actor.fade_in_chore = function(arg1, arg2, arg3, arg4) -- line 678
    FadeInChore(arg1.hActor, arg3, arg2, arg4)
end
Actor.fade_out_chore = function(arg1, arg2, arg3, arg4) -- line 686
    FadeOutChore(arg1.hActor, arg3, arg2, arg4)
end
Actor.blend = function(arg1, arg2, arg3, arg4, arg5, arg6) -- line 695
    if not arg5 then
        arg5 = arg1:get_costume()
    end
    if not arg6 then
        arg6 = arg5
    end
    start_script(arg1.fade_in_chore, arg1, arg2, arg5, arg4)
    if arg3 ~= nil then
        start_script(arg1.fade_out_chore, arg1, arg3, arg6, arg4)
    end
    sleep_for(arg4)
end
Actor.loop_chore_for = function(arg1, arg2, arg3, arg4, arg5) -- line 715
    arg1:play_chore_looping(arg2, arg3)
    sleep_for(rndint(arg4, arg5))
    arg1:set_chore_looping(arg2, FALSE, arg3)
    arg1:wait_for_chore(arg2, arg3)
    arg1:stop_chore(arg2, arg3)
end
Actor.run_chore = function(arg1, arg2, arg3) -- line 727
    arg1:play_chore(arg2, arg3)
    arg1:wait_for_chore(arg2, arg3)
end
Actor.play_chore_looping = function(arg1, arg2, arg3) -- line 736
    if arg1:get_costume() and arg2 ~= nil then
        PlayActorChoreLooping(arg1.hActor, arg2, arg3)
    elseif arg2 == nil then
        PrintDebug("Actor:play_chore_looping() trying to play nil chore.\n")
    end
end
Actor.stop_chore = function(arg1, arg2, arg3) -- line 749
    if arg1:get_costume() then
        StopActorChore(arg1.hActor, arg2, arg3)
    end
end
Actor.stop_looping_chore = function(arg1, arg2, arg3, arg4) -- line 760
    if arg1:is_choring(arg2, FALSE, arg3) then
        arg1:set_chore_looping(arg2, FALSE, arg3)
        arg1:wait_for_chore(arg2, arg3)
        if arg4 then
            arg1:stop_chore(arg2, arg3)
        end
    end
end
Actor.complete_chore = function(arg1, arg2, arg3) -- line 774
    if arg1:get_costume() and arg2 ~= nil then
        CompleteActorChore(arg1.hActor, arg2, arg3)
    end
end
Actor.set_chore_looping = function(arg1, arg2, arg3, arg4) -- line 785
    if arg1:get_costume() then
        SetActorChoreLooping(arg1.hActor, arg2, arg3, arg4)
    end
end
Actor.stamp = function(arg1, arg2, arg3) -- line 799
    if not Is3DHardwareEnabled() then
        if arg2 then
            arg1:complete_chore(arg2, arg3)
            while arg1:is_choring(arg2, FALSE, arg3) do
                break_here()
            end
        end
        ActorToClean(arg1.hActor)
        if arg2 then
            arg1:stop_chore(arg2, arg3)
        end
    end
end
Actor.unstamp = function(arg1) -- line 818
    ForceRefresh()
end
Actor.stamp_test = function(arg1, arg2) -- line 822
    while 1 do
        if arg2 then
            sleep_for(arg2)
        else
            sleep_for(1000)
        end
        ActorToClean(arg1.hActor)
    end
end
Actor.freeze = function(arg1, arg2, arg3, arg4) -- line 843
    local local1 = { }
    if Is3DHardwareEnabled() then
        arg1:complete_chore(arg3, arg4)
        return
    end
    if GetActorCostume(arg1.hActor) then
        if system.currentSet == nil then
            PrintDebug("Actor:freeze() -- no current set!\n")
            return
        end
        if system.currentSet.frozen_actors == nil then
            system.currentSet.frozen_actors = { }
        end
        local1.actor = arg1
        local1.pos = arg1:getpos()
        local1.rot = arg1:getrot()
        local1.preFreezeChore = arg2
        local1.postFreezeChore = arg3
        local1.freezeCostume = arg4
        system.currentSet.frozen_actors[arg1.hActor] = local1
        arg1:stamp(arg2, arg4)
        if arg3 then
            arg1:complete_chore(arg3, arg4)
        else
            arg1:put_in_set(nil)
        end
        arg1.frozen = system.currentSet
    end
end
Actor.refreeze = function(arg1) -- line 883
    local local1
    if arg1.frozen and arg1.frozen == system.currentSet then
        local1 = arg1.frozen.frozen_actors[arg1.hActor]
        if Is3DHardwareEnabled() then
            if local1.postFreezeChore then
                arg1:complete_chore(local1.postFreezeChore, local1.freezeCostume)
            end
        else
            arg1:put_in_set(arg1.frozen)
            arg1:setpos(local1.pos.x, local1.pos.y, local1.pos.z)
            arg1:setrot(local1.rot.x, local1.rot.y, local1.rot.z)
            arg1:stamp(local1.preFreezeChore, local1.freezeCostume)
            if local1.postFreezeChore then
                arg1:complete_chore(local1.postFreezeChore, local1.freezeCostume)
            else
                arg1:put_in_set(nil)
            end
        end
    end
end
Actor.thaw = function(arg1, arg2, arg3) -- line 916
    local local1
    if Is3DHardwareEnabled() and not arg3 then
        return
    end
    if GetActorCostume(arg1.hActor) then
        if not arg1.frozen then
            PrintDebug("Actor:thaw() -- Actor " .. arg1.name .. " isn't frozen!\n")
            return
        end
        arg1:put_in_set(arg1.frozen)
        local1 = arg1.frozen.frozen_actors[arg1.hActor]
        if local1 then
            arg1:setpos(local1.pos.x, local1.pos.y, local1.pos.z)
            arg1:setrot(local1.rot.x, local1.rot.y, local1.rot.z)
        end
        arg1.frozen.frozen_actors[arg1.hActor] = nil
        arg1.frozen = nil
        if arg2 then
            arg1:unstamp()
            system.currentSet:redraw_frozen_actors()
        end
    end
end
Actor.run_idle = function(arg1, arg2, arg3) -- line 950
    local local1 = arg3
    local local2
    local local3 = system.currentSet
    while system.currentSet == local3 and local1 do
        PlayActorChore(arg1.hActor, local1)
        arg1.last_chore = chore
        wait_for_actor(arg1.hActor)
        local2 = pick_from_weighted_table(arg2[local1])
        if local2 then
            local1 = local2
        end
    end
end
Actor.new_run_idle = function(arg1, arg2, arg3, arg4, arg5) -- line 985
    local local1
    local local2
    local local3 = system.currentSet
    local local4
    arg1.stop_idle = FALSE
    arg1.last_play_chore = nil
    if arg3 then
        local4 = arg3
    else
        local4 = arg1.idle_table
    end
    local1 = local4.root_name .. "_" .. arg2
    if arg5 then
        arg1:print_costumes()
        PrintDebug("***\n")
        PrintDebug("Starting new_run_idle() with\n")
        PrintDebug("\ttable.root_name = " .. local4.root_name .. "\n")
        PrintDebug("\tstarting_chore = " .. arg2 .. "\n")
        PrintDebug("\tidle_table = " .. tostring(arg3) .. "\n")
        PrintDebug("\tcos = " .. arg4 .. "\n")
        PrintDebug("\tcurrent_chore = " .. local4.root_name .. "_" .. arg2 .. "\n")
        PrintDebug("***\n")
    end
    while system.currentSet == local3 and local1 and not arg1.stop_idle do
        if arg5 then
            PrintDebug(arg1.name .. " -- current chore:" .. getglobal(local1) .. "\n")
        end
        arg1:play_chore(getglobal(local1), arg4)
        arg1.last_chore = getglobal(local1)
        break_here()
        arg1:wait_for_chore(arg1.last_chore, arg4)
        if not arg1.stop_idle then
            if arg1.last_play_chore then
                if local4[arg1.last_play_chore] then
                    local2 = arg1.last_play_chore
                    arg1.stop_idle = TRUE
                    arg1:play_chore(getglobal(local1), arg4)
                    arg1.last_chore = local1
                    break_here()
                    arg1:wait_for_chore(arg1.last_chore, arg4)
                else
                    repeat
                        local1 = arg1.stop_table[arg1.last_chore]
                        arg1:play_chore(local1, arg4)
                        arg1.last_chore = local1
                        arg1:wait_for_chore(arg1.last_chore, arg4)
                    until local1 == arg1.last_play_chore
                    arg1.stop_idle = TRUE
                end
            else
                local2 = pick_from_weighted_table(local4[local1])
            end
        end
        if local2 then
            local1 = local2
        end
    end
end
Actor.kill_idle = function(arg1, arg2) -- line 1063
    local local1
    if find_script(arg1.new_run_idle) then
        arg1.last_play_chore = arg2
        while find_script(arg1.new_run_idle) do
            break_here()
        end
    end
end
Actor.wait_here = function(arg1, arg2) -- line 1078
    repeat
        if arg1.stop_idle or arg1.is_talking then
            arg2 = 0
        else
            arg2 = arg2 - 1
            sleep_for(1000)
        end
    until arg2 <= 0
end
Actor.talk_randomly_from_weighted_table = function(arg1, arg2, arg3, arg4) -- line 1101
    local local1, local2
    local local3 = system.currentSet
    if arg3 then
        local2 = arg3
    else
        local2 = 2000
    end
    if not arg4 then
        arg4 = { background = TRUE, skip_log = TRUE }
    end
    if type(arg2) == "table" then
        while system.currentSet == local3 do
            local1 = pick_from_weighted_table(arg2)
            if local1 then
                arg1:say_line(local1, arg4)
                arg1:wait_for_message()
            end
            sleep_for(local2 * random())
        end
    end
end
Actor.wait_for_actor = function(arg1) -- line 1132
    while arg1:is_moving() or arg1:is_turning() or arg1:is_choring(nil, TRUE) do
        break_here()
    end
end
Actor.wait_for_chore = function(arg1, arg2, arg3) -- line 1144
    if not arg2 and not arg3 then
        arg2 = arg1.last_chore_played
        arg3 = arg1.last_cos_played
    end
    while arg1:is_choring(arg2, TRUE, arg3) do
        break_here()
    end
end
Actor.is_moving = function(arg1) -- line 1159
    return IsActorMoving(arg1.hActor)
end
Actor.is_choring = function(arg1, arg2, arg3, arg4) -- line 1170
    return IsActorChoring(arg1.hActor, arg2, arg3, arg4)
end
Actor.is_resting = function(arg1) -- line 1178
    return IsActorResting(arg1.hActor)
end
Actor.is_turning = function(arg1) -- line 1186
    return IsActorTurning(arg1.hActor)
end
Actor.set_costume = function(arg1, arg2) -- line 1197
    local local1, local2
    SetActorCostume(arg1.hActor, nil)
    arg1.base_costume = arg2
    local1 = SetActorCostume(arg1.hActor, arg2)
    return local1
end
Actor.is_walking = function(arg1) -- line 1209
    if arg1:is_choring(arg1.walk_chore, TRUE, arg1.base_costume) then
        return TRUE
    else
        return FALSE
    end
end
Actor.get_costume = function(arg1, arg2) -- line 1221
    return GetActorCostume(arg1.hActor, arg2)
end
Actor.print_costumes = function(arg1) -- line 1229
    PrintActorCostumes(arg1.hActor)
end
Actor.push_costume = function(arg1, arg2) -- line 1242
    PushActorCostume(arg1.hActor, arg2)
end
Actor.pop_costume = function(arg1) -- line 1254
    if GetActorCostumeDepth(arg1.hActor) > 1 then
        return PopActorCostume(arg1.hActor)
    else
        PrintDebug("WARNING!! Trying to pop off last costume in stack!\n")
        return FALSE
    end
end
Actor.get_costume = function(arg1) -- line 1268
    return GetActorCostume(arg1.hActor)
end
Actor.multi_pop_costume = function(arg1, arg2) -- line 1277
    local local1
    if arg2 then
        local1 = arg2
    else
        local1 = 1
    end
    while GetActorCostumeDepth(arg1.hActor) > local1 do
        arg1:pop_costume()
    end
end
Actor.set_talk_color = function(arg1, arg2) -- line 1295
    SetActorTalkColor(arg1.hActor, arg2)
end
Actor.set_walk_chore = function(arg1, arg2, arg3) -- line 1303
    arg1.walk_chore = arg2
    if not arg3 then
        arg3 = arg1.base_costume
    end
    SetActorWalkChore(arg1.hActor, arg2, arg3)
end
Actor.set_turn_chores = function(arg1, arg2, arg3, arg4) -- line 1314
    if not arg4 then
        arg4 = arg1.base_costume
    end
    SetActorTurnChores(arg1.hActor, arg2, arg3, arg4)
end
Actor.set_rest_chore = function(arg1, arg2, arg3) -- line 1324
    if not arg3 then
        arg3 = arg1.base_costume
    end
    SetActorRestChore(arg1.hActor, arg2, arg3)
end
Actor.set_mumble_chore = function(arg1, arg2, arg3) -- line 1334
    if not arg3 then
        arg3 = arg1.base_costume
    end
    SetActorMumblechore(arg1.hActor, arg2, arg3)
end
Actor.set_talk_chore = function(arg1, arg2, arg3, arg4) -- line 1345
    if not arg4 then
        arg4 = arg1.base_costume
    end
    SetActorTalkChore(arg1.hActor, arg2, arg3, arg4)
end
Actor.set_turn_rate = function(arg1, arg2) -- line 1355
    SetActorTurnRate(arg1.hActor, arg2)
end
Actor.set_walk_rate = function(arg1, arg2) -- line 1363
    SetActorWalkRate(arg1.hActor, arg2)
end
Actor.set_head = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7) -- line 1372
    SetActorHead(arg1.hActor, arg2, arg3, arg4, arg5, arg6, arg7)
end
Actor.head_look_at = function(arg1, arg2, arg3) -- line 1381
    if type(arg2) == "table" then
        if arg2.interest_actor then
            ActorLookAt(arg1.hActor, arg2.interest_actor.hActor, arg3)
        else
            ActorLookAt(arg1.hActor, arg2.hActor, arg3)
        end
    else
        ActorLookAt(arg1.hActor, nil, arg3)
    end
end
Actor.head_look_at_point = function(arg1, arg2, arg3, arg4, arg5) -- line 1404
    if type(arg2) == "table" then
        ActorLookAt(arg1.hActor, arg2.x, arg2.y, arg2.z, arg3)
    else
        ActorLookAt(arg1.hActor, arg2, arg3, arg4, arg5)
    end
end
Actor.head_look_at_manny = function(arg1, arg2) -- line 1418
    local local1, local2, local3 = GetActorNodeLocation(manny.hActor, 6)
    arg1:head_look_at_point(local1, local2, local3, arg2)
end
Actor.head_follow_mesh = function(arg1, arg2, arg3, arg4) -- line 1427
    local local1, local2, local3
    repeat
        local1, local2, local3 = GetActorNodeLocation(arg2.hActor, arg3)
        if local1 then
            arg1:head_look_at_point(local1, local2, local3)
        end
        break_here()
    until arg4
end
Actor.kill_head_script = function(arg1) -- line 1442
    if arg1.head_script then
        if find_script(arg1.head_script) then
            stop_script(arg1.head_script)
        end
        arg1.head_script = nil
    end
end
Actor.set_look_rate = function(arg1, arg2) -- line 1456
    SetActorLookRate(arg1.hActor, arg2)
end
Actor.get_look_rate = function(arg1) -- line 1466
    return GetActorLookRate(arg1.hActor)
end
Actor.set_visibility = function(arg1, arg2) -- line 1475
    SetActorVisibility(arg1.hActor, arg2)
end
Actor.set_frustrum_culling = function(arg1, arg2) -- line 1489
    SetActorFrustrumCull(arg1.hActor, arg2)
end
Actor.set_selected = function(arg1) -- line 1498
    SetSelectedActor(arg1.hActor)
    system.currentActor = arg1
end
Actor.find_sector_name = function(arg1, arg2) -- line 1509
    return IsActorInSector(arg1.hActor, arg2)
end
Actor.find_sector_type = function(arg1, arg2) -- line 1519
    if arg2 == nil then
        return GetActorSector(arg1.hActor, WALK)
    else
        return GetActorSector(arg1.hActor, arg2)
    end
end
Actor.follow_boxes = function(arg1) -- line 1527
    SetActorFollowBoxes(arg1.hActor, TRUE)
    arg1.following_boxes = TRUE
end
Actor.ignore_boxes = function(arg1) -- line 1533
    SetActorFollowBoxes(arg1.hActor, FALSE)
    arg1.following_boxes = FALSE
end
Actor.put_in_set = function(arg1, arg2) -- line 1544
    if type(arg2) == "table" then
        doorman_in_hot_box = TRUE
        PutActorInSet(arg1.hActor, arg2.setFile)
    else
        PutActorInSet(arg1.hActor, nil)
    end
end
Actor.free = function(arg1) -- line 1557
    PrintDebug("Freed actor " .. arg1.name .. "!!\n")
    if arg1.frozen then
        arg1.frozen.frozen_actors[arg1.hActor] = nil
        arg1.frozen = nil
    end
    arg1:stop_chore(nil)
    arg1:set_costume(nil)
    arg1:put_in_set(nil)
end
Actor.stop_walk = function(arg1) -- line 1574
    local local1 = arg1:getpos()
    arg1:walkto(local1.x, local1.y, local1.z)
end
Actor.fake_walkto = function(arg1, arg2, arg3, arg4, arg5) -- line 1588
    local local1, local2, local3
    local local4 = GetActorWalkRate(arg1.hActor)
    local2 = { x = arg2, y = arg3, z = arg4 }
    local1 = GetActorYawToPoint(arg1.hActor, local2)
    arg1:setrot(0, local1, 0, TRUE)
    arg1:wait_for_actor()
    arg1.bob_script = start_script(arg1.fake_bob_walk, arg1, arg5)
    local3 = proximity(arg1.hActor, arg2, arg3, arg4)
    repeat
        local3 = proximity(arg1.hActor, arg2, arg3, arg4)
        if local3 <= PerSecond(GetActorWalkRate(arg1.hActor)) then
            arg1:set_walk_rate(local3 - 0.0099999998)
        end
        WalkActorForward(arg1.hActor)
        break_here()
    until local3 <= 0.050000001
    stop_script(arg1.bob_script)
    arg1:setpos(arg2, arg3, arg4)
    arg1:set_walk_rate(local4)
end
Actor.fake_bob_walk = function(arg1, arg2) -- line 1612
    local local1, local2, local3
    if not arg2 then
        arg2 = 40
    end
    local1 = arg1:getpos()
    local2 = local1.z
    local3 = 10
    while TRUE do
        local1.z = local2 + sin(local3) / arg2
        arg1:setpos(local1.x, local1.y, local1.z)
        local3 = local3 + rndint(10, 20) * (GetActorWalkRate(arg1.hActor) * 10)
        if local3 > 360 then
            local3 = local3 - 360
        end
        break_here()
        local1 = arg1:getpos()
    end
end
Actor.put_at_interest = function(arg1) -- line 1638
    PutActorAtInterest(arg1.hActor)
end
Actor.put_at_object = function(arg1, arg2) -- line 1647
    if type(arg2) == "table" then
        PrintDebug("Putting " .. arg1.name .. " at object " .. arg2.name .. " in set " .. arg2.obj_set.name .. "\n")
        arg1:setpos(arg2.use_pnt_x, arg2.use_pnt_y, arg2.use_pnt_z)
        arg1:setrot(arg2.use_rot_x, arg2.use_rot_y, arg2.use_rot_z)
        arg1:put_in_set(arg2.obj_set)
    else
        PrintDebug("put_at_object():  invalid object!\n")
    end
end
Actor.clear_hands = function(arg1) -- line 1659
    if arg1.is_holding then
        arg1.is_holding:put_away()
    end
end
Actor.set_speech_mode = function(arg1, arg2) -- line 1673
    if not arg1.saylineTable then
        arg1.saylineTable = { }
    end
    arg1.saylineTable.background = arg2
end
Actor.skip_log = function(arg1, arg2) -- line 1686
    if not arg1.saylineTable then
        arg1.saylineTable = { }
    end
    arg1.saylineTable.skip_log = arg2
end
Actor.normal_say_line = function(arg1, arg2, arg3) -- line 1698
    local local1
    local1 = union_table(arg1.saylineTable, arg3)
    if not local1.background then
        system.lastActorTalking = arg1
    end
    SayLine(arg1.hActor, arg2, local1)
    if not local1.skip_log then
        dialog_log:log_say_line(arg1, arg2)
    end
end
Actor.underwater_say_line = function(arg1, arg2, arg3) -- line 1718
    local local1
    local1 = start_sfx("bubvox.imu")
    Actor.normal_say_line(arg1, arg2, arg3)
    start_script(arg1.wait_for_underwater_message, arg1, local1)
end
Actor.wait_for_underwater_message = function(arg1, arg2) -- line 1726
    while IsMessageGoing(arg1.hActor) do
        break_here()
    end
    stop_sound(arg2)
end
Actor.say_line = Actor.normal_say_line
Actor.wait_for_message = function(arg1) -- line 1736
    while IsMessageGoing(arg1.hActor) do
        break_here()
    end
end
Actor.wait_and_say_line = function(arg1, arg2) -- line 1742
    break_here()
    wait_for_message()
    arg1:say_line(arg2)
end
Actor.is_speaking = function(arg1) -- line 1748
    if IsMessageGoing(arg1.hActor) then
        return TRUE
    else
        return FALSE
    end
end
Actor.shut_up = function(arg1) -- line 1760
    ShutUpActor(arg1.hActor)
end
shut_up_everybody = function() -- line 1768
    local local1, local2
    local1, local2 = next(system.actorTable, nil)
    while local1 do
        if IsMessageGoing(local2.hActor) then
            ShutUpActor(local2.hActor)
        end
        local1, local2 = next(system.actorTable, local1)
    end
end
Actor.angle_to_actor = function(arg1, arg2) -- line 1785
    return GetAngleBetweenActors(arg1.hActor, arg2.hActor)
end
Actor.angle_to_object = function(arg1, arg2) -- line 1793
    return GetAngleBetweenActors(arg1.hActor, arg2.interest_actor.hActor)
end
Actor.voice_line = function(arg1, arg2, arg3, arg4, arg5) -- line 1805
    if 1 then
        arg1:say_line(arg2.text, arg1.talk_in_background)
    else
        if not arg3 then
            arg3 = 3.5
        end
        if not arg4 then
            arg4 = 3.5
        end
        if not arg5 then
            arg5 = 1
        end
        if text_mode == "Text Only" or text_mode == "Text and Voice" or not arg2.hSound then
            arg1:say_line(arg2.text, arg1.talk_in_background)
        end
        if arg2.hSound and text_mode ~= "Text Only" then
            PlaySoundAt(arg2.hSound, arg1.hActor, arg3, arg4, arg5)
            while IsSoundPlaying(arg2.hSound) do
                break_here()
            end
        end
        wait_for_message()
    end
end
Actor.has_any = function(arg1, arg2) -- line 1840
    local local1, local2 = next(arg2, nil)
    while local1 do
        if type(local2) == "table" then
            if local2.owner == arg1 then
                return TRUE
            end
        end
        local1, local2 = next(arg2, local1)
    end
    return FALSE
end
print_actor_coordinates = function(arg1) -- line 1863
    local local1, local2, local3
    local local4, local5
    if not arg1 then
        local4 = InputDialog("Actor Coordinates", "Enter name of actor (manny is the default):")
        if local4 == nil or local4 == "" then
            local4 = "manny"
        end
        local5 = getglobal(local4)
    else
        local5 = arg1
    end
    if local5 ~= nil and type(local5) == "table" then
        local1 = local5:getpos()
        local2 = local5:get_positive_rot()
        local3 = local5:get_softimage_pos()
        if abs(local1.z) < 1e-06 then
            local1.z = 0
        end
        PrintDebug(local4 .. ":setpos(" .. local1.x .. ", " .. local1.y .. ", " .. local1.z .. ")\n")
        PrintDebug(local4 .. ":setrot(" .. local2.x .. ", " .. local2.y .. ", " .. local2.z .. ")\n")
        PrintDebug(local4 .. ":set_softimage_pos(" .. local3.x .. ", " .. local3.y .. ", " .. local3.z .. ")\n")
        PrintDebug("start_script(" .. local4 .. ".walk_and_face," .. local4 .. "," .. local1.x .. ", " .. local1.y .. ", " .. local1.z .. ", " .. local2.x .. ", " .. local2.y .. ", " .. local2.z .. ")\n")
    else
        PrintDebug("Actor \"" .. local4 .. "\" not recognized!\n")
    end
end
system.idleTemplate = { }
Idle = system.idleTemplate
Idle.create = function(arg1, arg2) -- line 1906
    local local1 = { }
    local1.parent = arg1
    local1.root_name = arg2
    return local1
end
Idle.add_state = function(arg1, arg2, arg3) -- line 1913
    local local1, local2
    local local3, local4
    if type(arg3) ~= "table" then
        PrintDebug("Not a valid branch_table for new state " .. arg2 .. "\n")
        return nil
    end
    local1 = arg1.root_name .. "_" .. arg2
    arg1[local1] = { }
    local3, local4 = next(arg3, nil)
    while local3 do
        local2 = arg1.root_name .. "_" .. local3
        arg1[local1][local2] = local4
        local3, local4 = next(arg3, local3)
    end
end
run_idle = function(arg1, arg2, arg3) -- line 1945
    local local1 = arg3
    local local2
    local local3 = system.currentSet
    while system.currentSet == local3 and local1 do
        PlayActorChore(arg1.hActor, local1)
        wait_for_actor(arg1.hActor)
        local2 = pick_from_weighted_table(arg2[local1])
        if local2 then
            local1 = local2
        end
    end
end
Actor.spin = function(arg1) -- line 1975
    local local1, local2, local3
    local local4 = 1
    local1 = 1
    local2 = 360
    local3 = 1
    while 1 do
        arg1:setrot(local1, local2, local3)
        local4 = local4 + 10
        local1 = local1 + 10
        local2 = local2 - 10
        local3 = local3 + 10
        if local4 == 361 then
            local1 = 1
            local2 = 360
            local3 = 1
        end
        break_here()
    end
end
Actor.create_dialogStack = function(arg1) -- line 2013
    arg1.dialogStack = { }
    arg1.dialogStack.parseFunction = nil
    arg1.dialogStack.head = 0
    arg1.dialogStack.tail = 0
end
Actor.push_chore = function(arg1, arg2, arg3, arg4, arg5) -- line 2028
    if not arg2 then
        arg2 = "wait"
    end
    arg1.dialogStack[arg1.dialogStack.tail] = { chore = arg2, isLooping = arg3, fade_in_time = arg4, fade_out_time = arg5 }
    arg1.dialogStack.tail = arg1.dialogStack.tail + 1
    if not find_script(arg1.execute_dialogStack) then
        arg1.dialogStack.parseFunction = start_script(arg1.execute_dialogStack, arg1)
    end
    PrintDebug("pushing chore " .. arg2 .. "\n")
end
Actor.push_chore_times = function(arg1, arg2, arg3) -- line 2051
    local local1
    local1 = 0
    while local1 < arg3 do
        arg1:push_chore(arg2, CHORE_NOLOOP)
        arg1:push_chore()
        local1 = local1 + 1
    end
end
Actor.push_break = function(arg1, arg2) -- line 2066
    if not arg2 then
        arg2 = 1
    end
    arg1.dialogStack[arg1.dialogStack.tail] = { chore = "break_here", frames = arg2 }
    arg1.dialogStack.tail = arg1.dialogStack.tail + 1
    if arg1.dialogStack.parseFunction == nil then
        arg1.dialogStack.parseFunction = start_script(arg1.execute_dialogStack, arg1)
    end
end
Actor.push_sleep = function(arg1, arg2) -- line 2083
    if not arg2 then
        arg2 = 1000
    end
    arg1.dialogStack[arg1.dialogStack.tail] = { chore = "sleep_for", msecs = arg2 }
    arg1.dialogStack.tail = arg1.dialogStack.tail + 1
    if arg1.dialogStack.parseFunction == nil then
        arg1.dialogStack.parseFunction = start_script(arg1.execute_dialogStack, arg1)
    end
end
Actor.execute_dialogStack = function(arg1) -- line 2107
    local local1, local2
    local local3 = arg1:get_costume(nil)
    local local4
    local1 = arg1.dialogStack[arg1.dialogStack.head]
    while local1 ~= nil do
        PrintDebug("dialogStack: " .. local1.chore .. "\n")
        if local1.chore == "wait" then
            arg1:wait_for_chore()
        elseif local1.chore == "break_here" then
            local2 = 0
            while local2 < local1.frames do
                break_here()
                local2 = local2 + 1
            end
        elseif local1.chore == "sleep_for" then
            sleep_for(local1.msecs)
        elseif local1.isLooping == CHORE_LOOP then
            arg1:play_chore_looping(local1.chore)
        elseif local1.fade_in_time then
            PrintDebug("Fading in chore " .. local1.chore .. "\n")
            if local4 then
                arg1:blend(local1.chore, local4.chore, local1.fade_in_time, local3)
            else
                FadeInChore(arg1.hActor, local3, local1.chore, local1.fade_in_time)
            end
        else
            PrintDebug("playing chore " .. local1.chore .. "\n")
            arg1:play_chore(local1.chore)
        end
        if local1.fade_out_time then
            arg1:wait_for_chore()
            PrintDebug("Fading out chore " .. local1.chore .. "\n")
            FadeOutChore(arg1.hActor, local3, local1.chore, local1.fade_in_time)
        end
        if local1.chore ~= "wait" and local1.chore ~= "break_here" and local1 ~= "sleep_for" then
            local4 = local1
        end
        arg1.dialogStack[arg1.dialogStack.head] = nil
        arg1.dialogStack.head = arg1.dialogStack.head + 1
        local1 = arg1.dialogStack[arg1.dialogStack.head]
    end
    arg1.dialogStack.head = 0
    arg1.dialogStack.tail = 0
    arg1.dialogStack.parseFunction = nil
end
Actor.play_sound_at = function(arg1, arg2, arg3, arg4, arg5, arg6) -- line 2176
    local local1
    if not arg5 then
        arg5 = IM_HIGH_PRIORITY
    end
    if not arg6 then
        arg6 = IM_GROUP_SFX
    end
    local1 = ImStartSound(arg2, arg5, arg6)
    SetSoundPosition(local1, arg1.hActor, arg3, arg4)
    return local1
end
Actor.move_sound_to = function(arg1, arg2, arg3, arg4) -- line 2196
    SetSoundPosition(arg2, arg1.hActor, arg3, arg4)
end
Actor.play_attached_sound = function(arg1, arg2, arg3, arg4, arg5, arg6) -- line 2211
    local local1
    if not arg5 then
        arg5 = IM_HIGH_PRIORITY
    end
    if not arg6 then
        arg6 = IM_GROUP_SFX
    end
    ImStartSound(arg2, arg5, arg6)
    local1 = start_script(arg1.attach_sound, arg1, arg2, arg3, arg4)
    wait_for_script(local1)
end
Actor.attach_sound = function(arg1, arg2, arg3, arg4) -- line 2233
    start_script(arg1.attach_sound_script, arg1, arg2, arg3, arg4)
end
Actor.attach_sound_script = function(arg1, arg2, arg3, arg4) -- line 2248
    while sound_playing(arg2) do
        SetSoundPosition(arg2, arg1.hActor, arg3, arg4)
    end
end
Actor.play_footstep_sfx = function(arg1, arg2, arg3, arg4) -- line 2263
    arg1:play_sound_at(arg2, arg3, arg4, IM_MED_PRIORITY)
end
Actor.costumeMarkerHandler = function(arg1, arg2, arg3) -- line 2274
    local local1 = system.actorTable[arg2]
    local local2 = FALSE
    if local1 ~= nil then
        if local1.costume_marker_handler then
            local2 = TRUE
            local1:costume_marker_handler(arg3)
        elseif local1.costume_marker_handler == bird_sound_monitor then
            local2 = TRUE
            local1:costume_marker_handler(arg3)
        end
    end
    if not local2 and local1 ~= nil and local1.footsteps ~= nil and not local1:is_resting() then
        local1:play_default_footstep(arg3)
    end
end
Actor.play_default_footstep = function(arg1, arg2, arg3) -- line 2298
    local local1
    local local2, local3
    local local4, local5
    if not arg3 then
        local1 = arg1.footsteps
    else
        local1 = arg3
    end
    local2 = local1.prefix
    local3 = nil
    local4 = 10
    local5 = 64
    if arg2 == Actor.MARKER_LEFT_WALK then
        local2 = local2 .. "wl"
        local3 = rndint(1, local1.left_walk)
    elseif arg2 == Actor.MARKER_RIGHT_WALK then
        local2 = local2 .. "wr"
        local3 = rndint(1, local1.right_walk)
    elseif arg2 == Actor.MARKER_LEFT_TURN then
        local2 = local2 .. "wl"
        local3 = rndint(1, local1.left_walk)
        local4 = 5
        local5 = 20
    elseif arg2 == Actor.MARKER_RIGHT_TURN then
        local2 = local2 .. "wr"
        local3 = rndint(1, local1.right_walk)
        local4 = 5
        local5 = 20
    elseif arg2 == Actor.MARKER_LEFT_RUN then
        if local1.left_run and local1.left_run > 0 then
            local2 = local2 .. "rl"
            local3 = rndint(1, local1.left_run)
        else
            local2 = local2 .. "wl"
            local3 = rndint(1, local1.left_walk)
        end
    elseif arg2 == Actor.MARKER_RIGHT_RUN then
        if local1.right_run and local1.right_run > 0 then
            local2 = local2 .. "rr"
            local3 = rndint(1, local1.right_run)
        else
            local2 = local2 .. "wr"
            local3 = rndint(1, local1.right_walk)
        end
    end
    if local3 then
        local2 = local2 .. local3 .. ".wav"
        arg1:play_footstep_sfx(local2, local4, local5)
    end
end
Actor.costumeOverrideHandler = function(arg1, arg2, arg3) -- line 2356
    if arg3 then
        arg1.idles_allowed = FALSE
    else
        arg1.idles_allowed = TRUE
    end
end
Actor.collisionHandler = function(arg1, arg2, arg3) -- line 2364
    local local1 = system.actorTable[arg2]
    local local2 = system.actorTable[arg3]
    if local1 ~= nil then
        if local1.collision_handler then
            PrintDebug(local1.name .. " has run into " .. local2.name)
            single_start_script(local1.collision_handler, local1, local2)
        end
    end
end
Actor.collision_handler = function(arg1, arg2) -- line 2376
end
system.costumeMarkerHandler = Actor
system.costumeOverrideHandler = Actor
system.collisionHandler = Actor
footsteps = { }
footsteps.concrete = { prefix = "fscon", left_walk = 4, right_walk = 4, left_run = 4, right_run = 4 }
footsteps.dirt = { prefix = "fsdrt", left_walk = 4, right_walk = 4, left_run = 4, right_run = 4 }
footsteps.gravel = { prefix = "fsgrv", left_walk = 4, right_walk = 4, left_run = 4, right_run = 4 }
footsteps.creak = { prefix = "fscrk", left_walk = 2, right_walk = 2, left_run = 2, right_run = 2 }
footsteps.marble = { prefix = "fsmar", left_walk = 2, right_walk = 2, left_run = 2, right_run = 2 }
footsteps.metal = { prefix = "fsmet", left_walk = 4, right_walk = 4, left_run = 4, right_run = 4 }
footsteps.pavement = { prefix = "fspav", left_walk = 4, right_walk = 4, left_run = 4, right_run = 4 }
footsteps.rug = { prefix = "fsrug", left_walk = 4, right_walk = 4, left_run = 4, right_run = 4 }
footsteps.sand = { prefix = "fssnd", left_walk = 4, right_walk = 4, left_run = 4, right_run = 4 }
footsteps.snow = { prefix = "fssno", left_walk = 4, right_walk = 4, left_run = 4, right_run = 4 }
footsteps.trapdoor = { prefix = "fstrp", left_walk = 1, right_walk = 1, left_run = 1, right_run = 1 }
footsteps.echo = { prefix = "fseko", left_walk = 4, right_walk = 4, left_run = 4, right_run = 4 }
footsteps.reverb = { prefix = "fsrvb", left_walk = 2, right_walk = 2, left_run = 2, right_run = 2 }
footsteps.metal2 = { prefix = "fs3mt", left_walk = 4, right_walk = 4, left_run = 2, right_run = 2 }
footsteps.wet = { prefix = "fswet", left_walk = 2, right_walk = 2, left_run = 2, right_run = 2 }
footsteps.flowers = { prefix = "fsflw", left_walk = 2, right_walk = 2, left_run = 2, right_run = 2 }
footsteps.glottis = { prefix = "fsglt", left_walk = 2, right_walk = 2 }
footsteps.jello = { prefix = "fsjll", left_walk = 2, right_walk = 2 }
footsteps.nick_virago = { prefix = "fsnic", left_walk = 2, right_walk = 2 }
footsteps.underwater = { prefix = "fswtr", left_walk = 3, right_walk = 3, left_run = 2, right_run = 2 }
footsteps.velasco = { prefix = "fsbcn", left_walk = 3, right_walk = 2 }
brennis = Actor:create(nil, nil, nil, "Tube-Switcher Guy")
brennis:set_talk_color(Red)
brennis.default = function(arg1) -- line 2441
    brennis:set_costume("brennis_fix_idle.cos")
    brennis:set_colormap("brennis.cmp")
    brennis:set_mumble_chore(brennis_fix_idle_mumble)
    brennis:set_talk_chore(1, brennis_fix_idle_stop_talk)
    brennis:set_talk_chore(2, brennis_fix_idle_a)
    brennis:set_talk_chore(3, brennis_fix_idle_c)
    brennis:set_talk_chore(4, brennis_fix_idle_e)
    brennis:set_talk_chore(5, brennis_fix_idle_f)
    brennis:set_talk_chore(6, brennis_fix_idle_l)
    brennis:set_talk_chore(7, brennis_fix_idle_m)
    brennis:set_talk_chore(8, brennis_fix_idle_o)
    brennis:set_talk_chore(9, brennis_fix_idle_t)
    brennis:set_talk_chore(10, brennis_fix_idle_u)
end
celso = Actor:create(nil, nil, nil, "Celso")
celso:set_talk_color(Yellow)
chepito = Actor:create(nil, nil, nil, "Chepito")
chepito.default = function(arg1) -- line 2463
    if not chepito.hCos then
        chepito.hCos = "chepito.cos"
    end
    chepito:set_visibility(TRUE)
    chepito:set_costume(chepito.hCos)
    chepito:set_talk_color(Green)
    chepito:set_walk_chore(chepito_walk)
    chepito:set_mumble_chore(chepito_mumble)
    chepito:set_talk_chore(1, chepito_m)
    chepito:set_talk_chore(2, chepito_a)
    chepito:set_talk_chore(3, chepito_c)
    chepito:set_talk_chore(4, chepito_e)
    chepito:set_talk_chore(5, chepito_f)
    chepito:set_talk_chore(6, chepito_l)
    chepito:set_talk_chore(7, chepito_m)
    chepito:set_talk_chore(8, chepito_o)
    chepito:set_talk_chore(9, chepito_t)
    chepito:set_talk_chore(10, chepito_u)
    chepito:set_head(3, 4, 5, 165, 28, 80)
end
domino = Actor:create(nil, nil, nil, "Domino")
domino:set_talk_color(Yellow)
domino.default = function(arg1) -- line 2490
    domino:set_colormap("domino.cmp")
    domino:set_talk_color(Yellow)
end
eva = Actor:create(nil, nil, nil, "/sytx088/")
eva:set_talk_color(Red)
eva.default = function(arg1, arg2) -- line 2497
    if arg2 == "sec" then
        eva:set_costume("eva_sec.cos")
        eva:set_mumble_chore(eva_sec_mumble, "eva_sec.cos")
        eva:set_talk_chore(1, eva_sec_mouth_m)
        eva:set_talk_chore(2, eva_sec_mouth_a)
        eva:set_talk_chore(3, eva_sec_mouth_c)
        eva:set_talk_chore(4, eva_sec_mouth_e)
        eva:set_talk_chore(5, eva_sec_mouth_f)
        eva:set_talk_chore(6, eva_sec_mouth_l)
        eva:set_talk_chore(7, eva_sec_mouth_m)
        eva:set_talk_chore(8, eva_sec_mouth_o)
        eva:set_talk_chore(9, eva_sec_mouth_t)
        eva:set_talk_chore(10, eva_sec_mouth_u)
    else
        eva:set_costume("ev_r_idles.cos")
    end
    eva:set_colormap("eva_sv.cmp")
    eva:set_talk_color(Red)
    eva:ignore_boxes()
end
manny = Actor:create(nil, nil, nil, "Manny")
manny.costume_state = "suit"
dofile("_manny.lua")
meche = Actor:create(nil, nil, nil, "Meche")
meche:set_talk_color(Green)
dofile("olivia_talks.lua")
olivia = Actor:create(nil, nil, nil, "Olivia")
olivia:set_talk_color(MakeColor(164, 18, 147))
olivia.default = function(arg1) -- line 2531
    olivia:set_costume(nil)
    olivia:set_costume("olivia_talks.cos")
    olivia:set_mumble_chore(olivia_talks_mumble, "olivia_talks.cos")
    olivia:set_talk_chore(1, olivia_talks_stop_talk)
    olivia:set_talk_chore(2, olivia_talks_a)
    olivia:set_talk_chore(3, olivia_talks_c)
    olivia:set_talk_chore(4, olivia_talks_e)
    olivia:set_talk_chore(5, olivia_talks_f)
    olivia:set_talk_chore(6, olivia_talks_l)
    olivia:set_talk_chore(7, olivia_talks_m)
    olivia:set_talk_chore(8, olivia_talks_o)
    olivia:set_talk_chore(9, olivia_talks_t)
    olivia:set_talk_chore(10, olivia_talks_u)
    olivia:push_costume("olivia_idles.cos")
    olivia:set_walk_chore(olivia_idles_walk, "olivia_idles.cos")
    olivia:set_head(5, 6, 7, 165, 28, 80)
    olivia:set_look_rate(110)
    olivia:set_collision_mode(COLLISION_SPHERE, 0.2)
end
salvador = Actor:create(nil, nil, nil, "/sytx198/")
salvador:set_talk_color(DarkGreen)
salvador.default = function(arg1) -- line 2556
    salvador:ignore_boxes()
    if not salvador.hCos then
        salvador.hCos = "sv_in_hq.cos"
    end
    salvador:set_costume(salvador.hCos)
    salvador:set_colormap("eva_sv.cmp")
    salvador:set_head(3, 4, 5, 165, 28, 80)
    salvador:set_look_rate(90)
end
toto = Actor:create(nil, nil, nil, "Toto")
toto.default = function(arg1) -- line 2568
    toto:set_colormap("toto.cmp")
    toto:set_talk_color(Yellow)
end
dofile("velasco.lua")
velasco = Actor:create(nil, nil, nil, "Velasco")
velasco.default = function(arg1) -- line 2575
    velasco:free()
    velasco:set_costume("velasco.cos")
    velasco:set_colormap("velasco.cmp")
    velasco:set_talk_color(Blue)
    velasco:set_head(3, 4, 5, 165, 28, 80)
    velasco:set_walk_rate(0.38)
    velasco:set_look_rate(180)
    velasco:set_mumble_chore(velasco_mumble)
    velasco:set_talk_chore(1, velasco_stop_talk)
    velasco:set_talk_chore(2, velasco_a)
    velasco:set_talk_chore(3, velasco_c)
    velasco:set_talk_chore(4, velasco_e)
    velasco:set_talk_chore(5, velasco_f)
    velasco:set_talk_chore(6, velasco_l)
    velasco:set_talk_chore(7, velasco_m)
    velasco:set_talk_chore(8, velasco_o)
    velasco:set_talk_chore(9, velasco_t)
    velasco:set_talk_chore(10, velasco_u)
    velasco:set_turn_rate(85)
    velasco:set_collision_mode(COLLISION_OFF)
    velasco:set_walk_chore(velasco_walk, "velasco.cos")
end
dofile("_actors1.lua")
dofile("_actors2.lua")
dofile("_actors3.lua")
dofile("_actors4.lua")
aitor_cask_in_elev = 0
aitor_cask_out_elev = 1
aitor_cask_out_forklift_roll = 2
aitor_cask_roll_cask = 3
aitor_cask_forklift_hold = 4
aitor_idles_walk_sit_on_stool = 0
aitor_idles_sit_pos = 1
aitor_idles_head_to_down = 2
aitor_idles_head_down = 3
aitor_idles_head_to_up = 4
aitor_idles_head_up = 5
aitor_idles_from_up_to_left = 6
aitor_idles_back_to_sit = 7
aitor_idles_walk_out = 8
aitor_idles_mumble = 9
aitor_idles_c = 10
aitor_idles_m = 11
aitor_idles_f = 12
aitor_idles_e = 13
aitor_idles_u = 14
aitor_idles_l = 15
aitor_idles_a = 16
aitor_idles_o = 17
aitor_idles_stop_talk = 18
aitor_idles_t = 19
aitor_idles_eyes_shut = 20
aitor_idles_eyes_open = 21
alb_idles_idle = 0
alb_idles_walk = 1
alb_idles_start_snap = 2
alb_idles_snap_loop = 3
alb_idles_end_snap = 4
alb_idles_sit_up_hold = 5
alb_idles_start_trap = 6
alb_idles_trap_loop = 7
alb_idles_end_trap = 8
alb_idles_sit_up = 9
alb_idles_turn = 10
alb_idles_idle2 = 11
alb_roar_roar = 0
al_elevator_open = 0
al_elevator_closed = 1
alexi_rest = 0
alexi_look_at_gunar = 1
alexi_look_hold = 2
alexi_gesture1 = 3
alexi_gesture2 = 4
alexi_gesture3 = 5
alexi_gesture4 = 6
alexi_gesture5 = 7
alexi_gesture6 = 8
alexi_gesture7 = 9
alexi_look_at_olivia = 10
alexi_look_hold2 = 11
alexi_begin_snap = 12
alexi_snap_cycle = 13
alexi_end_snap = 14
alexi_gesture8 = 15
alexi_chin_cycle = 16
alexi_gesture9 = 17
alexi_gesture10 = 18
alexi_gesture11 = 19
alexi_gesture12 = 20
alexi_back_to_rest = 21
alexi_mumble = 22
alexi_m = 23
alexi_c = 24
alexi_u = 25
alexi_o = 26
alexi_a = 27
alexi_f = 28
alexi_e = 29
alexi_l = 30
alexi_t = 31
alexi_meshes_show_all = 0
alexi_meshes_just_head = 1
alexi_meshes_all_but_head = 2
alexi_meshes_just_head_l_arm = 3
alexi_meshes_all_but_head_l_arm = 4
al_ga_door_set_open = 0
al_ga_door_set_closed = 1
CheckFirstTime("al.lua")
dofile("manny_scales.lua")
dofile("ma_up_rope.lua")
dofile("manny_wave.lua")
dofile("rope_climb.lua")
dofile("al_elevator.lua")
al = Set:create("al.set", "Alley", { al_allls = 0, al_allls2 = 0, al_allls3 = 0, al_ropla = 1, al_ovrhd = 2 })
al.camera_adjusts = { 350, 0 }
al.cheat_boxes = { al_cheat_1 = 1 }
al.use_elevator = function(arg1) -- line 28
    START_CUT_SCENE()
    set_override(al.use_elevator_override, al)
    manny:head_look_at(nil)
    manny:walkto(0.467088, 1.52067, 0, 0, 39, 0)
    manny:wait_for_actor()
    al.ga_door_obj:play_chore(1)
    SendObjectToBack(al.hDoorObj)
    ForceRefresh()
    ImSetState(STATE_NULL)
    StartMovie("al_open.snm", nil, 0, 64)
    wait_for_movie()
    al.ga_door_obj:play_chore(0)
    al.hq_door:open()
    SendObjectToBack(al.hDoorObj)
    ForceRefresh()
    manny:walkto(0.45573, 2.02417, 0)
    manny:wait_for_actor()
    manny:head_look_at_point(0.442081, 1.96215, 0)
    manny:walkto(0.075089, 2.08581, 0)
    manny:wait_for_actor()
    manny:head_look_at(nil)
    hq:switch_to_set()
    manny:put_in_set(hq)
    manny:setpos(2, 0, 0)
    StartMovie("hq_open.snm", nil, 193, 173)
    wait_for_movie()
    hq:come_out_door(hq.al_door)
    END_CUT_SCENE()
end
al.use_elevator_override = function(arg1) -- line 66
    kill_override()
    hq:switch_to_set()
    manny:put_in_set(hq)
    manny:setpos(0.894616, -0.0153875, 0)
    manny:setrot(0, 90, 0)
end
al.cheat_tie_rope = function(arg1, arg2) -- line 85
    if arg2 == nil then
        arg2 = arg1:current_setup()
    end
    if arg2 == al_ropla then
        tie_rope:setpos(-0.187208, 7.68642, 0)
        tie_rope:setrot(0, 134.411, 0)
        tie_rope:play_chore(rope_climb_show)
    else
        tie_rope:play_chore(rope_climb_hide)
    end
end
al.camerachange = function(arg1, arg2, arg3) -- line 99
    al:cheat_tie_rope(arg3)
end
al.setup_actors = function(arg1) -- line 103
    tie_rope:default()
    tie_rope:put_in_set(arg1)
    tie_rope:play_chore(rope_climb_show)
    al:cheat_tie_rope()
    SetShadowColor(25, 15, 15)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, -4000, 2000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    al.hElevDoorObj = NewObjectState(0, OBJSTATE_STATE, "al_open_still.bm", "al_open_still.zbm")
    al.hq_door:set_object_state("al_elevator.cos")
end
manny.alley_footstep_handler = function(arg1, arg2) -- line 120
    local local1, local2, local3
    if arg2 == Actor.MARKER_LEFT_WALK or arg2 == Actor.MARKER_LEFT_RUN or arg2 == Actor.MARKER_LEFT_TURN then
        local1, local2, local3 = GetActorNodeLocation(arg1.hActor, 42)
    else
        local1, local2, local3 = GetActorNodeLocation(arg1.hActor, 38)
    end
    if IsPointInSector(local1, local2, local3, "elevator_box") and not manny:is_resting() then
        arg1:play_default_footstep(arg2, footsteps.trapdoor)
    else
        arg1:play_default_footstep(arg2, footsteps.concrete)
    end
end
al.enter = function(arg1) -- line 137
    LoadCostume("manny_wave.cos")
    LoadCostume("manny_scales.cos")
    LoadCostume("rope.cos")
    manny.costume_marker_handler = manny.alley_footstep_handler
    SetShadowColor(25, 15, 15)
    al:setup_actors()
    if reaped_meche and not DEMO then
        al.hDoorObj = NewObjectState(0, OBJSTATE_STATE, "al_ga_open.bm", nil)
        al:add_object_state(1, "al_ropla_open.bm", nil, OBJSTATE_UNDERLAY, TRUE)
        al.ga_door_obj:set_object_state("al_ga_door.cos")
        al.ga_door_obj:make_untouchable()
        al.ga_door_obj.interest_actor:put_in_set(al)
        al.ga_door_obj:play_chore(0)
        al.ga_door:unlock()
        al.ga_door:open()
    else
        al.ga_door:close()
        al.ga_door:lock()
    end
end
al.exit = function(arg1) -- line 162
    KillActorShadows(manny.hActor)
    al.hq_door:free_object_state()
    tie_rope:free()
    manny.costume_marker_handler = nil
end
al.rope = Object:create(al, "/altx001/rope", -0.54491103, 7.34583, 0.63999999, { range = 0.80000001 })
al.rope.use_pnt_x = -0.361698
al.rope.use_pnt_y = 7.58637
al.rope.use_pnt_z = 0
al.rope.use_rot_x = 0
al.rope.use_rot_y = 142.813
al.rope.use_rot_z = 0
al.rope.lookAt = function(arg1) -- line 186
    START_CUT_SCENE()
    manny:say_line("/alma002/")
    wait_for_message()
    END_CUT_SCENE()
    manny:say_line("/alma003/")
end
al.rope.use = function(arg1) -- line 194
    local local1
    START_CUT_SCENE()
    music_state:set_sequence(seqClimbRope)
    manny:walkto(arg1)
    manny:wait_for_actor()
    manny:ignore_boxes()
    manny.move_in_reverse = TRUE
    start_script(move_actor_backward, manny.hActor)
    sleep_for(500)
    stop_script(move_actor_backward)
    manny:set_walk_backwards(FALSE)
    manny.move_in_reverse = FALSE
    manny:set_walk_backwards(FALSE)
    manny:setpos(-0.242881, 7.7162299, 0)
    manny:setrot(0, 240.813, 0)
    manny:push_costume("ma_up_rope.cos")
    manny:play_chore(0, "ma_up_rope.cos")
    tie_rope:play_chore(rope_climb_climb)
    manny:wait_for_chore()
    manny:put_in_set(le)
    tie_rope:stop_chore(rope_climb_climb)
    tie_rope:put_in_set(le)
    tie_rope:setpos(2.4367599, 0.33766401, -34.959999)
    tie_rope:setrot(0, 64.847198, 0)
    tie_rope:play_chore(rope_climb_show)
    le:switch_to_set()
    le:current_setup(le_ladws)
    manny:setpos(0.39857, 1.3200001, -0.059999999)
    manny:setrot(0, 15.2617, 0)
    manny:stop_chore(0, "ma_up_rope.cos")
    manny:pop_costume()
    manny:push_costume("manny_scales.cos")
    manny:play_chore(manny_scales_pull_ledge, "manny_scales.cos")
    manny:wait_for_chore()
    manny:follow_boxes()
    manny:stop_chore(manny_scales_pull_ledge, "manny_scales.cos")
    manny:pop_costume()
    END_CUT_SCENE()
end
al.rope.pickUp = al.rope.use
al.rope.climbDown = function(arg1) -- line 246
    START_CUT_SCENE()
    enable_head_control(FALSE)
    al:switch_to_set()
    al:current_setup(al_ropla)
    preload_sfx("mannyJmp.wav")
    tie_rope:default()
    tie_rope:setpos(-0.187208, 7.68642, 0)
    tie_rope:setrot(0, 134.411, 0)
    tie_rope:play_chore(rope_climb_hide, "rope_climb.cos")
    manny:put_in_set(al)
    manny:ignore_boxes()
    manny:head_look_at(nil)
    manny:setpos(-0.219592, 7.66707, 0)
    manny:setrot(0, 135.813, 0)
    manny:push_costume("ma_up_rope.cos")
    manny:play_chore(ma_up_rope_drop_off, "ma_up_rope.cos")
    sleep_for(1300)
    start_sfx("mannyJmp.wav")
    manny:wait_for_chore()
    tie_rope:play_chore(rope_climb_show, "rope_climb.cos")
    manny:pop_costume()
    while not manny:find_sector_name("rope_box") do
        WalkActorForward(manny.hActor)
        break_here()
    end
    manny:follow_boxes()
    manny:setrot(0, 195, 0, TRUE)
    enable_head_control(TRUE)
    END_CUT_SCENE()
end
al.lens = Object:create(al, "/altx004/eye", -0.56491101, 2.08584, 0.60000002, { range = 0.89999998 })
al.lens.use_pnt_x = -0.25592899
al.lens.use_pnt_y = 2.2321401
al.lens.use_pnt_z = 0
al.lens.use_rot_x = 0
al.lens.use_rot_y = -198.82201
al.lens.use_rot_z = 0
al.lens.lookAt = function(arg1) -- line 291
    if reaped_meche then
        manny:say_line("/alma005/")
    else
        manny:say_line("/alma006/")
    end
end
al.lens.use = function(arg1) -- line 299
    START_CUT_SCENE()
    while TurnActorTo(manny.hActor, al.lens.obj_x, al.lens.obj_y, 0) do
        break_here()
    end
    PrintDebug("what?")
    if reaped_meche then
        if rf.eggs.owner == manny then
            manny:say_line("/alma007/")
        else
            manny:say_line("/alma008/")
        end
    else
        manny:say_line("/alma009/")
    end
    if rf.eggs.owner == manny then
        if not system.currentActor.is_holding then
            manny:play_chore(ms_takeout_get, "ms.cos")
            manny:wait_for_chore(ms_takeout_get, "ms.cos")
            manny:stop_chore(ms_takeout_get, "ms.cos")
            manny:play_chore_looping(ms_activate_eggs, "ms.cos")
            manny:play_chore(ms_takeout_small, "ms.cos")
            manny:wait_for_chore(ms_takeout_small, "ms.cos")
            manny:stop_chore(ms_takeout_small, "ms.cos")
        end
        manny:push_costume("manny_wave.cos")
        manny:play_chore(manny_wave_wave_eggs, "manny_wave.cos")
        manny:wait_for_chore(manny_wave_wave_eggs, "manny_wave.cos")
        manny:stop_chore(manny_wave_wave_eggs, "manny_wave.cos")
        manny:pop_costume()
        manny.hold_chore = ms_activate_eggs
        manny.is_holding = rf.eggs
        manny:play_chore_looping(ms_hold, "ms.cos")
    else
        manny:push_costume("manny_wave.cos")
        manny:play_chore(manny_wave_wave, "manny_wave.cos")
        manny:wait_for_chore(manny_wave_wave, "manny_wave.cos")
        manny:stop_chore(manny_wave_wave, "manny_wave.cos")
        manny:pop_costume()
    end
    wait_for_message()
    END_CUT_SCENE()
    if reaped_meche then
        al:use_elevator()
    end
end
al.lens.use_eggs = function(arg1) -- line 349
    START_CUT_SCENE()
    manny:say_line("/alma010/")
    wait_for_message()
    arg1.use()
    END_CUT_SCENE()
end
al.lens.use_mouthpiece = function(arg1) -- line 357
    START_CUT_SCENE()
    manny:say_line("/alma011/")
    wait_for_message()
    al:use_elevator()
    END_CUT_SCENE()
end
al.st_door = Object:create(al, "/altx012/door", 0.175089, 0.85580897, 0.5, { range = 0.5 })
al.al_sf_box = al.st_door
al.st_door.use_pnt_x = 0.0758304
al.st_door.use_pnt_y = 1.43951
al.st_door.use_pnt_z = 0
al.st_door.use_rot_x = 0
al.st_door.use_rot_y = 189.45
al.st_door.use_rot_z = 0
al.st_door.out_pnt_x = 0.179546
al.st_door.out_pnt_y = 0.83695501
al.st_door.out_pnt_z = 0
al.st_door.out_rot_x = 0
al.st_door.out_rot_y = 189.746
al.st_door.out_rot_z = 0
al.st_door.walkOut = function(arg1) -- line 389
    st:come_out_door(st.al_door)
end
al.hq_door = Object:create(al, "/altx013/trap door", 0.075089, 2.03581, 0, { range = 0.5 })
al.hq_door.use_pnt_x = -0.161
al.hq_door.use_pnt_y = 2.03
al.hq_door.use_pnt_z = 0
al.hq_door.use_rot_x = 0
al.hq_door.use_rot_y = -97.695
al.hq_door.use_rot_z = 0
al.hq_door.out_pnt_x = 0.077
al.hq_door.out_pnt_y = 1.998
al.hq_door.out_pnt_z = 0
al.hq_door.out_rot_x = 0
al.hq_door.out_rot_y = -97.695
al.hq_door.out_rot_z = 0
al.hq_door.touchable = FALSE
al.hq_door.walkOut = function(arg1) -- line 412
end
al.hq_door.open = function(arg1) -- line 415
    al.hq_door:play_chore(al_elevator_open)
    SendObjectToBack(al.hDoorObj)
    al.hq_door.opened = TRUE
end
al.hq_door.close = function(arg1) -- line 421
    al.hq_door:play_chore(al_elevator_closed)
    SendObjectToBack(al.hDoorObj)
    al.hq_door.opened = FALSE
end
al.ga_door = Object:create(al, "/altx014/big door", -0.60491103, 5.5058298, 0.46000001, { range = 0.80000001 })
al.ga_door.use_pnt_x = -0.32699999
al.ga_door.use_pnt_y = 5.5359998
al.ga_door.use_pnt_z = 0
al.ga_door.use_rot_x = 0
al.ga_door.use_rot_y = 112.99
al.ga_door.use_rot_z = 0
al.ga_door.out_pnt_x = -0.74000299
al.ga_door.out_pnt_y = 5.5847502
al.ga_door.out_pnt_z = 0
al.ga_door.out_rot_x = 0
al.ga_door.out_rot_y = -631.26001
al.ga_door.out_rot_z = 0
al.al_ga_box = al.ga_door
al.ga_door.passage = { "door_box", "door_box2" }
al.ga_door:close()
al.ga_door:lock()
al.ga_door:make_untouchable()
al.ga_door.walkOut = function(arg1) -- line 451
    ga:come_out_door(ga.al_door)
end
al.ga_door_obj = Object:create(al, "/altx014/big door", -0.60491103, 5.5058298, 0.46000001, { range = 0.80000001 })
al.ga_door_obj.use_pnt_x = -0.32699999
al.ga_door_obj.use_pnt_y = 5.5359998
al.ga_door_obj.use_pnt_z = 0
al.ga_door_obj.use_rot_x = 0
al.ga_door_obj.use_rot_y = 112.99
al.ga_door_obj.use_rot_z = 0
al.ga_door_obj.use = function(arg1) -- line 464
    manny:say_line("/alma015/")
end
al.ga_door_obj.lookAt = function(arg1) -- line 468
    manny:say_line("/alma016/")
end
al.ga_door_obj.pickUp = al.ga_door_obj.use
anchors_upr_hooked = 0
anchors_lower_hooked = 1
anchors_upr_sway = 2
anchors_lower_sway = 3
anchors_lwr_hooked_stop = 4
anchors_upr_hooked_stop = 5
CheckFirstTime("angelito_scripts.lua")
pugsy.look_away_point = { x = -0.100499, y = -0.320847, z = 0.4725 }
pugsy.work_idle_table = Idle:create("pu_work_idles")
idt = pugsy.work_idle_table
idt:add_state("work_idle", { start_hammer = 1 })
idt:add_state("start_hammer", { hammer_cycle = 1 })
idt:add_state("hammer_cycle", { hammer_cycle = 0.95, end_hammer = 0.05 })
idt:add_state("blow", { start_chisel = 1 })
idt:add_state("start_chisel", { chisel_cycle = 1 })
idt:add_state("chisel_cycle", { chisel_cycle = 0.95, putdown_chisel = 0.05 })
idt:add_state("putdown_chisel", { work_idle = 0.6, look_coral = 0.4 })
idt:add_state("look_coral", { chisel2 = 1 })
idt:add_state("chisel2", { start_chisel = 1 })
idt:add_state("end_hammer", { work_idle = 0.6, blow = 0.4 })
pugsy.no_hammer_idle_table = Idle:create("pu_work_idles")
idt = pugsy.no_hammer_idle_table
idt:add_state("blow", { start_chisel = 1 })
idt:add_state("start_chisel", { chisel_cycle = 1 })
idt:add_state("chisel_cycle", { chisel_cycle = 0.95, putdown_chisel = 0.05 })
idt:add_state("putdown_chisel", { look_coral = 1 })
idt:add_state("look_coral", { chisel2 = 1 })
idt:add_state("chisel2", { start_chisel = 1 })
bibi.work_idle_table = Idle:create("bibi_work_idles")
idt = bibi.work_idle_table
idt:add_state("work_idle", { start_hammer = 1 })
idt:add_state("start_hammer", { hammer_cycle = 1 })
idt:add_state("hammer_cycle", { hammer_cycle = 0.95, end_hammer = 0.05 })
idt:add_state("blow", { start_chisel = 1 })
idt:add_state("start_chisel", { chisel_cycle = 1 })
idt:add_state("chisel_cycle", { chisel_cycle = 0.95, putdown_chisel = 0.05 })
idt:add_state("putdown_chisel", { work_idle = 0.4, look_coral = 0.6 })
idt:add_state("look_coral", { chisel2 = 1 })
idt:add_state("chisel2", { start_chisel = 1 })
idt:add_state("end_hammer", { work_idle = 0.4, blow = 0.6 })
pugsy.kill_idle = function(arg1, arg2) -- line 69
    stop_script(pugsy.work_task)
    pugsy.work_task = nil
    if arg2 then
        pugsy:stop_chore(nil, "pu_work_idles.cos")
        pugsy:play_chore(pu_work_idles_work2talk, "pu_work_idles.cos")
    else
        pugsy:wait_for_chore(nil, "pu_work_idles.cos")
        if pugsy.last_chore == pu_work_idles_start_hammer then
            pugsy:run_chore(pu_work_idles_end_hammer, "pu_work_idles.cos")
        elseif pugsy.last_chore == pu_work_idles_hammer_cycle then
            pugsy:run_chore(pu_work_idles_end_hammer, "pu_work_idles.cos")
        elseif pugsy.last_chore == pu_work_idles_start_chisel then
            pugsy:run_chore(pu_work_idles_putdown_chisel, "pu_work_idles.cos")
        elseif pugsy.last_chore == pu_work_idles_chisel_cycle then
            pugsy:run_chore(pu_work_idles_putdown_chisel, "pu_work_idles.cos")
        elseif pugsy.last_chore == pu_work_idles_blow then
            pugsy:run_chore(pu_work_idles_putdown_chisel, "pu_work_idles.cos")
        end
        pugsy:run_chore(pu_work_idles_work_idle, "pu_work_idles.cos")
        pugsy:run_chore(pu_work_idles_work2talk, "pu_work_idles.cos")
    end
end
bibi.kill_idle = function(arg1, arg2) -- line 97
    stop_script(bibi.work_task)
    bibi.work_task = nil
    if arg2 then
        bibi:complete_chore(bibi_work_idles_work_idle, "bibi_work_idles.cos")
        bibi_stuff:complete_chore(bibi_work_idles_stick_coral_only, "bibi_work_idles.cos")
        bibi:stop_chore(bibi_work_idles_work_idle, "bibi_work_idles.cos")
        bibi:play_chore(bibi_talk_idles_work2talk, "bibi_talk_idles.cos")
    else
        bibi:wait_for_chore(nil, "bibi_work_idles.cos")
        if bibi.last_chore == bibi_work_idles_start_hammer then
            bibi:run_chore(bibi_work_idles_end_hammer, "bibi_work_idles.cos")
        elseif bibi.last_chore == bibi_work_idles_hammer_cycle then
            bibi:run_chore(bibi_work_idles_end_hammer, "bibi_work_idles.cos")
        elseif bibi.last_chore == bibi_work_idles_start_chisel then
            bibi:run_chore(bibi_work_idles_putdown_chisel, "bibi_work_idles.cos")
        elseif bibi.last_chore == bibi_work_idles_chisel_cycle then
            bibi:run_chore(bibi_work_idles_putdown_chisel, "bibi_work_idles.cos")
        elseif bibi.last_chore == bibi_work_idles_blow then
            bibi:run_chore(bibi_work_idles_putdown_chisel, "bibi_work_idles.cos")
        end
        bibi:run_chore(bibi_work_idles_work_idle, "bibi_work_idles.cos")
        bibi_stuff:complete_chore(bibi_work_idles_stick_coral_only, "bibi_work_idles.cos")
        bibi:stop_chore(bibi_work_idles_work_idle, "bibi_work_idles.cos")
        bibi:run_chore(bibi_talk_idles_work2talk, "bibi_talk_idles.cos")
    end
end
bibi.start_work = function(arg1, arg2) -- line 130
    bibi:head_look_at(nil)
    if bibi.work_task then
        stop_script(bibi.work_task)
    end
    if not arg2 then
        bibi:run_chore(bibi_talk_idles_talk2work, "bibi_talk_idles.cos")
        bibi:stop_chore(bibi_talk_idles_talk2work, "bibi_talk_idles.cos")
    end
    bibi.work_task = start_script(bibi.new_run_idle, bibi, "work_idle", bibi.work_idle_table, "bibi_work_idles.cos")
end
pugsy.start_work = function(arg1, arg2) -- line 142
    pugsy:head_look_at(nil)
    if pugsy.work_task then
        stop_script(pugsy.work_task)
    end
    if not arg2 then
        pugsy:run_chore(pu_talk_idles_gesture6, "pu_talk_idles.cos")
        pugsy:stop_chore(pu_talk_idles_gesture6, "pu_talk_idles.cos")
    end
    if fo.hammer_thrown then
        pugsy.work_task = start_script(pugsy.new_run_idle, pugsy, "blow", pugsy.no_hammer_idle_table, "pu_work_idles.cos")
    else
        pugsy.work_task = start_script(pugsy.new_run_idle, pugsy, "work_idle", pugsy.work_idle_table, "pu_work_idles.cos")
    end
end
pugsy.say_line = function(arg1, arg2) -- line 160
    Actor.say_line(pugsy, arg2)
    sleep_for(250)
    manny:head_look_at(pugsy, 100)
end
bibi.say_line = function(arg1, arg2) -- line 166
    Actor.say_line(bibi, arg2)
    sleep_for(250)
    manny:head_look_at(bibi, 100)
end
pugsy.throw_hammer = function(arg1) -- line 172
    manny:push_costume("mn_ham_react.cos")
    pugsy:stop_chore(pu_talk_idles_cocky, "pu_talk_idles.cos")
    pugsy:stop_chore(pu_talk_idles_cocky2, "pu_talk_idles.cos")
    pugsy:stop_chore(pu_talk_idles_gesture3, "pu_talk_idles.cos")
    pugsy:stop_chore(pu_talk_idles_gesture2, "pu_talk_idles.cos")
    pugsy:play_chore(pu_work_idles_throw_pickaxe, "pu_work_idles.cos")
    manny:play_chore(1, "mn_ham_react.cos")
    sleep_for(1750)
    start_sfx("foHmrFal.wav")
    pugsy:wait_for_chore(pu_work_idles_throw_pickaxe, "pu_work_idles.cos")
    pugsy:stop_chore(pu_work_idles_throw_pickaxe, "pu_work_idles.cos")
    pugsy:play_chore(pu_talk_idles_talkpos2, "pu_talk_idles.cos")
    fo.hammer:set_up_actor()
    manny:wait_for_chore(1, "mn_ham_react.cos")
    manny:pop_costume()
end
bibi.start_giggle = function(arg1) -- line 198
    bibi:play_chore(bibi_talk_idles_start_giggle, "bibi_talk_idles.cos")
    bibi:wait_for_chore(bibi_talk_idles_start_giggle, "bibi_talk_idles.cos")
    bibi:play_chore_looping(bibi_talk_idles_giggle_loop, "bibi_talk_idles.cos")
end
bibi.end_giggle = function(arg1) -- line 204
    bibi:stop_looping_chore(bibi_talk_idles_giggle_loop, "bibi_talk_idles.cos")
    bibi:run_chore(bibi_talk_idles_end_giggle, "bibi_talk_idles.cos")
end
bibi.start_laugh = function(arg1) -- line 209
    bibi:play_chore(bibi_talk_idles_talk2laugh, "bibi_talk_idles.cos")
    bibi:wait_for_chore(bibi_talk_idles_start_laugh, "bibi_talk_idles.cos")
    bibi:play_chore_looping(bibi_talk_idles_laugh_loop, "bibi_talk_idles.cos")
end
bibi.giggle_to_laugh = function(arg1) -- line 215
    bibi:stop_looping_chore(bibi_talk_idles_giggle_loop, "bibi_talk_idles.cos")
    bibi:play_chore_looping(bibi_talk_idles_laugh_loop, "bibi_talk_idles.cos")
end
bibi.end_laugh = function(arg1) -- line 220
    bibi:set_chore_looping(bibi_talk_idles_laugh_loop, FALSE, "bibi_talk_idles.cos")
    bibi:play_chore(bibi_talk_idles_talk, "bibi_talk_idles.cos")
    bibi:fade_out_chore(bibi_talk_idles_laugh_loop, "bibi_talk_idles.cos")
end
pugsy.start_laugh = function(arg1, arg2) -- line 226
    pugsy:play_chore_looping(pu_talk_idles_laugh, "pu_talk_idles.cos")
    if arg2 then
        pugsy:wait_for_message()
        pugsy:end_laugh()
    end
end
pugsy.end_laugh = function(arg1) -- line 234
    pugsy:set_chore_looping(pu_talk_idles_laugh, FALSE, "pu_talk_idles.cos")
    pugsy:play_chore(pu_talk_idles_talkpos2, "pu_talk_idles.cos")
    pugsy:fade_out_chore(pu_talk_idles_laugh, "pu_talk_idles.cos", 750)
end
bibi.exit_cry = function(arg1, arg2) -- line 246
    if bibi.crying then
        stop_script(bibi.cry_script)
        bibi.cry_script = nil
        if not arg2 then
            bibi:wait_for_message()
        end
        if bibi.cry_state == "sniffle" then
            bibi:stop_chore(bibi_talk_idles_sniff_loop, "bibi_talk_idles.cos")
            bibi:run_chore(bibi_talk_idles_end_sniff, "bibi_talk_idles.cos")
        elseif bibi.cry_state == "small" then
            bibi:stop_chore(bibi_talk_idles_smcry_loop, "bibi_talk_idles.cos")
            bibi:run_chore(bibi_talk_idles_end_smcry, "bibi_talk_idles.cos")
        elseif bibi.cry_state == "big" then
            bibi:stop_chore(bibi_talk_idles_bigcry_loop, "bibi_talk_idles.cos")
            bibi:run_chore(bibi_talk_idles_end_cry, "bibi_talk_idles.cos")
        end
        bibi.cry_state = nil
        bibi.crying = FALSE
        bibi:kill_cry_chores()
    end
end
bibi.kill_cry_loops = function(arg1) -- line 269
    bibi:set_chore_looping(bibi_talk_idles_sniff_loop, FALSE, "bibi_talk_idles.cos")
    bibi:set_chore_looping(bibi_talk_idles_smcry_loop, FALSE, "bibi_talk_idles.cos")
    bibi:set_chore_looping(bibi_talk_idles_bigcry_loop, FALSE, "bibi_talk_idles.cos")
end
bibi.kill_cry_chores = function(arg1) -- line 275
    bibi:stop_chore(bibi_talk_idles_sniff_loop, "bibi_talk_idles.cos")
    bibi:stop_chore(bibi_talk_idles_smcry_loop, "bibi_talk_idles.cos")
    bibi:stop_chore(bibi_talk_idles_bigcry_loop, "bibi_talk_idles.cos")
    bibi:play_chore(bibi_work_idles_work_idle, "bibi_work_idles.cos")
end
bibi.sniffle = function(arg1, arg2) -- line 282
    if bibi.cry_state == "sniffle" then
        bibi:say_line(arg2)
    else
        bibi:kill_cry_loops()
        bibi.cry_state = "sniffle"
        bibi:say_line(arg2)
        bibi:run_chore(bibi_talk_idles_talk2sniff, "bibi_talk_idles.cos")
        bibi:play_chore_looping(bibi_talk_idles_sniff_loop, "bibi_talk_idles.cos")
    end
end
bibi.big_cry = function(arg1, arg2) -- line 294
    if bibi.cry_state == "big" then
        bibi:say_line(arg2)
    else
        bibi:kill_cry_loops()
        bibi.cry_state = "big"
        bibi:say_line(arg2)
        bibi:run_chore(bibi_talk_idles_talk2bigcry, "bibi_talk_idles.cos")
        bibi:play_chore_looping(bibi_talk_idles_bigcry_loop, "bibi_talk_idles.cos")
    end
end
bibi.small_cry = function(arg1, arg2) -- line 306
    if bibi.cry_state == "small" then
        bibi:say_line(arg2)
    else
        bibi:kill_cry_loops()
        bibi.cry_state = "small"
        bibi:say_line(arg2)
        bibi:run_chore(bibi_talk_idles_talk2smcry, "bibi_talk_idles.cos")
        bibi:play_chore_looping(bibi_talk_idles_smcry_loop, "bibi_talk_idles.cos")
    end
end
fo.bibi_cry = function() -- line 318
    local local1
    local local2, local3
    if not bibi.crying then
        bibi.crying = TRUE
        bibi:head_look_at(nil)
        if an1 then
            if not an1[95].said then
                an1[95].off = FALSE
            end
        end
        bibi.cry_state = nil
        while 1 do
            repeat
                local2 = rndint(1, 6)
            until local2 ~= local3
            if local2 == 1 then
                bibi:small_cry("/fobi141/")
            elseif local2 == 2 then
                bibi:small_cry("/fobi142/")
            elseif local2 == 3 then
                bibi:sniffle("/fobi143/")
            elseif local2 == 4 then
                bibi:big_cry("/fobi144/")
            elseif local2 == 5 then
                bibi:big_cry("/fobi145/")
            else
                bibi:big_cry("/fobi146/")
            end
            local3 = local2
            bibi:wait_for_message()
        end
    end
end
pugsy.setup_crying = function(arg1) -- line 356
    pugsy:head_look_at(nil)
    pugsy:run_chore(pu_talk_idles_gesture4, "pu_talk_idles.cos")
    pugsy:run_chore(pu_talk_idles_start_cry, "pu_talk_idles.cos")
    pugsy:play_chore(pu_talk_idles_cry_loop, "pu_talk_idles.cos")
end
fo.pugsy_cry = function() -- line 363
    local local1
    if not pugsy.crying then
        pugsy.crying = TRUE
        start_script(pugsy.setup_crying)
        while 1 do
            pugsy:say_line(pick_one_of({ "/fopu147/", "/fopu148/", "/fopu149/", "/fopu150/", "/fopu151/", "/fopu152/" }))
            pugsy:wait_for_message()
            break_here()
        end
    end
end
pugsy.exit_cry = function(arg1, arg2) -- line 383
    if pugsy.crying then
        stop_script(pugsy.cry_script)
        pugsy.cry_script = nil
        if not arg2 then
            pugsy:wait_for_message()
        end
        pugsy:stop_chore(pu_talk_idles_cry_loop, "pu_talk_idles.cos")
        pugsy:run_chore(pu_talk_idles_end_cry, "pu_talk_idles.cos")
        pugsy:run_chore(pu_talk_idles_gesture5, "pu_talk_idles.cos")
        pugsy.crying = nil
    end
end
pugsy.start_crying = function(arg1) -- line 395
    if not pugsy.cry_script then
        pugsy.cry_script = start_script(fo.pugsy_cry)
    end
end
bibi.start_crying = function(arg1) -- line 401
    if not bibi.cry_script then
        bibi.cry_script = start_script(fo.bibi_cry)
    end
end
pugsy.kill_crying = function(arg1) -- line 407
    if pugsy.cry_script then
        stop_script(pugsy.cry_script)
    end
    pugsy.cry_script = nil
    pugsy.crying = FALSE
    pugsy:shut_up()
end
bibi.kill_crying = function(arg1) -- line 416
    if bibi.cry_script then
        stop_script(bibi.cry_script)
    end
    bibi.cry_script = nil
    bibi.crying = FALSE
    bibi.cry_state = nil
    bibi:shut_up()
end
fo.fight = function() -- line 432
    fo.fighting = TRUE
    if pugsy.work_task then
        start_script(pugsy.kill_idle, pugsy)
    end
    if bibi.work_task then
        start_script(bibi.kill_idle, bibi)
    end
    wait_for_script(pugsy.kill_idle)
    wait_for_script(bibi.kill_idle)
    wait_for_message()
    pugsy:push_costume("pu_argue.cos")
    bibi:push_costume("bibi_argue.cos")
    bibi:stop_chore(nil, "bibi_talk_idles.cos")
    bibi:stop_chore(nil, "bibi_work_idles.cos")
    bibi:play_chore(bibi_argue_talk, "bibi_argue.cos")
    bibi:head_look_at(nil)
    pugsy:stop_chore(nil, "pu_talk_idles.cos")
    pugsy:stop_chore(nil, "pu_work_idles.cos")
    pugsy:play_chore(pu_argue_2look_bibi, "pu_argue.cos")
    pugsy:head_look_at(nil)
    pugsy:say_line("/fopu120/")
    sleep_for(500)
    bibi:play_chore(bibi_argue_2look_pu, "bibi_argue.cos")
    pugsy:wait_for_message()
    bibi:say_line("/fobi121/")
    bibi:wait_for_message()
    pugsy:say_line("/fopu122/")
    pugsy:play_chore(pu_argue_2argue, "pu_argue.cos")
    pugsy:wait_for_message()
    pugsy:play_chore(pu_argue_argue2look_bibi, "pu_argue.cos")
    bibi:say_line("/fobi123/")
    bibi:run_chore(bibi_argue_2argue, "bibi_argue.cos")
    bibi:play_chore_looping(bibi_argue_argue, "bibi_argue.cos")
    bibi:wait_for_message()
    pugsy:say_line("/fopu124/")
    pugsy:fade_in_chore(pu_talk_idles_cocky, "pu_talk_idles.cos")
    pugsy:wait_for_chore(pu_talk_idles_cocky, "pu_talk_idles.cos")
    pugsy:fade_out_chore(pu_talk_idles_cocky, "pu_talk_idles.cos")
    pugsy:wait_for_message()
    bibi:say_line("/fobi125/")
    bibi:wait_for_message()
    pugsy:say_line("/fopu126/")
    pugsy:fade_in_chore(pu_talk_idles_cocky2, "pu_talk_idles.cos")
    pugsy:wait_for_chore(pu_talk_idles_cocky2, "pu_talk_idles.cos")
    pugsy:fade_out_chore(pu_talk_idles_cocky2, "pu_talk_idles.cos")
    pugsy:wait_for_message()
    bibi:say_line("/fobi127/")
    bibi:stop_looping_chore(bibi_argue_argue, "bibi_argue.cos")
    bibi:run_chore(bibi_argue_look_pu2talk, "bibi_argue.cos")
    bibi:stop_chore(nil, "bibi_argue.cos")
    bibi:pop_costume()
    bibi:run_chore(bibi_talk_idles_talk2work, "bibi_talk_idles.cos")
    bibi:wait_for_message()
    pugsy:say_line("/fopu128/")
    pugsy:run_chore(pu_argue_2yell, "pu_argue.cos")
    pugsy:play_chore_looping(pu_argue_yell, "pu_argue.cos")
    sleep_for(1000)
    bibi:run_chore(bibi_talk_idles_work2talk, "bibi_talk_idles.cos")
    bibi:stop_chore(nil, "bibi_talk_idles.cos")
    bibi:push_costume("bibi_argue.cos")
    bibi:play_chore(bibi_argue_2look_pu, "bibi_argue.cos")
    pugsy:wait_for_message()
    bibi:say_line("/fobi129/")
    pugsy:stop_looping_chore(pu_argue_yell, "pu_argue.cos")
    pugsy:play_chore(pu_argue_yell2look_bibi, "pu_argue.cos")
    bibi:wait_for_message()
    pugsy:say_line("/fopu130/")
    pugsy:run_chore(pu_argue_2argue, "pu_argue.cos")
    pugsy:play_chore_looping(pu_argue_argue, "pu_argue.cos")
    pugsy:wait_for_message()
    bibi:say_line("/fobi131/")
    bibi:run_chore(bibi_argue_2yell, "bibi_argue.cos")
    bibi:wait_for_message()
    pugsy:stop_looping_chore(pu_argue_argue, "pu_argue.cos")
    pugsy:say_line("/fopu132/")
    pugsy:run_chore(pu_argue_argue2look_bibi, "pu_argue.cos")
    pugsy:run_chore(pu_argue_look_bibi2talk, "pu_argue.cos")
    pugsy:wait_for_message()
    bibi:say_line("/fobi133/")
    bibi:play_chore_looping(bibi_argue_yell, "bibi_argue.cos")
    bibi:wait_for_message()
    pugsy:say_line("/fopu134/")
    sleep_for(1000)
    pugsy:run_chore(pu_argue_2look_bibi, "pu_argue.cos")
    pugsy:wait_for_message()
    bibi:say_line("/fobi135/")
    bibi:stop_looping_chore(bibi_argue_yell, "bibi_argue.cos")
    bibi:run_chore(bibi_argue_look_pu2talk, "bibi_argue.cos")
    bibi:stop_chore(nil, "bibi_argue.cos")
    bibi:pop_costume()
    bibi:run_chore(bibi_talk_idles_start_angelic, "bibi_talk_idles.cos")
    bibi:wait_for_message()
    pugsy:say_line("/fopu136/")
    pugsy:run_chore(pu_argue_look_bibi2talk, "pu_argue.cos")
    pugsy:head_look_at_point(pugsy.look_away_point)
    pugsy:wait_for_message()
    bibi:say_line("/fobi137/")
    bibi:play_chore_looping(bibi_talk_idles_angelic_loop, "bibi_talk_idles.cos")
    bibi:wait_for_message()
    pugsy:head_look_at(nil)
    pugsy:say_line("/fopu138/")
    pugsy:run_chore(pu_argue_2look_bibi, "pu_argue.cos")
    pugsy:run_chore(pu_argue_2argue, "pu_argue.cos")
    pugsy:wait_for_message()
    bibi:say_line("/fobi139/")
    bibi:stop_looping_chore(bibi_talk_idles_angelic_loop, "bibi_talk_idles.cos")
    bibi:run_chore(bibi_talk_idles_end_angelic, "bibi_talk_idles.cos")
    bibi:stop_chore(bibi_talk_idles_end_angelic, "bibi_talk_idles.cos")
    bibi:push_costume("bibi_argue.cos")
    bibi:run_chore(bibi_argue_2look_pu, "bibi_argue.cos")
    bibi:run_chore(bibi_argue_2yell, "bibi_argue.cos")
    bibi:wait_for_message()
    manny:say_line("/foma140/")
    pugsy:head_look_at_manny()
    bibi:head_look_at_manny()
    bibi:play_chore(bibi_argue_yell2look_pu, "bibi_argue.cos")
    pugsy:play_chore(pu_argue_yell2look_bibi, "pu_argue.cos")
    bibi:wait_for_chore(bibi_argue_yell2look_pu, "bibi_argue.cos")
    bibi:play_chore(bibi_argue_look_pu2talk, "bibi_argue.cos")
    pugsy:wait_for_chore(pu_argue_yell2look_bibi, "pu_argue.cos")
    pugsy:run_chore(pu_argue_2talk, "pu_argue.cos")
    pugsy:pop_costume()
    pugsy:play_chore(pu_talk_idles_talkpos2, "pu_talk_idles.cos")
    bibi:wait_for_chore(bibi_argue_look_pu2talk, "bibi_argue.cos")
    bibi:pop_costume()
    bibi:play_chore(bibi_talk_idles_talk, "bibi_talk_idles.cos")
    pugsy:head_look_at_manny()
    bibi:head_look_at_manny()
    wait_for_message()
    sleep_for(1000)
    bibi:head_look_at(nil)
    bibi:start_crying()
    sleep_for(500)
    pugsy:head_look_at(nil)
    pugsy:start_crying()
    fo.fighting = FALSE
end
fo.exit_fight = function(arg1) -- line 581
    stop_script(fo.fight)
    if fo.fighting then
        fo.fighting = FALSE
        if not arg1 then
            bibi:wait_for_message()
            pugsy:wait_for_message()
        else
            bibi:shut_up()
            pugsy:shut_up()
        end
        bibi:stop_chore(nil, "bibi_argue.cos")
        bibi:play_chore(bibi_talk_idles_work_idle, "bibi_talk_idles.cos")
        pugsy:stop_chore(nil, "pu_argue.cos")
        pugsy:play_chore(pu_talk_idles_talkpos2, "pu_talk_idles.cos")
        bibi:pop_costume()
        pugsy:pop_costume()
    end
end
fo.kids_scream = function(arg1) -- line 607
    if bibi.work_task then
        start_script(bibi.kill_idle, bibi, TRUE)
    end
    if pugsy.work_task then
        start_script(pugsy.kill_idle, pugsy, TRUE)
    end
    if bibi.crying then
        start_script(bibi.exit_cry, bibi)
    end
    if pugsy.crying then
        start_script(bibi.exit_cry, bibi)
    end
    if fo.fighting then
        fo.exit_fight(TRUE)
    end
    start_script(pugsy.scream)
    start_script(bibi.scream)
end
pugsy.scream = function(arg1) -- line 617
    pugsy.screaming = TRUE
    pugsy:play_chore_looping(pu_talk_idles_cocky2, "pu_talk_idles.cos")
    pugsy:say_line("/fopu115/")
    pugsy:wait_for_message()
    pugsy:stop_chore(pu_talk_idles_cocky2, "pu_talk_idles.cos")
    pugsy:play_chore_looping(pu_talk_idles_cocky, "pu_talk_idles.cos")
    pugsy:say_line("/fopu117/")
    pugsy:wait_for_message()
    pugsy:stop_chore(pu_talk_idles_cocky, "pu_talk_idles.cos")
    pugsy:play_chore_looping(pu_talk_idles_cocky2, "pu_talk_idles.cos")
    pugsy:say_line("/fopu119/")
    pugsy:wait_for_message()
    pugsy.screaming = FALSE
    pugsy:stop_chore(pu_talk_idles_cocky, "pu_talk_idles.cos")
    pugsy:stop_chore(pu_talk_idles_cocky2, "pu_talk_idles.cos")
    pugsy:start_crying()
end
bibi.scream = function(arg1) -- line 636
    bibi.screaming = TRUE
    bibi:say_line("/fobi114/")
    bibi:fade_in_chore(bibi_talk_idles_talk2scream, "bibi_talk_idles.cos")
    bibi:play_chore_looping(bibi_talk_idles_scream_loop, "bibi_talk_idles.cos")
    bibi:wait_for_message()
    bibi:say_line("/fobi116/")
    bibi:wait_for_message()
    bibi:say_line("/fobi118/")
    bibi:wait_for_message()
    bibi:say_line("/fobi114/")
    bibi:wait_for_message()
    bibi:say_line("/fobi116/")
    bibi:wait_for_message()
    bibi:say_line("/fobi118/")
    bibi:wait_for_message()
    bibi:set_chore_looping(bibi_talk_idles_scream_loop, FALSE, "bibi_talk_idles.cos")
    bibi:fade_out_chore(bibi_talk_idles_scream_loop, "bibi_talk_idles.cos")
    bibi.screaming = FALSE
    bibi:start_crying()
end
fo.stop_scream = function() -- line 660
    stop_script(fo.kids_scream)
    stop_script(bibi.scream)
    stop_script(pugsy.scream)
    pugsy.screaming = FALSE
    bibi.screaming = FALSE
    pugsy:play_chore(pu_talk_idles_talkpos2, "pu_talk_idles.cos")
    bibi:play_chore(bibi_talk_idles_talk, "bibi_talk_idles.cos")
end
pugsy.jut_chin = function(arg1) -- line 676
    pugsy:play_chore(pu_talk_idles_gesture2, "pu_talk_idles.cos")
end
pugsy.un_jut_chin = function(arg1) -- line 680
    pugsy:play_chore(pu_talk_idles_gesture3, "pu_talk_idles.cos")
end
pugsy.point_hammer = function(arg1) -- line 684
    pugsy:play_chore(pu_talk_idles_cocky2, "pu_talk_idles.cos")
end
pugsy.roll_head = function(arg1) -- line 688
    pugsy:play_chore(pu_talk_idles_cocky, "pu_talk_idles.cos")
end
CheckFirstTime("ar.lua")
ar = Set:create("ar.set", "ashtray room", { ar_mecla = 0, ar_ovrhd = 1, ar_newws = 2 })
ar.shrinkable = 0.03
dofile("meche_island.lua")
ar.squeak_vol = 90
ar.talk_hector = function(arg1) -- line 18
    START_CUT_SCENE()
    meche:say_line("/armc001/")
    wait_for_message()
    manny:say_line("/arma002/")
    wait_for_message()
    meche:say_line("/armc003/")
    wait_for_message()
    meche:say_line("/armc004/")
    wait_for_message()
    meche:say_line("/armc005/")
    wait_for_message()
    manny:say_line("/arma006/")
    wait_for_message()
    END_CUT_SCENE()
end
ar.set_up_actors = function(arg1) -- line 35
    if not ashtray then
        ashtray = Actor:create(nil, nil, nil, "ashtray")
    end
    ashtray:put_in_set(ar)
    ashtray:follow_boxes()
    ashtray:set_costume("ashtray.cos")
    ashtray:ignore_boxes()
    ashtray:set_softimage_pos(-2.1789, 0, 0.5898)
    ashtray:setrot(0, 341.46, 0)
    ashtray:play_chore(0)
    ashtray:set_turn_rate(150)
    if ar.meche_here then
        meche:set_costume("meche_island.cos")
        meche:put_in_set(ar)
        meche:ignore_boxes()
        meche:setpos(-0.34239, -0.03539, 0)
        meche:setrot(0, 202.489, 0)
        meche:set_mumble_chore(meche_island_mumble)
        meche:set_talk_chore(1, meche_island_stop_talk)
        meche:set_talk_chore(2, meche_island_a)
        meche:set_talk_chore(3, meche_island_c)
        meche:set_talk_chore(4, meche_island_e)
        meche:set_talk_chore(5, meche_island_f)
        meche:set_talk_chore(6, meche_island_l)
        meche:set_talk_chore(7, meche_island_m)
        meche:set_talk_chore(8, meche_island_o)
        meche:set_talk_chore(9, meche_island_t)
        meche:set_talk_chore(10, meche_island_u)
        meche:set_head(5, 5, 5, 165, 28, 80)
        meche:set_look_rate(200)
        ar.meche_obj:make_touchable()
    else
        ar.meche_obj:make_untouchable()
    end
end
ar.meche_idle = function() -- line 75
    local local1
    ar.meche_idle_ok = TRUE
    meche_ash_idles = { meche_island_ash_gest1, meche_island_ash_drag, meche_island_ash_flick, meche_island_ash_file }
    while 1 do
        meche_is_distracted = FALSE
        if ar.meche_idle_ok then
            local1 = pick_one_of(meche_ash_idles, TRUE)
            if local1 == meche_island_ash_flick and ashtray.twisted and not ar.stockings_tossed then
                meche.burning = TRUE
                ar.stockings_tossed = TRUE
                START_CUT_SCENE()
                ar.stockings.owner = IN_THE_ROOM
                ar.wastebasket.has_hose = TRUE
                ar.ashtray_primed = TRUE
                meche:stop_chore(meche.last_chore)
                meche:play_chore(meche_island_ash_stckng)
                sleep_for(1000)
                manny:head_look_at(meche)
                meche:say_line("/armc040/")
                meche:wait_for_message()
                meche:wait_for_chore(meche_island_ash_stckng)
                meche:say_line("/armc041/")
                meche:wait_for_message()
                start_script(cut_scene.leg, cut_scene)
                ashtray:play_chore(0)
                wait_for_script(cut_scene.leg)
                ar:current_setup(ar_mecla)
                meche:say_line("/armc042/")
                meche:stop_chore(meche_island_ash_stocking)
                meche:play_chore(meche_island_toss_stckng)
                meche:wait_for_chore()
                meche:play_chore(meche_island_2talk)
                meche:wait_for_message()
                meche:say_line("/armc043/")
                meche:wait_for_message()
                meche:play_chore(meche_island_talk2base)
                meche:wait_for_chore()
                meche.burning = FALSE
                END_CUT_SCENE()
            elseif local1 == meche_island_ash_flick and ashtray.twisted then
                local1 = meche_island_ash_drag
            end
            meche:stop_chore(meche.last_chore)
            meche:play_chore(local1)
            meche.last_chore = local1
            meche:wait_for_chore()
        else
            break_here()
        end
    end
end
ar.greet_manny = function() -- line 130
    ar.greeted = TRUE
    soft_script()
    START_CUT_SCENE()
    meche:play_chore(meche_island_ash_flick)
    start_script(manny.head_follow_mesh, manny, meche, 7)
    manny:walkto(-0.109792, -0.184354, 0.01, 0, 63.2991, 0)
    meche:wait_for_chore()
    meche:play_chore(meche_island_2talk)
    meche:wait_for_chore()
    meche:play_chore(meche_island_talk_gest)
    meche:push_chore()
    meche:push_chore(meche_island_gest2talk)
    meche:push_chore()
    ar:current_setup(ar_mecla)
    meche:say_line("/armc007/")
    meche:wait_for_message()
    meche:push_chore(meche_island_talk2base)
    meche:say_line("/armc008/")
    meche:wait_for_message()
    meche:wait_for_chore(meche_island_talk2base)
    ar:current_setup(ar_newws)
    start_script(ar.meche_idle)
    stop_script(manny.head_follow_mesh)
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
ar.ashtray_fun = function(arg1) -- line 160
    local local1 = { "cigExM1.wav", "cigExM2.wav", "cigExM3.wav", "cigExM4.wav" }
    START_CUT_SCENE("no head")
    ar:current_setup(ar_mecla)
    manny:walkto(-0.12602399, -0.16829699, 0, 0, 63.278801, 0)
    manny:wait_for_actor()
    sleep_for(100)
    manny:play_chore(manny_idles_smoke1, "mn_wait_idles.cos")
    sleep_for(2814)
    start_sfx(pick_one_of(local1))
    manny:play_chore_looping(mn2_u, manny.base_costume)
    manny:wait_for_chore(manny_idles_smoke1)
    manny:stop_chore(mn2_u, manny.base_costume)
    manny:play_chore(mn2_stop_talk, manny.base_costume)
    manny:stop_chore(manny_idles_smoke1, "mn_wait_idles.cos")
    manny:play_chore(mn2_use_ashtray, "mn2.cos")
    sleep_for(469)
    ashtray.twisted = TRUE
    ashtray:play_chore(3)
    manny:wait_for_chore()
    sleep_for(500)
    ashtray.twisted = FALSE
    if meche.burning then
    elseif ar.meche_here then
        ar.meche_idle_ok = FALSE
        meche:wait_for_chore()
        meche:stop_chore(meche.last_chore)
        meche:play_chore(meche_island_ash_gest2)
        sleep_for(1800)
        ashtray:play_chore(1)
        meche:wait_for_chore()
        ar.meche_idle_ok = TRUE
        ar:current_setup(ar_newws)
    else
        manny:play_chore(mn2_reach_med, "mn2.cos")
        sleep_for(600)
        ashtray:play_chore(1)
        manny:wait_for_chore()
        manny:stop_chore(mn2_reach_med, "mn2.cos")
        ar:current_setup(ar_newws)
    end
    END_CUT_SCENE()
end
ar.update_music_state = function(arg1) -- line 215
    if meche.locked_up then
        return stateAR_PENSV
    elseif ar.meche_here then
        return stateAR
    else
        return stateAR_SCARY
    end
end
ar.enter = function(arg1) -- line 228
    if dr.reunited and not meche.locked_up then
        ar.meche_here = TRUE
    else
        ar.meche_here = FALSE
    end
    ar:set_up_actors()
    if ar.meche_here and not ar.greeted then
        start_script(ar.greet_manny)
    elseif ar.meche_here then
        start_script(ar.meche_idle)
    end
end
ar.exit = function(arg1) -- line 242
    ashtray:free()
    meche:free()
    stop_script(ar.meche_idle)
end
ar.stockings = Object:create(ar, "/artx009/pair of stockings", 0, 0, 0, { range = 0 })
ar.stockings.string_name = "stockings"
ar.stockings.owner = meche
ar.stockings.wav = "getRag.wav"
ar.stockings.lookAt = function(arg1) -- line 257
    manny:say_line("/arma010/")
end
ar.stockings.use = function(arg1) -- line 261
    soft_script()
    manny:say_line("/arma011/")
    wait_for_message()
    manny:say_line("/arma012/")
end
ar.stockings.default_response = function(arg1) -- line 268
    manny:say_line("/arma013/")
end
ar.books = Object:create(ar, "/artx014/books", 0.162431, 0.78079301, 0.43000001, { range = 0.69999999 })
ar.books.use_pnt_x = 0.0199003
ar.books.use_pnt_y = 0.40424699
ar.books.use_pnt_z = 0.0099999998
ar.books.use_rot_x = 0
ar.books.use_rot_y = 3.07318
ar.books.use_rot_z = 0
ar.books.lookAt = function(arg1) -- line 280
    manny:say_line("/arma015/")
    if ar.meche_here then
        START_CUT_SCENE()
        wait_for_message()
        meche:say_line("/armc016/")
        wait_for_message()
        meche:say_line("/armc017/")
        END_CUT_SCENE()
    end
end
ar.books.use = function(arg1) -- line 292
    if manny:walkto(arg1) then
        START_CUT_SCENE()
        manny:setrot(0, 3.05237, 0, TRUE)
        manny:wait_for_actor()
        manny:run_chore(mn2_reach_med, "mn2.cos")
        END_CUT_SCENE()
        system.default_response("locked")
        if fo.been_there then
            if system.locale == "EN_USA" then
                soft_script()
                wait_for_message()
                manny:say_line("/arma018/")
            end
        end
    end
end
ar.books.pickUp = ar.books.use
ar.meche_obj = Object:create(ar, "/artx019/Meche", -0.32756901, 0.110792, 0.31999999, { range = 0.60000002 })
ar.meche_obj.use_pnt_x = 0.0020753001
ar.meche_obj.use_pnt_y = 0.0132555
ar.meche_obj.use_pnt_z = 0
ar.meche_obj.use_rot_x = 0
ar.meche_obj.use_rot_y = -273.65701
ar.meche_obj.use_rot_z = 0
ar.meche_obj:make_untouchable()
ar.meche_obj.lookAt = function(arg1) -- line 323
    START_CUT_SCENE()
    manny:say_line("/arma020/")
    wait_for_message()
    meche:say_line("/armc021/")
    if not arg1.seen then
        arg1.seen = TRUE
        meche:wait_for_message()
        meche:say_line("/armc022/")
        meche:wait_for_message()
        meche:say_line("/armc023/")
        meche:wait_for_message()
        enable_head_control(FALSE)
        manny:head_look_at(nil)
        sleep_for(50)
        manny:say_line("/arma024/")
        manny:wait_for_message()
        manny:twist_head_gesture()
        manny:say_line("/arma025/")
    end
    END_CUT_SCENE()
end
ar.meche_obj.pickUp = function(arg1) -- line 346
    manny:say_line("/arma026/")
end
ar.meche_obj.use = function(arg1) -- line 350
    if mn.gun.owner == manny then
        arg1:use_gun()
    else
        Dialog:run("me2", "dlg_meche2.lua")
    end
end
ar.meche_obj.use_stockings = function(arg1) -- line 358
    soft_script()
    manny:say_line("/arma027/")
    wait_for_message()
    manny:say_line("/arma028/")
end
ar.meche_obj.use_hammer = function(arg1) -- line 365
    soft_script()
    if ar.talked_gun then
        manny:say_line("/arma029/")
        wait_for_message()
        manny:say_line("/arma030/")
    else
        manny:say_line("/arma031/")
        wait_for_message()
        manny:say_line("/arma032/")
    end
end
ar.meche_obj.use_chisel = function(arg1) -- line 378
    manny:say_line("/arma033/")
end
ar.meche_obj.use_gun = function(arg1) -- line 382
    START_CUT_SCENE()
    manny:walkto(-0.187047, -0.210992, 0, 0, 29.5186, 0)
    END_CUT_SCENE()
    start_script(cut_scene.hostage)
end
ar.meche_obj.use_scythe = function(arg1) -- line 389
    manny:say_line("/arma034/")
end
ar.ashtray = Object:create(ar, "/artx035/ash tray", -0.26756901, -0.109208, 0.15000001, { range = 0.60000002 })
ar.ashtray.use_pnt_x = -0.14907999
ar.ashtray.use_pnt_y = -0.22343799
ar.ashtray.use_pnt_z = 0.0099999998
ar.ashtray.use_rot_x = 0
ar.ashtray.use_rot_y = 336.112
ar.ashtray.use_rot_z = 0
ar.ashtray.lookAt = function(arg1) -- line 402
    soft_script()
    manny:say_line("/arma036/")
    if ar.meche_here then
        START_CUT_SCENE()
        wait_for_message()
        meche:say_line("/armc037/")
        END_CUT_SCENE()
    end
end
ar.ashtray.pickUp = function(arg1) -- line 413
    soft_script()
    manny:say_line("/arma038/")
end
ar.ashtray.use = function(arg1) -- line 418
    ar.ashtray_fun()
end
ar.wastebasket = Object:create(ar, "/artx044/wastebasket", 0.49836099, -0.109784, 0.1, { range = 0.60000002 })
ar.wastebasket.use_pnt_x = 0.170965
ar.wastebasket.use_pnt_y = -0.110754
ar.wastebasket.use_pnt_z = 0.0099999998
ar.wastebasket.use_rot_x = 0
ar.wastebasket.use_rot_y = -137.258
ar.wastebasket.use_rot_z = 0
ar.wastebasket.lookAt = function(arg1) -- line 432
    if arg1.has_hose then
        arg1.has_hose = FALSE
        ar.stockings:get()
        cur_puzzle_state[37] = TRUE
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        ar:current_setup(ar_newws)
        manny:wait_for_actor()
        manny:play_chore(mn2_reach_low, "mn2.cos")
        sleep_for(800)
        manny:play_chore_looping(mn2_activate_stockings, "mn2.cos")
        manny.is_holding = ar.stockings
        manny.hold_chore = mn2_activate_stockings
        manny:fade_in_chore(mn2_hold, "mn2.cos")
        manny:wait_for_chore(mn2_reach_low, "mn2.cos")
        manny:stop_chore(mn2_reach_low, "mn2.cos")
        manny:say_line("/arma045/")
        if ar.meche_here then
            wait_for_message()
            meche:say_line("/armc046/")
            wait_for_message()
            manny:say_line("/arma047/")
            put_away_held_item()
            wait_for_message()
            ar:current_setup(ar_mecla)
            manny:setrot(0, 81.1508, 0, TRUE)
            manny:say_line("/arma048/")
            wait_for_message()
            meche:say_line("/armc049/")
            wait_for_message()
            manny:say_line("/arma050/")
            ar:current_setup(ar_newws)
        end
        END_CUT_SCENE()
    else
        soft_script()
        system.default_response("empty")
        if ar.meche_here then
            wait_for_message()
            meche:say_line("/armc051/")
        end
    end
end
ar.wastebasket.pickUp = ar.wastebasket.lookAt
ar.wastebasket.use = ar.wastebasket.lookAt
ar.vd_door = Object:create(ar, "/artx138/door", -0.85174799, -1.1703, 0.0099999998, { range = 0 })
ar.vd_door.use_pnt_x = -0.535748
ar.vd_door.use_pnt_y = -0.55030102
ar.vd_door.use_pnt_z = 0.0099999998
ar.vd_door.use_rot_x = 0
ar.vd_door.use_rot_y = 154.71899
ar.vd_door.use_rot_z = 0
ar.vd_door.out_pnt_x = -0.74861699
ar.vd_door.out_pnt_y = -1.00138
ar.vd_door.out_pnt_z = 0.0099999998
ar.vd_door.out_rot_x = 0
ar.vd_door.out_rot_y = 154.71899
ar.vd_door.out_rot_z = 0
ar.vd_box = ar.vd_door
ar.vd_door.walkOut = function(arg1) -- line 503
    vd:come_out_door(vd.ar_door)
end
ar.dr_door = Object:create(ar, "/artx054/door", 0.56942999, 0.181225, 0.43000001, { range = 0.60000002 })
ar.dr_door.use_pnt_x = 0.329431
ar.dr_door.use_pnt_y = 0.181225
ar.dr_door.use_pnt_z = 0
ar.dr_door.use_rot_x = 0
ar.dr_door.use_rot_y = -74.444504
ar.dr_door.use_rot_z = 0
ar.dr_door.out_pnt_x = 0.52498901
ar.dr_door.out_pnt_y = 0.224981
ar.dr_door.out_pnt_z = 0
ar.dr_door.out_rot_x = 0
ar.dr_door.out_rot_y = -77.236099
ar.dr_door.out_rot_z = 0
ar.dr_box = ar.dr_door
ar.dr_door.lookAt = function(arg1) -- line 525
    if dr.reunited then
        manny:say_line("/arma055/")
    else
        manny:say_line("/arma056/")
    end
end
ar.dr_door.walkOut = function(arg1) -- line 533
    if dr.reunited then
        if not ar.talked_hector and ar.meche_obj.touchable then
            ar:talk_hector()
        end
        dr:come_out_door(dr.ar_door)
    else
        start_script(cut_scene.reunion)
    end
end
arm_actor_Chore0 = 0
ashtray_in_place_hold = 0
ashtray_2in_place = 1
ashtray_out_place_hold = 2
ashtray_2out_place = 3
ashtray_mn_use = 4
CheckFirstTime("at.lua")
at = Set:create("at.set", "albinizod tunnel", { at_ledbw = 0, at_albcu = 1, at_intbw = 2, at_ovrhd = 3 })
dofile("alb_idles.lua")
dofile("alb_roar.lua")
dofile("msb_jump_off.lua")
dofile("msb_ladder_generic.lua")
dofile("bonewagon_alb.lua")
dofile("bonewagon_cc.lua")
at.bw_idle_vol = 30
at.mess_with_alligator = function() -- line 21
    manny:say_line("/atma001/")
    wait_for_message()
    manny:say_line("/atma002/")
end
at.locate_actors = function(arg1) -- line 28
    while 1 do
        at.bone_wagon.interest_actor:setpos(glottis:getpos())
        at.albinizod_obj.interest_actor:setpos(zod:getpos())
        break_here()
    end
end
ZOD_PROX = 2.5
zod_set_to_pin = FALSE
IN_BW = 0
ON_LEDGE = 1
PAST_ZOD = 2
ON_GROUND = 3
ON_LEDGE = 4
at.manny_state = nil
at.solve_puzzle = function(arg1) -- line 57
    albinizod_pinned = TRUE
    cur_puzzle_state[53] = TRUE
    stop_script(at.zod_brain)
    stop_script(at.zod_follow_bw)
    stop_script(at.watch_for_chase)
    MakeSectorActive("puzzle_solved", TRUE)
    start_sfx("atBWlnd.wav")
    START_CUT_SCENE()
    sleep_for(500)
    zod:setrot(0, 0, 0)
    at:current_setup(at_intbw)
    END_CUT_SCENE()
    start_script(at.zod_pinned)
end
at.zod_pinned = function(arg1) -- line 76
    zod_set_to_pin = FALSE
    zod:stop_chore()
    zod:play_chore(alb_idles_start_trap)
    zod:wait_for_chore()
    zod:play_chore(alb_idles_trap_loop)
    zod:wait_for_chore()
    while 1 do
        zod:blend(alb_idles_trap_loop, alb_idles_end_trap, 300)
        zod:wait_for_chore(alb_idles_trap_loop)
        zod:blend(alb_idles_end_trap, alb_idles_trap_loop, 300)
        zod:wait_for_chore(alb_idles_end_trap)
    end
    music_state:update()
end
at.wait_here = function(arg1, arg2) -- line 92
    repeat
        sleep_for(10)
        if at.manny_trigger_zod or find_script(at.drive_forward) then
            arg2 = 0
        else
            arg2 = arg2 - 1
        end
    until arg2 <= 0
end
at.zod_brain = function() -- line 103
    local local1
    local local2 = { }
    while 1 do
        at.manny_trigger_zod = FALSE
        while not at.manny_trigger_zod do
            break_here()
            if zod.walking then
                while zod.walking do
                    break_here()
                end
            elseif not find_script(at.drive_forward) then
                zod.up = TRUE
                zod:thaw()
                ForceRefresh()
                zod:play_chore(alb_idles_start_snap)
                zod:wait_for_chore()
                zod:stop_chore(alb_idles_start_snap)
                local1 = 1
                repeat
                    zod:play_chore(alb_idles_snap_loop)
                    zod:wait_for_chore()
                    local1 = local1 - 1
                    if at.manny_trigger_zod or find_script(at.drive_forward) then
                        local1 = 0
                    end
                until local1 <= 0
                zod:stop_chore(alb_idles_snap_loop)
                zod:play_chore(alb_idles_end_snap)
                zod:wait_for_chore()
                zod:stop_chore(alb_idles_end_snap)
                zod:play_chore(alb_idles_idle)
                zod:freeze()
                at:wait_here(rnd(10, 50))
                zod.up = FALSE
            end
            break_here()
        end
        START_CUT_SCENE()
        zod:thaw()
        ForceRefresh()
        stop_script(at.zod_follow_bw)
        zod:play_chore(alb_idles_sit_up)
        zod:wait_for_chore()
        zod:stop_chore(alb_idles_sit_up)
        zod:play_chore(alb_idles_turn)
        zod:wait_for_chore()
        at:current_setup(at_albcu)
        zod:setrot(0, 180, 0)
        zod:stop_chore(alb_idles_turn)
        zod:play_chore(alb_idles_idle)
        zod:setpos(0, 2.96925, 0)
        sleep_for(1000)
        at:current_setup(at_intbw)
        start_script(at.watch_for_chase)
        END_CUT_SCENE()
        local2 = manny:getpos()
        while local2.y < 3.5 do
            if glottis.bonewagon_up then
                zod_set_to_pin = TRUE
            end
            repeat
                zod:head_look_at_manny()
                local2 = manny:getpos()
                break_here()
            until local2.y > 0.2
            zod:head_look_at(nil)
            zod:play_chore(alb_idles_start_snap)
            zod:wait_for_chore()
            zod:stop_chore(alb_idles_start_snap)
            zod:play_chore_looping(alb_idles_snap_loop)
            while local2.y < 3.5 and local2.y > 0.2 do
                local2 = manny:getpos()
                break_here()
            end
            zod:set_chore_looping(alb_idles_snap_loop, FALSE)
            zod:wait_for_chore(alb_idles_snap_loop)
            zod:stop_chore(alb_idles_snap_loop)
            zod:play_chore(alb_idles_end_snap)
            zod:wait_for_chore()
            zod:stop_chore(alb_idles_end_snap)
            zod:play_chore(alb_idles_idle)
        end
        zod_set_to_pin = FALSE
        START_CUT_SCENE()
        zod:stop_chore(alb_idles_idle)
        zod:set_walk_rate(0.5)
        repeat
            zod:walk_forward()
            break_here()
        until zod:find_sector_name("turn_trigger")
        zod:play_chore(alb_idles_sit_up)
        zod:wait_for_chore()
        zod:stop_chore(alb_idles_sit_up)
        zod:play_chore(alb_idles_turn)
        zod:wait_for_chore()
        zod:setrot(0, 0, 0)
        zod:stop_chore(alb_idles_turn)
        stop_script(at.watch_for_chase)
        start_script(at.zod_follow_bw)
        END_CUT_SCENE()
    end
end
at.manny_escape = function() -- line 216
    local local1 = manny:getpos()
    stop_script(at.watch_manny)
    repeat
        manny:climb_up()
        local1 = manny:getpos()
    until local1.z >= 1.3
    manny:stop_climb_ladder()
    manny:runto(0.69999999, 5.875, 1.3)
    manny:wait_for_actor()
    start_script(at.watch_manny)
end
at.watch_for_chase = function(arg1) -- line 229
    repeat
        break_here()
    until manny:find_sector_name("chase_trigger")
    stop_script(at.zod_brain)
    zod_set_to_pin = FALSE
    START_CUT_SCENE()
    zod:set_walk_rate(1)
    zod:stop_chore()
    start_script(at.manny_escape)
    zod:walkto(-0.2, 0.64999998, 0, 0, 180, 0)
    zod:wait_for_actor()
    zod:play_chore(alb_idles_start_snap)
    zod:wait_for_chore()
    zod:stop_chore(alb_idles_start_snap)
    local local1 = 2
    repeat
        zod:play_chore(alb_idles_snap_loop)
        zod:wait_for_chore()
        local1 = local1 - 1
    until local1 == 0
    zod:stop_chore(alb_idles_snap_loop)
    zod:play_chore(alb_idles_end_snap)
    zod:wait_for_chore()
    zod:stop_chore(alb_idles_end_snap)
    zod:play_chore(alb_idles_idle)
    manny:wait_for_actor()
    zod:play_chore(alb_idles_sit_up)
    zod:wait_for_chore()
    zod:stop_chore(alb_idles_sit_up)
    zod:play_chore(alb_idles_turn)
    zod:wait_for_chore()
    zod:setrot(0, 0, 0)
    zod:stop_chore(alb_idles_turn)
    start_script(at.zod_follow_bw)
    start_script(at.zod_brain)
    END_CUT_SCENE()
end
at.zod_follow_bw = function(arg1) -- line 268
    local local1 = FALSE
    while 1 do
        if proximity(glottis, zod) < 2.9000001 and not zod.up or not local1 then
            local1 = TRUE
            zod:thaw()
            ForceRefresh()
            zod.walking = TRUE
            start_sfx("alFS.imu")
            repeat
                zod:set_walk_rate(-0.5)
                zod:walk_forward()
                break_here()
            until proximity(glottis, zod) >= 2.9000001
            zod:freeze()
        elseif proximity(glottis, zod) > 3 and not zod.up then
            zod.walking = TRUE
            zod:thaw()
            ForceRefresh()
            start_sfx("alFS.imu")
            repeat
                zod:set_walk_rate(0.5)
                zod:walk_forward()
                break_here()
            until proximity(glottis, zod) <= 2.9000001
            zod:freeze()
        else
            zod.walking = FALSE
            break_here()
        end
        stop_sound("alFS.imu")
    end
end
at.toggle_remote = function(arg1) -- line 311
    START_CUT_SCENE()
    stop_script(at.drive_forward)
    stop_script(at.drive_backward)
    at.glottis_pos = glottis:getpos()
    at.zod_pos = zod:getpos()
    at.zod_rot = zod:getrot()
    glottis:free()
    zod:free()
    stop_script(at.watch_manny)
    stop_script(at.locate_actors)
    stop_script(at.zod_follow_bw)
    stop_script(at.zod_pinned)
    stop_script(at.zod_brain)
    at_cut:switch_to_set()
    if manny.is_holding then
        if manny.fancy then
            mannys_hands:play_chore(mcc_inv_remote_in)
            mannys_hands:wait_for_chore()
            manny.is_holding = nil
            mannys_hands:play_chore(mcc_inv_empty_hand_out)
            mannys_hands:wait_for_chore()
        else
            mannys_hands:play_chore(msb_inv_remote_in)
            mannys_hands:wait_for_chore()
            manny.is_holding = nil
            mannys_hands:play_chore(msb_inv_mt_hand_out)
            mannys_hands:wait_for_chore()
        end
    elseif manny.fancy then
        mannys_hands:play_chore(mcc_inv_empty_hand_in)
        mannys_hands:wait_for_chore()
        manny.is_holding = sh.remote
        mannys_hands:play_chore(mcc_inv_remote_out)
        mannys_hands:wait_for_chore()
    else
        mannys_hands:play_chore(msb_inv_mt_hand_in)
        mannys_hands:wait_for_chore()
        manny.is_holding = sh.remote
        mannys_hands:play_chore(msb_inv_remote_out)
        mannys_hands:wait_for_chore()
    end
    at_cut:return_to_set()
    at.manny_state = IN_BW
    at:enter()
    END_CUT_SCENE()
end
at_cut = { }
at_cut.set_up_actors = function(arg1, arg2) -- line 372
    local local1
    local local2
    if DEMO then
        local1 = "demo_inv.cos"
    elseif manny.costume_state == "suit" then
        local1 = "inventory.cos"
    elseif manny.costume_state == "action" then
        local1 = "action_inv.cos"
    elseif manny.costume_state == "cafe" then
        local1 = "cafe_inv.cos"
    elseif manny.costume_state == "nautical" then
        local1 = "mn_inv.cos"
    elseif manny.costume_state == "siberian" or manny.costume_state == "thunder" then
        if manny.fancy then
            local1 = "mcc_inv.cos"
        else
            local1 = "msb_inv.cos"
        end
    end
    if not mannys_hands then
        mannys_hands = Actor:create(nil, nil, nil, "/sytx188/")
    end
    mannys_hands:set_costume(local1)
    mannys_hands:put_in_set(arg2)
    mannys_hands:moveto(0, 0, 0)
    mannys_hands:setrot(0, 180, 0)
end
at_cut.switch_to_set = function(arg1) -- line 404
    local local1
    local local2, local3
    system:lock_display()
    system.lastSet = system.currentSet
    inventory_save_set = system.currentSet
    LockSet(system.currentSet.setFile)
    if manny.fancy then
        local1 = charlie_inv
    else
        local1 = siberian_inv
    end
    MakeCurrentSet(local1.setFile)
    at_cut:set_up_actors(local1)
    system.currentSet = local1
    if system.ambientLight then
        SetAmbientLight(system.ambientLight)
    end
    zod:put_in_set(at)
    system:unlock_display()
end
at_cut.return_to_set = function(arg1) -- line 432
    mannys_hands:free()
    system.currentSet = inventory_save_set
    UnLockSet(inventory_save_set.setFile)
    MakeCurrentSet(inventory_save_set.setFile)
    zod:put_in_set(at)
end
at.drive_backward = function(arg1) -- line 444
    local local1 = { }
    glottis:thaw()
    ForceRefresh()
    while 1 do
        local1 = glottis:getpos()
        local1.y = local1.y + PerSecond(0.5)
        glottis:setpos(local1)
        break_here()
    end
end
at.drive_forward = function(arg1) -- line 456
    glottis:thaw()
    ForceRefresh()
    while 1 do
        if proximity(glottis, zod) > 3 or not glottis:find_sector_name("close_enough") then
            pos = glottis:getpos()
            pos.y = pos.y - PerSecond(0.5)
            glottis:setpos(pos)
        end
        break_here()
    end
end
at.hot_key_pressed = function(arg1, arg2) -- line 469
    local local1
    if shiftKeyDown then
        if arg2 == KEY1 then
            local1 = Inventory.ordered_inventory_table[10]
        elseif arg2 == KEY2 then
            local1 = Inventory.ordered_inventory_table[11]
        elseif arg2 == KEY3 then
            local1 = Inventory.ordered_inventory_table[12]
        elseif arg2 == KEY4 then
            local1 = Inventory.ordered_inventory_table[13]
        elseif arg2 == KEY5 then
            local1 = Inventory.ordered_inventory_table[14]
        elseif arg2 == KEY6 then
            local1 = Inventory.ordered_inventory_table[15]
        elseif arg2 == KEY7 then
            local1 = Inventory.ordered_inventory_table[16]
        elseif arg2 == KEY8 then
            local1 = Inventory.ordered_inventory_table[17]
        elseif arg2 == KEY9 then
            local1 = Inventory.ordered_inventory_table[18]
        end
    elseif arg2 == KEY1 then
        local1 = Inventory.ordered_inventory_table[1]
    elseif arg2 == KEY2 then
        local1 = Inventory.ordered_inventory_table[2]
    elseif arg2 == KEY3 then
        local1 = Inventory.ordered_inventory_table[3]
    elseif arg2 == KEY4 then
        local1 = Inventory.ordered_inventory_table[4]
    elseif arg2 == KEY5 then
        local1 = Inventory.ordered_inventory_table[5]
    elseif arg2 == KEY6 then
        local1 = Inventory.ordered_inventory_table[6]
    elseif arg2 == KEY7 then
        local1 = Inventory.ordered_inventory_table[7]
    elseif arg2 == KEY8 then
        local1 = Inventory.ordered_inventory_table[8]
    elseif arg2 == KEY9 then
        local1 = Inventory.ordered_inventory_table[9]
    end
    if local1 then
        if local1 ~= sh.remote then
            system.default_response("not now")
        else
            start_script(at.toggle_remote)
        end
    end
end
at_bw_handler = function(arg1, arg2, arg3) -- line 523
    shiftKeyDown = GetControlState(LSHIFTKEY) or GetControlState(RSHIFTKEY)
    altKeyDown = GetControlState(LALTKEY) or GetControlState(RALTKEY)
    controlKeyDown = GetControlState(LCONTROLKEY) or GetControlState(RCONTROLKEY)
    if arg1 == EKEY and controlKeyDown and arg2 and DeveloperMode then
        start_script(execute_user_command)
        bHandled = TRUE
    elseif control_map.LOOK_AT[arg1] and arg2 and cutSceneLevel == 0 then
        if manny.is_holding then
            start_script(sh.remote.lookAt)
        else
            start_script(at.ledge.lookAt)
        end
    elseif control_map.PICK_UP[arg1] and arg2 and cutSceneLevel == 0 and manny.is_holding then
        start_script(at.toggle_remote)
    elseif control_map.USE[arg1] and arg2 and cutSceneLevel == 0 then
        if manny.is_holding then
            start_script(Sentence, "use", manny.is_holding)
        else
            start_script(at.ledge.use)
        end
    elseif control_map.MOVE_BACKWARD[arg1] and cutSceneLevel == 0 then
        if arg2 then
            start_script(at.drive_backward)
        else
            stop_script(at.drive_backward)
            glottis:freeze()
        end
    elseif control_map.MOVE_FORWARD[arg1] and cutSceneLevel == 0 then
        if arg2 then
            start_script(at.drive_forward)
        else
            stop_script(at.drive_forward)
            glottis:freeze()
        end
    elseif control_map.INVENTORY[arg1] and arg2 and cutSceneLevel == 0 then
        start_script(at.toggle_remote)
    elseif arg1 == KEY1 and arg2 or (arg1 == KEY2 and arg2) or (arg1 == KEY3 and arg2) or (arg1 == KEY4 and arg2) or (arg1 == KEY5 and arg2) or (arg1 == KEY6 and arg2) or (arg1 == KEY7 and arg2) or (arg1 == KEY8 and arg2) or (arg1 == KEY9 and arg2) or (arg1 == EQUALSKEY and arg2) or (arg1 == MINUSKEY and arg2) then
        start_script(at.hot_key_pressed, at, arg1)
    else
        CommonButtonHandler(arg1, arg2, arg3)
    end
end
at.start_in_bw = function(arg1) -- line 578
    manny:set_visibility(FALSE)
    system.currentActor = glottis
    inventory_save_handler = system.buttonHandler
    system.buttonHandler = at_bw_handler
    if manny.fancy then
        glottis:play_chore(bonewagon_cc_ma_sit)
    else
        glottis:play_chore(bonewagon_gl_ma_sit)
    end
end
at.start_at_bw = function(arg1) -- line 590
    START_CUT_SCENE()
    manny:set_visibility(FALSE)
    system.currentActor = glottis
    inventory_save_handler = system.buttonHandler
    system.buttonHandler = at_bw_handler
    at:current_setup(at_intbw)
    if glottis.bonewagon_up then
        sleep_for(800)
        sh.remote:lower()
    end
    glottis:thaw()
    glottis:play_chore(bonewagon_alb_ma_jump_in)
    glottis:wait_for_chore(bonewagon_alb_ma_jump_in)
    glottis:stop_chore(bonewagon_alb_ma_jump_in)
    glottis:play_chore(bonewagon_alb_ma_sit)
    END_CUT_SCENE()
end
at.start_at_ladder = function(arg1) -- line 609
end
at.zod_pinned_at_start = function(arg1) -- line 612
    glottis:setpos(-0.15, 4.45, 0)
    zod:setpos(-0.15, 2.96925, 0)
    zod:setrot(0, -360, 0)
    start_script(at.zod_pinned)
end
at.set_up_actors = function(arg1) -- line 619
    if not zod then
        zod = Actor:create(nil, nil, nil, "Albinizod")
    end
    zod:set_costume("alb_idles.cos")
    zod:put_in_set(at)
    if at.zod_pos then
        zod:setpos(at.zod_pos)
        zod:setrot(at.zod_rot)
    else
        zod:setpos(0.2, 0.2, 0)
        zod:setrot(0, 0, 0)
    end
    zod:set_walk_chore(alb_idles_walk)
    zod:follow_boxes()
    zod:set_head(3, 3, 3, 50, 50, 50)
    if manny.costume_state == "thunder" then
        if manny.fancy then
            glottis:set_costume("bonewagon_cc.cos")
        else
            glottis:set_costume("bonewagon_thunder.cos")
        end
    else
        glottis:set_costume("bonewagon_alb.cos")
    end
    glottis:put_in_set(at)
    glottis:set_visibility(TRUE)
    glottis:set_mumble_chore(bonewagon_gl_gl_mumble)
    glottis:set_talk_chore(1, bonewagon_gl_stop_talk)
    glottis:set_talk_chore(2, bonewagon_gl_a)
    glottis:set_talk_chore(3, bonewagon_gl_c)
    glottis:set_talk_chore(4, bonewagon_gl_e)
    glottis:set_talk_chore(5, bonewagon_gl_f)
    glottis:set_talk_chore(6, bonewagon_gl_l)
    glottis:set_talk_chore(7, bonewagon_gl_m)
    glottis:set_talk_chore(8, bonewagon_gl_o)
    glottis:set_talk_chore(9, bonewagon_gl_t)
    glottis:set_talk_chore(10, bonewagon_gl_u)
    if at.glottis_pos then
        glottis:setpos(at.glottis_pos)
    else
        glottis:setpos({ x = -0.15, y = 6.235, z = 0 })
    end
    glottis:setrot(0, 180, 0)
    glottis:follow_boxes()
    glottis:play_chore(bonewagon_gl_gl_cvr_eyes_hold)
    if glottis.bonewagon_up then
        glottis:play_chore(bonewagon_gl_stay_up)
    end
end
at.update_music_state = function(arg1) -- line 671
    if albinizod_pinned then
        return stateAT_TRAP
    else
        return stateAT
    end
end
at.enter = function(arg1) -- line 680
    single_start_sfx("bwIdle.IMU", IM_HIGH_PRIORITY, at.bw_idle_vol)
    at:set_up_actors()
    start_script(at.watch_manny)
    if not albinizod_pinned then
        MakeSectorActive("puzzle_solved", FALSE)
        start_script(at.zod_follow_bw)
        start_script(at.zod_brain)
    else
        MakeSectorActive("puzzle_solved", TRUE)
        at.zod_pinned_at_start()
    end
    start_script(at.locate_actors)
    if at.manny_state == IN_BW then
        start_script(at.start_in_bw)
    elseif at.manny_state == ON_GROUND then
        start_script(at.start_at_bw)
    elseif at.manny_state == PAST_ZOD then
        start_script(at.start_at_ladder)
    end
end
at.exit = function(arg1) -- line 704
    at.glottis_pos = glottis:getpos()
    at.zod_pos = zod:getpos()
    at.zod_rot = zod:getrot()
    glottis:free()
    zod:free()
    stop_script(at.watch_manny)
    stop_script(at.locate_actors)
    stop_script(at.zod_follow_bw)
    stop_script(at.zod_pinned)
    stop_script(at.zod_brain)
    stop_sound("alFs.imu")
    stop_sound("bwIdle.imu")
end
at.bone_wagon = Object:create(at, "/attx003/Bone Wagon", 0, 0, 0, { range = 2 })
at.bone_wagon.string_name = "at_wagon"
at.bone_wagon.lookAt = function(arg1) -- line 729
    manny:say_line("/atma004/")
    wait_for_message()
    manny:say_line("/atma005/")
end
at.bone_wagon.use = function(arg1) -- line 735
    if albinizod_pinned then
        system.default_response("not now")
    elseif not at.ledge.touchable then
        START_CUT_SCENE()
        at:current_setup(at_albcu)
        manny:ignore_boxes()
        manny:setpos(0.619514, 5.84285, 1.135)
        manny:setrot(0, -301.164, 0)
        if manny.fancy then
            manny:push_costume("mcc_jump_off.cos")
        else
            manny:push_costume("msb_jump_off.cos")
        end
        manny:play_chore(msb_jump_off_jump_off)
        sleep_for(2010)
        manny:pop_costume()
        at:current_setup(at_intbw)
        at:start_in_bw()
        at.ledge.touchable = TRUE
        END_CUT_SCENE()
    end
end
at.ledge = Object:create(at, "/attx006/catwalk", 0, 0, 0, { range = 2 })
at.ledge.lookAt = function(arg1) -- line 761
    manny:say_line("/atma007/")
end
at.ledge.use = function(arg1) -- line 765
    local local1 = glottis:getpos()
    local local2 = glottis:getrot()
    local local3 = { }
    local local4 = { x = -0.74551398, y = 0.247446, z = 0 }
    if glottis.bonewagon_up then
        if glottis:find_sector_name("close_enough") then
            START_CUT_SCENE()
            manny:ignore_boxes()
            manny:setpos(local1.x + 0.014, local1.y + 1.5453, local1.z + 1.4126)
            manny:setrot(local2)
            if manny.fancy then
                manny:push_costume("mcc_jump_off.cos")
            else
                manny:push_costume("msb_jump_off.cos")
            end
            manny:set_visibility(TRUE)
            if manny.fancy then
                glottis:play_chore(bonewagon_cc_hide_ma)
            else
                glottis:play_chore(bonewagon_gl_hide_ma)
            end
            manny:play_chore(msb_jump_off_stand_up)
            manny:wait_for_chore()
            manny:play_chore(msb_jump_off_turn)
            manny:wait_for_chore()
            at:current_setup(at_albcu)
            glottis:freeze()
            manny:play_chore(msb_jump_off_jump_off)
            sleep_for(500)
            repeat
                local1 = manny:getpos()
                local1.z = local1.z - PerSecond(0.050000001)
                if local1.z < 1.3 then
                    local1.z = 1.3
                end
                manny:setpos(local1)
            until local1.z == 1.3
            manny:wait_for_chore()
            start_sfx("fs3mtrr2.wav")
            sleep_for(100)
            start_sfx("fs3mtrr1.wav")
            local2 = manny:getrot()
            local3 = RotateVector(local4, local2)
            local1 = manny:getpos()
            local3.x = local3.x + local1.x
            local3.y = local3.y + local1.y
            local3.z = local3.z + local1.z
            manny:setpos(local3)
            manny:setrot(0, local2.y + 342.543, 0)
            manny:pop_costume()
            manny:follow_boxes()
            system.currentActor = manny
            system.buttonHandler = SampleButtonHandler
            at.ledge:make_untouchable()
            at:current_setup(at_intbw)
            manny:stop_chore(msb_hold, manny.base_costume)
            glottis:thaw()
            ForceRefresh()
            END_CUT_SCENE()
        else
            manny:say_line("/atma007/")
            manny:wait_for_message()
            manny:say_line("/hama102/")
            manny:wait_for_message()
            system.default_response("reach")
        end
    else
        manny:say_line("/vima052/")
    end
end
at.albinizod_obj = Object:create(at, "/attx008/cave-gator", -0.20827, 1.20654, 0, { range = 2 })
at.albinizod_obj.use_pnt_x = -0.20827
at.albinizod_obj.use_pnt_y = 1.78654
at.albinizod_obj.use_pnt_z = 0
at.albinizod_obj.use_rot_x = 0
at.albinizod_obj.use_rot_y = -1976.1899
at.albinizod_obj.use_rot_z = 0
at.albinizod_obj.string_name = "gator"
at.albinizod_obj.lookAt = function(arg1) -- line 855
    if albinizod_pinned then
        manny:say_line("/atma009/")
    else
        manny:say_line("/atma010/")
        wait_for_message()
        manny:say_line("/atma011/")
        manny:point_gesture()
    end
end
at.albinizod_obj.use = function(arg1) -- line 866
    soft_script()
    manny:say_line("/atma012/")
    wait_for_message()
    manny:say_line("/atma013/")
end
at.ladder_base = Object:create(at, "", 0, 0, 0, { range = 0 })
at.ladder_top = Object:create(at, "", 0, 0, 0, { range = 0 })
at.ladder_base.use_pnt_x = 0.40000001
at.ladder_base.use_pnt_y = -0.58347303
at.ladder_base.use_pnt_z = 0
at.ladder_base.use_rot_x = 0
at.ladder_base.use_rot_y = -98.119102
at.ladder_base.use_rot_z = 0
at.ladder_base.out_pnt_x = 0.27092001
at.ladder_base.out_pnt_y = -0.60680401
at.ladder_base.out_pnt_z = 0
at.ladder_base.out_rot_x = 0
at.ladder_base.out_rot_y = 107.629
at.ladder_base.out_rot_z = 0
at.ladder_top.use_pnt_x = 0.475889
at.ladder_top.use_pnt_y = -0.58347303
at.ladder_top.use_pnt_z = 1.3
at.ladder_top.use_rot_x = 0
at.ladder_top.use_rot_y = -98.119102
at.ladder_top.use_rot_z = 0
at.watch_manny = function() -- line 899
    local local1 = { }
    local local2
    while 1 do
        local1 = manny:getpos()
        if manny.is_climbing and local1.z <= 0 and albinizod_pinned then
            local2 = start_script(at.get_off_ladder, at, "bottom")
            wait_for_script(local2)
        elseif manny.is_climbing and local1.z >= 0.70599997 then
            local2 = start_script(at.get_off_ladder, at, "top")
            wait_for_script(local2)
        elseif not manny.is_climbing and manny:find_sector_name("top") and local1.z == 1.3 then
            local2 = start_script(at.get_on_ladder, at, "top")
            wait_for_script(local2)
        elseif not manny.is_climbing and manny:find_sector_name("bottom") and local1.z == 0 then
            local2 = start_script(at.get_on_ladder, at, "bottom")
            wait_for_script(local2)
        end
        break_here()
    end
end
at.get_on_ladder = function(arg1, arg2) -- line 921
    manny.is_climbing = TRUE
    if arg2 == "top" then
        START_CUT_SCENE()
        at.manny_trigger_zod = TRUE
        inventory_disabled = TRUE
        manny:walkto(0.43637, -0.605, 1.3, 0, -95.9144, 0)
        manny:wait_for_actor()
        if manny.fancy then
            manny:push_costume("mcc_ladder_generic.cos")
        else
            manny:push_costume("msb_ladder_generic.cos")
        end
        manny:play_chore(msb_ladder_generic_mount_ladder)
        manny:wait_for_chore()
        manny:ignore_boxes()
        manny:setpos(0.38637, -0.605, 1)
        manny:play_chore(msb_ladder_generic_post_mount)
        manny:wait_for_chore()
        manny.climb_chore = ma_ladder_generic_climb_down2
        manny.costume_marker_handler = arg1.ladder_marker_handler
        manny:setpos({ x = 0.38637, y = -0.595, z = 0.706 })
        manny:stop_chore(msb_ladder_generic_post_mount)
        manny:climb_down()
        END_CUT_SCENE()
    elseif arg2 == "bottom" then
        START_CUT_SCENE()
        manny:walkto_object(at.ladder_base)
        manny:wait_for_actor()
        manny:start_climb_ladder()
        manny:climb_up()
        manny:climb_up()
        manny:climb_up()
        END_CUT_SCENE()
    end
end
at.get_off_ladder = function(arg1, arg2) -- line 959
    START_CUT_SCENE()
    if arg2 == "top" then
        manny.is_climbing = FALSE
        stop_script(manny.climb_up)
        stop_script(manny.climb_down)
        stop_script(climb_actor_up)
        stop_script(climb_actor_down)
        manny:stop_chore(ma_ladder_generic_climb1)
        manny:stop_chore(ma_ladder_generic_climb2)
        manny:stop_chore(ma_ladder_generic_climb_down1)
        manny:stop_chore(ma_ladder_generic_climb_down2)
        manny:setpos(0.43637, -0.605, 1.3)
        manny:play_chore(msb_ladder_generic_unmount_ladder)
        manny:wait_for_chore()
        manny:pop_costume()
        inventory_disabled = FALSE
        manny.costume_marker_handler = nil
        manny:follow_boxes()
        while manny:find_sector_name("top") do
            manny:walk_forward()
            break_here()
        end
    elseif arg2 == "bottom" then
        manny:stop_climb_ladder()
        manny:walkto(0.23885, -0.604971, 0, 0, -640, 0)
    end
    END_CUT_SCENE()
end
at.zw_door = Object:create(at, "/attx014/sewer", -0.282056, 7.8309498, 0, { range = 1 })
at.zw_door.use_pnt_x = -0.282056
at.zw_door.use_pnt_y = 7.8309498
at.zw_door.use_pnt_z = 0
at.zw_door.use_rot_x = 0
at.zw_door.use_rot_y = -354.44101
at.zw_door.use_rot_z = 0
at.zw_door:make_untouchable()
at.zw_door.walkOut = function(arg1) -- line 1005
    zw:come_out_door(zw.at_door)
end
at.fp_door = Object:create(at, "/attx015/sewer", -0.48330101, -0.57499999, 0, { range = 0 })
at.fp_door.use_pnt_x = -0.48330101
at.fp_door.use_pnt_y = -0.57499999
at.fp_door.use_pnt_z = 0
at.fp_door.use_rot_x = 0
at.fp_door.use_rot_y = -178.55701
at.fp_door.use_rot_z = 0
at.fp_door.out_pnt_x = -0.48330101
at.fp_door.out_pnt_y = -0.57499999
at.fp_door.out_pnt_z = 0
at.fp_door.out_rot_x = 0
at.fp_door.out_rot_y = -178.55701
at.fp_door.out_rot_z = 0
at.florist_box = at.fp_door
at.fp_door.walkOut = function(arg1) -- line 1028
    at.manny_state = PAST_ZOD
    fp:come_out_door(fp.at_door)
end
at.jump_point = Object:create(at, "", 0.849998, 6.3249998, 1.3, { range = 0 })
at.jump_point.use_pnt_x = 0.52499998
at.jump_point.use_pnt_y = 6.4250002
at.jump_point.use_pnt_z = 1.3
at.jump_point.use_rot_x = 0
at.jump_point.use_rot_y = -360.58701
at.jump_point.use_rot_z = 0
at.jump = at.jump_point
at.jump_point.walkOut = function(arg1) -- line 1044
    local local1 = { }
    START_CUT_SCENE()
    if not albinizod_pinned then
        while zod_set_to_pin do
            break_here()
        end
    end
    system:lock_display()
    manny:set_visibility(TRUE)
    glottis:set_visibility(FALSE)
    at:current_setup(at_ledbw)
    manny:ignore_boxes()
    manny:setpos(0.52499998, 6.4250002, 1.206)
    manny:setrot(0, -425.832, 0)
    if manny.fancy then
        manny:push_costume("mcc_jump_off.cos")
    else
        manny:push_costume("msb_jump_off.cos")
    end
    glottis:thaw()
    system:unlock_display()
    glottis:set_visibility(FALSE)
    manny:play_chore(msb_jump_off_jump_off)
    sleep_for(1675)
    repeat
        local1 = manny:getpos()
        local1.z = local1.z - PerSecond(2.0999999)
        if local1.z < 0 then
            local1.z = 0
        end
        manny:setpos(local1)
        break_here()
    until local1.z == 0
    manny:wait_for_chore()
    END_CUT_SCENE()
    manny:pop_costume()
    manny:follow_boxes()
    zw:come_out_door(zw.at_door)
end
bag_box_ma_bag_box_ma = 0
bag_box_ma_here = 1
bag_box_ma_gone = 2
bag_box_ma_bag_hit_immediate = 3
balloon_loop_cycle = 0
balloon_loop_stand_to_cycle = 1
balloon_loop_cycle_to_stand = 2
balloon_loop_twist_this = 3
balloonman_bm_takeout_small = 0
balloonman_bm_putback_small = 1
balloonman_bm_putback_big = 2
balloonman_end_tie = 3
balloonman_begin_tie = 4
balloonman_tie_balloon = 5
balloonman_hold_small = 6
balloonman_give_big = 7
balloonman_give_small = 8
balloonman_hold_cat = 9
balloonman_hold_dingo = 10
balloonman_hold_rfrost = 11
balloonman_before_tie = 12
balloonman_after_tie = 13
balloonman_pop_balloon = 14
balloonman_takeout_dingo = 15
balloonman_takeout_cat = 16
balloonman_takeout_rfrost = 17
balloonman_takeout_balloon = 18
balloonman_mumble = 19
balloonman_stop_talk = 20
balloonman_point = 21
balloonman_head_nod = 22
balloonman_point_loop = 23
balloonman_stand = 24
balloonman_spin_give_end = 25
balloonman_back_to_idle = 26
balloonman_c = 27
balloonman_f = 28
balloonman_m = 29
balloonman_e = 30
balloonman_u = 31
balloonman_l = 32
balloonman_a = 33
balloonman_o = 34
balloonman_t = 35
barnacle_idles = 0
barnacle_caress = 1
barnacle_reach_ct = 2
barnacle_hold_ct = 3
barnacle_ct_thrash = 4
baster_baster = 0
CheckFirstTime("bb.lua")
bb = Set:create("bb.set", "blimp bridge", { bb_bmpla = 0, bb_bmpla = 1 })
blimp_sound_killer = function() -- line 12
    while sound_playing("blimp.imu") and (system.currentSet == gt or system.currentSet == bp or system.currentSet == bb or inInventorySet()) do
        break_here()
    end
    stop_sound("blimp.imu")
end
bb.blimp_vol_close = 15
bb.blimp_vol_med = 7
bb.blimp_vol_far = 3
bb.enter = function(arg1) -- line 32
    single_start_script(foghorn_sfx)
    bb:add_ambient_sfx(harbor_ambience_list, harbor_ambience_parm_list)
    bb.blimp.hObjectState = bb:add_object_state(bb_bmpla, "bb_props.bm", nil, OBJSTATE_UNDERLAY, FALSE)
    bb.blimp:set_object_state("bb_props.cos")
    bb.blimp:play_chore_looping(0)
    single_start_sfx("blimp.imu")
    set_vol("blimp.imu", bb.blimp_vol_close)
    set_pan("blimp.imu", 100)
    single_start_script(blimp_sound_killer)
end
bb.exit = function(arg1) -- line 44
    stop_script(foghorn_sfx)
    bb.blimp:free_object_state()
end
bb.blimp = Object:create(bb, "/bbtx003/blimp", -5.0626798, -19.3022, 26.608, { range = 15 })
bb.blimp.use_pnt_x = 0.36732501
bb.blimp.use_pnt_y = -29.2432
bb.blimp.use_pnt_z = 19.6
bb.blimp.use_rot_x = 0
bb.blimp.use_rot_y = 25.3396
bb.blimp.use_rot_z = 0
bb.blimp.lookAt = function(arg1) -- line 63
    manny:say_line("/bbma004/")
    wait_for_message()
    manny:say_line("/bbma005/")
end
bb.blimp.use = function(arg1) -- line 69
    manny:say_line("/bbma006/")
end
bb.gt_door = Object:create(bb, "/bbtx001/bridge", 0.43203801, -22.972799, 19.958, { range = 0.60000002 })
bb.gt_door.use_pnt_x = 0.36203799
bb.gt_door.use_pnt_y = -23.407801
bb.gt_door.use_pnt_z = 19.6
bb.gt_door.use_rot_x = 0
bb.gt_door.use_rot_y = -359.76901
bb.gt_door.use_rot_z = 0
bb.gt_door.out_pnt_x = 0.360199
bb.gt_door.out_pnt_y = -22.9911
bb.gt_door.out_pnt_z = 19.6
bb.gt_door.out_rot_x = 0
bb.gt_door.out_rot_y = -359.76901
bb.gt_door.out_rot_z = 0
bb.gt_door.touchable = FALSE
bb.gt_door.walkOut = function(arg1) -- line 95
    gt:come_out_door(gt.bb_door)
end
bb.bp_door = Object:create(bb, "/bbtx002/bridge", 0.37345499, -36.2756, 20.011, { range = 0.60000002 })
bb.bp_door.use_pnt_x = 0.37345499
bb.bp_door.use_pnt_y = -36.029598
bb.bp_door.use_pnt_z = 19.6
bb.bp_door.use_rot_x = 0
bb.bp_door.use_rot_y = -180.12801
bb.bp_door.use_rot_z = 0
bb.bp_door.out_pnt_x = 0.37305701
bb.bp_door.out_pnt_y = -36.208099
bb.bp_door.out_pnt_z = 19.6
bb.bp_door.out_rot_x = 0
bb.bp_door.out_rot_y = -180.12801
bb.bp_door.out_rot_z = 0
bb.bp_door.touchable = FALSE
bb.bp_door.walkOut = function(arg1) -- line 118
    bp:come_out_door(bp.bb_door)
end
CheckFirstTime("bd.lua")
dofile("ma_throw_bone.lua")
dofile("beaver.lua")
bd = Set:create("bd.set", "Beaver Dam", { bd_beacu = 0, bd_damha = 1, bd_rckws = 2, bd_ovrhd = 3 })
bd.flame_vol = 20
bd.exting_vol = 80
bd.solve_com = function(arg1) -- line 18
    com_solved = TRUE
    if bv.padlock.unlocked and mod_solved then
        bd:leave_forest()
    end
end
bd.beaver_sink_bone = function() -- line 26
    local local1
    sp.bone_actor:getpos()
    repeat
        local1 = sp.bone_actor:getpos()
        local1.z = local1.z - PerSecond(0.025)
        sp.bone_actor:setpos(local1)
        break_here()
    until local1.z < -0.25
end
bd.beaver_gets_stuck = function(arg1) -- line 36
    local local1
    local local2 = { }
    local local3
    local1 = bone_beaver[bd.beaver_in_the_air]
    bd.beaver_in_the_air = nil
    local1.dead = TRUE
    stop_sound(local1.imu)
    if local1.number == bd.NUMBER_OF_BEAVERS then
        bd.all_beavers_dead = TRUE
    end
    bd.flying_beaver:make_untouchable()
    START_CUT_SCENE()
    music_state:set_sequence(seqBeaverSink)
    start_sfx("extingsh.wav", nil, bd.exting_vol)
    stop_script(bd.throw_bone_in_tar)
    stunt_beaver:setpos(local1:getpos())
    local1:set_visibility(FALSE)
    stunt_beaver:wait_for_chore(beaver_freeze_dive)
    start_sfx(pick_one_of({ "bvbloop1.wav", "bvbloop2.wav", "bvbloop3.wav" }))
    bd.beaver_in_the_air = FALSE
    bd.flying_beaver:make_untouchable()
    local2 = stunt_beaver:getpos()
    repeat
        break_here()
        local2.z = local2.z - PerSecond(0.079999998)
        if local2.z <= 0.40000001 then
            local2.z = 0.40000001
        end
        stunt_beaver:setpos(local2.x, local2.y, local2.z)
    until local2.z == 0.40000001
    while bd.firing_extinguisher do
        break_here()
    end
    END_CUT_SCENE()
    bd.tar:make_touchable()
    local1:free()
    MakeSectorActive("beaver_rock", TRUE)
    stunt_beaver:free()
    if bd.all_beavers_dead then
        stop_script(bd.mother_brain)
        mother_beaver:free()
        cur_puzzle_state[15] = TRUE
        music_state:set_state(BD_SOLVED)
        single_start_script(bd.leave_glottis, bd)
        start_script(bd.solve_com)
    else
        start_script(bd.fake_beaver)
    end
end
bd.fake_beaver = function() -- line 89
    local local1, local2
    local local3 = { }
    local local4
    if not bd.all_beavers_dead then
        START_CUT_SCENE()
        local1 = 0
        repeat
            local1 = local1 + 1
            stop_sound(bone_beaver[local1].imu)
            bone_beaver[local1]:free()
        until local1 == bd.NUMBER_OF_BEAVERS
        stop_script(bd.mother_brain)
        stop_script(bd.beaver_brain)
        stop_script(bd.beaver_walk)
        stop_script(bd.beaver_pat)
        stop_script(bd.beaver_gnaw)
        stop_script(bd.beaver_swim)
        stop_script(bd.beaver_attack)
        stop_script(bd.beaver_re_ignite)
        stop_script(bd.leave_glottis)
        stop_script(bd.look_for_mother)
        stop_script(bd.run_to_mother)
        mother_beaver:free()
        local1 = 0
        repeat
            local1 = local1 + 1
            if not bone_beaver[local1].dead then
                local4 = bone_beaver[local1]
            end
        until local4
        local4:set_costume("beaver.cos")
        local4:follow_boxes()
        local4:put_in_set(bd)
        local4:set_turn_rate(40)
        local4:set_walk_rate(0.25)
        local4.on_fire = TRUE
        local4.medic = FALSE
        local4.is_swimming = FALSE
        local4.preparing_to_swim = FALSE
        local4.kill_manny = FALSE
        local4.jump_in = { }
        local4.jump_out = { }
        local4.finish = { }
        local4.number = local1
        local4.imu = nil
        local4.imu = "bvFlame1.imu"
        local4:set_visibility(TRUE)
        local4:ignore_boxes()
        local4:set_walk_rate(0.25)
        local4:setpos(2.9765301, 1.21289, 0.1184)
        local4:setrot(0, 0, 0)
        local4:play_chore_looping(beaver_walk)
        local4:play_chore_looping(beaver_flaming)
        start_sfx(local4.imu)
        repeat
            local3 = local4:getpos()
            local3.y = local3.y + PerSecond(0.40000001)
            if local3.y >= 2.48 then
                local3.y = 2.48
            end
            local4:setpos(local3.x, local3.y, local3.z)
            if not manny:find_sector_name("beaver_rock1") then
                manny:walk_forward()
            end
            break_here()
        until local3.y == 2.48
        preload_sfx("extingsh.wav")
        local4:setpos(2.925, 3.0250001, 0.56999999)
        local4:setrot(0, -125.5, 0)
        local4:follow_boxes()
        repeat
            local3 = local4:getpos()
            if not manny:find_sector_name("beaver_rock1") then
                manny:walk_forward()
            end
            local4:walk_forward()
            break_here()
        until local3.z >= 0.67000002
        local4:stop_chore(beaver_walk)
        END_CUT_SCENE()
        while bd:current_setup() == bd_rckws do
            break_here()
        end
        START_CUT_SCENE()
        local4:free()
        bd.set_up_beavers()
        local1 = 0
        repeat
            local1 = local1 + 1
            if not bone_beaver[local1].dead then
                local4 = bone_beaver[local1]
            end
        until local4
        MakeSectorActive("bv_cheat", TRUE)
        repeat
            local1 = local1 + 1
            if not bone_beaver[local1].dead then
                local4 = bone_beaver[local1]
            end
        until local4
        stop_script(local4.brain_script)
        if local4.ign then
            stop_script(local4.ign)
        end
        if local4.att then
            stop_script(local4.att)
        end
        if local4.wlk then
            stop_script(local4.wlk)
        end
        if local4.pat then
            stop_script(local4.pat)
        end
        if local4.gnw then
            stop_script(local4.gnw)
        end
        if local4.swm then
            stop_script(local4.swm)
        end
        local4:setpos(3.25, 1.975, 0.13)
        local4:setrot(0, 231, 0)
        repeat
            if not local4:is_choring(beaver_walk, beaver_hCos) then
                local4:play_chore(beaver_walk)
            end
            manny:walk_forward()
            local4:walk_forward()
            break_here()
        until not local4:find_sector_name("bv_cheat")
        MakeSectorActive("bv_cheat", FALSE)
        local4.brain_script = start_script(bd.beaver_brain, local4)
        bd.tar:make_untouchable()
        END_CUT_SCENE()
    end
end
bd.throw_bone_in_tar = function(arg1) -- line 238
    local local1
    local local2 = 0
    local local3
    local local4 = { }
    local local5 = { }
    local local6
    local local7
    local local8 = manny.is_holding
    cur_puzzle_state[14] = TRUE
    MakeSectorActive("beaver_rock", FALSE)
    preload_sfx("boneTar.wav")
    START_CUT_SCENE()
    bd.tar:make_untouchable()
    if not sp.bone_actor then
        sp.bone_actor = Actor:create(nil, nil, nil, "bone")
    end
    sp.bone_actor:put_in_set(bd)
    sp.bone_actor:set_costume("bone.cos")
    sp.bone_actor:setpos({ x = 4.9290299, y = 2.3366899, z = -0.192 })
    sp.bone_actor:setrot(89, 0, 0)
    sp.bone_actor:set_visibility(FALSE)
    manny:walkto_object(bd.tar)
    manny:wait_for_actor()
    manny:stop_chore(manny.hold_chore, manny.base_costume)
    manny:stop_chore(ms_hold, manny.base_costume)
    local8:free()
    local8.owner = sp.bone_pile
    manny.is_holding = nil
    manny:push_costume("ma_throw_bone.cos")
    manny:play_chore(2)
    manny:wait_for_chore()
    start_sfx("boneTar.wav")
    sp.bone_actor:set_visibility(TRUE)
    start_script(bd.beaver_sink_bone)
    manny:pop_costume()
    END_CUT_SCENE()
    stop_script(bd.fake_beaver)
    if not bd.all_beavers_dead then
        local2 = 0
        repeat
            local2 = local2 + 1
            if not bone_beaver[local2].dead then
                local3 = bone_beaver[local2]
            end
        until local3
        local3:play_chore_looping(beaver_walk)
        repeat
            local4 = local3:getpos()
            local3:walk_forward()
            break_here()
        until local4.x >= 4
        local3:set_chore_looping(beaver_walk, FALSE)
        local3:wait_for_chore(beaver_walk)
        local4 = local3:getpos()
        local5 = local3:getrot()
        if not stunt_beaver then
            stunt_beaver = Actor:create(nil, nil, nil, "stunt beaver")
        end
        stunt_beaver:set_costume(beaver_hCos)
        stunt_beaver:put_in_set(bd)
        stunt_beaver:setpos(0, 0, 0)
        stunt_beaver:setrot(local5.x, local5.y, local5.z)
        stunt_beaver:play_chore(beaver_freeze_dive)
        local3:play_chore(beaver_big_dive)
        bd.guarenteed_win = TRUE
        sleep_for(2000)
        music_state:set_sequence(seqBeaverFly)
        sleep_for(2757)
        bd.beaver_in_the_air = local3.number
        sp.bone_actor:set_visibility(FALSE)
        if bd.firing_extinguisher and bd:test_angle() <= 20 and manny:is_choring(2, "ma_use_extin.cos") then
            local3.fireproof = FALSE
            bd.guarenteed_win = FALSE
            bd.firing_extinguisher = FALSE
            stop_sound(local3.imu)
            start_script(bd.beaver_gets_stuck)
            while 1 do
                break_here()
            end
        else
            start_sfx(pick_one_of({ "bvbloop1.wav", "bvbloop2.wav", "bvbloop3.wav" }))
            local3:wait_for_chore(beaver_big_dive)
            bd.beaver_in_the_air = FALSE
            bd.flying_beaver:make_untouchable()
            sleep_for(1000)
            local3.fireproof = TRUE
        end
    end
    bd.guarenteed_win = FALSE
    bd.firing_extinguisher = FALSE
    MakeSectorActive("beaver_rock", TRUE)
    if not bd.all_beavers_dead then
        start_script(bd.fake_beaver)
    end
    bd.tar:make_touchable()
end
bd.get_in_BW = function(arg1) -- line 345
    START_CUT_SCENE()
    bd.bone_wagon:make_untouchable()
    sg.bone_wagon.hText = MakeTextObject("Manny IS the Bone Wagon", { x = 40, y = 380, font = pt_font, fgcolor = Aqua })
    system.buttonHandler = bone_wagon_button_handler
    break_here()
    SetActorWalkRate(manny.hActor, 3)
    END_CUT_SCENE()
    bd:drive_out()
end
bd.leave_BW = function(arg1) -- line 356
    bd.bone_wagon:make_touchable()
    manny.is_driving = FALSE
    SetActorWalkRate(manny, MANNY_WALK_RATE)
    system.buttonHandler = SampleButtonHandler
    KillTextObject(sg.bone_wagon.hText)
end
bd.set_pitch = function() -- line 364
    local local1 = 0
    while 1 do
        repeat
            local1 = local1 - PerSecond(3)
            SetActorPitch(manny.hActor, local1)
            break_here()
        until local1 <= -0.75
        repeat
            local1 = local1 + PerSecond(3)
            SetActorPitch(manny.hActor, local1)
            break_here()
        until local1 >= 0.75
    end
end
bd.set_roll = function() -- line 380
    local local1 = 0
    while 1 do
        repeat
            local1 = local1 - PerSecond(3)
            SetActorRoll(manny.hActor, local1)
            break_here()
        until local1 <= -0.75
        repeat
            local1 = local1 + PerSecond(3)
            SetActorRoll(manny.hActor, local1)
            break_here()
        until local1 >= 0.75
    end
end
bd.leave_drive = function() -- line 396
    while 1 do
        manny:walk_forward()
        break_here()
    end
end
bd.leave_forest = function() -- line 403
    start_script(cut_scene.outofpf, cut_scene)
end
bd.watch_tele_boxes = function() -- line 408
    local local1
    while 1 do
        if manny:find_sector_name("tele_box1") then
            manny:setpos(2.79283, 4.0671701, 0.161622)
            manny:setrot(0, -104, 0)
            bd.rock_trail:make_untouchable()
            bd:current_setup(bd_rckws)
            bd.tar:make_touchable()
            local1 = 0
            repeat
                local1 = local1 + 1
                bone_beaver[local1].fireproof = TRUE
            until local1 == bd.NUMBER_OF_BEAVERS
            if sp.bone_actor then
                sp.bone_actor:set_visibility(FALSE)
            end
            while manny:find_sector_name("tele_box2") do
                break_here()
            end
        elseif manny:find_sector_name("tele_box2") then
            manny:setpos(2.7550001, 4, 0, 17)
            manny:setrot(0, -194, 0)
            bd:current_setup(bd_damha)
            bd.tar:make_untouchable()
            bd.rock_trail:make_touchable()
            local1 = 0
            repeat
                local1 = local1 + 1
                bone_beaver[local1].fireproof = FALSE
            until local1 == bd.NUMBER_OF_BEAVERS
            while manny:find_sector_name("tele_box1") do
                break_here()
            end
        end
        break_here()
    end
end
bd.set_up_actors = function(arg1) -- line 449
    if not bd.all_beavers_dead then
        bd.set_up_beavers()
    end
end
bd.NUMBER_OF_BEAVERS = 3
bone_beaver = { }
bd.set_up_beavers = function() -- line 465
    local local1 = 0
    repeat
        local1 = local1 + 1
        if not beaver_hCos then
            beaver_hCos = "beaver.cos"
        end
        if not bone_beaver[local1] then
            bone_beaver[local1] = Actor:create(nil, nil, nil, "bone beaver")
            bone_beaver[local1].dead = FALSE
        end
        if not bone_beaver[local1].dead then
            bone_beaver[local1]:set_costume(beaver_hCos)
            bone_beaver[local1]:follow_boxes()
            bone_beaver[local1]:put_in_set(bd)
            bone_beaver[local1]:setpos(rnd(4.0749998, 9.7749996), rnd(0.25, 1.325), 0.11)
            bone_beaver[local1]:set_turn_rate(40)
            bone_beaver[local1]:set_walk_rate(0.25)
            bone_beaver[local1].on_fire = TRUE
            bone_beaver[local1].medic = FALSE
            bone_beaver[local1].is_swimming = FALSE
            bone_beaver[local1].preparing_to_swim = FALSE
            bone_beaver[local1].kill_manny = FALSE
            bone_beaver[local1].jump_in = { }
            bone_beaver[local1].jump_out = { }
            bone_beaver[local1].finish = { }
            bone_beaver[local1].number = local1
            bone_beaver[local1].imu = nil
            bone_beaver[local1].fireproof = FALSE
            bone_beaver[local1]:setrot(0, 0, 0)
            if local1 == 1 then
                bone_beaver[local1].jump_in.x = 5.52
                bone_beaver[local1].jump_in.y = 1.52
                bone_beaver[local1].jump_in["r"] = -15
                bone_beaver[local1].jump_out.x = 5.7906098
                bone_beaver[local1].jump_out.y = 1.88727
                bone_beaver[local1].jump_out["r"] = 162.10001
                bone_beaver[local1].finish.x = 6.6182098
                bone_beaver[local1].finish.y = 1.39
                bone_beaver[local1].finish.z = 0.13
                bone_beaver[local1].finish["r"] = 90
                bone_beaver[local1].imu = "bvFlame1.imu"
            elseif local1 == 2 then
                bone_beaver[local1].jump_in.x = 7.5500002
                bone_beaver[local1].jump_in.y = 1.62
                bone_beaver[local1].jump_in["r"] = 7.5700002
                bone_beaver[local1].jump_out.x = 7.0171099
                bone_beaver[local1].jump_out.y = 1.93946
                bone_beaver[local1].jump_out["r"] = 221.2
                bone_beaver[local1].finish.x = 8.2722101
                bone_beaver[local1].finish.y = 1.17563
                bone_beaver[local1].finish.z = 0.13
                bone_beaver[local1].finish["r"] = 170
                bone_beaver[local1].imu = "bvFlame2.imu"
            else
                bone_beaver[local1].jump_in.x = 8.2399998
                bone_beaver[local1].jump_in.y = 1.64
                bone_beaver[local1].jump_in["r"] = 16.299999
                bone_beaver[local1].jump_out.x = 8.1814098
                bone_beaver[local1].jump_out.y = 1.9897
                bone_beaver[local1].jump_out["r"] = 168
                bone_beaver[local1].finish.x = 5.0484099
                bone_beaver[local1].finish.y = 1.21033
                bone_beaver[local1].finish.z = 0.13
                bone_beaver[local1].finish["r"] = 108
                bone_beaver[local1].imu = "bvFlame3.imu"
            end
            bone_beaver[local1]:set_collision_mode(COLLISION_SPHERE)
            SetActorCollisionScale(bone_beaver[local1].hActor, 0.34999999)
            bd.switch_modes(bone_beaver[local1])
            bone_beaver[local1].brain_script = start_script(bd.beaver_brain, bone_beaver[local1])
        end
    until local1 == bd.NUMBER_OF_BEAVERS
    if not mother_beaver then
        mother_beaver = Actor:create(nil, nil, nil, "bone beaver")
    end
    if not bd.all_beavers_dead then
        mother_beaver:set_costume(beaver_hCos)
        mother_beaver:follow_boxes()
        mother_beaver:put_in_set(bd)
        mother_beaver:setpos(0, 0, 0)
        mother_beaver:set_turn_rate(30)
        mother_beaver:set_walk_rate(0.15000001)
        start_script(bd.mother_brain)
    end
end
bone = function() -- line 554
    local local1
    repeat
        local1 = alloc_object_from_table(sp.bones)
        if local1 then
            local1:get()
        end
    until not local1
end
bd.switch_modes = function(arg1) -- line 564
    if arg1.on_fire then
        arg1:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(arg1.hActor, 0.35)
        arg1:stop_chore(nil)
        arg1:play_chore_looping(beaver_flaming)
        start_sfx(arg1.imu, IM_LOW_PRIORITY, 63)
        set_vol(arg1.imu, bd.flame_vol)
    else
        arg1:set_collision_mode(COLLISION_OFF)
        arg1:stop_chore(nil)
        arg1:play_chore_looping(beaver_stop_flaming)
        stop_sound(arg1.imu)
    end
end
bd.mother_brain = function() -- line 581
    local local1
    mother_beaver:setpos(11.3783, 4.02946, -0.111307)
    mother_beaver:setrot(0, 718.89502, 0)
    mother_beaver:play_chore_looping(beaver_walk)
    mother_beaver:play_chore_looping(beaver_flaming)
    while 1 do
        sleep_for(5000)
        mother_beaver:walkto(10.2853, 4.9162698, -0.17449901, 915.88)
        mother_beaver:wait_for_actor()
        mother_beaver:walkto(11.3783, 4.02946, -0.111307, 718.89502)
        mother_beaver:wait_for_actor()
    end
end
bd.calculate_beaver_hit = function() -- line 597
    local local1 = 0
    local local2
    local local3
    local local4
    repeat
        local1 = local1 + 1
        if not bone_beaver[local1].dead and bone_beaver[local1].on_fire and bone_beaver[local1].fireproof == FALSE then
            local3 = GetAngleBetweenActors(manny.hActor, bone_beaver[local1].hActor)
            local2 = proximity(manny, bone_beaver[local1])
            if local3 <= 35 and local2 <= 2 then
                local4 = TRUE
                bone_beaver[local1].on_fire = FALSE
                start_sfx("bvFreeze.wav")
                bd.switch_modes(bone_beaver[local1])
            end
        end
    until local1 == bd.NUMBER_OF_BEAVERS
    return local4
end
bd.beaver_re_ignite = function(arg1) -- line 618
    local local1 = 0
    local local2 = { }
    local local3, local4
    local local5 = { }
    local local6 = { }
    local local7
    arg1:set_turn_rate(200)
    arg1:set_walk_rate(1.6)
    repeat
        local1 = local1 + 1
        if not bone_beaver[local1].dead and arg1.number ~= local1 then
            local2[local1] = proximity(arg1, bone_beaver[local1])
        end
    until local1 == bd.NUMBER_OF_BEAVERS
    local1 = 0
    local3 = nil
    local4 = 1000
    repeat
        local1 = local1 + 1
        if arg1.number ~= local1 and bone_beaver[local1].is_swimming == FALSE and not bone_beaver[local1].dead then
            if local2[local1] < local4 then
                local4 = local2[local1]
                local3 = bone_beaver[local1]
            end
        end
    until local1 == bd.NUMBER_OF_BEAVERS
    if local3 and local3.on_fire then
        local4 = proximity(arg1, local3)
        local5 = arg1:getpos()
        local6 = local3:getpos()
        while local4 >= 0.2 and local3.on_fire do
            if not arg1:is_choring(beaver_freeze_run, beaver_hCos) then
                arg1:play_chore(beaver_freeze_run)
            end
            TurnActorTo(arg1.hActor, local6.x, local6.y, local6.z)
            arg1:walk_forward()
            break_here()
            local5 = arg1:getpos()
            local6 = local3:getpos()
            local4 = proximity(arg1, local3)
        end
        if local3.on_fire then
            arg1.on_fire = TRUE
            bd.switch_modes(arg1)
            start_sfx("bvRelite.wav")
            arg1:wait_for_chore()
            arg1:set_turn_rate(40)
            arg1:set_walk_rate(0.25)
        else
            start_script(bd.beaver_re_ignite, arg1)
            return
        end
    else
        arg1.mommy = start_script(bd.run_to_mother, arg1)
        wait_for_script(arg1.mommy)
    end
end
bd.look_for_mother = function(arg1) -- line 683
    local local1
    while not arg1.on_fire do
        local1 = proximity(arg1, mother_beaver)
        if local1 <= 0.2 and not arg1.on_fire then
            arg1.on_fire = TRUE
            bd.switch_modes(arg1)
            arg1:stop_chore(beaver_freeze_run)
            arg1:play_chore_looping(beaver_run)
        end
        break_here()
    end
end
bd.run_to_mother = function(arg1) -- line 697
    local local1
    local local2 = { x = 0.36293, y = 0.51626998, z = 0.38 }
    arg1.fireproof = TRUE
    arg1.is_swimming = TRUE
    arg1:play_chore_looping(beaver_freeze_run)
    arg1.mommy_look = start_script(bd.look_for_mother, arg1)
    arg1:walkto_object(bd.jump_point)
    arg1:wait_for_actor()
    stop_script(arg1.mommy_look)
    if not arg1.on_fire then
        arg1.on_fire = TRUE
        bd.switch_modes(arg1)
    end
    arg1:stop_chore(beaver_run)
    arg1:play_chore(beaver_dive_in)
    arg1:wait_for_chore(beaver_dive_in)
    arg1:ignore_boxes()
    arg1:setpos(0, 0, 0)
    sleep_for(rnd(4000, 6000))
    arg1:stop_chore(beaver_dive_in)
    arg1:setpos(arg1.jump_out.x, arg1.jump_out.y, -0.25)
    arg1:setrot(50, 180, 0)
    arg1:play_chore(beaver_climb_out)
    arg1:wait_for_chore()
    rot = arg1:getrot()
    vec = RotateVector(local2, rot)
    pos = arg1:getpos()
    vec.x = vec.x + pos.x
    vec.y = vec.y + pos.y
    vec.z = vec.z + pos.z
    arg1.fireproof = TRUE
    arg1:follow_boxes()
    arg1:setpos(vec.x, vec.y, vec.z)
    arg1:setrot(0, 287 + 180, 0)
    arg1.is_swimming = FALSE
    arg1:stop_chore(beaver_climb_out)
    arg1:set_turn_rate(40)
    arg1:set_walk_rate(0.25)
    start_script(bd.re_ignite_timer, arg1)
end
bd.re_ignite_timer = function(arg1) -- line 743
    sleep_for(1000)
    arg1.fireproof = FALSE
end
bd.beaver_walk = function(arg1, arg2, arg3, arg4) -- line 748
    local local1
    local local2 = arg1:getpos()
    local local3
    local1 = sqrt((local2.x - arg2) ^ 2 + (local2.y - arg3) ^ 2)
    arg1:play_chore_looping(beaver_walk)
    while local1 > 0.25 do
        TurnActorTo(arg1.hActor, arg2, arg3, local2.z)
        arg1:walk_forward()
        local2 = arg1:getpos()
        local1 = sqrt((local2.x - arg2) ^ 2 + (local2.y - arg3) ^ 2)
        if arg1.kill_manny and not arg1.is_swimming then
            local1 = 0
            arg4 = nil
        end
        if not arg1.on_fire then
            local1 = 0
            arg4 = nil
        end
        break_here()
    end
    arg1:set_chore_looping(beaver_walk, FALSE)
    if arg4 then
        local3 = start_script(arg1.setrot, arg1, 0, arg4, 0, TRUE)
        while find_script(local3) do
            if not arg1:is_choring(beaver_walk, beaver_hCos) then
                arg1:play_chore(beaver_walk)
            end
            arg1:walk_forward()
            break_here()
        end
    end
end
bd.beaver_pat = function(arg1) -- line 785
    local local1 = rnd(0, 360)
    arg1:setrot(0, local1, 0, TRUE)
    arg1:play_chore(beaver_tail_beat)
    while arg1:is_choring(beaver_tail_beat, beaver_hCos) and not arg1.kill_manny and arg1.on_fire do
        break_here()
    end
end
bd.beaver_gnaw = function(arg1) -- line 794
    local local1 = rnd(0, 360)
    arg1:setrot(0, local1, 0, TRUE)
    arg1:play_chore(beaver_bite)
    while arg1:is_choring(beaver_bite, beaver_hCos) and not arg1.kill_manny and arg1.on_fire do
        break_here()
    end
end
bd.beaver_swim = function(arg1) -- line 804
    local local1
    local local2
    local local3 = { }
    local local4 = { }
    local local5 = { }
    local local6 = { x = 0.36293, y = 0.51626998, z = 0.38 }
    local1 = 0
    repeat
        local1 = local1 + 1
        if bone_beaver[local1].is_swimming or bone_beaver[local1].preparing_to_swim then
            return
        end
    until local1 == bd.NUMBER_OF_BEAVERS
    arg1.wlk = start_script(bd.beaver_walk, arg1, arg1.jump_in.x, arg1.jump_in.y, arg1.jump_in.r)
    arg1.preparing_to_swim = TRUE
    while find_script(arg1.wlk) do
        if arg1.kill_manny then
            stop_script(arg1.wlk)
            arg1.is_swimming = FALSE
            arg1.preparing_to_swim = FALSE
            return
        end
        break_here()
    end
    arg1.preparing_to_swim = FALSE
    arg1.is_swimming = TRUE
    arg1:play_chore(beaver_dive_in)
    sleep_for(700)
    start_sfx(pick_one_of({ "bvbloop1.wav", "bvbloop2.wav", "bvbloop3.wav" }))
    arg1:wait_for_chore()
    arg1:ignore_boxes()
    arg1:setpos(7.1076102, 2.6989, -0.75)
    arg1:setrot(0, -9, 0)
    arg1:play_chore_looping(beaver_walk)
    curpos = arg1:getpos()
    repeat
        curpos.z = curpos.z + PerSecond(0.2)
        if curpos.z > -0.25 then
            curpos.z = -0.25
        end
        arg1:walk_forward()
        arg1:setpos(curpos.x, curpos.y, curpos.z)
        break_here()
    until curpos.z == -0.25
    arg1:set_turn_rate(100)
    arg1:follow_boxes()
    local2 = rndint(1, 3)
    repeat
        local2 = local2 - 1
        arg1.wlk = start_script(bd.beaver_walk, arg1, rnd(6.3000002, 8.2299995), rnd(1.9400001, 4.8000002))
        wait_for_script(arg1.wlk)
    until local2 == 0
    arg1.wlk = start_script(bd.beaver_walk, arg1, 7.1076102, 2.6989, -178.82899)
    wait_for_script(arg1.wlk)
    arg1:play_chore_looping(beaver_walk)
    arg1:ignore_boxes()
    curpos = arg1:getpos()
    repeat
        curpos.z = curpos.z - PerSecond(0.2)
        if curpos.z < -0.75 then
            curpos.z = -0.75
        end
        arg1:walk_forward()
        arg1:setpos(curpos.x, curpos.y, curpos.z)
        break_here()
    until curpos.z == -0.75
    arg1:stop_chore(beaver_walk)
    arg1:setpos(arg1.jump_out.x, arg1.jump_out.y, -0.25)
    arg1:setrot(50, 180, 0)
    arg1:play_chore(beaver_climb_out)
    arg1:wait_for_chore()
    local4 = arg1:getrot()
    local5 = RotateVector(local6, local4)
    local3 = arg1:getpos()
    local5.x = local5.x + local3.x
    local5.y = local5.y + local3.y
    local5.z = local5.z + local3.z
    arg1.fireproof = TRUE
    arg1:follow_boxes()
    arg1:setpos(local5.x, local5.y, 0.13)
    arg1:setrot(0, 287 + 180, 0)
    arg1.is_swimming = FALSE
    arg1:stop_chore(beaver_climb_out)
    arg1:set_turn_rate(40)
    start_script(bd.re_ignite_timer, arg1)
end
bd.beaver_brain = function(arg1) -- line 899
    local local1
    start_script(bd.watch_proximity, arg1)
    while 1 do
        if not arg1.on_fire then
            arg1.ign = start_script(bd.beaver_re_ignite, arg1)
            wait_for_script(arg1.ign)
        elseif arg1.kill_manny then
            arg1.att = start_script(bd.beaver_attack, arg1)
            wait_for_script(arg1.att)
        else
            local1 = rndint(3)
            if local1 == 0 then
                arg1.wlk = start_script(bd.beaver_walk, arg1, rnd(4.0749998, 9.7749996), rnd(0.25, 1.325))
                wait_for_script(arg1.wlk)
            elseif local1 == 1 then
                arg1.pat = start_script(bd.beaver_pat, arg1)
                wait_for_script(arg1.pat)
            elseif local1 == 2 then
                arg1.gnw = start_script(bd.beaver_gnaw, arg1)
                wait_for_script(arg1.gnw)
            elseif local1 == 3 then
                arg1.swm = start_script(bd.beaver_swim, arg1)
                wait_for_script(arg1.swm)
            end
            break_here()
        end
    end
end
bd.camera_break = function() -- line 930
    system.lock_display()
    break_here()
    system.unlock_display()
end
bd.camerachange = function(arg1, arg2, arg3) -- line 936
    if arg3 == bd_damha and arg2 == bd_rckws then
        start_script(bd.camera_break)
    end
end
bd.check_visibility = function() -- line 942
    local local1
    local local2
    while not bd.all_beavers_dead do
        if bd:current_setup() == bd_damha then
            local2 = nil
            local1 = 0
            repeat
                local1 = local1 + 1
                bone_beaver[local1]:set_visibility(TRUE)
            until local1 == bd.NUMBER_OF_BEAVERS
            while bd:current_setup() == bd.damha do
                break_here()
            end
        else
            local1 = 0
            repeat
                local1 = local1 + 1
                bone_beaver[local1]:set_visibility(FALSE)
            until local1 == bd.NUMBER_OF_BEAVERS
            if bd:current_setup() == bd_rckws then
                start_script(bd.fake_beaver)
            end
            local2 = bd:current_setup()
            while bd:current_setup() == local2 do
                break_here()
            end
        end
        break_here()
    end
end
bd.watch_proximity = function(arg1) -- line 974
    local local1
    while 1 do
        local1 = proximity(manny, arg1)
        if local1 <= 3.5 and manny:find_sector_name("death") then
            arg1.kill_manny = TRUE
        else
            arg1.kill_manny = FALSE
        end
        break_here()
    end
end
bd.beaver_attack = function(arg1) -- line 988
    local local1 = manny:getpos()
    local local2 = arg1:getpos()
    local local3 = sqrt((local2.x - local1.x) ^ 2 + (local2.y - local1.y) ^ 2 + (local2.z - local1.z) ^ 2)
    local local4
    if not find_script(bd.monitor_beaver_attack) then
        start_script(bd.monitor_beaver_attack)
    end
    arg1:play_chore_looping(beaver_run)
    arg1:set_walk_rate(1.5)
    arg1:set_turn_rate(150)
    while arg1.on_fire and bd:current_setup() ~= bd_rckws do
        if local3 <= 0.5 and not find_script(bd.beaver_escape) then
            start_script(bd.beaver_escape)
        end
        TurnActorTo(arg1.hActor, local1.x, local1.y, local1.z)
        arg1:walk_forward()
        break_here()
        local1 = manny:getpos()
        local2 = arg1:getpos()
        local3 = sqrt((local2.x - local1.x) ^ 2 + (local2.y - local1.y) ^ 2 + (local2.z - local1.z) ^ 2)
    end
end
bd.monitor_beaver_attack = function() -- line 1016
    MakeSectorActive("off_chase", FALSE)
    while find_script(bd.beaver_attack) do
        break_here()
    end
    MakeSectorActive("off_chase", TRUE)
end
bd.beaver_escape = function() -- line 1024
    stop_script(monitor_run)
    START_CUT_SCENE()
    local local1 = 0
    repeat
        local1 = local1 + 1
        bone_beaver[local1]:set_collision_mode(COLLISION_OFF)
    until local1 == bd.NUMBER_OF_BEAVERS
    if manny:get_costume() == "ma_use_extin.cos" then
        manny:pop_costume()
        stop_script(bd.extinguisher.use)
        stop_script(bd.extinguisher.fire_extinguisher)
        manny:play_chore_looping(manny.hold_chore, "ma.cos")
        stop_sound("extingsh.imu")
        manny:play_chore_looping(ma_hold, "ma.cos")
        inventory_disabled = FALSE
    end
    if system.buttonHandler == fireExtinguisherHandler then
        system.buttonHandler = inventory_save_handler
    end
    stop_script(bd.leave_glottis)
    manny:set_collision_mode(COLLISION_OFF)
    if manny.is_backward then
        manny:set_walk_backwards(FALSE)
    end
    manny:say_line(pick_one_of({ "/bdma006A/", "/bdma006B/", "/bdma006C/" }))
    start_script(manny.runto, manny, bd.bv_door.out_pnt_x, bd.bv_door.out_pnt_y, bd.bv_door.out_pnt_z)
    manny:wait_for_message()
    END_CUT_SCENE()
    stop_movement_scripts()
    if inInventorySet() then
        close_inventory()
    end
    bv:come_out_door(bv.bd_door)
    if not bd.beavers.met then
        bd.beavers.met = TRUE
    end
end
bd.meet_the_beavers = function() -- line 1068
    START_CUT_SCENE()
    local local1 = 0
    repeat
        local1 = local1 + 1
        stop_script(bone_beaver[local1].brain_script)
        if local1 == 1 then
            bone_beaver[1]:setpos(4.5769401, 1.27459, -0.1)
            bone_beaver[1]:setrot(0, 45, 0)
            bone_beaver[1]:play_chore_looping(beaver_bite)
        elseif local1 == 2 then
            bone_beaver[2]:setpos(8.6178102, 0.71539903, -0.1)
            bone_beaver[2]:setrot(0, 180, 0)
            bone_beaver[2]:play_chore_looping(beaver_tail_beat)
        elseif local1 == 3 then
            bone_beaver[3]:setpos(6.7908101, 1.1584001, -0.1)
            bone_beaver[3]:setrot(0, 300, 0)
            bone_beaver[3]:play_chore_looping(beaver_walk)
        end
    until local1 == bd.NUMBER_OF_BEAVERS
    manny:walkto(3.0162799, 0.78265703, 0.21988299)
    manny:wait_for_actor()
    RunFullscreenMovie("distbeav.snm")
    start_script(bd.beaver_attack, bone_beaver[1])
    while system.currentSet == bd do
        break_here()
    end
    END_CUT_SCENE()
end
bd.leave_glottis = function() -- line 1100
    local local1 = { }
    while 1 do
        bd.dont_attack_manny = FALSE
        repeat
            local1 = manny:getpos()
            break_here()
        until local1.x > 9.8000002
        bd.firing_extinguisher = FALSE
        START_CUT_SCENE()
        bd.dont_attack_manny = TRUE
        manny:say_line("/bdma029/")
        local local2 = manny:getpos()
        manny:walkto(9.7749996, local2.y, 0.13)
        wait_for_message()
        manny:say_line("/bdma030/")
        END_CUT_SCENE()
    end
end
bd.enter = function(arg1) -- line 1127
    MakeSectorActive("bv_cheat", FALSE)
    MakeSectorActive("off_chase", TRUE)
    NewObjectState(bd_damha, OBJSTATE_UNDERLAY, "bd_2_tar.bm")
    NewObjectState(bd_rckws, OBJSTATE_UNDERLAY, "bd_3_tar.bm")
    bd.tar:set_object_state("tar_river.cos")
    bd.tar.interest_actor:play_chore_looping(0)
    if not bd.all_beavers_dead then
        bd:set_up_actors()
        start_script(bd.watch_tele_boxes)
        start_script(bd.check_visibility)
    else
        MakeSectorActive("off_chase", FALSE)
    end
    if not ma_throw_bone_cos then
        ma_throw_bone_cos = "ma_throw_bone.cos"
    end
    if manny.is_driving then
        bd:drive_in()
    end
    bd.tar:make_untouchable()
    bd.dam:make_touchable()
    preload_sfx("bvRelite.wav")
    preload_sfx("bvFreeze.wav")
    preload_sfx("bevrHiss.wav")
    start_script(bd.leave_glottis)
    if not bd.entered_bd then
        bd.entered_bd = TRUE
        start_script(bd.meet_the_beavers)
    end
    bd:add_ambient_sfx({ "frstCrt1.wav", "frstCrt2.wav", "frstCrt3.wav", "frstCrt4.wav" }, { min_delay = 8000, max_delay = 20000 })
end
bd.exit = function(arg1) -- line 1173
    local local1 = 0
    repeat
        local1 = local1 + 1
        stop_sound(bone_beaver[local1].imu)
        bone_beaver[local1]:free()
    until local1 == bd.NUMBER_OF_BEAVERS
    stop_script(bd.watch_proximity)
    stop_script(bd.mother_brain)
    stop_script(bd.beaver_brain)
    stop_script(bd.beaver_walk)
    stop_script(bd.beaver_pat)
    stop_script(bd.beaver_gnaw)
    stop_script(bd.beaver_swim)
    stop_script(bd.beaver_attack)
    stop_script(bd.check_visibility)
    stop_script(bd.watch_tele_boxes)
    stop_script(bd.beaver_re_ignite)
    stop_script(bd.leave_glottis)
    stop_script(bd.look_for_mother)
    stop_script(bd.run_to_mother)
    mother_beaver:free()
    if manny:get_costume() == "ma_use_extin.cos" then
        manny:pop_costume()
        stop_script(bd.extinguisher.use)
        stop_script(bd.extinguisher.fire_extinguisher)
        manny:play_chore_looping(manny.hold_chore, "ma.cos")
        manny:play_chore_looping(ma_hold, "ma.cos")
    end
    if system.buttonHandler == fireExtinguisherHandler then
        system.buttonHandler = inventory_save_handler
    end
    SetActorClipActive(manny.hActor, FALSE)
    if bd.dont_attack_manny == TRUE then
        END_CUT_SCENE()
    end
    if sp.bone_actor then
        sp.bone_actor:free()
    end
    stop_sound("extingsh.imu")
end
bd.update_music_state = function(arg1) -- line 1215
    if bd.all_beavers_dead then
        return stateBD_SOLVED
    else
        return stateBD
    end
end
bd.extinguisher = Object:create(bd, "/bdtx018/fire extinguisher", 0, 0, 0, { range = 0 })
bd.extinguisher.string_name = "extinguisher"
bd.extinguisher.wav = "getMetl.wav"
bd.extinguisher.lookAt = function(arg1) -- line 1234
    if bd.beavers.met then
        manny:say_line("/bdma019/")
    else
        manny:say_line("/vima035/")
    end
end
bd.test_angle = function(arg1) -- line 1242
    if not fire_test_actor then
        fire_test_actor = Actor:create(nil, nil, nil, "x")
    end
    fire_test_actor:put_in_set(bd)
    fire_test_actor:setpos({ x = 4.69903, y = 2.43169, z = -0.2 })
    return GetAngleBetweenActors(manny.hActor, fire_test_actor.hActor)
end
bd.extinguisher.default_response = function(arg1) -- line 1249
    manny:say_line("/bdma020/")
end
bd.clip_planes = function() -- line 1253
    local local1 = { }
    SetActorClipActive(manny.hActor, TRUE)
    while bd:current_setup() == bd_rckws and bd.firing_extinguisher do
        local1 = manny:getrot()
        manny:set_run(FALSE)
        if local1.y >= 90 then
            SetActorClipPlane(manny.hActor, 1, 1, 0, 3.22333, 2.6201501, -0.1)
        else
            SetActorClipPlane(manny.hActor, 10, 1, 0, 3.38605, 3.5179801, -0.1)
        end
        if manny:find_sector_name("stop_shootin") then
            bd.firing_extinguisher = FALSE
        end
        break_here()
    end
    SetActorClipActive(manny.hActor, FALSE)
end
bd.extinguisher.use = function(arg1) -- line 1273
    local local1
    local local2
    local local3
    if system.currentSet == bd then
        inventory_disabled = TRUE
        START_CUT_SCENE()
        manny:set_run(FALSE)
        inventory_save_handler = system.buttonHandler
        system.buttonHandler = fireExtinguisherHandler
        bd.firing_extinguisher = TRUE
        manny:stop_chore(manny.hold_chore, "ma.cos")
        manny:stop_chore(ma_hold, "ma.cos")
        manny:push_costume("ma_use_extin.cos")
        manny:play_chore(1, "ma_use_extin.cos")
        manny:wait_for_chore(1, "ma_use_extin.cos")
        END_CUT_SCENE()
        local1 = bd.extinguisher.fire_extinguisher()
        if local1 and not find_script(bd.leave_glottis) then
            bd.beavers.sprayed = bd.beavers.sprayed + 1
            if bd.beavers.sprayed == 1 then
                manny:say_line("/bdma021/")
            elseif bd.beavers.sprayed == 2 then
                manny:say_line("/bdma022/")
            elseif bd.beavers.sprayed == 3 then
                manny:say_line("/bdma023/")
            elseif bd.beavers.sprayed == 4 then
                manny:say_line("/bdma024/")
            elseif bd.beavers.sprayed == 5 then
                manny:say_line("/bdma025/")
            elseif bd.beavers.sprayed == 6 then
                manny:say_line("/bdma026/")
            else
                manny:say_line("/bdma027/")
            end
        end
        manny:pop_costume()
        manny:play_chore_looping(manny.hold_chore, "ma.cos")
        manny:play_chore_looping(ma_hold, "ma.cos")
        inventory_disabled = FALSE
    else
        bd.extinguisher:default_response()
    end
end
bd.extinguisher_count_min_time = function(arg1) -- line 1325
    sleep_for(1500)
    bd.extinguisher.min_time_elapsed = TRUE
end
bd.extinguisher.fire_extinguisher = function(arg1) -- line 1330
    local local1, local2
    bd.rock_trail:make_untouchable()
    if bd:current_setup() == bd_rckws then
        start_script(bd.clip_planes)
    end
    bd.extinguisher.min_time_elapsed = FALSE
    start_script(bd.extinguisher_count_min_time)
    start_sfx("extingsh.imu")
    repeat
        manny:play_chore(2, "ma_use_extin.cos")
        while manny:is_choring(2, "ma_use_extin.cos") and bd.firing_extinguisher do
            local2 = bd.calculate_beaver_hit()
            if local2 then
                local1 = TRUE
            end
            break_here()
        end
        break_here()
    until not bd.firing_extinguisher and bd.extinguisher.min_time_elapsed == TRUE
    stop_sound("extingsh.imu")
    manny:play_chore(3, "ma_use_extin.cos")
    manny:wait_for_chore(3, "ma_use_extin.cos")
    system.buttonHandler = inventory_save_handler
    bd.rock_trail:make_touchable()
    return local1
end
fireExtinguisherHandler = function(arg1, arg2, arg3) -- line 1358
    if control_map.USE[arg1] and not arg2 and bd.guarenteed_win == FALSE then
        bd.firing_extinguisher = FALSE
    end
    inventory_save_handler(arg1, arg2, arg3)
end
bd.beavers = Object:create(bd, "/bdtx028/beaver", 0, 0, 0, { range = 0 })
bd.beavers.sprayed = 0
bd.beavers.use_extinguisher = bd.extinguisher.use
bd.beavers.use_bone = function(arg1, arg2) -- line 1371
    start_script(bd.throw_bone_in_tar)
end
bd.dam = Object:create(bd, "/bdtx031/dam", 4.2374601, 0.60527599, 0.30000001, { range = 1 })
bd.dam.use_pnt_x = 3.3612599
bd.dam.use_pnt_y = 0.43803501
bd.dam.use_pnt_z = 0.1
bd.dam.use_rot_x = 0
bd.dam.use_rot_y = 268.81799
bd.dam.use_rot_z = 0
bd.dam.lookAt = function(arg1) -- line 1384
    manny:say_line("/bdma032/")
end
bd.dam.pickUp = function(arg1) -- line 1388
    got_bone = alloc_object_from_table(sp.bones)
    if got_bone then
        START_CUT_SCENE()
        preload_sfx("getBone.wav")
        if not sp.said_spare then
            sp.said_spare = TRUE
            manny:say_line("/spma014/")
        end
        manny:wait_for_actor()
        manny:play_chore(ma_reach_low, "ma.cos")
        sleep_for(864)
        start_sfx("getBone.wav")
        got_bone:get()
        got_bone.wav = "getBone.wav"
        manny.is_holding = got_bone
        manny:play_chore_looping(ma_hold, "ma.cos")
        manny:play_chore_looping(ma_activate_bone, "ma.cos")
        manny.hold_chore = ma_activate_bone
        manny:wait_for_chore(ma_reach_low, "ma.cos")
        manny:stop_chore(ma_reach_low, "ma.cos")
        END_CUT_SCENE()
    else
        manny:say_line("/spma015/")
    end
end
bd.dam.use_bone = function(arg1, arg2) -- line 1415
    arg2:free()
    arg2.owner = sp.bone_pile
    START_CUT_SCENE()
    if not sp.said_drop then
        sp.said_drop = TRUE
        manny:say_line("/spma016/")
    end
    preload_sfx("getBone.wav")
    manny:play_chore(ma_reach_low, "ma.cos")
    sleep_for(864)
    start_sfx("getBone.wav")
    manny.is_holding = nil
    manny:stop_chore(ma_hold, "ma.cos")
    manny:stop_chore(ma_activate_bone, "ma.cos")
    manny.hold_chore = nil
    manny:wait_for_chore(ma_reach_low, "ma.cos")
    manny:stop_chore(ma_reach_low, "ma.cos")
    END_CUT_SCENE()
end
bd.dam.use = function(arg1) -- line 1437
    bd.dam:pickUp()
end
bd.dam.use_extinguisher = bd.extinguisher.use
bd.tar = Object:create(bd, "/bdtx035/river of tar", 4.9643002, 2.3482001, -0.2, { range = 2 })
bd.tar.use_pnt_x = 3.86603
bd.tar.use_pnt_y = 2.74369
bd.tar.use_pnt_z = -0.1
bd.tar.use_rot_x = 0
bd.tar.use_rot_y = 241.035
bd.tar.use_rot_z = 0
bd.tar.touchable = FALSE
bd.tar.lookAt = function(arg1) -- line 1453
    START_CUT_SCENE()
    manny:say_line("/bdma036/")
    wait_for_message()
    manny:say_line("/bdma037/")
    END_CUT_SCENE()
end
bd.tar.pickUp = function(arg1) -- line 1461
    manny:say_line("/bdma038/")
end
bd.tar.use = function(arg1) -- line 1465
    manny:say_line("/bdma039/")
end
bd.tar.use_bone = function(arg1) -- line 1469
    if bd:current_setup() == bd_rckws then
        start_script(bd.throw_bone_in_tar)
    else
        system.default_response("not here")
    end
end
bd.tar.use_extinguisher = bd.extinguisher.use
bd.flying_beaver = Object:create(bd, "/bdtx040/diving beaver", 4.9643002, 2.3482001, 0.55000001, { range = 5 })
bd.flying_beaver.use_pnt_x = 4.6707802
bd.flying_beaver.use_pnt_y = 2.33794
bd.flying_beaver.use_pnt_z = 0.1
bd.flying_beaver.use_rot_x = 0
bd.flying_beaver.use_rot_y = -456.60699
bd.flying_beaver.use_rot_z = 0
bd.flying_beaver:make_untouchable()
bd.flying_beaver.lookAt = function(arg1) -- line 1491
    manny:say_line("/bdma041/")
end
bd.flying_beaver.pickUp = function(arg1) -- line 1495
    manny:say_line("/bdma042/")
end
bd.flying_beaver.use_extinguisher = function(arg1) -- line 1499
    bd:beaver_gets_stuck()
end
bd.flying_beaver.use = bd.flying_beaver.pickUp
bd.rock_trail = Object:create(bd, "", 2.56338, 3.8006101, 0.488161, { range = 2.5 })
bd.rock_trail.use_pnt_x = 2.40117
bd.rock_trail.use_pnt_y = 1.38107
bd.rock_trail.use_pnt_z = 0.25
bd.rock_trail.use_rot_x = 0
bd.rock_trail.use_rot_y = -449.66599
bd.rock_trail.use_rot_z = 0
bd.rock_trail.lookAt = function(arg1) -- line 1515
    manny:say_line("/syma159/")
end
bd.rock_trail.pickUp = function(arg1) -- line 1518
    manny:say_line("/syma159/")
end
bd.rock_trail.use = function(arg1) -- line 1521
    manny:say_line("/syma159/")
end
bd.rock_trail.use_extinguisher = bd.extinguisher.use
bd.sg_door = Object:create(bd, "/bdtx051/road", -9.3249798, -5.7775102, 1.8, { range = 0.80000001 })
bd.sg_door.use_pnt_x = -8.6349201
bd.sg_door.use_pnt_y = -5.6901698
bd.sg_door.use_pnt_z = 1.4
bd.sg_door.use_rot_x = 0
bd.sg_door.use_rot_y = -243.368
bd.sg_door.use_rot_z = 0
bd.sg_door.lookAt = function(arg1) -- line 1539
    manny:say_line("/bdma052/")
end
bd.sg_door.use = function(arg1) -- line 1543
    sg:come_out_door(sg.mod_door)
end
bd.sg_door.walkOut = bd.sg_door.use
bd.bd_sg_box = bd.sg_door
bd.jump_point = Object:create(bd, "", 9.5613604, 5.0908999, -0.19, { range = 0 })
bd.jump_point.use_pnt_x = 9.5613604
bd.jump_point.use_pnt_y = 5.0908999
bd.jump_point.use_pnt_z = -0.19
bd.jump_point.use_rot_x = 0
bd.jump_point.use_rot_y = 101.076
bd.jump_point.use_rot_z = 0
bd.trail = Object:create(bd, "/bdtx063/trail", -4.8607001, -0.71929997, 1.5, { range = 0.60000002 })
bd.trail.use_pnt_x = -4.5086498
bd.trail.use_pnt_y = 0.68820697
bd.trail.use_pnt_z = 0.85000098
bd.trail.use_rot_x = 0
bd.trail.use_rot_y = 844.255
bd.trail.use_rot_z = 0
bd.trail.walkOut = function(arg1) -- line 1569
    bd:come_out_door(bd.gate)
end
bd.corner_box = bd.trail
bd.bv_door = Object:create(bd, "/bdtx064/door", -0.402688, 0.80833, 0.029999999, { range = 0 })
bd.bv_door.use_pnt_x = 1.65302
bd.bv_door.use_pnt_y = 0.56033897
bd.bv_door.use_pnt_z = 0.227428
bd.bv_door.use_rot_x = 0
bd.bv_door.use_rot_y = -259.535
bd.bv_door.use_rot_z = 0
bd.bv_door.out_pnt_x = 1.21024
bd.bv_door.out_pnt_y = 0.47850901
bd.bv_door.out_pnt_z = 0.218633
bd.bv_door.out_rot_x = 0
bd.bv_door.out_rot_y = -259.535
bd.bv_door.out_rot_z = 0
bd.bv_box = bd.bv_door
bd.bv_door.walkOut = function(arg1) -- line 1593
    bv:come_out_door(bv.bd_door)
end
beaver_run = 0
beaver_walk = 1
beaver_bite = 2
beaver_tail_beat = 3
beaver_climb_out = 4
beaver_dive_in = 5
beaver_old_freeze = 6
beaver_freeze_run = 7
beaver_big_dive = 8
beaver_relight = 9
beaver_trunc_dive = 10
beaver_flaming = 11
beaver_stop_flaming = 12
beaver_freeze_dive = 13
beaver_freeze = 14
bee_barrel_warm_base = 0
bee_barrel_warm_upr_hands = 1
bee_barrel_warm_lwr_hands = 2
bee_barrel_to_scrtch_hd = 3
bee_barrel_sctrch_head = 4
bee_barrel_stp_sctrch_hd = 5
bee_barrel_to_scrtch_chin = 6
bee_barrel_scrtch_chin = 7
bee_barrel_frm_scrtch_chin = 8
bee_barrel_step_right = 9
bee_barrel_step_left = 10
bee_barrel_rub_lwr_hands = 11
bee_barrel_lk_rt_to_ctr = 12
bee_barrel_one_foot = 13
bee_barrel_lk_rt_hold = 14
bee_barrel_lk_rt = 15
bee_barrel_lk_lft = 16
bee_barrel_lk_lft_hold = 17
bee_barrel_lk_lft_to_ctr = 18
bee_barrel_move_wing = 19
bee_barrel_start_warm_upr_hands = 20
bee_barrel_stop_warm_upr_hands = 21
bee_flavor_terry = 0
bee_flavor_bee1 = 1
bee_flavor_bee2 = 2
bee_flavor_bee3 = 3
bee_flavor_bee4 = 4
bee_flavor_bee5 = 5
bee_flavor_bee6 = 6
bee_flavor_wings_flap = 7
bee_flavor_no_flap = 8
bee_flavor_mumble = 9
bee_flavor_stop_talk = 10
bee_flavor_m = 11
bee_flavor_c = 12
bee_flavor_f = 13
bee_flavor_u = 14
bee_flavor_o = 15
bee_flavor_a = 16
bee_flavor_e = 17
bee_flavor_l = 18
bee_flavor_t = 19
bee_stamp_show_all = 0
bee_stamp_show_body = 1
bee_stamp_hide_body = 2
bee_stamp_show_wings = 3
bee_stamp_hide_wings = 4
bee_stamp_show_arms = 5
bee_stamp_hide_arms = 6
bee_stamp_show_head = 7
bee_stamp_hide_head = 8
bee_stamp_wings_and_arms = 9
bee_stamp_body_and_head = 10
bee_stamp_head_only = 11
bee_strike_sign_lo = 0
bee_strike_hover = 1
bee_strike_sign_hi = 2
bee_strike_shake_fist = 3
bee_strike_hold_lo = 4
bee_strike_hi_to_lo = 5
bee_strike_fist_to_akimbo = 6
bee_strike_akimbo_hold = 7
bee_strike_to_sign_hi = 8
bee_strike_to_fist = 9
bee_strike_to_akimbo = 10
bee_strike_akimbo_to_lo = 11
bee_works_to_hammer = 0
bee_works_hammer = 1
bee_works_stp_hammer = 2
bee_works_strt_forward = 3
bee_works_fly_forward = 4
bee_works_stop_forward = 5
bee_works_hover = 6
bee_works_fly_back = 7
bee_works_fly_back_hold = 8
bee_works_weld = 9
bee_works_fly_to_neutral = 10
bee_works_neutral_to_drill = 11
bee_works_drill_to_neutral = 12
bee_works_stop_drill = 13
bee_works_drill_loop = 14
bee_works_adj_drill = 15
bee_works_adj_to_fly = 16
bee_works_big_hammer = 17
bee_works_show_hmmr_wrnch = 18
bee_works_hide_hmmr_wrnch = 19
bee_works_show_drill = 20
bee_works_hide_drill = 21
bee_works_start_weld = 22
bee_works_stop_weld = 23
bee_works_start_adj_drill = 24
bee_works_stop_adj_drill = 25
bee_works_start_big_hmr = 26
bee_works_stop_big_hmr = 27
bee_works_show_big_hmr = 28
bee_works_hide_big_hmr = 29
bee_works_hold_big_hammer = 30
CheckFirstTime("be.lua")
be = Set:create("be.set", "Blue Casket Exterior", { be_front = 0, be_ovrhd = 1 })
be.enter = function(arg1) -- line 18
    if skinny_girl then
        skinny_girl:free()
    end
    if cig_girl then
        cig_girl:free()
    end
    if hooka_guy1 then
        hooka_guy1:free()
    end
    if hooka_guy2 then
        hooka_guy2:free()
    end
    if alexi then
        alexi:free()
    end
    if gunnar then
        gunnar:free()
    end
    if slisko then
        slisko:free()
    end
    if bi.book.act then
        bi.book.act:free()
    end
    if olivia then
        olivia:free()
    end
    if beat_waiter then
        beat_waiter:free()
    end
    beat_waiter.frozen = FALSE
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0.13, 1.15, 1.013)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow11")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 0.13, 1.15, 1.013)
    SetActorShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
    AddShadowPlane(manny.hActor, "shadow4")
    AddShadowPlane(manny.hActor, "shadow5")
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, 0, 0, 100)
    SetActorShadowPlane(manny.hActor, "shadow20")
    AddShadowPlane(manny.hActor, "shadow20")
end
be.exit = function(arg1) -- line 53
    KillActorShadows(manny.hActor)
end
be.sign = Object:create(be, "/betx002/sign", 0.66385001, 0.51091802, 0.63, { range = 0.89999998 })
be.sign.use_pnt_x = 0.01385
be.sign.use_pnt_y = 0.040918101
be.sign.use_pnt_z = 0
be.sign.use_rot_x = 0
be.sign.use_rot_y = 340.01001
be.sign.use_rot_z = 0
be.sign.lookAt = function(arg1) -- line 71
    soft_script()
    manny:say_line("/bema003/")
    wait_for_message()
    manny:say_line("/bema004/")
end
be.sign.pickUp = function(arg1) -- line 78
    system.default_response("attached")
end
be.sign.use = be.sign.lookAt
be.bw_door = Object:create(be, "/betx001/door", 0.001162, -1.0640399, 0.60000002, { range = 0.60000002 })
be.bw_door.use_pnt_x = 0.058942601
be.bw_door.use_pnt_y = -0.60401201
be.bw_door.use_pnt_z = 0.158694
be.bw_door.use_rot_x = 0
be.bw_door.use_rot_y = -170.021
be.bw_door.use_rot_z = 0
be.bw_door.out_pnt_x = 0.166039
be.bw_door.out_pnt_y = -1.1
be.bw_door.out_pnt_z = 0.26100001
be.bw_door.out_rot_x = 0
be.bw_door.out_rot_y = -168.386
be.bw_door.out_rot_z = 0
be.bw_door:make_untouchable()
be.bw_box = be.bw_door
be.bw_door.walkOut = function(arg1) -- line 107
    bw:come_out_door(bw.be_door)
end
be.bi_door = Object:create(be, "/betx005/door", 0.0020643701, 0.866988, 0.44999999, { range = 0.69999999 })
be.bi_door.use_pnt_x = 0.0020643701
be.bi_door.use_pnt_y = 0.65698802
be.bi_door.use_pnt_z = 0
be.bi_door.use_rot_x = 0
be.bi_door.use_rot_y = 1082.0699
be.bi_door.use_rot_z = 0
be.bi_door.out_pnt_x = -0.0063442402
be.bi_door.out_pnt_y = 0.82499999
be.bi_door.out_pnt_z = 0
be.bi_door.out_rot_x = 0
be.bi_door.out_rot_y = -353.702
be.bi_door.out_rot_z = 0
be.bi_box = be.bi_door
be.bi_door.lookAt = function(arg1) -- line 129
    manny:say_line("/bema006/")
end
be.bi_door.walkOut = function(arg1) -- line 133
    if not bi.seen_kiss then
        bi.kiss_trigger_set = TRUE
    end
    if not bi.seen_waiter then
        bi.waiter_cue = TRUE
    end
    bi:come_out_door(bi.be_door)
end
bibi_argue_yell2look_pu = 0
bibi_argue_yell = 1
bibi_argue_talk = 2
bibi_argue_look_pu2talk = 3
bibi_argue_look_pu = 4
bibi_argue_argue2look_pu = 5
bibi_argue_argue = 6
bibi_argue_2yell = 7
bibi_argue_2talk = 8
bibi_argue_2look_pu = 9
bibi_argue_2argue = 10
bibi_tag_tag_cw = 0
bibi_tag_tag_ccw = 1
bibi_tag_cw_hover_to_loop = 2
bibi_tag_cw_loop_to_hover = 3
bibi_tag_cw_loop = 4
bibi_tag_ccw_loop = 5
bibi_tag_ccw_hover_to_loop = 6
bibi_tag_ccw_hover = 7
bibi_tag_ccw_loop_to_hover = 8
bibi_talk_idles_mumble = 0
bibi_talk_idles_m = 1
bibi_talk_idles_c = 2
bibi_talk_idles_f = 3
bibi_talk_idles_e = 4
bibi_talk_idles_l = 5
bibi_talk_idles_u = 6
bibi_talk_idles_o = 7
bibi_talk_idles_a = 8
bibi_talk_idles_work2talk = 9
bibi_talk_idles_talk = 10
bibi_talk_idles_start_angelic = 11
bibi_talk_idles_angelic_loop = 12
bibi_talk_idles_end_angelic = 13
bibi_talk_idles_start_fear = 14
bibi_talk_idles_fear_loop = 15
bibi_talk_idles_end_fear = 16
bibi_talk_idles_start_sway = 17
bibi_talk_idles_sway_loop = 18
bibi_talk_idles_end_sway = 19
bibi_talk_idles_start_giggle = 20
bibi_talk_idles_gig_pos = 21
bibi_talk_idles_giggle_loop = 22
bibi_talk_idles_end_giggle = 23
bibi_talk_idles_talk2laugh = 24
bibi_talk_idles_laugh_loop = 25
bibi_talk_idles_end_laugh = 26
bibi_talk_idles_talk2bigcry = 27
bibi_talk_idles_end_cry = 28
bibi_talk_idles_talk2smcry = 29
bibi_talk_idles_smcry_loop = 30
bibi_talk_idles_end_smcry = 31
bibi_talk_idles_talk2sniff = 32
bibi_talk_idles_sniff_loop = 33
bibi_talk_idles_talk2scream = 34
bibi_talk_idles_scream_loop = 35
bibi_talk_idles_end_scream = 36
bibi_talk_idles_talk2work = 37
bibi_talk_idles_work_idle = 38
bibi_talk_idles_coral_stick_only = 39
bibi_talk_idles_bigcry_loop = 40
bibi_talk_idles_end_sniff = 41
bibi_talk_idles_stop_talk = 42
bibi_talk_idles_t = 43
bibi_work_idles_end_hammer = 0
bibi_work_idles_stick_coral_only = 1
bibi_work_idles_coral_only = 2
bibi_work_idles_scrap_only = 3
bibi_work_idles_stick_only = 4
bibi_work_idles_chisel2 = 5
bibi_work_idles_look_coral = 6
bibi_work_idles_putdown_chisel = 7
bibi_work_idles_chisel_cycle = 8
bibi_work_idles_start_chisel = 9
bibi_work_idles_blow = 10
bibi_work_idles_hammer_cycle = 11
bibi_work_idles_start_hammer = 12
bibi_work_idles_work_idle = 13
bibi_work_idles_show_nothing = 14
bibi_work_idles_ricochet = 15
bi_door_swing_open = 0
bi_door_swing_closed = 1
bi_door_open = 2
bi_door_closed = 3
CheckFirstTime("bi.lua")
dofile("bi_door.lua")
dofile("bi_olivia.lua")
dofile("mc_sna.lua")
dofile("lo_sna.lua")
dofile("nk_sna.lua")
dofile("ol_sna.lua")
dofile("olivia_idles.lua")
dofile("olivia_scripts.lua")
dofile("waiter_idles.lua")
dofile("passoutgirl.lua")
bi = Set:create("bi.set", "Blue Casket interior", { bi_clbws = 0, bi_kitdr = 1, bi_ovrhd = 2, bi_lolcu = 3, bi_olvcu = 4 })
dofile("patrons.lua")
bi.test = function() -- line 27
    olivia:default()
    dofile("dlg_olivia.lua")
    ol1:read_poem()
end
olivia.switch_to_standing = function(arg1) -- line 33
    start_script(olivia.idle_transition)
end
olivia.idle_transition = function() -- line 37
    while olivia.last_chore ~= olivia_idles_gest do
        break_here()
    end
    stop_script(olivia.new_run_idle)
    single_start_script(olivia.new_run_idle, olivia, "gest", olivia.standing_idle_table, "olivia_idles.cos")
end
bi.play_bongos = function(arg1) -- line 45
    local local1
    if arg1 and bi.commies.befriended or not arg1 then
        local1 = pick_one_of({ "bongo1.wav", "bongo2.wav", "bongo3.wav" })
        start_sfx(local1, nil, rndint(80, 127))
        set_pan(local1, 80)
    end
end
bi.waiter_collisions = function(arg1) -- line 56
    if arg1 then
        manny:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(manny.hActor, 0.35)
        beat_waiter:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(beat_waiter.hActor, 0.35)
    else
        manny:set_collision_mode(COLLISION_OFF)
        if beat_waiter then
            beat_waiter:set_collision_mode(COLLISION_OFF)
        end
    end
end
bi.first_see_waiter = function() -- line 68
    START_CUT_SCENE()
    bi.seen_waiter = TRUE
    beat_waiter:default()
    beat_waiter:set_rest_chore(nil)
    beat_waiter:follow_boxes()
    beat_waiter:put_in_set(bi)
    bi.waiter_collisions(TRUE)
    beat_waiter:setpos(0.418543, -0.3463, 0)
    beat_waiter:setrot(0, 271.512, 0)
    beat_waiter:stop_chore(nil, "waiter_idles.cos")
    beat_waiter:complete_chore(waiter_idles_pre_pickup_hooka, "waiter_idles.cos")
    start_script(manny.walk_and_face, manny, -0.0720952, 1.49985, 0.15, 0, 202.688, 0)
    sleep_for(1000)
    beat_waiter:run_chore(waiter_idles_pickup_hooka, "waiter_idles.cos")
    beat_waiter:stop_chore(waiter_idles_pickup_hooka, "waiter_idles.cos")
    beat_waiter:complete_chore(waiter_idles_activate_tray, "waiter_idles.cos")
    beat_waiter:complete_chore(waiter_idles_activate_hook_on_tray, "waiter_idles.cos")
    SetActorReflection(beat_waiter.hActor, 90)
    beat_waiter:walkto(-0.0297894, -2.06096, 0.15)
    beat_waiter:wait_for_actor()
    beat_waiter:free()
    END_CUT_SCENE()
end
bi.waiter_slip_roofie = function() -- line 93
    local local1, local2, local3
    bi.roofie_trigger_set = FALSE
    skinny_girl.passed_out = TRUE
    START_CUT_SCENE()
    skinny_girl:thaw(TRUE)
    skinny_girl:set_costume(nil)
    skinny_girl:set_costume("passoutgirl.cos")
    skinny_girl:put_in_set(bi)
    skinny_girl:setpos(-0.86548001, -0.81151998, 0)
    skinny_girl:setrot(0, 250.8644, 0)
    skinny_girl:complete_chore(passoutgirl_idle, "passoutgirl.cos")
    beat_waiter:default()
    beat_waiter:set_visibility(TRUE)
    beat_waiter:set_rest_chore(waiter_idles_idle, "waiter_idles.cos")
    beat_waiter:follow_boxes()
    beat_waiter:put_in_set(bi)
    beat_waiter:setpos(-0.54861498, -0.55734098, 0)
    beat_waiter:setrot(0, 193.98399, 0)
    beat_waiter:head_look_at(bi.patrons2)
    beat_waiter:complete_chore(waiter_idles_idle_shooters, "waiter_idles.cos")
    set_override(bi.waiter_slip_roofie_override)
    manny:set_collision_mode(COLLISION_OFF)
    start_script(manny.walk_and_face, manny, -0.0140883, -0.79628903, 0, 0, 78.018997, 0)
    manny:head_look_at(bi.patrons2)
    break_here()
    skinny_girl:thaw(TRUE)
    break_here()
    skinny_girl:play_chore(passoutgirl_get_shooter, "passoutgirl.cos")
    manny:wait_for_actor()
    skinny_girl:wait_for_chore(passoutgirl_get_shooter, "passoutgirl.cos")
    skinny_girl:run_chore(passoutgirl_drink_shooter, "passoutgirl.cos")
    skinny_girl:run_chore(passoutgirl_faint, "passoutgirl.cos")
    skinny_girl:freeze()
    local1, local2, local3 = GetActorNodeLocation(beat_waiter.hActor, 4)
    manny:head_look_at_point(local1, local2, local3)
    beat_waiter:head_look_at_manny()
    sleep_for(1000)
    manny:shrug_gesture()
    sleep_for(1000)
    manny:head_look_at(bi.patrons2)
    beat_waiter:head_look_at(nil)
    bi.waiter_collisions(TRUE)
    start_script(beat_waiter.walk_and_face, beat_waiter, -0.36238399, 0.66302198, 0, 0, 104.565, 0)
    sleep_for(1000)
    manny:head_look_at(nil)
    beat_waiter:wait_for_actor()
    END_CUT_SCENE()
    beat_waiter:run_chore(waiter_idles_putdown_hooka, "waiter_idles.cos")
    beat_waiter:freeze(waiter_idles_pre_pickup_hooka, waiter_idles_pre_pickup_hooka, "waiter_idles.cos")
    beat_waiter:set_visibility(FALSE)
    bi.waiter_collisions(TRUE)
end
bi.waiter_slip_roofie_override = function() -- line 154
    kill_override()
    skinny_girl:stop_chore()
    skinny_girl:set_costume("passoutgirl.cos")
    skinny_girl:setpos(-0.86548, -0.81152, 0)
    skinny_girl:setrot(0, 250.864, 0)
    skinny_girl:put_in_set(bi)
    skinny_girl:complete_chore(passoutgirl_faint_hold, "passoutgirl.cos")
    manny:head_look_at(nil)
    beat_waiter:head_look_at(nil)
    stop_script(beat_waiter.walk_and_face)
    stop_script(manny.walk_and_face)
    manny:setpos(-0.0140883, -0.796289, 0)
    manny:setrot(0, 78.019, 0)
    beat_waiter:setpos(-0.362384, 0.663022, 0)
    beat_waiter:setrot(0, 104.565, 0)
    beat_waiter:freeze(waiter_idles_pre_pickup_hooka, waiter_idles_pre_pickup_hooka, "waiter_idles.cos")
    beat_waiter:set_visibility(FALSE)
    bi.waiter_collisions(TRUE)
end
bi.olivia_takes_stage = function() -- line 175
    if find_script(olivia.head_follow_mesh) then
        stop_script(olivia.head_follow_mesh)
    end
    olivia:head_look_at(nil)
    olivia:follow_boxes()
    olivia:put_at_object(bi.mic)
    bi:current_setup(bi_clbws)
    bi.freeze_all_beatniks()
    stop_script(olivia.new_run_idle)
    single_start_script(olivia.new_run_idle, olivia, "rest", olivia.poetry_idle_table)
end
bi.olivia_leaves_stage = function() -- line 188
    olivia:ignore_boxes()
    olivia:stop_chore(nil, "olivia_idles")
    olivia:set_collision_mode(COLLISION_OFF)
    olivia:setpos(-0.61967, -1.73342, 0.15)
    olivia:setrot(0, 207.129, 0)
    bi:current_setup(bi_olvcu)
    stop_script(olivia.new_run_idle)
    single_start_script(bi.idle_reds)
    single_start_script(bi.idle_beats)
    olivia:head_look_at_manny()
    start_script(olivia.head_follow_mesh, olivia, manny, 6)
    single_start_script(olivia.new_run_idle, olivia, "rest_pos", olivia.dialog_idle_table, "olivia_idles.cos")
end
bi.sna_event_watcher = function(arg1) -- line 203
    while 1 do
        if mc_sna_event then
            dostring(sna_events.manny[mc_sna_event])
            mc_sna_event = FALSE
        end
        if lo_sna_event then
            dostring(sna_events.lola[lo_sna_event])
            lo_sna_event = FALSE
        end
        if nk_sna_event then
            dostring(sna_events.nick[nk_sna_event])
            nk_sna_event = FALSE
        end
        if ol_sna_event then
            dostring(sna_events.olivia[ol_sna_event])
            ol_sna_event = FALSE
        end
        break_here()
    end
end
sna_events = { manny = { }, lola = { }, olivia = { }, nick = { } }
sna_events.manny[1] = "manny:say_line(\"/Snama01a/Lola?  What are you doing here?\")"
sna_events.manny[2] = "manny:say_line(\"/snama01b/This crowd doesn't go much for souvenir pictures.\")"
sna_events.manny[3] = "manny:say_line(\"/snama01c/Except, maybe of Lenin...\")"
sna_events.manny[4] = "manny:say_line(\"/snama03a/Still hung up on Max, eh?\")"
sna_events.manny[5] = "manny:say_line(\"/snama03b/Take my advice, Angel...\")"
sna_events.manny[6] = "manny:say_line(\"/snama03c/Forget about him!\")"
sna_events.manny[7] = "manny:say_line(\"/snama03d/He's a gambling racketeer.\")"
sna_events.manny[8] = "manny:say_line(\"/snama05/Oh, that hurts, baby!\")"
sna_events.lola[1] = "lola:say_line(\"/snalo02a/Shhhh! Manny, I'm on a stake-out!\")"
sna_events.lola[2] = "lola:say_line(\"/snalo02b/I'm gonna prove to Maximino once and for all that Olivia's no good for him!\")"
sna_events.lola[3] = "lola:say_line(\"/snalo04/Ha, ha. Like you?\")"
sna_events.lola[4] = "lola:say_line(\"/snalo06/Shhh! Here they come.\")"
sna_events.lola[5] = "--lola snaps photo"
sna_events.nick[1] = "virago:say_line(\"/snavi07a/Come on, sugar!\")"
sna_events.nick[2] = "virago:say_line(\"/snavi07b/How about a kiss for the road?\")"
sna_events.nick[3] = "virago:say_line(\"/snavi09/I don't, but I know a good tort when I see one.\")"
sna_events.nick[4] = "virago:say_line(\"/snavi09b/(kiss)\")"
sna_events.nick[5] = "virago:say_line(\"/snavi10/Hey!\")"
sna_events.nick[6] = "virago:say_line(\"/snavi11/If Maximino sees that, we're going to end up in matching terra cotta pots!\")"
sna_events.nick[7] = "virago:say_line(\"/hlvi170/Rrrr.\")"
sna_events.olivia[1] = "olivia:say_line(\"/snaol08a/Oh, ick. Don't let me down, Nick.\")"
sna_events.olivia[2] = "olivia:say_line(\"/snaol08b/You're a lawyer...\")"
sna_events.olivia[3] = "olivia:say_line(\"/snaol08c/You're not supposed to have feelings.\")"
sna_events.olivia[4] = "olivia:say_line(\"/snaol12/Don't be silly.\")"
sna_events.olivia[5] = "olivia:say_line(\"/snaol13/(puff) He wouldn't hurt me.\")"
sna_events.olivia[6] = "olivia:say_line(\"/snaol14/He LOVES me!\")"
sna_events.olivia[7] = "olivia:say_line(\"/snaol15a/Manny! At last we're alone.\")"
sna_events.olivia[8] = "olivia:say_line(\"/snaol15b/Tell me. How are the bourgeois?\")"
bi.snapshot = function(arg1) -- line 260
    local local1, local2, local3
    bi.seen_kiss = TRUE
    hl.nick_gone = FALSE
    bi.kiss_trigger_set = FALSE
    stop_script(bi.idle_reds)
    START_CUT_SCENE()
    bi:switch_to_set()
    bi:current_setup(bi_kitdr)
    LoadCostume("olivia_idles.cos")
    LoadCostume("nk_sna.cos")
    LoadCostume("ol_sna.cos")
    LoadCostume("lo_sna.cos")
    LoadCostume("mc_sna.cos")
    bi.office_door:play_chore(bi_olivia_closed)
    if not lola then
        lola = Actor:create(nil, nil, nil, "/bitx411/")
    end
    lola:set_costume("lo_sna.cos")
    lola:put_in_set(bi)
    lola:ignore_boxes()
    lola:set_talk_color(Aqua)
    lola:set_mumble_chore(lo_sna_mumble, "lo_sna.cos")
    lola:set_head(3, 4, 5, 165, 28, 80)
    lola:set_turn_rate(140)
    lola:set_talk_chore(1, lo_sna_stop_talk)
    lola:set_talk_chore(2, lo_sna_a)
    lola:set_talk_chore(3, lo_sna_c)
    lola:set_talk_chore(4, lo_sna_e)
    lola:set_talk_chore(5, lo_sna_f)
    lola:set_talk_chore(6, lo_sna_l)
    lola:set_talk_chore(7, lo_sna_m)
    lola:set_talk_chore(8, lo_sna_o)
    lola:set_talk_chore(9, lo_sna_t)
    lola:set_talk_chore(10, lo_sna_u)
    lola:set_softimage_pos(0.61479998, 1.5103, 19.7619)
    lola:setrot(0, 39.396999, 0)
    manny:stop_chore()
    manny:setpos(-0.0436312, -1.0274, 0)
    manny:setrot(0, 180.133, 0)
    LoadCostume("mc_sna.cos")
    set_override(bi.snapshot_override)
    break_here()
    lola:play_chore(lo_sna_intro)
    manny:walk_and_face(0.041620001, -1.24974, 0.15189999, 0, 180, 0)
    manny:clear_hands()
    manny:ignore_boxes()
    manny:push_costume("mc_sna.cos")
    manny:set_softimage_pos(0.41620001, 1.5190001, 12.4974)
    manny:setrot(0, 180, 0)
    break_here()
    manny:say_line("/snama01a/")
    manny:play_chore(mc_sna_snama01a, "mc_sna.cos")
    wait_for_message()
    manny:play_chore(mc_sna_snama01b, "mc_sna.cos")
    manny:say_line("/snama01b/")
    wait_for_message()
    manny:play_chore(mc_sna_snama01c, "mc_sna.cos")
    manny:say_line("/snama01c/")
    wait_for_message()
    bi:current_setup(bi_lolcu)
    lola:head_look_at_point({ x = 0.12342, y = -1.68214, z = 0.60780001 })
    lola:play_chore(lo_sna_snalo02a)
    lola:say_line("/snalo02a/")
    wait_for_message()
    lola:play_chore(lo_sna_snalo02b)
    lola:say_line("/snalo02b/")
    wait_for_message()
    bi:current_setup(bi_kitdr)
    lola:head_look_at(nil)
    manny:say_line("/snama03a/")
    manny:play_chore(mc_sna_snama03a, "mc_sna.cos")
    wait_for_message()
    manny:say_line("/snama03b/")
    manny:play_chore(mc_sna_snama03b, "mc_sna.cos")
    wait_for_message()
    manny:say_line("/snama03c/")
    manny:play_chore(mc_sna_snama03c, "mc_sna.cos")
    wait_for_message()
    bi:current_setup(bi_lolcu)
    manny:say_line("/snama03d/")
    manny:play_chore(mc_sna_snama03d, "mc_sna.cos")
    wait_for_message()
    lola:head_look_at_point({ x = 0.12342, y = -1.68214, z = 0.60780001 })
    lola:play_chore(lo_sna_snalo04)
    lola:say_line("/snalo04/")
    wait_for_message()
    bi:current_setup(bi_kitdr)
    manny:play_chore(mc_sna_snama05, "mc_sna.cos")
    manny:say_line("/snama05/")
    wait_for_message()
    start_sfx("biApprch.wav")
    sleep_for(1500)
    bi:current_setup(bi_lolcu)
    lola:head_look_at(nil)
    lola:play_chore(lo_sna_snalo06)
    lola:say_line("/snalo06/")
    wait_for_message()
    bi:current_setup(bi_kitdr)
    lola:stop_chore()
    lola:play_chore(lo_sna_nk_ol_enter)
    manny:stop_chore()
    manny:play_chore(mc_sna_nk_ol_enter, "mc_sna.cos")
    sleep_for(2000)
    lola:wait_for_chore(lo_sna_nk_ol_enter)
    lola:freeze()
    manny:freeze()
    olivia:put_in_set(bi)
    olivia:ignore_boxes()
    olivia:set_costume("ol_sna.cos")
    olivia:set_mumble_chore(ol_sna_mumble, "ol_sna.cos")
    olivia:set_talk_chore(1, ol_sna_stop_talk)
    olivia:set_talk_chore(2, ol_sna_a)
    olivia:set_talk_chore(3, ol_sna_c)
    olivia:set_talk_chore(4, ol_sna_e)
    olivia:set_talk_chore(5, ol_sna_f)
    olivia:set_talk_chore(6, ol_sna_l)
    olivia:set_talk_chore(7, ol_sna_m)
    olivia:set_talk_chore(8, ol_sna_o)
    olivia:set_talk_chore(9, ol_sna_t)
    olivia:set_talk_chore(10, ol_sna_u)
    olivia:set_collision_mode(COLLISION_OFF)
    olivia:setpos(-0.88085002, -1.77821, 0.15586001)
    olivia:setrot(0, 293.21201, 0)
    virago:put_in_set(bi)
    virago:ignore_boxes()
    virago:set_costume("nk_sna.cos")
    virago:set_mumble_chore(nk_sna_mumble, "nk_sna.cos")
    virago:set_talk_chore(1, nk_sna_stop_talk)
    virago:set_talk_chore(2, nk_sna_a)
    virago:set_talk_chore(3, nk_sna_c)
    virago:set_talk_chore(4, nk_sna_e)
    virago:set_talk_chore(5, nk_sna_f)
    virago:set_talk_chore(6, nk_sna_l)
    virago:set_talk_chore(7, nk_sna_m)
    virago:set_talk_chore(8, nk_sna_o)
    virago:set_talk_chore(9, nk_sna_t)
    virago:set_talk_chore(10, nk_sna_u)
    virago:setpos(-1.02335, -1.88301, 0.15586001)
    virago:setrot(0, 293.20099, 0)
    break_here()
    bi.office_door:play_chore(bi_olivia_swing_open)
    start_sfx("lovedrop.wav")
    olivia:play_chore(ol_sna_intro, "ol_sna.cos")
    virago:play_chore(nk_sna_intro, "nk_sna.cos")
    virago:wait_for_chore(nk_sna_intro, "nk_sna.cos")
    bi:current_setup(bi_olvcu)
    virago:play_chore(nk_sna_snavi07a, "nk_sna.cos")
    virago:say_line("/snavi07a/")
    wait_for_message()
    virago:play_chore(nk_sna_snavi07b, "nk_sna.cos")
    virago:say_line("/snavi07b/")
    wait_for_message()
    olivia:play_chore(ol_sna_snaol08a, "ol_sna.cos")
    olivia:say_line("/snaol08a/")
    wait_for_message()
    olivia:play_chore(ol_sna_snaol08b, "ol_sna.cos")
    olivia:say_line("/snaol08b/")
    wait_for_message()
    olivia:play_chore(ol_sna_snaol08c, "ol_sna.cos")
    olivia:say_line("/snaol08c/")
    wait_for_message()
    virago:play_chore(nk_sna_snavi09, "nk_sna.cos")
    sleep_for(100)
    virago:say_line("/snavi09/")
    virago:wait_for_chore(nk_sna_snavi09, "nk_sna.cos")
    olivia:play_chore(ol_sna_kiss, "ol_sna.cos")
    virago:run_chore(nk_sna_kiss, "nk_sna.cos")
    virago:say_line("/snavi09b/")
    lola:thaw()
    manny:thaw()
    break_here()
    TurnLightOn("flash", TRUE)
    sleep_for(150)
    TurnLightOn("flash", FALSE)
    bi:current_setup(bi_kitdr)
    lola:play_chore(lo_sna_flash_run, "lo_sna.cos")
    olivia:play_chore(ol_sna_up, "ol_sna.cos")
    virago:play_chore(nk_sna_lookup, "nk_sna.cos")
    virago:wait_for_chore(nk_sna_lookup, "nk_sna.cos")
    virago:play_chore(nk_sna_snavi10, "nk_sna.cos")
    virago:say_line("/snavi10/")
    wait_for_message()
    manny:head_look_at(bi.olivia_obj)
    olivia:play_chore(ol_sna_look_nk, "ol_sna.cos")
    virago:play_chore(nk_sna_snavi11, "nk_sna.cos")
    virago:say_line("/snavi11/")
    sleep_for(2000)
    bi:current_setup(bi_olvcu)
    manny:default()
    manny:setpos(-0.306454, -1.42422, 0.15000001)
    manny:setrot(0, 235.17599, 0)
    wait_for_message()
    olivia:say_line("/snaol12/")
    wait_for_message()
    olivia:play_chore(ol_sna_smoke, "ol_sna.cos")
    olivia:say_line("/snaol13/")
    virago:run_chore(nk_sna_look_ol, "nk_sna.cos")
    wait_for_message()
    olivia:play_chore(ol_sna_turn, "ol_sna.cos")
    olivia:say_line("/snaol14/")
    wait_for_message()
    virago:play_chore(nk_sna_hlvi170, "nk_sna.cos")
    wait_for_message()
    virago:say_line("/hlvi170/")
    wait_for_message()
    bi:current_setup(bi_kitdr)
    while virago:is_choring(nk_sna_hlvi170, TRUE, "nk_sna.cos") do
        local1, local2, local3 = GetActorNodeLocation(virago.hActor, 5)
        manny:head_look_at_point(local1, local2, local3)
        break_here()
    end
    system:lock_display()
    bi:current_setup(bi_clbws)
    bi.freeze_all_beatniks()
    lola:setpos(0.043258, 1.21296, 0.1569)
    lola:setrot(0, 98.486, 0)
    lola:stop_chore()
    virago:setpos(-0.024041999, -0.81764102, 0)
    virago:setrot(0, 349.323, 0)
    virago:stop_chore()
    break_here()
    system:unlock_display()
    lola:play_chore(lo_sna_run, "lo_sna.cos")
    virago:play_chore(nk_sna_run, "nk_sna.cos")
    olivia:say_line("/snaol15a/")
    sleep_for(200)
    manny:head_look_at(bi.olivia_obj)
    sleep_for(200)
    start_script(manny.walkto_object, manny, bi.olivia_obj)
    sleep_for(200)
    virago:wait_for_chore(nk_sna_run, "nk_sna.cos")
    system:lock_display()
    virago:free()
    lola:free()
    bi:current_setup(bi_olvcu)
    olivia:default()
    olivia:set_collision_mode(COLLISION_OFF)
    olivia:setpos(-0.61966997, -1.73342, 0.15000001)
    olivia:setrot(0, 207.129, 0)
    single_start_script(olivia.new_run_idle, olivia, "gest", olivia.dialog_idle_table, "olivia_idles.cos")
    break_here()
    system:unlock_display()
    wait_for_message()
    olivia:say_line("/snaol15b/")
    wait_for_message()
    manny:say_line("/bima222/")
    manny:tilt_head_gesture()
    wait_for_message()
    olivia:say_line("/biol223/")
    wait_for_message()
    cameraman_disabled = TRUE
    END_CUT_SCENE()
    cameraman_disabled = TRUE
    Dialog:run("ol1", "dlg_olivia.lua")
end
bi.snapshot_override = function() -- line 563
    kill_override()
    lola:free()
    virago:free()
    ForceRefresh()
    shut_up_everybody()
    manny:default()
    manny:follow_boxes()
    manny:put_at_object(bi.olivia_obj)
    manny:set_look_rate(130)
    manny:head_look_at(bi.olivia_obj)
    bi.set_up_states()
    bi.set_up_actors()
    bi:current_setup(bi_kitdr)
    if not ol1 then
        dofile("dlg_olivia.lua")
    end
    ol1.been = TRUE
end
bi.push_out_door = function(arg1) -- line 581
    if not manny:find_sector_name("bk_door") then
        soft_script()
        manny:walkto_object(bi.bk_door)
        manny:wait_for_actor()
    end
    START_CUT_SCENE()
    bi.bk_door:play_chore(bi_door_swing_open)
    manny:walkto_object(bi.bk_door, TRUE)
    manny:wait_for_actor()
    bi.bk_door:run_chore(bi_door_swing_closed)
    break_here()
    bk:push_in_door()
    END_CUT_SCENE()
end
bi.reunion = function(arg1) -- line 597
    local local1 = olivia:getpos()
    olivia.reunited = TRUE
    START_CUT_SCENE()
    bi.office_door:play_chore(4)
    start_sfx("DorTUOpn.wav")
    olivia:set_visibility(TRUE)
    manny:head_look_at_point(local1.x, local1.y, local1.z + 0.5)
    olivia:say_line("/biol396/")
    wait_for_message()
    olivia:say_line("/biol397/")
    wait_for_message()
    manny:say_line("/bima398/")
    wait_for_message()
    manny:say_line("/bima399/")
    wait_for_message()
    olivia:say_line("/biol400/")
    wait_for_message()
    olivia:say_line("/biol401/")
    wait_for_message()
    olivia:say_line("/biol402/")
    if arg1 then
        olivia:walkto(-0.310821, -1.85579, 0.15000001, 0, -348.32199, 0)
        olivia:wait_for_actor()
        olivia:ignore_boxes()
        olivia:setpos(-0.81164098, -1.61875, 0.15000001)
        olivia:setrot(0, -459.47601, 0)
        olivia:play_chore(olivia_idles_rest_pos, "olivia_idles.cos")
        olivia:set_visibility(FALSE)
    end
    wait_for_message()
    bi.office_door:play_chore(5)
    start_sfx("DorTUCls.wav")
    olivia:set_visibility(FALSE)
    manny:head_look_at(nil)
    manny:say_line("/bima403/")
    END_CUT_SCENE()
end
bi.critique_poem = function(arg1) -- line 641
    START_CUT_SCENE()
    bi.critiqued = TRUE
    bi:alexi_talking()
    set_override(bi.critique_poem_override)
    start_script(bi.manny_follow_conversation)
    manny:say_line("/bima001/")
    wait_for_message()
    slisko:say_line("/bisl002/")
    wait_for_message()
    slisko:say_line("/bisl003/")
    wait_for_message()
    alexi:say_line("/bial004/")
    wait_for_message()
    alexi:say_line("/bial005/")
    wait_for_message()
    alexi:say_line("/bial006/")
    wait_for_message()
    gunnar:say_line("/bigu007/")
    wait_for_message()
    gunnar:say_line("/bigu008/")
    wait_for_message()
    gunnar:say_line("/bigu009/")
    bi:alexi_not_talking()
    END_CUT_SCENE()
    stop_script(bi.manny_follow_conversation)
end
bi.critique_poem_override = function() -- line 669
    kill_override()
    shut_up_everybody()
    stop_script(bi.manny_follow_conversation)
    bi:alexi_not_talking()
end
bi.rusty_anchor_poem = function(arg1) -- line 676
    START_CUT_SCENE()
    if not bi.read_rusty_anchor then
        bi.read_rusty_anchor = TRUE
        olivia:say_line("/biol010/")
        wait_for_message()
        olivia:say_line("/biol011/")
        wait_for_message()
        olivia:say_line("/biol012/")
        wait_for_message()
    else
        olivia:say_line("/biol013/")
        wait_for_message()
        olivia:say_line("/biol014/")
    end
    wait_for_message()
    bi.olivia_takes_stage()
    sleep_for(1000)
    olivia:say_line("/biol015/")
    wait_for_message()
    olivia:say_line("/biol016/")
    wait_for_message()
    olivia:say_line("/biol017/")
    wait_for_message()
    olivia:say_line("/biol018/")
    wait_for_message()
    olivia:say_line("/biol019/")
    wait_for_message()
    olivia:say_line("/biol020/")
    wait_for_message()
    olivia:say_line("/biol021/")
    wait_for_message()
    olivia:say_line("/biol022/")
    wait_for_message()
    bi.olivia_leaves_stage()
    END_CUT_SCENE()
    sleep_for(500)
    manny:say_line("/bima023/")
    wait_for_message()
    olivia:say_line("/biol024/")
end
bi.bother_commies = function(arg1) -- line 732
    START_CUT_SCENE()
    bi.commies.bug_count = bi.commies.bug_count + 1
    stop_script(bi.idle_reds)
    if bi.commies.bug_count < 2 then
        alexi:thaw(TRUE)
        alexi.body:thaw(TRUE)
        alexi.body:set_visibility(FALSE)
        alexi:complete_chore(alexi_meshes_show_all, "alexi_meshes.cos")
    end
    slisko:thaw(TRUE)
    slisko.body:thaw(TRUE)
    slisko.body:set_visibility(FALSE)
    slisko:complete_chore(slisko_meshes_show_everything, "slisko_meshes.cos")
    start_script(bi.manny_follow_conversation)
    slisko:stop_chore(slisko_foot_bounce, "slisko.cos")
    slisko:play_chore(slisko_rest, "slisko.cos")
    if bi.commies.bug_count == 1 then
        manny:walkto(bi.commies)
        manny:head_look_at(nil)
        manny:wait_for_actor()
        manny:play_chore(mc_a, "mc.cos")
        manny:hand_gesture()
        sleep_for(750)
        slisko:say_line("/bisl025/")
        manny:play_chore(mc_stop_talk, "mc.cos")
        slisko:wait_for_message()
        wait_for_message()
        slisko:say_line("/bisl026/")
        wait_for_message()
        gunnar:say_line("/bigu027/")
        wait_for_message()
        alexi:say_line("/bial028/")
        wait_for_message()
        alexi:say_line("/bial029/")
        alexi:wait_for_message()
        manny:say_line("/bima030/")
        wait_for_message()
        slisko:say_line("/bisl031/")
        sleep_for(500)
        slisko:head_look_at_point(slisko.gunnar_point)
        sleep_for(2000)
        slisko:run_chore(slisko_gesture1, "slisko.cos")
        wait_for_message()
        slisko:say_line("/bisl032/")
        break_here()
        slisko:run_chore(slisko_point, "slisko.cos")
        break_here()
        sleep_for(1000)
        slisko:run_chore(slisko_gesture2, "slisko.cos")
        sleep_for(500)
        slisko:run_chore(slisko_gesture4, "slisko.cos")
        break_here()
        slisko:run_chore(slisko_gesture5, "slisko.cos")
        slisko:run_chore(slisko_gesture6, "slisko.cos")
        wait_for_message()
        slisko:play_chore(slisko_back_to_rest, "slisko.cos")
        alexi:say_line("/bial033/")
        wait_for_message()
        alexi:say_line("/bial034/")
        wait_for_message()
    elseif bi.commies.bug_count == 2 then
        manny:say_line("/bima035/")
        wait_for_message()
        gunnar:say_line("/bigu036/")
        wait_for_message()
        manny:say_line("/bima037/")
        manny:shrug_gesture()
        wait_for_message()
        slisko:say_line("/bisl038/")
        break_here()
        slisko:play_chore(slisko_gesture1, "slisko.cos")
        wait_for_message()
        slisko:play_chore(slisko_back_to_rest, "slisko.cos")
        manny:say_line("/bima039/")
        manny:tilt_head_gesture()
    elseif bi.commies.bug_count == 3 then
        manny:say_line("/bima040/")
        wait_for_message()
        gunnar:say_line("/bigu041/")
        wait_for_message()
        gunnar:say_line("/bigu042/")
        wait_for_message()
        slisko:hand_up()
        slisko:say_line("/bisl043/")
        wait_for_message()
        slisko:hand_down()
    elseif bi.commies.bug_count > 3 then
        manny:say_line("/bima044/")
        manny:head_forward_gesture()
        wait_for_message()
    end
    if bi.commies.bug_count == 4 then
        slisko:say_line("/bisl045/")
        sleep_for(1000)
        slisko:start_jivin()
        wait_for_message()
        slisko:stop_jivin()
    elseif bi.commies.bug_count == 5 then
        slisko:start_jivin()
        slisko:say_line("/bisl046/")
        wait_for_message()
        slisko:stop_jivin()
        slisko:say_line("/bisl047/")
    elseif bi.commies.bug_count == 6 then
        slisko:play_chore(slisko_look_at_gunar, "slisko.cos")
        slisko:say_line("/bisl048/")
        wait_for_message()
        slisko:play_chore(slisko_back_to_rest, "slisko.cos")
        slisko:say_line("/bisl049/")
        manny:twist_head_gesture()
        sleep_for(3000)
        slisko:start_pointing()
        wait_for_message()
        slisko:stop_pointing()
    elseif bi.commies.bug_count == 7 then
        slisko:say_line("/bisl050/")
        sleep_for(2000)
        slisko:start_jivin()
        wait_for_message()
        slisko:stop_jivin()
    elseif bi.commies.bug_count == 8 then
        slisko:say_line("/bisl051/")
        sleep_for(3000)
        slisko:hand_up()
        wait_for_message()
        slisko:hand_down()
    elseif bi.commies.bug_count > 8 then
        slisko:hand_up()
        slisko:say_line("/bisl052/")
        wait_for_message()
        sleep_for(1000)
        slisko:hand_down()
    end
    wait_for_message()
    slisko:wait_for_chore(nil, "slisko.cos")
    slisko:complete_chore(slisko_rest, "slisko.cos")
    sleep_for(1000)
    END_CUT_SCENE()
    if not alexi.frozen then
        alexi:freeze()
    end
    stop_script(bi.manny_follow_conversation)
    start_script(bi.idle_reds)
end
bi.befriend_commies = function(arg1) -- line 899
    START_CUT_SCENE("no head")
    manny:clear_hands()
    manny:point_gesture()
    manny:say_line("/bima053/")
    wait_for_message()
    manny:say_line("/bima054/")
    wait_for_message()
    if bi.commies.befriended then
        gunnar:say_line("/bigu129/")
    else
        bi.commies.befriended = TRUE
        bi:alexi_talking()
        manny:head_look_at(bi.commies)
        slisko:say_line("/bisl055/")
        wait_for_message()
        alexi:say_line("/bial056/")
        wait_for_message()
        manny:head_look_at(bi.commies2)
        alexi:say_line("/bial057/")
        wait_for_message()
        manny:walkto_object(bi.commies)
        manny:pull_out_item(cf.letters)
        manny:say_line("/bima058/")
        wait_for_message()
        music_state:set_sequence(seqBefriendCommies)
        alexi:say_line("/bial059/")
        wait_for_message()
        alexi:say_line("/bial060/")
        wait_for_message()
        gunnar:say_line("/bigu061/")
        wait_for_message()
        alexi:say_line("/bial062/")
        wait_for_message()
        alexi:say_line("/bial063/")
        wait_for_message()
        manny:head_look_at(bi.commies)
        start_script(manny.clear_hands, manny)
        gunnar:say_line("/bigu064/")
        wait_for_message()
        wait_for_script(manny.clear_hands)
        manny:twist_head_gesture()
        manny:say_line("/bima065/")
        wait_for_message()
        alexi:say_line("/bial066/")
        wait_for_message()
        slisko:say_line("/bisl067/")
        wait_for_message()
        manny:hand_gesture()
        manny:say_line("/bima068/")
        wait_for_message()
        time_to_look = FALSE
        manny:head_look_at(bi.bk_door)
        sleep_for(500)
        manny:head_look_at(bi.sign)
        sleep_for(500)
        manny:head_look_at(bi.commies2)
        sleep_for(1000)
        time_to_look = TRUE
        manny:head_forward_gesture()
        manny:say_line("/bima069/")
        wait_for_message()
        alexi:say_line("/bial070/")
        wait_for_message()
        bi:alexi_not_talking()
    end
    END_CUT_SCENE()
end
bi.set_up_states = function() -- line 973
    if in_year_four then
        bi.commies:make_untouchable()
        bi.commies2:make_untouchable()
        bi.book:make_untouchable()
        bi.patrons1:make_untouchable()
        bi.patrons2:make_untouchable()
        bi.olivia_obj:make_untouchable()
        box_off("inside_office")
        box_off("office_trigger")
        NewObjectState(bi_clbws, OBJSTATE_UNDERLAY, "bi_patron1_gone.bm", nil, TRUE)
        NewObjectState(bi_clbws, OBJSTATE_UNDERLAY, "bi_patron2_gone.bm")
        bi.sign:set_object_state("bi_yr_4.cos")
        bi.sign:play_chore(0)
    elseif bi.seen_kiss then
        bi.office_door:play_chore(bi_olivia_opened)
    end
end
bi.set_up_actors = function() -- line 994
    if in_year_four then
        bi.seen_kiss = TRUE
        bi.kiss_trigger_set = FALSE
        if not alexi then
            alexi = Actor:create()
        end
        if not slisko then
            slisko = Actor:create()
        end
        if not gunnar then
            gunnar = Actor:create()
        end
        if not cig_girl then
            cig_girl = Actor:create()
        end
        if not hooka_guy1 then
            hooka_guy1 = Actor:create()
        end
        if not hooka_guy2 then
            hooka_guy2 = Actor:create()
        end
        if not beat_waiter then
            beat_waiter = Actor:create()
        end
        if not skinny_girl then
            skinny_girl = Actor:create()
        end
        olivia:default()
        olivia:put_in_set(bi)
        olivia:set_collision_mode(COLLISION_OFF)
        olivia:setpos(-0.811641, -1.61875, 0.15)
        olivia:setrot(0, -459.476, 0)
        olivia:play_chore(olivia_idles_rest_pos, "olivia_idles.cos")
        olivia:set_visibility(FALSE)
    else
        system:lock_display()
        if bi.seen_kiss then
            olivia:default()
            olivia:put_in_set(bi)
            olivia:set_collision_mode(COLLISION_OFF)
            olivia:setpos(-0.61967, -1.73342, 0.15)
            olivia:setrot(0, 207.129, 0)
            single_start_script(olivia.new_run_idle, olivia, "rest_pos", olivia.standing_idle_table, "olivia_idles.cos")
        end
        if not skinny_girl then
            skinny_girl = Actor:create(nil, nil, nil, "patron")
        end
        skinny_girl:put_in_set(bi)
        if skinny_girl.passed_out then
            skinny_girl:set_costume("passoutgirl.cos")
            skinny_girl:setpos(-0.86548, -0.81152, 0)
            skinny_girl:setrot(0, 250.864, 0)
            skinny_girl:play_chore(passoutgirl_faint_hold, "passoutgirl.cos")
        else
            skinny_girl:set_costume("skinny_girl.cos")
            skinny_girl:setpos(-0.86548, -0.81152, 0)
            skinny_girl:setrot(0, 610.864, 0)
            skinny_girl:play_chore(0)
        end
        if not cig_girl then
            cig_girl = Actor:create(nil, nil, nil, "patron")
        end
        cig_girl:put_in_set(bi)
        cig_girl:set_costume("cig_girl.cos")
        cig_girl:setpos(0.55717, -0.09235, -0.09568)
        cig_girl:setrot(0, 159.987, 0)
        cig_girl:play_chore(cig_girl_gesture2, "cig_girl.cos")
        if not hooka_guy1 then
            hooka_guy1 = Actor:create(nil, nil, nil, "patron")
        end
        hooka_guy1:set_costume(nil)
        hooka_guy1:set_costume("hooka_guys.cos")
        hooka_guy1:push_costume("alexi_meshes.cos")
        hooka_guy1:put_in_set(bi)
        hooka_guy1:setpos(-0.35879, -1.15406, 0)
        hooka_guy1:setrot(0, 35.042, 0)
        hooka_guy1:play_chore(hooka_guys_rest, "hooka_guys.cos")
        if not hooka_guy2 then
            hooka_guy2 = Actor:create(nil, nil, nil, "patron")
        end
        hooka_guy2:set_costume(nil)
        hooka_guy2:set_costume("hooka_guys.cos")
        hooka_guy2:push_costume("alexi_meshes.cos")
        hooka_guy2:put_in_set(bi)
        hooka_guy2:setpos(0.86438, -0.19216, 0)
        hooka_guy2:setrot(0, 98.64, 0)
        hooka_guy2:play_chore(hooka_guys_rest, "hooka_guys.cos")
        alexi:default()
        gunnar:default()
        slisko:default()
        if bi.book.touchable then
            if not bi.book.act then
                bi.book.act = Actor:create()
            end
            bi.book.act:set_costume("book.cos")
            bi.book.act:put_in_set(bi)
            bi.book.act:setpos(0.6224, -1.0065, 0.2373)
            bi.book.act:setrot(0, 239.54, 0)
        else
            bi.book.act:put_in_set(nil)
        end
        break_here()
        skinny_girl:freeze()
        cig_girl:freeze()
        hooka_guy1:freeze()
        hooka_guy2:freeze()
        alexi:play_chore(alexi_rest, "alexi.cos")
        single_start_script(bi.idle_reds)
        single_start_script(bi.idle_beats)
        system:unlock_display()
        manny:set_collision_mode(COLLISION_OFF)
    end
end
bi.update_music_state = function(arg1) -- line 1123
    if in_year_four then
        if bi:current_setup() == bi_clbws then
            return stateBI_CLBYR4
        else
            return stateBI_KITYR4
        end
    else
        return stateBI
    end
end
bi.enter = function(arg1) -- line 1137
    start_script(bi.set_up_states)
    start_script(bi.set_up_actors)
    bi.bk_door.hObjectState = bi:add_object_state(bi_kitdr, "bi_door.bm", "bi_door.zbm", OBJSTATE_STATE, FALSE)
    bi.bk_door:set_object_state("bi_door.cos")
    bi.office_door.hObjectState = bi:add_object_state(bi_kitdr, "bi_olivia.bm", "bi_olivia.zbm", OBJSTATE_STATE, FALSE)
    bi.office_door:set_object_state("bi_olivia.cos")
    bi.be_door:make_untouchable()
    TurnLightOn("flash", FALSE)
    if not in_year_four then
        if bi.waiter_cue and not bi.seen_waiter then
            start_script(bi.first_see_waiter)
        end
        bi:add_ambient_sfx({ "bongHit.wav", "bongExhl.wav" }, { min_delay = 24000, max_delay = 45000, min_volume = 10, max_volume = 40 })
    end
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -0.222365, 1.73026, 0.966)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, -0.232125, 0.0728992, 1.272)
    SetActorShadowPlane(manny.hActor, "stage_shadow")
    AddShadowPlane(manny.hActor, "stage_shadow")
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, -0.232125, 0.0728992, 1.272)
    SetActorShadowPlane(manny.hActor, "stage_shadow2")
    AddShadowPlane(manny.hActor, "stage_shadow2")
    SetActiveShadow(manny.hActor, 3)
    SetActorShadowPoint(manny.hActor, -0.575718, -1.75774, 2.982)
    SetActorShadowPlane(manny.hActor, "shadow4")
    AddShadowPlane(manny.hActor, "shadow4")
    SetActiveShadow(olivia.hActor, 0)
    SetActorShadowPoint(olivia.hActor, -0.232125, 0.0728992, 1.272)
    SetActorShadowPlane(olivia.hActor, "stage_shadow")
    AddShadowPlane(olivia.hActor, "stage_shadow")
    SetActiveShadow(olivia.hActor, 1)
    SetActorShadowPoint(olivia.hActor, -0.232125, 0.0728992, 1.272)
    SetActorShadowPlane(olivia.hActor, "stage_shadow2")
    AddShadowPlane(olivia.hActor, "stage_shadow2")
    SetActiveShadow(olivia.hActor, 2)
    SetActorShadowPoint(olivia.hActor, -0.575718, -1.75774, 2.982)
    SetActorShadowPlane(olivia.hActor, "shadow4")
    AddShadowPlane(olivia.hActor, "shadow4")
end
bi.camerachange = function(arg1, arg2, arg3) -- line 1196
    if arg3 == bi_kitdr and bi.kiss_trigger_set and not bi.seen_kiss then
        start_script(cut_scene.snapshot)
    elseif arg3 == bi_clbws and bi.roofie_trigger_set then
        start_script(bi.waiter_slip_roofie)
    end
    if in_year_four then
        music_state:update(system.currentSet)
    end
end
bi.exit = function(arg1) -- line 1209
    box_on("step_access")
    stop_script(bi.idle_reds)
    stop_script(bi.idle_beats)
    if virago then
        virago:free()
    end
    if lola then
        lola:free()
    end
    bi.waiter_collisions(FALSE)
    stop_script(olivia.new_run_idle)
    olivia:free()
    KillActorShadows(manny.hActor)
    KillActorShadows(olivia.hActor)
    manny:set_collision_mode(COLLISION_OFF)
    bi.bk_door:free_object_state()
    bi.office_door:free_object_state()
    bi.book.act:free()
    if find_script(olivia.head_follow_mesh) then
        stop_script(olivia.head_follow_mesh)
    end
end
bi.commies = Object:create(bi, "/bitx412/revolutionaries", 0.74422902, -0.81004298, 0.38960001, { range = 0.60000002 })
bi.commies.use_pnt_x = 0.43022901
bi.commies.use_pnt_y = -0.64764303
bi.commies.use_pnt_z = 0
bi.commies.use_rot_x = 0
bi.commies.use_rot_y = -137.683
bi.commies.use_rot_z = 0
bi.commies.bug_count = 0
bi.commies.befriended = FALSE
bi.commies.lookAt = function(arg1) -- line 1250
    manny:say_line("/bima071/")
end
bi.commies.pickUp = function(arg1) -- line 1254
end
bi.commies.use = function(arg1) -- line 1257
    if bi.just_read_poem and not bi.critiqued then
        bi:critique_poem()
    elseif bi.commies.befriended then
        bi:befriend_commies()
    else
        bi:bother_commies()
    end
end
bi.commies.use_letters = function(arg1) -- line 1269
    bi.befriend_commies()
end
bi.commies2 = Object:create(bi, "/bitx413/revolutionaries", 0.452629, -1.04274, 0.41, { range = 0.60000002 })
bi.commies2.use_pnt_x = 0.43022901
bi.commies2.use_pnt_y = -0.64764303
bi.commies2.use_pnt_z = 0
bi.commies2.use_rot_x = 0
bi.commies2.use_rot_y = -137.683
bi.commies2.use_rot_z = 0
bi.commies2.parent = bi.commies
bi.book = Object:create(bi, "/bitx414/book", 0.61539203, -0.93146002, 0.22750001, { range = 0.60000002 })
bi.book.use_pnt_x = 0.43889201
bi.book.use_pnt_y = -0.81496
bi.book.use_pnt_z = 0
bi.book.use_rot_x = 0
bi.book.use_rot_y = 599.90601
bi.book.use_rot_z = 0
bi.book.lookAt = function(arg1) -- line 1294
    arg1.seen = TRUE
    manny:say_line("/bima072/")
    if arg1.owner == manny then
        START_CUT_SCENE()
        wait_for_message()
        manny:say_line("/bima073/")
        wait_for_message()
        manny:say_line("/bima074/")
        wait_for_message()
        manny:say_line("/bima075/")
        END_CUT_SCENE()
    end
end
bi.book.reset = function(arg1) -- line 1309
    bi.book:make_touchable()
    bi.book:free()
    manny:stop_chore()
    bi.book.act:put_in_set(bi)
end
bi.book.use = function(arg1) -- line 1316
    if arg1.owner == manny then
        if not arg1.seen then
            START_CUT_SCENE()
            arg1:lookAt()
            wait_for_message()
            END_CUT_SCENE()
        else
            manny:say_line("/bima076/")
        end
    else
        START_CUT_SCENE("no head")
        if bi.commies.befriended then
            manny:head_look_at(bi.commies2)
            preload_sfx("getBook.wav")
            preload_sfx("getBook.wav")
            manny:say_line("/bima077/")
            wait_for_message()
            gunnar:say_line("/bigu078/")
            wait_for_message()
            manny:head_look_at(nil)
            manny:walkto_object(arg1)
            manny:wait_for_actor()
            manny:set_rest_chore(nil)
            manny:stop_chore()
            manny:play_chore(mc_pickup_book, "mc.cos")
            sleep_for(375)
            start_sfx("getBook.wav")
            bi.book:make_untouchable()
            bi.book.act:put_in_set(nil)
            manny:wait_for_chore(mc_pickup_book, "mc.cos")
            manny:stop_chore(mc_pickup_book, "mc.cos")
            manny:generic_pickup(bi.book)
            manny:set_rest_chore(mc_rest, "mc.cos")
        else
            bi:alexi_talking()
            manny:say_line("/bima079/")
            manny:head_look_at(bi.commies2)
            wait_for_message()
            if not bi.commies.asked_book then
                bi.commies.asked_book = TRUE
                alexi:say_line("/bial080/")
                wait_for_message()
                manny:head_look_at(bi.commies2)
                manny:shrug_gesture()
                manny:say_line("/bima081/")
                wait_for_message()
            end
            alexi:say_line("/bial082/")
            wait_for_message()
            bi:alexi_not_talking()
            manny:head_look_at(nil)
        end
        END_CUT_SCENE()
    end
end
bi.book.pickUp = bi.book.use
bi.mic = Object:create(bi, "/bitx415/microphone", -0.77109098, 0.043096099, 0.4777, { range = 0.60000002 })
bi.mic.use_pnt_x = -0.87504399
bi.mic.use_pnt_y = 0.049089398
bi.mic.use_pnt_z = 0.11
bi.mic.use_rot_x = 0
bi.mic.use_rot_y = -112.875
bi.mic.use_rot_z = 0
bi.mic.lookAt = function(arg1) -- line 1388
    manny:say_line("/bima083/")
end
bi.mic.use = function(arg1) -- line 1393
    soft_script()
    manny:walkto_object(arg1)
    if in_year_four then
        manny:twist_head_gesture()
        manny:say_line("/bima404/")
        if not olivia.reunited then
            START_CUT_SCENE()
            manny:head_look_at(nil)
            wait_for_message()
            olivia:follow_boxes()
            olivia:set_visibility(TRUE)
            olivia:setpos(-0.310821, -1.85579, 0.15)
            olivia:setrot(0, -348.322, 0)
            olivia:say_line("/biol405/")
            olivia:walkto(-0.328694, -1.52327, 0.15, 0, -358.4, 0.15)
            olivia:wait_for_actor()
            wait_for_message()
            manny:head_look_at(olivia)
            manny:say_line("/bima406/")
            manny:wait_for_message()
            manny:turn_right(35)
            END_CUT_SCENE()
            start_script(bi.reunion, TRUE)
        end
    else
        Dialog:run("mi1", "dlg_mic.lua")
    end
end
bi.mic.pickUp = bi.mic.use
bi.patrons1 = Object:create(bi, "/bitx416/beatniks", 0.69, -0.082395501, 0.29809999, { range = 0.69999999 })
bi.patrons1.use_pnt_x = 0.28459999
bi.patrons1.use_pnt_y = -0.124195
bi.patrons1.use_pnt_z = 0
bi.patrons1.use_rot_x = 0
bi.patrons1.use_rot_y = -82.2668
bi.patrons1.use_rot_z = 0
bi.patrons1.lookAt = function(arg1) -- line 1434
    if not bi.patrons1.seen then
        bi.patrons1.seen = TRUE
        soft_script()
        manny:say_line("/bima084/")
        wait_for_message()
        manny:say_line("/bima085/")
    else
        manny:say_line("/bima086/")
    end
end
bi.patrons1.pickUp = function(arg1) -- line 1446
    manny:say_line("/bima087/")
end
bi.patrons1.use = function(arg1) -- line 1450
    manny:say_line("/bima088/")
end
bi.patrons2 = Object:create(bi, "/bitx417/beatniks", -0.72946399, -1.00793, 0.36399999, { range = 0.69999999 })
bi.patrons2.use_pnt_x = -0.49116501
bi.patrons2.use_pnt_y = -0.61832798
bi.patrons2.use_pnt_z = 0
bi.patrons2.use_rot_x = 0
bi.patrons2.use_rot_y = 157.17999
bi.patrons2.use_rot_z = 0
bi.patrons2.parent = bi.patrons1
bi.patrons2.lookAt = function(arg1) -- line 1465
    if skinny_girl.passed_out then
        manny:say_line("/sima163/")
    elseif skinny_girl.revived then
        manny:say_line("/jbma034/")
    else
        bi.patrons1:lookAt()
    end
end
bi.patrons2.wake_up = function() -- line 1477
    skinny_girl:thaw(TRUE)
    skinny_girl:set_costume("passoutgirl.cos")
    skinny_girl:play_chore(passoutgirl_faint_hold, "passoutgirl.cos")
    skinny_girl:fade_in_chore(passoutgirl_idle, "passoutgirl.cos")
    sleep_for(500)
    skinny_girl:fade_out_chore(passoutgirl_faint_hold, "passoutgirl.cos")
    skinny_girl:play_chore(passoutgirl_idle, "passoutgirl.cos")
    sleep_for(500)
    sleep_for(2000)
    skinny_girl:freeze()
    skinny_girl.passed_out = FALSE
    skinny_girl.revived = TRUE
end
bi.patrons2.use = function(arg1) -- line 1492
    if skinny_girl.passed_out then
        START_CUT_SCENE()
        manny:push_costume("mc_wave.cos")
        manny:say_line("/tdma029/")
        manny:run_chore(0, "mc_wave.cos")
        wait_for_message()
        manny:pop_costume()
        manny:say_line("/dema007/")
        manny:shrug_gesture()
        END_CUT_SCENE()
    else
        bi.patrons1:use()
    end
end
bi.office_trigger = { }
bi.office_trigger.walkOut = function(arg1) -- line 1510
    bi.office_door:use()
end
bi.office_door = Object:create(bi, "/bitx418/door", -1.2140501, -1.77389, 0.671, { range = 0.89999998 })
bi.office_door.use_pnt_x = -0.52254599
bi.office_door.use_pnt_y = -1.77479
bi.office_door.use_pnt_z = 0.15000001
bi.office_door.use_rot_x = 0
bi.office_door.use_rot_y = 97.2453
bi.office_door.use_rot_z = 0
bi.office_door.lookAt = function(arg1) -- line 1522
    if in_year_four then
        manny:say_line("/bima407/")
    else
        manny:say_line("/bima089/")
    end
end
bi.office_door.use = function(arg1) -- line 1530
    if in_year_four then
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        manny:knock_on_door_anim()
        END_CUT_SCENE()
        if not olivia.reunited then
            start_script(bi.reunion)
        else
            START_CUT_SCENE()
            arg1:play_chore(4)
            olivia:set_visibility(TRUE)
            olivia:say_line("/biol408/")
            wait_for_message()
            manny:say_line("/bima409/")
            wait_for_message()
            olivia:say_line("/biol410/")
            wait_for_message()
            arg1:play_chore(5)
            olivia:set_visibility(FALSE)
            END_CUT_SCENE()
        end
    else
        START_CUT_SCENE()
        manny:wait_for_actor()
        manny:setrot(0, 86.5099, 0, TRUE)
        manny:wait_for_actor()
        manny:head_look_at(bi.olivia_obj)
        manny:say_line("/bima090/")
        wait_for_message()
        olivia:say_line("/biol091/")
        wait_for_message()
        olivia:say_line("/biol092/")
        END_CUT_SCENE()
    end
end
bi.sign = Object:create(bi, "sign", 0.606058, 2.1863599, 0.74000001, { range = 1 })
bi.sign.use_pnt_x = 0.51134902
bi.sign.use_pnt_y = 1.625
bi.sign.use_pnt_z = 0
bi.sign.use_rot_x = 0
bi.sign.use_rot_y = -1092.14
bi.sign.use_rot_z = 0
bi.sign.lookAt = function(arg1) -- line 1577
    START_CUT_SCENE()
    manny:say_line("/bima093/")
    if not arg1.seen then
        arg1.seen = TRUE
        wait_for_message()
        manny:say_line("/bima094/")
        wait_for_message()
        manny:say_line("/bima095/")
    end
    END_CUT_SCENE()
end
bi.sign.pickUp = function(arg1) -- line 1590
    manny:say_line("/bima096/")
end
bi.sign.use = function(arg1) -- line 1594
    manny:say_line("/bima097/")
end
bi.olivia_obj = Object:create(bi, "/bitx419/Olivia", -0.64359999, -1.64397, 0.64999998, { range = 0.60000002 })
bi.olivia_obj.use_pnt_x = -0.54170001
bi.olivia_obj.use_pnt_y = -1.85027
bi.olivia_obj.use_pnt_z = 0.15000001
bi.olivia_obj.use_rot_x = 0
bi.olivia_obj.use_rot_y = -320.87201
bi.olivia_obj.use_rot_z = 0
bi.olivia_obj.lookAt = function(arg1) -- line 1607
    manny:say_line("/bima098/")
end
bi.olivia_obj.pickUp = function(arg1) -- line 1611
    manny:say_line("/bima099/")
end
bi.olivia_obj.use = function(arg1) -- line 1616
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    Dialog:run("ol1", "dlg_olivia.lua")
    END_CUT_SCENE()
end
bi.olivia_obj.use_paper = function(arg1) -- line 1624
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    bi:rusty_anchor_poem()
    END_CUT_SCENE()
end
bi.olivia_obj.use_letters = function(arg1) -- line 1632
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:use_default()
    olivia:head_look_at(manny)
    olivia:say_line("/biol100/")
    wait_for_message()
    manny:say_line("/bima101/")
    wait_for_message()
    olivia:head_look_at_manny()
    olivia:say_line("/biol102/")
    wait_for_message()
    olivia:say_line("/biol103/")
    END_CUT_SCENE()
end
bi.bk_door = Object:create(bi, "/bitx420/door", -0.51788002, -2.44768, 0.66000003, { range = 0.60000002 })
bi.bk_door.use_pnt_x = -0.40948001
bi.bk_door.use_pnt_y = -2.15118
bi.bk_door.use_pnt_z = 0.15000001
bi.bk_door.use_rot_x = 0
bi.bk_door.use_rot_y = 179.569
bi.bk_door.use_rot_z = 0
bi.bk_door.out_pnt_x = -0.40000001
bi.bk_door.out_pnt_y = -2.425
bi.bk_door.out_pnt_z = 0.15000001
bi.bk_door.out_rot_x = 0
bi.bk_door.out_rot_y = 192.416
bi.bk_door.out_rot_z = 0
bi.bk_door.walkOut = function(arg1) -- line 1671
    bi:push_out_door()
end
bi.bk_door.lookAt = function(arg1) -- line 1675
    manny:say_line("/bima104/")
end
bi.be_door = Object:create(bi, "/bitx421/door", -0.436095, 1.49985, 0.53399998, { range = 0.60000002 })
bi.be_box = bi.be_door
bi.be_door.use_pnt_x = -0.0720952
bi.be_door.use_pnt_y = 1.49985
bi.be_door.use_pnt_z = 0.15000001
bi.be_door.use_rot_x = 0
bi.be_door.use_rot_y = -666.36401
bi.be_door.use_rot_z = 0
bi.be_door.out_pnt_x = -0.41888201
bi.be_door.out_pnt_y = 1.48896
bi.be_door.out_pnt_z = 0.15000001
bi.be_door.out_rot_x = 0
bi.be_door.out_rot_y = 449.54999
bi.be_door.out_rot_z = 0
bi.be_door.walkOut = function(arg1) -- line 1696
    be:come_out_door(be.bi_door)
end
binder_here = 0
binder_hidd = 1
bi_olivia_swing_open = 0
bi_olivia_swing_closed = 1
bi_olivia_opened = 2
bi_olivia_closed = 3
bi_olivia_yr_4_open = 4
bi_olivia_yr_4_close = 5
bi_yr_4_Chore0 = 0
bk_cask_Chore0 = 0
bk_door_opening = 0
bk_door_closing = 1
bk_door_closed = 2
bk_door_open = 3
CheckFirstTime("bk.lua")
bk = Set:create("bk.set", "Blue Casket kitchen", { bk_medha = 0, bk_ovrhd = 1 })
dofile("bk_door.lua")
dofile("waiter.lua")
dofile("waiter_shooters.lua")
dofile("waiter_idles.lua")
dofile("ma_use_baster.lua")
bk.waiter_look_point = { x = 0.118256, y = 0.320226, z = 0.5052 }
bk.open_door_for_waiter = function() -- line 20
    local local1
    while not beat_waiter:find_sector_name("waiter_dr_trig") do
        local1 = beat_waiter:getpos()
        manny:head_look_at_point(local1.x, local1.y, local1.z + 0.60000002)
        break_here()
    end
    bk.bi_door:play_chore(bk_door_opening)
    while beat_waiter:is_moving() do
        break_here()
    end
    bk.bi_door:play_chore(bk_door_closing)
end
bk.fill_sink = function(arg1) -- line 34
    START_CUT_SCENE("no head")
    bk.seen_water = TRUE
    bi.roofie_trigger_set = TRUE
    EngineDisplay(FALSE)
    LoadCostume("waiter_idles.cos")
    LoadCostume("waiter_shooters.cos")
    if not bk.stuff then
        bk.stuff = Actor:create(nil, nil, nil, "stuff")
    end
    box_on("waiter_box")
    bk.stuff:ignore_boxes()
    bk.stuff:put_in_set(bk)
    bk.stuff:set_costume("waiter_shooters.cos")
    bk.stuff:setpos(0.12807, 0.28539, 0.0015)
    bk.stuff:setrot(0, 359.336, 0)
    bk.stuff:play_chore(waiter_shooters_shooters_start, "waiter_shooters.cos")
    bk.stuff:play_chore(waiter_shooters_bowl_start, "waiter_shooters.cos")
    set_override(bk.fill_sink_override)
    beat_waiter:default()
    beat_waiter:set_rest_chore(nil)
    beat_waiter:ignore_boxes()
    beat_waiter:put_in_set(bk)
    beat_waiter:setpos(0.12807, 0.28539, 0.0015)
    beat_waiter:setrot(0, 359.336, 0)
    beat_waiter:push_costume("waiter_shooters.cos")
    stop_script(manny.walk_and_face)
    break_here()
    EngineDisplay(TRUE)
    start_script(manny.walk_and_face, manny, -0.179054, -0.283012, 0, 0, 338.792, 0)
    manny:head_look_at_point(bk.waiter_look_point)
    beat_waiter:set_rest_chore(nil)
    beat_waiter:stop_chore()
    beat_waiter:set_head(3, 4, 4, 165, 28, 80)
    beat_waiter:set_look_rate(140)
    beat_waiter:run_chore(waiter_shooters_toss_tray, "waiter_shooters.cos")
    bk.stuff:play_chore(waiter_shooters_tray_end, "waiter_shooters.cos")
    bk.stuff:stop_chore(waiter_shooters_bowl_start, "waiter_shooters.cos")
    bk.stuff:play_chore(waiter_shooters_pickup_bowl, "waiter_shooters.cos")
    bk.stuff:play_chore(waiter_shooters_pickup_hooka, "waiter_shooters.cos")
    beat_waiter:stop_chore(waiter_shooters_toss_tray, "waiter_shooters.cos")
    beat_waiter:play_chore(waiter_shooters_kitchen_action, "waiter_shooters.cos")
    bk.stuff:play_chore(waiter_shooters_lid_toss, "waiter_shooters.cos")
    sleep_for(9000)
    beat_waiter:say_line("/bkbw001/")
    beat_waiter:wait_for_chore(waiter_shooters_kitchen_action, "waiter_shooters.cos")
    beat_waiter:play_chore_looping(waiter_shooters_shake, "waiter_shooters.cos")
    beat_waiter:wait_for_message()
    beat_waiter:say_line("/bkbw002/")
    sleep_for(2000)
    beat_waiter:head_look_at(bk.cleansers)
    sleep_for(1000)
    beat_waiter:head_look_at(nil)
    wait_for_message()
    manny:head_forward_gesture()
    manny:say_line("/bkma003/")
    beat_waiter:head_look_at(nil)
    manny:head_look_at_point(bk.waiter_look_point)
    wait_for_message()
    beat_waiter:stop_looping_chore(waiter_shooters_shake, "waiter_shooters.cos")
    stop_sound("bkShake.imu")
    beat_waiter:say_line("/bkbw004/")
    bk.stuff:play_chore(waiter_shooters_hide_counter_shooters, "waiter_shooters.cos")
    bk.stuff:play_chore(waiter_shooters_bowl_end, "waiter_shooters.cos")
    beat_waiter:stop_chore(nil, "waiter_shooters.cos")
    beat_waiter:play_chore(waiter_shooters_pour, "waiter_shooters.cos")
    LoadCostume("waiter_idles.cos")
    beat_waiter:wait_for_chore(waiter_shooters_pour, "waiter_shooters.cos")
    beat_waiter:play_chore(waiter_shooters_idle_shooters, "waiter_shooters.cos")
    beat_waiter:wait_for_message()
    beat_waiter:default()
    beat_waiter:stop_chore(waiter_shooters_idle_shooters, "waiter_shooters.cos")
    beat_waiter:follow_boxes()
    beat_waiter:play_chore(waiter_idles_activate_shooters, "waiter_idles.cos")
    beat_waiter:walkto(-0.0310095, -0.900189, 0)
    bk:open_door_for_waiter()
    beat_waiter:free()
    manny:head_look_at(bk.sink)
    box_off("waiter_box")
    END_CUT_SCENE()
end
bk.fill_sink_override = function() -- line 134
    kill_override()
    bk.stuff:play_chore(waiter_shooters_tray_end, "waiter_shooters.cos")
    bk.stuff:play_chore(waiter_shooters_bowl_end, "waiter_shooters.cos")
    bk.stuff:play_chore(waiter_shooters_pickup_bowl, "waiter_shooters.cos")
    bk.stuff:play_chore(waiter_shooters_hooka_lid_end, "waiter_shooters.cos")
    bk.stuff:play_chore(waiter_shooters_hide_counter_shooters, "waiter_shooters.cos")
    box_off("waiter_box")
    beat_waiter:free()
    manny:head_look_at(nil)
end
bk.push_out_door = function(arg1) -- line 148
    START_CUT_SCENE()
    bk.bi_door:play_chore(bk_door_opening)
    manny:walkto(-0.0310095, -0.900189, 0)
    sleep_for(750)
    bk.bi_door:run_chore(bk_door_closing)
    END_CUT_SCENE()
end
bk.push_in_door = function(arg1) -- line 163
    START_CUT_SCENE()
    EngineDisplay(FALSE)
    bk:switch_to_set()
    manny:put_in_set(bk)
    manny:setpos(0.182621, -0.606099, 0)
    manny:setrot(0, 4.25677, 0)
    bk.bi_door:play_chore(bk_door_closed)
    EngineDisplay(TRUE)
    END_CUT_SCENE()
    if not bk.seen_water and not in_year_four then
        start_script(bk.fill_sink)
    end
end
bk.update_music_state = function(arg1) -- line 193
    if in_year_four then
        return stateBK_YR4
    else
        return stateBK
    end
end
bk.enter = function(arg1) -- line 202
    if in_year_four then
        bk.sink.full = FALSE
        bk.sink:make_untouchable()
        bk.cleansers:make_untouchable()
        bk.keg:make_touchable()
        bk.keg:set_object_state("bk_cask.cos")
        bk.keg.interest_actor:setpos(0.251638, 0.4665, 0.4235)
        bk.keg.interest_actor:setrot(0, 270, 0)
    else
        bk.keg:make_untouchable()
        if hk.turkey_baster.owner == manny and not hk.turkey_baster.full then
            preload_sfx("tkBstFil.wav")
            LoadCostume("ma_use_baster.cos")
        end
        start_sfx("BK_AMB.IMU", IM_HIGH_PRIORITY, 40)
    end
    bk.bi_door_hObjectState = bk:add_object_state(bk_medha, "bk_door.bm", "bk_door.zbm", OBJSTATE_STATE)
    bk.bi_door:set_object_state("bk_door.cos")
    box_off("waiter_box")
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0.541113, 0.338238, 2.771)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(beat_waiter.hActor, 0)
    SetActorShadowPoint(beat_waiter.hActor, 0.541113, 0.338238, 2.771)
    SetActorShadowPlane(beat_waiter.hActor, "shadow1")
    AddShadowPlane(beat_waiter.hActor, "shadow1")
end
bk.exit = function(arg1) -- line 241
    KillActorShadows(manny.hActor)
    KillActorShadows(beat_waiter.hActor)
    stop_sound("BK_AMB.IMU")
    PrintDebug("exiting kitchen")
    bk.bi_door:free_object_state()
    beat_waiter:free()
    if bk.stuff then
        bk.stuff:free()
    end
end
bk.sink = Object:create(bk, "/bktx005/sink", -0.048930001, 0.4718, 0.2359, { range = 0.60000002 })
bk.sink.use_pnt_x = -0.099930003
bk.sink.use_pnt_y = 0.27500001
bk.sink.use_pnt_z = 0
bk.sink.use_rot_x = 0
bk.sink.use_rot_y = -0.63243502
bk.sink.use_rot_z = 0
bk.sink.full = TRUE
bk.sink.lookAt = function(arg1) -- line 267
    if bk.sink.full then
        manny:say_line("/bkma006/")
    else
        system.default_response("empty")
    end
end
bk.sink.pickUp = function(arg1) -- line 275
    if arg1.full then
        manny:say_line("/bkma008/")
    else
        system.default_response("empty")
    end
end
bk.sink.use = bk.sink.pickUp
bk.sink.use_turkey_baster = function(arg1) -- line 285
    if hk.turkey_baster.full then
        system.default_response("full")
    else
        soft_script()
        manny:walkto_object(arg1)
        START_CUT_SCENE("no head")
        manny:wait_for_actor()
        cur_puzzle_state[23] = TRUE
        hk.turkey_baster.full = TRUE
        manny:stop_chore(mc_activate_turkey_baster, "mc.cos")
        manny:stop_chore(mc_hold, "mc.cos")
        manny:push_costume("ma_use_baster.cos")
        manny:stop_chore()
        sleep_for(100)
        start_sfx("bongHit.wav")
        manny:play_chore(ma_use_baster_kitchen_baster, "ma_use_baster.cos")
        sleep_for(100)
        start_sfx("getTkBst.wav")
        sleep_for(600)
        fade_sfx("bongHit.wav", 100, 0)
        manny:wait_for_chore(ma_use_baster_kitchen_baster, "ma_use_baster.cos")
        manny:stop_chore()
        manny:pop_costume()
        manny:play_chore_looping(mc_activate_full_baster, "mc.cos")
        manny:play_chore_looping(mc_hold, "mc.cos")
        END_CUT_SCENE()
    end
end
bk.dishwasher = Object:create(bk, "/bktx009/dishwasher", 0.51709998, -0.043099999, 0.23999999, { range = 0.60000002 })
bk.dishwasher.use_pnt_x = 0.25601
bk.dishwasher.use_pnt_y = 0.228331
bk.dishwasher.use_pnt_z = 0
bk.dishwasher.use_rot_x = 0
bk.dishwasher.use_rot_y = -829.95697
bk.dishwasher.use_rot_z = 0
bk.dishwasher.lookAt = function(arg1) -- line 324
    manny:say_line("/bkma010/")
end
bk.dishwasher.pickUp = function(arg1) -- line 328
    system.default_response("not portable")
end
bk.dishwasher.use = function(arg1) -- line 332
    manny:say_line("/bkma012/")
end
bk.cleansers = Object:create(bk, "/bktx013/cleaning supplies", 0.62709999, 0.47690001, 0.63, { range = 0.89999998 })
bk.cleansers.use_pnt_x = 0.263677
bk.cleansers.use_pnt_y = 0.21690799
bk.cleansers.use_pnt_z = 0
bk.cleansers.use_rot_x = 0
bk.cleansers.use_rot_y = -59.871799
bk.cleansers.use_rot_z = 0
bk.cleansers.lookAt = function(arg1) -- line 344
    manny:say_line("/bkma014/")
end
bk.cleansers.pickUp = function(arg1) -- line 348
    manny:say_line("/bkma015/")
end
bk.cleansers.use = function(arg1) -- line 352
    manny:say_line("/bkma016/")
end
bk.dishes = Object:create(bk, "/bktx017/dishes", -0.40290001, -0.19310001, 0.30000001, { range = 0.60000002 })
bk.dishes.use_pnt_x = -0.214204
bk.dishes.use_pnt_y = -0.167189
bk.dishes.use_pnt_z = 0
bk.dishes.use_rot_x = 0
bk.dishes.use_rot_y = -632.56097
bk.dishes.use_rot_z = 0
bk.dishes.lookAt = function(arg1) -- line 364
    if in_year_four then
        manny:say_line("/bkma027/")
    else
        manny:say_line("/bkma018/")
    end
end
bk.dishes.pickUp = function(arg1) -- line 372
    manny:say_line("/bkma019/")
end
bk.dishes.use = function(arg1) -- line 376
    manny:say_line("/bkma020/")
end
bk.garbage = Object:create(bk, "/bktx021/garbage", -0.4729, -0.75309998, 0.16, { range = 0.60000002 })
bk.garbage.use_pnt_x = -0.21734001
bk.garbage.use_pnt_y = -0.54031998
bk.garbage.use_pnt_z = 0
bk.garbage.use_rot_x = 0
bk.garbage.use_rot_y = -971.35999
bk.garbage.use_rot_z = 0
bk.garbage.lookAt = function(arg1) -- line 389
    manny:say_line("/bkma022/")
end
bk.garbage.use = function(arg1) -- line 393
    manny:say_line("/bkma024/")
end
bk.garbage.pickUp = bk.garbage.use
bk.keg = Object:create(bk, "/bktx028/keg", 0.28334299, 0.51959002, 0.43239999, { range = 0.60000002 })
bk.keg.use_pnt_x = 0.039643399
bk.keg.use_pnt_y = 0.27498999
bk.keg.use_pnt_z = 0
bk.keg.use_rot_x = 0
bk.keg.use_rot_y = -78.383499
bk.keg.use_rot_z = 0
bk.keg.lookAt = function(arg1) -- line 407
    soft_script()
    manny:say_line("/bkma029/")
end
bk.keg.pickUp = function(arg1) -- line 412
    system.default_response("hernia")
end
bk.keg.use = function(arg1) -- line 416
    manny:say_line("/bkma030/")
end
bk.keg.use_bottle = function(arg1) -- line 420
    if lm.bottle.full then
        system.default_response("got some")
    elseif manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:play_chore(msb_lf_hand_on_obj, "msb.cos")
        manny:wait_for_chore()
        start_sfx("hkSpgtOC.wav", IM_MED_PRIORITY, 80)
        wait_for_sound("hkSpgtOC.wav")
        start_sfx("pourJel.wav")
        wait_for_sound("pourJel.wav")
        start_sfx("hkSpgtOC.wav", IM_MED_PRIORITY, 80)
        wait_for_sound("hkSpgtOC.wav")
        manny:stop_chore(msb_activate_empty_bottle, "msb.cos")
        manny:play_chore_looping(msb_activate_bottle, "msb.cos")
        manny:stop_chore(msb_lf_hand_on_obj, "msb.cos")
        manny:play_chore(msb_lf_hand_off_obj, "msb.cos")
        manny:wait_for_chore()
        manny:stop_chore(msb_lf_hand_off_obj, "msb.cos")
        END_CUT_SCENE()
        lm.bottle.full = TRUE
        start_script(lm.bottle.lookAt)
    end
end
bk.bi_door = Object:create(bk, "/bktx025/door", 0.172521, -0.89459902, 0.45989999, { range = 0.60000002 })
bk.bi_door.use_pnt_x = 0.182621
bk.bi_door.use_pnt_y = -0.60609901
bk.bi_door.use_pnt_z = 0
bk.bi_door.use_rot_x = 0
bk.bi_door.use_rot_y = 1262.67
bk.bi_door.use_rot_z = 0
bk.bi_door.out_pnt_x = -0.045413099
bk.bi_door.out_pnt_y = -0.96969801
bk.bi_door.out_pnt_z = 0
bk.bi_door.out_rot_x = 0
bk.bi_door.out_rot_y = 1179.28
bk.bi_door.out_rot_z = 0
bk.bi_door.walkOut = function(arg1) -- line 468
    START_CUT_SCENE()
    bk:push_out_door()
    bi:switch_to_set()
    bi:current_setup(bi_kitdr)
    manny:put_in_set(bi)
    manny:setpos(bi.bk_door.out_pnt_x, bi.bk_door.out_pnt_y, bi.bk_door.out_pnt_z)
    manny:setrot(bi.bk_door.out_pnt_x, bi.bk_door.out_pnt_y + 180, bi.bk_door.out_pnt_z)
    manny:walkto(bi.bk_door.use_pnt_x, bi.bk_door.use_pnt_y, bi.bk_door.use_pnt_z)
    manny:wait_for_actor()
    manny:setpos(-0.226663, -2.12008, 0.15)
    manny:setrot(0, 315.148, 0)
    if in_year_four and not olivia.reunited then
        bi:current_setup(bi_kitdr)
        manny:setrot(0, 68.6345, 0, TRUE)
        manny:wait_for_actor()
        start_script(bi.reunion)
    end
    END_CUT_SCENE()
end
bk.bi_door.lookAt = function(arg1) -- line 489
    manny:say_line("/bkma026/")
end
CheckFirstTime("bl.lua")
bl = Set:create("bl.set", "beach lower", { bl_lamst = 0, bl_noshp = 1, bl_ovrhd = 2 })
dofile("pu_tag.lua")
dofile("bibi_tag.lua")
bibi.play_sounds = { "/blbi001/", "/blbi002/", "/blbi003/", "/blbi004/", "/blbi005/", "/blbi006/", "/blbi007/", "/blbi008/", "/blbi009/", "/blbi010/", "/blbi012/" }
pugsy.play_sounds = { "/blpu013/", "/blpu014/", "/blpu015/", "/blpu016/", "/blpu017/", "/blpu018/", "/blpu019/", "/blpu020/", "/blpu021/", "/blpu022/", "/blpu024/" }
bl.pugsy_play_sounds = function() -- line 39
    while 1 do
        pugsy:wait_for_message()
        if not find_script(bl.everybodys_here) and not find_script(bl.talk_reef) then
            pugsy:say_line(pick_one_of(pugsy.play_sounds, TRUE))
        end
        sleep_for(3000 * random() + 1000)
    end
end
bl.bibi_play_sounds = function() -- line 49
    while 1 do
        bibi:wait_for_message()
        if not find_script(bl.everybodys_here) and not find_script(bl.talk_reef) then
            bibi:say_line(pick_one_of(bibi.play_sounds, TRUE))
        end
        sleep_for(3000 * random() + 1000)
    end
end
bl.set_up_angelitos = function(arg1) -- line 59
    pugsy:free()
    pugsy:set_costume("pu_talk_idles.cos")
    pugsy:set_mumble_chore(pu_talk_idles_mumble, "pu_talk_idles.cos")
    pugsy:set_talk_chore(1, pu_talk_idles_stop_talk)
    pugsy:set_talk_chore(2, pu_talk_idles_a)
    pugsy:set_talk_chore(3, pu_talk_idles_c)
    pugsy:set_talk_chore(4, pu_talk_idles_e)
    pugsy:set_talk_chore(5, pu_talk_idles_f)
    pugsy:set_talk_chore(6, pu_talk_idles_l)
    pugsy:set_talk_chore(7, pu_talk_idles_m)
    pugsy:set_talk_chore(8, pu_talk_idles_o)
    pugsy:set_talk_chore(9, pu_talk_idles_t)
    pugsy:set_talk_chore(10, pu_talk_idles_u)
    pugsy:push_costume("pu_tag.cos")
    pugsy:set_head(6, 7, 8, 165, 28, 80)
    pugsy:set_look_rate(180)
    pugsy:put_in_set(bl)
    pugsy:setpos(3.25797, -27.2651, 3.071)
    pugsy:setrot(0, 250, 0)
    SetActiveShadow(pugsy.hActor, 0)
    SetActorShadowPoint(pugsy.hActor, 0, 0, 100)
    SetActorShadowPlane(pugsy.hActor, "shadow1")
    AddShadowPlane(pugsy.hActor, "shadow1")
    pugsy:set_speech_mode(MODE_BACKGROUND)
    pugsy.say_line = nil
    bibi:free()
    bibi:set_costume("bibi_talk_idles.cos")
    bibi:set_mumble_chore(bibi_talk_idles_mumble, "bibi_talk_idles.cos")
    bibi:set_talk_chore(1, bibi_talk_idles_stop_talk)
    bibi:set_talk_chore(2, bibi_talk_idles_a)
    bibi:set_talk_chore(3, bibi_talk_idles_c)
    bibi:set_talk_chore(4, bibi_talk_idles_e)
    bibi:set_talk_chore(5, bibi_talk_idles_f)
    bibi:set_talk_chore(6, bibi_talk_idles_l)
    bibi:set_talk_chore(7, bibi_talk_idles_m)
    bibi:set_talk_chore(8, bibi_talk_idles_o)
    bibi:set_talk_chore(9, bibi_talk_idles_t)
    bibi:set_talk_chore(10, bibi_talk_idles_u)
    bibi:push_costume("bibi_tag.cos")
    bibi:set_head(6, 7, 8, 165, 28, 80)
    bibi:set_look_rate(180)
    bibi:put_in_set(bl)
    bibi:setpos(3.52097, -26.9561, 3.071)
    bibi:setrot(0, 250, 0)
    SetActiveShadow(bibi.hActor, 0)
    SetActorShadowPoint(bibi.hActor, 0, 0, 100)
    SetActorShadowPlane(bibi.hActor, "shadow1")
    AddShadowPlane(bibi.hActor, "shadow1")
    bibi:set_speech_mode(MODE_BACKGROUND)
    bibi.say_line = nil
end
bl.play_tag = function(arg1) -- line 118
    local local1, local2
    bibi:stop_chore(bibi_tag_ccw_hover, "bibi_tag.cos")
    pugsy:stop_chore(pu_tag_ccw_hover, "pu_tag.cos")
    bibi:head_look_at(nil, 200)
    pugsy:head_look_at(nil, 200)
    start_script(meche.head_follow_mesh, meche, bibi, 1)
    start_script(bl.bibi_play_sounds)
    while 1 do
        pugsy:play_chore(pu_tag_cw_loop, "pu_tag.cos")
        bibi:run_chore(bibi_tag_cw_hover_to_loop, "bibi_tag.cos")
        bibi:play_chore(bibi_tag_cw_loop, "bibi_tag.cos")
        local1 = ceil(6 * random())
        local2 = 0
        while local2 <= local1 do
            pugsy:wait_for_chore(pu_tag_cw_loop, "pu_tag.cos")
            pugsy:play_chore(pu_tag_cw_loop, "pu_tag.cos")
            bibi:wait_for_chore(bibi_tag_cw_loop, "bibi_tag.cos")
            bibi:play_chore(bibi_tag_cw_loop, "bibi_tag.cos")
            pugsy:wait_for_chore(pu_tag_cw_loop, "pu_tag.cos")
            local2 = local2 + 1
        end
        pugsy:play_chore(pu_tag_cw_loop_to_hover, "pu_tag.cos")
        stop_script(bl.bibi_play_sounds)
        bibi:wait_for_chore(bibi_tag_cw_loop, "bibi_tag.cos")
        if not find_script(bl.everybodys_here) and not find_script(bl.talk_reef) then
            bibi:say_line("/blbi011/")
        end
        start_script(bl.bibi_play_sounds)
        bibi:run_chore(bibi_tag_tag_cw, "bibi_tag.cos")
        bibi:play_chore(bibi_tag_ccw_loop, "bibi_tag.cos")
        pugsy:run_chore(pu_tag_ccw_hover_to_loop, "pu_tag.cos")
        pugsy:play_chore(pu_tag_ccw_loop, "pu_tag.cos")
        local1 = ceil(6 * random())
        local2 = 0
        while local2 <= local1 do
            bibi:wait_for_chore(bibi_tag_ccw_loop, "bibi_tag.cos")
            bibi:play_chore(bibi_tag_ccw_loop, "bibi_tag.cos")
            pugsy:wait_for_chore(pu_tag_ccw_loop, "pu_tag.cos")
            pugsy:play_chore(pu_tag_ccw_loop, "pu_tag.cos")
            local2 = local2 + 1
        end
        bibi:wait_for_chore(bibi_tag_ccw_loop, "bibi_tag.cos")
        bibi:play_chore(bibi_tag_ccw_loop_to_hover, "bibi_tag.cos")
        stop_script(bl.pugsy_play_sounds)
        pugsy:wait_for_chore(pu_tag_ccw_loop, "pu_tag.cos")
        if not find_script(bl.everybodys_here) and not find_script(bl.talk_reef) then
            pugsy:say_line("/blpu023/")
        end
        start_script(bl.pugsy_play_sounds)
        pugsy:run_chore(pu_tag_tag_ccw, "pu_tag.cos")
    end
end
bl.kids_hover = function(arg1) -- line 187
    bibi:play_chore_looping(bibi_tag_ccw_hover, "bibi_tag.cos")
    pugsy:play_chore_looping(pu_tag_ccw_hover, "pu_tag.cos")
end
bl.set_up_meche = function(arg1) -- line 192
    meche:set_costume("meche_in_vi.cos")
    meche:put_in_set(bl)
    meche:setpos(3.80106, -25.5288, 1.3)
    meche:setrot(0, 188.749, 0)
    meche:set_mumble_chore(meche_in_vi_mumble)
    meche:set_talk_chore(1, meche_in_vi_stop_talk)
    meche:set_talk_chore(2, meche_in_vi_a)
    meche:set_talk_chore(3, meche_in_vi_c)
    meche:set_talk_chore(4, meche_in_vi_e)
    meche:set_talk_chore(5, meche_in_vi_f)
    meche:set_talk_chore(6, meche_in_vi_l)
    meche:set_talk_chore(7, meche_in_vi_m)
    meche:set_talk_chore(8, meche_in_vi_o)
    meche:set_talk_chore(9, meche_in_vi_t)
    meche:set_talk_chore(10, meche_in_vi_u)
    meche:set_head(5, 5, 5, 165, 28, 80)
    meche:set_look_rate(180)
    SetActiveShadow(meche.hActor, 0)
    SetActorShadowPoint(meche.hActor, 0, 0, 100)
    SetActorShadowPlane(meche.hActor, "shadow1")
    AddShadowPlane(meche.hActor, "shadow1")
    meche:set_collision_mode(COLLISION_BOX, 0.4)
    start_script(vi.meche_head_idle)
    start_script(vi.meche_arm_idle)
end
bl.set_up_glottis = function(arg1, arg2) -- line 222
    glottis:default("sailor")
    glottis:put_in_set(bl)
    glottis:setpos(3.1507, -26.493, 1.3)
    glottis:setrot(0, 320.074, 0)
    glottis:play_chore(glottis_sailor_home_pose, "glottis_sailor.cos")
    SetActiveShadow(glottis.hActor, 0)
    SetActorShadowPoint(glottis.hActor, 0, 0, 100)
    SetActorShadowPlane(glottis.hActor, "shadow1")
    AddShadowPlane(glottis.hActor, "shadow1")
    glottis:set_collision_mode(COLLISION_BOX, 0.5)
    if arg2 then
        bl:start_glottis_idle()
    end
end
bl.start_glottis_idle = function(arg1) -- line 240
    start_script(glottis.new_run_idle, glottis, "home_pose", glottis.idle_table, "glottis_sailor.cos")
end
bl.passengers_before_boat = function() -- line 244
    START_CUT_SCENE()
    bl.glottis_here = FALSE
    bl.meche_here = TRUE
    raised_lamancha = FALSE
    bl:switch_to_set()
    manny:put_in_set(bl)
    manny:put_at_object(bl.glottis_obj)
    manny:set_run(FALSE)
    manny:force_auto_run(FALSE)
    manny:stop_chore(mn2_run, "mn2.cos")
    stop_movement_scripts()
    IrisUp(355, 245, 1000)
    manny:head_look_at(bl.meche_obj)
    meche:head_look_at_manny()
    sleep_for(1500)
    manny:say_line("/blma025/")
    manny:hand_gesture()
    wait_for_message()
    meche:say_line("/blmc026/")
    wait_for_message()
    manny:say_line("/blma027/")
    manny:tilt_head_gesture()
    wait_for_message()
    manny:head_look_at(nil)
    start_script(manny.walk_and_face, manny, 3.28397, -28.1131, 1.3, 0, 172.214, 0)
    meche:say_line("/blmc028/")
    wait_for_message()
    sleep_for(500)
    manny:wait_for_actor()
    if gh.been_there then
        manny:say_line("/blma030/")
        wait_for_message()
        manny:say_line("/blma031/")
    else
        manny:say_line("/blma032/")
        manny:shrug_gesture()
        wait_for_message()
        sleep_for(500)
        manny:say_line("/blma033/")
        wait_for_message()
        manny:say_line("/blma034/")
        manny:twist_head_gesture()
    end
    END_CUT_SCENE()
    start_script(meche.get_kids)
end
meche.get_kids = function() -- line 303
    while system.currentSet and (system.currentSet == bl or system.currentSet == bu or inInventorySet()) do
        break_here()
    end
    meche.got_kids = TRUE
end
bl.talk_kids = function() -- line 310
    bl.talked_kids = TRUE
    START_CUT_SCENE()
    bl:kids_hover()
    sleep_for(500)
    bibi:head_look_at_manny()
    pugsy:head_look_at_manny()
    meche:head_look_at_manny()
    bibi:say_line("/blbi035/")
    wait_for_message()
    pugsy:say_line("/blpu036/")
    wait_for_message()
    bibi:say_line("/blbi037/")
    wait_for_message()
    pugsy:say_line("/blpu038/")
    wait_for_message()
    manny:say_line("/blma039/")
    wait_for_message()
    meche:say_line("/blmc040/")
    bibi:head_look_at(meche)
    pugsy:head_look_at(meche)
    wait_for_message()
    meche:say_line("/blmc041/")
    wait_for_message()
    manny:say_line("/blma044/")
    wait_for_message()
    bibi:say_line("/blbi042/")
    pugsy:say_line("/blpu043/")
    bibi:head_look_at_manny()
    pugsy:head_look_at_manny()
    meche:head_look_at_manny()
    bibi:wait_for_message()
    pugsy:wait_for_message()
    start_script(bl.play_tag)
    END_CUT_SCENE()
end
bl.everybodys_here = function() -- line 347
    START_CUT_SCENE()
    bl.glottis_here = TRUE
    bl.meche_here = TRUE
    meche.got_kids = TRUE
    bl.talked_kids = TRUE
    bl:switch_to_set()
    manny:put_in_set(bl)
    manny:put_at_object(bl.glottis_obj)
    manny:set_run(FALSE)
    manny:force_auto_run(FALSE)
    manny:stop_chore(mn2_run, "mn2.cos")
    stop_movement_scripts()
    IrisUp(355, 245, 1000)
    meche:head_look_at(bl.glottis_obj)
    glottis:head_look_at(bl.meche_obj)
    manny:head_look_at(bl.meche_obj)
    sleep_for(1000)
    meche:say_line("/blmc045/")
    wait_for_message()
    glottis:head_look_at(nil)
    glottis:play_chore(glottis_sailor_head_flick, "glottis_sailor.cos")
    glottis:say_line("/blgl046/")
    wait_for_message()
    if crusher_free then
        manny:head_look_at(bl.glottis_obj)
        manny:say_line("/blma047/")
        wait_for_message()
        glottis:say_line("/blgl048/")
        glottis:head_look_at_manny()
        wait_for_message()
        glottis:say_line("/blgl049/")
        glottis:head_look_at(nil)
        glottis:play_chore(glottis_sailor_head_flick, "glottis_sailor.cos")
        wait_for_message()
        stop_script(bl.pugsy_play_sounds)
        stop_script(bl.bibi_play_sounds)
        stop_sound("lolawatr.IMU")
        start_script(cut_scene.exodus)
    elseif bl.talked_reef then
        manny:head_look_at(bl.ship)
        glottis:head_look_at(nil)
        meche:head_look_at(nil)
        manny:say_line("/blma050/")
        wait_for_message()
        bl:start_glottis_idle()
    else
        bl.talk_reef()
    end
    END_CUT_SCENE()
end
bl.boat_before_passengers = function() -- line 401
    START_CUT_SCENE()
    bl.glottis_here = TRUE
    bl.meche_here = FALSE
    bl.angelitos_here = FALSE
    raised_lamancha = TRUE
    bl:switch_to_set()
    manny:put_in_set(bl)
    manny:put_at_object(bl.glottis_obj)
    manny:set_run(FALSE)
    manny:force_auto_run(FALSE)
    manny:stop_chore(mn2_run, "mn2.cos")
    stop_movement_scripts()
    bl.talk_reef()
    END_CUT_SCENE()
end
bl.talk_reef = function() -- line 418
    bl.talked_reef = TRUE
    manny:head_look_at(bl.ship)
    glottis:head_look_at(bl.ship)
    sleep_for(1000)
    manny:say_line("/blma051/")
    wait_for_message()
    glottis:say_line("/blgl052/")
    wait_for_message()
    glottis:head_look_at_manny()
    glottis:say_line("/blgl053/")
    wait_for_message()
    manny:head_look_at(bl.glottis_obj)
    manny:say_line("/blma054/")
    wait_for_message()
    manny:head_look_at(nil)
    if crusher_free then
        manny:tilt_head_gesture()
        manny:say_line("/blma055/")
        wait_for_message()
        if meche_freed then
            stop_sound("lolawatr.imu")
            start_script(cut_scene.exodus)
        else
            start_script(bu.thatll_do)
        end
    else
        manny:nod_head_gesture()
        manny:say_line("/blma056/")
        wait_for_message()
        glottis:head_look_at(nil)
        bl:start_glottis_idle()
    end
end
bl.set_up_actors = function(arg1) -- line 453
    if bl.glottis_here then
        bl.glottis_obj:make_touchable()
        if not find_script(bl.boat_before_passengers) and not find_script(bl.everybodys_here) then
            bl:set_up_glottis(TRUE)
        else
            bl:set_up_glottis(FALSE)
        end
    else
        bl.glottis_obj:make_untouchable()
        glottis:free()
    end
    if bl.meche_here then
        meche_freed = TRUE
        bl.meche_obj:make_touchable()
        bl:set_up_meche()
    else
        bl.meche_obj:make_untouchable()
        meche:free()
    end
end
bl.update_music_state = function(arg1) -- line 481
    if raised_lamancha then
        return stateBL_BOAT
    else
        return stateBL
    end
end
bl.enter = function(arg1) -- line 489
    if raised_lamancha then
        bl:current_setup(bl_lamst)
        bl.ship:make_touchable()
        play_movie_looping("bl_lam_ocean.snm", 176, 13)
        start_sfx("lolawatr.imu", IM_HIGH_PRIORITY, 32)
        set_pan("lolawatr.imu", 85)
    else
        bl:current_setup(bl_noshp)
        bl.ship:make_untouchable()
        play_movie_looping("bl_ocean.snm", 176, 169)
    end
    bl:set_up_actors()
    if meche.got_kids then
        bl:set_up_angelitos()
        if not bl.talked_kids then
            start_script(bl.talk_kids)
        else
            start_script(bl.play_tag)
        end
    end
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 100)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
end
bl.exit = function(arg1) -- line 519
    StopMovie()
    stop_script(vi.meche_head_idle)
    stop_script(vi.meche_arm_idle)
    stop_script(glottis.new_run_idle)
    stop_script(bl.play_tag)
    stop_script(bl.pugsy_play_sounds)
    stop_script(bl.bibi_play_sounds)
    stop_script(meche.head_follow_mesh)
    bibi:free()
    meche:free()
    pugsy:free()
    glottis:free()
    KillActorShadows(manny.hActor)
    KillActorShadows(glottis.hActor)
    KillActorShadows(meche.hActor)
    KillActorShadows(pugsy.hActor)
    KillActorShadows(bibi.hActor)
    stop_sound("lolawatr.imu")
end
bl.glottis_obj = Object:create(bl, "/bltx057/Glottis", 3.5220001, -26.3699, 2.0439999, { range = 1.6 })
bl.glottis_obj.use_pnt_x = 4.072
bl.glottis_obj.use_pnt_y = -26.2549
bl.glottis_obj.use_pnt_z = 1.3
bl.glottis_obj.use_rot_x = 0
bl.glottis_obj.use_rot_y = -656.66199
bl.glottis_obj.use_rot_z = 0
bl.glottis_obj:make_untouchable()
bl.glottis_obj.lookAt = function(arg1) -- line 559
    manny:say_line("/blma058/")
end
bl.glottis_obj.pickUp = function(arg1) -- line 563
    manny:say_line("/blma059/")
end
bl.glottis_obj.use = function(arg1) -- line 567
    START_CUT_SCENE()
    manny:say_line("/blma060/")
    wait_for_message()
    glottis:say_line("/blgl061/")
    wait_for_message()
    manny:say_line("/blma062/")
    END_CUT_SCENE()
end
bl.meche_obj = Object:create(bl, "/bltx063/Meche", 3.8310001, -25.5049, 1.779, { range = 1.5 })
bl.meche_obj.use_pnt_x = 4.072
bl.meche_obj.use_pnt_y = -26.2549
bl.meche_obj.use_pnt_z = 1.3
bl.meche_obj.use_rot_x = 0
bl.meche_obj.use_rot_y = -1016.66
bl.meche_obj.use_rot_z = 0
bl.meche_obj:make_untouchable()
bl.meche_obj.lookAt = function(arg1) -- line 587
    soft_script()
    manny:say_line("/blma064/")
    wait_for_message()
    manny:say_line("/blma065/")
end
bl.meche_obj.pickUp = function(arg1) -- line 594
    manny:say_line("/blma066/")
end
bl.meche_obj.use = function(arg1) -- line 598
    soft_script()
    if raised_lamancha then
        manny:say_line("/blma067/")
        wait_for_message()
        meche:say_line("/blmc068/")
        wait_for_message()
        glottis:say_line("/blgl069/")
    else
        manny:say_line("/blma070/")
        wait_for_message()
        if meche.got_kids then
            meche:say_line("/blmc071/")
        else
            meche:say_line("/blmc028/")
        end
    end
end
bl.ship = Object:create(bl, "/bltx072/ship", 8.7324305, 1.32003, 4.2399998, { range = 28.8599 })
bl.ship.use_pnt_x = 2.5724299
bl.ship.use_pnt_y = -19.799999
bl.ship.use_pnt_z = 1.3
bl.ship.use_rot_x = 0
bl.ship.use_rot_y = -56.756401
bl.ship.use_rot_z = 0
bl.ship:make_untouchable()
bl.ship.lookAt = function(arg1) -- line 627
    manny:say_line("/blma073/")
end
bl.ship.pickUp = function(arg1) -- line 631
    manny:say_line("/blma074/")
end
bl.ship.use = function(arg1) -- line 635
    manny:say_line("/blma075/")
end
bl.bu_door = Object:create(bl, "/bltx076/beach", 1, -28.885, 1.86, { range = 0.60000002 })
bl.bu_door.use_pnt_x = 1
bl.bu_door.use_pnt_y = -28.475
bl.bu_door.use_pnt_z = 1.3
bl.bu_door.use_rot_x = 0
bl.bu_door.use_rot_y = 143.674
bl.bu_door.use_rot_z = 0
bl.bu_door.out_pnt_x = 1
bl.bu_door.out_pnt_y = -28.475
bl.bu_door.out_pnt_z = 1.3
bl.bu_door.out_rot_x = 0
bl.bu_door.out_rot_y = 143.674
bl.bu_door.out_rot_z = 0
bl.bu_box1 = bl.bu_door
bl.bu_box2 = bl.bu_door
bl.bu_door.walkOut = function(arg1) -- line 660
    bu:come_out_door(bu.bl_door)
end
bogen_mumble = 0
bogen_hands_side_to_bk = 1
bogen_hands_to_hips = 2
bogen_rocking = 3
bogen_brush_jacket = 4
bogen_hands_from_hips = 5
bogen_hands_bk_to_side = 6
bogen_o = 7
bogen_m = 8
bogen_l = 9
bogen_c = 10
bogen_a = 11
bogen_e = 12
bogen_f = 13
bogen_u = 14
bogen_stop_talk = 15
bogen_stand = 16
bogen_hands_on_hips = 17
bogen_t = 18
bone_bone = 0
bonewagon_cc_no_shocks = 0
bonewagon_cc_shocks = 1
bonewagon_cc_stay_up = 2
bonewagon_cc_turn_rt = 3
bonewagon_cc_hold_rt = 4
bonewagon_cc_rt_to_ctr = 5
bonewagon_cc_hold_ctr = 6
bonewagon_cc_turn_lft = 7
bonewagon_cc_hold_lft = 8
bonewagon_cc_lft_to_ctr = 9
bonewagon_cc_down = 10
bonewagon_cc_ma_jump_in = 11
bonewagon_cc_ma_sit = 12
bonewagon_cc_ma_jump_out = 13
bonewagon_cc_hide_ma = 14
bonewagon_cc_backup = 15
bonewagon_cc_gl_drive = 16
bonewagon_cc_gl_hands_out = 17
bonewagon_cc_gl_2hands_out = 18
bonewagon_cc_gl_cvr_eyes_shocks = 19
bonewagon_cc_gl_cvr_eyes_hold = 20
bonewagon_cc_gl_cvr_eyes_fwd = 21
bonewagon_cc_gl_cvr_eyes_dn = 22
bonewagon_cc_gl_cvr_eyes_bk = 23
bonewagon_cc_gl_cvr_eyes = 24
bonewagon_cc_gl_mumble = 25
bonewagon_cc_c = 26
bonewagon_cc_f = 27
bonewagon_cc_e = 28
bonewagon_cc_u = 29
bonewagon_cc_t = 30
bonewagon_cc_m = 31
bonewagon_cc_a = 32
bonewagon_cc_o = 33
bonewagon_cc_stop_talk = 34
bonewagon_cc_drive = 35
bonewagon_cc_tormbl = 36
bonewagon_cc_rmbl = 37
bonewagon_cc_rmbl2drv = 38
bonewagon_cc_tovrm_lft = 39
bonewagon_cc_vrm_lft_hld = 40
bonewagon_cc_vrm2drv = 41
bonewagon_cc_mck_shft = 42
bonewagon_cc_sc_hook = 43
bonewagon_cc_sc_rmbl = 44
bonewagon_cc_sc2steer = 45
bonewagon_cc_sc_steer = 46
bonewagon_cc_sc2drv = 47
bonewagon_cc_rx2rmbl = 48
bonewagon_cc_rx_rmbl = 49
bonewagon_cc_rx_2steer = 50
bonewagon_cc_rx_steer = 51
bonewagon_cc_rx_hook = 52
bonewagon_cc_rx2drv = 53
bonewagon_cc_wp_mouth = 54
bonewagon_cc_putaway_remote = 55
bonewagon_cc_takeout_remote = 56
bonewagon_cc_hold_remote = 57
bonewagon_cc_gl_stop_hands_out = 58
bonewagon_cc_gl_uncover_eyes = 59
bonewagon_gl_no_shocks = 0
bonewagon_gl_shocks = 1
bonewagon_gl_stay_up = 2
bonewagon_gl_turn_rt = 3
bonewagon_gl_hold_rt = 4
bonewagon_gl_rt_to_ctr = 5
bonewagon_gl_hold_ctr = 6
bonewagon_gl_turn_lft = 7
bonewagon_gl_hold_lft = 8
bonewagon_gl_lft_to_ctr = 9
bonewagon_gl_down = 10
bonewagon_gl_ma_jump_in = 11
bonewagon_gl_ma_sit = 12
bonewagon_gl_ma_jump_out = 13
bonewagon_gl_hide_ma = 14
bonewagon_gl_backup = 15
bonewagon_gl_gl_drive = 16
bonewagon_gl_gl_hands_out = 17
bonewagon_gl_gl_2hands_out = 18
bonewagon_gl_gl_cvr_eyes_shocks = 19
bonewagon_gl_gl_cvr_eyes_hold = 20
bonewagon_gl_gl_cvr_eyes_fwd = 21
bonewagon_gl_gl_cvr_eyes_dn = 22
bonewagon_gl_gl_cvr_eyes_bk = 23
bonewagon_gl_gl_cvr_eyes = 24
bonewagon_gl_gl_mumble = 25
bonewagon_gl_c = 26
bonewagon_gl_f = 27
bonewagon_gl_e = 28
bonewagon_gl_u = 29
bonewagon_gl_t = 30
bonewagon_gl_m = 31
bonewagon_gl_a = 32
bonewagon_gl_o = 33
bonewagon_gl_stop_talk = 34
bonewagon_gl_drive = 35
bonewagon_gl_tormbl = 36
bonewagon_gl_rmbl = 37
bonewagon_gl_rmbl2drv = 38
bonewagon_gl_tovrm_lft = 39
bonewagon_gl_vrm_lft_hld = 40
bonewagon_gl_vrm2drv = 41
bonewagon_gl_mck_shft = 42
bonewagon_gl_sc_hook = 43
bonewagon_gl_sc_rmbl = 44
bonewagon_gl_sc2steer = 45
bonewagon_gl_sc_steer = 46
bonewagon_gl_sc2drv = 47
bonewagon_gl_rx2rmbl = 48
bonewagon_gl_rx_rmbl = 49
bonewagon_gl_rx_2steer = 50
bonewagon_gl_rx_steer = 51
bonewagon_gl_rx_hook = 52
bonewagon_gl_rx2drv = 53
bonewagon_gl_wp_mouth = 54
bonewagon_gl_putaway_remote = 55
bonewagon_gl_takeout_remote = 56
bonewagon_gl_hold_remote = 57
bonewagon_gl_hide_bw = 58
bonewagon_gl_gl_stop_hands_out = 59
bonewagon_gl_gl_uncover_eyes = 60
bonewagon_gl_hide_gl = 61
bonewagon_gl_l = 62
bonewagon_gl_squint = 63
bonewagon_no_shocks = 0
bonewagon_shocks = 1
bonewagon_stay_up = 2
bonewagon_turn_rt = 3
bonewagon_hold_rt = 4
bonewagon_rt_to_ctr = 5
bonewagon_hold_ctr = 6
bonewagon_turn_lft = 7
bonewagon_hold_lft = 8
bonewagon_lft_to_ctr = 9
bonewagon_down = 10
bonewagon_ma_jump_in = 11
bonewagon_ma_sit = 12
bonewagon_ma_jump_out = 13
bonewagon_hide_ma = 14
bonewagon_backup = 15
bonewagon_gl_drive = 16
bonewagon_gl_hands_out = 17
bonewagon_gl_2hands_out = 18
bonewagon_gl_cvr_eyes_shocks = 19
bonewagon_gl_cvr_eyes_hold = 20
bonewagon_gl_cvr_eyes_fwd = 21
bonewagon_gl_cvr_eyes_dn = 22
bonewagon_gl_cvr_eyes_bk = 23
bonewagon_gl_cvr_eyes = 24
bonewagon_gl_mumble = 25
bonewagon_gl_c = 26
bonewagon_gl_f = 27
bonewagon_gl_e = 28
bonewagon_gl_u = 29
bonewagon_gl_t = 30
bonewagon_gl_m = 31
bonewagon_gl_a = 32
bonewagon_gl_o = 33
bonewagon_gl_stop_talk = 34
bonewagon_gl_l = 35
bonewagon_thunder_no_shocks = 0
bonewagon_thunder_shocks = 1
bonewagon_thunder_stay_up = 2
bonewagon_thunder_turn_rt = 3
bonewagon_thunder_hold_rt = 4
bonewagon_thunder_rt_to_ctr = 5
bonewagon_thunder_hold_ctr = 6
bonewagon_thunder_turn_lft = 7
bonewagon_thunder_hold_lft = 8
bonewagon_thunder_lft_to_ctr = 9
bonewagon_thunder_down = 10
bonewagon_thunder_ma_jump_in = 11
bonewagon_thunder_ma_sit = 12
bonewagon_thunder_ma_jump_out = 13
bonewagon_thunder_hide_ma = 14
bonewagon_thunder_backup = 15
bonewagon_thunder_gl_drive = 16
bonewagon_thunder_gl_hands_out = 17
bonewagon_thunder_gl_2hands_out = 18
bonewagon_thunder_gl_cvr_eyes_shocks = 19
bonewagon_thunder_gl_cvr_eyes_hold = 20
bonewagon_thunder_gl_cvr_eyes_fwd = 21
bonewagon_thunder_gl_cvr_eyes_dn = 22
bonewagon_thunder_gl_cvr_eyes_bk = 23
bonewagon_thunder_gl_cvr_eyes = 24
bonewagon_thunder_gl_mumble = 25
bonewagon_thunder_c = 26
bonewagon_thunder_f = 27
bonewagon_thunder_e = 28
bonewagon_thunder_u = 29
bonewagon_thunder_t = 30
bonewagon_thunder_m = 31
bonewagon_thunder_a = 32
bonewagon_thunder_o = 33
bonewagon_thunder_stop_talk = 34
bonewagon_thunder_drive = 35
bonewagon_thunder_tormbl = 36
bonewagon_thunder_rmbl = 37
bonewagon_thunder_rmbl2drv = 38
bonewagon_thunder_tovrm_lft = 39
bonewagon_thunder_vrm_lft_hld = 40
bonewagon_thunder_vrm2drv = 41
bonewagon_thunder_mck_shft = 42
bonewagon_thunder_sc_hook = 43
bonewagon_thunder_sc_rmbl = 44
bonewagon_thunder_sc2steer = 45
bonewagon_thunder_sc_steer = 46
bonewagon_thunder_sc2drv = 47
bonewagon_thunder_rx2rmbl = 48
bonewagon_thunder_rx_rmbl = 49
bonewagon_thunder_rx_2steer = 50
bonewagon_thunder_rx_steer = 51
bonewagon_thunder_rx_hook = 52
bonewagon_thunder_rx2drv = 53
bonewagon_thunder_wp_mouth = 54
bonewagon_thunder_putaway_remote = 55
bonewagon_thunder_takeout_remote = 56
bonewagon_thunder_hold_remote = 57
bonewagon_thunder_gl_stop_hands_out = 58
bonewagon_thunder_gl_uncover_eyes = 59
book_be = 0
bowl_bowl = 0
CheckFirstTime("bp.lua")
bp = Set:create("bp.set", "bridge police side", { bp_extws = 0, bp_overhead = 1 })
bp.enter = function(arg1) -- line 20
    single_start_script(foghorn_sfx)
    bp:add_ambient_sfx(harbor_ambience_list, harbor_ambience_parm_list)
    single_start_sfx("blimp.imu")
    set_vol("blimp.imu", bb.blimp_vol_far)
    set_pan("blimp.imu", 127)
    single_start_script(blimp_sound_killer)
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(manny.hActor, 0.34999999)
    local local1 = 0
    repeat
        local1 = local1 + 1
        if not table_actor[local1] then
            table_actor[local1] = Actor:create(nil, nil, nil, "table" .. local1)
        end
        table_actor[local1]:set_costume("x_spot.cos")
        table_actor[local1]:set_visibility(FALSE)
        table_actor[local1]:put_in_set(bp)
        table_actor[local1]:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(table_actor[local1].hActor, 0.30000001)
        if local1 == 1 then
            table_actor[local1]:setpos({ x = 3.3933699, y = -1.68363, z = 12.168 })
        elseif local1 == 2 then
            table_actor[local1]:setpos({ x = 3.3933699, y = -5.4116302, z = 12.168 })
        end
    until local1 == 2
    SetShadowColor(10, 10, 18)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 3.2925, -1.9617, 13.55)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 3.2100201, -5.55652, 13.001)
    SetActorShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow2")
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, 0.745157, 0.79060501, 14.14)
    SetActorShadowPlane(manny.hActor, "shadow3")
    AddShadowPlane(manny.hActor, "shadow3")
end
bp.exit = function(arg1) -- line 66
    stop_script(foghorn_sfx)
    manny:set_collision_mode(COLLISION_OFF)
    local local1 = 0
    repeat
        local1 = local1 + 1
        table_actor[local1]:free()
    until local1 == 2
    KillActorShadows(manny.hActor)
end
bp.statue = Object:create(bp, "/bptx003/statue", 0.00035762801, 0.801211, 16.139999, { range = 6 })
bp.statue.use_pnt_x = 2.7003601
bp.statue.use_pnt_y = 0.35121
bp.statue.use_pnt_z = 11.8
bp.statue.use_rot_x = 0
bp.statue.use_rot_y = 56.3293
bp.statue.use_rot_z = 0
bp.statue.count = 0
bp.statue.lookAt = function(arg1) -- line 95
    bp.statue.count = bp.statue.count + 1
    if bp.statue.count == 1 then
        manny:say_line("/bpma004/")
    elseif bp.statue.count == 2 then
        manny:say_line("/bpma005/")
    elseif bp.statue.count == 3 then
        manny:say_line("/bpma006/")
    elseif bp.statue.count == 4 then
        manny:say_line("/bpma007/")
    elseif bp.statue.count == 5 then
        manny:say_line("/bpma008/")
    else
        manny:say_line("/bpma009/")
    end
end
bp.statue.use = bp.statue.lookAt
bp.bb_door = Object:create(bp, "/bptx001/bridge", 3.06215, -5.5877399, 12.294, { range = 0.60000002 })
bp.bb_door.use_pnt_x = 3.1201501
bp.bb_door.use_pnt_y = -4.6877398
bp.bb_door.use_pnt_z = 11.8
bp.bb_door.use_rot_x = 0
bp.bb_door.use_rot_y = -175.24899
bp.bb_door.use_rot_z = 0
bp.bb_door.out_pnt_x = 3.1254699
bp.bb_door.out_pnt_y = -5.5417299
bp.bb_door.out_pnt_z = 11.8
bp.bb_door.out_rot_x = 0
bp.bb_door.out_rot_y = -174.673
bp.bb_door.out_rot_z = 0
bp.bb_box = bp.bb_door
bp.bb_door.touchable = FALSE
bp.bb_door.walkOut = function(arg1) -- line 143
    bb:come_out_door(bb.bp_door)
end
bp.pc_door = Object:create(bp, "/bptx002/tunnel", 1.35739, 1.27108, 12.2, { range = 0.60000002 })
bp.pc_door.use_pnt_x = 1.55739
bp.pc_door.use_pnt_y = 1.27108
bp.pc_door.use_pnt_z = 11.8
bp.pc_door.use_rot_x = 0
bp.pc_door.use_rot_y = 815.22101
bp.pc_door.use_rot_z = 0
bp.pc_door.out_pnt_x = 1.3490601
bp.pc_door.out_pnt_y = 1.25204
bp.pc_door.out_pnt_z = 11.8
bp.pc_door.out_rot_x = 0
bp.pc_door.out_rot_y = 815.22101
bp.pc_door.out_rot_z = 0
bp.pc_box = bp.pc_door
bp.pc_door.touchable = FALSE
bp.pc_door.walkOut = function(arg1) -- line 165
    pc:come_out_door(pc.bp_door)
end
bread_pile_pile = 0
brennis_fix_idle_to_talk = 0
brennis_fix_idle_fix_idle = 1
brennis_fix_idle_talk_hold = 2
brennis_fix_idle_exit_tube_room = 3
brennis_fix_idle_buttscratch = 4
brennis_fix_idle_back_to_fix_idle = 5
brennis_fix_idle_mumble = 6
brennis_fix_idle_stop_talk = 7
brennis_fix_idle_m = 8
brennis_fix_idle_c = 9
brennis_fix_idle_f = 10
brennis_fix_idle_e = 11
brennis_fix_idle_u = 12
brennis_fix_idle_a = 13
brennis_fix_idle_o = 14
brennis_fix_idle_l = 15
brennis_fix_idle_walk = 16
brennis_fix_idle_walk_hold = 17
brennis_fix_idle_t = 18
brennis_on_fire_mumble = 0
brennis_on_fire_stop_talk = 1
brennis_on_fire_m = 2
brennis_on_fire_c = 3
brennis_on_fire_f = 4
brennis_on_fire_e = 5
brennis_on_fire_u = 6
brennis_on_fire_a = 7
brennis_on_fire_o = 8
brennis_on_fire_l = 9
brennis_on_fire_on_fire = 10
brennis_on_fire_pat_flames = 11
brennis_on_fire_stop_manny = 12
brennis_on_fire_turn_around = 13
brennis_on_fire_t = 14
br_grab_card_grab_card = 0
br_idles_looks = 0
br_idles_rest = 1
br_idles_moves_head = 2
br_idles_scrtch_chst = 3
br_idles_bar_door = 4
br_talk_idles_idle2talk = 0
br_talk_idles_talkpos = 1
br_talk_idles_talk1 = 2
br_talk_idles_talk2 = 3
br_talk_idles_talkpos2 = 4
br_talk_idles_talk3 = 5
br_talk_idles_talk4 = 6
br_talk_idles_talkpos3 = 7
br_talk_idles_walkout = 8
br_talk_idles_talk_idle = 9
bruno_cocoon_wiggle = 0
bruno_cocoon_burst = 1
bruno_coffin_pop_out = 0
bruno_coffin_open = 1
bruno_coffin_bruno = 2
bruno_coffin_you = 3
bruno_coffin_magazine = 4
bruno_coffin_mug = 5
bruno_coffin_phooey = 6
bruno_coffin_mumble = 7
bruno_coffin_m = 8
bruno_coffin_c = 9
bruno_coffin_f = 10
bruno_coffin_e = 11
bruno_coffin_u = 12
bruno_coffin_l = 13
bruno_coffin_a = 14
bruno_coffin_o = 15
bruno_coffin_stop_talk = 16
bruno_coffin_t = 17
bruno_skel_reaped = 0
bruno_skel_mumble = 1
bruno_skel_stop_talk = 2
bruno_skel_m = 3
bruno_skel_c = 4
bruno_skel_f = 5
bruno_skel_e = 6
bruno_skel_u = 7
bruno_skel_l = 8
bruno_skel_a = 9
bruno_skel_o = 10
bruno_skel_t = 11
bs_idles_idle = 0
bs_idles_react = 1
bs_idles_retreat = 2
bs_idles_spcan_start = 3
bs_idles_spcan_end = 4
bs_idles_look = 5
bs_idles_shiver = 6
bs_idles_mumble = 7
bs_idles_m = 8
bs_idles_c = 9
bs_idles_f = 10
bs_idles_e = 11
bs_idles_u = 12
bs_idles_l = 13
bs_idles_o = 14
bs_idles_a = 15
bs_idles_no_talk = 16
bs_idles_stand = 17
bs_idles_can_only = 18
bs_idles_hide_gun = 19
bs_idles_hide_can = 20
bs_idles_handoff1 = 21
bs_idles_handoff2 = 22
bs_idles_handoff_talk = 23
bs_idles_t = 24
CheckFirstTime("bs.lua")
bs = Set:create("bs.set", "temple back stairs", { bs_intla = 0, bs_ovrhd = 1 })
bs.force_hell_train = function() -- line 12
    START_CUT_SCENE()
    sleep_for(1000)
    meche:say_line("/bsmc004/")
    wait_for_message()
    manny:say_line("/bsma005/")
    wait_for_message()
    meche:say_line("/bsmc010/")
    wait_for_message()
    END_CUT_SCENE()
    start_script(cut_scene.helltrain)
end
bs.enter = function(arg1) -- line 31
    gate_keeper:free()
    gate_keeper:set_costume("gatekeeper.cos")
    gate_keeper:put_in_set(bs)
    gate_keeper:setpos(-1.59135, 32.6508, 17.8771)
    gate_keeper:setrot(0.17, 0)
    gate_keeper:play_chore(gatekeeper_cross_arms_hold, "gatekeeper.cos")
end
bs.my_door = Object:create(bs, "/bstx001/door", -5.7663999, 25.9069, 12.51, { range = 1 })
bs.my_door.use_pnt_x = -6.1564002
bs.my_door.use_pnt_y = 25.856899
bs.my_door.use_pnt_z = 11.69
bs.my_door.use_rot_x = 0
bs.my_door.use_rot_y = -1183.61
bs.my_door.use_rot_z = 0
bs.my_door.out_pnt_x = -5.8578
bs.my_door.out_pnt_y = 25.7847
bs.my_door.out_pnt_z = 11.69
bs.my_door.out_rot_x = 0
bs.my_door.out_rot_y = -1183.61
bs.my_door.out_rot_z = 0
bs.my_door.walkOut = function(arg1) -- line 65
    my:come_out_door(my.bs_door)
end
bs.my_door.lookAt = function(arg1) -- line 69
    manny:say_line("/bsma002/")
end
bs.my_door.comeOut = function(arg1) -- line 73
    if td.been_there and not seen_hell_train then
        start_script(bs.force_hell_train)
    else
        Object.come_out_door(arg1)
    end
end
bs.tg_door = Object:create(bs, "/bstx003/stairs", -6.7597098, 28.635401, 13.3277, { range = 1.5 })
bs.tg_door.use_pnt_x = -6.7597098
bs.tg_door.use_pnt_y = 27.5553
bs.tg_door.use_pnt_z = 12.4177
bs.tg_door.use_rot_x = 0
bs.tg_door.use_rot_y = 354.259
bs.tg_door.use_rot_z = 0
bs.tg_door.out_pnt_x = -6.76017
bs.tg_door.out_pnt_y = 28.205601
bs.tg_door.out_pnt_z = 12.7428
bs.tg_door.out_rot_x = 0
bs.tg_door.out_rot_y = 376.64999
bs.tg_door.out_rot_z = 0
bs.tg_door.lookAt = function(arg1) -- line 97
    manny:say_line("/bsma007/")
end
bs.tg_door.walkOut = function(arg1) -- line 101
    tg:come_out_door(tg.bs_door)
end
bs.td_door = Object:create(bs, "/bstx008/stairs", -10.4931, 27.2355, 10.2963, { range = 0.60000002 })
bs.td_door.use_pnt_x = -9.7930698
bs.td_door.use_pnt_y = 27.2355
bs.td_door.use_pnt_z = 10.6863
bs.td_door.use_rot_x = 0
bs.td_door.use_rot_y = 102.702
bs.td_door.use_rot_z = 0
bs.td_door.out_pnt_x = -10.2518
bs.td_door.out_pnt_y = 27.2188
bs.td_door.out_pnt_z = 10.461
bs.td_door.out_rot_x = 0
bs.td_door.out_rot_y = 82.1297
bs.td_door.out_rot_z = 0
bs.td_door.walkOut = function(arg1) -- line 123
    td:come_out_door(td.bs_door)
end
bs.td_door.lookAt = function(arg1) -- line 127
    manny:say_line("/bsma009/")
end
bu_crushers_spin = 0
bu_crushers_broken = 1
bu_crushers_tangled = 2
CheckFirstTime("bu.lua")
dofile("bu_scoop.lua")
dofile("bu_crushers.lua")
dofile("mn_chisel.lua")
bu = Set:create("bu.set", "upper beach", { bu_crsws = 0, bu_ovrhd = 1 })
bu.figurin_1_spot = { x = 0.747842, y = -21.4594, z = 0.982 }
bu.figurin_2_spot = { x = 1.73384, y = -21.7244, z = 1.091 }
bu.glottis_figurin = function() -- line 19
    glottis:play_chore(glottis_sailor_home_pose, "glottis_sailor.cos")
    while 1 do
        glottis:head_look_at_point(bu.figurin_1_spot)
        sleep_for(random() * 4000 + 1000)
        glottis:head_look_at_point(bu.figurin_2_spot)
        sleep_for(random() * 4000 + 1000)
    end
end
bu.lower_scoop = function() -- line 29
    START_CUT_SCENE()
    ew.crane_actor:play_chore(crane_down)
    sleep_for(1000)
    start_sfx("scoopcrs.wav")
    ew.crane_actor:wait_for_chore(crane_down)
    ew.crane_down = TRUE
    bu.scoop_here = TRUE
    bu:switch_to_set()
    sleep_for(3000)
    END_CUT_SCENE()
end
bu.break_chain = function(arg1) -- line 42
    ew.crane_broken = TRUE
    ew.crane_down = FALSE
    LockSet("bu.set")
    START_CUT_SCENE()
    set_override(bu.skip_break_chain, bu)
    manny:walkto_object(bu.scoop)
    manny:push_costume("mn_chisel.cos")
    manny:stop_chore(mn2_activate_chisel, "mn2.cos")
    manny:run_chore(mn_chisel_prepare_chisel, "mn_chisel.cos")
    manny:stop_chore(mn_chisel_prepare_chisel, "mn_chisel.cos")
    start_sfx("chiselbu.IMU", IM_HIGH_PRIORITY, 127)
    manny:play_chore_looping(mn_chisel_use_chisel, "mn_chisel.cos")
    sleep_for(1000)
    start_sfx("scoop_ch.WAV", IM_HIGH_PRIORITY, 127)
    bu.scoop:play_chore(bu_scoop_snaps_up)
    manny:head_look_at_point(0.191414, -26.7647, 2.118)
    bu.scoop:wait_for_chore(bu_scoop_snaps_up)
    stop_sound("chiselbu.IMU")
    ew:switch_to_set()
    music_state:set_sequence(seqCraneFall)
    RunFullscreenMovie("ew_c.snm")
    wait_for_movie()
    start_sfx("chiselmt.IMU", IM_HIGH_PRIORITY, 127)
    bu:switch_to_set()
    manny:put_in_set(bu)
    manny:put_at_object(bu.scoop)
    bu.scoop:play_chore(bu_scoop_scoop_only)
    SendObjectToFront(bu.scoop_obj)
    manny:set_chore_looping(mn_chisel_use_chisel, FALSE, "mn_chisel.cos")
    manny:wait_for_chore(mn_chisel_use_chisel, "mn_chisel.cos")
    fade_sfx("chiselmt.IMU", 250, 0)
    manny:run_chore(mn_chisel_back_to_hold, "mn_chisel.cos")
    manny:pop_costume()
    manny:play_chore_looping(mn2_activate_chisel, "mn2.cos")
    manny:head_look_at(nil)
    manny:say_line("/buma001/")
    END_CUT_SCENE()
    UnLockSet("bu.set")
end
bu.skip_break_chain = function(arg1) -- line 84
    kill_override()
    bu:switch_to_set()
    manny:put_in_set(bu)
    manny:put_at_object(bu.scoop)
    if manny:get_costume() == "mn_chisel.cos" then
        manny:pop_costume()
    end
    manny:head_look_at(nil)
    manny:play_chore(mn2_hold, "mn2.cos")
    manny:play_chore(mn2_activate_chisel, "mn2.cos")
    stop_sound("chiselmt.IMU")
    UnLockSet("bu.set")
end
bu.thatll_do = function() -- line 101
    START_CUT_SCENE()
    bu.glottis_obj:make_touchable()
    bl.glottis_here = FALSE
    bu.glottis_here = TRUE
    glottis:play_chore(glottis_sailor_home_pose, "glottis_sailor.cos")
    bu:switch_to_set()
    manny:put_in_set(bu)
    manny:set_visibility(TRUE)
    manny:setpos(-0.0418105, -19.8081, 0.74)
    manny:setrot(0, 241.857, 0)
    glottis:default("sailor")
    glottis:put_in_set(bu)
    glottis:setpos(1.18951, -20.867, 0.739999)
    glottis:setrot(0, 160, 0)
    sleep_for(500)
    glottis:say_line("/bugl002/")
    glottis:wait_for_message()
    END_CUT_SCENE()
    if meche_freed then
        stop_sound("cu_cybu.IMU")
        start_script(cut_scene.exodus)
    else
        glottis:say_line("/bugl003/")
        start_script(bu.glottis_figurin)
        wait_for_message()
    end
end
bu.footstep_monitor = function(arg1) -- line 130
    while TRUE do
        if system.currentActor:find_sector_name("ramp_box") then
            system.currentActor.footsteps = footsteps.marble
        else
            system.currentActor.footsteps = footsteps.sand
        end
        break_here()
    end
end
bu.enter = function(arg1) -- line 147
    bu:add_object_state(0, "bu_ocean.bm", nil, OBJSTATE_UNDERLAY)
    bu.edge:set_object_state("bu_ocean.cos")
    bu.edge:play_chore_looping(0)
    if not crusher_free then
        bu:add_object_state(0, "bu_crusher_anim.bm", nil, OBJSTATE_UNDERLAY)
    else
        bu:add_object_state(0, "bu_crushers.bm", "bu_crushers.zbm", OBJSTATE_STATE)
    end
    if ew.crane_broken and ew.crane_down and ew.crane_pos == ew.at_crusher then
        bu:add_object_state(0, "bu_tangle.bm", nil, OBJSTATE_UNDERLAY)
    end
    if bu.scoop_here then
        bu.chain_obj = bu:add_object_state(0, "bu_snapsup.bm", "bu_snapsup.zbm", OBJSTATE_STATE)
        bu.scoop_obj = bu:add_object_state(0, "bu_bucket.bm", "bu_bucket.zbm", OBJSTATE_STATE)
        SendObjectToFront(bu.chain_obj)
    end
    bu.scoop:set_object_state("bu_scoop.cos")
    bu.fallen_crusher:set_object_state("bu_crushers.cos")
    if bu.glottis_here then
        bu.glottis_obj:make_touchable()
    else
        bu.glottis_obj:make_untouchable()
    end
    if bu.scoop_here then
        bu.scoop:make_touchable()
        if not ew.crane_broken then
            bu.scoop:play_chore(bu_scoop_entire_scoop)
        else
            bu.scoop:play_chore(bu_scoop_scoop_only)
        end
        box_off("scoop_box")
    else
        bu.scoop:play_chore(bu_scoop_scoop_gone)
        bu.scoop:make_untouchable()
        box_on("scoop_box")
    end
    if crusher_free then
        bu.fallen_crusher:make_touchable()
        bu.fallen_crusher:play_chore(bu_crushers_broken)
        box_off("crusher_box")
    else
        if ew.crane_pos == ew.at_crusher and ew.crane_broken and ew.crane_down then
            bu.fallen_crusher:play_chore(bu_crushers_tangled)
        else
            bu.fallen_crusher:play_chore_looping(bu_crushers_spin)
            start_sfx("cu_cybu.IMU", IM_HIGH_PRIORITY, 80)
        end
        box_on("crusher_box")
    end
    if bu.glottis_here then
        glottis:default("sailor")
        glottis:put_in_set(bu)
        glottis:setpos(1.18951, -20.867, 0.739999)
        glottis:setrot(0, 160, 0)
        glottis:play_chore(glottis_sailor_home_pose, "glottis_sailor.cos")
        start_script(bu.glottis_figurin)
    end
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 100)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 0, 0, 100)
    SetActorShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow2")
    start_script(bu.footstep_monitor)
end
bu.exit = function(arg1) -- line 227
    stop_script(bu.footstep_monitor)
    stop_script(bu.glottis_figurin)
    stop_sound("chiselmt.IMU")
    stop_sound("chiselbu.IMU")
    stop_sound("cu_cybu.IMU")
    glottis:free()
    bu.fallen_crusher:stop_chore(bu_crushers_spin)
    KillActorShadows(manny.hActor)
end
bu.fallen_crusher = Object:create(bu, "/butx004/coral crusher", 1.08074, -21.811501, 1.104, { range = 2 })
bu.fallen_crusher.use_pnt_x = -0.0131819
bu.fallen_crusher.use_pnt_y = -20.1103
bu.fallen_crusher.use_pnt_z = 0.74000001
bu.fallen_crusher.use_rot_x = 0
bu.fallen_crusher.use_rot_y = 214.37601
bu.fallen_crusher.use_rot_z = 0
bu.fallen_crusher.touchable = FALSE
bu.fallen_crusher.lookAt = function(arg1) -- line 256
    if bu.glottis_here then
        manny:say_line("/buma005/")
    else
        manny:say_line("/buma006/")
    end
end
bu.fallen_crusher.pickUp = function(arg1) -- line 264
    system.default_response("hernia")
end
bu.fallen_crusher.use = function(arg1) -- line 268
    if bu.glottis_here then
        manny:say_line("/buma007/")
    else
        manny:say_line("/buma008/")
    end
end
bu.fallen_crusher.use_chisel = function(arg1) -- line 276
    manny:say_line("/buma009/")
end
bu.glottis_obj = Object:create(bu, "/butx010/Glottis", 1.09553, -20.609301, 1.6544, { range = 1.6 })
bu.glottis_obj.use_pnt_x = -0.0131819
bu.glottis_obj.use_pnt_y = -20.1103
bu.glottis_obj.use_pnt_z = 0.74000001
bu.glottis_obj.use_rot_x = 0
bu.glottis_obj.use_rot_y = 214.37601
bu.glottis_obj.use_rot_z = 0
bu.glottis_obj.touchable = FALSE
bu.glottis_obj.lookAt = function(arg1) -- line 291
    manny:say_line("/buma011/")
end
bu.glottis_obj.use = function(arg1) -- line 295
    soft_script()
    manny:say_line("/buma012/")
    wait_for_message()
    arg1:lookAt()
end
bu.glottis_obj.pickUp = bu.glottis_obj.use
bu.scoop = Object:create(bu, "/butx013/scoop", 0.57289398, -28.5487, 1.15, { range = 1 })
bu.scoop.use_pnt_x = 0.257514
bu.scoop.use_pnt_y = -27.9783
bu.scoop.use_pnt_z = 0.74000001
bu.scoop.use_rot_x = 0
bu.scoop.use_rot_y = 238.513
bu.scoop.use_rot_z = 0
bu.scoop.touchable = FALSE
bu.scoop.lookAt = function(arg1) -- line 315
    manny:say_line("/buma014/")
end
bu.scoop.use = function(arg1) -- line 319
    manny:say_line("/buma015/")
end
bu.scoop.pickUp = bu.scoop.use
bu.scoop.use_chisel = function(arg1) -- line 325
    if ew.crane_broken then
        manny:say_line("/buma016/")
    else
        start_script(bu.break_chain)
    end
end
bu.edge = Object:create(bu, "/butx017/Edge of the World", -15.0152, -12.9614, 2.03, { range = 14.5 })
bu.edge.use_pnt_x = -3.0652399
bu.edge.use_pnt_y = -22.6014
bu.edge.use_pnt_z = 0.74000102
bu.edge.use_rot_x = 0
bu.edge.use_rot_y = -291.95999
bu.edge.use_rot_z = 0
bu.edge.lookAt = function(arg1) -- line 342
    manny:say_line("/buma018/")
end
bu.edge.pickUp = function(arg1) -- line 346
    manny:say_line("/buma019/")
end
bu.edge.use = function(arg1) -- line 350
    soft_script()
    if gh.been_there then
        manny:say_line("/buma020/")
        if raised_lamancha then
            wait_for_message()
            manny:say_line("/buma021/")
        end
    else
        manny:say_line("/buma022/")
    end
end
bu.cu_door1 = Object:create(bu, "/butx023/ramp", -1.28095, -10.6155, 3.6182301, { range = 0.60000002 })
bu.cu_door1.use_pnt_x = -1.28095
bu.cu_door1.use_pnt_y = -10.6155
bu.cu_door1.use_pnt_z = 3.6182301
bu.cu_door1.use_rot_x = 0
bu.cu_door1.use_rot_y = 12.4888
bu.cu_door1.use_rot_z = 0
bu.cu_box1 = bu.cu_door1
bu.cu_door1.walkOut = function(arg1) -- line 377
    cu:come_out_door(cu.bu_door1)
end
bu.cu_door2 = Object:create(bu, "/butx024/ramp", 0.965415, -10.7594, 3.55654, { range = 0.60000002 })
bu.cu_door2.use_pnt_x = 0.965415
bu.cu_door2.use_pnt_y = -10.7594
bu.cu_door2.use_pnt_z = 3.55654
bu.cu_door2.use_rot_x = 0
bu.cu_door2.use_rot_y = -1.0762399
bu.cu_door2.use_rot_z = 0
bu.cu_box2 = bu.cu_door2
bu.cu_door2.walkOut = function(arg1) -- line 392
    cu:come_out_door(cu.bu_door2)
end
bu.bl_door = Object:create(bu, "/butx025/beach", 2.33357, -27.1721, 1.15, { range = 0.60000002 })
bu.bl_door.use_pnt_x = 1.85357
bu.bl_door.use_pnt_y = -27.1721
bu.bl_door.use_pnt_z = 0.74000001
bu.bl_door.use_rot_x = 0
bu.bl_door.use_rot_y = -138.97301
bu.bl_door.use_rot_z = 0
bu.bl_door.out_pnt_x = 1.85357
bu.bl_door.out_pnt_y = -27.1721
bu.bl_door.out_pnt_z = 0.74000001
bu.bl_door.out_rot_x = 0
bu.bl_door.out_rot_y = -138.97301
bu.bl_door.out_rot_z = 0
bu.bl_box1 = bu.bl_door
bu.bl_box2 = bu.bl_door
bu.bl_door.lookAt = function(arg1) -- line 415
    manny:say_line("/buma026/")
end
bu.bl_door.walkOut = function(arg1) -- line 419
    bl:come_out_door(bl.bu_door)
end
bu_ocean_ripple = 0
bu_ocean_hide = 1
bu_scoop_entire_scoop = 0
bu_scoop_scoop_only = 1
bu_scoop_snaps_up = 2
bu_scoop_scoop_gone = 3
bv_bone_here = 0
bv_door_open = 0
bv_door_close = 1
bv_lock_open = 0
bv_lock_closed = 1
CheckFirstTime("bv.lua")
bv = Set:create("bv.set", "beaver room", { bv_gtefg = 0, bv_gtews = 1 })
bv.get_in_BW = function(arg1) -- line 13
    stop_script(sg.glottis_roars)
    inventory_disabled = TRUE
    START_CUT_SCENE()
    MakeSectorActive("sg_box2", FALSE)
    manny:walkto_object(bv.bone_wagon)
    bonewagon:set_collision_mode(COLLISION_OFF)
    manny:set_collision_mode(COLLISION_OFF)
    manny:push_costume("ma_climb_bw.cos")
    manny:play_chore(ma_climb_bw_get_on_bw, "ma_climb_bw.cos")
    sleep_for(1000)
    manny:pop_costume("ma_climb_bw.cos")
    manny:put_in_set(nil)
    END_CUT_SCENE()
    bonewagon:default("no shocks")
    system.currentSet.bone_wagon:make_untouchable()
    manny.is_driving = TRUE
    start_script(bonewagon.monitor_turns, bonewagon)
    sg:enable_bonewagon_boxes(TRUE)
    system.buttonHandler = bone_wagon_button_handler
    bonewagon:set_selected()
    bv:drive_out()
end
bv.drive_in = function(arg1) -- line 41
    bv:switch_to_set()
    stop_script(bonewagon.gas)
    stop_script(bonewagon.reverse)
    stop_script(bonewagon.left)
    stop_script(bonewagon.right)
    stop_script(bonewagon.monitor_turns)
    bonewagon:stop_cruise_sounds(TRUE)
    bonewagon:free()
    manny.is_driving = FALSE
    bv:put_bonewagon_in_set()
    MakeSectorActive("bw_here1", TRUE)
    MakeSectorActive("bw_here2", TRUE)
    MakeSectorActive("bw_here3", TRUE)
    MakeSectorActive("bw_here4", TRUE)
    MakeSectorActive("sg_box2", TRUE)
    MakeSectorActive("bw_gone", FALSE)
    MakeSectorActive("bw_gone2", FALSE)
    manny:default("action")
    manny:put_in_set(bv)
    manny:setpos(-6.96196, -5.59888, 1.44995)
    manny:setrot(0, 316.178, 0)
    system.buttonHandler = SampleButtonHandler
    manny:set_selected()
    inventory_disabled = FALSE
    if com_solved then
        bv:talk_gate()
    end
end
bv.put_bonewagon_in_set = function(arg1) -- line 78
    NewObjectState(bv_gtefg, OBJSTATE_UNDERLAY, "bv_bone.bm", "bv_bone.zbm")
    bv.bone_wagon:set_object_state("bv_bone.cos")
    bv.bone_wagon:make_touchable()
    bv.bone_wagon:play_chore(0)
    glottis:put_in_set(bv)
    glottis:ignore_boxes()
    glottis:setpos(-8.53971, -6.6831, 1.07249)
    glottis:setrot(0, 285, 0)
    glottis:set_visibility(TRUE)
    glottis:set_collision_mode(COLLISION_OFF)
    glottis:set_costume(nil)
    glottis:set_costume("bonewagon_gl.cos")
    glottis:set_mumble_chore(bonewagon_gl_gl_mumble)
    glottis:set_talk_chore(1, bonewagon_gl_stop_talk)
    glottis:set_talk_chore(2, bonewagon_gl_a)
    glottis:set_talk_chore(3, bonewagon_gl_c)
    glottis:set_talk_chore(4, bonewagon_gl_e)
    glottis:set_talk_chore(5, bonewagon_gl_f)
    glottis:set_talk_chore(6, bonewagon_gl_l)
    glottis:set_talk_chore(7, bonewagon_gl_m)
    glottis:set_talk_chore(8, bonewagon_gl_o)
    glottis:set_talk_chore(9, bonewagon_gl_t)
    glottis:set_talk_chore(10, bonewagon_gl_u)
    glottis:play_chore(bonewagon_gl_hide_bw, "bonewagon_gl.cos")
    glottis:play_chore(bonewagon_gl_vrm2drv)
    single_start_script(sg.glottis_roars, sg, glottis)
    bv.bone_wagon.touchable = TRUE
end
bv.drive_out = function(arg1) -- line 110
    if bd.all_beavers_dead and com_solved then
    elseif com_solved and not bd.talked_gate then
        bv:talk_gate()
    elseif not bv.driven_out and bv.gate.used then
        START_CUT_SCENE()
        bv.driven_out = TRUE
        manny:say_line("/bdma007/")
        wait_for_message()
        glottis:say_line("/bdgl008/")
        wait_for_message()
        glottis:say_line("/bdgl009/")
        wait_for_message()
        glottis:say_line("/bdgl010/")
        wait_for_message()
        glottis:say_line("/bdgl011/")
        wait_for_message()
        END_CUT_SCENE()
    end
    START_CUT_SCENE()
    system.currentSet.bone_wagon:make_untouchable()
    manny.is_driving = TRUE
    start_script(bonewagon.monitor_turns, bonewagon)
    sg:enable_bonewagon_boxes(TRUE)
    manny:put_in_set(nil)
    system.buttonHandler = bone_wagon_button_handler
    bonewagon:set_selected()
    sg:switch_to_set()
    sg:current_setup(sg_sgnha)
    bonewagon:stop_movement_scripts()
    bonewagon:put_in_set(sg)
    bonewagon:setpos(10.7812, 4.2, 0)
    bonewagon:setrot(0, 137, 0)
    bonewagon:set_walk_rate(bonewagon.max_walk_rate)
    bonewagon:driveto(9.86, 3.38, 0)
    END_CUT_SCENE()
end
bv.talk_gate = function(arg1) -- line 154
    START_CUT_SCENE()
    bv.talked_gate = TRUE
    wait_for_message()
    manny:say_line("/bdma001/")
    wait_for_message()
    manny:say_line("/bdma002/")
    wait_for_message()
    glottis:say_line("/bdgl003/")
    wait_for_message()
    glottis:say_line("/bdgl004/")
    wait_for_message()
    manny:say_line("/bdma005/")
    wait_for_message()
    END_CUT_SCENE()
end
bv.set_up_actors = function(arg1) -- line 176
    local local1 = 0
    repeat
        local1 = local1 + 1
        if not table_actor[local1] then
            table_actor[local1] = Actor:create(nil, nil, nil, "table" .. local1)
        end
        table_actor[local1]:set_costume("x_spot.cos")
        table_actor[local1]:set_visibility(FALSE)
        table_actor[local1]:put_in_set(bv)
        table_actor[local1]:set_collision_mode(COLLISION_SPHERE)
        if local1 == 1 then
            table_actor[local1]:setpos({ x = -6.6742401, y = -4.7673802, z = 1.4 })
            SetActorCollisionScale(table_actor[local1].hActor, 0.40000001)
        elseif local1 == 2 then
            table_actor[local1]:setpos({ x = -6.2895498, y = -4.2446198, z = 1.4 })
            SetActorCollisionScale(table_actor[local1].hActor, 0.44999999)
        elseif local1 == 3 then
            table_actor[local1]:setpos({ x = -6.6375198, y = -4.3564701, z = 1.4 })
            SetActorCollisionScale(table_actor[local1].hActor, 0.2)
        end
    until local1 == 3
end
bv.enter = function(arg1) -- line 201
    if system.lastSet == lb then
        bv.entered_from = lb
    elseif system.lastSet == sg then
        bv.entered_from = sg
    end
    bv:set_up_actors()
    NewObjectState(bv_gtews, OBJSTATE_STATE, "bv_door.bm")
    bv.bd_door:set_object_state("bv_door.cos")
    if not bv.gate.used then
        MakeSectorActive("gate_box", FALSE)
    else
        bv.bd_door.interest_actor:complete_chore(0)
    end
    NewObjectState(bv_gtews, OBJSTATE_UNDERLAY, "bv_lock_open.bm")
    bv.padlock:set_object_state("bv_lock.cos")
    bv.padlock:make_touchable()
    bv.padlock.interest_actor:put_in_set(bv)
    if bv.padlock.unlocked then
        bv.padlock:play_chore(0)
    else
        bv.padlock:play_chore(1)
    end
    if bv.bone_wagon.touchable then
        MakeSectorActive("bw_here1", TRUE)
        MakeSectorActive("bw_here2", TRUE)
        MakeSectorActive("bw_here3", TRUE)
        MakeSectorActive("bw_here4", TRUE)
        MakeSectorActive("sg_box2", TRUE)
        MakeSectorActive("bw_gone", FALSE)
        MakeSectorActive("bw_gone2", FALSE)
        bv:put_bonewagon_in_set()
    else
        MakeSectorActive("bw_here1", FALSE)
        MakeSectorActive("bw_here2", FALSE)
        MakeSectorActive("bw_here3", FALSE)
        MakeSectorActive("bw_here4", FALSE)
        MakeSectorActive("sg_box2", FALSE)
        MakeSectorActive("bw_gone", TRUE)
        MakeSectorActive("bw_gone2", TRUE)
    end
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(manny.hActor, 1)
    bv:add_ambient_sfx({ "frstCrt1.wav", "frstCrt2.wav", "frstCrt3.wav", "frstCrt4.wav" }, { min_delay = 8000, max_delay = 20000 })
end
bv.exit = function(arg1) -- line 255
    stop_script(sg.glottis_roars)
    glottis:shut_up()
    manny:set_collision_mode(COLLISION_OFF)
    glottis:free()
    local local1 = 0
    repeat
        local1 = local1 + 1
        table_actor[local1]:free()
    until local1 == 3
end
bv.bone_wagon = Object:create(bv, "", -8.0924196, -6.1200299, 1.59793, { range = 0.89999998 })
bv.bone_wagon.use_pnt_x = -8.75
bv.bone_wagon.use_pnt_y = -5.375
bv.bone_wagon.use_pnt_z = 1.5
bv.bone_wagon.use_rot_x = 0
bv.bone_wagon.use_rot_y = 164.41499
bv.bone_wagon.use_rot_z = 0
bv.bone_wagon.touchable = FALSE
bv.bone_wagon.lookAt = function(arg1) -- line 284
    manny:say_line("/bdma034/")
end
bv.bone_wagon.pickUp = function(arg1) -- line 288
    sg.bone_wagon:pickUp()
end
bv.bone_wagon.use = function(arg1) -- line 292
    bv.get_in_BW()
end
bv.padlock = Object:create(bd, "/bdtx043/padlock", -7.80795, -3.03668, 1.636, { range = 1 })
bv.padlock.use_pnt_x = -7.4479599
bv.padlock.use_pnt_y = -3.3187799
bv.padlock.use_pnt_z = 1.4
bv.padlock.use_rot_x = 0
bv.padlock.use_rot_y = 58.1805
bv.padlock.use_rot_z = 0
bv.padlock.unlocked = FALSE
bv.padlock.lookAt = function(arg1) -- line 306
    manny:say_line("/bdma044/")
end
bv.padlock.pickUp = function(arg1) -- line 310
    soft_script()
    manny:say_line("/cwma018/")
    wait_for_message()
    manny:say_line("/cwma019/")
end
bv.padlock.use = function(arg1) -- line 319
    if lb.key.owner == manny then
        arg1:use_key()
    else
        arg1:pickUp()
    end
end
bv.padlock.use_key = function(arg1) -- line 328
    if com_solved then
        START_CUT_SCENE()
        arg1.unlocked = TRUE
        arg1:make_touchable()
        lb.key:free()
        manny:walkto(-7.45797, -3.4511, 1.4, 0, 54, 0)
        manny:wait_for_actor()
        manny:stop_chore(manny.hold_chore, "ma.cos")
        manny.is_holding = nil
        manny:set_chore_looping(ms_hold, FALSE, "ma.cos")
        FadeOutChore(manny.hActor, "ma.cos", ms_hold, 500)
        sleep_for(500)
        manny:play_chore(ms_reach_med, "ma.cos")
        sleep_for(500)
        start_sfx("lbOpnLok.wav")
        wait_for_sound("lbOpnLok.wav")
        manny:wait_for_chore()
        manny:say_line("/bdma047/")
        wait_for_message()
        manny:say_line("/bdma048/")
        wait_for_message()
        END_CUT_SCENE()
        if mod_solved then
            IrisDown(320, 240, 1000)
            sleep_for(1000)
            bd:leave_forest()
        end
    elseif bd.beavers.met then
        manny:say_line("/bdma049/")
    else
        manny:say_line("/bdma050/")
    end
end
bv.padlock_obj = Object:create(bv, "", -8.2456703, -2.4595499, 1.6799999, { range = 0 })
bv.padlock_obj.use_pnt_x = -6.8536701
bv.padlock_obj.use_pnt_y = -3.7895501
bv.padlock_obj.use_pnt_z = 1.4
bv.padlock_obj.use_rot_x = 0
bv.padlock_obj.use_rot_y = 49.8106
bv.padlock_obj.use_rot_z = 0
bv.gate = Object:create(bd, "/bdtx053/gate", -6.4033198, -3.2437, 1.9, { range = 0.60000002 })
bv.gate.use_pnt_x = -6.4050102
bv.gate.use_pnt_y = -3.325
bv.gate.use_pnt_z = 1.4
bv.gate.use_rot_x = 0
bv.gate.use_rot_y = 374.823
bv.gate.use_rot_z = 0
bv.gate.out_pnt_x = -6.4050102
bv.gate.out_pnt_y = -3.325
bv.gate.out_pnt_z = 1.4
bv.gate.out_rot_x = 0
bv.gate.out_rot_y = 374.823
bv.gate.out_rot_z = 0
bv.gate.used = FALSE
bv.gate.lookAt = function(arg1) -- line 392
    manny:say_line("/bdma054/")
end
bv.gate.use = function(arg1) -- line 396
    MakeSectorActive("gate_box", TRUE)
    START_CUT_SCENE()
    if not opened_bv_gate then
        opened_bv_gate = TRUE
        local local1 = 0
        repeat
            local1 = local1 + 1
            table_actor[local1]:free()
        until local1 == 3
        bv.gate.used = TRUE
        stop_script(sg.glottis_roars)
        glottis:shut_up()
        glottis:free()
        glottis:default()
        glottis:put_in_set(bv)
        MakeSectorActive("bw_here1", FALSE)
        MakeSectorActive("bw_here2", FALSE)
        MakeSectorActive("bw_here3", FALSE)
        MakeSectorActive("bw_here4", FALSE)
        MakeSectorActive("sg_box2", FALSE)
        MakeSectorActive("bw_gone", TRUE)
        MakeSectorActive("bw_gone2", TRUE)
        glottis:push_costume("gl_fastwalk.cos")
        glottis:follow_boxes()
        glottis:set_walk_chore(0, "gl_fastwalk.cos")
        glottis:setpos(-7.6774802, -5.0910201, 1.4398201)
        glottis:walkto(-7.15869, -4.8460102, 1.4)
        manny:walkto(-6.4112301, -3.3310001, 1.4)
        manny:wait_for_actor()
        manny:setrot(0, 10.55, 0, TRUE)
        manny:wait_for_actor()
        glottis:wait_for_actor()
        glottis:head_look_at(manny)
        manny:start_open_door_anim()
        sleep_for(1000)
        bv.bd_door:play_chore(0)
        manny:finish_open_door_anim()
        set_override(skip_stupid_glottis_in_bv)
        glottis:say_line("/bdgl055/")
        sleep_for(1000)
        if not bv.bone_wagon.touchable then
            manny:set_turn_rate(150)
            manny:setrot(0, 179, 0, TRUE)
            manny:head_look_at(glottis)
            wait_for_message()
            manny:set_turn_rate(85)
            manny:say_line("/bdma056/")
            wait_for_message()
        else
            manny:setrot(0, 179, 0, TRUE)
            manny:head_look_at(glottis)
            wait_for_message()
        end
        glottis:say_line("/bdgl057/")
        wait_for_message()
        manny:say_line("/bdma058/")
        wait_for_message()
        glottis:say_line("/bdgl059/")
        wait_for_message()
        manny:say_line("/bdma060/")
        wait_for_message()
        glottis:say_line("/bdgl061/")
        wait_for_message()
        glottis:say_line("/bdgl062/")
        manny:head_look_at(nil)
        manny:walkto(-6.5250001, -2.8499999, 1.4)
        wait_for_message()
        if not bv.bone_wagon.touchable and mod_solved then
            sg.bone_wagon:make_untouchable()
            na.bone_wagon:make_untouchable()
            lb.bone_wagon:make_untouchable()
            bv.bone_wagon:make_touchable()
        end
        kill_override()
    end
    END_CUT_SCENE()
    bd:come_out_door(bd.bv_door)
    glottis:free()
end
skip_stupid_glottis_in_bv = function() -- line 489
    kill_override()
    if not bv.bone_wagon.touchable and mod_solved then
        sg.bone_wagon:make_untouchable()
        na.bone_wagon:make_untouchable()
        lb.bone_wagon:make_untouchable()
        bv.bone_wagon:make_touchable()
    end
    bd:come_out_door(bd.bv_door)
    glottis:free()
end
bv.bd_door = Object:create(bv, "", -6.3963399, -3.23757, 1.8324, { range = 0 })
bv.bd_door.use_pnt_x = -6.4050102
bv.bd_door.use_pnt_y = -3.325
bv.bd_door.use_pnt_z = 1.4
bv.bd_door.use_rot_x = 0
bv.bd_door.use_rot_y = 374.823
bv.bd_door.use_rot_z = 0
bv.bd_door.out_pnt_x = -6.4050102
bv.bd_door.out_pnt_y = -3.325
bv.bd_door.out_pnt_z = 1.4
bv.bd_door.out_rot_x = 0
bv.bd_door.out_rot_y = 374.823
bv.bd_door.out_rot_z = 0
bv.bd_box = bv.bd_door
bv.bd_door.walkOut = function(arg1) -- line 522
    bd:come_out_door(bd.bv_door)
    if manny.is_backward then
        START_CUT_SCENE()
        manny:walk_forward()
        break_here()
        manny:walk_forward()
        END_CUT_SCENE()
    end
end
bv.bd_door.comeOut = function(arg1) -- line 533
    manny:set_run(FALSE)
    stop_movement_scripts()
    manny:setpos(-6.45925, -3.33356, 1.4)
    manny:setrot(0, -163.666, 0)
    break_here()
    stop_movement_scripts()
    if cutSceneLevel > 0 then
        PrintDebug("force end cut scene")
        END_CUT_SCENE()
    end
end
bv.sg_door = Object:create(bv, "/bvtx063/door", -10.3279, -5.9112301, 1.48455, { range = 0 })
bv.sg_door.use_pnt_x = -8.6774502
bv.sg_door.use_pnt_y = -5.9317298
bv.sg_door.use_pnt_z = 1.48455
bv.sg_door.use_rot_x = 0
bv.sg_door.use_rot_y = 118.189
bv.sg_door.use_rot_z = 0
bv.sg_door.out_pnt_x = -9.3049803
bv.sg_door.out_pnt_y = -6.1276202
bv.sg_door.out_pnt_z = 1.49998
bv.sg_door.out_rot_x = 0
bv.sg_door.out_rot_y = 129.14
bv.sg_door.out_rot_z = 0
bv.sg_box = bv.sg_door
bv.sg_box2 = bv.sg_door
bv.sg_door.walkOut = function(arg1) -- line 564
    if bv.entered_from == lb then
        lb:come_out_door(lb.bd_door)
    else
        sg:come_out_door(sg.mod_door)
    end
end
bw_elevator_rise = 0
bw_elevator_lower = 1
bw_elevator_set_closed = 2
bw_elevator_set_open = 3
bw_elevator_dark = 4
bw_elevator_open = 5
bw_elevator_close = 6
CheckFirstTime("bw.lua")
dofile("bw_elevator.lua")
bw = Set:create("bw.set", "blue casket wide", { bw_bldws = 0, bw_ovrhd = 1 })
bw.enter = function(arg1) -- line 20
    if not in_year_four then
        bw:add_object_state(bw_bldws, "bw_elev_bottom.bm", "bw_elev_bottom.zbm", OBJSTATE_STATE)
        bw:add_object_state(bw_bldws, "bw_elev_top.bm", nil, OBJSTATE_UNDERLAY)
    else
        bw:add_object_state(bw_bldws, "bw_elev_dark.bm", nil, OBJSTATE_UNDERLAY)
    end
    bw.ev_door:set_object_state("bw_elevator.cos")
    if in_year_four then
        bw.ev_door:complete_chore(bw_elevator_dark)
    elseif bw.ev_door.here then
        if bw.ev_door.opened then
            bw.ev_door:complete_chore(bw_elevator_set_open)
        else
            bw.ev_door:complete_chore(bw_elevator_set_closed)
        end
    end
end
bw.ev_door = Object:create(bw, "/bwtx001/door", -2.5936401, -1.98356, 0.81400001, { range = 0.89999998 })
bw.ev_door.use_pnt_x = -2.4782801
bw.ev_door.use_pnt_y = -2.4909699
bw.ev_door.use_pnt_z = 0.23
bw.ev_door.use_rot_x = 0
bw.ev_door.use_rot_y = 354.67801
bw.ev_door.use_rot_z = 0
bw.ev_door.out_pnt_x = -2.46
bw.ev_door.out_pnt_y = -1.66
bw.ev_door.out_pnt_z = 0.23
bw.ev_door.out_rot_x = 0
bw.ev_door.out_rot_y = 354.67801
bw.ev_door.out_rot_z = 0
bw.ev_box = bw.ev_door
bw.ev_door.passage = { "bw_ev_psg" }
bw.ev_door.here = TRUE
bw.ev_door.lookAt = function(arg1) -- line 73
    if in_year_four then
        START_CUT_SCENE()
        manny:say_line("/bwma005/")
        if not arg1.seen then
            arg1.seen = TRUE
            manny:wait_for_message()
            manny:say_line("/bwma006/")
            manny:wait_for_message()
            manny:say_line("/bwma007/")
        end
        END_CUT_SCENE()
    else
        manny:say_line("/bwma008/")
    end
end
bw.ev_door.walkOut = function(arg1) -- line 90
    if not in_year_four then
        START_CUT_SCENE()
        stop_script(bw.ev_trigger.trigger)
        set_override(bw.ev_door.skip_walkout)
        manny:clear_hands()
        if not arg1:is_open() then
            arg1:open()
        end
        manny:walkto(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
        manny:wait_for_actor()
        start_script(arg1.close, arg1)
        manny:setrot(arg1.out_rot_x, arg1.out_rot_y + 180, arg1.out_rot_z, TRUE)
        wait_for_script(arg1.close)
        start_sfx("bwElRise.wav")
        arg1:play_chore(bw_elevator_rise)
        arg1:wait_for_chore()
        RunFullscreenMovie("eleup.snm")
        END_CUT_SCENE()
        ev:come_out_door(ev.be_door)
    end
end
bw.ev_door.skip_walkout = function(arg1) -- line 121
    kill_override()
    ev:come_out_door(ev.be_door)
end
bw.ev_door.comeOut = function(arg1) -- line 126
    START_CUT_SCENE()
    arg1.here = FALSE
    bw:switch_to_set()
    set_override(bw.ev_door.skip_comeOut, bw.ev_door)
    manny:set_visibility(FALSE)
    RunFullscreenMovie("eledown.snm")
    start_sfx("bwElLowr.wav")
    arg1:play_chore(bw_elevator_lower)
    arg1:wait_for_chore()
    arg1.here = TRUE
    manny:put_in_set(bw)
    manny:setpos(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
    manny:setrot(arg1.out_rot_x, arg1.out_rot_y + 180, arg1.out_rot_z)
    manny:set_visibility(TRUE)
    arg1:open()
    manny:walkto(arg1.use_pnt_x, arg1.use_pnt_y, arg1.use_pnt_z)
    manny:wait_for_actor()
    arg1:close()
    END_CUT_SCENE()
end
bw.ev_door.skip_comeOut = function(arg1) -- line 150
    kill_override()
    bw.ev_door.here = TRUE
    manny:put_in_set(bw)
    manny:set_visibility(TRUE)
    manny:setpos(bw.ev_door.use_pnt_x, bw.ev_door.use_pnt_y, bw.ev_door.use_pnt_z)
    manny:setrot(bw.ev_door.use_rot_x, bw.ev_door.use_rot_y, bw.ev_door.use_rot_z)
    bw.ev_door:stop_chore()
    bw.ev_door:play_chore(bw_elevator_set_closed)
    Object.close(bw.ev_door)
end
bw.ev_door.use = function(arg1) -- line 162
    if in_year_four then
        arg1:locked_out()
    else
        START_CUT_SCENE()
        if not arg1:is_open() then
            arg1:open()
        end
        arg1:walkOut()
        END_CUT_SCENE()
    end
end
bw.ev_door.open = function(arg1) -- line 175
    if in_year_four then
        return FALSE
    else
        if not arg1.opened then
            start_sfx("bwElOpen.wav")
            arg1:play_chore(bw_elevator_open)
            arg1:wait_for_chore()
            Object.open(arg1)
        end
        return TRUE
    end
end
bw.ev_door.close = function(arg1) -- line 189
    if arg1.opened then
        start_sfx("bwElClos.wav")
        arg1:play_chore(bw_elevator_close)
        arg1:wait_for_chore()
        Object.close(arg1)
    end
end
bw.ev_trigger = { name = "ev door trigger" }
bw.ev_trigger.walkOut = function(arg1) -- line 203
    if not in_year_four then
        single_start_script(arg1.trigger, arg1)
    end
end
bw.ev_trigger.trigger = function(arg1) -- line 209
    if not bw.ev_door:is_open() then
        bw.ev_door:open()
    end
    while manny:find_sector_name("ev_trigger") do
        break_here()
    end
    if not manny:find_sector_name("bw_ev_psg") then
        bw.ev_door:close()
    end
end
bw.be_door = Object:create(bw, "/bwtx002/door", 0.13732, 0.100709, 0.5, { range = 0.60000002 })
bw.be_door.use_pnt_x = -0.0859721
bw.be_door.use_pnt_y = -1.25122
bw.be_door.use_pnt_z = 0.23
bw.be_door.use_rot_x = 0
bw.be_door.use_rot_y = -725.01599
bw.be_door.use_rot_z = 0
bw.be_door.out_pnt_x = -0.052507199
bw.be_door.out_pnt_y = -0.868276
bw.be_door.out_pnt_z = 0.23
bw.be_door.out_rot_x = 0
bw.be_door.out_rot_y = -725.01599
bw.be_door.out_rot_z = 0
bw.be_door:make_untouchable()
bw.be_box = bw.be_door
bw.be_door.walkOut = function(arg1) -- line 242
    be:come_out_door(be.bw_door)
end
bw.dd_door = Object:create(bw, "/bwtx003/bridge", -3.7627599, -2.7811601, 0.73000002, { range = 0.60000002 })
bw.dd_door.use_pnt_x = -3.17243
bw.dd_door.use_pnt_y = -2.81321
bw.dd_door.use_pnt_z = 0.23
bw.dd_door.use_rot_x = 0
bw.dd_door.use_rot_y = -637.245
bw.dd_door.use_rot_z = 0
bw.dd_door.out_pnt_x = -3.46731
bw.dd_door.out_pnt_y = -2.80336
bw.dd_door.out_pnt_z = 0.23
bw.dd_door.out_rot_x = 0
bw.dd_door.out_rot_y = -619.20203
bw.dd_door.out_rot_z = 0
bw.dd_box = bw.dd_door
bw.dd_box:make_untouchable()
bw.dd_door.walkOut = function(arg1) -- line 267
    dd:come_out_door(dd.bw_door)
end
bw.hb_door = Object:create(bw, "/bwtx004/bridge", 2.7160699, -5.2459698, 1.13, { range = 0.60000002 })
bw.hb_door.use_pnt_x = 2.7160699
bw.hb_door.use_pnt_y = -4.1759701
bw.hb_door.use_pnt_z = 0.69999999
bw.hb_door.use_rot_x = 0
bw.hb_door.use_rot_y = -528.96198
bw.hb_door.use_rot_z = 0
bw.hb_door.out_pnt_x = 2.78141
bw.hb_door.out_pnt_y = -4.2933302
bw.hb_door.out_pnt_z = 0.69999999
bw.hb_door.out_rot_x = 0
bw.hb_door.out_rot_y = 184.008
bw.hb_door.out_rot_z = 0
bw.hb_door.lookAt = function(arg1) -- line 288
end
bw.hb_door.walkOut = function(arg1) -- line 291
    hb:come_out_door(hb.bw_door)
end
ca_detonate_detonate = 0
ca_detonate_hide_bucket = 1
cafe_inv_empty_hand_in = 0
cafe_inv_empty_hand_out = 1
cafe_inv_turkey_baster_in = 2
cafe_inv_turkey_baster_out = 3
cafe_inv_detector_in = 4
cafe_inv_detector_out = 5
cafe_inv_union_card_in = 6
cafe_inv_union_card_out = 7
cafe_inv_lengua_in = 8
cafe_inv_lengua_out = 9
cafe_inv_blackmail_in = 10
cafe_inv_blackmail_out = 11
cafe_inv_pass_in = 12
cafe_inv_pass_out = 13
cafe_inv_cigcase_in = 14
cafe_inv_cigcase_out = 15
cafe_inv_book_in = 16
cafe_inv_book_out = 17
cafe_inv_key_in = 18
cafe_inv_key_out = 19
cafe_inv_letters_in = 20
cafe_inv_letters_out = 21
cafe_inv_dog_tags_in = 22
cafe_inv_dog_tags_out = 23
cafe_inv_ticket_in = 24
cafe_inv_ticket_out = 25
cafe_inv_photofinish_in = 26
cafe_inv_photofinish_out = 27
cafe_inv_liqueur_in = 28
cafe_inv_liqueur_out = 29
cafe_inv_printer_in = 30
cafe_inv_printer_out = 31
cafe_inv_opener_in = 32
cafe_inv_opener_out = 33
cafe_inv_full_baster_in = 34
cafe_inv_full_baster_out = 35
cafe_inv_paper_in = 36
cafe_inv_paper_out = 37
cafe_inv_jacket_in = 38
cafe_inv_jacket_out = 39
cafe_inv_scythe_in = 40
cafe_inv_scythe_out = 41
caneman_base_pose = 0
caneman_pnt2table = 1
caneman_look_table = 2
caneman_tap_table = 3
caneman_Chore4 = 4
canister_Chore0 = 0
carla_cry_casual_hold = 0
carla_cry_casual_tap_loop = 1
carla_cry_tap_loop_out = 2
carla_cry_to_emote_hold = 3
carla_cry_emote_hold = 4
carla_cry_angry = 5
carla_cry_tension_hold = 6
carla_cry_tension_release = 7
carla_cry_release_hold = 8
carla_cry_rhold_to_ehold = 9
carla_cry_to_bitter_loop = 10
carla_cry_bitter_loop = 11
carla_cry_stomp = 12
carla_cry_stomp_hold = 13
carla_cry_stomp_to_ehold = 14
carla_cry_to_wistful_tap = 15
carla_cry_wistful_tap_loop = 16
carla_cry_wist_to_ehold = 17
carla_cry_to_cry = 18
carla_cry_cry_hold = 19
carla_cry_sob_to = 20
carla_cry_sob_loop = 21
carla_cry_sob_to_sniffle = 22
carla_cry_sniffle_loop = 23
carla_cry_sniffle_to_ehold = 24
carla_cry_ehold_to_chold = 25
carla_cry_mumble = 26
carla_cry_stop_talk = 27
carla_cry_c = 28
carla_cry_m = 29
carla_cry_f = 30
carla_cry_e = 31
carla_cry_u = 32
carla_cry_l = 33
carla_cry_a = 34
carla_cry_o = 35
carla_cry_hold_md_out = 36
carla_cry_shake_md_loop = 37
carla_cry_throw_md = 38
carla_cry_t = 39
dofile("carla_cry.lua")
carla_says_turn = 0
carla_srch_mc = 1
carla_srch_shrg = 2
carla_sit = 3
carla_stand = 4
carla_walk = 5
carla_sit_hold = 6
carla_tilt_head = 7
carla_prop_to_sit = 8
carla_to_prop_head = 9
carla_prop_hold = 10
carla_hold_up = 11
carla_head_up = 12
carla_show_detector = 13
carla_hide_detector = 14
carla_detector_only = 15
carla_stand_hold = 16
carla.go_to_prop = function(arg1) -- line 36
    if find_script(carla.go_to_sit) then
        wait_for_script(carla.go_to_sit)
    end
    if carla.idle_state == "sit" then
        carla:head_look_at(nil)
        break_here()
        carla:stop_chore(carla_sit_hold, sl.search_cos)
        carla:play_chore(carla_to_prop_head, sl.search_cos)
        carla:wait_for_chore(carla_to_prop_head, sl.search_cos)
        carla:play_chore_looping(carla_prop_hold, sl.search_cos)
        carla.idle_state = "prop"
    end
end
carla.prop_tilt_head = function(arg1) -- line 52
    if find_script(carla.prop_end_tilt_head) then
        wait_for_script(carla.prop_end_tilt_head)
    end
    if find_script(carla.go_to_prop) then
        wait_for_script(carla.go_to_prop)
    end
    if carla.idle_state == "sit" then
        carla:go_to_prop()
    end
    if carla.idle_state == "prop" then
        carla:stop_chore(carla_prop_hold, sl.search_cos)
        carla:play_chore(carla_head_up, sl.search_cos)
        carla:wait_for_chore(carla_head_up, sl.search_cos)
        carla:play_chore_looping(carla_hold_up, sl.search_cos)
        carla.idle_state = "proptilt"
    end
end
carla.prop_end_tilt_head = function(arg1) -- line 72
    if find_script(carla.prop_tilt_head) then
        wait_for_script(carla.prop_tilt_head)
    end
    if carla.idle_state == "proptilt" then
        carla:stop_chore(carla_hold_up, sl.search_cos)
        carla:play_chore(carla_tilt_head, sl.search_cos)
        carla:wait_for_chore(carla_tilt_head, sl.search_cos)
        carla:play_chore_looping(carla_prop_hold, sl.search_cos)
        carla.idle_state = "prop"
    end
end
carla.go_to_sit = function(arg1) -- line 86
    if find_script(carla.prop_end_tilt_head) then
        wait_for_script(carla.prop_end_tilt_head)
    end
    if find_script(carla.go_to_prop) then
        wait_for_script(carla.go_to_prop)
    end
    if carla.idle_state == "proptilt" then
        carla:prop_end_tilt_head()
    end
    if carla.idle_state == "prop" then
        carla:stop_chore(carla_prop_hold, sl.search_cos)
        if not sl.carla_scorned then
            sl.detector.actor:show()
            carla:complete_chore(carla_hide_detector, sl.search_cos)
        else
            sl.detector.actor:hide()
            carla:play_chore(carla_hide_detector, sl.search_cos)
        end
        carla:play_chore(carla_prop_to_sit, sl.search_cos)
        carla:wait_for_chore(carla_prop_to_sit, sl.search_cos)
        carla:play_chore_looping(carla_sit_hold, sl.search_cos)
        carla.idle_state = "sit"
    end
    if carla.idle_state == "stand" then
        carla:stop_chore()
        carla:ignore_boxes()
        MakeSectorActive("carlawalk1", FALSE)
        carla:set_softimage_pos(9.1847, 0.1254, 7.5366)
        carla:setrot(0, 31.513, 0)
        carla:play_chore(carla_sit, sl.search_cos)
        carla:wait_for_chore(carla_sit, sl.search_cos)
        carla:play_chore_looping(carla_sit_hold, sl.search_cos)
        carla.idle_state = "sit"
    end
end
carla.stand_up = function(arg1) -- line 125
    if carla.idle_state ~= "sit" then
        carla:go_to_sit()
    end
    carla:stop_chore(carla_sit_hold, sl.search_cos)
    if not sl.carla_scorned then
        carla:complete_chore(carla_show_detector, sl.search_cos)
        sl.detector.actor:hide()
    else
        carla:play_chore(carla_hide_detector, sl.search_cos)
    end
    carla:set_softimage_pos(8.1365, 0.1254, 7.0952)
    carla:setrot(0, 174.137, 0)
    carla:play_chore(carla_stand, sl.search_cos)
    carla:wait_for_chore(carla_stand, sl.search_cos)
    carla:stop_chore(carla_stand, sl.search_cos)
    carla:play_chore(carla_stand_hold, sl.search_cos)
    carla.idle_state = "stand"
end
carla.set_up_mood_swings = function(arg1) -- line 151
    carla.mood = "casual"
    carla:play_chore_looping(carla_cry_casual_tap_loop, sl.cry_cos)
end
carla.mood_swing = function(arg1, arg2) -- line 156
    if find_script(carla.do_mood_swing) then
        wait_for_script(carla.do_mood_swing)
    end
    start_script(carla.do_mood_swing, carla, arg2)
end
carla.do_mood_swing = function(arg1, arg2) -- line 163
    local local1
    local1 = "to_" .. arg2
    carla[local1](carla)
end
carla.to_casual = function(arg1) -- line 170
    if carla.mood ~= "casual" then
        carla:to_emote()
        carla:stop_looping_chores()
        carla:play_chore(carla_cry_ehold_to_chold, sl.cry_cos)
        carla:wait_for_chore(carla_cry_ehold_to_chold, sl.cry_cos)
        carla:play_chore_looping(carla_cry_casual_tap_loop, sl.cry_cos)
        carla.mood = "casual"
    end
end
carla.to_emote = function(arg1) -- line 181
    if carla.mood ~= "emote" then
        if carla.mood == "angry" then
            carla:stop_looping_chores()
            carla:play_chore(carla_cry_tension_release, sl.cry_cos)
            carla:wait_for_chore(carla_cry_tension_release, sl.cry_cos)
            carla.mood = "tense"
        end
        if carla.mood == "tense" then
            carla:stop_looping_chores()
            carla:play_chore(carla_cry_rhold_to_ehold, sl.cry_cos)
            carla:wait_for_chore(carla_cry_rhold_to_ehold, sl.cry_cos)
            carla.mood = "emote"
        end
        if carla.mood == "wistful" then
            carla:stop_looping_chores()
            carla:play_chore(carla_cry_wist_to_ehold, sl.cry_cos)
            carla:wait_for_chore(carla_cry_wist_to_ehold, sl.cry_cos)
            carla.mood = "emote"
        end
        if carla.mood == "sob" then
            carla:stop_looping_chores()
            carla:play_chore(carla_cry_sob_to_sniffle, sl.cry_cos)
            carla:wait_for_chore(carla_cry_sob_to_sniffle, sl.cry_cos)
            carla.mood = "sniffle"
        end
        if carla.mood == "sniffle" then
            carla:stop_looping_chores()
            carla:play_chore(carla_cry_sniffle_to_ehold, sl.cry_cos)
            carla:wait_for_chore(carla_cry_sniffle_to_ehold, sl.cry_cos)
            carla.mood = "emote"
        end
        if carla.mood == "stomp" then
            carla:stop_looping_chores()
            carla:play_chore(carla_cry_stomp_to_ehold, sl.cry_cos)
            carla:wait_for_chore(carla_cry_stomp_to_ehold, sl.cry_cos)
            carla.mood = "emote"
        end
        if carla.mood == "casual" then
            carla:stop_looping_chores()
            carla:play_chore(carla_cry_to_emote_hold, sl.cry_cos)
            carla:wait_for_chore(carla_cry_to_emote_hold, sl.cry_cos)
        end
        carla:play_chore_looping(carla_cry_emote_hold, sl.cry_cos)
        carla.mood = "emote"
    end
end
carla.to_angry = function(arg1) -- line 231
    if carla.mood ~= "angry" then
        carla:to_emote()
        carla:stop_looping_chores()
        carla:play_chore(carla_cry_angry, sl.cry_cos)
        carla:wait_for_chore(carla_cry_angry, sl.cry_cos)
        carla:play_chore_looping(carla_cry_tension_hold, sl.cry_cos)
        carla.mood = "angry"
    end
end
carla.to_tense = function(arg1) -- line 242
    if carla.mood ~= "tense" then
        carla:to_angry()
        carla:stop_looping_chores()
        carla:play_chore(carla_cry_tension_release, sl.cry_cos)
        carla:wait_for_chore(carla_cry_tension_release, sl.cry_cos)
        carla:play_chore_looping(carla_cry_release_hold, sl.cry_cos)
        carla.mood = "tense"
    end
end
carla.to_bitter = function(arg1) -- line 253
    if carla.mood ~= "bitter" then
        carla:to_emote()
        carla:stop_looping_chores()
        carla:play_chore(carla_cry_to_bitter_loop, sl.cry_cos)
        carla:wait_for_chore(carla_cry_to_bitter_loop, sl.cry_cos)
        carla:play_chore_looping(carla_cry_bitter_loop, sl.cry_cos)
        carla.mood = "bitter"
    end
end
carla.to_stomp = function(arg1) -- line 264
    if carla.mood ~= "stomp" then
        carla:to_bitter()
        carla:stop_looping_chores()
        carla:play_chore(carla_cry_stomp, sl.cry_cos)
        carla:wait_for_chore(carla_cry_stomp, sl.cry_cos)
        carla:play_chore_looping(carla_cry_stomp_hold, sl.cry_cos)
        carla.mood = "stomp"
    end
end
carla.to_wistful = function(arg1) -- line 275
    if carla.mood ~= "wistful" then
        carla:to_emote()
        carla:stop_looping_chores()
        carla:play_chore(carla_cry_to_wistful_tap, sl.cry_cos)
        carla:wait_for_chore(carla_cry_to_wistful_tap, sl.cry_cos)
        carla:play_chore_looping(carla_cry_wistful_tap_loop, sl.cry_cos)
        carla.mood = "wistful"
    end
end
carla.to_cry = function(arg1) -- line 286
    if carla.mood ~= "cry" then
        carla:to_emote()
        carla:stop_looping_chores()
        carla:play_chore(carla_cry_to_cry, sl.cry_cos)
        carla:wait_for_chore(carla_cry_to_cry, sl.cry_cos)
        carla:play_chore_looping(carla_cry_cry_hold, sl.cry_cos)
        carla.mood = "cry"
    end
end
carla.to_sob = function(arg1) -- line 297
    if carla.mood ~= "sob" then
        carla:to_cry()
        carla:stop_looping_chores()
        carla:play_chore(carla_cry_sob_to, sl.cry_cos)
        carla:wait_for_chore(carla_cry_sob_to, sl.cry_cos)
        carla:play_chore_looping(carla_cry_sob_loop, sl.cry_cos)
        carla.mood = "sob"
    end
end
carla.to_sniffle = function(arg1) -- line 308
    if carla.mood ~= "sniffle" then
        carla:to_sob()
        carla:stop_looping_chores()
        carla:play_chore(carla_cry_sob_to_sniffle, sl.cry_cos)
        carla:wait_for_chore(carla_cry_sob_to_sniffle, sl.cry_cos)
        carla:play_chore_looping(carla_cry_sniffle_loop, sl.cry_cos)
        carla.mood = "sniffle"
    end
end
carla.to_detector = function(arg1) -- line 319
    if carla.mood ~= "detector" then
        carla:to_casual()
        carla:stop_looping_chores()
        carla:play_chore(carla_cry_hold_md_out, sl.cry_cos)
        carla:wait_for_chore(carla_cry_hold_md_out, sl.cry_cos)
        carla:play_chore_looping(carla_cry_shake_md_loop, sl.cry_cos)
        carla.mood = "detector"
    end
end
carla.stop_looping_chores = function(arg1) -- line 330
    carla:stop_looping_chore(carla_cry_emote_hold, sl.cry_cos)
    carla:stop_looping_chore(carla_cry_release_hold, sl.cry_cos)
    carla:stop_looping_chore(carla_cry_bitter_loop, sl.cry_cos)
    carla:stop_looping_chore(carla_cry_stomp_hold, sl.cry_cos)
    carla:stop_looping_chore(carla_cry_casual_tap_loop, sl.cry_cos)
    carla:stop_looping_chore(carla_cry_wistful_tap_loop, sl.cry_cos)
    carla:stop_looping_chore(carla_cry_tension_hold, sl.cry_cos)
    carla:stop_looping_chore(carla_cry_cry_hold, sl.cry_cos)
    carla:stop_looping_chore(carla_cry_sob_loop, sl.cry_cos)
    carla:stop_looping_chore(carla_cry_sniffle_loop, sl.cry_cos)
end
carla_srch_chrm_says_turn = 0
carla_srch_chrm_srch_mc = 1
carla_srch_chrm_srch_shrg = 2
carla_srch_chrm_sit = 3
carla_srch_chrm_stand = 4
carla_srch_chrm_walk = 5
carla_srch_chrm_sit_hold = 6
carla_srch_chrm_tilt_head = 7
carla_srch_chrm_prop_to_sit = 8
carla_srch_chrm_to_prop_head = 9
carla_srch_chrm_prop_hold = 10
carla_srch_chrm_hold_up = 11
carla_srch_chrm_head_up = 12
carla_srch_chrm_show_detector = 13
carla_srch_chrm_hide_detector = 14
carla_srch_chrm_detector_only = 15
carla_srch_chrm_stand_hold = 16
cask_start_pour = 0
cask_pour_loop = 1
cask_end_pour = 2
cask_floor_spill_start = 3
cask_spill_loop = 4
cask_spill_done = 5
cask_show = 6
cask_hide = 7
cat_balloon_cat_here = 0
cb_blimp_here = 0
cb_blimp_gone = 1
cb_boat_here = 0
cb_boat_gone = 1
CheckFirstTime("cb.lua")
cb = Set:create("cb.set", "cafe balcony", { cb_intha = 0 })
dofile("cb_blimp.lua")
dofile("cb_boat.lua")
cb.look_away_point = { x = 0.311325, y = 4.10521, z = 1.911 }
cb.meche_path = function() -- line 17
    meche:walkto(4.08787, -1.92565, -0.659681)
    meche:wait_for_actor()
    meche:walkto(6.17326, 2.69197, -1.9)
    meche:wait_for_actor()
end
cb.alex_derek_and_steves_idea = function() -- line 30
    START_CUT_SCENE()
    manny:head_look_at(nil)
    manny:setpos(-0.154667, -0.453814, 1.77)
    manny:setrot(0, 251.954, 0)
    meche:put_in_set(cb)
    meche:set_costume("meche_ruba.cos")
    meche:set_walk_chore(meche_ruba_walk, "meche_ruba.cos")
    meche:setpos(-0.606845, -0.863569, -0.340007)
    meche:setrot(0, 271.087, 0)
    meche:follow_boxes()
    meche:set_time_scale(1.5)
    meche:set_walk_rate(0.5)
    break_here()
    start_script(manny.walk_and_face, manny, -0.381325, 0.825213, 1.77, 0, 356.986, 0)
    sleep_for(1000)
    manny:say_line("/clma002/")
    break_here()
    start_script(cb.meche_path)
    break_here()
    wait_for_script(manny.walk_and_face)
    END_CUT_SCENE()
end
cb.meche = cb.alex_derek_and_steves_idea
cb.enter = function(arg1) -- line 78
    single_start_script(foghorn_sfx)
    cb:add_ambient_sfx(harbor_ambience_list, harbor_ambience_parm_list)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -10, 10, 20)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    cb.blimp.hObjectState = cb:add_object_state(cb_intha, "cb_blimp.bm", nil, OBJSTATE_UNDERLAY, FALSE)
    cb.blimp:set_object_state("cb_blimp.cos")
    cb.boat.hObjectState = cb:add_object_state(cb_intha, "cb_boat.bm", nil, OBJSTATE_OVERLAY, TRUE)
    cb.boat:set_object_state("cb_boat.cos")
    play_movie_looping("cb_water.snm", 0, 52)
    if meche.shanghaid then
        cb.blimp:play_chore(cb_blimp_here)
        cb.boat:play_chore(cb_boat_gone)
    else
        cb.blimp:play_chore(cb_blimp_gone)
        cb.boat:play_chore(cb_boat_here)
    end
end
cb.exit = function(arg1) -- line 100
    StopMovie()
    KillActorShadows(manny.hActor)
    stop_script(foghorn_sfx)
    meche:free()
    stop_script(cb.alex_derek_and_steves_idea)
    stop_script(cb.meche_path)
end
cb.boat = Object:create(cb, "", 0, 0, 0, { range = 0 })
cb.blimp = Object:create(cb, "", 0, 0, 0, { range = 0 })
cb.cf_door = Object:create(cb, "/cbtx044/door", -0.59602702, -0.89752799, 2.27, { range = 0.60000002 })
cb.cf_door.use_pnt_x = -0.59602702
cb.cf_door.use_pnt_y = -0.99252802
cb.cf_door.use_pnt_z = 1.77
cb.cf_door.use_rot_x = 0
cb.cf_door.use_rot_y = -1041.4301
cb.cf_door.use_rot_z = 0
cb.cf_door.out_pnt_x = -0.81307399
cb.cf_door.out_pnt_y = -0.56632
cb.cf_door.out_pnt_z = 1.77
cb.cf_door.out_rot_x = 0
cb.cf_door.out_rot_y = 21.619101
cb.cf_door.out_rot_z = 0
cb.cf_door.touchable = FALSE
cb.co_box = cb.cf_door
cb.cf_door.walkOut = function(arg1) -- line 143
    cf:come_out_door(cf.cb_door)
end
cb.backside_door = Object:create(cb, "/cbtx045/door", -1.11347, 1.14579, 2.168, { range = 0.60000002 })
cb.backside_door.use_pnt_x = -0.70747101
cb.backside_door.use_pnt_y = 1.14579
cb.backside_door.use_pnt_z = 1.77
cb.backside_door.use_rot_x = 0
cb.backside_door.use_rot_y = 69.372398
cb.backside_door.use_rot_z = 0
cb.backside_door.out_pnt_x = -1.07701
cb.backside_door.out_pnt_y = 1.28476
cb.backside_door.out_pnt_z = 1.77
cb.backside_door.out_rot_x = 0
cb.backside_door.out_rot_y = 69.372398
cb.backside_door.out_rot_z = 0
cb.backside_door.touchable = FALSE
cb.backside_door.walkOut = function(arg1) -- line 167
    START_CUT_SCENE()
    manny:play_chore_looping(mc_walk)
    sleep_for(2000)
    END_CUT_SCENE()
    cb:come_out_door(cb.frontside_door)
end
cb.frontside_door = Object:create(cb, "/cbtx046/door", -1.21359, -1.50973, 2.1689999, { range = 0.60000002 })
cb.frontside_door.use_pnt_x = -0.95459503
cb.frontside_door.use_pnt_y = -1.32573
cb.frontside_door.use_pnt_z = 1.77
cb.frontside_door.use_rot_x = 0
cb.frontside_door.use_rot_y = -244.119
cb.frontside_door.use_rot_z = 0
cb.frontside_door.out_pnt_x = -1.30296
cb.frontside_door.out_pnt_y = -1.44486
cb.frontside_door.out_pnt_z = 1.77
cb.frontside_door.out_rot_x = 0
cb.frontside_door.out_rot_y = -254.759
cb.frontside_door.out_rot_z = 0
cb.frontside_door.touchable = FALSE
cb.frontside_door.walkOut = function(arg1) -- line 194
    START_CUT_SCENE()
    manny:play_chore_looping(mc_walk)
    sleep_for(2000)
    END_CUT_SCENE()
    cb:come_out_door(cb.backside_door)
end
cc_booth_idles_smoke = 0
cc_booth_idles_sit_pose = 1
cc_booth_idles_gesture1 = 2
cc_booth_idles_gesture2 = 3
cc_booth_idles_line181 = 4
cc_booth_idles_line182 = 5
cc_booth_idles_line188 = 6
cc_booth_idles_explain_hold = 7
cc_booth_idles_explain_loop = 8
cc_booth_idles_stroke = 9
cc_booth_idles_stare = 10
cc_booth_idles_bad_grab = 11
cc_booth_idles_sad = 12
cc_booth_idles_sad_hold = 13
cc_booth_idles_line221 = 14
cc_booth_idles_line221_hold = 15
cc_booth_idles_line222_hold = 16
cc_booth_idles_line223 = 17
cc_booth_idles_line222 = 18
cc_booth_idles_line225 = 19
cc_booth_idles_line225_hold = 20
cc_booth_idles_return_to_idle = 21
cc_booth_idles_line200 = 22
cc_booth_idles_line201 = 23
cc_booth_idles_line201_hold = 24
cc_booth_idles_smoke_shake = 25
cc_booth_idles_smoke_shake_loop = 26
cc_booth_idles_convince_hold = 27
cc_booth_idles_convince_loop = 28
cc_booth_idles_line244 = 29
cc_booth_idles_line244_loop = 30
cc_booth_idles_burst = 31
cc_booth_idles_burst_hold = 32
cc_booth_idles_after_grab = 33
cc_booth_idles_nod = 34
cc_booth_idles_nod_loop = 35
cc_booth_idles_shake_head_loop = 36
cc_booth_idles_shake_head = 37
cc_booth_idles_line223_hold = 38
cc_booth_idles_takeout_printer = 39
cc_booth_idles_hide_printer = 40
cc_GETCARD_alright = 0
cc_GETCARD_case = 1
cc_GETCARD_muscle = 2
cc_GETCARD_goons = 3
cc_GETCARD_give_card = 4
ccharlie_mumble = 0
ccharlie_c = 1
ccharlie_m = 2
ccharlie_f = 3
ccharlie_e = 4
ccharlie_u = 5
ccharlie_l = 6
ccharlie_a = 7
ccharlie_o = 8
ccharlie_no_talk = 9
ccharlie_t = 10
CheckFirstTime("cc.lua")
cc = Set:create("cc.set", "coat check", { cc_intws = 0, cc_ovrhd = 1 })
cc.shrinkable = 0.014
dofile("lupe_idles.lua")
dofile("lupe_coat.lua")
dofile("ma_check_coat.lua")
lupe.idle_table = Idle:create("lupe_idles")
lupe.idle_table:add_state("behind_desk", { behind_desk = 0.99, jumps_greeting = 0.01 })
lupe.idle_table:add_state("main_pose", { forward_to_talk = 0.2, jump_back = 0.8 })
lupe.idle_table:add_state("head_return_pose", { head_right = 0.1, main_pose = 0.9 })
lupe.idle_table:add_state("head_right", { head_return_pose = 1 })
lupe.idle_table:add_state("forward_to_talk", { head_right = 0.8, main_pose = 0.2 })
lupe.idle_table:add_state("jumps_greeting", { jump_back = 1 })
lupe.idle_table:add_state("jump_back", { behind_desk = 1 })
lupe.stop_table = { }
lupe.stop_table[lupe_idles_behind_desk] = lupe_idles_jumps_greeting
lupe.stop_table[lupe_idles_main_pose] = lupe_idles_forward_to_talk
lupe.stop_table[lupe_idles_head_return_pose] = lupe_idles_main_pose
lupe.stop_table[lupe_idles_head_right] = lupe_idles_head_return_pose
lupe.stop_table[lupe_idles_jumps_greeting] = lupe_idles_forward_to_talk
lupe.stop_table[lupe_idles_jump_back] = lupe_idles_jumps_greeting
cc.lupe_music = FALSE
cc.get_paper = function(arg1) -- line 39
    cur_puzzle_state[30] = TRUE
    START_CUT_SCENE()
    manny:walkto_object(cc.lupe_obj)
    cc.jacket:get()
    lupe:kill_idle(lupe_idles_forward_to_talk)
    lx.lengua:put_in_limbo()
    lupe:say_line("/cclu001/")
    wait_for_message()
    lupe:say_line("/cclu002/")
    lupe:push_chore(lupe_idles_clapping)
    lupe:push_chore()
    cc.lupe_music = TRUE
    music_state:update()
    wait_for_message()
    manny:say_line("/ccma003/")
    wait_for_message()
    lupe:say_line("/cclu004/")
    lupe:push_chore(lupe_idles_forward_shake_hands)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_forward_to_talk)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_main_pose)
    lupe:push_chore()
    wait_for_message()
    lupe:say_line("/cclu005/")
    wait_for_message()
    lupe:say_line("/cclu006/")
    wait_for_message()
    lupe:wait_for_chore()
    lupe:fade_out_chore(lupe_idles_main_pose, "lupe_idles.cos", 500)
    sleep_for(500)
    lupe:play_chore(lupe_coat_get_lengua, "lupe_coat.cos")
    manny:stop_chore(mc_activate_lengua, manny.base_costume)
    manny:stop_chore(ms_hold, manny.base_costume)
    manny:play_chore(ma_hand_on_obj, manny.base_costume)
    lupe:say_line("/cclu007/")
    manny:wait_for_chore()
    manny:stop_chore(ma_hand_on_obj, manny.base_costume)
    manny:play_chore(ma_hand_off_obj, manny.base_costume)
    lupe:wait_for_chore()
    lupe:stop_chore(lupe_coat_get_lengua, "lupe_coat.cos")
    lupe:fade_in_chore(lupe_idles_main_pose, "lupe_idles.cos", 500)
    sleep_for(500)
    lupe:print_costumes()
    lupe:wait_for_chore()
    lupe:play_chore(lupe_idles_jump_back, "lupe_idles.cos", 500)
    lupe:wait_for_chore()
    lupe:play_chore_looping(lupe_idles_behind_desk, "lupe_idles.cos")
    start_sfx("cabSrch.IMU", IM_HIGH_PRIORITY, 100)
    lupe:say_line("/cclu008/")
    wait_for_message()
    lupe:say_line("/cclu009/")
    wait_for_message()
    lupe:say_line("/cclu010/")
    sleep_for(1000)
    lupe:set_chore_looping(lupe_idles_behind_desk, FALSE)
    fade_sfx("cabSrch.IMU", 250, 0)
    wait_for_message()
    lupe:say_line("/cclu011/")
    lupe:wait_for_message()
    cc.lupe_music = FALSE
    music_state:update()
    lupe:say_line("/cclu012/")
    wait_for_message()
    manny:say_line("/ccma013/")
    wait_for_message()
    lupe:say_line("/cclu014/")
    wait_for_message()
    manny:say_line("/ccma015/")
    wait_for_message()
    lupe:say_line("/cclu016/")
    lupe:play_chore(lupe_coat_hold_coat, "lupe_coat.cos")
    lupe:play_chore(lupe_idles_jumps_greeting, "lupe_idles.cos")
    lupe:wait_for_chore()
    manny:say_line("/ccma017/")
    lupe:fade_out_chore(lupe_idles_main_pose, "lupe_idles.cos", 500)
    sleep_for(500)
    wait_for_message()
    lupe:stop_chore(lupe_coat_hold_coat, "lupe_coat.cos")
    lupe:play_chore(lupe_coat_give_coat, "lupe_coat.cos")
    manny:push_costume("ma_check_coat.cos")
    manny:play_chore(ma_check_coat_coat_putaway)
    lupe:say_line("/cclu018/")
    sleep_for(1000)
    manny:blend(mc_hold_coat, ma_check_coat_coat_putaway, 500, "mc.cos", "ma_check_coat.cos")
    sleep_for(500)
    manny:pop_costume()
    manny:play_chore_looping(mc_hold_coat, "mc.cos")
    manny:play_chore_looping(mc_hold, "mc.cos")
    manny.hold_chore = mc_hold_coat
    manny.is_holding = cc.jacket
    wait_for_message()
    lupe:wait_for_chore()
    lupe:print_costumes()
    lupe:stop_chore(lupe_coat_give_coat, "lupe_coat.cos")
    lupe:fade_in_chore(lupe_idles_main_pose, "lupe_idles.cos", 500)
    sleep_for(500)
    lupe:play_chore(lupe_idles_jump_back)
    manny:say_line("/ccma019/")
    manny:wait_for_message()
    lupe:say_line("/cclu020/")
    lupe:wait_for_message()
    lupe:wait_for_chore()
    start_script(lupe.new_run_idle, lupe, "behind_desk")
    manny:say_line("/ccma021/")
    wait_for_message()
    lupe:head_look_at(manny)
    lupe:say_line("/cclu022/")
    wait_for_message()
    manny:say_line("/ccma023/")
    manny:wait_for_message()
    lupe:head_look_at(nil)
    END_CUT_SCENE()
end
cc.talk_note = function(arg1) -- line 168
    START_CUT_SCENE()
    lupe:kill_idle(lupe_idles_jumps_greeting)
    manny:walkto_object(cc.lupe_obj)
    cc.talked_note = TRUE
    lupe:head_look_at_manny()
    lupe:say_line("/cclu024/")
    wait_for_message()
    manny:say_line("/ccma025/")
    wait_for_message()
    lupe:say_line("/cclu026/")
    lupe:play_chore(lupe_idles_jump_back)
    wait_for_message()
    cc.lupe_music = TRUE
    music_state:update()
    lupe:wait_for_chore()
    lupe:head_look_at(nil)
    start_sfx("cabSrch.IMU", IM_HIGH_PRIORITY, 100)
    lupe:play_chore_looping(lupe_idles_behind_desk)
    lupe:say_line("/cclu027/")
    wait_for_message()
    lupe:say_line("/cclu028/")
    wait_for_message()
    lupe:say_line("/cclu029/")
    wait_for_message()
    lupe:say_line("/cclu030/")
    wait_for_message()
    lupe:say_line("/cclu031/")
    wait_for_message()
    lupe:say_line("/cclu032/")
    wait_for_message()
    lupe:say_line("/cclu033/")
    wait_for_message()
    lupe:say_line("/cclu034/")
    wait_for_message()
    lupe:say_line("/cclu035/")
    wait_for_message()
    lupe:say_line("/cclu036/")
    wait_for_message()
    lupe:say_line("/cclu037/")
    lupe:set_chore_looping(lupe_idles_behind_desk, FALSE)
    wait_for_message()
    lupe:say_line("/cclu038/")
    wait_for_message()
    lupe:wait_for_chore()
    fade_sfx("cabSrch.IMU", 500, 0)
    lupe:play_chore(lupe_idles_jumps_greeting)
    lupe:say_line("/cclu039/")
    lupe:head_look_at_manny()
    wait_for_message()
    cc.lupe_music = FALSE
    music_state:update()
    lupe:wait_for_chore()
    lupe:head_look_at(nil)
    lupe:say_line("/cclu040/")
    lupe:head_look_at_point({ x = -2.3075, y = 0.489651, z = 0.284 })
    manny:head_look_at_point({ x = -2.3075, y = 0.489651, z = 0.284 })
    wait_for_message()
    lupe:wait_for_chore()
    lupe:say_line("/cclu041/")
    wait_for_message()
    manny:say_line("/ccma042/")
    wait_for_message()
    lupe:say_line("/cclu043/")
    lupe:head_look_at_manny()
    lupe:play_chore(lupe_idles_jump_back, "lupe_idles.cos")
    wait_for_message()
    start_script(lupe.new_run_idle, lupe, "behind_desk")
    lupe:head_look_at(nil)
    lupe:say_line("/cclu044/")
    wait_for_message()
    lupe:say_line("/cclu045/")
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
cc.grab_manny = function(arg1) -- line 245
    cc.lupe_waiting = FALSE
    START_CUT_SCENE()
    local local1 = start_script(lupe.kill_idle, lupe, lupe_idles_forward_to_talk)
    lupe:say_line("/cclu132/")
    manny:turn_toward_entity(lupe)
    sleep_for(500)
    manny:walkto(cc.lupe_obj)
    manny:head_look_at(cc.lupe_obj)
    wait_for_message()
    END_CUT_SCENE()
    if not cc.met_lupe then
        Dialog:run("lu1", "dlg_lupe.lua", "grabbed")
    elseif bi.seen_kiss and not cc.talked_note then
        cc:talk_note()
    end
end
cc.set_up_actors = function() -- line 277
    lupe:default()
    lupe:put_in_set(cc)
    lupe:setpos(-2.5755, 0.4747, 0)
    lupe:setrot(0, 272.91, 0)
    lupe:set_costume("lupe_coat.cos")
    lupe:set_mumble_chore(lupe_coat_mumble)
    lupe:set_talk_chore(1, lupe_coat_stop_talk)
    lupe:set_talk_chore(2, lupe_coat_a)
    lupe:set_talk_chore(3, lupe_coat_c)
    lupe:set_talk_chore(4, lupe_coat_e)
    lupe:set_talk_chore(5, lupe_coat_f)
    lupe:set_talk_chore(6, lupe_coat_l)
    lupe:set_talk_chore(7, lupe_coat_m)
    lupe:set_talk_chore(8, lupe_coat_o)
    lupe:set_talk_chore(9, lupe_coat_t)
    lupe:set_talk_chore(10, lupe_coat_u)
    lupe:set_head(4, 5, 6, 165, 28, 80)
    lupe:set_walk_rate(0.4)
    lupe:set_turn_rate(25)
    lupe.up = FALSE
    lupe:push_costume("lupe_idles.cos")
    start_script(lupe.new_run_idle, lupe, "behind_desk")
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -0.7344, 3.9176, 2.405)
    SetActorShadowPlane(manny.hActor, "s_shadow")
    AddShadowPlane(manny.hActor, "s_shadow")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, -0.7344, 3.9176, 2.405)
    SetActorShadowPlane(manny.hActor, "shadow_wall")
    AddShadowPlane(manny.hActor, "shadow_wall")
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, 2.3344, -3.9176, 6.405)
    SetActorShadowPlane(manny.hActor, "shadow10")
    AddShadowPlane(manny.hActor, "shadow10")
    SetActiveShadow(manny.hActor, 3)
    SetActorShadowPoint(manny.hActor, 2.3344, -3.9176, 6.405)
    SetActorShadowPlane(manny.hActor, "shadow11")
    AddShadowPlane(manny.hActor, "shadow11")
end
al1s = function() -- line 326
    remove_all_items()
    mo.scythe:get()
    mo.cards:get()
    mo.memo:get()
    mo.one_card:get()
    dom.coral:get()
    dom.mouthpiece:get()
    fe.balloon_cat:get()
    fe.balloon_dingo:get()
    fe.balloon_frost:get()
    fe.breads.bread1:get()
    tu.extinguisher:get()
    fe.balloons.balloon1:get()
    pk.balloons.balloon1:get()
    rf.eggs:get()
    ga.work_order:get()
end
al1a = function() -- line 345
    remove_all_items()
    mo.scythe:get()
    sg.heart:get()
    sp.bones.bone1:get()
    tu.extinguisher:get()
    ri.photo:get()
    re.logbook:get()
end
al2 = function() -- line 356
    remove_all_items()
    mo.scythe:get()
    cf.letters:get()
    hk.turkey_baster:get()
    si.dog_tags:get()
    ci.liqueur:get()
    sl.detector:get()
    hl.case:get()
    bi.book:get()
    ks.opener:get()
    cc.anchor_paper:get()
    cc.jacket:get()
    lx.lengua:get()
    si.photofinish:get()
    sl.key:get()
    tb.blackmail_photo:get()
    cn.ticket:get()
    cn.printer:get()
    cn.pass:get()
    dh.suitcase:get()
    hh.union_card:get()
end
al3 = function() -- line 380
    remove_all_items()
    mo.scythe:get()
    fo.hammer:get()
    mn.gun:get()
    ar.stockings:get()
    mn.chisel:get()
end
al4s = function() -- line 390
    remove_all_items()
    mo.scythe:get()
    tg.note:get()
    mk.rag:get()
    my.oily_rag:get()
    td.mug:get()
    tg.note:get()
    si.nitrogen:get()
    lm.bottle:get()
    nq.photo:get()
    nq.arm:get()
    th.coffee_pot:get()
    th.grinder:get()
    sh.remote:get()
    fi.gun:get()
    fi.sproutella:get()
end
al4d = function() -- line 409
    remove_all_items()
    mo.scythe:get()
    si.nitrogen:get()
    th.grinder:get()
    me.ticket:get()
    me.key:get()
    me.gun:get()
end
al4c = function() -- line 419
    remove_all_items()
    mo.scythe:get()
    nq.photo:get()
    nq.arm:get()
    th.coffee_pot:get()
    th.grinder:get()
    sh.remote:get()
    fi.gun:get()
    fi.sproutella:get()
    si.nitrogen:get()
end
cc.update_music_state = function(arg1) -- line 437
    if cc.lupe_music then
        return stateCC_LUPE
    elseif hl.glottis_gambling then
        return stateCF
    else
        return stateCC
    end
end
cc.enter = function(arg1) -- line 451
    cc.set_up_actors()
    if not cc.met_lupe or (bi.seen_kiss and not cc.talked_note) then
        cc.lupe_waiting = TRUE
    end
end
cc.exit = function(arg1) -- line 460
    KillActorShadows(manny.hActor)
    lupe:free()
end
cc.lupe_obj = Object:create(cc, "/cctx049/Lupe", -2.37763, 0.53503799, 0.40000001, { range = 0.80000001 })
cc.lupe_obj.use_pnt_x = -1.9974999
cc.lupe_obj.use_pnt_y = 0.287651
cc.lupe_obj.use_pnt_z = 0
cc.lupe_obj.use_rot_x = 0
cc.lupe_obj.use_rot_y = 66.624802
cc.lupe_obj.use_rot_z = 0
cc.lupe_obj.lookAt = function(arg1) -- line 480
    manny:say_line("/ccma050/")
end
cc.lupe_obj.pickUp = function(arg1) -- line 484
    manny:say_line("/ccma051/")
end
cc.lupe_obj.use = function(arg1) -- line 488
    cc.lupe_waiting = FALSE
    Dialog:run("lu1", "dlg_lupe.lua", nil)
end
cc.lupe_obj.use_key = function(arg1) -- line 493
    lupe:kill_idle(lupe_idles_forward_to_talk)
    if cc.talked_note then
        lupe:say_line("/cclu052/")
    else
        START_CUT_SCENE()
        lupe:say_line("/cclu053/")
        wait_for_message()
        lupe:say_line("/cclu054/")
        END_CUT_SCENE()
    end
    start_script(lupe.new_run_idle, lupe, "main_pose")
end
cc.lupe_obj.use_lengua = function(arg1) -- line 507
    cc:get_paper()
end
cc.lupe_obj.use_paper = function(arg1) -- line 511
    START_CUT_SCENE()
    lupe:kill_idle(lupe_idles_forward_to_talk)
    lupe:say_line("/cclu055/")
    wait_for_message()
    lupe:say_line("/cclu056/")
    END_CUT_SCENE()
    start_script(lupe.new_run_idle, lupe, "main_pose")
end
cc.lupe_obj.use_jacket = function(arg1) -- line 522
    if cc.jacket.searched then
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        lupe:kill_idle(lupe_idles_forward_to_talk)
        manny:say_line("/ccma057/")
        wait_for_message()
        lupe:say_line("/cclu058/")
        lupe:wait_for_chore()
        lupe:fade_out_chore(lupe_idles_main_pose, "lupe_idles.cos", 500)
        sleep_for(500)
        lupe:wait_for_message()
        lupe:play_chore(lupe_coat_get_coat, "lupe_coat.cos")
        manny:push_costume("ma_check_coat.cos")
        manny:stop_chore(mc_hold_coat, manny.base_costume)
        manny.is_holding = nil
        manny.hold_chore = nil
        manny:play_chore(ma_check_coat_give_coat)
        sleep_for(750)
        lupe:say_line("/cclu059/")
        lupe:wait_for_chore()
        lupe:wait_for_message()
        lupe:stop_chore(lupe_coat_get_coat, "lupe_coat.cos")
        lupe:fade_in_chore(lupe_idles_main_pose, "lupe_idles.cos", 500)
        sleep_for(500)
        lupe:play_chore(lupe_idles_jump_back, "lupe_idles.cos")
        manny:say_line("/ccma060/")
        manny:wait_for_chore()
        manny:pop_costume()
        wait_for_message()
        lupe:say_line("/cclu061/")
        wait_for_message()
        manny:say_line("/ccma062/")
        wait_for_message()
        lupe:say_line("/cclu063/")
        lupe:wait_for_message()
        lupe:say_line("/cclu064/")
        wait_for_message()
        manny:say_line("/ccma065/")
        END_CUT_SCENE()
        cc.jacket:put_in_limbo()
        start_script(lupe.new_run_idle, lupe, "behind_desk")
    else
        manny:say_line("/ccma066/")
    end
end
cc.jacket = Object:create(cc, "/cctx067/jacket", 0, 0, 0, { range = 0 })
cc.jacket.folded = FALSE
cc.jacket.wav = "getrag.wav"
cc.jacket.lookAt = function(arg1) -- line 578
    manny:say_line("/ccma068/")
    wait_for_message()
    if not arg1.searched then
        START_CUT_SCENE()
        manny:say_line("/ccma069/")
        wait_for_message()
        manny:say_line("/ccma070/")
        END_CUT_SCENE()
        arg1:use()
    end
end
cc.jacket.default_response = function(arg1) -- line 591
    manny:say_line("/ccma071/")
end
cc.jacket.use = function(arg1) -- line 595
    local local1 = { x = 0, y = -0.043000001, z = 0 }
    local local2 = { }
    local local3 = { }
    local local4 = { }
    if not arg1.searched then
        arg1.searched = TRUE
        START_CUT_SCENE()
        if system.currentSet == cafe_inv then
            close_inventory()
        end
        cc.anchor_paper:get()
        manny:stop_chore(mc_hold, "mc.cos")
        manny:stop_chore(manny.hold_chore, "mc.cos")
        manny:push_costume("ma_check_coat.cos")
        manny:play_chore(ma_check_coat_2nd_search)
        sleep_for(5500)
        manny:wait_for_message()
        manny:say_line("/ccma072/")
        manny:wait_for_chore()
        manny:pop_costume()
        manny:play_chore_looping(manny.hold_chore, "mc.cos")
        shrinkBoxesEnabled = FALSE
        open_inventory(TRUE, TRUE)
        manny.is_holding = cc.anchor_paper
        close_inventory()
        if GlobalShrinkEnabled then
            shrinkBoxesEnabled = TRUE
            shrink_box_toggle()
        end
        END_CUT_SCENE()
        cc.anchor_paper:lookAt()
    else
        manny:say_line("/ccma073/")
    end
end
cc.anchor_paper = Object:create(cc, "/cctx074/slip of paper", 0, 0, 0, { range = 0 })
cc.anchor_paper.string_name = "paper"
cc.anchor_paper.wav = "getWrkOr.wav"
cc.anchor_paper.lookAt = function(arg1) -- line 637
    manny:say_line("/ccma075/")
    wait_for_message()
    manny:say_line("/ccma076/")
end
cc.anchor_paper.use = function(arg1) -- line 643
    manny:say_line("/ccma077/")
end
cc.anchor_paper.use = cc.anchor_paper.lookAt
cc.anchor_paper.default_response = function(arg1) -- line 649
    system.default_response("shed light")
end
cc.distraction1 = Object:create(cc, "/cctx078/distraction", -1.90763, 0.405038, 0.60000002, { range = 0 })
cc.distraction2 = Object:create(cc, "/cctx079/distraction", -2.3076301, 0.105038, 0.60000002, { range = 0 })
cc.ce_door = Object:create(cc, "/cctx080/door", -1.55898, -0.098755002, 0.40000001, { range = 0 })
cc.ce_door.use_pnt_x = -1.4007
cc.ce_door.use_pnt_y = 0.065954097
cc.ce_door.use_pnt_z = 0
cc.ce_door.use_rot_x = 0
cc.ce_door.use_rot_y = 169.70599
cc.ce_door.use_rot_z = 0
cc.ce_door.out_pnt_x = -1.44437
cc.ce_door.out_pnt_y = -0.174512
cc.ce_door.out_pnt_z = 0
cc.ce_door.out_rot_x = 0
cc.ce_door.out_rot_y = 169.70599
cc.ce_door.out_rot_z = 0
cc.ce_box = cc.ce_door
cc.ce_door.walkOut = function(arg1) -- line 680
    if cc.lupe_waiting then
        cc.grab_manny()
    else
        ce:come_out_door(ce.cc_door)
    end
end
cc.ci_door = Object:create(cc, "/cctx081/door", -0.15898301, 0.50124502, 0.40000001, { range = 0 })
cc.ci_door.use_pnt_x = -0.502253
cc.ci_door.use_pnt_y = 0.61703002
cc.ci_door.use_pnt_z = 0
cc.ci_door.use_rot_x = 0
cc.ci_door.use_rot_y = -95.008003
cc.ci_door.use_rot_z = 0
cc.ci_door.out_pnt_x = -0.175
cc.ci_door.out_pnt_y = 0.588359
cc.ci_door.out_pnt_z = 0
cc.ci_door.out_rot_x = 0
cc.ci_door.out_rot_y = -95.008003
cc.ci_door.out_rot_z = 0
cc.ci_box = cc.ci_door
cc.ci_door.walkOut = function(arg1) -- line 706
    ci:come_out_door(ci.cc_door)
end
cc.cf_door = Object:create(cc, "/cctx148/door", -1.925, 1.19311, 0.69999999, { range = 0 })
cc.cf_door.use_pnt_x = -1.80618
cc.cf_door.use_pnt_y = 1.1937701
cc.cf_door.use_pnt_z = 0.69024402
cc.cf_door.use_rot_x = 0
cc.cf_door.use_rot_y = 90.603996
cc.cf_door.use_rot_z = 0
cc.cf_door.out_pnt_x = -1.925
cc.cf_door.out_pnt_y = 1.1924
cc.cf_door.out_pnt_z = 0.69999999
cc.cf_door.out_rot_x = 0
cc.cf_door.out_rot_y = 90.603996
cc.cf_door.out_rot_z = 0
cc.cf_box = cc.cf_door
cc.cf_door.lookAt = function(arg1) -- line 728
    manny:say_line("/ccma083/")
end
cc.cf_door.walkOut = function(arg1) -- line 732
    cf:come_out_door(cf.cc_door)
end
cc_msb_sheet_throw_sheet = 0
cc_msb_sheet_pass_sheet = 1
cc_play_slot_play_slots = 0
cc_play_slot_pull_lever = 1
cc_play_slot_hide_handle = 2
cc_seduction_sed_by_mec = 0
cc_seduction_sed_to_rest = 1
cc_seduction_rest_pos = 2
cc_seduction_take_money = 3
cc_taplook_turn2mn = 0
cc_taplook_talk2mn = 1
cc_taplook_turn2slots = 2
cc_throw_sheet_walk_off = 0
cc_throw_sheet_throw_sheet = 1
cc_toga_walk = 0
cc_toga_take_meche = 1
cc_toga_hold_meche = 2
cc_toga_mumble = 3
cc_toga_stop_talk = 4
cc_toga_c = 5
cc_toga_m = 6
cc_toga_f = 7
cc_toga_e = 8
cc_toga_u = 9
cc_toga_l = 10
cc_toga_a = 11
cc_toga_o = 12
cc_toga_t = 13
celso_mop_mop_loop = 0
celso_mop_to_talk = 1
celso_mop_talk_freeze = 2
celso_mop_to_mop = 3
celso_mop_mumble = 4
celso_mop_leave_mop = 5
celso_mop_no_talk = 6
celso_mop_c = 7
celso_mop_m = 8
celso_mop_f = 9
celso_mop_e = 10
celso_mop_u = 11
celso_mop_l = 12
celso_mop_a = 13
celso_mop_o = 14
celso_mop_take_logbook = 15
celso_mop_hand_photo_1 = 16
celso_mop_hand_photo_2 = 17
celso_mop_t = 18
CheckFirstTime("ce.lua")
ce = Set:create("ce.set", "cafe ext", { ce_estla = 0, ce_estla1 = 0, ce_lotws = 1, ce_front = 2, ce_ovrhd = 3 })
ce.enter = function(arg1) -- line 18
    start_script(foghorn_sfx)
    ce:add_ambient_sfx(harbor_ambience_list, harbor_ambience_parm_list)
    if meche.shanghaid then
        MakeSectorActive("raven_trigger", FALSE)
    end
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(manny.hActor, 0.34999999)
    local local1 = 0
    repeat
        local1 = local1 + 1
        if not table_actor[local1] then
            table_actor[local1] = Actor:create(nil, nil, nil, "table" .. local1)
        end
        table_actor[local1]:set_costume("x_spot.cos")
        table_actor[local1]:set_visibility(FALSE)
        table_actor[local1]:put_in_set(ce)
        table_actor[local1]:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(table_actor[local1].hActor, 0.1)
        if local1 == 1 then
            table_actor[local1]:setpos(2.3396201, -1.32845, -0.296)
        elseif local1 == 2 then
            table_actor[local1]:setpos(0.88068402, -1.32845, -0.296)
        end
    until local1 == 2
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 7.9204898, -3.27824, -0.2)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 1.2893, 2.8678, 10.28996)
    SetActorShadowPlane(manny.hActor, "shadow10")
    AddShadowPlane(manny.hActor, "shadow10")
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, 1.2893, 2.8678, 10.28996)
    SetActorShadowPlane(manny.hActor, "shadow11")
    AddShadowPlane(manny.hActor, "shadow11")
    SetActiveShadow(manny.hActor, 3)
    SetActorShadowPoint(manny.hActor, -4.5999999, -2.8, -1.28996)
    SetActorShadowPlane(manny.hActor, "shadow20")
    AddShadowPlane(manny.hActor, "shadow20")
    SetActiveShadow(manny.hActor, 4)
    SetActorShadowPoint(manny.hActor, 0, 0, 11.28996)
    SetActorShadowPlane(manny.hActor, "shadow30")
    AddShadowPlane(manny.hActor, "shadow30")
end
ce.exit = function(arg1) -- line 76
    local local1 = 0
    stop_script(foghorn_sfx)
    repeat
        local1 = local1 + 1
        table_actor[local1]:free()
    until local1 == 2
    manny:set_collision_mode(COLLISION_OFF)
    KillActorShadows(manny.hActor)
end
ce.raven_trigger = { }
ce.raven_trigger.walkOut = function(arg1) -- line 95
    if not meche.shanghaid then
        meche.shanghaid = TRUE
        box_off("raven_trigger")
        start_script(cut_scene.shanghai, cut_scene)
    end
end
ce.cc_door = Object:create(ce, "/cetx001/door", -1.42501, 0.0311844, 0.40000001, { range = 0.60000002 })
ce.cc_door.use_pnt_x = -1.51636
ce.cc_door.use_pnt_y = -0.46752101
ce.cc_door.use_pnt_z = -0.16
ce.cc_door.use_rot_x = 0
ce.cc_door.use_rot_y = -13.4927
ce.cc_door.use_rot_z = 0
ce.cc_door.out_pnt_x = -1.41036
ce.cc_door.out_pnt_y = -0.025
ce.cc_door.out_pnt_z = -0.16
ce.cc_door.out_rot_x = 0
ce.cc_door.out_rot_y = -13.4927
ce.cc_door.out_rot_z = 0
ce.cc_box = ce.cc_door
ce.cc_door.walkOut = function(arg1) -- line 124
    cc:come_out_door(cc.ce_door)
end
ce.ev_door = Object:create(ce, "/cetx002/door", -4.6819, -2.3219299, -3.0999999, { range = 0.60000002 })
ce.ev_door.use_pnt_x = -4.6613698
ce.ev_door.use_pnt_y = -2.60021
ce.ev_door.use_pnt_z = -3.3989999
ce.ev_door.use_rot_x = 0
ce.ev_door.use_rot_y = -699.302
ce.ev_door.use_rot_z = 0
ce.ev_door.out_pnt_x = -4.7340102
ce.ev_door.out_pnt_y = -2.40798
ce.ev_door.out_pnt_z = -3.3989999
ce.ev_door.out_rot_x = 0
ce.ev_door.out_rot_y = -699.302
ce.ev_door.out_rot_z = 0
ce.ev_box = ce.ev_door
ce.ev_door.walkOut = function(arg1) -- line 146
    ev:come_out_door(ev.ce_door)
end
ce.cl_door = Object:create(ce, "/cetx003/door", 7.4604902, -0.88297802, -1.61, { range = 0.60000002 })
ce.cl_door.use_pnt_x = 7.6303701
ce.cl_door.use_pnt_y = -1.8358099
ce.cl_door.use_pnt_z = -2
ce.cl_door.use_rot_x = 0
ce.cl_door.use_rot_y = 723.94202
ce.cl_door.use_rot_z = 0
ce.cl_door.out_pnt_x = 7.5304699
ce.cl_door.out_pnt_y = -1.52678
ce.cl_door.out_pnt_z = -2
ce.cl_door.out_rot_x = 0
ce.cl_door.out_rot_y = 734.23602
ce.cl_door.out_rot_z = 0
ce.cl_box = ce.cl_door
ce.cl_door.walkOut = function(arg1) -- line 167
    cl:come_out_door(cl.ce_door)
end
cf_flip_panel_Chore0 = 0
cf_flip_panel_Chore1 = 1
CheckFirstTime("cf.lua")
dofile("cf_panel.lua")
cf = Set:create("cf.set", "cafe office", { cf_dorws = 0, cf_ofcha = 1, cf_ofcha1 = 1, cf_ovrhd = 2, cf_pnlcu = 3 })
cf.shrinkable = 0.012
cf.intercom_on = nil
cf.piss_off_bogen = function(arg1) -- line 18
    bogen.pissed = TRUE
    START_CUT_SCENE()
    bogen:say_line("/cfbo001/")
    wait_for_message()
    bogen:say_line("/cfbo002/")
    wait_for_message()
    croupier:say_line("/cfcr003/")
    wait_for_message()
    croupier:say_line("/cfcr004/")
    wait_for_message()
    bogen:say_line("/cfbo059/")
    wait_for_message()
    bogen:say_line("/cfbo007/")
    wait_for_message()
    croupier:say_line("/cfcr008/")
    wait_for_message()
    croupier:say_line("/cfcr009/")
    croupier:wait_for_message()
    bogen_table:demagnetize()
    pissing_off_bogen = FALSE
    END_CUT_SCENE()
end
cf.panel_closeup = function(arg1) -- line 44
    START_CUT_SCENE()
    manny:walkto_object(cf.panel)
    manny:wait_for_actor()
    manny:play_chore(mc_hand_on_obj, manny.base_costume)
    sleep_for(250)
    cf.panel:play_chore(1)
    cf.panel:wait_for_chore()
    cf:current_setup(cf_pnlcu)
    inventory_disabled = TRUE
    if not mannys_hands then
        mannys_hands = Actor:create(nil, nil, nil, "/sytx188/")
    end
    mannys_hands:set_costume("tp_interface.cos")
    mannys_hands:put_in_set(cf)
    mannys_hands:moveto(0.214657, -0.907566, -0.156501)
    mannys_hands:setrot(0, 0, 0)
    if not cf.panel.seen then
        cf.panel.seen = TRUE
        manny:say_line("/cfma010/")
        wait_for_message()
    end
    inventory_save_handler = system.buttonHandler
    system.buttonHandler = roulettePanelButtonHandler
    manny.idles_allowed = FALSE
    start_script(cf.panel_display)
    END_CUT_SCENE()
    ImSetVoiceEffect("Intercom Filter")
    cf.intercom_on = TRUE
    music_state:update(system.currentSet)
end
roulettePanelButtonHandler = function(arg1, arg2, arg3) -- line 80
    shiftKeyDown = GetControlState(LSHIFTKEY) or GetControlState(RSHIFTKEY)
    altKeyDown = GetControlState(LALTKEY) or GetControlState(RALTKEY)
    controlKeyDown = GetControlState(LCONTROLKEY) or GetControlState(RCONTROLKEY)
    if arg1 == EKEY and controlKeyDown and arg2 and developerMode then
        single_start_script(execute_user_command)
        bHandled = TRUE
    elseif control_map.OVERRIDE[arg1] and arg2 and cutSceneLevel <= 0 then
        single_start_script(cf.close_panel)
    elseif control_map.LOOK_AT[arg1] and arg2 and cutSceneLevel <= 0 then
        single_start_script(cf.panel.lookAt, cf.panel)
    elseif control_map.USE[arg1] and arg2 and cutSceneLevel <= 0 then
        single_start_script(cf.toggle_magnet)
    else
        CommonButtonHandler(arg1, arg2, arg3)
    end
end
cf.close_panel = function() -- line 100
    inventory_disabled = FALSE
    system.buttonHandler = inventory_save_handler
    mannys_hands:free()
    stop_sound("cfHum.IMU")
    ImSetVoiceEffect("OFF")
    cf:current_setup(cf_ofcha)
    START_CUT_SCENE()
    cf.panel:play_chore(0)
    manny:play_chore(mc_hand_off_obj, manny.base_costume)
    manny:wait_for_chore()
    END_CUT_SCENE()
    manny.idles_allowed = TRUE
    cf.intercom_on = nil
    music_state:update(system.currentSet)
end
cf.ha_ha_ha = function() -- line 118
    ImSetVoiceEffect("OFF")
    manny:say_line("/moma089/")
    manny:wait_for_message()
    ImSetVoiceEffect("Intercom Filter")
    bogen_table.rate = 0
end
cf.toggle_magnet = function() -- line 126
    START_CUT_SCENE()
    mannys_hands:play_chore(1)
    start_sfx("cfBtn.wav")
    mannys_hands:wait_for_chore()
    END_CUT_SCENE()
    if current_roulette_table.rate > 0 then
        if current_roulette_table.magnet ~= nil then
            current_roulette_table:demagnetize()
            if current_roulette_table == bogen_table and cn.bogens_in_the_house_again then
                stop_script(cn.roulette_game_simulator)
                rtable1:free()
                rtable2:free()
                rtable3:free()
                inventory_disabled = FALSE
                system.buttonHandler = inventory_save_handler
                mannys_hands:free()
                manny.idles_allowed = TRUE
                start_script(cut_scene.byeruba, cut_scene)
            elseif current_roulette_table == bogen_table and not bogen.pissed and bogen_in_cn then
                bogen_table:magnetize(9)
                START_CUT_SCENE()
                start_script(cf.ha_ha_ha)
                pissing_off_bogen = TRUE
                while not bogen.pissed do
                    break_here()
                end
                END_CUT_SCENE()
            end
        else
            current_roulette_table:magnetize(current_roulette_table.current_value)
        end
    else
        start_sfx("intrbuzz.wav")
    end
end
OFF_CHORE_OFFSET = 44
cf.panel_display = function() -- line 173
    local local1, local2
    local1 = current_roulette_table.current_value
    local2 = local1
    while cf:current_setup() == cf_pnlcu do
        if current_roulette_table.magnet and not pissing_off_bogen then
            single_start_sfx("cfHum.IMU")
            cf.panelcu:play_chore(cf_panel_magnet)
            cf.panelcu:play_chore(current_roulette_table.magnet)
        else
            cf.panelcu:play_chore(cf_panel_magnet_gone)
            stop_sound("cfHum.IMU")
        end
        if current_roulette_table == rtable1 then
            cf.panelcu:play_chore(cf_panel_table1)
        elseif current_roulette_table == rtable2 then
            cf.panelcu:play_chore(cf_panel_table2)
        else
            cf.panelcu:play_chore(cf_panel_table3)
        end
        local1 = current_roulette_table.current_value
        if local2 ~= local1 then
            if current_roulette_table.magnet ~= local2 then
                cf.panelcu:play_chore(local2 + OFF_CHORE_OFFSET)
            end
            start_sfx("cfRelay.wav")
            local2 = local1
        end
        cf.panelcu:play_chore(local1)
        break_here()
    end
end
system.rouletteTemplate = { name = "<unnamed>", current_value = nil, magnet = nil, actor = { }, sHandle = nil, doHandle = nil, rate = 0 }
Roulette = system.rouletteTemplate
Roulette.create = function(arg1, arg2) -- line 226
    local local1 = { }
    local1.parent = Roulette
    local1.name = arg2
    local1.current_value = 0
    local1.magnet = nil
    local1.sHandle = nil
    local1.doHandle = nil
    local1.rate = 0
    local1.actor = Actor:create(nil, nil, nil, "roulette table " .. arg2)
    return local1
end
Roulette.init_actor = function(arg1) -- line 241
    arg1.actor:set_costume("rwheel.cos")
    arg1.actor:put_in_set(system.currentSet)
    SetActorScale(arg1.actor.hActor, 1.1)
end
Roulette.spin = function(arg1) -- line 248
    arg1.doHandle = start_script(arg1.spin_up, arg1)
    arg1.sHandle = start_script(arg1.run, arg1)
end
Roulette.run = function(arg1) -- line 253
    local local1 = 0
    while cf.roulette_wheel[local1] ~= arg1.current_value do
        local1 = local1 + 1
    end
    while 1 do
        local1 = local1 + 1
        if local1 == 37 then
            local1 = 0
        end
        arg1.current_value = cf.roulette_wheel[local1]
        sleep_for(500 - arg1.rate * 5)
    end
end
Roulette.spin_up = function(arg1) -- line 269
    local local1 = { }
    arg1.rate = 0
    repeat
        if GetActorCostume(arg1.actor.hActor) then
            local1 = arg1.actor:get_positive_rot()
        end
        arg1.rate = arg1.rate + PerSecond(35)
        if arg1.rate > 65 then
            arg1.rate = 65
        end
        if GetActorCostume(arg1.actor.hActor) then
            arg1.actor:setrot(0, local1.y - arg1.rate, 0)
            local1 = arg1.actor:get_positive_rot()
        end
        break_here()
    until arg1.rate == 65
    repeat
        if system.currentSet == cn then
            arg1.rate = arg1.rate - PerSecond(1)
        elseif current_roulette_table == arg1 then
            arg1.rate = arg1.rate - PerSecond(5)
        end
        if arg1.rate < 0 then
            arg1.rate = 0
        end
        if GetActorCostume(arg1.actor.hActor) then
            local1 = arg1.actor:get_positive_rot()
            arg1.actor:setrot(0, local1.y - arg1.rate, 0)
            local1 = arg1.actor:get_positive_rot()
        end
        break_here()
    until arg1.rate == 0
    stop_sound("cnRoulet.imu")
    if system.currentSet == cn and cn:current_setup() ~= cn_cchms then
        start_sfx("cnRouStp.wav")
    end
    stop_script(arg1.sHandle)
end
Roulette.magnetize = function(arg1, arg2) -- line 311
    if arg2 then
        arg1.magnet = arg2
    else
        arg1.magnet = arg1.current_value
    end
end
Roulette.demagnetize = function(arg1) -- line 320
    cf.panelcu:play_chore(arg1.magnet + OFF_CHORE_OFFSET)
    arg1.magnet = nil
end
Roulette.stop = function(arg1) -- line 326
    if arg1.doHandle then
        while find_script(arg1.doHandle) do
            break_here()
        end
    end
    if arg1.magnet then
        arg1.current_value = arg1.magnet
    end
end
Roulette.free = function(arg1) -- line 338
    arg1.actor:free()
    stop_script(arg1.spin_up)
    stop_script(arg1.run)
    stop_script(arg1.stop)
end
cf.roulette_wheel = { }
cf.roulette_wheel[0] = 0
cf.roulette_wheel[1] = 26
cf.roulette_wheel[2] = 3
cf.roulette_wheel[3] = 35
cf.roulette_wheel[4] = 12
cf.roulette_wheel[5] = 28
cf.roulette_wheel[6] = 7
cf.roulette_wheel[7] = 29
cf.roulette_wheel[8] = 18
cf.roulette_wheel[9] = 34
cf.roulette_wheel[10] = 9
cf.roulette_wheel[11] = 31
cf.roulette_wheel[12] = 14
cf.roulette_wheel[13] = 20
cf.roulette_wheel[14] = 1
cf.roulette_wheel[15] = 33
cf.roulette_wheel[16] = 16
cf.roulette_wheel[17] = 24
cf.roulette_wheel[18] = 5
cf.roulette_wheel[19] = 10
cf.roulette_wheel[20] = 23
cf.roulette_wheel[21] = 8
cf.roulette_wheel[22] = 30
cf.roulette_wheel[23] = 11
cf.roulette_wheel[24] = 36
cf.roulette_wheel[25] = 13
cf.roulette_wheel[26] = 27
cf.roulette_wheel[27] = 6
cf.roulette_wheel[28] = 17
cf.roulette_wheel[29] = 25
cf.roulette_wheel[30] = 2
cf.roulette_wheel[31] = 21
cf.roulette_wheel[32] = 4
cf.roulette_wheel[33] = 19
cf.roulette_wheel[34] = 15
cf.roulette_wheel[35] = 32
cf.roulette_wheel[36] = 22
cf.update_music_state = function(arg1) -- line 391
    if cf.intercom_on then
        return stateCF_INTRCM
    else
        return stateCF
    end
end
cf.enter = function(arg1) -- line 400
    if not salnotes_actor then
        salnotes_actor = Actor:create(nil, nil, nil, "salnotes")
    end
    if cf.letters.owner ~= manny then
        salnotes_actor:put_in_set(cf)
        salnotes_actor:set_costume("salnotes.cos")
        salnotes_actor:setpos(-0.266018, 0.385542, 0.2946)
        salnotes_actor:setrot(90, 80, 0)
        salnotes_actor:scale(1.3)
        salnotes_actor:play_chore_looping(0)
    end
    if made_vacancy and hh.union_card.owner == manny and dd.strike_on then
        cn.bogens_in_the_house_again = TRUE
    end
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_0.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_1.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_2.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_3.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_4.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_5.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_6.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_7.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_8.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_9.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_10.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_11.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_12.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_13.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_14.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_15.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_16.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_17.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_18.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_19.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_20.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_21.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_22.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_23.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_24.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_25.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_26.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_27.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_28.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_29.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_30.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_31.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_32.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_33.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_34.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_35.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_36.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_left_red_light.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_top_red_dot.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_right_red_light.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_horse_shoe.bm")
    NewObjectState(cf_pnlcu, OBJSTATE_UNDERLAY, "cf_2_blue.bm")
    cf.panelcu:set_object_state("cf_panel.cos")
    NewObjectState(cf_ofcha, OBJSTATE_UNDERLAY, "cf_panelflip.bm")
    cf.panel:set_object_state("cf_flip_panel.cos")
    cf.panel:play_chore(2)
    if not find_script(cn.roulette_game_simulator) then
        bogen_in_cn = TRUE
        start_script(cn.roulette_game_simulator)
    end
end
cf.exit = function(arg1) -- line 475
    salnotes_actor:free()
    cf.intercom_on = nil
end
cf.panel = Object:create(cf, "panel", 0.025, -0.82999998, 0.28999999, { range = 0.60000002 })
cf.panel.use_pnt_x = 0.175
cf.panel.use_pnt_y = -1
cf.panel.use_pnt_z = 0
cf.panel.use_rot_x = 0
cf.panel.use_rot_y = 744.39801
cf.panel.use_rot_z = 0
cf.facing_up = FALSE
cf.panel.lookAt = function(arg1) -- line 495
    if not arg1.used then
        arg1:use()
    else
        manny:say_line("/cfma011/I've always meant to hide that better.")
    end
end
cf.panel.use = function(arg1) -- line 503
    arg1.used = TRUE
    cf:panel_closeup()
end
cf.panel.pickUp = cf.panel.use
cf.panelcu = Object:create(cf, "panel", 0, 0, 0, { range = 0 })
cf.panelcu.current_wheel = 1
cf.drawer = Object:create(cf, "drawer", 0.255, -0.92000002, 0.20999999, { range = 0 })
cf.drawer.use_pnt_x = 0.25599501
cf.drawer.use_pnt_y = -1.0324
cf.drawer.use_pnt_z = 0
cf.drawer.use_rot_x = 0
cf.drawer.use_rot_y = 1082.4399
cf.drawer.use_rot_z = 0
cf.drawer.lookAt = function(arg1) -- line 523
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    END_CUT_SCENE()
    if arg1:is_open() then
        system.default_response("empty")
    else
        manny:say_line("/cfma012/")
    end
end
cf.drawer.open = function(arg1) -- line 534
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    END_CUT_SCENE()
    if cf.letters.owner ~= manny then
        cf.letters:get()
        START_CUT_SCENE()
        wait_for_message()
        manny:say_line("/cfma013/")
        END_CUT_SCENE()
    end
    arg1.opened = TRUE
end
cf.drawer.close = function(arg1) -- line 548
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    END_CUT_SCENE()
    arg1.opened = FALSE
end
cf.drawer.use = function(arg1) -- line 556
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    END_CUT_SCENE()
    if arg1:is_open() then
        arg1:close()
    else
        arg1:open()
    end
end
cf.drawer.pickUp = cf.drawer.use
cf.lounge = Object:create(cf, "lounge", -0.97826803, 0.144564, 0.1, { range = 0.60000002 })
cf.lounge.use_pnt_x = -0.61484802
cf.lounge.use_pnt_y = 0.0770026
cf.lounge.use_pnt_z = 0
cf.lounge.use_rot_x = 0
cf.lounge.use_rot_y = 1216.03
cf.lounge.use_rot_z = 0
cf.lounge.lookAt = function(arg1) -- line 579
    manny:say_line("/cfma014/")
    wait_for_message()
    manny:say_line("/cfma015/")
end
cf.lounge.pickUp = function(arg1) -- line 585
    manny:say_line("/cfma016/")
end
cf.lounge.use = function(arg1) -- line 589
    if not meche.shanghaid then
        manny:say_line("/cfma017/")
    else
        manny:say_line("/cfma060/")
    end
end
cf.letters = Object:create(cf, "/cftx018/letters", -0.287902, 0.45734, 0.2888, { range = 0.75 })
cf.letters.use_pnt_x = -0.19300801
cf.letters.use_pnt_y = 0.199907
cf.letters.use_pnt_z = 0
cf.letters.use_rot_x = 0
cf.letters.use_rot_y = 21.306601
cf.letters.use_rot_z = 0
cf.letters.wav = "ciGetLtr.wav"
cf.letters.read_count = nil
cf.letters.pickUp = function(arg1) -- line 610
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:play_chore(mc_reach_med, "mc.cos")
    sleep_for(500)
    manny:generic_pickup(cf.letters)
    salnotes_actor:free()
    start_sfx("ciGetLtr.wav", nil, 60)
    wait_for_sound("ciGetLtr.wav")
    manny:wait_for_chore()
    END_CUT_SCENE()
end
cf.letters.lookAt = function(arg1) -- line 629
    if cf.letters.owner ~= manny then
        arg1:pickUp()
    end
    START_CUT_SCENE()
    if not arg1.read_count then
        arg1.read_count = 0
        manny:say_line("/cfma019/")
        wait_for_message()
        manny:say_line("/cfma020/")
        wait_for_message()
    end
    arg1.read_count = arg1.read_count + 1
    if arg1.read_count == 1 then
        salvador:say_line("/cfsa021/")
        wait_for_message()
        salvador:say_line("/cfsa022/")
        wait_for_message()
        salvador:say_line("/cfsa023/")
        wait_for_message()
        salvador:say_line("/cfsa024/")
        wait_for_message()
        salvador:say_line("/cfsa025/")
        wait_for_message()
        salvador:say_line("/cfsa026/")
        wait_for_message()
        salvador:say_line("/cfsa027/")
        wait_for_message()
        if not cf.said_later then
            cf.said_later = TRUE
            manny:say_line("/rema066/")
            manny:wait_for_message()
            if not inInventorySet() then
                manny:say_line("/hama102/")
                manny:wait_for_message()
                manny:say_line("/moma032/")
                wait_for_message()
                manny:clear_hands()
            end
        end
    elseif arg1.read_count == 2 then
        salvador:say_line("/cfsa028/")
        wait_for_message()
        salvador:say_line("/cfsa029/")
        wait_for_message()
        salvador:say_line("/cfsa030/")
    elseif arg1.read_count == 3 then
        salvador:say_line("/cfsa031/")
        wait_for_message()
        salvador:say_line("/cfsa032/")
        wait_for_message()
        salvador:say_line("/cfsa033/")
        wait_for_message()
        manny:say_line("/cfma034/")
    elseif arg1.read_count == 3 then
        eva:say_line("/cfev035/")
        wait_for_message()
        eva:say_line("/cfev036/")
        wait_for_message()
        eva:say_line("/cfev037/")
    elseif arg1.read_count == 4 then
        salvador:say_line("/cfsa038/")
        wait_for_message()
        salvador:say_line("/cfsa039/")
        wait_for_message()
        salvador:say_line("/cfsa040/")
        wait_for_message()
        salvador:say_line("/cfsa041/")
        wait_for_message()
        salvador:say_line("/cfsa042/")
    elseif arg1.read_count == 5 then
        salvador:say_line("/cfsa043/")
        wait_for_message()
        salvador:say_line("/cfsa044/")
        wait_for_message()
        salvador:say_line("/cfsa045/")
        wait_for_message()
        salvador:say_line("/cfsa046/")
        wait_for_message()
        salvador:say_line("/cfsa047/")
        wait_for_message()
        salvador:say_line("/cfsa048/")
    elseif arg1.read_count == 6 then
        salvador:say_line("/cfsa061/")
        wait_for_message()
        salvador:say_line("/cfsa062/")
        wait_for_message()
        salvador:say_line("/cfsa063/")
        wait_for_message()
        salvador:say_line("/cfsa064/")
    elseif arg1.read_count == 7 then
        salvador:say_line("/cfsa049/")
        wait_for_message()
        salvador:say_line("/cfsa050/")
        wait_for_message()
        salvador:say_line("/cfsa051/")
    elseif arg1.read_count == 8 then
        arg1.read_count = 0
        manny:say_line("/cfma052/")
        wait_for_message()
        salvador:say_line("/cfsa053/")
        wait_for_message()
        salvador:say_line("/cfsa054/")
        wait_for_message()
        salvador:say_line("/cfsa055/")
        wait_for_message()
        salvador:say_line("/cfsa056/")
        wait_for_message()
        salvador:say_line("/cfsa057/")
        wait_for_message()
        manny:say_line("/cfma058/")
    end
    END_CUT_SCENE()
end
cf.letters.use = cf.letters.lookAt
cf.letters.default_response = cf.letters.lookAt
cf.cb_door = Object:create(cf, "door", 1.53111, -0.081692301, 0.51999998, { range = 0 })
cf.cb_door.use_pnt_x = 1.28111
cf.cb_door.use_pnt_y = -0.081692301
cf.cb_door.use_pnt_z = -6.8087701e-13
cf.cb_door.use_rot_x = 0
cf.cb_door.use_rot_y = -96.6632
cf.cb_door.use_rot_z = 0
cf.cb_door.out_pnt_x = 1.48778
cf.cb_door.out_pnt_y = -0.105835
cf.cb_door.out_pnt_z = -5.39199e-13
cf.cb_door.out_rot_x = 0
cf.cb_door.out_rot_y = -96.6632
cf.cb_door.out_rot_z = 0
cf.cb_box = cf.cb_door
cf.cb_door.walkOut = function(arg1) -- line 771
    cb:come_out_door(cb.cf_door)
end
cf.cc_door = Object:create(cf, "door", -0.074944697, 1.01977, 0.36899999, { range = 0 })
cf.cc_door.use_pnt_x = 0.245884
cf.cc_door.use_pnt_y = 0.946859
cf.cc_door.use_pnt_z = -0.090000004
cf.cc_door.use_rot_x = 0
cf.cc_door.use_rot_y = 444.008
cf.cc_door.use_rot_z = 0
cf.cc_door.out_pnt_x = 6.1790301e-10
cf.cc_door.out_pnt_y = 0.97502398
cf.cc_door.out_pnt_z = -0.090000004
cf.cc_door.out_rot_x = 0
cf.cc_door.out_rot_y = 437.17401
cf.cc_door.out_rot_z = 0
cf.cc_box = cf.cc_door
cf.cc_door.walkOut = function(arg1) -- line 792
    cc:come_out_door(cc.cf_door)
    if not cc.seen_ci then
        cc.seen_ci = TRUE
        START_CUT_SCENE()
        manny:runto(-0.638187, 0.700022, 0, 0, 93.6948, 0)
        manny:wait_for_actor()
        sleep_for(1000)
        manny:turn_left(180)
        manny:wait_for_actor()
        manny:twist_head_gesture()
        sleep_for(1000)
        start_script(manny.walkto, manny, cc.ci_door, TRUE)
        while not manny:find_sector_type(HOT) do
            break_here()
        end
        END_CUT_SCENE()
        ci:come_out_door(ci.cc_door)
    else
        START_CUT_SCENE()
        manny:runto(-0.948998, 1.16225, 0.245777)
        manny:wait_for_actor()
        END_CUT_SCENE()
    end
end
cf_panel_Chore0 = 0
cf_panel_Chore1 = 1
cf_panel_Chore2 = 2
cf_panel_Chore3 = 3
cf_panel_Chore4 = 4
cf_panel_Chore5 = 5
cf_panel_Chore6 = 6
cf_panel_Chore7 = 7
cf_panel_Chore8 = 8
cf_panel_Chore9 = 9
cf_panel_Chore10 = 10
cf_panel_Chore11 = 11
cf_panel_Chore12 = 12
cf_panel_Chore13 = 13
cf_panel_Chore14 = 14
cf_panel_Chore15 = 15
cf_panel_Chore16 = 16
cf_panel_Chore17 = 17
cf_panel_Chore18 = 18
cf_panel_Chore19 = 19
cf_panel_Chore20 = 20
cf_panel_Chore21 = 21
cf_panel_Chore22 = 22
cf_panel_Chore23 = 23
cf_panel_Chore24 = 24
cf_panel_Chore25 = 25
cf_panel_Chore26 = 26
cf_panel_Chore27 = 27
cf_panel_Chore28 = 28
cf_panel_Chore29 = 29
cf_panel_Chore30 = 30
cf_panel_Chore31 = 31
cf_panel_Chore32 = 32
cf_panel_Chore33 = 33
cf_panel_Chore34 = 34
cf_panel_Chore35 = 35
cf_panel_Chore36 = 36
cf_panel_table1 = 37
cf_panel_table2 = 38
cf_panel_table3 = 39
cf_panel_blue_2 = 40
cf_panel_magnet = 41
cf_panel_magnet_gone = 42
cf_panel_no_blue = 43
cf_panel_clear = 44
chepito_drill_drill = 0
chepito_drill_look_drill = 1
chepito_drill_axe_mine = 2
chepito_drill_axe2look_mn = 3
chepito_drill_axe_talk = 4
chepito_drill_axe_2take = 5
chepito_drill_axe_gv_gun = 6
chepito_drill_2axe = 7
chepito_drill_drill2look_mn = 8
chepito_drill_drill_2take = 9
chepito_drill_drill_gv_gun = 10
chepito_drill_2drill = 11
chepito_drill_tlswtch2look_mn = 12
chepito_drill_tlswtch_offr = 13
chepito_drill_tlswtch_axe = 14
chepito_drill_tlswtch_2axe = 15
chepito_drill_mn2drill = 16
chepito_drill_mn2axe = 17
chepito_2conv = 0
chepito_conv_hold = 1
chepito_exclaim = 2
chepito_2base = 3
chepito_base = 4
chepito_2walk = 5
chepito_walk = 6
chepito_stop_walk = 7
chepito_grabbed = 8
chepito_dangle = 9
chepito_pull_right = 10
chepito_pull_left = 11
chepito_grabs = 12
chepito_shines = 13
chepito_shine2base = 14
chepito_mumble = 15
chepito_c = 16
chepito_m = 17
chepito_f = 18
chepito_e = 19
chepito_u = 20
chepito_l = 21
chepito_a = 22
chepito_o = 23
chepito_2trapped = 24
chepito_trapped = 25
chepito_thrash = 26
chepito_break_free = 27
chepito_t = 28
chief_bogan_idles_rest_pos = 0
chief_bogan_idles_arms_bk = 1
chief_bogan_idles_stand_pos = 2
chief_bogan_idles_into_rock = 3
chief_bogan_idles_rocking = 4
chief_bogan_idles_arms_dn_rest = 5
chief_bogan_idles_brush_jacket = 6
chief_bogan_idles_into_stand = 7
chief_bogan_idles_into_stand2 = 8
chief_bogan_idles_into_rest = 9
chief_bogan_idles_o = 10
chief_bogan_idles_m = 11
chief_bogan_idles_l = 12
chief_bogan_idles_c = 13
chief_bogan_idles_a = 14
chief_bogan_idles_e = 15
chief_bogan_idles_f = 16
chief_bogan_idles_u = 17
chief_bogan_idles_stop_talk = 18
cigcase_Chore0 = 0
cig_girl_rest = 0
cig_girl_gesture1 = 1
cig_girl_gesture2 = 2
cig_girl_gesture3 = 3
cig_girl_gesture4 = 4
cig_girl_smoke = 5
cig_girl_gesture5 = 6
cig_girl_look_at_olivia = 7
cig_girl_look_hold = 8
cig_girl_gesture6 = 9
CheckFirstTime("ci.lua")
ci = Set:create("ci.set", "cafe interior", { ci_stpws = 0, ci_stpws1 = 0, ci_stpws2 = 0, ci_barws = 1, ci_widha = 2, ci_widha1 = 2, ci_glotk = 3, ci_ovrhd = 4, ci_ovrhd = 5 })
dofile("glottis_tux.lua")
dofile("glottis_piano.lua")
dofile("mc_drink.lua")
dofile("gl_hrpass.lua")
dofile("mc_railslide.lua")
gold_actor = Actor:create()
ci.lamp_point = { x = 0.533434, y = 0.676165, z = -0.4055 }
ci.bar_point = { x = 0.168434, y = 0.531765, z = -1.0075 }
ci.other_point = { x = 1.33023, y = 0.977164, z = -1.2006 }
RAIL_Y = 0.279443
EARLY_SLIDE_STOP_X = 2.3
FINAL_SLIDE_STOP_X = 2.8
ci.bannister_acceleration = function(arg1) -- line 30
    local local1 = arg1
    local local2 = 0
    ci.chute_deployed = FALSE
    while 1 do
        local1 = arg1 * (0.003 * local2)
        manny:set_walk_rate(local1)
        local2 = local2 + system.frameTime
        mpos = manny:getpos()
        if mpos.x >= EARLY_SLIDE_STOP_X and local1 >= 2.4000001 or mpos.x >= FINAL_SLIDE_STOP_X then
            ci.chute_deployed = TRUE
            PrintDebug("chute deployed at slide_rate = " .. local1)
        end
        break_here()
    end
end
ci.slide_down_bannister = function() -- line 52
    local local1 = manny:getpos()
    local local2 = 0
    START_CUT_SCENE()
    ci:current_setup(ci_stpws)
    box_off("rail_trigger")
    box_on("rail_box")
    if manny.is_holding then
        manny.is_holding:put_away()
    end
    manny:walkto(local1.x, RAIL_Y, local1.z)
    manny:setrot(0, 270, 0)
    manny:set_rest_chore(nil)
    manny:stop_chore()
    manny:push_costume("mc_railslide.cos")
    manny:play_chore(mc_railslide_on_rail, "mc_railslide.cos")
    manny:set_walk_chore(mc_railslide_on_rail, "mc_railslide.cos")
    start_sfx("ciSlide.WAV", IM_HIGH_PRIORITY, 5)
    fade_sfx("ciSlide.WAV", 2000, 127)
    local2 = 0
    repeat
        break_here()
        local2 = local2 + system.frameTime
    until local2 > 500 or ci.chute_deployed
    manny:offsetBy(0, 0, 0.059999999)
    ci.chute_deployed = FALSE
    start_script(ci.bannister_acceleration, 1)
    start_script(manny.walkto, manny, 3.3208799, 0.224655, -1.33788)
    while not ci.chute_deployed and manny:is_choring(mc_railslide_on_rail, TRUE, "mc_railslide.cos") do
        PrintDebug("jumping on rail!\n")
        break_here()
        local1 = manny:getpos()
    end
    if not ci.chute_deployed then
        manny:set_walk_chore(mc_railslide_sllide, "mc_railslide.cos")
        manny:play_chore_looping(mc_railslide_sllide, "mc_railslide.cos")
        repeat
            PrintDebug("sliding down rail!\n")
            break_here()
        until ci.chute_deployed
        manny:set_walk_chore(nil)
    end
    stop_sound("ciSlide.WAV")
    manny:stop_chore()
    manny:play_chore(mc_railslide_off_rail, "mc_railslide.cos")
    sleep_for(250)
    manny:offsetBy(0, 0, -0.059999999)
    manny:wait_for_chore(mc_railslide_off_rail, "mc_railslide.cos")
    stop_script(ci.bannister_acceleration)
    box_off("rail_box")
    box_on("rail_trigger")
    manny:set_rest_chore(mc_rest)
    manny:default()
    END_CUT_SCENE()
    if not ci.hello_tripped then
        ci.hello_trigger:walkOut()
    end
end
ci.look_around = function() -- line 119
    manny:set_look_rate(125)
    manny:head_look_at_point(ci.lamp_point)
    sleep_for(2000)
    manny:head_look_at_point(ci.other_point)
    sleep_for(2000)
    manny:head_look_at_point(ci.bar_point)
    sleep_for(2000)
    manny:twist_head_gesture()
    manny:set_look_rate(manny.default_look_rate)
end
ci.give_pass = function() -- line 131
    START_CUT_SCENE()
    if manny.is_holding ~= cn.pass then
        shrinkBoxesEnabled = FALSE
        open_inventory(TRUE, TRUE)
        manny.is_holding = cn.pass
        close_inventory()
        if GlobalShrinkEnabled then
            shrinkBoxesEnabled = TRUE
        end
    end
    start_script(manny.walkto, manny, 2.59454, 1.18761, -1.4, 0, 29.0819, 0)
    if not ci.said_check_out then
        manny:say_line("/cima001/")
        manny:wait_for_message()
    end
    manny:say_line("/cima002/")
    manny:wait_for_actor()
    manny:wait_for_chore()
    manny:stop_chore(ms_hold, "mc.cos")
    manny:play_chore(mc_give_hrpass, "mc.cos")
    glottis:push_costume("gl_hrpass.cos")
    glottis:stop_chore(glottis_piano_piano_loop, "glottis_piano.cos")
    glottis:play_chore(gl_hrpass_to_get_hrpass)
    glottis:wait_for_chore()
    glottis:play_chore(gl_hrpass_take_hrpass)
    manny:wait_for_chore()
    manny.is_holding = nil
    cn.pass:free()
    manny:stop_chore(manny.hold_chore, "mc.cos")
    manny:run_chore(mc_hrpass_rtrn2base, "mc.cos")
    manny:stop_chore()
    manny:turn_left(60)
    manny:head_look_at(nil)
    manny:default()
    wait_for_message()
    manny:say_line("/cima003/")
    start_script(manny.walkto, manny, 1.55211, 1.33205, -1.39908)
    sleep_for(1000)
    ci:current_setup(ci_barws)
    manny:head_look_at(nil)
    manny:push_costume("mc_hand_gesture.cos")
    manny:setpos(1.55211, 1.33205, -1.39908)
    manny:setrot(0, 107.58, 0)
    manny:run_chore(0, "mc_hand_gesture.cos")
    manny:wait_for_message()
    glottis:say_line("/cigl004/")
    sleep_for(500)
    start_script(ci.look_around)
    wait_for_message()
    manny:say_line("/cima005/")
    manny:shrug_gesture()
    wait_for_message()
    glottis:say_line("/cigl006/")
    wait_for_message()
    glottis:say_line("/cigl007/")
    wait_for_message()
    glottis:say_line("/cigl008/")
    hl.glottis_gambling = TRUE
    music_state:update()
    wait_for_message()
    start_sfx("ciGlRun.WAV")
    manny:head_look_at(ci.glottis_obj)
    glottis:free()
    ci.glottis_obj:make_untouchable()
    wait_for_sound("ciGlRun.WAV")
    manny:say_line("/cima009/")
    wait_for_message()
    manny:pop_costume()
    ci:current_setup(ci_stpws)
    manny:turn_left(90)
    manny:walkto(1.80843, 1.30685, -1.4, 0, 276.598, 0)
    manny:say_line("/cima010/")
    manny:wait_for_message()
    END_CUT_SCENE()
    cur_puzzle_state[18] = TRUE
    music_state:set_state(stateCI_EMPTY)
    ci.piano:make_touchable()
    ci:set_boxes()
    break_here()
    ci:current_setup(ci_stpws)
    manny:head_look_at(nil)
end
ci.glottis_sing_at = function(arg1, arg2) -- line 224
    local local1
    local local2
    local1 = sleep_for(arg2)
    local2 = GetSpeechMode()
    if local2 == VOICE_ONLY or local2 == VOICE_AND_TEXT then
        dialog_log:log_say_line(glottis, arg1)
    else
        glottis:say_line(arg1)
    end
    return local1 + arg2
end
ci.stop_glottis_near_conclusion = function() -- line 241
    sleep_for(82500)
    glottis:set_chore_looping(glottis_piano_piano_loop, FALSE, "glottis_piano.cos")
    glottis:play_chore(glottis_piano_pause_playing, "glottis_piano.cos")
    glottis:head_look_at_manny()
end
ci.rusty_anchor_song = function() -- line 249
    local local1
    local local2
    set_override(ci.skip_song)
    START_CUT_SCENE()
    glottis:head_look_at_manny()
    glottis:say_line("/cigl011/")
    wait_for_message()
    glottis:say_line("/cigl012/")
    wait_for_message()
    glottis:say_line("/cigl013/")
    wait_for_message()
    glottis:say_line("/cigl014/")
    wait_for_message()
    glottis:say_line("/cigl015/")
    wait_for_message()
    glottis:say_line("/cigl016/")
    wait_for_message()
    glottis:set_head(3, 4, 4, 165, 28, 80)
    glottis:head_look_at_point(3.43297, 1.2381099, -1.12)
    music_state:pause()
    glottis:set_mumble_chore(glottis_tux_mumble_slow)
    glottis:set_time_scale(2)
    start_script(ci.stop_glottis_near_conclusion)
    local1 = GetSpeechMode()
    if local1 == VOICE_ONLY or local1 == VOICE_AND_TEXT then
        glottis:say_line("/cigl017a/")
    else
        ImSetState(stateCI_SONG)
    end
    local2 = ci.glottis_sing_at("/cigl017/", 5766)
    local2 = local2 + ci.glottis_sing_at("/cigl018/", 9133 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl019/", 11666 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl020/", 15000 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl021/", 19033 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl022/", 22533 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl023/", 25166 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl024/", 29200 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl025/", 36700 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl026/", 39766 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl027/", 42666 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl028/", 46300 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl033/", 50533 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl034/", 54033 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl035/", 56733 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl036/", 60033 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl037/", 63933 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl038/", 67433 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl039/", 70100 - local2)
    local2 = local2 + ci.glottis_sing_at("/cigl040/", 74200 - local2)
    local1 = GetSpeechMode()
    if local1 == VOICE_ONLY or local1 == VOICE_AND_TEXT then
        wait_for_message()
    else
        sleep_for(89000 - local2)
    end
    glottis:set_time_scale(1)
    glottis:complete_chore(glottis_tux_stop_talk, "glottis_tux.cos")
    glottis:set_mumble_chore(glottis_tux_mumble)
    glottis:say_line("/cigl041/")
    wait_for_message()
    manny:say_line("/cima042/")
    wait_for_message()
    glottis:say_line("/cigl043/")
    wait_for_message()
    ci.skip_song()
    END_CUT_SCENE()
end
ci.skip_song = function() -- line 349
    kill_override()
    stop_script(ci.stop_glottis_near_conclusion)
    glottis:set_time_scale(1)
    glottis:complete_chore(glottis_tux_stop_talk, "glottis_tux.cos")
    glottis:set_mumble_chore(glottis_tux_mumble)
    glottis:play_chore(glottis_piano_resume_playing, "glottis_piano.cos")
    glottis:play_chore_looping(glottis_piano_piano_loop, "glottis_piano.cos")
    music_state:unpause()
    glottis:head_look_at_point(3.43297, 1.23811, -1.12)
end
table_actor = { }
ci.set_up_tables = function(arg1) -- line 366
    local local1 = 0
    repeat
        local1 = local1 + 1
        if not table_actor[local1] then
            table_actor[local1] = Actor:create(nil, nil, nil, "table" .. local1)
        end
        table_actor[local1]:set_costume("x_spot.cos")
        table_actor[local1]:set_visibility(FALSE)
        table_actor[local1]:put_in_set(ci)
        table_actor[local1]:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(table_actor[local1].hActor, 0.89999998)
        if local1 == 1 then
            table_actor[local1]:setpos(2.9061899, 0.94430399, -1.1864001)
        elseif local1 == 2 then
            table_actor[local1]:setpos(2.0600901, 1.2569, -1.1864001)
        elseif local1 == 3 then
            table_actor[local1]:setpos(1.50089, 1.5663, -1.1864001)
        elseif local1 == 4 then
            table_actor[local1]:setpos(1.33079, 0.92940402, -1.1864001)
            SetActorCollisionScale(table_actor[local1].hActor, 1.15)
        end
    until local1 == 4
end
ci.set_up_actors = function(arg1) -- line 392
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(manny.hActor, 0.35)
    if hl.glottis_gambling then
        glottis:free()
        ci.glottis_obj:make_untouchable()
    else
        glottis:default()
        glottis:put_in_set(ci)
        glottis:set_costume("glottis_tux.cos")
        glottis:set_mumble_chore(glottis_tux_mumble, "glottis_tux.cos")
        glottis:set_talk_chore(1, glottis_tux_stop_talk)
        glottis:set_talk_chore(2, glottis_tux_a)
        glottis:set_talk_chore(3, glottis_tux_c)
        glottis:set_talk_chore(4, glottis_tux_e)
        glottis:set_talk_chore(5, glottis_tux_f)
        glottis:set_talk_chore(6, glottis_tux_l)
        glottis:set_talk_chore(7, glottis_tux_m)
        glottis:set_talk_chore(8, glottis_tux_o)
        glottis:set_talk_chore(9, glottis_tux_t)
        glottis:set_talk_chore(10, glottis_tux_u)
        glottis:push_costume("glottis_piano.cos")
        glottis:set_head(3, 4, 4, 165, 28, 80)
        glottis:set_look_rate(90)
        glottis:head_look_at(nil)
        glottis:setpos(2.64, 1.91, -1.39)
        glottis:setrot(0, -130.15, 0)
        glottis:play_chore_looping(glottis_piano_piano_loop)
    end
    if ci.liqueur.owner ~= manny then
        if not gold_actor then
            gold_actor = Actor:create(nil, nil, nil, "gold")
        end
        gold_actor:set_costume("gold.cos")
        gold_actor:put_in_set(ci)
        gold_actor:setpos(0.2337, 0.554473, -1.0143)
        gold_actor:setrot(0, 90, 0)
    else
        gold_actor:free()
    end
end
ci.set_boxes = function(arg1) -- line 437
    box_off("ci_glotk")
    if hl.glottis_gambling then
        box_on("glot_box1")
        box_on("glot_box3")
        box_on("glot_box4")
        box_on("glot_box5")
    else
        box_off("glot_box1")
        box_off("glot_box3")
        box_off("glot_box4")
        box_off("glot_box5")
    end
end
ci.enter = function(arg1) -- line 461
    ci:set_up_actors()
    ci:set_boxes()
    if cn.pass.owner == manny then
        LoadCostume("mc_hand_gesture.cos")
        preload_sfx("ciGlRun.WAV")
    end
    SetShadowColor(0, 0, 0)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 100)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
    AddShadowPlane(manny.hActor, "shadow4")
    LoadCostume("mc_railslide.cos")
    if hl.glottis_gambling or ci.hello_tripped then
        box_off("hello_trigger")
    end
end
ci.camerachange = function(arg1, arg2, arg3) -- line 483
    if ci.liqueur.owner ~= manny then
        if arg3 == ci_stpws then
            gold_actor:setpos(0.668839, 0.600597, -0.97278)
        else
            gold_actor:setpos(0.2337, 0.554473, -1.0143)
        end
    end
    music_state:update()
end
ci.exit = function(arg1) -- line 496
    glottis:free()
    manny:set_collision_mode(COLLISION_OFF)
    local local1 = 0
    repeat
        local1 = local1 + 1
    until local1 == 4
    gold_actor:free()
    KillActorShadows(manny.hActor)
end
ci.update_music_state = function(arg1) -- line 510
    if hl.glottis_gambling then
        return stateCI_EMPTY
    elseif ci:current_setup() == ci_widha then
        return stateCI_WIDHA
    elseif ci:current_setup() == ci_barws then
        return stateCI_BARWS
    else
        return stateCI_NOODLE
    end
end
ci.rail_trigger = { }
ci.rail_trigger.walkOut = function(arg1) -- line 532
    local local1 = manny:get_positive_rot()
    if local1.y < 10 or local1.y > 90 then
        ci.slide_down_bannister()
    end
end
ci.hello_trigger = { }
ci.hello_trigger.walkOut = function(arg1) -- line 541
    if not hl.glottis_gambling and not ci.hello_tripped then
        START_CUT_SCENE()
        ci.hello_tripped = TRUE
        glottis:head_look_at_manny()
        glottis:say_line("/cigl044/")
        local local1 = glottis:getpos()
        start_script(manny.turn_toward_entity, manny, local1.x, local1.y, local1.z)
        wait_for_message()
        glottis:head_look_at(nil)
        manny:say_line("/lyma047/")
        wait_for_message()
        box_off("hello_trigger")
        END_CUT_SCENE()
    end
end
ci.glottis_obj = Object:create(ci, "/citx045/Glottis", 2.8558199, 1.74634, -0.80000001, { range = 1 })
ci.glottis_obj.use_pnt_x = 2.594542
ci.glottis_obj.use_pnt_y = 1.18761
ci.glottis_obj.use_pnt_z = -1.4
ci.glottis_obj.use_rot_x = 0
ci.glottis_obj.use_rot_y = 29.0819
ci.glottis_obj.use_rot_z = 0
ci.glottis_obj.lookAt = function(arg1) -- line 568
    manny:say_line("/cima046/")
end
ci.glottis_obj.use = function(arg1) -- line 572
    manny:wait_for_message()
    if manny:walkto_object(arg1) then
        ci.talked_to_glottis = TRUE
        Dialog:run("gl2", "dlg_glot2.lua")
    end
end
ci.glottis_obj.use_pass = function(arg1) -- line 580
    START_CUT_SCENE()
    manny:wait_for_message()
    ci:give_pass()
    END_CUT_SCENE()
end
ci.glottis_obj.use_paper = function(arg1) -- line 587
    START_CUT_SCENE()
    manny:wait_for_message()
    start_script(ci.rusty_anchor_song)
    END_CUT_SCENE()
end
ci.glottis_obj.lookUp = function(arg1) -- line 594
    arg1.looking_up = TRUE
    glottis:set_chore_looping(glottis_piano_piano_loop, FALSE)
    glottis:wait_for_chore()
    glottis:play_chore(glottis_piano_turn_head)
    glottis:wait_for_chore()
end
ci.glottis_obj.lookDn = function(arg1) -- line 602
    arg1.looking_up = FALSE
    glottis:wait_for_chore()
    glottis:play_chore(glottis_piano_turn_head_back)
    glottis:wait_for_chore()
    glottis:play_chore_looping(glottis_piano_piano_loop)
end
ci.liqueur = Object:create(ci, "/citx047/bottle of gold flake liqueur", 0.237665, 0.556952, -1.0427001, { range = 0.60000002 })
ci.liqueur.use_pnt_x = 0.34766501
ci.liqueur.use_pnt_y = 0.618352
ci.liqueur.use_pnt_z = -1.4
ci.liqueur.use_rot_x = 0
ci.liqueur.use_rot_y = -244.09
ci.liqueur.use_rot_z = 0
ci.liqueur.string_name = "liqueur"
ci.liqueur.wav = "getBotl.wav"
ci.liqueur.lookAt = function(arg1) -- line 620
    manny:say_line("/cima048/")
    if not arg1.seen then
        arg1.seen = TRUE
        START_CUT_SCENE()
        if arg1.owner ~= manny then
            manny:wait_for_message()
            manny:say_line("/cima049/")
            wait_for_message()
            manny:say_line("/cima050/")
        end
        END_CUT_SCENE()
    end
end
ci.liqueur.pickUp = function(arg1) -- line 637
    if manny:walkto(arg1) then
        START_CUT_SCENE()
        manny:wait_for_actor()
        if not arg1.seen then
            arg1.seen = TRUE
            manny:say_line("/cima048/")
            manny:wait_for_message()
        end
        manny:say_line("/cima051/")
        manny:play_chore(ms_hand_on_obj, manny.base_costume)
        manny:wait_for_chore()
        start_sfx("botlUp.wav")
        manny.is_holding = arg1
        manny.hold_chore = mc_activate_liqueur
        manny:play_chore_looping(manny.hold_chore, manny.base_costume)
        gold_actor:free()
        manny:play_chore(ms_hand_off_obj, manny.base_costume)
        manny:wait_for_chore()
        manny:play_chore_looping(mc_hold, manny.base_costume)
        END_CUT_SCENE()
        ci.liqueur:get()
    end
end
ci.liqueur.use = function(arg1) -- line 664
    if arg1.owner ~= manny then
        arg1:pickUp()
    elseif manny.golden then
        manny:say_line("/cima052/")
    else
        START_CUT_SCENE()
        manny.golden = TRUE
        look_at_item_in_hand(TRUE)
        manny:say_line("/cima053/")
        wait_for_message()
        manny:head_look_at(nil)
        manny:push_costume("mc_drink.cos")
        manny:play_chore(mc_drink_drink, "mc_drink.cos")
        sleep_for(1700)
        manny:say_line("/cima054/")
        manny:wait_for_chore(mc_drink_drink, "mc_drink.cos")
        manny:wait_for_message()
        manny:pop_costume()
        END_CUT_SCENE()
        start_script(ci.liqueur.timer)
    end
end
ci.liqueur.timer = function(arg1) -- line 690
    sleep_for(10000)
    while cutSceneLevel > 0 do
        break_here()
    end
    manny:wait_for_message()
    manny.golden = FALSE
    manny:run_chore(mc_belch, "mc.cos")
    manny:stop_chore(mc_belch, "mc.cos")
    manny:shut_up()
end
ci.piano = Object:create(ci, "/citx056/piano", 2.8558199, 1.64634, -1.2, { range = 0.60000002 })
ci.piano.use_pnt_x = 2.7943699
ci.piano.use_pnt_y = 1.7085
ci.piano.use_pnt_z = -1.397
ci.piano.use_rot_x = 0
ci.piano.use_rot_y = 237.854
ci.piano.use_rot_z = 0
ci.piano:make_untouchable()
ci.piano.lookAt = function(arg1) -- line 719
    manny:say_line("/cima057/")
end
ci.piano.pickUp = function(arg1) -- line 723
    manny:say_line("/cima058/")
end
ci.piano.use = function(arg1) -- line 727
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    music_state:set_sequence(seqMannySingMeche)
    manny:say_line("/cima059/")
    sleep_for(500)
    manny:head_look_at(ci.other_keys)
    wait_for_message()
    manny:say_line("/cima060/")
    manny:head_look_at(ci.piano)
    sleep_for(500)
    manny:head_look_at(ci.other_keys)
    sleep_for(500)
    manny:head_look_at(ci.piano)
    sleep_for(500)
    manny:head_look_at(ci.other_keys)
    wait_for_message()
    manny:say_line("/cima061/")
    manny:head_look_at(ci.ceiling)
    wait_for_message()
    manny:head_look_at(ci.lupe_obj)
    start_sfx("lupeClap.wav")
    set_pan("lupeClap.wav", 10)
    sleep_for(1000)
    lupe:say_line("/cilu062/")
    wait_for_message()
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
ci.lupe_obj = Object:create(ci, "", 0.155819, 0.64633799, 0.30000001, { range = 0 })
ci.ceiling = Object:create(ci, "", 2.9358201, 1.56634, -0.5, { range = 0 })
ci.other_keys = Object:create(ci, "", 2.9558201, 1.64634, -1.2, { range = 0 })
ci.cn_door = Object:create(ci, "/citx065/door", -0.05212, 1.66897, -1, { range = 0.60000002 })
ci.cn_door.use_pnt_x = 0.34983
ci.cn_door.use_pnt_y = 1.74863
ci.cn_door.use_pnt_z = -1.397
ci.cn_door.use_rot_x = 0
ci.cn_door.use_rot_y = 813.35199
ci.cn_door.use_rot_z = 0
ci.cn_door.out_pnt_x = -0.057112701
ci.cn_door.out_pnt_y = 1.72479
ci.cn_door.out_pnt_z = -1.397
ci.cn_door.out_rot_x = 0
ci.cn_door.out_rot_y = 813.35199
ci.cn_door.out_rot_z = 0
ci.cn_door:make_untouchable()
ci.cn_box = ci.cn_door
ci.cn_door.walkOut = function(arg1) -- line 786
    START_CUT_SCENE()
    cn:come_out_door(cn.ci_door)
    END_CUT_SCENE()
end
ci.cc_door = Object:create(ci, "/citx066/door", -0.05212, 0.568968, 0.30000001, { range = 0.60000002 })
ci.cc_door.use_pnt_x = 0.237735
ci.cc_door.use_pnt_y = 0.55941498
ci.cc_door.use_pnt_z = -2.6016099e-07
ci.cc_door.use_rot_x = 0
ci.cc_door.use_rot_y = 450.698
ci.cc_door.use_rot_z = 0
ci.cc_door.out_pnt_x = 0.000552463
ci.cc_door.out_pnt_y = 0.55652201
ci.cc_door.out_pnt_z = -1.98446e-07
ci.cc_door.out_rot_x = 0
ci.cc_door.out_rot_y = 450.698
ci.cc_door.out_rot_z = 0
ci.cc_door:make_untouchable()
ci.cc_box = ci.cc_door
ci.cc_door.walkOut = function(arg1) -- line 813
    cc:come_out_door(cc.ci_door)
end
CheckFirstTime("ck.lua")
ck = Set:create("ck.set", "crane track", { ck_crnha = 0, ck_ovrhd = 1 })
ck.enter = function(arg1) -- line 18
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 25, 100)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
end
ck.exit = function(arg1) -- line 27
    KillActorShadows(manny.hActor)
end
cl_2_handles_lower_handles = 0
cl_2_handles_raise_handles = 1
cl_2_handles_handles_down = 2
cl_2_handles_handles_up = 3
CheckFirstTime("cl.lua")
cl = Set:create("cl.set", "cafe ledge", { cl_rubws = 0, cl_rubws2 = 0, cl_rubws3 = 0, cl_ovrhd = 1, cl_scope = 2 })
dofile("mc_telescope.lua")
cl.scope_count = 0
cl.observations = { }
cl.observations[1] = { line = "/clma002/", enabled = TRUE }
cl.observations[2] = { line = "/clma007/", enabled = TRUE }
cl.observations[3] = { line = "/clma008/", enabled = TRUE }
cl.observations[4] = { line = "/clma003/", enabled = TRUE }
cl.observations[5] = { line = "/clma010/", enabled = TRUE }
cl.observations[6] = { line = "/clma006/", enabled = FALSE }
cl.observations[7] = { line = "/clma009/", enabled = FALSE }
cl.observations[8] = { line = "/clma004/", enabled = FALSE }
cl.observations[9] = { line = "/clma005/", enabled = FALSE }
cl.use_telescope = function() -- line 36
    cl.scope_count = cl.scope_count + 1
    START_CUT_SCENE()
    cl.telescope:handles_down()
    sleep_for(1000)
    if dd.been_there then
        cl.observations[6].enabled = TRUE
        if not cl.observations[6].said then
            cl.scope_count = 6
        end
    end
    if dd.strike_on then
        cl.observations[9].enabled = TRUE
        if not cl.observations[9].said then
            cl.scope_count = 9
        end
    end
    if lx.seen_lola then
        cl.observations[7].enabled = FALSE
        cl.observations[8].enabled = FALSE
    elseif bi.seen_kiss then
        cl.observations[7].enabled = TRUE
        cl.observations[8].enabled = TRUE
        if not cl.observations[7].said then
            cl.scope_count = 7
        elseif not cl.observations[8].said then
            cl.scope_count = 8
        end
    end
    while not cl.observations[cl.scope_count].enabled do
        cl.scope_count = cl.scope_count + 1
        if cl.scope_count >= 10 then
            cl.scope_count = 1
        end
    end
    cl.observations[cl.scope_count].said = TRUE
    manny:say_line(cl.observations[cl.scope_count].line)
    manny:wait_for_message()
    sleep_for(500)
    cl.telescope:handles_up()
    END_CUT_SCENE()
end
cl.enter = function(arg1) -- line 94
    cl.telescope.hObjectState = cl:add_object_state(cl_scope, "cl_2_handles.bm", "cl_2_handles.zbm", OBJSTATE_STATE, FALSE)
    cl.telescope:set_object_state("cl_2_handles.cos")
    LoadCostume("mc_telescope.cos")
    single_start_script(foghorn_sfx)
    cl:add_ambient_sfx(harbor_ambience_list, harbor_ambience_parm_list)
end
cl.exit = function(arg1) -- line 102
    stop_script(foghorn_sfx)
end
cl.telescope = Object:create(cl, "/cltx011/telescope", 7.39784, 3.2763801, -1.61704, { range = 0.60000002 })
cl.telescope.use_pnt_x = 7.3768401
cl.telescope.use_pnt_y = 3.0823801
cl.telescope.use_pnt_z = -2.0120399
cl.telescope.use_rot_x = 0
cl.telescope.use_rot_y = -6.6929402
cl.telescope.use_rot_z = 0
cl.telescope.lookAt = function(arg1) -- line 119
    START_CUT_SCENE("no head")
    manny:head_look_at_point({ x = 7.34284, y = 3.22738, z = -1.518 })
    manny:say_line("/clma012/")
    wait_for_message()
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
cl.telescope.pickUp = function(arg1) -- line 128
    system.default_response("bolted")
end
cl.telescope.use = function(arg1) -- line 132
    if manny:walkto(arg1) then
        start_script(cl.use_telescope)
    end
end
cl.telescope.handles_down = function(arg1) -- line 138
    START_CUT_SCENE()
    manny:push_costume("mc_telescope.cos")
    manny:run_chore(mc_telescope_lookat_scope, "mc_telescope.cos")
    END_CUT_SCENE()
end
cl.telescope.handles_up = function(arg1) -- line 147
    START_CUT_SCENE()
    manny:run_chore(mc_telescope_look_done, "mc_telescope.cos")
    manny:pop_costume()
    END_CUT_SCENE()
end
cl.ce_door = Object:create(cl, "/cltx001/door", 6.74511, -1.96692, -1.48, { range = 0.60000002 })
cl.ce_door.use_pnt_x = 6.74511
cl.ce_door.use_pnt_y = -0.63691902
cl.ce_door.use_pnt_z = -2
cl.ce_door.use_rot_x = 0
cl.ce_door.use_rot_y = 540.008
cl.ce_door.use_rot_z = 0
cl.ce_door.out_pnt_x = 6.7451501
cl.ce_door.out_pnt_y = -0.96232998
cl.ce_door.out_pnt_z = -2
cl.ce_door.out_rot_x = 0
cl.ce_door.out_rot_y = 540.008
cl.ce_door.out_rot_z = 0
cl.ce_box = cl.ce_door
cl.ce_door.walkOut = function(arg1) -- line 177
    ce:come_out_door(ce.cl_door)
end
CheckFirstTime("cn.lua")
dofile("bogen.lua")
dofile("spinner.lua")
dofile("turbanman.lua")
dofile("fatlady.lua")
dofile("caneman.lua")
dofile("mc_booth_idles.lua")
dofile("cc_booth_idles.lua")
dofile("ccharlie.lua")
cn = Set:create("cn.set", "casino interior", { cn_top = 0, cn_cchms = 1, cn_rulws = 2 })
cn.shrinkable = 0.043
bogen.idle_table = Idle:create("bogen")
bogen.idle_table:add_state("hands_side_to_bk", { rocking = 0.8, hands_bk_to_side = 0.2 })
bogen.idle_table:add_state("hands_to_hips", { hands_on_hips = 1 })
bogen.idle_table:add_state("rocking", { hands_bk_to_side = 1 })
bogen.idle_table:add_state("brush_jacket", { stand = 1 })
bogen.idle_table:add_state("hands_from_hips", { brush_jacket = 0.1, hands_to_hips = 0.1, hands_side_to_bk = 0.1, stand = 0.7 })
bogen.idle_table:add_state("hands_bk_to_side", { brush_jacket = 0.1, hands_to_hips = 0.1, hands_side_to_bk = 0.1, stand = 0.7 })
bogen.idle_table:add_state("stand", { brush_jacket = 0.1, hands_to_hips = 0.1, hands_side_to_bk = 0.1, stand = 0.7 })
bogen.idle_table:add_state("hands_on_hips", { hands_on_hips = 0.85, hands_from_hips = 0.15 })
manny.say_number = function(arg1, arg2) -- line 35
    if arg2 == 1 then
        manny:say_line("/cnma001/")
    elseif arg2 == 2 then
        manny:say_line("/cnma002/")
    elseif arg2 == 3 then
        manny:say_line("/cnma003/")
    elseif arg2 == 4 then
        manny:say_line("/cnma004/")
    elseif arg2 == 5 then
        manny:say_line("/cnma005/")
    elseif arg2 == 6 then
        manny:say_line("/cnma006/")
    elseif arg2 == 7 then
        manny:say_line("/cnma007/")
    elseif arg2 == 8 then
        manny:say_line("/cnma008/")
    elseif arg2 == 9 then
        manny:say_line("/cnma009/")
    elseif arg2 == 10 then
        manny:say_line("/cnma010/")
    elseif arg2 == 11 then
        manny:say_line("/cnma011/")
    elseif arg2 == 12 then
        manny:say_line("/cnma012/")
    elseif arg2 == 13 then
        manny:say_line("/cnma013/")
    elseif arg2 == 14 then
        manny:say_line("/cnma014/")
    elseif arg2 == 15 then
        manny:say_line("/cnma015/")
    elseif arg2 == 16 then
        manny:say_line("/cnma016/")
    elseif arg2 == 17 then
        manny:say_line("/cnma017/")
    elseif arg2 == 18 then
        manny:say_line("/cnma018/")
    elseif arg2 == 19 then
        manny:say_line("/cnma019/")
    elseif arg2 == 20 then
        manny:say_line("/cnma020/")
    elseif arg2 == 21 then
        manny:say_line("/cnma021/")
    elseif arg2 == 22 then
        manny:say_line("/cnma022/")
    elseif arg2 == 23 then
        manny:say_line("/cnma023/")
    elseif arg2 == 24 then
        manny:say_line("/cnma024/")
    elseif arg2 == 25 then
        manny:say_line("/cnma025/")
    elseif arg2 == 26 then
        manny:say_line("/cnma026/")
    elseif arg2 == 27 then
        manny:say_line("/cnma027/")
    elseif arg2 == 28 then
        manny:say_line("/cnma028/")
    elseif arg2 == 29 then
        manny:say_line("/cnma029/")
    elseif arg2 == 30 then
        manny:say_line("/cnma030/")
    elseif arg2 == 31 then
        manny:say_line("/cnma031/")
    elseif arg2 == 32 then
        manny:say_line("/cnma032/")
    elseif arg2 == 33 then
        manny:say_line("/cnma033/")
    elseif arg2 == 34 then
        manny:say_line("/cnma034/")
    elseif arg2 == 35 then
        manny:say_line("/cnma035/")
    elseif arg2 == 36 then
        manny:say_line("/cnma036/")
    end
end
croupier.say_english_number = function(arg1, arg2) -- line 75
    if arg2 == 0 then
        croupier:say_line("/cncr037/")
    elseif arg2 == 1 then
        croupier:say_line("/cncr038/")
    elseif arg2 == 2 then
        croupier:say_line("/cncr039/")
    elseif arg2 == 3 then
        croupier:say_line("/cncr040/")
    elseif arg2 == 4 then
        croupier:say_line("/cncr041/")
    elseif arg2 == 5 then
        croupier:say_line("/cncr042/")
    elseif arg2 == 6 then
        croupier:say_line("/cncr043/")
    elseif arg2 == 7 then
        croupier:say_line("/cncr044/")
    elseif arg2 == 8 then
        croupier:say_line("/cncr045/")
    elseif arg2 == 9 then
        croupier:say_line("/cncr046/")
    elseif arg2 == 10 then
        croupier:say_line("/cncr047/")
    elseif arg2 == 11 then
        croupier:say_line("/cncr048/")
    elseif arg2 == 12 then
        croupier:say_line("/cncr049/")
    elseif arg2 == 13 then
        croupier:say_line("/cncr050/")
    elseif arg2 == 14 then
        croupier:say_line("/cncr051/")
    elseif arg2 == 15 then
        croupier:say_line("/cncr052/")
    elseif arg2 == 16 then
        croupier:say_line("/cncr053/")
    elseif arg2 == 17 then
        croupier:say_line("/cncr054/")
    elseif arg2 == 18 then
        croupier:say_line("/cncr055/")
    elseif arg2 == 19 then
        croupier:say_line("/cncr056/")
    elseif arg2 == 20 then
        croupier:say_line("/cncr057/")
    elseif arg2 == 21 then
        croupier:say_line("/cncr058/")
    elseif arg2 == 22 then
        croupier:say_line("/cncr059/")
    elseif arg2 == 23 then
        croupier:say_line("/cncr060/")
    elseif arg2 == 24 then
        croupier:say_line("/cncr061/")
    elseif arg2 == 25 then
        croupier:say_line("/cncr062/")
    elseif arg2 == 26 then
        croupier:say_line("/cncr063/")
    elseif arg2 == 27 then
        croupier:say_line("/cncr064/")
    elseif arg2 == 28 then
        croupier:say_line("/cncr065/")
    elseif arg2 == 29 then
        croupier:say_line("/cncr066/")
    elseif arg2 == 30 then
        croupier:say_line("/cncr067/")
    elseif arg2 == 31 then
        croupier:say_line("/cncr068/")
    elseif arg2 == 32 then
        croupier:say_line("/cncr069/")
    elseif arg2 == 33 then
        croupier:say_line("/cncr070/")
    elseif arg2 == 34 then
        croupier:say_line("/cncr071/")
    elseif arg2 == 35 then
        croupier:say_line("/cncr072/")
    elseif arg2 == 36 then
        croupier:say_line("/cncr073/")
    end
end
croupier.say_french_number = function(arg1, arg2) -- line 116
    if arg2 == 0 then
        croupier:say_line("/cncr074/")
    elseif arg2 == 1 then
        croupier:say_line("/cncr075/")
    elseif arg2 == 2 then
        croupier:say_line("/cncr076/")
    elseif arg2 == 3 then
        croupier:say_line("/cncr077/")
    elseif arg2 == 4 then
        croupier:say_line("/cncr078/")
    elseif arg2 == 5 then
        croupier:say_line("/cncr079/")
    elseif arg2 == 6 then
        croupier:say_line("/cncr080/")
    elseif arg2 == 7 then
        croupier:say_line("/cncr081/")
    elseif arg2 == 8 then
        croupier:say_line("/cncr082/")
    elseif arg2 == 9 then
        croupier:say_line("/cncr083/")
    elseif arg2 == 10 then
        croupier:say_line("/cncr084/")
    elseif arg2 == 11 then
        croupier:say_line("/cncr085/")
    elseif arg2 == 12 then
        croupier:say_line("/cncr086/")
    elseif arg2 == 13 then
        croupier:say_line("/cncr087/")
    elseif arg2 == 14 then
        croupier:say_line("/cncr088/")
    elseif arg2 == 15 then
        croupier:say_line("/cncr089/")
    elseif arg2 == 16 then
        croupier:say_line("/cncr090/")
    elseif arg2 == 17 then
        croupier:say_line("/cncr091/")
    elseif arg2 == 18 then
        croupier:say_line("/cncr092/")
    elseif arg2 == 19 then
        croupier:say_line("/cncr093/")
    elseif arg2 == 20 then
        croupier:say_line("/cncr094/")
    elseif arg2 == 21 then
        croupier:say_line("/cncr095/")
    elseif arg2 == 22 then
        croupier:say_line("/cncr096/")
    elseif arg2 == 23 then
        croupier:say_line("/cncr097/")
    elseif arg2 == 24 then
        croupier:say_line("/cncr098/")
    elseif arg2 == 25 then
        croupier:say_line("/cncr099/")
    elseif arg2 == 26 then
        croupier:say_line("/cncr100/")
    elseif arg2 == 27 then
        croupier:say_line("/cncr101/")
    elseif arg2 == 28 then
        croupier:say_line("/cncr102/")
    elseif arg2 == 29 then
        croupier:say_line("/cncr103/")
    elseif arg2 == 30 then
        croupier:say_line("/cncr104/")
    elseif arg2 == 31 then
        croupier:say_line("/cncr105/")
    elseif arg2 == 32 then
        croupier:say_line("/cncr106/")
    elseif arg2 == 33 then
        croupier:say_line("/cncr107/")
    elseif arg2 == 34 then
        croupier:say_line("/cncr108/")
    elseif arg2 == 35 then
        croupier:say_line("/cncr109/")
    elseif arg2 == 36 then
        croupier:say_line("/cncr110/")
    end
end
croupier.say_line = function(arg1, arg2) -- line 157
    local local1
    local local2
    if not cn.pause_spinning then
        if system.currentSet == cn and cn:current_setup() == cn_rulws then
            Actor.say_line(arg1, arg2, { background = TRUE, volume = 100 })
        elseif system.currentSet == cf and cf:current_setup() == cf_pnlcu then
            local1 = tostring(strsub(arg2, 1, 8) .. "a" .. strsub(arg2, 9, strlen(arg2)))
            local1 = arg2
            Actor.say_line(arg1, local1, { background = TRUE })
        end
    end
end
croupier.say_line_manny = function(arg1, arg2) -- line 180
    Actor.say_line(arg1, arg2, { background = TRUE, volume = 100 })
end
croupier.turn_to_table = function(arg1, arg2) -- line 184
    croupier:set_turn_rate(15)
    if system.currentSet == cn then
        if arg2 == rtable1 then
            croupier:setrot(0, 0, 0, TRUE)
        elseif arg2 == rtable2 then
            croupier:setrot(0, 260, 0, TRUE)
        else
            croupier:setrot(0, 120, 0, TRUE)
        end
        while croupier:is_turning() and system.currentSet == cn do
            break_here()
        end
    end
end
bogen.say_line = function(arg1, arg2) -- line 202
    local local1
    if system.currentSet == cn and cn:current_setup() == cn_rulws then
        SayLine(arg1.hActor, arg2, TRUE)
    elseif system.currentSet == cf and cf:current_setup() == cf_pnlcu then
        local1 = tostring(strsub(arg2, 1, 8) .. "a" .. strsub(arg2, 9, strlen(arg2)))
        local1 = arg2
        SayLine(arg1.hActor, local1, TRUE)
    end
end
croupier.say_color_french = function(arg1, arg2) -- line 215
    local local1 = croupier:pick_color(arg2)
    if local1 == "red" then
        croupier:say_line("/cncr111/")
    elseif local1 == "black" then
        croupier:say_line("/cncr112/")
    end
end
croupier.say_color_english = function(arg1, arg2) -- line 225
    local local1 = croupier:pick_color(arg2)
    if local1 == "red" then
        croupier:say_line("/cncr113/")
    elseif local1 == "black" then
        croupier:say_line("/cncr114/")
    end
end
croupier.pick_color = function(arg1, arg2) -- line 235
    if arg2 == 0 then
        return "zero"
    elseif arg2 == 1 or arg2 == 3 or arg2 == 5 or arg2 == 7 or arg2 == 9 or arg2 == 12 or arg2 == 14 or arg2 == 16 or arg2 == 18 or arg2 == 19 or arg2 == 21 or arg2 == 23 or arg2 == 25 or arg2 == 27 or arg2 == 30 or arg2 == 32 or arg2 == 34 or arg2 == 36 then
        return "red"
    else
        return "black"
    end
end
croupier.even_odd_manque_passe = function(arg1, arg2) -- line 263
    if floor(mod(arg2, 2)) == 0 then
        if arg2 > 18 then
            croupier:say_line("/cncr115/")
        else
            croupier:say_line("/cncr116/")
        end
    elseif arg2 > 18 then
        croupier:say_line("/cncr117/")
    else
        croupier:say_line("/cncr118/")
    end
end
cn.BET = 0
cn.SPIN = 1
cn.WIN = 2
cn.bets = { }
cn.bets[1] = "red"
cn.bets[2] = "black"
cn.bets[3] = "zero"
cn.bets[4] = "num"
cn.casino_patrons = function(arg1, arg2) -- line 290
    local local1 = { }
    local local2 = { }
    local local3
    local2[1] = turbanman
    local2[2] = caneman
    local2[3] = fatlady
    if bogen.pissed and not cn.bogens_in_the_house_again then
        if arg2 == rtable1 then
            local1[1] = turbanman
        elseif arg2 == rtable2 then
            local1[1] = caneman
        elseif arg2 == rtable3 then
            local1[1] = fatlady
        end
    elseif arg2 == rtable1 then
        local1[1] = turbanman
    elseif arg2 == rtable3 then
        local1[1] = caneman
        local1[2] = fatlady
    end
    local3 = 1
    while local1[local3] do
        local1[local3]:thaw(TRUE)
        if arg1 == cn.BET then
            local1[local3].bet = pick_from_nonweighted_table(cn.bets)
            if local1[local3].bet == "num" then
                local1[local3].bet = rndint(0, 36)
            end
            if system.currentSet == cn and cn:current_setup() ~= cn_cchms then
                if rnd() then
                    local1[local3]:play_chore(1)
                else
                    local1[local3]:play_chore(2)
                end
            end
        elseif arg1 == cn.SPIN and system.currentSet == cn and cn:current_setup() ~= cn_cchms then
            local1[local3]:play_chore(3)
        elseif arg1 == cn.WIN and system.currentSet == cn and cn:current_setup() ~= cn_cchms then
            local1[local3]:play_chore(4)
        elseif system.currentSet ~= cn then
            sleep_for(2000)
        end
        if system.currentSet == cn and cn:current_setup() ~= cn_cchms then
            local1[local3]:wait_for_chore()
            local1[local3]:freeze()
        end
        local3 = local3 + 1
    end
end
determine_winner = function(arg1) -- line 345
    local local1 = { }
    local local2 = { }
    local local3
    local local4
    local2[1] = turbanman
    local2[2] = caneman
    local2[3] = fatlady
    if bogen.pissed and not cn.bogens_in_the_house_again then
        if arg1 == rtable1 then
            local1[1] = turbanman
        elseif arg1 == rtable2 then
            local1[1] = caneman
        elseif arg1 == rtable3 then
            local1[1] = fatlady
        end
    elseif arg1 == rtable1 then
        local1[1] = turbanman
    elseif arg1 == rtable3 then
        local1[1] = caneman
        local1[2] = fatlady
    end
    local3 = 1
    while local1[local3] do
        if type(local1[local3].bet) == "number" then
            if local1[local3].bet == arg1.current_value then
                return TRUE
            end
        else
            local4 = croupier:pick_color(arg1.current_value)
            if local1[local3].bet == local4 then
                return TRUE
            end
        end
        local3 = local3 + 1
    end
    return FALSE
end
roulette_tables = { }
current_roulette_table = nil
gambling_table_number = nil
cn.roulette_game_simulator = function() -- line 394
    local local1, local2
    local local3
    local local4
    local local5 = FALSE
    if not rtable1 then
        rtable1 = Roulette:create("table 1")
        rtable1.currrent_value = rndint(0, 36)
        rtable2 = Roulette:create("table 2")
        rtable2.currrent_value = rndint(0, 36)
        rtable3 = Roulette:create("table 3")
        rtable3.currrent_value = rndint(0, 36)
        roulette_tables[1] = rtable1
        roulette_tables[2] = rtable2
        roulette_tables[3] = rtable3
        gambling_table_number, local3 = next(roulette_tables, nil)
    end
    if system.currentSet == cn then
        rtable1:init_actor()
        rtable2:init_actor()
        rtable3:init_actor()
        turbanman:freeze()
        caneman:freeze()
        fatlady:freeze()
        rtable1.actor:setpos(-0.29497501, -0.16027699, 0.3238)
        rtable2.actor:setpos(0.0019249, -0.67287701, 0.3238)
        rtable3.actor:setpos(-0.58057499, -0.66287702, 0.3238)
        bogen_in_cn = TRUE
        rtable2:magnetize(2)
    end
    if not current_roulette_table then
        bogen_table = rtable2
        current_roulette_table = rtable1
        local4 = rtable3
        rtable1:spin()
        rtable2:spin()
        rtable3:spin()
    end
    sleep_for(1000)
    while 1 do
        if current_roulette_table == bogen_table and bogen_in_cn then
            current_roulette_table:magnetize(2)
        end
        local2 = start_script(current_roulette_table.stop, current_roulette_table)
        if system.currentSet == cn then
            local1 = start_script(croupier.turn_to_table, croupier, current_roulette_table)
            wait_for_script(local1)
        else
            sleep_for(3000)
        end
        wait_for_script(local2)
        if system.currentSet == cn then
        end
        start_script(cn.casino_patrons, cn.SPIN, local4)
        if current_roulette_table == bogen_table and bogen_in_cn and current_roulette_table.current_value == 2 then
            if system.currentSet == cn then
                croupier:thaw(TRUE)
            end
            croupier:say_line("/cncr125/")
            wait_for_message()
            croupier:say_line("/cncr126/")
            wait_for_message()
            croupier:say_line("/cncr127/")
            if system.currentSet == cn and cn:current_setup() ~= cn_cchms then
                croupier:play_chore(1)
                croupier:wait_for_chore()
            end
            wait_for_message()
            if system.currentSet == cn then
            end
            bogen:say_line(pick_one_of({ "/cnbo128/", "/cnbo129/", "/cnbo130/", "/cnbo131/", "/cnbo132/", "/cnbo133/", "/cnbo134/" }))
            wait_for_message()
        else
            if system.currentSet == cn then
                croupier:thaw(TRUE)
            end
            croupier:say_line("/cncr135/")
            wait_for_message()
            croupier:say_french_number(current_roulette_table.current_value)
            wait_for_message()
            croupier:say_color_french(current_roulette_table.current_value)
            wait_for_message()
            croupier:even_odd_manque_passe(current_roulette_table.current_value)
            wait_for_message()
            croupier:say_english_number(current_roulette_table.current_value)
            wait_for_message()
            croupier:say_color_english(current_roulette_table.current_value)
            wait_for_message()
            if current_roulette_table == bogen_table and bogen_in_cn then
                if not bogen.pissed then
                    local1 = start_script(cf.piss_off_bogen)
                    wait_for_script(local1)
                    bogen:free()
                    bogen_in_cn = FALSE
                else
                    start_script(cf.really_piss_off_bogen)
                    return TRUE
                end
            else
                local5 = determine_winner(current_roulette_table)
                if local5 then
                    local5 = FALSE
                    croupier:say_line("/cncr136/")
                    wait_for_message()
                    croupier:say_line("/cncr137/")
                    wait_for_message()
                end
                if system.currentSet == cn then
                end
                local1 = start_script(cn.casino_patrons, cn.WIN, current_roulette_table)
                wait_for_script(local1)
            end
        end
        sleep_for(1000)
        if system.currentSet == cn then
            croupier:thaw(TRUE)
        end
        croupier:say_line("/cncr119/")
        wait_for_message()
        croupier:say_line("/cncr120/")
        wait_for_message()
        if system.currentSet == cn then
        end
        local1 = start_script(cn.casino_patrons, cn.BET, current_roulette_table)
        wait_for_script(local1)
        if system.currentSet == cn then
            croupier:thaw(TRUE)
        end
        croupier:say_line("/cncr121/")
        wait_for_message()
        croupier:say_line("/cncr122/")
        wait_for_message()
        croupier:say_line("/cncr123/")
        wait_for_message()
        croupier:say_line("/cncr124/")
        croupier:wait_for_message()
        if system.currentSet == cn and cn:current_setup() ~= cn_cchms then
            croupier:play_chore(1)
            sleep_for(600)
            start_sfx("cnRoulet.imu")
            sleep_for(1008)
        end
        current_roulette_table:spin()
        local4 = current_roulette_table
        gambling_table_number, local3 = next(roulette_tables, gambling_table_number)
        if not local3 then
            gambling_table_number, local3 = next(roulette_tables, nil)
        end
        current_roulette_table = local3
        if system.currentSet == cn then
            croupier:wait_for_chore()
        end
    end
end
cn.charlie_idles = function() -- line 570
    local local1
    charlie.stop_idle = FALSE
    charlie:stop_chore(cc_booth_idles_sit_pose)
    while not charlie.stop_idle do
        charlie:play_chore(cc_booth_idles_smoke)
        charlie:wait_for_chore()
        local1 = rndint(10, 30)
        repeat
            sleep_for(10)
            local1 = local1 - 1
        until local1 < 0 or charlie.stop_idle
    end
end
cn.set_up_actors = function(arg1) -- line 587
    if bogen.pissed then
        if cn.bogens_in_the_house_again then
            cn.bogen_obj:make_touchable()
            bogen:set_costume("bogen.cos")
            bogen:put_in_set(cn)
            bogen:setpos(0.370565, -0.611363, 0)
            bogen:set_mumble_chore(bogen_mumble)
            bogen:set_talk_chore(1, bogen_stop_talk)
            bogen:set_talk_chore(2, bogen_a)
            bogen:set_talk_chore(3, bogen_c)
            bogen:set_talk_chore(4, bogen_e)
            bogen:set_talk_chore(5, bogen_f)
            bogen:set_talk_chore(6, bogen_l)
            bogen:set_talk_chore(7, bogen_m)
            bogen:set_talk_chore(8, bogen_o)
            bogen:set_talk_chore(9, bogen_t)
            bogen:set_talk_chore(10, bogen_u)
            start_script(bogen.new_run_idle, bogen, "stand", bogen.idle_table)
            bogen_in_cn = TRUE
            rtable2:magnetize(2)
        else
            cn.bogen_obj:make_untouchable()
        end
    else
        bogen_in_cn = TRUE
        if not bogen.hCos then
            bogen.hCos = "bogen.cos"
        end
        bogen:set_costume(bogen.hCos)
        bogen:put_in_set(cn)
        bogen:setpos(0.370565, -0.611363, 0)
        bogen:setrot(0, 160, 0)
        bogen:set_mumble_chore(bogen_mumble)
        bogen:set_talk_chore(1, bogen_stop_talk)
        bogen:set_talk_chore(2, bogen_a)
        bogen:set_talk_chore(3, bogen_c)
        bogen:set_talk_chore(4, bogen_e)
        bogen:set_talk_chore(5, bogen_f)
        bogen:set_talk_chore(6, bogen_l)
        bogen:set_talk_chore(7, bogen_m)
        bogen:set_talk_chore(8, bogen_o)
        bogen:set_talk_chore(9, bogen_t)
        bogen:set_talk_chore(10, bogen_u)
        start_script(bogen.new_run_idle, bogen, "stand", bogen.idle_table, "bogen.cos")
    end
    if not tix_printer then
        tix_printer = Actor:create(nil, nil, nil, "printer")
    end
    if cn.printer.owner ~= manny then
        tix_printer:set_costume("mc_booth_idles.cos")
        tix_printer:setpos(0.863729, -0.142364, 0.00900003)
        tix_printer:setrot(0, 0.29, 0)
        tix_printer:set_visibility(FALSE)
        tix_printer:put_in_set(cn)
        tix_printer:play_chore(mc_booth_idles_printer_only)
    end
    croupier:set_costume("spinner.cos")
    croupier:set_mumble_chore(spinner_mumble)
    croupier:set_talk_chore(1, spinner_stop_talk)
    croupier:set_talk_chore(2, spinner_a)
    croupier:set_talk_chore(3, spinner_c)
    croupier:set_talk_chore(4, spinner_e)
    croupier:set_talk_chore(5, spinner_f)
    croupier:set_talk_chore(6, spinner_l)
    croupier:set_talk_chore(7, spinner_m)
    croupier:set_talk_chore(8, spinner_o)
    croupier:set_talk_chore(9, spinner_t)
    croupier:set_talk_chore(10, spinner_u)
    croupier:set_head(3, 4, 5, 200, 28, 80)
    croupier:set_turn_chores(spinner_swvl_left, spinner_swvl_right)
    croupier:set_turn_rate(15)
    croupier:put_in_set(cn)
    croupier:follow_boxes()
    croupier:setpos(-0.199975, -0.468877, 0)
    if hh.union_card.owner == manny then
        cn.charlie_obj:make_untouchable()
    else
        charlie:set_costume("ccharlie.cos")
        charlie:set_mumble_chore(ccharlie_mumble)
        charlie:set_talk_chore(1, ccharlie_no_talk)
        charlie:set_talk_chore(2, ccharlie_a)
        charlie:set_talk_chore(3, ccharlie_c)
        charlie:set_talk_chore(4, ccharlie_e)
        charlie:set_talk_chore(5, ccharlie_f)
        charlie:set_talk_chore(6, ccharlie_l)
        charlie:set_talk_chore(7, ccharlie_m)
        charlie:set_talk_chore(8, ccharlie_o)
        charlie:set_talk_chore(9, ccharlie_t)
        charlie:set_talk_chore(10, ccharlie_u)
        charlie:push_costume("cc_booth_idles.cos")
        charlie:put_in_set(cn)
        charlie:setpos(0.917252, 0.259107, -0.0515)
        charlie:setrot(0, 180, 0)
        start_script(cn.charlie_idles)
    end
    if not turbanman then
        turbanman = Actor:create(nil, nil, nil, "turbanman")
        caneman = Actor:create(nil, nil, nil, "caneman")
        fatlady = Actor:create(nil, nil, nil, "fatlady")
    end
    turbanman:set_costume("turbanman.cos")
    turbanman:put_in_set(cn)
    turbanman:setpos(-0.510075, 0.124623, 0)
    turbanman:setrot(0, 220, 0)
    turbanman:play_chore(turbanman_base_pose)
    caneman:set_costume("caneman.cos")
    caneman:put_in_set(cn)
    if bogen.pissed and not cn.bogens_in_the_house_again then
        caneman:setpos(-0.0635751, -0.992476, 0)
        caneman:setrot(0, 300, 0)
    else
        caneman:setpos(-0.695394, -0.293976, 0)
        caneman:setrot(0, 180, 0)
    end
    caneman:play_chore(caneman_base_pose)
    fatlady:set_costume("fatlady.cos")
    fatlady:put_in_set(cn)
    fatlady:setpos(-0.915694, -0.588876, 0)
    fatlady:setrot(0, 215, 0)
    fatlady:play_chore(fatlady_base_pose)
    if rtable1 then
        rtable1:init_actor()
        rtable2:init_actor()
        rtable3:init_actor()
        rtable1.actor:setpos(-0.294975, -0.160277, 0.3238)
        rtable2.actor:setpos(0.0019249, -0.672877, 0.3238)
        rtable3.actor:setpos(-0.580575, -0.662877, 0.3238)
        if current_roulette_table == rtable1 then
            croupier:setrot(0, 0, 0)
        elseif current_roulette_table == rtable2 then
            croupier:setrot(0, 260, 0)
        else
            croupier:setrot(0, 120, 0)
        end
    end
end
cn.return_bogen = function() -- line 743
    made_vacancy = TRUE
    hh.union_card.owner = manny
    dd.strike_on = TRUE
end
cn.enter = function(arg1) -- line 749
    cn.pause_spinning = FALSE
    if made_vacancy and hh.union_card.owner == manny and dd.strike_on then
        cn.bogens_in_the_house_again = TRUE
    end
    if not find_script(cn.roulette_game_simulator) then
        start_script(cn.roulette_game_simulator)
    end
    cn:set_up_actors()
    preload_sfx("cnRoulet.imu")
    preload_sfx("cnRouStp.wav")
end
cn.exit = function(arg1) -- line 764
    bogen:free()
    croupier:free()
    charlie:free()
    caneman:free()
    turbanman:free()
    fatlady:free()
    rtable1.actor:free()
    rtable2.actor:free()
    rtable3.actor:free()
    stop_script(cn.charlie_idles)
    stop_sound("cnRoulet.imu")
    stop_sound("cnRouStp.wav")
    tix_printer:free()
end
cn.charlie_obj = Object:create(cn, "Charlie", 0.85364002, 0.21664301, 0.38, { range = 0.80000001 })
cn.charlie_obj.use_pnt_x = 0.92835897
cn.charlie_obj.use_pnt_y = -0.266837
cn.charlie_obj.use_pnt_z = 0
cn.charlie_obj.use_rot_x = 0
cn.charlie_obj.use_rot_y = 378.05701
cn.charlie_obj.use_rot_z = 0
cn.charlie_obj.lookAt = function(arg1) -- line 792
    manny:say_line("/cnma138/")
end
cn.charlie_obj.pickUp = function(arg1) -- line 796
    manny:say_line("/cnma139/")
end
cn.charlie_obj.use = function(arg1) -- line 800
    if arg1.talked_out then
        manny:say_line("/drma001/")
    else
        START_CUT_SCENE()
        charlie.stop_idle = TRUE
        manny:walkto_object(arg1)
        manny:wait_for_actor()
        wait_for_script(cn.charlie_idles)
        Dialog:run("ch1", "dlg_charlie.lua")
        END_CUT_SCENE()
    end
end
cn.printer = Object:create(cn, "printer", 0, 0, 0, { range = 0 })
cn.printer.lookAt = function(arg1) -- line 818
    if tb.tried_ticket then
        manny:say_line("/cnma140/")
    else
        manny:say_line("/cnma141/")
    end
end
cn.printer.use = function(arg1) -- line 826
    if cn.ticket.owner == manny then
        START_CUT_SCENE()
        shrinkBoxesEnabled = FALSE
        open_inventory(TRUE, TRUE)
        manny.is_holding = cn.ticket
        close_inventory()
        manny:stop_chore(manny.hold_chore, "mc.cos")
        manny:stop_chore(mc_hold, "mc.cos")
        manny.is_holding = nil
        cn.ticket:free()
        manny:play_chore(mc_toss_stub, "mc.cos")
        manny:wait_for_chore()
        manny:fade_out_chore(mc_toss_stub, "mc.cos", 300)
        open_inventory(TRUE, TRUE)
        manny.is_holding = cn.printer
        close_inventory()
        if GlobalShrinkEnabled then
            shrinkBoxesEnabled = TRUE
            shrink_box_toggle()
        end
        END_CUT_SCENE()
    end
    inventory_save_set = system.currentSet
    inventory_save_setup = system.currentSet:current_setup()
    inventory_save_pos = manny:getpos()
    inventory_save_handler = system.buttonHandler
    system.buttonHandler = tpButtonHandler
    tp:switch_to_set()
end
cn.printer.default_response = function(arg1) -- line 858
    if tb.tried_ticket then
        manny:say_line("/cnma142/")
    else
        manny:say_line("/cnma143/")
    end
end
cn.ticket = Object:create(cn, "betting stub", 0, 0, 0, { range = 0 })
cn.ticket.string_name = "ticket"
cn.ticket.temp_id_number = 0
cn.ticket.wav = "getCard.wav"
cn.ticket.lookAt = function(arg1) -- line 871
    START_CUT_SCENE()
    manny:say_line("/cnma144/")
    manny:wait_for_message()
    if arg1.day == 1 then
        manny:say_line("/cnma145/")
    elseif arg1.day == 2 then
        manny:say_line("/cnma146/")
    elseif arg1.day == 3 then
        manny:say_line("/cnma147/")
    elseif arg1.day == 4 then
        manny:say_line("/cnma148/")
    elseif arg1.day == 5 then
        manny:say_line("/cnma149/")
    elseif arg1.day == 6 then
        manny:say_line("/cnma150/")
    elseif arg1.day == 7 then
        manny:say_line("/cnma151/")
    end
    manny:wait_for_message()
    manny:say_line("/cnma152/")
    manny:wait_for_message()
    manny:say_number(arg1.week)
    manny:wait_for_message()
    manny:say_line("/cnma153/")
    manny:wait_for_message()
    manny:say_number(arg1.race)
    END_CUT_SCENE()
end
cn.ticket.use = cn.ticket.lookAt
cn.pass = Object:create(cn, "V.I.P. pass", 0, 0, 0, { range = 0 })
cn.pass.string_name = "pass"
cn.pass.wav = "getCard.wav"
cn.pass.lookAt = function(arg1) -- line 900
    soft_script()
    manny:say_line("/cnma154/")
    wait_for_message()
    manny:say_line("/bima075/")
end
cn.pass.use = function(arg1) -- line 908
    manny:say_line("/cnma155/")
end
cn.pass.default_response = cn.pass.use
cn.croupier_obj = Object:create(cn, "Roulette croupier", -0.22641701, -0.450957, 0.41999999, { range = 0.60000002 })
cn.croupier_obj.use_pnt_x = 0.063582897
cn.croupier_obj.use_pnt_y = -0.30095699
cn.croupier_obj.use_pnt_z = 0
cn.croupier_obj.use_rot_x = 0
cn.croupier_obj.use_rot_y = -229.771
cn.croupier_obj.use_rot_z = 0
cn.croupier_obj.lookAt = function(arg1) -- line 922
    soft_script()
    manny:say_line("/cnma156/")
    wait_for_message()
    manny:say_line("/cnma157/")
end
cn.croupier_obj.use = function(arg1) -- line 929
    START_CUT_SCENE()
    cn.pause_spinning = TRUE
    manny:walkto_object(arg1)
    croupier:wait_for_message()
    manny:say_line("/cnma158/")
    wait_for_message()
    croupier:head_look_at_manny()
    if bogen.pissed then
        if not cn.bogens_in_the_house_again then
            croupier:say_line_manny("/cncr159/")
            wait_for_message()
            manny:say_line("/cnma160/")
            wait_for_message()
            croupier:say_line_manny("/cncr161/")
        else
            croupier:say_line_manny("/cncr162/")
            wait_for_message()
            croupier:say_line_manny("/cncr163/")
        end
    else
        croupier:say_line_manny("/cncr164/")
    end
    croupier:head_look_at(nil)
    wait_for_message()
    sleep_for(500)
    cn.pause_spinning = FALSE
    END_CUT_SCENE()
end
cn.gamblers = Object:create(cn, "gamblers", -0.531515, 0.110031, 0.38999999, { range = 0.80000001 })
cn.gamblers.use_pnt_x = 0.0084851598
cn.gamblers.use_pnt_y = 0.110031
cn.gamblers.use_pnt_z = 0
cn.gamblers.use_rot_x = 0
cn.gamblers.use_rot_y = 129.875
cn.gamblers.use_rot_z = 0
cn.gamblers.lookAt = function(arg1) -- line 969
    manny:say_line("/cnma165/")
    wait_for_message()
    manny:say_line("/cnma166/")
end
cn.gamblers.pickUp = function(arg1) -- line 975
    manny:say_line("/cnma167/")
end
cn.gamblers.use = function(arg1) -- line 979
    manny:say_line("/cnma168/")
end
cn.bogen_obj = Object:create(cn, "Bogen", 0.370565, -0.61136299, 0.34999999, { range = 0.60000002 })
cn.bogen_obj.use_pnt_x = 0.41056499
cn.bogen_obj.use_pnt_y = -0.30136299
cn.bogen_obj.use_pnt_z = 0
cn.bogen_obj.use_rot_x = 0
cn.bogen_obj.use_rot_y = 185.45
cn.bogen_obj.use_rot_z = 0
cn.bogen_obj.lookAt = function(arg1) -- line 991
    soft_script()
    manny:say_line("/cnma169/")
    wait_for_message()
    manny:say_line("/cnma170/")
end
cn.bogen_obj.pickUp = cn.gamblers.pickUp
cn.bogen_obj.use = function(arg1) -- line 1000
    START_CUT_SCENE()
    if cn.bogens_in_the_house_again and bogen.pissed then
        manny:say_line("/cnma171/")
        wait_for_message()
        bogen:say_line("/cnbo172/")
    else
        manny:say_line("/cnma173/")
        wait_for_message()
        bogen:say_line("/cnbo174/")
    end
    END_CUT_SCENE()
end
cn.bogen_obj.use_key = function(arg1) -- line 1015
    soft_script()
    manny:say_line("/slma205/")
    manny:wait_for_message()
    manny:say_line("/slma206/")
end
cn.ci_door = Object:create(cn, "/cntx249/door", -0.58838499, 1.69042, 0.63999999, { range = 0.60000002 })
cn.ci_door.use_pnt_x = -0.640468
cn.ci_door.use_pnt_y = 0.35423601
cn.ci_door.use_pnt_z = 0
cn.ci_door.use_rot_x = 0
cn.ci_door.use_rot_y = 2.3106101
cn.ci_door.use_rot_z = 0
cn.ci_door.out_pnt_x = -0.62948501
cn.ci_door.out_pnt_y = 1.61693
cn.ci_door.out_pnt_z = 0.1
cn.ci_door.out_rot_x = 0
cn.ci_door.out_rot_y = 8.0328197
cn.ci_door.out_rot_z = 0
cn.ci_box = cn.ci_door
cn.ci_door.walkOut = function(arg1) -- line 1044
    START_CUT_SCENE()
    manny:walkto_object(cn.ci_door, TRUE)
    manny:wait_for_actor()
    END_CUT_SCENE()
    ci:come_out_door(ci.cn_door)
end
coin_pile_show = 0
coin_pile_hide = 1
CheckFirstTime("_colors.lua")
Black = MakeColor(0, 0, 0)
Grey = MakeColor(128, 128, 128)
White = MakeColor(255, 255, 255)
Red = MakeColor(255, 0, 0)
Yellow = MakeColor(255, 255, 0)
Green = MakeColor(0, 255, 0)
Blue = MakeColor(0, 0, 255)
Orange = MakeColor(239, 109, 0)
DarkRed = MakeColor(128, 0, 0)
DarkGreen = MakeColor(0, 128, 0)
DarkYellow = MakeColor(128, 128, 0)
DarkBlue = MakeColor(0, 0, 128)
Purple = MakeColor(128, 0, 128)
Aqua = MakeColor(0, 128, 128)
LightRed = MakeColor(192, 0, 0)
LightYellow = MakeColor(192, 220, 192)
LightBlue = MakeColor(166, 202, 240)
LightGrey = MakeColor(180, 180, 180)
DarkGrey = MakeColor(100, 100, 100)
Magenta = MakeColor(255, 0, 255)
Cyan = MakeColor(0, 255, 255)
PrintDebug("Colors initialized.\n")
CheckFirstTime("co.lua")
co = Set:create("co.set", "Copal's Office", { co_winws = 0, co_dskha = 1, co_comcu = 2, co_dskrv = 3, overhead = 4 })
co.shrinkable = 0.019
copal = Actor:create(nil, nil, nil, "/cotx001/")
copal:set_talk_color(Blue)
copal:set_visibility(FALSE)
co.set_up_actors = function(arg1) -- line 20
end
co.enter = function(arg1) -- line 32
    co:set_up_actors()
    SetShadowColor(15, 15, 15)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 30)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
end
co.exit = function(arg1) -- line 45
    KillActorShadows(manny.hActor)
    copal:free()
end
co.camerachange = function(arg1, arg2, arg3) -- line 51
    if arg3 ~= co_comcu and co.computer.interface_active then
        co:current_setup(co_comcu)
    end
end
co.computer = Object:create(co, "/cotx002/computer", 0.169416, 2.6942501, 0.40000001, { range = 1 })
co.computer.use_pnt_x = 0.48500001
co.computer.use_pnt_y = 2.7030001
co.computer.use_pnt_z = 0
co.computer.use_rot_x = 0
co.computer.use_rot_y = 89.369904
co.computer.use_rot_z = 0
co.computer.set_to_sign = FALSE
co.computer.auto_response = 3
co.computer.choices = { }
co.computer.choices[0] = "/coco005/"
co.computer.choices[1] = "/coco006/"
co.computer.choices[2] = "/coco007/"
co.computer.choices[3] = "/coco008/"
co.computer.choices[4] = "/coco009/"
co.computer.choices[5] = "/coco010/"
co.computer.choices[6] = "/coco011/"
co.computer.choices[7] = "/coco012/"
co.computer.choices[8] = "/coco013/"
co.computer.choices[9] = "/coco014/"
co.computer.lookAt = function(arg1) -- line 87
    START_CUT_SCENE()
    co.computer.used = TRUE
    manny:say_line("/coma003/")
    manny:wait_for_message()
    END_CUT_SCENE()
end
co.computer.use = function(arg1) -- line 95
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    if not co.computer.used then
        co.computer.used = TRUE
        co.computer:lookAt()
        wait_for_message()
    end
    arg1:start_interface()
    END_CUT_SCENE()
end
co.computer.respond = function(arg1, arg2) -- line 118
    if not arg2 then
        arg2 = co.computer.auto_response
        copal:say_line(co.computer.choices[arg2 - 1])
    elseif arg2 >= 1 and arg2 <= 10 then
        copal:say_line(co.computer.choices[arg2 - 1])
    end
    copal:wait_for_message()
end
co.computer.top_line = 0
co.computer.max_lines = 6
co.computer.text = { x = 200, y = 150, line_height = 40 }
co.computer.selection = 0
co.computer.text_color_bright = MakeColor(200, 100, 0)
co.computer.hilite_color_bright = MakeColor(255, 150, 0)
co.computer.text_color_dim = MakeColor(150, 100, 0)
co.computer.hilite_color_dim = MakeColor(220, 115, 0)
co.computer.background_color = MakeColor(80, 50, 0)
co.computer.text_color = co.computer.text_color_bright
co.computer.hilite_color = co.computer.hilite_color_bright
co.computer.text_objs = { }
co.computer.check_objs = { }
co.computer.select_rect = { }
co.computer.start_interface = function(arg1) -- line 148
    local local1
    local local2
    local local3
    manny:push_costume("ma_note_type.cos")
    manny:play_chore(ma_note_type_to_type, "ma_note_type.cos")
    manny:wait_for_chore()
    manny:put_in_set(nil)
    system.buttonHandler = arg1
    local3 = { fgcolor = co.computer.text_color, font = computer_font }
    local3.x = co.computer.text.x
    local3.y = co.computer.text.y
    local3.width = co.computer.text.x + 280
    local3.height = co.computer.text.y + co.computer.text.line_height
    local1 = 0
    co.computer.select_rect.lines = 18
    while local1 < co.computer.select_rect.lines do
        co.computer.select_rect[local1] = DrawLine(local3.x - 25, local3.y - 5 + local1 * 2, local3.x + 280, local3.y - 5 + local1 * 2, { color = co.computer.background_color, layer = 1 })
        local1 = local1 + 1
    end
    co.computer.select_x = DrawPolygon({ local3.x - 20, local3.y, local3.x - 10, local3.y + 10, local3.x - 20, local3.y + 10, local3.x - 10, local3.y }, { color = local3.fgcolor })
    local1 = co.computer.auto_response - 1
    if local1 >= co.computer.top_line and local1 < co.computer.top_line + co.computer.max_lines then
        local2 = co.computer.text.y + co.computer.text.line_height * (local1 - co.computer.top_line)
    else
        local2 = 500
    end
    ChangePrimitive(co.computer.select_x, { y = local2 })
    local1 = 0
    while local1 < co.computer.max_lines do
        if local1 == co.computer.selection - co.computer.top_line then
            local3.fgcolor = co.computer.hilite_color
        else
            local3.fgcolor = co.computer.text_color
        end
        co.computer.text_objs[local1] = MakeTextObject(co.computer.choices[local1], local3)
        co.computer.check_objs[local1] = DrawRectangle(local3.x - 20, local3.y, local3.x - 10, local3.y + 10, { color = co.computer.text_color })
        local1 = local1 + 1
        local3.y = local3.y + co.computer.text.line_height
        local3.height = local3.height + co.computer.text.line_height
    end
    start_script(co.computer.flicker, co.computer)
    co.computer.scanline = { }
    co.computer.scanline.x = co.computer.text.x - 65
    co.computer.scanline.y = co.computer.text.y
    co.computer.scanline.obj = DrawRectangle(co.computer.scanline.x, co.computer.scanline.y, co.computer.scanline.x + 370, co.computer.scanline.y + 1, { color = MakeColor(20, 20, 20), filled = TRUE, layer = 1 })
    start_script(co.computer.cycle_scanline, co.computer)
    cameraman_disabled = TRUE
    co:current_setup(co_comcu)
    co.computer.interface_active = TRUE
    start_sfx("vectrex.imu")
end
co.computer.stop_interface = function(arg1) -- line 218
    local local1
    co.computer.interface_active = FALSE
    stop_script(co.computer.flicker)
    stop_script(co.computer.cycle_scanline)
    PurgePrimitiveQueue()
    local1 = 0
    while local1 < co.computer.max_lines do
        KillTextObject(co.computer.text_objs[local1])
        local1 = local1 + 1
    end
    system.buttonHandler = SampleButtonHandler
    stop_sound("vectrex.imu")
    START_CUT_SCENE()
    manny:put_in_set(co)
    manny:setpos(co.computer.use_pnt_x, co.computer.use_pnt_y, co.computer.use_pnt_z)
    manny:setrot(co.computer.use_rot_x, co.computer.use_rot_y, co.computer.use_rot_z)
    cameraman_disabled = FALSE
    co:current_setup(co_dskha)
    manny:play_chore(ma_note_type_type_to_home, "ma_note_type.cos")
    manny:wait_for_chore()
    manny:pop_costume()
    manny:play_chore(ms_rest, "ms.cos")
    END_CUT_SCENE()
    if co.computer.auto_response == 5 then
        co.computer.set_to_sign = TRUE
    else
        co.computer.set_to_sign = FALSE
    end
end
co.computer.cycle_scanline = function(arg1) -- line 255
    while TRUE do
        co.computer.scanline.y = co.computer.scanline.y + 4
        if co.computer.scanline.y > 400 then
            co.computer.scanline.y = co.computer.text.y
        end
        ChangePrimitive(co.computer.scanline.obj, { y = co.computer.scanline.y })
        break_here()
    end
end
co.computer.flicker = function(arg1) -- line 266
    local local1
    while TRUE do
        if co.computer.text_color == co.computer.text_color_bright then
            co.computer.text_color = co.computer.text_color_dim
            co.computer.hilite_color = co.computer.hilite_color_dim
        else
            co.computer.text_color = co.computer.text_color_bright
            co.computer.hilite_color = co.computer.hilite_color_bright
        end
        start_script(co.computer.draw_choices, co.computer)
        break_here()
    end
end
co.computer.draw_choices = function(arg1) -- line 282
    local local1 = co.computer.text.y + (co.computer.selection - co.computer.top_line) * co.computer.text.line_height
    local local2
    local local3
    local local4
    local3 = 0
    while local3 < co.computer.select_rect.lines do
        ChangePrimitive(co.computer.select_rect[local3], { y = local1 - 5 + local3 * 2 })
        local3 = local3 + 1
    end
    if co.computer.auto_response > co.computer.top_line and co.computer.auto_response - 1 < co.computer.top_line + co.computer.max_lines then
        local2 = co.computer.text.y + (co.computer.auto_response - 1 - co.computer.top_line) * co.computer.text.line_height
    else
        local2 = 500
    end
    local4 = { y = local2 }
    if co.computer.auto_response == co.computer.selection + 1 then
        local4.color = co.computer.hilite_color
    else
        local4.color = co.computer.text_color
    end
    ChangePrimitive(co.computer.select_x, local4)
    local3 = 0
    local4 = { fgcolor = co.computer.text_color }
    while local3 < co.computer.max_lines do
        if local3 == co.computer.selection - co.computer.top_line then
            local4.fgcolor = co.computer.hilite_color
        else
            local4.fgcolor = co.computer.text_color
        end
        ChangeTextObject(co.computer.text_objs[local3], co.computer.choices[co.computer.top_line + local3], local4)
        ChangePrimitive(co.computer.check_objs[local3], { color = local4.fgcolor })
        local3 = local3 + 1
    end
end
co.computer.scroll_down = function(arg1) -- line 323
    local local1
    if co.computer.selection < co.computer.top_line + co.computer.max_lines - 1 then
        start_sfx("cpuBeep2.wav")
        co.computer.selection = co.computer.selection + 1
    else
        local1 = co.computer.selection + 1
        if co.computer.choices[local1] ~= nil then
            start_sfx("cpuBeep2.wav")
            co.computer.top_line = co.computer.top_line + 1
            co.computer.selection = local1
        else
            start_sfx("cpuArrow.WAV")
        end
    end
    start_script(co.computer.draw_choices, co.computer)
end
co.computer.scroll_up = function(arg1) -- line 342
    local local1
    if co.computer.selection > co.computer.top_line then
        start_sfx("cpuBeep2.wav")
        co.computer.selection = co.computer.selection - 1
    else
        local1 = co.computer.selection - 1
        if co.computer.choices[local1] ~= nil then
            start_sfx("cpuBeep2.wav")
            co.computer.top_line = co.computer.top_line - 1
            co.computer.selection = local1
        else
            start_sfx("cpuArrow.WAV")
        end
    end
    start_script(co.computer.draw_choices, co.computer)
end
co.computer.make_selection = function(arg1) -- line 361
    START_CUT_SCENE()
    if not co.computer.changed_response then
        co.computer.changed_response = TRUE
        wait_for_message()
        manny:say_line("/coma004/")
        manny:wait_for_message()
    end
    start_sfx("cpuBeep1.wav")
    if co.computer.auto_response ~= co.computer.selection + 1 then
        co.computer.auto_response = co.computer.selection + 1
        start_script(co.computer.draw_choices, co.computer)
        co.computer:respond(co.computer.auto_response)
    end
    if co.computer.auto_response == 5 then
        co.computer.set_to_sign = TRUE
    else
        co.computer.set_to_sign = FALSE
    end
    start_script(arg1.stop_interface, arg1)
    END_CUT_SCENE()
end
co.computer.select_response = function(arg1) -- line 387
    START_CUT_SCENE()
    if not co.computer.changed_response then
        co.computer.changed_response = TRUE
        wait_for_message()
        manny:say_line("/coma004/")
        manny:wait_for_message()
    end
    co.computer.auto_response = co.computer.selection + 1
    if co.computer.auto_response == 5 then
        co.computer.set_to_sign = TRUE
    else
        co.computer.set_to_sign = FALSE
    end
    start_sfx("cpuBeep2.WAV")
    start_script(co.computer.draw_choices, co.computer)
    copal:say_line(co.computer.choices[co.computer.selection])
    END_CUT_SCENE()
end
co.computer.buttonHandler = function(arg1, arg2, arg3, arg4) -- line 409
    if control_map.OVERRIDE[arg2] and arg3 then
        start_script(arg1.stop_interface, arg1)
    elseif control_map.MOVE_BACKWARD[arg2] or control_map.MOVE_SOUTH[arg2] and arg3 then
        if not find_script(co.computer.wait_for_joystick_release) then
            co.computer:scroll_down()
            start_script(co.computer.wait_for_joystick_release, co.computer, "MOVE_BACKWARD")
        end
    elseif control_map.MOVE_FORWARD[arg2] or control_map.MOVE_NORTH[arg2] and arg3 then
        if not find_script(co.computer.wait_for_joystick_release) then
            co.computer:scroll_up()
            start_script(co.computer.wait_for_joystick_release, co.computer, "MOVE_FORWARD")
        end
    elseif control_map.LOOK_AT[arg2] and arg3 then
        copal:say_line(co.computer.choices[co.computer.selection])
    elseif control_map.TURN_LEFT[arg2] or control_map.TURN_RIGHT[arg2] or control_map.MOVE_WEST[arg2] or control_map.MOVE_EAST[arg2] or control_map.PICK_UP[arg2] or arg2 == SPACEKEY and arg3 then
        start_script(co.computer.select_response, co.computer)
    elseif control_map.USE[arg2] and arg3 then
        start_script(co.computer.make_selection, co.computer)
    else
        CommonButtonHandler(arg2, arg3, arg4)
    end
end
co.computer.wait_for_joystick_release = function(arg1, arg2) -- line 435
    local local1
    local1 = 0
    while get_generic_control_state(arg2) do
        break_here()
        local1 = local1 + system.frameTime
        if local1 >= 600 then
            local1 = 0
            if arg2 == "MOVE_BACKWARD" then
                co.computer:scroll_down()
            elseif arg2 == "MOVE_FORWARD" then
                co.computer:scroll_up()
            end
        end
    end
end
co.papers = Object:create(co, "/cotx017/papers", 1.0006, 2.3396599, 0.23999999, { range = 0.60000002 })
co.papers.use_pnt_x = 1.0405999
co.papers.use_pnt_y = 2.6796601
co.papers.use_pnt_z = 0
co.papers.use_rot_x = 0
co.papers.use_rot_y = -543.66901
co.papers.use_rot_z = 0
co.papers.lookAt = function(arg1) -- line 462
    if not arg1.count then
        manny:say_line("/coma018/")
    else
        manny:say_line("/coma019/")
    end
end
co.papers.pickUp = function(arg1) -- line 470
    if not arg1.count then
        arg1.count = 1
        manny:say_line("/coma020/")
    elseif arg1.count == 1 then
        arg1.count = 2
        manny:say_line("/coma021/")
    else
        manny:say_line("/coma022/")
    end
end
co.papers.use = co.papers.pickUp
co.papers2 = Object:create(co, "/cotx023/papers", 0.342592, 2.95924, 0.16, { range = 0.60000002 })
co.papers2.use_pnt_x = 0.61259198
co.papers2.use_pnt_y = 2.88924
co.papers2.use_pnt_z = 0
co.papers2.use_rot_x = 0
co.papers2.use_rot_y = -659.94598
co.papers2.use_rot_z = 0
co.papers2.parent = co.papers
co.papers3 = Object:create(co, "/cotx024/papers", 0.80143601, 1.29921, 0.28, { range = 0.60000002 })
co.papers3.use_pnt_x = 1.15144
co.papers3.use_pnt_y = 1.51921
co.papers3.use_pnt_z = 0
co.papers3.use_rot_x = 0
co.papers3.use_rot_y = -592.19501
co.papers3.use_rot_z = 0
co.papers3.parent = co.papers
co.files = Object:create(co, "/cotx025/files", 1.43548, 1.26357, 0.37, { range = 0.60000002 })
co.files.use_pnt_x = 1.2846
co.files.use_pnt_y = 1.4451801
co.files.use_pnt_z = 0
co.files.use_rot_x = 0
co.files.use_rot_y = -517.82001
co.files.use_rot_z = 0
co.files.parent = co.papers
co.files.lookAt = function(arg1) -- line 514
    manny:say_line("/coma026/")
end
co.files2 = Object:create(co, "/cotx027/files", 0.16481, 2.3450899, 0.38999999, { range = 0.60000002 })
co.files2.use_pnt_x = 0.32481
co.files2.use_pnt_y = 2.1250999
co.files2.use_pnt_z = 0
co.files2.use_rot_x = 0
co.files2.use_rot_y = -695.60602
co.files2.use_rot_z = 0
co.files2.parent = co.files
co.memo1 = Object:create(co, "/cotx028/memo", 0.570032, 2.25, 0.28999999, { range = 0.60000002 })
co.memo1.use_pnt_x = 0.54003203
co.memo1.use_pnt_y = 2.05
co.memo1.use_pnt_z = 0
co.memo1.use_rot_x = 0
co.memo1.use_rot_y = -361.99701
co.memo1.use_rot_z = 0
co.memo1.lookAt = function(arg1) -- line 536
    START_CUT_SCENE()
    manny:say_line("/coma029/")
    wait_for_message()
    manny:say_line("/coma030/")
    wait_for_message()
    manny:say_line("/coma031/")
    END_CUT_SCENE()
end
co.memo1.pickUp = function(arg1) -- line 546
    system.default_response("need")
end
co.memo1.use = co.memo1.lookAt
co.memo2 = Object:create(co, "/cotx032/memo", 0.99741602, 2.24, 0.36000001, { range = 0.60000002 })
co.memo2.use_pnt_x = 0.99741602
co.memo2.use_pnt_y = 2.05
co.memo2.use_pnt_z = 0
co.memo2.use_rot_x = 0
co.memo2.use_rot_y = -351.08899
co.memo2.use_rot_z = 0
co.memo2.lookAt = function(arg1) -- line 561
    START_CUT_SCENE()
    manny:say_line("/coma033/")
    wait_for_message()
    manny:say_line("/coma034/")
    wait_for_message()
    manny:say_line("/coma035/")
    END_CUT_SCENE()
end
co.memo2.pickUp = function(arg1) -- line 571
    system.default_response("need")
end
co.memo2.use = co.memo2.lookAt
co.tube = Object:create(co, "/cotx036/tube", 1.51164, 2.26577, 0.34999999, { range = 0.60000002 })
co.tube.use_pnt_x = 1.34164
co.tube.use_pnt_y = 2.26577
co.tube.use_pnt_z = 0
co.tube.use_rot_x = 0
co.tube.use_rot_y = -90.910896
co.tube.use_rot_z = 0
co.tube.lookAt = function(arg1) -- line 587
    soft_script()
    manny:say_line("/coma037/")
    wait_for_message()
    manny:say_line("/coma038/")
end
co.tube.pickUp = function(arg1) -- line 594
    system.default_response("attached")
end
co.tube.use = function(arg1) -- line 598
    dom.tube_object:use()
end
co.message_board = Object:create(co, "/cotx039/board", 1.59978, 2.35584, 0.57999998, { range = 0.60000002 })
co.message_board.use_pnt_x = 1.34978
co.message_board.use_pnt_y = 2.2458401
co.message_board.use_pnt_z = 0
co.message_board.use_rot_x = 0
co.message_board.use_rot_y = -806.77802
co.message_board.use_rot_z = 0
co.message_board.lookAt = function(arg1) -- line 612
    START_CUT_SCENE()
    manny:say_line("/coma040/")
    wait_for_message()
    manny:say_line("/coma041/")
    END_CUT_SCENE()
end
co.message_board.pickUp = function(arg1) -- line 620
    system.default_response("need")
end
co.message_board.use = co.message_board.lookAt
co.le_door = Object:create(co, "/cotx015/window", 1.0090801, 3.33602, 0.53640002, { range = 0.89999998 })
co.le_door_box = co.le_door
co.le_door.use_pnt_x = 1.05428
co.le_door.use_pnt_y = 2.99512
co.le_door.use_pnt_z = 0
co.le_door.use_rot_x = 0
co.le_door.use_rot_y = 357.89499
co.le_door.use_rot_z = 0
co.le_door.out_pnt_x = 1.05428
co.le_door.out_pnt_y = 2.99512
co.le_door.out_pnt_z = 0
co.le_door.out_rot_x = 0
co.le_door.out_rot_y = 357.89499
co.le_door.out_rot_z = 0
co.le_door.use = function(arg1) -- line 649
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:clear_hands()
    co:current_setup(co_winws)
    manny:push_costume("ma_enter_office.cos")
    manny:play_chore(ma_enter_office_step_in_do, "ma_enter_office.cos")
    sleep_for(600)
    start_sfx("maGrbWnd.WAV")
    manny:wait_for_chore()
    manny:stop_chore(ma_enter_office_step_in_do, "ma_enter_office.cos")
    manny:pop_costume()
    END_CUT_SCENE()
    le:come_out_door(le.co_door)
    start_sfx("mannyJmp.WAV")
end
co.le_door.lookAt = function(arg1) -- line 666
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:say_line("/coma042/")
    END_CUT_SCENE()
end
co.le_door.walkOut = co.le_door.use
co.ha_door = Object:create(co, "/cotx016/door", -0.2274, 1.7632, 0.51999998, { range = 0.62428802 })
co.co_ha_box = co.ha_door
co.ha_door.use_pnt_x = 0.118
co.ha_door.use_pnt_y = 1.7690001
co.ha_door.use_pnt_z = 0
co.ha_door.use_rot_x = 0
co.ha_door.use_rot_y = -277.22198
co.ha_door.use_rot_z = 0
co.ha_door.out_pnt_x = -0.26800001
co.ha_door.out_pnt_y = 1.745
co.ha_door.out_pnt_z = 0
co.ha_door.out_rot_x = 0
co.ha_door.out_rot_y = 92.9963
co.ha_door.out_rot_z = 0
co.ha_door.touchable = FALSE
co.ha_door.walkOut = function(arg1) -- line 697
    START_CUT_SCENE()
    manny:say_line("/coma043/")
    ResetMarioControls()
    stop_movement_scripts()
    manny:walkto(0.0414779, 1.73017, 0.01, 0, 276.154, 0)
    END_CUT_SCENE()
end
conv_belt_forward = 0
conv_belt_reverse = 1
conv_belt_slow_fore = 2
conv_belt_stop = 3
conv_belt_start_rev = 4
conv_belt_slow_rev = 5
conv_belt_start_fore = 6
copal_yell_talk_hold = 0
copal_yell_close_door = 1
copal_yell_mumble = 2
copal_yell_no_talk = 3
copal_yell_m = 4
copal_yell_c = 5
copal_yell_e = 6
copal_yell_l = 7
copal_yell_f = 8
copal_yell_u = 9
copal_yell_a = 10
copal_yell_o = 11
copal_yell_t = 12
crane_up = 0
crane_down = 1
crane_up_hold = 2
crane_down_hold = 3
crane_broken = 4
crane_fixed = 5
crane_scoop_only = 6
crane_scoop_scoop_down = 0
crane_scoop_scoop_up = 1
ct_step_out_step_out = 0
CheckFirstTime("cu.lua")
cu = Set:create("cu.set", "crane crusher", { cu_crust = 0, cu_overhead = 1 })
cu.music_counter = 0
cu.spill_chain = function(arg1) -- line 14
    ew.crane_down = TRUE
    if not crusher_free then
        START_CUT_SCENE()
        set_override(cu.skip_spill_chain, cu)
        cu:switch_to_set()
        cu.crusher:play_chore(1)
        stop_sound("custrain.IMU")
        play_movie("cu_tg.snm", 198, 0)
        wait_for_movie()
        END_CUT_SCENE()
        ew:switch_to_set()
    else
        start_sfx("cuChnMt.WAV")
        sleep_for(500)
    end
end
cu.skip_spill_chain = function(arg1) -- line 33
    kill_override()
    ew:switch_to_set()
end
cu.free_crusher = function(arg1) -- line 38
    ew.crane_down = FALSE
    if not crusher_free then
        START_CUT_SCENE()
        cu:switch_to_set()
        stop_sound("custrain.IMU")
        stop_sound("cu_cy.IMU")
        play_movie("cu_rp.snm", 0, 0)
        wait_for_movie()
        END_CUT_SCENE()
        crusher_free = TRUE
        bu.fallen_crusher:make_touchable()
        cu.crusher:make_untouchable()
        if raised_lamancha then
            ew:exit_crane(TRUE)
            start_script(bu.thatll_do)
        else
            ew:switch_to_set()
        end
    else
        start_sfx("cuChnMt.WAV")
        sleep_for(500)
    end
end
cu.exit_crane = function(arg1) -- line 63
    cutSceneLevel = 0
    cu:switch_to_set()
    manny:put_in_set(cu)
    manny:setpos(-4.98284, -9.74319, 8.69)
    manny:setrot(0, 277.679, 0)
    manny:walkto(-1.71286, -9.79415, 8.69)
    manny:wait_for_actor()
end
cu.update_music_state = function(arg1) -- line 78
    if cu.music_counter > 2 then
        return stateCUV_LATER
    else
        return stateCU
    end
end
cu.enter = function(arg1) -- line 86
    cu:add_object_state(cu_crust, "cu_tg.bm", nil, OBJSTATE_UNDERLAY)
    cu.crusher:set_object_state("cu_tg.cos")
    if ew.crane_down and ew.crane_pos == ew.at_crusher and not crusher_free and ew.crane_broken then
        cu.crusher:play_chore(0)
        start_sfx("custrain.IMU")
    elseif not crusher_free and cu.crusher.touchable then
        play_movie_looping("cu_cy.snm", 198, 254)
        start_sfx("cu_cy.IMU", nil, 80)
    end
    ew.crane_actor.cur_point = ew.at_crusher
    cu.music_counter = cu.music_counter + 1
end
cu.exit = function(arg1) -- line 103
    stop_sound("custrain.IMU")
    stop_sound("cu_cy.IMU")
    StopMovie()
end
cu.crane = Object:create(cu, "/cutx001/crane", -1.54735, -7.35425, 9.4499998, { range = 4 })
cu.crane.use_pnt_x = -1.54735
cu.crane.use_pnt_y = -9.6642504
cu.crane.use_pnt_z = 6.8299999
cu.crane.use_rot_x = 0
cu.crane.use_rot_y = 376.767
cu.crane.use_rot_z = 0
cu.crane.lookAt = function(arg1) -- line 122
    cv.crane:lookAt()
end
cu.crane.pickUp = function(arg1) -- line 126
    cv.crane:pickUp()
end
cu.crane.use = function(arg1) -- line 130
    ew.crane_pos = ew.at_crusher
    start_script(ew.operate_crane)
end
cu.crusher = Object:create(cu, "/cutx002/coral crusher", 0.0127845, -11.5118, 6.3621202, { range = 2.5 })
cu.crusher.use_pnt_x = -1.63002
cu.crusher.use_pnt_y = -11.6002
cu.crusher.use_pnt_z = 6.18189
cu.crusher.use_rot_x = 0
cu.crusher.use_rot_y = -114.906
cu.crusher.use_rot_z = 0
cu.crusher.lookAt = function(arg1) -- line 143
    soft_script()
    if bl.talked_reef then
        manny:say_line("/cuma003/")
        wait_for_message()
        manny:say_line("/cuma004/")
    else
        manny:say_line("/cuma005/")
        wait_for_message()
        manny:say_line("/cuma006/")
    end
end
cu.crusher.pickUp = function(arg1) -- line 156
    manny:say_line("/cuma007/")
end
cu.crusher.use = function(arg1) -- line 160
    manny:say_line("/cuma008/")
    wait_for_message()
    manny:say_line("/cuma009/")
end
cu.ew_door = Object:create(cu, "/cutx010/cabin", -5.5131302, -8.3999996, 10.04, { range = 2 })
cu.ew_door.use_pnt_x = -5.5131302
cu.ew_door.use_pnt_y = -8.3999996
cu.ew_door.use_pnt_z = 10.04
cu.ew_door.use_rot_x = 0
cu.ew_door.use_rot_y = 6.4301
cu.ew_door.use_rot_z = 0
cu.crane_box = cu.ew_door
cu.ew_door.walkOut = function(arg1) -- line 182
    ew.crane_pos = ew.at_crusher
    start_script(ew.operate_crane, ew)
end
cu.ew_door.lookAt = function(arg1) -- line 187
    cv.ew_door:lookAt()
end
cu.crane_trigger = { name = "crane trigger" }
cu.crane_trigger.walkOut = function(arg1) -- line 192
    if ew.used_crane then
        cu.ew_door:walkOut()
    end
end
cu.bu_door1 = Object:create(cu, "/cutx011/ramp", -2.2880299, -12.625, 5.75, { range = 1 })
cu.bu_door1.use_pnt_x = -1.79335
cu.bu_door1.use_pnt_y = -12.9701
cu.bu_door1.use_pnt_z = 7.00879
cu.bu_door1.use_rot_x = 0
cu.bu_door1.use_rot_y = 180.314
cu.bu_door1.use_rot_z = 0
cu.bu_box1 = cu.bu_door1
cu.bu_door1.lookAt = function(arg1) -- line 209
    manny:say_line("/cuma012/")
end
cu.bu_door1.walkOut = function(arg1) -- line 213
    bu:come_out_door(bu.cu_door1)
end
cu.bu_door2 = Object:create(cu, "/cutx013/ramp", 2.2743299, -12.625, 5.75, { range = 1 })
cu.bu_door2.use_pnt_x = 2.2743299
cu.bu_door2.use_pnt_y = -12.625
cu.bu_door2.use_pnt_z = 5.75
cu.bu_door2.use_rot_x = 0
cu.bu_door2.use_rot_y = 176.785
cu.bu_door2.use_rot_z = 0
cu.bu_box2 = cu.bu_door2
cu.bu_door2.lookAt = cu.bu_door1.lookAt
cu.bu_door2.walkOut = function(arg1) -- line 229
    bu:come_out_door(bu.cu_door2)
end
cu_tg_show = 0
cu_tg_hide = 1
CheckFirstTime("_cut_scenes.lua")
dofile("ve_talk_to_membrillo.lua")
dofile("membrillo_talk_to_ve.lua")
dofile("tm_IDPHOTO.lua")
dofile("ma_IDPHOTO.lua")
dofile("nv_IDPHOTO.lua")
dofile("cc_getcard.lua")
dofile("mc_getcard.lua")
RunFullscreenMovie = function(arg1) -- line 18
    local local1
    music_state:pause()
    local1 = StartFullscreenMovie(arg1)
    if local1 then
        while IsFullscreenMoviePlaying() do
            break_here()
        end
    end
    music_state:unpause()
    return local1
end
cut_scene = { }
cv_chain_bunched = 0
cv_chain_paid_out = 1
cv_chain_gone = 2
CheckFirstTime("cv.lua")
dofile("cv_chain.lua")
cv = Set:create("cv.set", "crane conveyor", { cv_crnla = 0, cv_ovrhd = 1 })
cv.chain_bunched = FALSE
cv.chain_actor = Actor:create(nil, nil, nil, "CV Chain")
cv.music_counter = 0
cv.spill_chain = function(arg1) -- line 20
    ew.crane_down = TRUE
    if cy.lever.up then
        START_CUT_SCENE()
        set_override(cv.skip_spill_chain, cv)
        cv:switch_to_set()
        cv.chain_actor:play_chore(cv_chain_gone)
        play_movie("cv_bu.snm", 203, 0)
        wait_for_movie()
        END_CUT_SCENE()
        cv.chain_bunched = TRUE
    else
        cur_puzzle_state[42] = TRUE
        START_CUT_SCENE()
        set_override(cv.skip_spill_chain, cv)
        cv:switch_to_set()
        cv.chain_actor:play_chore(cv_chain_gone)
        play_movie("cv_cf.snm", 200, 0)
        wait_for_movie()
        cy:switch_to_set()
        cy.belt_actor:set_visibility(FALSE)
        cy.belt:play_chore(0)
        stop_sound("cy_cvgo.IMU")
        StartFullscreenMovie("cy_ch.snm")
        wait_for_movie()
        cy.belt_actor:set_visibility(TRUE)
        ac:switch_to_set()
        stop_sound("cy_cvgo.IMU")
        StartFullscreenMovie("ac_ch.snm")
        wait_for_movie()
        END_CUT_SCENE()
        cv.chain_bunched = FALSE
        ac.chain_state = "here"
    end
    ew:switch_to_set()
end
cv.skip_spill_chain = function(arg1) -- line 59
    kill_override()
    stop_sound("cy_cvgo.IMU")
    if cy.lever.up then
        cv.chain_bunched = TRUE
    else
        cv.chain_bunched = FALSE
        ac.chain_state = "here"
    end
    ew:switch_to_set()
end
cv.recoil_chain = function(arg1) -- line 72
    START_CUT_SCENE()
    set_override(cv.skip_recoil_chain, cv)
    if ac.chain_state == "here" then
        ac:switch_to_set()
        stop_sound("cy_cvgo.IMU")
        RunFullscreenMovie("ac_re.snm")
        wait_for_movie()
    else
        cv:switch_to_set()
        cv.chain_actor:play_chore(cv_chain_gone)
        stop_sound("cy_cvgo.IMU")
        play_movie("cv_re.snm", 200, 0)
        wait_for_movie()
    end
    END_CUT_SCENE()
    ac.chain_state = "gone"
    cv.chain_bunched = FALSE
    ew.crane_down = FALSE
    ew:switch_to_set()
end
cv.skip_recoil_chain = function(arg1) -- line 95
    kill_override()
    stop_sound("cy_cvgo.IMU")
    ac.chain_state = "gone"
    cv.chain_bunched = FALSE
    ew.crane_down = FALSE
    ew:switch_to_set()
end
cv.update_music_state = function(arg1) -- line 110
    if cv.music_counter > 2 then
        return stateCUV_LATER
    else
        return stateCV
    end
end
cv.enter = function(arg1) -- line 118
    inventory_disabled = FALSE
    if cv.chain_bunched or ac.chain_state ~= "gone" then
        if cv.chain_bunched then
            cv:add_object_state(0, "cv_bunch1.bm", nil, OBJSTATE_STATE, TRUE)
            cv:add_object_state(0, "cv_bunch2.bm", "cv_bunch2.zbm", OBJSTATE_OVERLAY, TRUE)
        else
            cv:add_object_state(0, "cv_paid_out.bm", "cv_paid_out.zbm", OBJSTATE_OVERLAY, TRUE)
        end
        cv.chain_actor:put_in_set(cv)
        cv.chain_actor:setpos(0, 0, 0)
        cv.chain_actor:setrot(0, 0, 0)
        cv.chain_actor:set_costume("cv_chain.cos")
        if cv.chain_bunched then
            cv.chain_actor:play_chore(cv_chain_bunched)
        else
            cv.chain_actor:play_chore(cv_chain_paid_out)
        end
    end
    if cy.lever.up then
        play_movie_looping("cv_bf.snm", 200, 240)
    else
        play_movie_looping("cv_br.snm", 197, 240)
    end
    start_sfx("cv_bf.IMU")
    ew.crane_actor.cur_point = ew.at_conveyor
    cv.music_counter = cv.music_counter + 1
end
cv.exit = function(arg1) -- line 152
    StopMovie()
    stop_sound("cv_bf.IMU")
    cv.chain_actor:free()
end
cv.crane = Object:create(cv, "/cvtx001/crane", 0.0091107897, -8.84447, 9.3757, { range = 4 })
cv.crane.use_pnt_x = 0.0091107897
cv.crane.use_pnt_y = -11.6545
cv.crane.use_pnt_z = 6.7856998
cv.crane.use_rot_x = 0
cv.crane.use_rot_y = 709.03699
cv.crane.use_rot_z = 0
cv.crane.lookAt = function(arg1) -- line 173
    if meche.talked_boat and not cv.talked_tube then
        cv.talked_tube = TRUE
        manny:say_line("/cvma008/")
        wait_for_message()
        manny:say_line("/cvma009/")
    else
        manny:say_line("/cvma010/")
    end
end
cv.crane.pickUp = function(arg1) -- line 184
    manny:say_line("/cvma003/")
end
cv.crane.use = function(arg1) -- line 188
    ew.crane_pos = ew.at_conveyor
    start_script(ew.operate_crane)
end
cv.crane_door = Object:create(cv, "/cvtx004/cabin", -5.4229398, -8.2396097, 10.4, { range = 2 })
cv.crane_door.use_pnt_x = -5.4229398
cv.crane_door.use_pnt_y = -8.5096102
cv.crane_door.use_pnt_z = 9.9999905
cv.crane_door.use_rot_x = 0
cv.crane_door.use_rot_y = -319.966
cv.crane_door.use_rot_z = 0
cv.crane_door.out_pnt_x = -5.5999999
cv.crane_door.out_pnt_y = -8.1999998
cv.crane_door.out_pnt_z = 9.9999905
cv.crane_door.out_rot_x = 0
cv.crane_door.out_rot_y = -348.00299
cv.crane_door.out_rot_z = 0
cv.crane_door.walkOut = function(arg1) -- line 213
    ew.crane_pos = ew.at_conveyor
    start_script(ew.operate_crane)
end
cv.crane_door.lookAt = function(arg1) -- line 218
    manny:say_line("/cvma005/")
end
cv.crane_trigger = { name = "crane trigger" }
cv.crane_trigger.walkOut = function(arg1) -- line 223
    if ew.used_crane then
        cv.crane_door:walkOut()
    end
end
cv.cy_door = Object:create(cv, "/cvtx006/belt", -0.021805599, -12.4089, 5.3256602, { range = 0.60000002 })
cv.cy_door.use_pnt_x = -0.021805599
cv.cy_door.use_pnt_y = -11.9889
cv.cy_door.use_pnt_z = 5.7156601
cv.cy_door.use_rot_x = 0
cv.cy_door.use_rot_y = -183.96201
cv.cy_door.use_rot_z = 0
cv.cy_door.out_pnt_x = 0.0082815103
cv.cy_door.out_pnt_y = -12.3
cv.cy_door.out_pnt_z = 5.6000099
cv.cy_door.out_rot_x = 0
cv.cy_door.out_rot_y = -534.96198
cv.cy_door.out_rot_z = 0
cv.cy_door.lookAt = function(arg1) -- line 245
    manny:say_line("/cvma007/")
end
cv.cy_door.walkOut = function(arg1) -- line 249
    if not ew.crane_down or not ew.crane_broken or ew.crane_pos ~= ew.at_conveyor or cv.chain_bunched then
        cy:come_out_door(cy.cv_door)
    else
        cy:start_drifting()
    end
end
cv.skip_bunch1 = { name = "skip bunched chain1" }
cv.skip_bunch1.walkOut = function(arg1) -- line 258
    if cv.chain_bunched or ac.chain_state ~= "gone" then
        cv.cy_door:walkOut()
    end
end
cv.skip_bunch2 = { name = "skip bunched chain2" }
cv.skip_bunch2.walkOut = function(arg1) -- line 265
    if cv.chain_bunched or ac.chain_state ~= "gone" then
        cv.crane_door:walkOut()
    end
end
cy_chain_here = 0
cy_chain_gone = 1
cy_lever_here = 0
CheckFirstTime("cy.lua")
dofile("conv_belt.lua")
dofile("ma_climb_conveyor.lua")
cy = Set:create("cy.set", "conveyor", { cy_surla = 0, cy_ovrhd = 1 })
cy.chain_drift_bottom = { }
cy.chain_drift_bottom.pos = { x = -0.117418, y = 4.5833, z = 0.517712 }
cy.chain_drift_bottom.rot = { x = 45, y = 0.0180664, z = 0 }
cy.chain_drift_top = { }
cy.chain_drift_top.pos = { x = -0.117507, y = 4.86603, z = 0.800555 }
cy.chain_drift_top.rot = { x = 45, y = 359.179, z = 0 }
cy.chain_drift_end = { }
cy.chain_drift_end.pos = { x = -0.0624409, y = 4.01491, z = 0.23 }
cy.chain_drift_end.rot = { x = 0, y = 5.72274, z = 0 }
cy.chain_abort_bottom = 0.4
cy.chain_abort_top = 1.5
cy.loop_vol = 30
cy.drift_to_chain = function(arg1) -- line 30
    START_CUT_SCENE()
    cy.drifting = TRUE
    cy.prev_button_handler = system.buttonHandler
    system.buttonHandler = cy.drift_button_handler
    manny:ignore_boxes()
    manny:push_costume("mn_conveyor.cos")
    start_script(cy.manny_drift_to, cy, cy.chain_drift_bottom.pos, cy.chain_drift_bottom.rot, 20)
    FadeInChore(manny.hActor, "mn_conveyor.cos", mn_conveyor_drift, 1000)
    sleep_for(1000)
    manny:play_chore_looping(mn_conveyor_drift, "mn_conveyor.cos")
    END_CUT_SCENE()
end
cy.end_drift_gracefully = function(arg1) -- line 47
    if cy.drifting then
        START_CUT_SCENE()
        start_script(cy.manny_drift_to, cy, cy.chain_drift_end.pos, cy.chain_drift_end.rot, 20)
        manny:set_chore_looping(mn_conveyor_drift, FALSE, "mn_conveyor.cos")
        FadeOutChore(manny.hActor, "mn_conveyor.cos", mn_conveyor_drift, 1000)
        sleep_for(1000)
        wait_for_script(cy.manny_drift_to)
        cy:stop_drifting()
        END_CUT_SCENE()
        manny:set_run(FALSE)
        manny:force_auto_run(FALSE)
    end
end
cy.start_drifting = function(arg1, arg2) -- line 62
    cy:switch_to_set()
    cy.drifting = TRUE
    cy.prev_button_handler = system.buttonHandler
    system.buttonHandler = cy.drift_button_handler
    inventory_disabled = TRUE
    manny:set_run(FALSE)
    manny:force_auto_run(FALSE)
    manny:push_costume("mn_conveyor.cos")
    manny:put_in_set(cy)
    manny:ignore_boxes()
    if not arg2 then
        manny:setpos(cy.chain_drift_top.pos.x, cy.chain_drift_top.pos.y, cy.chain_drift_top.pos.z)
        manny:setrot(cy.chain_drift_top.rot.x, cy.chain_drift_top.rot.y, cy.chain_drift_top.rot.z)
    else
        manny:setpos(cy.chain_drift_bottom.pos.x, cy.chain_drift_bottom.pos.y, cy.chain_drift_bottom.pos.z)
        manny:setrot(cy.chain_drift_bottom.rot.x, cy.chain_drift_bottom.rot.y, cy.chain_drift_bottom.rot.z)
    end
    manny:play_chore_looping(mn_conveyor_drift, "mn_conveyor.cos")
end
cy.stop_drifting = function(arg1) -- line 85
    if cy.drifting then
        cy.drifting = FALSE
        manny:follow_boxes()
        manny:pop_costume()
        manny:set_run(FALSE)
        manny:force_auto_run(FALSE)
        stop_movement_scripts()
        manny:stop_chore(mn2_run, "mn2.cos")
        if cy.prev_button_handler ~= nil and cy.prev_button_handler ~= cy.drift_button_handler then
            system.buttonHandler = cy.prev_button_handler
        else
            system.buttonHandler = SampleButtonHandler
        end
        inventory_disabled = FALSE
    end
end
cy.drift_button_handler = function(arg1, arg2, arg3) -- line 106
    local local1
    local1 = GetControlState(LCONTROLKEY) or GetControlState(RCONTROLKEY)
    if control_map.INVENTORY[arg1] and arg2 then
        system.default_response("not now")
    elseif control_map.MOVE_FORWARD[arg1] and arg2 then
        single_start_script(cy.manny_climb_up_chain, cy)
    elseif control_map.MOVE_BACKWARD[arg1] and arg2 then
        single_start_script(cy.manny_climb_down_chain, cy)
    elseif control_map.LOOK_AT[arg1] and arg2 and not local1 then
        if hot_object then
            start_script(Sentence, "lookAt", hot_object)
        else
            PrintDebug("No hot object!\n")
        end
    else
        CommonButtonHandler(arg1, arg2, arg3)
    end
end
cy.manny_climb_up_chain = function(arg1) -- line 129
    local local1, local2, local3, local4
    stop_script(cy.manny_climb_down_chain)
    local4 = FALSE
    while get_generic_control_state("MOVE_FORWARD") and not local4 do
        local2 = manny:getpos()
        local1 = { x = 0, y = 0.40000001, z = 0 }
        local3 = cy.chain_drift_bottom.rot
        local1 = RotateVector(local1, local3)
        local1.x = local1.x + local2.x
        local1.y = local1.y + local2.y
        local1.z = local1.z + local2.z
        manny:stop_chore(mn_conveyor_drift, "mn_conveyor.cos")
        manny:stop_chore(mn_conveyor_crawl, "mn_conveyor.cos")
        manny:play_chore_looping(mn_conveyor_crawl, "mn_conveyor.cos")
        cy:manny_drift_to(local1, nil, 20, TRUE)
        break_here()
        local2 = manny:getpos()
        if local2.z >= cy.chain_abort_top then
            local4 = TRUE
        end
    end
    if not local4 then
        start_script(ac.stop_crawl, ac)
    else
        cy:stop_drifting()
        manny:set_run(FALSE)
        manny:force_auto_run(FALSE)
        cy.cv_door:walkOut()
    end
end
cy.manny_climb_down_chain = function(arg1) -- line 166
    local local1, local2, local3, local4
    stop_script(cy.manny_climb_up_chain)
    local4 = FALSE
    while get_generic_control_state("MOVE_BACKWARD") and not local4 do
        local2 = manny:getpos()
        local1 = { x = 0, y = -0.40000001, z = 0 }
        local3 = cy.chain_drift_bottom.rot
        local1 = RotateVector(local1, local3)
        local1.x = local1.x + local2.x
        local1.y = local1.y + local2.y
        local1.z = local1.z + local2.z
        manny:stop_chore(mn_conveyor_drift, "mn_conveyor.cos")
        manny:stop_chore(mn_conveyor_crawl, "mn_conveyor.cos")
        manny:play_chore_looping(mn_conveyor_crawl, "mn_conveyor.cos")
        cy:manny_drift_to(local1, nil, 20, TRUE)
        break_here()
        local2 = manny:getpos()
        if local2.z < cy.chain_abort_bottom then
            local4 = TRUE
        end
    end
    if not local4 then
        start_script(ac.stop_crawl, ac)
    else
        manny:stop_chore(mn_conveyor_crawl, "mn_conveyor.cos")
        manny:play_chore_looping(mn_conveyor_drift, "mn_conveyor.cos")
        start_script(cy.end_drift_gracefully, cy)
    end
end
cy.manny_drift_to = function(arg1, arg2, arg3, arg4, arg5) -- line 200
    local local1, local2, local3
    local local4, local5, local6
    local local7, local8
    local local9, local10
    local7 = manny:getpos()
    local8 = manny:get_positive_rot()
    local1 = (arg2.x - local7.x) / arg4
    local2 = (arg2.y - local7.y) / arg4
    local3 = (arg2.z - local7.z) / arg4
    if arg3 then
        if abs(arg3.y - local8.y) > 180 then
            if local8.y < arg3.y then
                local5 = (arg3.y - 360 - local8.y) / arg4
            else
                local5 = (arg3.y + 360 - local8.y) / arg4
            end
        else
            local5 = (arg3.y - local8.y) / arg4
        end
        local4 = (arg3.x - local8.x) / arg4
        local6 = (arg3.z - local8.z) / arg4
    end
    local9 = 0
    local10 = FALSE
    while local9 < arg4 and not local10 do
        local7.x = local7.x + local1
        local7.y = local7.y + local2
        local7.z = local7.z + local3
        manny:setpos(local7.x, local7.y, local7.z)
        if arg3 then
            local8.x = local8.x + local4
            local8.y = local8.y + local5
            local8.z = local8.z + local6
            manny:setrot(local8.x, local8.y, local8.z)
        end
        break_here()
        local9 = local9 + 1
        if arg5 then
            if local7.z <= cy.chain_abort_bottom or local7.z >= cy.chain_abort_top then
                local10 = TRUE
            end
        end
    end
    if not local10 then
        manny:setpos(arg2.x, arg2.y, arg2.z)
        if arg3 then
            manny:setrot(arg3.x, arg3.y, arg3.z)
        end
    end
end
cy.belt_actor = Actor:create(nil, nil, nil, "/cytx013/")
cy.belt_actor.default = function(arg1) -- line 259
    arg1:set_costume("conv_belt.cos")
    arg1:put_in_set(cy)
    arg1:set_softimage_pos(0, 0.7, -44.1271)
    arg1:setrot(0, 180, 0)
end
cy.belt_actor.change_direction = function(arg1) -- line 266
    if cy.lever.up then
        cy.belt_actor:set_chore_looping(conv_belt_forward, FALSE)
        cy.belt_actor:wait_for_chore(conv_belt_forward)
        start_sfx("cy_end.WAV")
        fade_sfx("cy_cvgo.IMU", 300, 0)
        if sound_playing("chnUndw.imu") then
            fade_sfx("chnUndw.imu", 300, 0)
        end
        cy.belt_actor:run_chore(conv_belt_slow_fore)
        cy.belt_actor:play_chore(conv_belt_stop)
        sleep_for(1000)
        cy.belt_actor:stop_chore(conv_belt_stop)
        start_sfx("cy_start.WAV")
        start_sfx("cy_cvgo.IMU", IM_MED_PRIORITY, 0)
        fade_sfx("cy_cvgo.IMU", 2000, cy.loop_vol)
        if ac.chain_state ~= "gone" then
            start_sfx("chnUndw.imu", IM_MED_PRIORITY, 0)
            fade_sfx("chnUndw.imu", 2000, ac.chain_vol)
        end
        cy.belt_actor:run_chore(conv_belt_start_rev)
        cy.belt_actor:run_chore(conv_belt_slow_rev)
        cy.belt_actor:play_chore_looping(conv_belt_reverse)
    else
        cy.belt_actor:set_chore_looping(conv_belt_reverse, FALSE)
        cy.belt_actor:wait_for_chore(conv_belt_reverse)
        start_sfx("cy_end.WAV")
        fade_sfx("cy_cvgo.IMU", 300, 0)
        if sound_playing("chnUndw.imu") then
            fade_sfx("chnUndw.imu", 300, 0)
        end
        cy.belt_actor:run_chore(conv_belt_slow_rev)
        cy.belt_actor:play_chore(conv_belt_stop)
        sleep_for(1000)
        cy.belt_actor:stop_chore(conv_belt_stop)
        start_sfx("cy_start.WAV")
        start_sfx("cy_cvgo.IMU", IM_MED_PRIORITY, 0)
        fade_sfx("cy_cvgo.IMU", 2000, cy.loop_vol)
        if ac.chain_state ~= "gone" then
            start_sfx("chnUndw.imu", IM_MED_PRIORITY, 0)
            fade_sfx("chnUndw.imu", 2000, ac.chain_vol)
        end
        cy.belt_actor:run_chore(conv_belt_start_fore)
        cy.belt_actor:run_chore(conv_belt_slow_fore)
        cy.belt_actor:play_chore_looping(conv_belt_forward)
    end
end
cy.lever_actor = Actor:create(nil, nil, nil, "/cytx014/")
cy.lever_actor.default = function(arg1) -- line 319
    arg1:set_costume("cy_lever.cos")
    arg1:put_in_set(cy)
    arg1:setpos(-0.437215, 3.95936, -0.0817886)
    arg1:setrot(45, 269.674, 0)
end
cy.lever_actor.pull = function(arg1) -- line 326
    local local1, local2
    local1 = 45
    local2 = 5
    while local1 < 100 do
        local1 = local1 + local2
        if local2 < 15 then
            local2 = local2 + 2
        end
        if local1 > 100 then
            local1 = 100
        end
        arg1:setrot(local1, 269.67401, 0)
        break_here()
    end
    sleep_for(250)
    local2 = 10
    while local1 > 45 do
        local1 = local1 - local2
        if local2 < 15 then
            local2 = local2 + 1
        end
        if local1 < 45 then
            local1 = 45
        end
        arg1:setrot(local1, 269.67401, 0)
        break_here()
    end
end
cy.fake_stair_box = function(arg1) -- line 357
    while TRUE do
        if system.currentActor:find_sector_name("conveyor_box") then
            while system.currentActor:find_sector_name("conveyor_box") do
                chore = find_stair_chore()
                system.currentActor:set_walk_chore(chore, system.currentActor.base_costume)
                while system.currentActor:is_choring(chore, TRUE, system.currentActor.base_costume) and system.currentActor:find_sector_name("conveyor_box") do
                    break_here()
                end
                while system.currentActor:is_resting() do
                    break_here()
                end
                break_here()
            end
        end
        if system.currentActor.is_running then
            system.currentActor:set_walk_chore(ms_run, system.currentActor.base_costume)
        elseif not system.currentActor.is_backward then
            system.currentActor:set_walk_chore(ms_walk, system.currentActor.base_costume)
        end
        SetActorConstrain(system.currentActor.hActor, FALSE)
        while not system.currentActor:find_sector_name("conveyor_box") do
            break_here()
        end
        break_here()
    end
end
cy.slide_along_conveyor = function(arg1) -- line 388
    local local1
    while TRUE do
        if manny:find_sector_name("conveyor1") or manny:find_sector_name("conveyor2") then
            local1 = manny:getpos()
            if cy.lever.up then
                local1.y = local1.y + 0.015
            else
                local1.y = local1.y - 0.015
            end
            manny:setpos(local1.x, local1.y, local1.z)
        end
        break_here()
    end
end
cy.climb_onto_conveyor = function(arg1) -- line 405
    START_CUT_SCENE()
    manny:clear_hands()
    MakeSectorActive("at_conveyor", TRUE)
    stop_script(cy.slide_along_conveyor)
    manny:head_look_at(nil)
    manny:walkto(-0.558631, 3.46617, -0.2, 0, 280.27, 0)
    manny:wait_for_actor()
    manny:head_look_at_point(-0.463631, 3.46617, 0.965)
    sleep_for(200)
    manny:ignore_boxes()
    manny:push_costume("ma_climb_conveyor.cos")
    manny:setpos(-0.475596, 3.51664, 0.389)
    manny:setrot(0, 280.27, 0)
    manny:play_chore(ma_climb_conveyor_climb, "ma_climb_conveyor.cos")
    manny:wait_for_chore(ma_climb_conveyor_climb, "ma_climb_conveyor.cos")
    manny:setpos(-0.22, 3.48618, 0.23)
    manny:setrot(0, 280.27, 0)
    manny:stop_chore(ma_climb_conveyor_climb, "ma_climb_conveyor.cos")
    manny:play_chore(ma_climb_conveyor_jump, "ma_climb_conveyor.cos")
    sleep_for(200)
    start_sfx("cy_swsh2.wav")
    sleep_for(800)
    start_sfx("mn_jmpcy.wav")
    manny:wait_for_chore(ma_climb_conveyor_jump, "ma_climb_conveyor.cos")
    manny:pop_costume()
    manny:follow_boxes()
    MakeSectorActive("at_conveyor", FALSE)
    start_script(cy.slide_along_conveyor, cy)
    inventory_disabled = TRUE
    manny.costume_marker_handler = manny.conveyor_costume_marker_handler
    END_CUT_SCENE()
end
cy.jump_off_conveyor = function(arg1) -- line 440
    local local1, local2, local3
    START_CUT_SCENE()
    manny:clear_hands()
    stop_script(cy.slide_along_conveyor)
    manny:walkto(-0.219523, 3.52478, 0.229637, 0, 105.247, 0)
    manny:wait_for_actor()
    manny:ignore_boxes()
    manny:push_costume("ma_climb_conveyor.cos")
    manny:setpos(-0.493, 3.46293, 0.1148)
    manny:setrot(0, 105.247, 0)
    manny:play_chore(ma_climb_conveyor_jump, "ma_climb_conveyor.cos")
    sleep_for(200)
    start_sfx("cy_swsh2.wav")
    sleep_for(500)
    local1 = manny:getpos()
    local2 = 0.0099999998
    local3 = 0
    while local1.z > -0.2 do
        local1.z = local1.z - local2
        if local1.z < -0.2 then
            local1.z = -0.2
        end
        local2 = local2 + 0.0049999999
        manny:setpos(local1.x, local1.y, local1.z)
        break_here()
        local3 = local3 + system.frameTime
        if local3 > 300 then
            start_sfx("mn_jump.wav")
            local3 = -1000
        end
    end
    manny:wait_for_chore(ma_climb_conveyor_jump, "ma_climb_conveyor.cos")
    manny:pop_costume()
    MakeSectorActive("at_conveyor", TRUE)
    manny:follow_boxes()
    while manny:find_sector_name("at_conveyor") do
        WalkActorForward(manny.hActor)
        break_here()
    end
    MakeSectorActive("at_conveyor", FALSE)
    cy.belt:make_touchable()
    inventory_disabled = FALSE
    manny.costume_marker_handler = nil
    END_CUT_SCENE()
end
cy.float_to_ac = function(arg1) -- line 489
    START_CUT_SCENE()
    manny:clear_hands()
    manny:set_walk_chore(-1)
    manny:set_turn_chores(-1, -1)
    manny:set_rest_chore(-1)
    manny:push_costume("mn_conveyor.cos")
    manny:say_line("/voma007/")
    manny:play_chore(mn_conveyor_start_current, "mn_conveyor.cos")
    manny:ignore_boxes()
    start_sfx("current.IMU")
    start_script(ac.manny_bob, ac)
    manny:setrot(0, 228, 0, TRUE)
    while manny:is_choring(mn_conveyor_start_current, FALSE, "mn_conveyor.cos") do
        WalkActorForward(manny.hActor)
        break_here()
    end
    manny:stop_chore(mn_conveyor_start_current, "mn_conveyor.cos")
    manny:play_chore_looping(mn_conveyor_loop_current, "mn_conveyor.cos")
    while manny:find_sector_name("conveyor_exit") do
        WalkActorForward(manny.hActor)
        break_here()
    end
    stop_script(ac.manny_bob, ac)
    system:lock_display()
    ac:switch_to_set()
    manny:put_in_set(ac)
    manny:follow_boxes()
    break_here()
    manny:ignore_boxes()
    manny:setpos(6.03455, -2.02365, 0.3333)
    manny:setrot(0, 95.8004, 0)
    system:unlock_display()
    manny:stop_chore(mn_conveyor_loop_current, "mn_conveyor.cos")
    manny:play_chore_looping(mn_conveyor_drift, "mn_conveyor.cos")
    stop_sound("current.IMU")
    ac.prev_button_handler = system.buttonHandler
    system.buttonHandler = drift_button_handler
    ac.drifting = TRUE
    inventory_disabled = TRUE
    manny.costume_marker_handler = nil
    END_CUT_SCENE()
end
manny.conveyor_costume_marker_handler = function(arg1, arg2) -- line 534
    local local1 = { "cyCreak1.WAV", "cyCreak2.WAV", "cyCreak3.WAV", "cyCreak4.WAV" }
    local local2, local3, local4
    local4 = FALSE
    local2, local3 = next(local1, nil)
    while local2 do
        if sound_playing(local3) then
            local4 = TRUE
        end
        local2, local3 = next(local1, local2)
    end
    if not local4 then
        local3 = pick_one_of(local1)
        manny:play_sound_at(local3, 10, 100)
    end
    manny:play_default_footstep(arg2)
end
cy.set_up_actors = function(arg1) -- line 559
    cy.belt_actor:default()
    cy.lever_actor:default()
    cy.belt_actor:stop_chore()
    if cy.lever.up then
        cy.belt_actor:play_chore_looping(conv_belt_reverse)
    else
        cy.belt_actor:play_chore_looping(conv_belt_forward)
    end
    cy.belt:set_object_state("cy_chain.cos")
    if ew.crane_broken and ew.crane_down and ew.crane_pos == ew.at_conveyor and not cv.chain_bunched then
        cy.belt:play_chore(0)
        box_off("conveyor1")
        box_off("conveyor2")
        box_off("conveyor3")
        box_on("chain_box1")
        box_on("chain_box2")
        box_on("chain_box3")
        box_off("cv_box")
        box_on("cv_box2")
    else
        cy.belt:play_chore(1)
        box_on("conveyor1")
        box_on("conveyor2")
        box_on("conveyor3")
        box_off("chain_box1")
        box_off("chain_box2")
        box_off("chain_box3")
        box_off("cv_box2")
        box_on("cv_box")
    end
end
cy.enter_on_conveyor = function(arg1) -- line 597
    START_CUT_SCENE()
    manny:clear_hands()
    inventory_disabled = TRUE
    manny.costume_marker_handler = manny.conveyor_costume_marker_handler
    END_CUT_SCENE()
end
cy.enter = function(arg1) -- line 605
    if ew.crane_broken and ew.crane_down and ew.crane_pos == ew.at_conveyor then
        cy:add_object_state(0, "cy_chain1.bm", nil, OBJSTATE_OVERLAY, TRUE)
        cy:add_object_state(0, "cy_chain2.bm", "cy_chain2.zbm", OBJSTATE_STATE)
        cy:add_object_state(0, "cy_chain3.bm", "cy_chain3.zbm", OBJSTATE_STATE)
        cy:add_object_state(0, "cy_chain4.bm", "cy_chain4.zbm", OBJSTATE_STATE)
    end
    play_movie_looping("cy_w.snm")
    if system.lastSet == ea then
        cy.belt:make_touchable()
    else
        cy.belt:make_untouchable()
    end
    cy:set_up_actors()
    start_script(cy.fake_stair_box, cy)
    start_script(cy.slide_along_conveyor, cy)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 10, 10)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    start_sfx("cy_cvgo.IMU", IM_MED_PRIORITY, cy.loop_vol)
    if ac.chain_state ~= "gone" then
        start_sfx("chnUndw.imu", IM_MED_PRIORITY, ac.chain_vol)
    end
    if manny:find_sector_name("ground_box") then
        inventory_disabled = FALSE
        manny.costume_marker_handler = nil
    else
        start_script(cy.enter_on_conveyor)
    end
end
cy.exit = function(arg1) -- line 643
    stop_sound("cy_cvgo.IMU")
    stop_sound("chnUndw.imu")
    StopMovie("cy_w.snm")
    stop_script(cy.fake_stair_box)
    stop_script(cy.slide_along_conveyor, cy)
    cy:stop_drifting()
    KillActorShadows(manny.hActor)
    cy.belt_actor:free()
    cy.lever_actor:free()
    inventory_disabled = FALSE
    manny.costume_marker_handler = nil
end
cy.belt = Object:create(cy, "/cytx003/conveyor belt", -0.35719201, 3.40727, 0.28999999, { range = 1 })
cy.belt.use_pnt_x = -0.65273499
cy.belt.use_pnt_y = 3.50527
cy.belt.use_pnt_z = -0.2
cy.belt.use_rot_x = 0
cy.belt.use_rot_y = -70.459297
cy.belt.use_rot_z = 0
cy.belt.lookAt = function(arg1) -- line 694
    manny:say_line("/cyma004/")
end
cy.belt.use = function(arg1) -- line 698
    start_script(cy.climb_onto_conveyor, cy)
    cy.belt:make_untouchable()
end
cy.belt.make_touchable = function(arg1) -- line 704
    Object.make_touchable(arg1)
    if ew.crane_broken and ew.crane_down and ew.crane_pos == ew.at_conveyor and not cv.chain_bunched then
        arg1:play_chore(0)
    else
        arg1:play_chore(1)
    end
end
cy.lever = Object:create(cy, "/cytx005/lever", -0.462174, 3.99472, -0.035500001, { range = 0.60000002 })
cy.lever.use_pnt_x = -0.83027899
cy.lever.use_pnt_y = 3.9857199
cy.lever.use_pnt_z = -0.2
cy.lever.use_rot_x = 0
cy.lever.use_rot_y = 280.957
cy.lever.use_rot_z = 0
cy.lever.up = TRUE
cy.lever.lookAt = function(arg1) -- line 725
    manny:say_line("/cyma006/")
end
cy.lever.use = function(arg1) -- line 729
    local local1, local2
    START_CUT_SCENE()
    if not cy.belt.touchable then
        cy:jump_off_conveyor()
    end
    manny:walkto_object(arg1)
    manny:default("nautical")
    manny:play_chore(mn2_pull_lever, "mn2.cos")
    if cy.lever.up then
        cy.lever.up = FALSE
    else
        cy.lever.up = TRUE
    end
    sleep_for(1000)
    start_sfx("cy_switch.WAV")
    cy.lever_actor:pull()
    if find_script(cy.belt_actor.change_direction) then
        wait_for_script(cy.belt_actor.change_direction)
    end
    local1 = manny:getpos()
    local2 = manny:getrot()
    if ac.chain_state == "here" then
        ac:switch_to_set()
        RunFullscreenMovie("ac_bu.snm")
        wait_for_movie()
        ac.chain_state = "bunched"
        cy:switch_to_set()
        cy.belt:make_touchable()
        manny:put_in_set(cy)
        manny:setpos(local1.x, local1.y, local1.z)
        manny:setrot(local2.x, local2.y, local2.z)
    elseif cv.chain_bunched then
        cv:switch_to_set()
        cv.chain_actor:play_chore(cv_chain_gone)
        play_movie("cv_bd.snm", 203, 0)
        wait_for_movie()
        cy:switch_to_set()
        manny:put_in_set(cy)
        manny:setpos(local1.x, local1.y, local1.z)
        manny:setrot(local2.x, local2.y, local2.z)
        cy.belt_actor:set_visibility(FALSE)
        cy.belt:play_chore(0)
        manny:head_look_at_point(-0.079957001, 5.4566498, 1.178)
        play_movie("cy_ch.snm")
        wait_for_movie()
        cy.belt_actor:set_visibility(TRUE)
        ac:switch_to_set()
        StartFullscreenMovie("ac_ch.snm")
        wait_for_movie()
        cv.chain_bunched = FALSE
        ac.chain_state = "here"
        cy:switch_to_set()
        manny:put_in_set(cy)
        manny:setpos(local1.x, local1.y, local1.z)
        manny:setrot(local2.x, local2.y, local2.z)
        cy.belt_actor:stop_chore(conv_belt_reverse)
        cy.belt_actor:play_chore_looping(conv_belt_forward)
        cy.belt:make_touchable()
    elseif ac.chain_state == "bunched" then
        cur_puzzle_state[43] = TRUE
        ac:switch_to_set()
        RunFullscreenMovie("ac_ha.snm")
        wait_for_movie()
        ac.chain_state = "wrapped"
        cy:switch_to_set()
        manny:put_in_set(cy)
        manny:setpos(local1.x, local1.y, local1.z)
        manny:setrot(local2.x, local2.y, local2.z)
        cy.belt:make_touchable()
    else
        manny:head_look_at_point(-0.079957001, 5.4566498, 1.178)
        start_script(cy.belt_actor.change_direction, cy.belt_actor)
        manny:wait_for_chore(mn2_pull_lever, "mn2.cos")
        manny:head_look_at(arg1)
    end
    END_CUT_SCENE()
end
cy.lever.pickUp = cy.lever.use
cy.cv_door = Object:create(cy, "/cytx007/surface", -0.0114948, 8.6668997, 4.0833702, { range = 0.60000002 })
cy.cv_door.out_pnt_x = -0.034031902
cy.cv_door.out_pnt_y = 6.0511098
cy.cv_door.out_pnt_z = 1.6543
cy.cv_door.out_rot_x = 0
cy.cv_door.out_rot_y = 1.5181299
cy.cv_door.out_rot_z = 0
cy.cv_door.use_pnt_x = -0.0169535
cy.cv_door.use_pnt_y = 5.6827502
cy.cv_door.use_pnt_z = 1.2493401
cy.cv_door.use_rot_x = 0
cy.cv_door.use_rot_y = 1.5181299
cy.cv_door.use_rot_z = 0
cy.cv_box = cy.cv_door
cy.cv_box2 = cy.cv_door
cy.cv_door.walkOut = function(arg1) -- line 839
    PrintDebug("CV_DOOR WALKOUT!!!\n")
    if cv.chain_bunched or ac.chain_state ~= "gone" then
        START_CUT_SCENE()
        cv:switch_to_set()
        manny:put_in_set(cv)
        manny:setpos(-2.01431, -10.3627, 7.89)
        manny:setrot(0, 98.6993, 0)
        manny:set_run(FALSE)
        manny:force_auto_run(FALSE)
        manny:walkto(-3.28204, -10.4203, 7.89)
        manny:wait_for_actor()
        END_CUT_SCENE()
    else
        cv:come_out_door(cv.cy_door)
    end
end
cy.cv_door.lookAt = function(arg1) -- line 857
    manny:say_line("/cyma008/")
end
cy.ea_door = Object:create(cy, "/cytx009/lit path", -2.1626, 3.41258, 0.25, { range = 0.60000002 })
cy.ea_door.use_pnt_x = -1.9726
cy.ea_door.use_pnt_y = 3.65258
cy.ea_door.use_pnt_z = -0.2
cy.ea_door.use_rot_x = 0
cy.ea_door.use_rot_y = -211.92
cy.ea_door.use_rot_z = 0
cy.ea_door.out_pnt_x = -2.16558
cy.ea_door.out_pnt_y = 3.3426099
cy.ea_door.out_pnt_z = -0.2
cy.ea_door.out_rot_x = 0
cy.ea_door.out_rot_y = -211.92
cy.ea_door.out_rot_z = 0
cy.ea_door2 = cy.ea_door
cy.ea_door.walkOut = function(arg1) -- line 879
    ea:come_out_door(ea.cy_door)
end
cy.ea_door.lookAt = function(arg1) -- line 883
    manny:say_line("/cyma010/")
end
cy.conveyor_exit = Object:create(cy, "/cytx011/more belt", 0.17237701, 1.84667, 0.40000001, { range = 0.60000002 })
cy.conveyor_exit.use_pnt_x = 0.034717601
cy.conveyor_exit.use_pnt_y = 2.7439599
cy.conveyor_exit.use_pnt_z = 0.07
cy.conveyor_exit.use_rot_x = 0
cy.conveyor_exit.use_rot_y = 192.87579
cy.conveyor_exit.use_rot_z = 0
cy.conveyor_exit.out_pnt_x = 0.034717601
cy.conveyor_exit.out_pnt_y = 2.7439599
cy.conveyor_exit.out_pnt_z = 0.07
cy.conveyor_exit.out_rot_x = 0
cy.conveyor_exit.out_rot_y = 192.87579
cy.conveyor_exit.out_rot_z = 0
cy.conveyor_exit.walkOut = function(arg1) -- line 902
    start_script(cy.float_to_ac, cy)
end
cy.conveyor_exit.lookAt = function(arg1) -- line 906
    manny:say_line("/cyma012/")
end
cy.jump_box = { name = "jump off conveyor box" }
cy.jump_box.walkOut = function(arg1) -- line 915
    start_script(cy.jump_off_conveyor, cy)
end
cy.climb_chain_box = { name = "climb chain box" }
cy.climb_chain_box.walkOut = function(arg1) -- line 923
    if ew.crane_broken and ew.crane_down and ew.crane_pos == ew.at_conveyor and not cy.drifting then
        start_script(cy.drift_to_chain, cy)
    end
end
CheckFirstTime("dd.lua")
dofile("sea_bees.lua")
dd = Set:create("dd.set", "dry dock", { dd_estws = 0, dd_estws2 = 0, dd_barla = 1, dd_overhead = 2 })
dd.camera_adjusts = { 0, 60 }
dd.no_chant = 999
dd.chant_table = { }
dd.chant_table[0] = { terry = "/ddte001/", angry_bees = "/ddab002/", manny = "/ddma023/", length = 2090 }
dd.chant_table[1] = { terry = "/ddte003/", angry_bees = "/ddab004/", manny = "/ddma024/", length = 2080 }
dd.chant_table[2] = { terry = "/ddte005/", angry_bees = "/ddab006/", manny = "/ddma025/", length = 2440 }
dd.chant_table[3] = { terry = "/ddte007/", angry_bees = "/ddab008/", manny = "/ddma026/", length = 2570 }
dd.chant_table[4] = { terry = "/ddte009/", angry_bees = "/ddab010/", manny = "/ddma027/", length = 1580 }
dd.chant_table[5] = { terry = "/ddte011/", angry_bees = "/ddab012/", manny = "/ddma028/", length = 1510 }
dd.chant_table[6] = { terry = "/ddte013/", angry_bees = "/ddab014/", manny = "/ddma029/", length = 1040, bee_delay = 0 }
dd.chant_table[7] = { terry = "/ddte015/", angry_bees = "/ddab016/", manny = "/ddma030/", length = 860, bee_delay = 0 }
dd.chant_table[8] = { terry = "/ddte017/", angry_bees = "/ddab018/", manny = "/ddma033/", length = 2010, bee_delay = 1700 }
dd.chant_table[9] = { terry = "/ddte019/", angry_bees = "/ddab020/", manny = "/ddma031/", length = 2410 }
dd.chant_table[10] = { terry = "/ddte021/", angry_bees = "/ddab022/", manny = "/ddma032/", length = 2290 }
dd.chant_table.sequence = { 0, 1, 0, 1, 2, 3, 2, 3, 4, 5, 4, 5, 6, 7, 8, 6, 7, 8, 9, 10, 9, 10 }
dd.chant_table.score = 0
dd.chant_table.cur_index = 1
dd.chant_table.num_entries = 18
dd.chant_table.special_num_entries = 22
dd.chant_table.time_for_manny = FALSE
dd.chanting_bees = function(arg1) -- line 85
    local local1
    while 1 do
        local1 = dd.chant_table.sequence[dd.chant_table.cur_index]
        dd:bees_chant_once(local1)
        dd.chant_table.cur_index = dd.chant_table.cur_index + 1
        if dd.chant_table.score >= dd.chant_table.num_entries then
            if dd.chant_table.cur_index > dd.chant_table.special_num_entries then
                dd.chant_table.cur_index = 1
            end
        elseif dd.chant_table.cur_index > dd.chant_table.num_entries then
            dd.chant_table.cur_index = 1
        end
        break_here()
    end
end
dd.bees_chant_once = function(arg1, arg2) -- line 107
    local local1, local2
    if dd.chant_table[arg2].bee_delay then
        local2 = dd.chant_table[arg2].bee_delay
    else
        local2 = dd.chant_table[arg2].length - 500
        if local2 < 500 then
            local2 = 500
        end
    end
    dd.chant_table.time_for_manny = FALSE
    terry:say_line(dd.chant_table[arg2].terry, { background = TRUE, skip_log = TRUE })
    if dd.chant_table[arg2].bee_delay then
        if local2 > 0 then
            sleep_for(local2)
        end
    else
        local1 = 0
        while local1 < local2 and terry:is_speaking() do
            break_here()
            local1 = local1 + system.frameTime
        end
    end
    dd.chant_table.time_for_manny = TRUE
    if dd.chant_table[arg2].bee_delay == nil then
        terry:wait_for_message()
    end
    angry_bees:say_line(dd.chant_table[arg2].angry_bees, { background = TRUE, skip_log = TRUE })
    local2 = 2000
    local1 = 0
    while local1 < local2 and angry_bees:is_speaking() do
        break_here()
        local1 = local1 + system.frameTime
    end
    dd.chant_table.time_for_manny = FALSE
    angry_bees:wait_for_message()
end
dd.manny_chant = function(arg1) -- line 155
    local local1, local2
    local1 = dd.chant_table.sequence[dd.chant_table.cur_index]
    manny:say_line(dd.chant_table[local1].manny)
    if dd.chant_table.time_for_manny then
        if dd.chant_table.score <= dd.chant_table.num_entries then
            dd.chant_table.score = dd.chant_table.score + 1
        end
    else
        dd.chant_table.score = 0
        dd.chant_table.cur_index = 1
        START_CUT_SCENE()
        stop_script(dd.chanting_bees)
        manny:wait_for_message()
        terry.stop_rotate = TRUE
        terry:play_chore(bee_barrel_lk_lft, "bee_barrel.cos")
        terry:say_line("/ddte034/", { background = TRUE })
        terry:wait_for_chore(bee_barrel_lk_lft, "bee_barrel.cos")
        terry:stop_chore(bee_barrel_lk_lft, "bee_barrel.cos")
        terry:play_chore_looping(bee_barrel_lk_lft_hold, "bee_barrel.cos")
        terry:wait_for_message()
        wait_for_message()
        local2 = 0
        while find_script(terry.strike_rotate) and local2 < 5000 do
            break_here()
            local2 = local2 + system.frameTime
        end
        terry:say_line("/ddte035/", { background = TRUE })
        terry:wait_for_message()
        manny:shrug_gesture()
        manny:say_line("/ddma036/", { background = TRUE })
        terry:wait_for_message()
        terry:setrot(0, 20, 0, TRUE)
        terry:stop_chore(bee_barrel_lk_lft_hold, "bee_barrel.cos")
        terry:run_chore(bee_barrel_lk_lft_to_ctr, "bee_barrel.cos")
        terry:say_line("/ddte037/")
        terry:wait_for_message()
        single_start_script(terry.strike_rotate, terry)
        END_CUT_SCENE()
        start_script(dd.chanting_bees, dd)
    end
end
dd.grumble = function(arg1, arg2) -- line 204
end
dd.set_up_barrel_bees = function(arg1) -- line 221
    bee1:default()
    bee1:put_in_set(dd)
    bee1:init_barrel_stuff(0.744106, -2.74781, 0, 0, 92.3754, 0, TRUE)
    bee2:default()
    bee2:put_in_set(dd)
    bee2:init_barrel_stuff(0.279684, -2.23932, 0, 0, 180, 0)
end
dd.set_up_actors = function(arg1) -- line 231
    if in_year_four then
        terry:put_in_set(nil)
        angry_bees:put_in_set(nil)
        bee1:put_in_set(nil)
        bee2:put_in_set(nil)
    elseif not dd.strike_on then
        if not dd.terry_arrested then
            terry:default()
            terry:put_in_set(dd)
            terry:init_barrel_stuff(0.20409, -3.14569, 0, 0, 33.323, 0)
        end
        dd:set_up_barrel_bees()
        worker_bee1:default()
        worker_bee1:put_in_set(dd)
        worker_bee1:work_idles()
    else
        worker_bee1:put_in_set(nil)
        worker_bee2:put_in_set(nil)
        if not dd.terry_arrested then
            terry:default("strike")
            terry:put_in_set(dd)
            terry:setpos(0.295176, -2.88143, 0.3485)
            terry:setrot(0, 16.9407, 0)
            terry:strike_idles()
        end
        bee1:default("strike")
        bee1:put_in_set(dd)
        bee1:init_strike_stuff(0.694405, -2.6637, 0, 0, 90, 0)
        angry_bees:default("strike")
        angry_bees:put_in_set(dd)
        angry_bees:init_strike_stuff(0.401905, -2.302, 0, 0, 140, 0)
        angry_bees:strike_idles()
        bee2:default("strike")
        bee2:put_in_set(dd)
        bee2:init_strike_stuff(-0.0665543, -2.65247, 0, 0, 250, 0)
        bee2:strike_idles()
    end
end
dd.enter = function(arg1) -- line 285
    if in_year_four then
        dd.barrel_bees:make_untouchable()
        dd.worker_bees:make_untouchable()
        dd.tools:make_untouchable()
        dd.striking_bees:make_untouchable()
        dd.dry_docks:make_touchable()
        dd.terry_obj:make_untouchable()
        box_on("notools_box1")
        box_on("notools_box2")
    elseif dd.strike_on then
        MakeSectorActive("strikebox1", FALSE)
        MakeSectorActive("strikebox2", FALSE)
        dd.barrel_bees:make_untouchable()
        dd.worker_bees:make_untouchable()
        dd.striking_bees:make_touchable()
        angry_bees:set_speech_mode(TRUE)
        dd.terry_obj:make_untouchable()
        dd.tools:make_touchable()
        box_off("notools_box1")
        box_off("notools_box2")
        dd:add_object_state(dd_estws, "dd_0_tools.bm", "dd_0_tools.zbm", OBJSTATE_STATE)
        dd:add_object_state(dd_barla, "dd_1_tools.bm", nil, OBJSTATE_STATE)
        dd.tools:set_object_state("dd_tools.cos")
        dd.tools.interest_actor:put_in_set(dd)
        dd.tools.interest_actor:set_visibility(TRUE)
        dd.tools.interest_actor:play_chore(0)
        start_script(dd.chanting_bees)
    else
        MakeSectorActive("strikebox1", TRUE)
        MakeSectorActive("strikebox2", TRUE)
        dd.striking_bees:make_untouchable()
        dd.tools:make_untouchable()
        box_on("notools_box1")
        box_on("notools_box2")
        if not dd.terry_arrested then
            dd.terry_obj:make_touchable()
            dd.barrel_bees.use_pnt_x = 0.00822388
            dd.barrel_bees.use_pnt_y = -2.40578
            dd.barrel_bees.use_pnt_z = 0
            dd.barrel_bees.use_rot_x = 0
            dd.barrel_bees.use_rot_y = 200.292
            dd.barrel_bees.use_rot_z = 0
            dd.barrel_bees.obj_x = 0.152738
            dd.barrel_bees.obj_y = -2.81556
            dd.barrel_bees.obj_z = 0.4603
            dd.barrel_bees:make_touchable()
        else
            dd.terry_obj:make_untouchable()
            dd.barrel_bees.obj_x = 0.453461
            dd.barrel_bees.obj_y = -2.6785
            dd.barrel_bees.obj_z = 0.427
            dd.barrel_bees:make_touchable()
            dd.barrel_bees.use_pnt_x = -0.0515388
            dd.barrel_bees.use_pnt_y = -2.6785
            dd.barrel_bees.use_pnt_z = 0
            dd.barrel_bees.use_rot_x = 0
            dd.barrel_bees.use_rot_y = 297.799
            dd.barrel_bees.use_rot_z = 0
        end
    end
    if dd.terry_obj.touchable or dd.strike_on then
        box_off("no_terry_box")
        box_off("no_terry_box2")
    else
        box_on("no_terry_box")
        box_on("no_terry_box2")
    end
    if in_year_four then
        box_on("nobees_box")
    else
        box_off("nobees_box")
    end
    dd:set_up_actors()
    dd:current_setup(dd_barla)
    start_script(foghorn_sfx)
    dd:add_ambient_sfx(harbor_ambience_list, harbor_ambience_parm_list)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0.349614, -2.8997, 3.645)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    if dd.strike_on then
        SetActiveShadow(terry.hActor, 0)
        SetActorShadowPoint(terry.hActor, 0.349614, -2.8997, 3.645)
        SetActorShadowPlane(terry.hActor, "shadow1")
        AddShadowPlane(terry.hActor, "shadow1")
    end
end
dd.exit = function(arg1) -- line 388
    StopMovie()
    stop_script(foghorn_sfx)
    stop_script(dd.chanting_bees)
    stop_script(dd.manny_chant)
    sea_bee.strike_actor = nil
    terry:stop_idles()
    stop_script(terry.fake_hover)
    bee1:stop_idles()
    bee2:stop_idles()
    worker_bee1:stop_idles()
    worker_bee2:stop_idles()
    angry_bees:stop_idles()
    shut_up_everybody()
    terry:free()
    angry_bees:free()
    bee1:free()
    bee2:free()
    worker_bee1:free()
    worker_bee2:free()
    stop_sound("dd_frdrm.IMU")
    stop_sound("beewing.imu")
    KillActorShadows(manny.hActor)
    if dd.strike_on then
        KillActorShadows(terry.hActor)
    end
end
dd.camerachange = function(arg1, arg2, arg3) -- line 424
    if arg3 == dd_estws then
        play_movie_looping("dd_lx.snm", 0, 107)
    else
        StopMovie()
    end
    if arg3 == dd_barla then
        dd.barrel_bees.interest_actor:play_sound_at("dd_frdrm.IMU", 100, 127)
    else
        stop_sound("dd_frdrm.IMU")
    end
end
dd.update_music_state = function(arg1) -- line 438
    if dd.strike_on and not dd.terry_arrested then
        return stateDD_STRIKE
    else
        return stateDD
    end
end
dd.barrel_bees = Object:create(dd, "/ddtx046/dock workers", 0.152738, -2.8155601, 0.4603, { range = 1.2 })
dd.barrel_bees.use_pnt_x = 0.0082238801
dd.barrel_bees.use_pnt_y = -2.4057801
dd.barrel_bees.use_pnt_z = 0
dd.barrel_bees.use_rot_x = 0
dd.barrel_bees.use_rot_y = 200.29201
dd.barrel_bees.use_rot_z = 0
dd.barrel_bees.lookAt = function(arg1) -- line 459
    if dd.terry_arrested then
        manny:say_line("/ddma047/")
    else
        manny:say_line("/ddma048/")
    end
end
dd.barrel_bees.use_paper = function(arg1) -- line 467
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    if not dd.terry_arrested then
        manny:head_look_at(dd.terry_obj)
    else
        manny:head_look_at(dd.barrel_bees)
    end
    manny:say_line("/ddma049/")
    manny:wait_for_message()
    if not dd.terry_arrested then
        terry:remove_barrel_stamp()
        terry:stop_barrel_idles()
        terry:head_left()
        terry:say_line("/ddte050/")
        terry:head_wag()
        terry:point_once()
        wait_for_message()
        terry:say_line("/ddte051/")
        wait_for_message()
        terry:say_line("/ddte052/")
        terry:head_nod()
        terry:stop_head_left()
        wait_for_message()
        terry:say_line("/ddte053/")
        terry:head_left()
        terry:gesture1()
        terry:gesture2()
        terry:stop_gesture()
        wait_for_message()
        dd:grumble("agreement")
        terry:stop_head_left()
        sleep_for(1000)
        terry:head_left()
        terry:say_line("/ddte054/")
        terry:head_wag()
        terry:wait_for_message()
        terry:stop_head_left()
        terry:replace_barrel_stamp()
        terry:barrel_idles()
    end
    END_CUT_SCENE()
end
dd.barrel_bees.use = function(arg1) -- line 511
    if dd.terry_arrested then
        START_CUT_SCENE()
        manny:say_line("/ddma055/")
        wait_for_message()
        sleep_for(2000)
        wait_for_message()
        manny:say_line("/ddma056/")
        END_CUT_SCENE()
    else
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        manny:head_look_at(dd.terry_obj)
        END_CUT_SCENE()
        Dialog:run("be1", "dlg_bees.lua")
    end
end
dd.barrel_bees.use_book = function(arg1) -- line 530
    bi.book:free()
    cur_puzzle_state[28] = TRUE
    START_CUT_SCENE()
    terry:remove_barrel_stamp()
    terry:stop_barrel_idles()
    manny:walkto(0.00433837, -2.60886, 0, 0, 178.631, 0)
    manny:wait_for_actor()
    manny:head_look_at(dd.terry_obj)
    manny:stop_chore(mc_hold, "mc.cos")
    manny:play_chore(mc_give_book_from_hold, "mc.cos")
    manny:say_line("/ddma057/")
    manny:wait_for_message()
    manny:wait_for_chore(mc_give_book_from_hold, "mc.cos")
    terry:play_chore(tm_manifesto_read_book, "tm_manifesto.cos")
    sleep_for(2000)
    manny:stop_chore(mc_activate_book, "mc.cos")
    manny:stop_chore(mc_give_book_from_hold, "mc.cos")
    manny:play_chore(mc_stop_give_book, "mc.cos")
    manny:wait_for_chore(mc_stop_give_book, "mc.cos")
    manny.is_holding = nil
    manny:stop_chore(mc_stop_give_book, "mc.cos")
    terry:say_line("/nretm02a/")
    terry:wait_for_message()
    terry:say_line("/nretm02b/")
    terry:wait_for_message()
    music_state:set_sequence(seqYr4Iris)
    IrisDown(490, 290, 2500)
    terry:say_line("/nretm02c/")
    sleep_for(2500)
    terry:wait_for_message()
    END_CUT_SCENE()
    stop_script(foghorn_sfx)
    stop_sound("beewing.IMU")
    stop_sound("dd_frdrm.IMU")
    terry:stop_idles()
    bee1:stop_idles()
    bee2:stop_idles()
    worker_bee1:stop_idles()
    worker_bee2:stop_idles()
    worker_bee1:stop_chore()
    worker_bee2:stop_chore()
    worker_bee1:free()
    worker_bee2:free()
    terry:free()
    IrisUp(480, 285, 1)
    start_script(cut_scene.normarae, cut_scene)
end
dd.terry_obj = Object:create(dd, "terry", 0.1937, -3.0701001, 0.44400001, { range = 1.4 })
dd.terry_obj.use_pnt_x = 0.0082238801
dd.terry_obj.use_pnt_y = -2.4057801
dd.terry_obj.use_pnt_z = 0
dd.terry_obj.use_rot_x = 0
dd.terry_obj.use_rot_y = 200.29201
dd.terry_obj.use_rot_z = 0
dd.terry_obj.lookAt = dd.barrel_bees.lookAt
dd.terry_obj.use_paper = dd.barrel_bees.use_paper
dd.terry_obj.use = dd.barrel_bees.use
dd.terry_obj.use_book = dd.barrel_bees.use_book
dd.worker_bees = Object:create(dd, "/ddtx058/workers", 3.02299, -3.70382, 2.1996, { range = 3 })
dd.worker_bees.use_pnt_x = -0.0046294299
dd.worker_bees.use_pnt_y = -2.76352
dd.worker_bees.use_pnt_z = 0
dd.worker_bees.use_rot_x = 0
dd.worker_bees.use_rot_y = 258.01999
dd.worker_bees.use_rot_z = 0
dd.worker_bees.lookAt = function(arg1) -- line 603
    if dd.terry_arrested then
        manny:say_line("/ddma059/")
    else
        manny:say_line("/ddma060/")
    end
end
dd.worker_bees.use = function(arg1) -- line 611
    if dd.terry_arrested then
        manny:say_line("/ddma061/")
    else
        manny:say_line("/ddma062/")
    end
end
dd.dry_docks = Object:create(dd, "/ddtx058/dry docks", 1.9107, -3.1161001, 1.3, { range = 1.8 })
dd.dry_docks.use_pnt_x = 1.91521
dd.dry_docks.use_pnt_y = -2.3505399
dd.dry_docks.use_pnt_z = 0
dd.dry_docks.use_rot_x = 0
dd.dry_docks.use_rot_y = 186.147
dd.dry_docks.use_rot_z = 0
dd.dry_docks:make_untouchable()
dd.dry_docks.lookAt = function(arg1) -- line 630
    manny:say_line("/ddma148/")
end
dd.dry_docks.use = function(arg1) -- line 634
    manny:say_line("/ddma149/")
end
dd.tools = Object:create(dd, "/ddtx063/tools", 3.42729, -1.84909, 0, { range = 1 })
dd.tools.use_pnt_x = 2.02548
dd.tools.use_pnt_y = -1.99537
dd.tools.use_pnt_z = 0
dd.tools.use_rot_x = 0
dd.tools.use_rot_y = 73.664398
dd.tools.use_rot_z = 0
dd.tools.touchable = FALSE
dd.tools.lookAt = function(arg1) -- line 648
    manny:say_line("/ddma064/")
end
dd.tools.pickUp = function(arg1) -- line 652
    START_CUT_SCENE()
    manny:say_line("/ddma065/")
    wait_for_message()
    manny:say_line("/ddma066/")
    wait_for_message()
    manny:head_look_at(dd.striking_bees)
    END_CUT_SCENE()
    manny:say_line("/ddma067/")
end
dd.tools.use = dd.tools.pickUp
dd.striking_bees = Object:create(dd, "/ddtx068/striking bees", 0.358307, -2.75442, 0.44569999, { range = 1.2 })
dd.striking_bees.use_pnt_x = 0.099768102
dd.striking_bees.use_pnt_y = -3.1134501
dd.striking_bees.use_pnt_z = 0
dd.striking_bees.use_rot_x = 0
dd.striking_bees.use_rot_y = 300.14401
dd.striking_bees.use_rot_z = 0
dd.striking_bees.lookAt = function(arg1) -- line 673
    manny:say_line("/ddma069/")
end
dd.striking_bees.use = function(arg1) -- line 677
    if not find_script(dd.manny_chant) then
        start_script(dd.manny_chant)
    end
end
dd.bw_door = Object:create(dd, "/ddtx070/door", 6.4823899, -1.10084, 0.2, { range = 0 })
dd.bw_door.use_pnt_x = 6.0623498
dd.bw_door.use_pnt_y = -0.73478502
dd.bw_door.use_pnt_z = 0
dd.bw_door.use_rot_x = 0
dd.bw_door.use_rot_y = 294.05499
dd.bw_door.use_rot_z = 0
dd.bw_door.out_pnt_x = 6.3910699
dd.bw_door.out_pnt_y = -0.58802199
dd.bw_door.out_pnt_z = 0
dd.bw_door.out_rot_x = 0
dd.bw_door.out_rot_y = 294.05499
dd.bw_door.out_rot_z = 0
dd.bw_door.touchable = FALSE
dd.bw_box = dd.bw_door
dd.bw_door.walkOut = function(arg1) -- line 704
    bw:come_out_door(bw.dd_door)
end
dd.hb_door = Object:create(dd, "/ddtx071/bridge", 7.2923799, -2.8808401, 0.36000001, { range = 0 })
dd.hb_door.use_pnt_x = 6.9554601
dd.hb_door.use_pnt_y = -2.84039
dd.hb_door.use_pnt_z = 0
dd.hb_door.use_rot_x = 0
dd.hb_door.use_rot_y = -84.0373
dd.hb_door.use_rot_z = 0
dd.hb_door.out_pnt_x = 7.51475
dd.hb_door.out_pnt_y = -2.78197
dd.hb_door.out_pnt_z = 0
dd.hb_door.out_rot_x = 0
dd.hb_door.out_rot_y = -84.0373
dd.hb_door.out_rot_z = 0
dd.hb_door.touchable = FALSE
dd.hb_box = dd.hb_door
dd.hb_door.walkOut = function(arg1) -- line 732
    hb:come_out_door(hb.dd_door)
end
dd.lx_door = Object:create(dd, "/ddtx150/door", -0.87710798, -2.7339499, 0.41999999, { range = 0 })
dd.lx_door.use_pnt_x = -0.227108
dd.lx_door.use_pnt_y = -2.7339499
dd.lx_door.use_pnt_z = 0
dd.lx_door.use_rot_x = 0
dd.lx_door.use_rot_y = -253.263
dd.lx_door.use_rot_z = 0
dd.lx_door.out_pnt_x = -0.089898802
dd.lx_door.out_pnt_y = -3.0886199
dd.lx_door.out_pnt_z = 0
dd.lx_door.out_rot_x = 0
dd.lx_door.out_rot_y = -49.1357
dd.lx_door.out_rot_z = 0
dd.lx_door.touchable = FALSE
dd.lx_box = dd.lx_door
dd.lx_door.walkOut = function(arg1) -- line 754
    lx:come_out_door(lx.dd_door)
end
dd_tools_here = 0
dd_tools_gone = 1
deck_o_cards_show = 0
deck_o_cards_hide = 1
CheckFirstTime("de.lua")
dofile("de_screen.lua")
dofile("forklift.lua")
de = Set:create("de.set", "dillopede elevator", { de_frkha = 0 })
de.forklift_actor = Actor:create(nil, nil, nil, "forklift")
de.forklift_actor.initialized = FALSE
de.forklift_actor.initialize = function(arg1) -- line 28
    if not arg1.initialized and system.currentSet == wc then
        arg1.initialized = TRUE
        arg1.blades_up = FALSE
        arg1.currentSet = wc
        arg1:default()
        arg1:put_in_set(wc)
        arg1:setpos(0.934834, -2.1862, 0)
        arg1:setrot(0, 14.7653, 0)
        arg1.current_pos = { x = 0.934834, y = -2.1862, z = 0 }
        arg1.current_rot = { x = 0, y = 14.7653, z = 0 }
        arg1:play_chore(forklift_down_hold)
        arg1:set_collision_mode(COLLISION_BOX, 1)
    end
end
de.forklift_actor.default = function(arg1) -- line 44
    arg1:free()
    arg1:set_costume("forklift.cos")
    arg1:set_walk_rate(0.4)
    arg1:set_turn_rate(30)
    arg1:set_mumble_chore(forklift_manny_mumble)
    arg1:set_talk_chore(1, forklift_stop_talk)
    arg1:set_talk_chore(2, forklift_a)
    arg1:set_talk_chore(3, forklift_c)
    arg1:set_talk_chore(4, forklift_e)
    arg1:set_talk_chore(5, forklift_f)
    arg1:set_talk_chore(6, forklift_l)
    arg1:set_talk_chore(7, forklift_m)
    arg1:set_talk_chore(8, forklift_o)
    arg1:set_talk_chore(9, forklift_t)
    arg1:set_talk_chore(10, forklift_u)
    arg1:play_chore(forklift_mc_hide)
    if not arg1.blades_up then
        arg1:play_chore(forklift_down_hold)
    else
        arg1:play_chore(forklift_up_hold)
    end
    arg1:follow_boxes()
    SetActorReflection(arg1.hActor, 0)
    arg1.turns_disabled = FALSE
end
de.forklift_actor.spot_offset = { x = 0.019602999, y = -0.31899399, z = 0 }
de.forklift_actor.use_offset = { x = 0.35984999, y = -0.37974, z = 0 }
de.forklift_actor.out_offset = { x = 0.48767999, y = -0.37901601, z = 0 }
de.forklift_actor.lever_offset = { x = -0.2846958, y = 0.066358998, z = 0 }
de.forklift_actor.lever_use_offset = { x = -0.434297, y = 0.004007, z = 0 }
de.forklift_actor.get_spot_point = function(arg1) -- line 81
    local local1, local2, local3
    local2 = arg1:getrot()
    local1 = RotateVector(arg1.spot_offset, local2)
    local3 = arg1:getpos()
    local1.x = local1.x + local3.x
    local1.y = local1.y + local3.y
    local1.z = 0.47999999
    return local1.x, local1.y, local1.z
end
de.forklift_actor.get_use_point = function(arg1) -- line 94
    local local1, local2, local3
    local2 = arg1:getrot()
    local1 = RotateVector(arg1.use_offset, local2)
    local3 = arg1:getpos()
    local1.x = local1.x + local3.x
    local1.y = local1.y + local3.y
    local1.z = 0
    return local1.x, local1.y, local1.z
end
de.forklift_actor.get_out_point = function(arg1) -- line 107
    local local1, local2, local3
    local2 = arg1:getrot()
    local1 = RotateVector(arg1.out_offset, local2)
    local3 = arg1:getpos()
    local1.x = local1.x + local3.x
    local1.y = local1.y + local3.y
    local1.z = 0
    return local1.x, local1.y, local1.z
end
de.forklift_actor.get_lever_points = function(arg1) -- line 120
    local local1, local2, local3, local4
    local3 = arg1:getrot()
    local1 = RotateVector(arg1.lever_offset, local3)
    local4 = arg1:getpos()
    local1.x = local1.x + local4.x
    local1.y = local1.y + local4.y
    local1.z = 0.30000001
    local2 = RotateVector(arg1.lever_use_offset, local3)
    local2.x = local2.x + local4.x
    local2.y = local2.y + local4.y
    local2.z = 0
    return local1.x, local1.y, local1.z, local2.x, local2.y, local2.z
end
de.forklift_actor.get_use_rot = function(arg1) -- line 138
    local local1
    local1 = arg1:getrot()
    local1.y = local1.y + 87.834099
    if local1.y > 360 then
        local1.y = local1.y - 360
    end
    return local1.x, local1.y, local1.z
end
de.forklift_actor.can_get_out_here = function(arg1) -- line 149
    local local1, local2, local3, local4, local5, local6
    local local7 = FALSE
    system.currentSet:activate_forklift_boxes(FALSE)
    local1, local2, local3 = arg1:get_use_point()
    if GetPointSector(local1, local2, local3) then
        local1, local2, local3 = arg1:get_out_point()
        if GetPointSector(local1, local2, local3) then
            local4, local5, local6, local1, local2, local3 = arg1:get_lever_points()
            if GetPointSector(local1, local2, local3) then
                local7 = TRUE
            end
        end
    end
    system.currentSet:activate_forklift_boxes(TRUE)
    return local7
end
de.forklift_actor.update_object = function(arg1) -- line 171
    local local1 = { }
    local local2 = { }
    local local3 = { }
    local1.x, local1.y, local1.z = arg1:get_use_point()
    system.currentSet.forklift.use_pnt_x = local1.x
    system.currentSet.forklift.use_pnt_y = local1.y
    system.currentSet.forklift.use_pnt_z = local1.z
    local2.x, local2.y, local2.z = arg1:get_use_rot()
    system.currentSet.forklift.use_rot_x = local2.x
    system.currentSet.forklift.use_rot_y = local2.y
    system.currentSet.forklift.use_rot_z = local2.z
    local1.x, local1.y, local1.z = arg1:get_spot_point()
    system.currentSet.forklift.obj_x = local1.x
    system.currentSet.forklift.obj_y = local1.y
    system.currentSet.forklift.obj_z = local1.z
    system.currentSet.forklift.interest_actor:setpos(local1.x, local1.y, local1.z)
    local1.x, local1.y, local1.z, local3.x, local3.y, local3.z = arg1:get_lever_points()
    system.currentSet.lever.obj_x = local1.x
    system.currentSet.lever.obj_y = local1.y
    system.currentSet.lever.obj_z = local1.z
    system.currentSet.lever.interest_actor:setpos(local1.x, local1.y, local1.z)
    system.currentSet.lever.use_pnt_x = local3.x
    system.currentSet.lever.use_pnt_y = local3.y
    system.currentSet.lever.use_pnt_z = local3.z
    local2 = arg1:getrot()
    system.currentSet.lever.use_rot_x = local2.x
    system.currentSet.lever.use_rot_y = local2.y + 267
    system.currentSet.lever.use_rot_z = local2.z
end
de.forklift_actor.mount = function(arg1) -- line 206
    if de:walk_to_forklift() then
        START_CUT_SCENE()
        arg1:play_chore(forklift_mc_climb_fork)
        manny:set_visibility(FALSE)
        arg1:wait_for_chore(forklift_mc_climb_fork)
        arg1:play_chore(forklift_mc_in_fork)
        manny:put_in_set(nil)
        manny.say_line = manny.forklift_say_line
        arg1:set_selected()
        system.currentSet.forklift:make_untouchable()
        system.currentSet.lever:make_untouchable()
        arg1:set_walk_chore(-1)
        arg1:set_turn_chores(-1, -1)
        arg1:follow_boxes()
        SetActorReflection(arg1.hActor, 50)
        system.currentSet:activate_forklift_boxes(TRUE)
        arg1:follow_boxes()
        system.buttonHandler = forklift_button_handler
        manny.is_driving = TRUE
        inventory_disabled = TRUE
        start_sfx("forkStrt.WAV")
        sleep_for(1500)
        start_sfx("forkIdle.IMU")
        END_CUT_SCENE()
    end
end
de.forklift_actor.dismount = function(arg1) -- line 238
    local local1, local2, local3, local4
    if not arg1:can_get_out_here() then
        system.default_response("not here")
        return FALSE
    end
    START_CUT_SCENE()
    manny.is_driving = FALSE
    stop_script(arg1.forward)
    stop_script(arg1.backward)
    stop_script(arg1.turn_left)
    stop_script(arg1.turn_right)
    if sound_playing("forkDriv.IMU") then
        fade_sfx("forkDriv.IMU", 100)
    end
    stop_sound("forkBkup.IMU")
    box_on("fork_box1")
    if system.currentSet == de then
        MakeSectorActive("fork_box1", TRUE)
        MakeSectorActive("fork_box2", TRUE)
        MakeSectorActive("fork_box3", TRUE)
        MakeSectorActive("fork_box4", TRUE)
        MakeSectorActive("fork_box5", TRUE)
        MakeSectorActive("fork_box6", TRUE)
    end
    if not de.forklift_actor:find_sector_name("fork_box1") and not de.shaft.stuck then
        local4 = de.forklift_actor:get_positive_rot()
        if local4.y > 220 and local4.y < 300 then
            de.forklift_actor:setrot(0, 270, 0, TRUE)
            de.forklift_actor:set_walk_rate(0.40000001)
        else
            de.forklift_actor:setrot(0, 88, 0, TRUE)
            de.forklift_actor:set_walk_rate(-0.40000001)
        end
        while not de.forklift_actor:find_sector_name("fork_box1") do
            WalkActorForward(de.forklift_actor.hActor)
            break_here()
        end
    end
    system.currentSet:activate_forklift_boxes(FALSE)
    stop_sound("forkIdle.IMU")
    start_sfx("forkStop.WAV")
    arg1:play_chore(forklift_mc_out)
    arg1:wait_for_chore(forklift_mc_out)
    arg1:update_object()
    system.currentSet.forklift:make_touchable()
    system.currentSet.lever:make_touchable()
    local1, local2, local3 = de.forklift_actor:get_out_point()
    manny:put_in_set(system.currentSet)
    manny:setpos(local1, local2, local3)
    local4 = arg1:getrot()
    manny:setrot(local4.x, local4.y + 280, local4.z)
    manny:set_visibility(TRUE)
    arg1:stop_chore(forklift_mc_out)
    arg1:play_chore(forklift_mc_hide)
    arg1:set_collision_mode(COLLISION_BOX, 1)
    END_CUT_SCENE()
    manny:set_selected()
    system.buttonHandler = SampleButtonHandler
    manny.say_line = manny.normal_say_line
    inventory_disabled = FALSE
    arg1.current_pos = arg1:getpos()
    arg1.current_rot = arg1:getrot()
end
manny.forklift_say_line = function(arg1, arg2, arg3) -- line 318
    local local1
    if not manny.is_driving then
        Actor.normal_say_line(arg1, arg2, arg3)
    else
        local1 = de.forklift_actor.name
        de.forklift_actor.name = manny.name
        de.forklift_actor:say_line(arg2, arg3)
        de.forklift_actor.name = local1
    end
end
de.forklift_actor.forward = function(arg1) -- line 331
    stop_script(arg1.backward)
    if sound_playing("forkBkup.IMU") then
        stop_sound("forkBkup.IMU")
    end
    if sound_playing("forkIdle.IMU") then
        fade_sfx("forkIdle.IMU", 100, 0)
    end
    arg1:set_walk_rate(0.4)
    start_sfx("forkDriv.IMU")
    while get_generic_control_state("MOVE_FORWARD") and cutSceneLevel <= 0 do
        WalkActorForward(arg1.hActor)
        break_here()
    end
    fade_sfx("forkDriv.IMU", 500, 0)
    if not sound_playing("forkIdle.IMU") then
        start_sfx("forkIdle.IMU")
    else
        fade_sfx("forkIdle.IMU", 100, 127)
    end
end
de.forklift_actor.backward = function(arg1) -- line 356
    stop_script(arg1.forward)
    if sound_playing("forkDriv.IMU") then
        fade_sfx("forkDriv.IMU", 500, 0)
    end
    if not sound_playing("forkIdle.IMU") then
        start_sfx("forkIdle.IMU")
    end
    start_sfx("forkBkup.IMU")
    arg1:set_walk_rate(-0.3)
    while get_generic_control_state("MOVE_BACKWARD") and cutSceneLevel <= 0 do
        WalkActorForward(arg1.hActor)
        break_here()
    end
    arg1:set_walk_rate(0.4)
    stop_sound("forkBkup.IMU")
end
de.forklift_actor.turn_left = function(arg1) -- line 376
    stop_script(arg1.turn_right)
    while get_generic_control_state("TURN_LEFT") and cutSceneLevel <= 0 do
        if not arg1.turns_disabled then
            TurnActor(arg1.hActor, 1)
        end
        break_here()
    end
end
de.forklift_actor.turn_right = function(arg1) -- line 387
    stop_script(arg1.turn_left)
    while get_generic_control_state("TURN_RIGHT") and cutSceneLevel <= 0 do
        if not arg1.turns_disabled then
            TurnActor(arg1.hActor, -1)
        end
        break_here()
    end
end
de.forklift_actor.driveto = function(arg1, arg2, arg3, arg4) -- line 398
    local local1
    arg1:set_walk_chore(-1)
    arg1:set_turn_chores(-1, -1)
    arg1:set_walk_rate(0.40000001)
    if sound_playing("forkBkup.IMU") then
        stop_sound("forkBkup.IMU")
    end
    if sound_playing("forkIdle.IMU") then
        fade_sfx("forkIdle.IMU", 100, 0)
    end
    start_sfx("forkDriv.IMU")
    while proximity(arg1.hActor, arg2, arg3, arg4) > 0.1 do
        WalkActorForward(arg1.hActor)
        break_here()
    end
    fade_sfx("forkDriv.IMU", 500, 0)
    if not sound_playing("forkIdle.IMU") then
        start_sfx("forkIdle.IMU")
    else
        fade_sfx("forkIdle.IMU", 100, 127)
    end
end
de.forklift_actor.monitor_boxes = function(arg1) -- line 423
    local local1, local2
    while TRUE do
        local1 = arg1:get_positive_rot()
        if local1.y > 40 and local1.y < 130 then
            MakeSectorActive("fork_box2", TRUE)
            MakeSectorActive("fork_box3", TRUE)
            local2 = de.shaft:getpos()
            if not arg1.blades_up and local2.z >= -0.0204992 and local2.z <= 1.62642 then
                MakeSectorActive("fork_box5", TRUE)
                MakeSectorActive("fork_box6", TRUE)
            else
                MakeSectorActive("fork_box5", FALSE)
                MakeSectorActive("fork_box6", FALSE)
            end
        else
            MakeSectorActive("fork_box2", FALSE)
            MakeSectorActive("fork_box3", FALSE)
            MakeSectorActive("fork_box5", FALSE)
            MakeSectorActive("fork_box6", FALSE)
        end
        if not de.grating:is_open() then
            MakeSectorActive("fork_stuck_trig", TRUE)
            MakeSectorActive("fork_trigger", FALSE)
            MakeSectorActive("fork_exit_box", FALSE)
            if local1.y > 10 and local1.y < 170 then
                MakeSectorActive("fork_box4", TRUE)
            else
                MakeSectorActive("fork_box4", FALSE)
                while not arg1:find_sector_name("fork_box") do
                    WalkActorForward(arg1.hActor)
                    break_here()
                end
            end
            if arg1:find_sector_name("fork_box2") or arg1:find_sector_name("fork_box3") then
                arg1.turns_disabled = TRUE
                arg1:setrot(0, 90, 0, TRUE)
            else
                arg1.turns_disabled = FALSE
            end
        else
            arg1.turns_disabled = FALSE
            MakeSectorActive("fork_box2", TRUE)
            MakeSectorActive("fork_box3", TRUE)
            MakeSectorActive("fork_box4", TRUE)
            MakeSectorActive("fork_box5", TRUE)
            MakeSectorActive("fork_box6", TRUE)
            MakeSectorActive("fork_exit_box", TRUE)
            MakeSectorActive("fork_trigger", TRUE)
            MakeSectorActive("fork_stuck_trig", FALSE)
        end
        if de.forklift_actor.currentSet == de and manny.is_driving then
            de.forklift_actor:follow_boxes()
        end
        break_here()
    end
end
de.forklift_actor.slide_out = function(arg1) -- line 491
    local local1 = 0
    local local2 = -0.1
    local local3
    stop_script(arg1.monitor_boxes)
    START_CUT_SCENE()
    local3 = de.shaft:getpos()
    while local3.z < 1.227 do
        break_here()
        local3 = de.shaft:getpos()
    end
    de.forklift_actor:set_walk_chore(-1)
    de.forklift_actor:set_turn_chores(-1, -1)
    while arg1:find_sector_name("fork_box5") or arg1:find_sector_name("fork_box6") or arg1:find_sector_name("fork_box2") or arg1:find_sector_name("fork_box3") do
        local1 = local1 + 1
        SetActorPitch(arg1.hActor, local1)
        arg1:set_walk_rate(local2)
        WalkActorForward(arg1.hActor)
        local2 = local2 - 0.1
        break_here()
    end
    de.forklift_actor:set_walk_chore(-1)
    de.forklift_actor:set_turn_chores(-1, -1)
    while local1 > 0 and local2 < 0 do
        local1 = local1 - 1
        SetActorPitch(arg1.hActor, local1)
        local2 = local2 + 0.5
        arg1:set_walk_rate(local2)
        WalkActorForward(arg1.hActor)
        break_here()
    end
    de.forklift_actor:set_walk_chore(-1)
    de.forklift_actor:set_turn_chores(-1, -1)
    local1 = 3
    while local1 > 0 do
        SetActorPitch(arg1.hActor, local1)
        break_here()
        SetActorPitch(arg1.hActor, 0)
        break_here()
        local1 = local1 - 1
    end
    END_CUT_SCENE()
    arg1:set_walk_chore(-1)
    arg1:set_turn_chores(-1, -1)
    start_script(arg1.monitor_boxes, arg1)
end
de.forklift_actor.stop_elevator = function(arg1) -- line 545
    local local1, local2
    local local3
    stop_script(arg1.monitor_boxes)
    cur_puzzle_state[21] = TRUE
    START_CUT_SCENE()
    stop_sound("deRun.IMU")
    start_sfx("deCrash.WAV")
    local3 = de.shaft:getpos()
    while local3.z > de.shaft.z_pos["stuck"] do
        break_here()
        local3 = de.shaft:getpos()
    end
    stop_script(de.raise_elevator)
    start_script(de.shaft.follow_blades, de.shaft)
    local1 = 0
    local2 = 1
    while local1 > -8 do
        local1 = local1 - local2
        SetActorPitch(arg1.hActor, local1)
        local2 = local2 + 0.5
        break_here()
    end
    sleep_for(1000)
    while local1 < 0 do
        local1 = local1 + 0.2
        if local1 > 0 then
            local1 = 0
        end
        SetActorPitch(arg1.hActor, local1)
        break_here()
    end
    de.shaft.floor = "stuck"
    de.shaft.stuck = TRUE
    de.shaft:setpos(-0.71435797, -0.29663301, de.shaft.z_pos["stuck"])
    END_CUT_SCENE()
    arg1:set_walk_chore(-1)
    arg1:set_turn_chores(-1, -1)
end
de.forklift_actor.back_out_stuck = function(arg1) -- line 591
    local local1
    START_CUT_SCENE()
    single_start_script(de.continue_raise_elevator, de)
    box_on("fork_box1")
    de.shaft.stuck = FALSE
    de.forklift_actor:setrot(0, 88, 0, TRUE)
    de.forklift_actor:wait_for_actor()
    de.forklift_actor:set_walk_rate(-0.40000001)
    if not sound_playing("forkIdle.IMU") then
        start_sfx("forkIdle.IMU")
    end
    start_sfx("forkBkup.IMU")
    while not de.forklift_actor:find_sector_name("fork_box1") do
        de.forklift_actor:walk_forward()
        break_here()
    end
    de.forklift_actor:set_walk_rate(0.40000001)
    stop_sound("forkBkup.IMU")
    local1 = de.shaft:getpos()
    while local1.z > de.shaft.z_pos["stuck"] - 2 do
        break_here()
        local1 = de.shaft:getpos()
    end
    END_CUT_SCENE()
end
de.forklift_actor.monitor_objects = function(arg1) -- line 623
    local local1, local2, local3, local4
    local3 = system.currentSet.forklift
    local4 = system.currentSet.lever
    while TRUE do
        if not manny.is_driving and arg1.currentSet == system.currentSet then
            local1 = proximity(manny.hActor, local3.use_pnt_x, local3.use_pnt_y, local3.use_pnt_z)
            local2 = proximity(manny.hActor, local4.use_pnt_x, local4.use_pnt_y, local4.use_pnt_z)
            if local1 > local2 then
                system.currentSet.forklift.touchable = FALSE
                system.currentSet.lever.touchable = TRUE
                if hot_object == system.currentSet.forklift then
                    hot_object = nil
                end
            else
                system.currentSet.forklift.touchable = TRUE
                system.currentSet.lever.touchable = FALSE
                if hot_object == system.currentSet.lever then
                    hot_object = nil
                end
            end
        end
        break_here()
    end
end
de.walk_to_forklift = function(arg1) -- line 653
    START_CUT_SCENE()
    manny:walkto_object(system.currentSet.forklift)
    manny:wait_for_actor()
    de.forklift_actor:set_collision_mode(COLLISION_OFF)
    manny:walkto_object(system.currentSet.forklift)
    manny:wait_for_actor()
    END_CUT_SCENE()
    return TRUE
end
forklift_button_handler = function(arg1, arg2, arg3) -- line 665
    if cutSceneLevel <= 0 then
        if control_map.PICK_UP[arg1] or control_map.USE[arg1] then
            if arg2 then
                start_script(de.forklift_actor.dismount, de.forklift_actor)
            end
        elseif control_map.MOVE_FORWARD[arg1] then
            if not de.shaft.stuck then
                if arg2 then
                    if not find_script(de.forklift_actor.forward) then
                        start_script(de.forklift_actor.forward, de.forklift_actor)
                    end
                end
            end
        elseif control_map.MOVE_BACKWARD[arg1] then
            if arg2 then
                if de.shaft.stuck and de.shaft.floor == "secret_hallway" then
                    manny:say_line("/dema003/")
                elseif de.shaft.stuck then
                    single_start_script(de.forklift_actor.back_out_stuck, de.forklift_actor)
                elseif not find_script(de.forklift_actor.backward) then
                    start_script(de.forklift_actor.backward, de.forklift_actor)
                end
            end
        elseif control_map.TURN_LEFT[arg1] then
            if not de.shaft.stuck then
                if arg2 then
                    single_start_script(de.forklift_actor.turn_left, de.forklift_actor)
                end
            end
        elseif control_map.TURN_RIGHT[arg1] then
            if not de.shaft.stuck then
                if arg2 then
                    single_start_script(de.forklift_actor.turn_right, de.forklift_actor)
                end
            end
        else
            CommonButtonHandler(arg1, arg2, arg3)
        end
    else
        CommonButtonHandler(arg1, arg2, arg3)
    end
end
de.shaft = Actor:create(nil, nil, nil, "elevator shaft")
de.shaft.floor = "bottom_floor"
de.shaft.z_pos = { bottom_floor = 13.0895, top_floor = -8.0805902, secret_hallway = 1.62642, stuck = -0.0204992 }
de.shaft.default = function(arg1) -- line 723
    arg1:free()
    arg1:set_costume("forklift.cos")
    arg1:put_in_set(de)
    arg1:setpos(-0.714358, -0.296633, -8.08059)
    arg1:setrot(0, 89.9778, 0)
    if arg1.z_pos[arg1.floor] then
        arg1:setpos(-0.714358, -0.296633, arg1.z_pos[arg1.floor])
    end
    arg1:play_chore(forklift_shaft_only)
end
de.shaft.follow_blades = function(arg1) -- line 735
    local local1, local2, local3, local4
    local4 = arg1:getpos()
    while TRUE do
        local1, local2, local3 = GetActorNodeLocation(de.forklift_actor.hActor, 20)
        arg1:setpos(local4.x, local4.y, local3 - 0.1481148)
        break_here()
    end
end
de.raise_elevator = function(arg1) -- line 746
    local local1, local2, local3
    local local4 = FALSE
    de.shaft.floor = "going_up"
    de.grating:play_chore(de_screen_close)
    de.grating:wait_for_chore()
    de.grating:close()
    sleep_for(1000)
    start_sfx("deStart.wav")
    sleep_for(1750)
    start_sfx("deRun.IMU")
    local2 = de.shaft:getpos()
    local3 = 0
    while local3 < 10 do
        local2.z = local2.z + 0.0049999999
        local3 = local3 + 1
        de.shaft:setpos(local2.x, local2.y, local2.z)
        break_here()
    end
    local2 = de.shaft:getpos()
    local1 = de.shaft.z_pos["top_floor"]
    local3 = 0.0099999998
    while local2.z > local1 do
        local2.z = local2.z - local3
        if abs(local2.z - local1) <= 1 then
            if not local4 then
                local4 = TRUE
                fade_sfx("deRun.IMU", 500, 0)
                start_sfx("deStop.WAV")
            end
            if local3 > 0.0099999998 then
                local3 = local3 - local3 / 10
            end
        elseif local3 < 0.1 then
            local3 = local3 + local3 / 10
        end
        de.shaft:setpos(local2.x, local2.y, local2.z)
        break_here()
    end
    de.shaft:setpos(local2.x, local2.y, local1)
    if de.shaft.floor == "going_up" then
        start_sfx("deThump.wav")
        sleep_for(750)
        de.grating:play_chore(de_screen_open)
        de.grating:wait_for_chore()
        de.grating:open()
        de.shaft.floor = "top_floor"
    end
end
de.continue_raise_elevator = function(arg1) -- line 801
    local local1 = FALSE
    local local2, local3, local4
    de.shaft.stuck = FALSE
    de.shaft.floor = "going_up"
    start_sfx("deStart.wav")
    sleep_for(1750)
    start_sfx("deRun.IMU")
    sleep_for(1000)
    stop_script(de.shaft.follow_blades)
    single_start_script(de.forklift_actor.monitor_boxes, de.forklift_actor)
    local2 = de.shaft:getpos()
    local1 = de.shaft.z_pos["top_floor"]
    local3 = 0.050000001
    while local2.z > local1 do
        local2.z = local2.z - local3
        if abs(local2.z - local1) <= 1 then
            if not local4 then
                local4 = TRUE
                fade_sfx("deRun.IMU", 500, 0)
                start_sfx("deStop.WAV")
            end
            if local3 > 0.0099999998 then
                local3 = local3 - local3 / 10
            end
        elseif local3 < 0.1 then
            local3 = local3 + local3 / 10
        end
        de.shaft:setpos(local2.x, local2.y, local2.z)
        break_here()
    end
    de.shaft:setpos(local2.x, local2.y, local1)
    if de.shaft.floor == "going_up" then
        start_sfx("deThump.wav")
        sleep_for(750)
        de.grating:play_chore(de_screen_open)
        de.grating:wait_for_chore()
        de.grating:open()
        de.shaft.floor = "top_floor"
    end
end
de.lower_elevator = function(arg1) -- line 849
    local local1, local2, local3
    local local4 = FALSE
    de.shaft.floor = "going_down"
    de.grating:play_chore(de_screen_close)
    de.grating:wait_for_chore()
    de.grating:close()
    sleep_for(1000)
    start_sfx("deStart.wav")
    sleep_for(1750)
    start_sfx("deRun.IMU")
    local2 = de.shaft:getpos()
    local3 = 0
    while local3 < 10 do
        local2.z = local2.z - 0.0049999999
        local3 = local3 + 1
        de.shaft:setpos(local2.x, local2.y, local2.z)
        break_here()
    end
    local2 = de.shaft:getpos()
    local1 = de.shaft.z_pos["bottom_floor"]
    local3 = 0.0099999998
    while local2.z < local1 do
        local2.z = local2.z + local3
        if abs(local2.z - local1) <= 1 then
            if not local4 then
                local4 = TRUE
                fade_sfx("deRun.IMU", 500, 0)
                start_sfx("deStop.WAV")
            end
            if local3 > 0.0099999998 then
                local3 = local3 - local3 / 10
            end
        elseif local3 < 0.1 then
            local3 = local3 + local3 / 10
        end
        de.shaft:setpos(local2.x, local2.y, local2.z)
        break_here()
    end
    de.shaft:setpos(local2.x, local2.y, local1)
    if de.shaft.floor == "going_down" then
        start_sfx("deThump.wav")
        sleep_for(750)
        de.grating:play_chore(de_screen_open)
        de.grating:wait_for_chore()
        de.grating:open()
        de.shaft.floor = "bottom_floor"
    end
end
de.activate_forklift_boxes = function(arg1, arg2) -- line 907
    if arg2 then
        MakeSectorActive("manny_box", FALSE)
        MakeSectorActive("fork_box1", TRUE)
        if de.grating:is_open() then
            MakeSectorActive("fork_trigger", TRUE)
            MakeSectorActive("fork_stuck_trig", FALSE)
        else
            MakeSectorActive("fork_trigger", FALSE)
            MakeSectorActive("fork_stuck_trig", TRUE)
        end
        start_script(de.forklift_actor.monitor_boxes, de.forklift_actor)
    else
        stop_script(de.forklift_actor.monitor_boxes)
        MakeSectorActive("manny_box", TRUE)
        MakeSectorActive("fork_box1", FALSE)
        MakeSectorActive("fork_box2", FALSE)
        MakeSectorActive("fork_box3", FALSE)
        MakeSectorActive("fork_box4", FALSE)
        MakeSectorActive("fork_box5", FALSE)
        MakeSectorActive("fork_box6", FALSE)
        MakeSectorActive("fork_exit_box", FALSE)
        MakeSectorActive("fork_trigger", FALSE)
        MakeSectorActive("fork_stuck_trig", FALSE)
    end
end
de.drive_in = function(arg1) -- line 935
    de:switch_to_set()
    de.forklift_actor:put_in_set(de)
    de.forklift_actor:setpos(-0.160368, -0.42447, 0)
    de.forklift_actor:setrot(0, -89.1654, 0)
    de.forklift_actor.currentSet = de
    de.forklift_actor.current_pos = { x = -0.160368, y = -0.42447, z = 0 }
    de.forklift_actor.current_rot = { x = 0, y = -89.1654, z = 0 }
end
de.enter = function(arg1) -- line 1019
    NewObjectState(de_frkha, OBJSTATE_STATE, "de_screen.bm", "de_screen.zbm")
    de.grating:set_object_state("de_screen.cos")
    if de.grating:is_open() then
        de.grating:play_chore(de_screen_set_open)
    else
        de.grating:play_chore(de_screen_set_closed)
    end
    he.elevator:unlock()
    de.forklift_actor:initialize()
    if de.forklift_actor.currentSet == de then
        de.forklift_actor:put_in_set(de)
        de.forklift_actor:set_visibility(TRUE)
        de.forklift_actor:setpos(de.forklift_actor.current_pos.x, de.forklift_actor.current_pos.y, de.forklift_actor.current_pos.z)
        de.forklift_actor:setrot(de.forklift_actor.current_rot.x, de.forklift_actor.current_rot.y, de.forklift_actor.current_rot.z)
        de.forklift_actor:update_object()
        de.forklift:make_touchable()
        de.lever:make_touchable()
    else
        de.forklift:make_untouchable()
        de.lever:make_untouchable()
    end
    de.shaft:default()
    SetActorClipActive(de.shaft.hActor, TRUE)
    SetActorClipPlane(de.shaft.hActor, -376, -6, 156, -2.07293, -0.024033, -2.4744)
    de:activate_forklift_boxes(manny.is_driving)
    manny:set_collision_mode(COLLISION_SPHERE, 0.35)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 5)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(de.forklift_actor.hActor, 0)
    SetActorShadowPoint(de.forklift_actor.hActor, 0, 0, 5)
    SetActorShadowPlane(de.forklift_actor.hActor, "shadow1")
    AddShadowPlane(de.forklift_actor.hActor, "shadow1")
    if manny.is_driving then
        manny.say_line = manny.forklift_say_line
        start_sfx("forkIdle.IMU")
    end
    single_start_script(de.forklift_actor.monitor_objects, de.forklift_actor)
end
de.exit = function(arg1) -- line 1072
    stop_sound("forkIdle.IMU")
    stop_sound("forkDriv.IMU")
    stop_sound("forkBkup.IMU")
    stop_sound("deRun.IMU")
    stop_script(de.shaft.follow_blades)
    stop_script(de.forklift_actor.monitor_boxes)
    manny:set_collision_mode(COLLISION_OFF)
    KillActorShadows(manny.hActor)
    KillActorShadows(de.forklift_actor.hActor)
    stop_script(de.forklift_actor.monitor_objects)
end
de.forklift = Object:create(de, "/detx001/forklift", -0.019050101, -0.223704, 0.44, { range = 0.69999999 })
de.forklift.use_pnt_x = 0.42223001
de.forklift.use_pnt_y = -0.55665803
de.forklift.use_pnt_z = 0
de.forklift.use_rot_x = 0
de.forklift.use_rot_y = 425.66
de.forklift.use_rot_z = 0
de.forklift.touchable = FALSE
de.forklift.lookAt = function(arg1) -- line 1104
    if de.shaft.stuck then
        manny:say_line("/dema002/")
    else
        wc.forklift:lookAt()
    end
end
de.forklift.pickUp = function(arg1) -- line 1113
    wc.forklift:pickUp()
end
de.forklift.lower_blades = function(arg1) -- line 1117
    de.forklift_actor.blades_up = FALSE
    START_CUT_SCENE()
    manny:walkto_object(system.currentSet.lever)
    de.forklift_actor:play_chore(forklift_fork_down, "forklift.cos")
    manny:set_visibility(FALSE)
    sleep_for(200)
    start_sfx("forkUpDn.WAV")
    sleep_for(933)
    if system.currentSet == de and de.shaft.floor == "secret_hallway" then
        de.grating:play_chore(de_screen_close)
        de.grating:close()
    end
    sleep_for(900)
    manny:set_visibility(TRUE)
    de.forklift_actor:play_chore(forklift_mc_hide)
    de.forklift_actor:wait_for_chore(forklift_fork_down)
    de.forklift_actor:play_chore(forklift_down_hold, "forklift.cos")
    END_CUT_SCENE()
    if system.currentSet == de and de.shaft.floor == "secret_hallway" then
        de.shaft.floor = "stuck"
    end
end
de.forklift.raise_blades = function(arg1) -- line 1143
    de.forklift_actor.blades_up = TRUE
    START_CUT_SCENE()
    manny:walkto_object(system.currentSet.lever)
    de.forklift_actor:play_chore(forklift_fork_up, "forklift.cos")
    manny:set_visibility(FALSE)
    sleep_for(200)
    start_sfx("forkUpDn.WAV")
    sleep_for(933)
    if system.currentSet == de and de.shaft.floor == "stuck" then
        de.grating:play_chore(de_screen_open)
        de.grating:open()
    end
    sleep_for(900)
    manny:set_visibility(TRUE)
    de.forklift_actor:play_chore(forklift_mc_hide)
    de.forklift_actor:wait_for_chore(forklift_fork_up)
    de.forklift_actor:play_chore(forklift_up_hold, "forklift.cos")
    END_CUT_SCENE()
    if system.currentSet == de and de.shaft.floor == "stuck" then
        de.shaft.floor = "secret_hallway"
    end
end
de.forklift.use = function(arg1) -- line 1169
    if de.shaft.stuck and de.shaft.floor == "secret_hallway" then
        manny:say_line("/dema003/")
    else
        de.forklift_actor:update_object()
        start_script(de.forklift_actor.mount, de.forklift_actor)
    end
end
de.lever = Object:create(de, "/detx004/lever", -0.65904999, -0.223704, 0.28, { range = 0.60000002 })
de.lever.use_pnt_x = -0.60983902
de.lever.use_pnt_y = -0.54779798
de.lever.use_pnt_z = 0
de.lever.use_rot_x = 0
de.lever.use_rot_y = 371.30499
de.lever.use_rot_z = 0
de.lever.lookAt = function(arg1) -- line 1187
    wc.lever:lookAt()
end
de.lever.use = function(arg1) -- line 1191
    de.forklift_actor:update_object()
    if de.forklift_actor.blades_up then
        de.forklift:lower_blades()
    else
        de.forklift:raise_blades()
    end
end
de.button = Object:create(de, "/detx005/button", 0.050949801, 0.77629697, 0.23, { range = 0.69999999 })
de.button.use_pnt_x = 0.076113999
de.button.use_pnt_y = 0.41569301
de.button.use_pnt_z = 0
de.button.use_rot_x = 0
de.button.use_rot_y = 12.0311
de.button.use_rot_z = 0
de.button.lookAt = function(arg1) -- line 1210
    manny:say_line("/dema006/")
end
de.button.pickUp = function(arg1) -- line 1214
    system.default_response("not how")
end
de.button.use = function(arg1) -- line 1218
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:play_chore(ms_hand_on_obj, "mc.cos")
    sleep_for(500)
    start_sfx("deBtn.WAV")
    manny:wait_for_chore(ms_hand_on_obj, "mc.cos")
    manny:stop_chore(ms_hand_on_obj, "mc.cos")
    manny:play_chore(ms_hand_off_obj, "mc.cos")
    manny:wait_for_chore(ms_hand_off_obj, "mc.cos")
    END_CUT_SCENE()
    if de.shaft.floor == "top_floor" then
        start_script(de.lower_elevator, de)
    elseif de.shaft.floor == "bottom_floor" then
        start_script(de.raise_elevator, de)
    elseif de.shaft.stuck then
        start_script(de.button.stuck, de.button)
    elseif de.shaft.floor == "going_up" or de.shaft.floor == "going_down" then
        manny:say_line("/dema007/")
    end
end
de.button.stuck = function(arg1) -- line 1241
    START_CUT_SCENE()
    manny:head_look_at(de.grating)
    manny:say_line("/dema008/")
    wait_for_message()
    manny:head_look_at(nil)
    manny:say_line("/dema009/")
    END_CUT_SCENE()
end
de.grating = Object:create(de, "/detx010/door", -1.1990499, -0.643704, 0.47999999, { range = 1.2 })
de.grating.use_pnt_x = -0.40065399
de.grating.use_pnt_y = 0.40080401
de.grating.use_pnt_z = 0
de.grating.use_rot_x = 0
de.grating.use_rot_y = 98.296898
de.grating.use_rot_z = 0
de.grating.out_pnt_x = -0.89499998
de.grating.out_pnt_y = 0.328538
de.grating.out_pnt_z = 0
de.grating.out_rot_x = 0
de.grating.out_rot_y = 98.296898
de.grating.out_rot_z = 0
de.grating.opened = TRUE
de.grating.left_use_pnt_x = -0.335446
de.grating.left_use_pnt_y = -1.1489
de.grating.left_use_pnt_z = 0
de.grating.left_use_rot_x = 0
de.grating.left_use_rot_y = 85.784401
de.grating.left_use_rot_z = 0
de.grating.left_out_pnt_x = -0.89499998
de.grating.left_out_pnt_y = -1.10788
de.grating.left_out_pnt_z = 0
de.grating.left_out_rot_x = 0
de.grating.left_out_rot_y = 85.784401
de.grating.left_out_rot_z = 0
de.grating.comeOut = function(arg1) -- line 1286
    local local1
    local1 = manny:getpos()
    if local1.x > 1.5700001 then
        START_CUT_SCENE()
        manny:setpos(arg1.left_out_pnt_x, arg1.left_out_pnt_y, arg1.left_out_pnt_z)
        manny:setrot(arg1.left_out_rot_x, arg1.left_out_rot_y + 180, arg1.left_out_rot_z)
        manny:walkto(arg1.left_use_pnt_x, arg1.left_use_pnt_y, arg1.left_use_pnt_z)
        manny:wait_for_actor()
        END_CUT_SCENE()
    else
        Object.come_out_door(arg1)
    end
end
de.grating.walkOut = function(arg1) -- line 1302
    if de.shaft.floor == "top_floor" then
        he:come_out_door(he.elevator)
    elseif de.shaft.floor == "secret_hallway" then
        dh:come_out_door(dh.de_door)
    elseif de.shaft.floor == "stuck" then
        manny:say_line("/dema011/")
    elseif de.shaft.floor == "bottom_floor" then
        wc:switch_to_set()
        manny:put_in_set(wc)
        manny:setpos(wc.de_door.out_pnt_x, wc.de_door.out_pnt_y, wc.de_door.out_pnt_z)
        manny:setrot(wc.de_door.out_rot_x, wc.de_door.out_rot_y + 180, wc.de_door.out_rot_z)
        wc.de_door:play_chore(0)
        wc.de_door:wait_for_chore()
        wc.de_door:open()
        manny:walkto(wc.de_door.use_pnt_x, wc.de_door.use_pnt_y, wc.de_door.use_pnt_z)
    elseif de.shaft.floor == "going_up" or de.shaft.floor == "going_down" then
        manny:say_line("/dema012/")
    end
end
de.grating.lookAt = function(arg1) -- line 1324
    local local1
    if de.shaft.floor == "top_floor" then
        manny:say_line("/dema013/")
    elseif de.shaft.floor == "secret_hallway" then
        manny:say_line("/dema014/")
    elseif de.shaft.stuck then
        manny:say_line("/dema015/")
    elseif de.shaft.floor == "bottom_floor" then
        manny:say_line("/dema016/")
    elseif de.shaft.floor == "going_up" or de.shaft.floor == "going_down" then
        local1 = de.shaft:getpos()
        if de.shaft.floor == "going_up" and local1.z < de.shaft.z_pos["stuck"] or (de.shaft.floor == "going_down" and local1.z > de.shaft.z_pos["secret_hallway"]) then
            manny:say_line("/dema017/")
        else
            Object.lookAt(arg1)
        end
    end
end
de.fork_trigger = { name = "forklift trigger" }
de.fork_trigger.walkOut = function(arg1) -- line 1351
    if de.grating:is_open() then
        if de.shaft.floor ~= "bottom_floor" then
            manny:say_line("/dema012/")
        else
            start_script(wc.drive_in, wc)
        end
    end
end
de.fork_stuck_trig = { name = "forklift stuck trigger" }
de.fork_stuck_trig.walkOut = function(arg1) -- line 1365
    if de.shaft.floor == "going_up" then
        start_script(de.forklift_actor.stop_elevator, de.forklift_actor)
    elseif de.shaft.floor == "going_down" then
        start_script(de.forklift_actor.slide_out, de.forklift_actor)
    end
end
demo_inv_mt_balloon_in = 0
demo_inv_mt_balloon_out = 1
demo_inv_bread_in = 2
demo_inv_bread_out = 3
demo_inv_coral_in = 4
demo_inv_coral_out = 5
demo_inv_eggs_in = 6
demo_inv_eggs_out = 7
demo_inv_emptyhand_in = 8
demo_inv_emptyhand_out = 9
demo_inv_suit_scythe_in = 10
demo_inv_suit_scythe_out = 11
demo_inv_balloon_cat_out = 12
demo_inv_balloon_cat_in = 13
demo_inv_balloon_dingo_in = 14
demo_inv_balloon_dingo_out = 15
demo_inv_balloon_frost_in = 16
demo_inv_balloon_frost_out = 17
demo_inv_full_balloon_in = 18
demo_inv_full_balloon_out = 19
demo_inv_cards_in = 20
demo_inv_cards_out = 21
demo_inv_mouthpiece_in = 22
demo_inv_mouthpiece_out = 23
demo_inv_work_order_in = 24
demo_inv_work_order_out = 25
de_screen_open = 0
de_screen_close = 1
de_screen_set_open = 2
de_screen_set_closed = 3
CheckFirstTime("dh.lua")
dofile("mc_suitcase.lua")
dh = Set:create("dh.set", "dillopede hall", { dh_room = 0, dh_safws = 1 })
dh.suitcase_actor = Actor:create(nil, nil, nil, "suitcase")
dh.suitcase_actor.default = function(arg1) -- line 16
    arg1:free()
    arg1:set_costume("mc_suitcase.cos")
    arg1:set_colormap("cafe.cmp")
    arg1:put_in_set(dh)
    arg1:setpos(-0.356249, 3.72979, 0)
    arg1:setrot(0, 55.8682, 0)
    arg1:play_chore(mc_suitcase_suitcase_only)
end
dh.enter = function(arg1) -- line 32
    if dh.suitcase.touchable then
        dh.suitcase_actor:default()
        box_on("checkcase_box")
    else
        box_off("checkcase_box")
    end
end
dh.exit = function(arg1) -- line 41
end
dh.suitcase = Object:create(dh, "/dhtx001/suitcase", -0.69071603, 3.8353701, 0.30000001, { range = 0.60000002 })
dh.suitcase.use_pnt_x = -0.356249
dh.suitcase.use_pnt_y = 3.72979
dh.suitcase.use_pnt_z = 0
dh.suitcase.use_rot_x = 0
dh.suitcase.use_rot_y = 55.868198
dh.suitcase.use_rot_z = 0
dh.suitcase.lookAt = function(arg1) -- line 57
    if not arg1.seen_tix then
        manny:say_line("/dhma002/")
    else
        manny:say_line("/dhma003/")
    end
    box_on("checkcase_box")
end
dh.suitcase.put_away = function(arg1) -- line 66
    system.default_response("no pocket")
    return TRUE
end
dh.suitcase.use = function(arg1) -- line 71
    if arg1.owner == manny then
        arg1:lookAt()
    else
        cur_puzzle_state[22] = TRUE
        START_CUT_SCENE("nohead")
        if manny.is_holding then
            put_away_held_item()
        end
        manny:walkto_object(arg1)
        dh:current_setup(0)
        manny:push_costume("mc_suitcase.cos")
        manny:play_chore(mc_suitcase_open, "mc_suitcase.cos")
        dh.suitcase_actor:set_visibility(FALSE)
        sleep_for(1000)
        music_state:set_sequence(seqFakeTix)
        manny:wait_for_chore(mc_suitcase_open, "mc_suitcase.cos")
        manny:say_line("/dhma005/")
        manny:wait_for_message()
        manny:say_line("/dhma006/")
        manny:wait_for_message()
        manny:say_line("/dhma007/")
        manny:wait_for_message()
        manny:say_line("/dhma008/")
        manny:wait_for_message()
        manny:head_look_at(nil)
        manny:play_chore(mc_suitcase_close, "mc_suitcase.cos")
        arg1.seen_tix = TRUE
        arg1:lookAt()
        manny:wait_for_message()
        manny:wait_for_chore(mc_suitcase_close, "mc_suitcase.cos")
        manny:setrot(0, 48.1586, 0)
        manny:play_chore(mc_suitcase_grab_case, "mc_suitcase.cos")
        manny:wait_for_chore(mc_suitcase_grab_case, "mc_suitcase.cos")
        manny:pop_costume()
        END_CUT_SCENE()
        arg1:get()
        start_script(cut_scene.getcard, cut_scene)
    end
end
dh.suitcase.pickUp = dh.suitcase.use
dh.de_door = Object:create(dh, "/dhtx009/door", 0.019099999, -3.2279999, 0, { range = 0.60000002 })
dh.de_door.use_pnt_x = 0.0103251
dh.de_door.use_pnt_y = -2.5153201
dh.de_door.use_pnt_z = 0
dh.de_door.use_rot_x = 0
dh.de_door.use_rot_y = 175.57401
dh.de_door.use_rot_z = 0
dh.de_door.out_pnt_x = -0.0262205
dh.de_door.out_pnt_y = -2.9875
dh.de_door.out_pnt_z = 0
dh.de_door.out_rot_x = 0
dh.de_door.out_rot_y = 175.57401
dh.de_door.out_rot_z = 0
dh.de_door.touchable = FALSE
dh.de_box = dh.de_door
dh.de_door.walkOut = function(arg1) -- line 137
    de:come_out_door(de.grating)
end
dh.checkcase_box = { name = "check suitcase" }
dh.checkcase_box.walkOut = function(arg1) -- line 145
    if not arg1.triggered then
        arg1.triggered = TRUE
    elseif dh.suitcase.owner ~= manny then
        if not dh.suitcase.seen_tix then
            START_CUT_SCENE()
            manny:say_line("/dhma010/")
            manny:wait_for_message()
            END_CUT_SCENE()
        end
        start_script(dh.suitcase.use, dh.suitcase)
    end
end
DIALOG_AXIS_SENSITIVITY = 0.9
DIALOG_AXIS_REPEAT_DELAY = 800
system.dialogTemplate = { }
Dialog = system.dialogTemplate
Dialog.name = "<dialog>"
Dialog.start_y = 396
Dialog.lo_color = Green
Dialog.hi_color = Yellow
Dialog.height = 22
Dialog.max_line = 4
Dialog.min_line = 2
Dialog.next_new_line = 1
Dialog.current_choices = { }
Dialog.run = function(arg1, arg2, arg3, arg4) -- line 41
    local local1, local2
    PrintDebug("calling RUN with dialog_name = " .. arg2 .. "\n")
    PrintDebug("filename = " .. arg3 .. "\n")
    local2 = getglobal(arg2)
    if local2 then
        message_text:destroy()
        local2:init(arg4)
    else
        local1 = dofile(arg3)
        if not local1 then
            local2 = getglobal(arg2)
            local2:init(arg4)
            return TRUE
        else
            return FALSE
        end
    end
end
Dialog.create = function(arg1) -- line 70
    local local1 = { }
    local1.parent = arg1
    local1.exit_lines = { }
    local1.aborts = { }
    local1.node = "n1"
    local1.selected_line = 1
    local1.next_line = 1
    local1.ypos = Dialog.start_y
    local1.xpos = 10
    local1[999] = "EOD"
    return local1
end
Dialog.init = function(arg1, arg2) -- line 95
    SetOffscreenTextPos(320, 0)
    system.buttonHandler = noButtonHandler
    arg1.node = "n1"
    if arg1.intro then
        arg1:intro(arg2)
        wait_for_message()
    end
    arg1:display_lines()
end
Dialog.display_lines = function(arg1) -- line 118
    local local1
    local local2 = 0
    local local3
    local local4 = arg1.node
    local local5 = arg1.exit_lines[local4]
    local local6
    arg1:clear()
    PrintDebug("Displaying lines...\n")
    if arg1.node ~= "exit_dialog" then
        arg1.selected_line = 1
        arg1.next_line = 1
        arg1.ypos = arg1.start_y
        if local5 then
            local3 = arg1.max_line
        else
            local3 = arg1.max_line + 1
        end
        repeat
            local2 = local2 + 1
            local1 = arg1[local2]
            if type(local1) == "table" and local1.text then
                if local1[local4] and not local1.off and arg1.next_line < local3 then
                    arg1:set_line(local1)
                end
            end
        until local1 == "EOD" or arg1.next_line >= local3
        if local5 then
            arg1:set_line(local5)
        end
        if arg1.next_line <= arg1.min_line then
            local6 = arg1.aborts[local4]
            if local6 then
                local6()
                arg1:display_lines()
            else
                PrintDebug("Couldn't find any viable lines for " .. dialog_node .. "!\n")
                arg1:finish()
            end
        else
            arg1:update_text_height()
            system.buttonHandler = arg1
            AxisHandlerLastValues = { }
            arg1.axisRepeatFunc = nil
            system.axisHandler = arg1
        end
    else
        arg1:finish()
    end
end
Dialog.update_text_height = function(arg1) -- line 192
    local local1 = 472
    local local2 = arg1.next_line - 1
    local local3
    local local4, local5
    while local2 >= 1 do
        local3 = arg1.current_choices[local2].hText
        ChangeTextObject(local3, { x = arg1.xpos })
        local4, local5 = GetTextObjectDimensions(local3)
        local1 = local1 - local5 - 1
        ChangeTextObject(local3, { y = local1 })
        local2 = local2 - 1
    end
end
Dialog.update_colors = function(arg1) -- line 215
    local local1 = 1
    lines = arg1.current_choices
    while lines[local1] do
        if local1 == arg1.selected_line then
            ChangeTextObject(lines[local1].hText, { fgcolor = arg1.hi_color })
        else
            ChangeTextObject(lines[local1].hText, { fgcolor = arg1.lo_color })
        end
        local1 = local1 + 1
    end
end
Dialog.set_line = function(arg1, arg2) -- line 234
    arg1.current_choices[arg1.next_line] = arg2
    arg2.hText = MakeTextObject(arg2.text, { fgcolor = arg1.lo_color, x = arg1.xpos, y = arg1.ypos, font = verb_font })
    if arg1.next_line == arg1.selected_line then
        ChangeTextObject(arg2.hText, { fgcolor = arg1.hi_color })
    end
    arg1.ypos = arg1.ypos + arg1.height
    arg1.next_line = arg1.next_line + 1
    arg1.current_choices[arg1.next_line] = nil
    if arg2.setup then
        arg2:setup()
    end
end
Dialog.clear = function(arg1) -- line 254
    local local1
    local1 = 1
    lines = arg1.current_choices
    while lines[local1] do
        KillTextObject(lines[local1].hText)
        lines[local1] = nil
        local1 = local1 + 1
    end
end
Dialog.finish = function(arg1) -- line 270
    arg1:clear()
    if arg1.outro then
        arg1:outro()
    end
    stop_script(arg1.axis_repeat_handler)
    system.buttonHandler = SampleButtonHandler
    system.axisHandler = SampleAxisHandler
    enable_head_control(TRUE)
    if MarioControl then
        single_start_script(WalkManny)
    end
    SetOffscreenTextPos(nil, nil)
end
Dialog.execute_line = function(arg1, arg2, arg3) -- line 290
    local local1
    local local2 = arg1[arg1.node]
    local local3, local4
    if type(local2) == "function" then
        local2(arg2)
    end
    if type(arg2) == "table" then
        local1 = arg2
    else
        local1 = arg1.current_choices[arg2]
    end
    system.buttonHandler = noButtonHandler
    arg1:clear()
    system.currentActor:say_line(local1.text)
    if local1.gesture then
        PrintDebug("got gesture")
        if type(local1.gesture) == "table" then
            local3, local4 = next(local1.gesture, nil)
            while local3 do
                start_script(local4, system.currentActor, TRUE)
                local3, local4 = next(local1.gesture, local3)
            end
        else
            start_script(local1.gesture, system.currentActor)
        end
    end
    manny:wait_for_message()
    if local1.response then
        local1:response()
        if not arg3 then
            wait_for_message()
        end
    end
    arg1:display_lines()
end
Dialog.force_line = function(arg1, arg2) -- line 341
    arg1:execute_line(arg1[arg2])
end
Dialog.buttonHandler = function(arg1, arg2, arg3, arg4) -- line 354
    if arg2 == AKEY and developerMode then
        arg1:clear()
        start_script(arg1.finish, arg1)
    elseif not CommonButtonHandler(arg2, arg3, arg4) then
        if arg3 then
            if control_map.DIALOG_DOWN[arg2] then
                arg1.selected_line = arg1.selected_line + 1
                if arg1.selected_line >= arg1.next_line then
                    arg1.selected_line = 1
                end
                arg1:update_colors()
            elseif control_map.DIALOG_UP[arg2] then
                arg1.selected_line = arg1.selected_line - 1
                if arg1.selected_line < 1 then
                    arg1.selected_line = arg1.next_line - 1
                end
                arg1:update_colors()
            elseif control_map.DIALOG_CHOOSE[arg2] then
                start_script(arg1.execute_line, arg1, arg1.selected_line)
            end
        end
    end
end
Dialog.axisHandler = function(arg1, arg2, arg3) -- line 387
    local local1
    local local2 = FALSE
    local local3, local4
    local4 = abs(arg3)
    local3 = AxisHandlerLastValues[arg2]
    if local3 == nil then
        local3 = 0
    end
    if local4 > DIALOG_AXIS_SENSITIVITY then
        if abs(local3) < DIALOG_AXIS_SENSITIVITY then
            local2 = TRUE
            if arg2 == system.controls.AXIS_JOY1_X then
                if arg3 < 0 then
                    local1 = JOYSTICK_X_LEFT
                else
                    local1 = JOYSTICK_X_RIGHT
                end
            elseif arg2 == system.controls.AXIS_JOY1_Y then
                if arg3 < 0 then
                    local1 = JOYSTICK_Y_UP
                else
                    local1 = JOYSTICK_Y_DOWN
                end
            end
            AxisHandlerMappedIds[arg2] = local1
        end
    elseif abs(local3) > DIALOG_AXIS_SENSITIVITY then
        local2 = FALSE
        local1 = AxisHandlerMappedIds[arg2]
    end
    AxisHandlerLastValues[arg2] = arg3
    if local1 ~= nil and system.buttonHandler ~= nil then
        call_button_handler(local1, local2)
        if local2 then
            if arg1.axisRepeatFunc == nil then
                arg1.axisRepeatFunc = start_script(arg1.axis_repeat_handler, arg1)
            end
        elseif arg1.axisRepeatFunc ~= nil then
            stop_script(arg1.axisRepeatFunc)
            arg1.axisRepeatFunc = nil
        end
    end
end
Dialog.axis_repeat_handler = function(arg1) -- line 444
    local local1
    while TRUE do
        sleep_for(DIALOG_AXIS_REPEAT_DELAY)
        if get_generic_control_state("DIALOG_UP") then
            local1 = next(control_map.DIALOG_UP, nil)
            call_button_handler(local1, TRUE)
        elseif get_generic_control_state("DIALOG_DOWN") then
            local1 = next(control_map.DIALOG_DOWN, nil)
            call_button_handler(local1, TRUE)
        end
    end
end
dingo_balloon_dingo_here = 0
CheckFirstTime("dlg_aitor.lua")
ai1 = Dialog:create()
ai1.intro = function(arg1) -- line 11
    ai1.node = "first_aitor_node"
    if not hl.glottis_gambling then
        ai1[190].off = TRUE
    elseif not ai1[190].said then
        ai1[190].off = FALSE
    end
    wait_for_message()
    stop_script(he.aitor_snore_idles, he)
    wait_for_message()
    aitor:set_speech_mode(MODE_NORMAL)
    aitor:stop_chore(aitor_idles_head_down, "aitor_idles.cos")
    aitor:shut_up()
    aitor:play_chore(aitor_idles_head_to_up, "aitor_idles.cos")
    aitor:play_chore(aitor_idles_eyes_open, "aitor_idles.cos")
    aitor:say_line("/heai001/")
    aitor:play_chore(aitor_idles_eyes_open, "aitor_idles.cos")
    aitor:wait_for_chore(aitor_idles_head_to_up, "aitor_idles.cos")
    manny:head_look_at(he.aitor_obj)
    manny:walkto_object(he.aitor_obj)
    aitor:wait_for_message()
    aitor:stop_chore(aitor_idles_head_to_up, "aitor_idles.cos")
    aitor:play_chore(aitor_idles_from_up_to_left, "aitor_idles.cos")
    aitor:say_line("/heai002/")
end
ai1[100] = { text = "/hema003/", first_aitor_node = TRUE, gesture = manny.shrug_gesture }
ai1[100].response = function(arg1) -- line 38
    arg1.off = TRUE
    ai1[120].off = FALSE
    aitor:say_line("/heai004/")
    wait_for_message()
    manny:say_line("/hema005/")
    wait_for_message()
    aitor:say_line("/heai006/")
end
ai1[110] = { text = "/hema007/", first_aitor_node = TRUE, gesture = manny.hand_gesture }
ai1[110].response = function(arg1) -- line 49
    arg1.off = TRUE
    if not ai1[130].said then
        ai1[130].off = FALSE
    end
    aitor:say_line("/heai008/")
    wait_for_message()
    aitor:say_line("/heai009/")
end
ai1[120] = { text = "/hema010/", first_aitor_node = TRUE, gesture = manny.tilt_head_gesture }
ai1[120].off = TRUE
ai1[120].response = function(arg1) -- line 61
    arg1.off = TRUE
    if not ai1[130].said then
        ai1[130].off = FALSE
    end
    aitor:say_line("/heai011/")
    wait_for_message()
    aitor:say_line("/heai012/")
end
ai1[130] = { text = "/hema013/", first_aitor_node = TRUE, gesture = manny.point_gesture }
ai1[130].off = TRUE
ai1[130].response = function(arg1) -- line 73
    arg1.off = TRUE
    arg1.said = TRUE
    ai1[140].off = FALSE
    aitor:say_line("/heai014/")
    wait_for_message()
    aitor:say_line("/heai015/")
end
ai1[140] = { text = "/hema016/", first_aitor_node = TRUE, gesture = manny.twist_head_gesture }
ai1[140].off = TRUE
ai1[140].response = function(arg1) -- line 84
    arg1.off = TRUE
    ai1[150].off = FALSE
    ai1[160].off = FALSE
    aitor:stop_chore(aitor_idles_from_up_to_left, "aitor_idles.cos")
    aitor:play_chore(aitor_idles_back_to_sit, "aitor_idles.cos")
    aitor:say_line("/heai017/")
    aitor:wait_for_chore(aitor_idles_back_to_sit, "aitor_idles.cos")
    aitor:wait_for_message()
    aitor:say_line("/heai018/")
    aitor:stop_chore(aitor_idles_back_to_sit, "aitor_idles.cos")
    aitor:play_chore(aitor_idles_from_up_to_left, "aitor_idles.cos")
end
ai1[150] = { text = "/hema019/", first_aitor_node = TRUE, gesture = manny.shrug_gesture }
ai1[150].off = TRUE
ai1[150].response = function(arg1) -- line 100
    arg1.off = TRUE
    aitor:say_line("/heai020/")
end
ai1[160] = { text = "/hema021/", first_aitor_node = TRUE, gesture = manny.hand_gesture }
ai1[160].off = TRUE
ai1[160].response = function(arg1) -- line 107
    arg1.off = TRUE
    ai1[170].off = FALSE
    ai1[180].off = FALSE
    aitor:say_line("/heai022/")
end
ai1[170] = { text = "/hema023/", first_aitor_node = TRUE, gesture = manny.twist_head_gesture }
ai1[170].off = TRUE
ai1[170].response = function(arg1) -- line 116
    arg1.off = TRUE
    aitor:say_line("/heai024/")
end
ai1[180] = { text = "/hema025/", first_aitor_node = TRUE, gesture = manny.hand_gesture }
ai1[180].off = TRUE
ai1[180].response = function(arg1) -- line 123
    arg1.off = TRUE
    ai1[180].off = FALSE
    aitor:say_line("/heai026/")
    wait_for_message()
    aitor:stop_chore(aitor_idles_from_up_to_left, "aitor_idles.cos")
    aitor:play_chore(aitor_idles_back_to_sit, "aitor_idles.cos")
    aitor:say_line("/heai027/")
    wait_for_message()
    manny:head_forward_gesture()
    manny:say_line("/hema028/")
    wait_for_message()
    aitor:stop_chore(aitor_idles_back_to_sit, "aitor_idles.cos")
    aitor:play_chore(aitor_idles_from_up_to_left, "aitor_idles.cos")
    aitor:say_line("/heai029/")
    wait_for_message()
    aitor:say_line("/heai030/")
end
ai1[180] = { text = "/hema031/", first_aitor_node = TRUE, gesture = manny.tilt_head_gesture }
ai1[180].off = TRUE
ai1[180].response = function(arg1) -- line 145
    arg1.off = TRUE
    aitor:say_line("/heai032/")
    wait_for_message()
    aitor:say_line("/heai033/")
end
ai1[190] = { text = "/hema034/", first_aitor_node = TRUE, gesture = manny.hand_gesture }
ai1[190].response = function(arg1) -- line 154
    arg1.off = TRUE
    arg1.said = TRUE
    aitor:stop_chore(aitor_idles_from_up_to_left, "aitor_idles.cos")
    aitor:play_chore(aitor_idles_back_to_sit, "aitor_idles.cos")
    aitor:say_line("/heai035/")
    wait_for_message()
    aitor:say_line("/heai036/")
    wait_for_message()
    aitor:stop_chore(aitor_idles_back_to_sit, "aitor_idles.cos")
    aitor:play_chore(aitor_idles_from_up_to_left, "aitor_idles.cos")
    aitor:say_line("/heai037/")
end
ai1[200] = { text = "/hema038/", first_aitor_node = TRUE, gesture = manny.head_forward_gesture }
ai1[200].response = function(arg1) -- line 169
    arg1.off = TRUE
    aitor:say_line("/heai039/")
    wait_for_message()
    aitor:say_line("/heai040/")
end
ai1.exit_lines.first_aitor_node = { text = "/hema041/", gesture = manny.shrug_gesture }
ai1.exit_lines.first_aitor_node.response = function(arg1) -- line 177
    ai1.node = "exit_dialog"
    aitor:say_line("/heai042/")
    aitor:stop_chore(aitor_idles_from_up_to_left, "aitor_idles.cos")
    aitor:play_chore(aitor_idles_back_to_sit, "aitor_idles.cos")
    aitor:wait_for_chore(aitor_idles_back_to_sit, "aitor_idles.cos")
    aitor:play_chore(aitor_idles_head_to_down, "aitor_idles.cos")
    aitor:wait_for_chore(aitor_idles_head_to_down, "aitor_idles.cos")
    aitor:play_chore(aitor_idles_head_down, "aitor_idles.cos")
    aitor:play_chore(aitor_idles_eyes_shut, "aitor_idles.cos")
    start_script(he.aitor_snore_idles, he)
end
ai1.aborts.first_aitor_node = function(arg1) -- line 190
    ai1:clear()
    ai1:execute_line(ai1.exit_lines.first_aitor_node)
end
CheckFirstTime("dlg_angelitos.lua")
an1 = Dialog:create()
an1.execute_line = function(arg1, arg2) -- line 10
    Dialog.execute_line(an1, arg2, bDontWait)
end
an1.intro = function(arg1) -- line 15
    an1.node = "n1"
    start_script(manny.walkto_object, manny, fo.pugsy_obj)
    if bibi.crying then
        an1[95].off = FALSE
    else
        an1[95].off = TRUE
    end
    if fo.fighting then
        stop_script(fo.fight)
        bibi:shut_up()
        pugsy:shut_up()
        arg1:force_line(75)
    else
        an1[75].off = TRUE
        if ar.talked_gun and not an1[80].said then
            an1.talked_out = FALSE
            an1[80].off = FALSE
        end
        if meche.locked_up and not an1[60].said then
            an1[60].off = FALSE
        end
        if pugsy.work_task then
            start_script(pugsy.kill_idle, pugsy)
        end
        if bibi.work_task then
            start_script(bibi.kill_idle, bibi)
        end
        if not an1.talked_out then
            manny:say_line("/foma001/")
            manny:wait_for_message()
            if not an1.met then
                an1.met = TRUE
                sleep_for(1000)
                wait_for_script(pugsy.kill_idle)
                pugsy:point_hammer()
                pugsy:say_line("/fopu002/")
                pugsy:wait_for_message()
                bibi:head_look_at(fo.pugsy_obj)
                wait_for_script(bibi.kill_idle)
                bibi:say_line("/fobi003/")
                bibi:wait_for_message()
                bibi:say_line("/fobi004/")
            else
                pugsy:say_line("/fopu005/")
            end
        else
            manny:say_line("/foma006/")
            manny:wait_for_message()
            bibi:head_look_at_manny()
            bibi:say_line("/fobi007/")
            bibi:wait_for_message()
            manny:say_line("/foma008/")
        end
        bibi:head_look_at_manny()
        manny:wait_for_message()
    end
end
an1[60] = { text = "/foma009/", n1 = TRUE, gesture = manny.hand_gesture }
an1[60].off = TRUE
an1[60].response = function(arg1) -- line 81
    arg1.off = TRUE
    arg1.said = TRUE
    bibi:play_chore(bibi_talk_idles_start_fear, "bibi_talk_idles.cos")
    bibi:say_line("/fobi010/")
    pugsy:say_line("/fopu011/")
    bibi:wait_for_chore(bibi_talk_idles_start_fear, "bibi_talk_idles.cos")
    bibi:play_chore_looping(bibi_talk_idles_fear_loop, "bibi_talk_idles.cos")
    bibi:wait_for_message()
    bibi:stop_chore(bibi_talk_idles_fear_loop, "bibi_talk_idles.cos")
    bibi:play_chore(bibi_talk_idles_end_fear, "bibi_talk_idles.cos")
    pugsy:start_crying()
    bibi:start_crying()
end
an1[75] = { text = "/foma012/", n1 = TRUE, gesture = manny.point_gesture }
an1[75].off = TRUE
an1[75].response = function(arg1) -- line 98
    arg1.off = TRUE
    fo.exit_fight()
    bibi:say_line("/fobi013/")
    pugsy:say_line("/fopu014/")
    pugsy:wait_for_message()
    bibi:head_look_at(pugsy)
    pugsy:head_look_at(bibi)
    bibi:say_line("/fobi015/")
    pugsy:say_line("/fopu016/")
    pugsy:wait_for_message()
    bibi:say_line("/fobi017/")
    pugsy:say_line("/fopu018/")
    pugsy:wait_for_message()
    bibi:head_look_at_manny()
    pugsy:head_look_at_manny()
    manny:say_line("/foma019/")
    manny:wait_for_message()
end
an1[80] = { text = "/foma020/", n1 = TRUE, gesture = manny.shrug_gesture }
an1[80].off = TRUE
an1[80].response = function(arg1) -- line 120
    arg1.off = TRUE
    arg1.said = TRUE
    an1.node = "exit_dialog"
    bibi:head_look_at(fo.pugsy_obj)
    pugsy:say_line("/fopu021/")
    pugsy:wait_for_message()
    pugsy:point_hammer()
    pugsy:say_line("/fopu022/")
    pugsy:wait_for_message()
    manny:say_line("/foma023/")
    manny:wait_for_message()
    bibi:head_look_at_manny()
    bibi:say_line("/fobi024/")
    sleep_for(500)
    pugsy:head_look_at(fo.bibi_obj)
    pugsy:wait_for_message()
    fo.fighting = TRUE
    start_script(fo.fight)
end
an1[95] = { text = "/foma025/", n1 = TRUE, gesture = manny.twist_head_gesture }
an1[95].off = TRUE
an1[95].response = function(arg1) -- line 144
    arg1.off = TRUE
    arg1.said = TRUE
    manny:say_line("/foma026/")
    manny:wait_for_message()
    manny:say_line("/foma027/")
    manny:wait_for_message()
    manny:say_line("/foma028/")
    manny:wait_for_message()
end
an1[100] = { text = "/foma029/", n1 = TRUE, gesture = manny.shrug_gesture }
an1[100].response = function(arg1) -- line 156
    arg1.off = TRUE
    pugsy:roll_head()
    pugsy:say_line("/fopu030/")
    pugsy:wait_for_message()
    bibi:say_line("/fobi031/")
    bibi:wait_for_message()
    pugsy:jut_chin()
    pugsy:say_line("/fopu032/")
    pugsy:wait_for_message()
    pugsy:un_jut_chin()
end
an1[105] = { text = "/foma103/", n1 = TRUE, gesture = { manny.tilt_head_gesture, manny.point_gesture } }
an1[105].response = function(arg1) -- line 171
    arg1.off = TRUE
    bibi:head_look_at(fo.pugsy_obj)
    pugsy:head_look_at(fo.bibi_obj)
    bibi:say_line("/fobi104/")
    pugsy:say_line("/fopu105/")
    pugsy:wait_for_message()
    pugsy:head_look_at(nil)
    bibi:head_look_at(nil)
    sleep_for(500)
    pugsy:start_crying()
    sleep_for(500)
    bibi:start_crying()
end
an1[110] = { text = "/foma033/", n1 = TRUE, gesture = manny.head_forward_gesture }
an1[110].response = function(arg1) -- line 187
    arg1.off = TRUE
    an1[120].off = FALSE
    an1[140].off = FALSE
    an1[250].off = FALSE
    pugsy:point_hammer()
    pugsy:say_line("/fopu034/")
    pugsy:wait_for_message()
    pugsy:say_line("/fopu035/")
    pugsy:wait_for_message()
    bibi:play_chore(bibi_talk_idles_start_angelic, "bibi_talk_idles.cos")
    bibi:say_line("/fobi036/")
    bibi:wait_for_message()
    bibi:play_chore(bibi_talk_idles_end_angelic, "bibi_talk_idles.cos")
end
an1[120] = { text = "/foma037/", n1 = TRUE, gesture = manny.twist_head_gesture }
an1[120].off = TRUE
an1[120].response = function(arg1) -- line 205
    arg1.off = TRUE
    an1[130].off = FALSE
    pugsy:roll_head()
    pugsy:say_line("/fopu038/")
    sleep_for(2000)
    pugsy:point_hammer()
    pugsy:wait_for_message()
    bibi:say_line("/fobi039/")
    bibi:wait_for_message()
end
an1[130] = { text = "/foma040/", n1 = TRUE, gesture = manny.point_gesture }
an1[130].off = TRUE
an1[130].response = function(arg1) -- line 219
    arg1.off = TRUE
    manny:say_line("/foma041/")
    manny:head_forward_gesture()
    manny:wait_for_message()
    manny:say_line("/foma042/")
    manny:hand_gesture()
    manny:wait_for_message()
    pugsy:head_look_at(fo.bibi_obj)
    bibi:head_look_at(fo.pugsy_obj)
    manny:say_line("/foma043/")
    manny:tilt_head_gesture()
    manny:wait_for_message()
    pugsy:head_look_at(nil)
    bibi:head_look_at_manny()
    bibi:say_line("/fobi044/")
    bibi:wait_for_message()
    pugsy:roll_head()
    pugsy:say_line("/fopu045/")
    pugsy:wait_for_message()
    bibi:say_line("/fobi046/")
    bibi:wait_for_message()
end
an1[140] = { text = "/foma047/", n1 = TRUE, gesture = { manny.twist_head_gesture, manny.head_forward_gesture } }
an1[140].off = TRUE
an1[140].response = function(arg1) -- line 245
    arg1.off = TRUE
    pugsy:say_line("/fopu048/")
    pugsy:wait_for_message()
    bibi:play_chore(bibi_talk_idles_start_angelic, "bibi_talk_idles.cos")
    bibi:say_line("/fobi049/")
    sleep_for(1000)
    manny:twist_head_gesture()
    bibi:wait_for_message()
    bibi:play_chore(bibi_talk_idles_end_angelic, "bibi_talk_idles.cos")
    pugsy:say_line("/fopu050/")
    sleep_for(2000)
    pugsy:jut_chin()
    pugsy:wait_for_message()
    pugsy:un_jut_chin()
end
an1[150] = { text = "/foma051/", n1 = TRUE, gesture = manny.shrug_gesture }
an1[150].response = function(arg1) -- line 264
    arg1.off = TRUE
    bibi:say_line("/fobi052/")
    bibi:wait_for_message()
    pugsy:roll_head()
    pugsy:say_line("/fopu053/")
    pugsy:wait_for_message()
    pugsy:roll_head()
    pugsy:say_line("/fopu054/")
    pugsy:wait_for_message()
end
an1[160] = { text = "/foma055/", n1 = TRUE, gesture = manny.hand_gesture }
an1[160].response = function(arg1) -- line 277
    arg1.off = TRUE
    an1[170].off = FALSE
    an1[180].off = FALSE
    bibi:say_line("/fobi056/")
    bibi:wait_for_message()
    pugsy:point_hammer()
    pugsy:say_line("/fopu057/")
    pugsy:wait_for_message()
end
an1[170] = { text = "/foma058/", n1 = TRUE, gesture = manny.head_forward_gesture }
an1[170].off = FALSE
an1[170].response = function(arg1) -- line 290
    arg1.off = TRUE
    pugsy:jut_chin()
    pugsy:say_line("/fopu059/")
    pugsy:wait_for_message()
    pugsy:un_jut_chin()
    pugsy:head_look_at(fo.bibi_obj)
    pugsy:say_line("/fopu060/")
    pugsy:wait_for_message()
    bibi:head_look_at(fo.pugsy_obj)
    bibi:say_line("/fobi061/")
    bibi:wait_for_message()
    bibi:head_look_at_manny()
    pugsy:head_look_at(nil)
    bibi:say_line("/fobi062/")
    bibi:wait_for_message()
end
an1[180] = { text = "/foma063/", n1 = TRUE, gesture = manny.twist_head_gesture }
an1[180].off = TRUE
an1[180].response = function(arg1) -- line 310
    arg1.off = TRUE
    an1.node = "help"
    an1[190].off = FALSE
    pugsy:jut_chin()
    pugsy:say_line("/fopu064/")
    pugsy:wait_for_message()
    pugsy:un_jut_chin()
end
an1[190] = { text = "/foma065/", n1 = TRUE, gesture = manny.head_forward_gesture }
an1[190].off = TRUE
an1[190].response = function(arg1) -- line 322
    an1.node = "help"
    an1[240].text = "/foma066/"
    pugsy:roll_head()
    pugsy:say_line("/fopu067/")
    pugsy:wait_for_message()
end
an1[200] = { text = "/foma068/", help = TRUE, gesture = manny.point_gesture }
an1[200].response = function(arg1) -- line 331
    arg1.off = TRUE
    arg1.said = TRUE
    bibi:head_look_at(nil)
    bibi:play_chore(bibi_talk_idles_talk2scream, "bibi_talk_idles.cos")
    bibi:say_line("/fobi069/")
    bibi:wait_for_message()
    bibi:play_chore(bibi_talk_idles_end_scream, "bibi_talk_idles.cos")
    bibi:head_look_at_manny()
    pugsy:head_look_at(fo.bibi_obj)
    pugsy:say_line("/fopu070/")
    pugsy:wait_for_message()
    pugsy:head_look_at(nil)
end
an1[210] = { text = "/foma071/", help = TRUE, gesture = manny.hand_gesture }
an1[210].response = function(arg1) -- line 347
    arg1.off = TRUE
    arg1.said = TRUE
    fo.hammer:make_touchable()
    fo.hammer_thrown = TRUE
    if an1[230].said and an1[200].said then
        an1.talked_help_out = TRUE
        an1[190].off = TRUE
    end
    an1.node = "n1"
    an1[145].off = FALSE
    pugsy:say_line("/fopu072/")
    sleep_for(500)
    start_script(pugsy.throw_hammer, pugsy)
    sleep_for(500)
    start_script(bibi.start_giggle, bibi)
    bibi:say_line("/fobi075/")
    wait_for_script(pugsy.throw_hammer)
    start_script(pugsy.start_laugh, pugsy, TRUE)
    pugsy:say_line("/fopu073/")
    bibi:wait_for_message()
    start_script(bibi.giggle_to_laugh, bibi)
    bibi:say_line("/fobi076/")
    pugsy:wait_for_message()
    start_script(pugsy.start_laugh, pugsy, TRUE)
    pugsy:say_line("/fopu074/")
    pugsy:wait_for_message()
    start_script(pugsy.start_laugh, pugsy, TRUE)
    pugsy:say_line("/fopu077/")
    pugsy:wait_for_message()
    pugsy:end_laugh()
    bibi:wait_for_message()
    start_script(bibi.end_laugh, bibi)
    bibi:say_line("/fobi078/")
    pugsy:complete_chore(pu_work_idles_hide_hammer, "pu_work_idles.cos")
    bibi:wait_for_message()
end
an1[230] = { text = "/foma079/", help = TRUE, gesture = { manny.tilt_head_gesture, manny.twist_head_gesture } }
an1[230].response = function(arg1) -- line 393
    arg1.off = TRUE
    arg1.said = TRUE
    bibi:say_line("/fobi080/")
    bibi:wait_for_message()
    bibi:head_look_at(fo.pugsy_obj)
    pugsy:head_look_at(fo.bibi_obj)
    pugsy:say_line("/fopu081/")
    sleep_for(1500)
    pugsy:roll_head()
    pugsy:wait_for_message()
    bibi:head_look_at_manny()
    pugsy:head_look_at(nil)
end
an1[240] = { text = "/foma082/", help = TRUE, gesture = manny.twist_head_gesture }
an1[240].response = function(arg1) -- line 409
    arg1.off = TRUE
    arg1.said = TRUE
    an1.node = "n1"
    pugsy:head_look_at(fo.bibi_obj)
    bibi:say_line("/fobi083/")
    bibi:wait_for_message()
    bibi:say_line("/fobi084/")
    pugsy:head_look_at(nil)
    bibi:wait_for_message()
end
an1.aborts.help = function(arg1) -- line 421
    an1.node = "n1"
    an1.talked_help_out = TRUE
    an1[190].off = TRUE
    an1:execute_line(an1.current_choices[1])
end
an1[145] = { text = "/foma085/", n1 = TRUE, gesture = { manny.twist_head_gesture, manny.head_forward_gesture } }
an1[145].off = TRUE
an1[145].response = function(arg1) -- line 430
    arg1.off = TRUE
    sleep_for(500)
    start_script(bibi.start_giggle, bibi)
    bibi:say_line("/fobi086/")
    start_script(pugsy.start_laugh, pugsy, TRUE)
    pugsy:say_line("/fopu087/")
    sleep_for(1000)
    manny:say_line("/foma088/")
    bibi:wait_for_message()
    bibi:giggle_to_laugh()
    bibi:say_line("/fobi089/")
    pugsy:wait_for_message()
    start_script(pugsy.start_laugh, pugsy, TRUE)
    pugsy:say_line("/fopu090/")
    bibi:wait_for_message()
    start_script(bibi.end_laugh, bibi)
end
an1[250] = { text = "/foma091/", n1 = TRUE, gesture = manny.nod_head_gesture }
an1[250].off = TRUE
an1[250].response = function(arg1) -- line 451
    arg1.off = TRUE
    an1[170].off = FALSE
    bibi:play_chore(bibi_talk_idles_start_fear, "bibi_talk_idles.cos")
    bibi:say_line("/fobi092/")
    bibi:wait_for_chore(bibi_talk_idles_start_fear, "bibi_talk_idles.cos")
    bibi:play_chore_looping(bibi_talk_idles_fear_loop, "bibi_talk_idles.cos")
    bibi:wait_for_message()
    pugsy:jut_chin()
    pugsy:say_line("/fopu093/")
    pugsy:wait_for_message()
    pugsy:un_jut_chin()
    pugsy:head_look_at(fo.bibi_obj)
    bibi:say_line("/fobi094/")
    bibi:wait_for_message()
    bibi:say_line("/fobi095/")
    bibi:wait_for_message()
    bibi:stop_looping_chore(bibi_talk_idles_fear_loop, "bibi_talk_idles.cos")
    bibi:play_chore(bibi_talk_idles_end_fear, "bibi_talk_idles.cos")
    pugsy:head_look_at(nil)
    bibi:start_crying()
    sleep_for(1000)
    pugsy:start_crying()
end
an1[270] = { text = "/foma096/", n1 = TRUE, gesture = { manny.nod_head_gesture, manny.shrug_gesture } }
an1[270].off = TRUE
an1[270].response = function(arg1) -- line 478
    arg1.off = TRUE
    if bibi.crying then
        start_script(bibi.exit_cry, bibi)
    end
    if pugsy.crying then
        pugsy:exit_cry()
    end
    wait_for_message()
    pugsy:jut_chin()
    pugsy:say_line("/fopu097/")
    pugsy:wait_for_message()
    pugsy:un_jut_chin()
    bibi:say_line("/fobi098/")
    pugsy:head_look_at(fo.bibi_obj)
    sleep_for(2000)
    bibi:run_chore(bibi_talk_idles_start_angelic, "bibi_talk_idles.cos")
    bibi:play_chore_looping(bibi_talk_idles_angelic_loop, "bibi_talk_idles.cos")
    bibi:wait_for_message()
    pugsy:head_look_at(nil)
    pugsy:say_line("/fopu099/")
    pugsy:wait_for_message()
    bibi:play_chore_looping(bibi_talk_idles_sway_loop, "bibi_talk_idles.cos")
    pugsy:head_look_at(fo.bibi_obj)
    bibi:say_line("/fobi100/")
    bibi:wait_for_message()
    pugsy:head_look_at(nil)
    manny:say_line("/foma101/")
    manny:wait_for_message()
    manny:say_line("/foma102/")
    bibi:stop_looping_chore(bibi_talk_idles_sway_loop, "bibi_talk_idles.cos")
    bibi:play_chore(bibi_talk_idles_end_sway, "bibi_talk_idles.cos")
    manny:wait_for_message()
end
an1[290] = { text = "/foma106/", n1 = TRUE, gesture = manny.nod_head_gesture }
an1[290].response = function(arg1) -- line 511
    arg1.off = TRUE
    pugsy:say_line("/fopu107/")
    sleep_for(1000)
    pugsy:jut_chin()
    pugsy:wait_for_message()
    pugsy:un_jut_chin()
    pugsy:head_look_at(fo.bibi_obj)
    bibi:say_line("/fobi108/")
    bibi:run_chore(bibi_talk_idles_start_fear, "bibi_talk_idles.cos")
    bibi:play_chore_looping(bibi_talk_idles_fear_loop, "bibi_talk_idles.cos")
    bibi:wait_for_message()
    pugsy:head_look_at(nil)
    pugsy:jut_chin()
    pugsy:say_line("/fopu109/")
    bibi:stop_looping_chore(bibi_talk_idles_fear_loop, "bibi_talk_idles.cos")
    bibi:play_chore(bibi_talk_idles_end_fear, "bibi_talk_idles.cos")
    bibi:wait_for_message()
    pugsy:un_jut_chin()
end
an1.exit_lines.n1 = { text = "/foma110/", gesture = manny.nod_head_gesture }
an1.exit_lines.n1.response = function(arg1) -- line 533
    an1.node = "exit_dialog"
    pugsy:roll_head()
    pugsy:say_line("/fopu111/")
    pugsy:wait_for_message()
end
an1.n1 = function(arg1) -- line 540
    local local1 = an1.current_choices[arg1]
    if local1 ~= an1[95] and local1 ~= an1.exit_lines_n1 then
        if bibi.crying then
            start_script(bibi.exit_cry, bibi)
        end
        if pugsy.crying then
            start_script(pugsy.exit_cry, pugsy)
        end
        stop_script(fo.fight)
        an1[95].off = TRUE
    end
end
an1.aborts.n1 = function(arg1) -- line 551
    an1:clear()
    an1.talked_out = TRUE
    an1.node = "exit_dialog"
    manny:say_line("/foma112/")
    manny:point_gesture()
    manny:wait_for_message()
    bibi:say_line("/fobi113/")
    bibi:wait_for_message()
end
an1.outro = function(arg1) -- line 562
    if bibi.crying then
        bibi:kill_crying()
    end
    if pugsy.crying then
        pugsy:kill_crying()
    end
    if not fo.fighting then
        if not bibi.crying then
            bibi:start_work()
        end
        if not pugsy.crying then
            pugsy:start_work()
        end
    end
    manny:set_look_rate(fo.former_lookrate)
end
CheckFirstTime("dlg_bees.lua")
be1 = Dialog:create()
be1.focus = dd.barrel_bees
be1.intro = function(arg1) -- line 13
    be1.node = "first_bee_node"
    break_here()
    break_here()
    terry:remove_barrel_stamp()
    if hh.union_card.owner == manny then
        be1[190].off = TRUE
    elseif lm.talked_union and not be1[190].said then
        be1[190].off = FALSE
    end
    if lm.talked_naranja and not be1[200].said then
        be1[200].off = FALSE
    end
    if lm.talked_tools and not be1[170].said then
        be1[170].off = FALSE
    end
    if not be1.talked then
        be1.talked = 1
        manny:head_look_at_point(0.432771, -2.99192, 0.4396)
        manny:say_line("/ddma074/")
        wait_for_message()
        terry:say_line("/ddte075/")
        terry:stop_barrel_idles()
        terry:head_left()
        start_script(terry.head_nod, terry)
        wait_for_message()
    else
        manny:head_look_at_point(0.432771, -2.99192, 0.4396)
        manny:say_line("/ddma076/")
        wait_for_message()
        be1.talked = be1.talked + 1
        terry:stop_barrel_idles()
        terry:head_left()
        if be1.talked == 2 then
            terry:say_line("/ddte077/")
            wait_for_message()
            start_script(terry.stop_head_left, terry)
            terry:say_line("/ddte078/")
            wait_for_message()
            start_script(terry.head_left, terry)
            terry:say_line("/ddte079/")
        elseif be1.talked == 3 then
            terry:say_line("/ddte080/")
            wait_for_message()
            terry:say_line("/ddte081/")
            wait_for_message()
            start_script(terry.head_wag, terry)
            terry:say_line("/ddte082/")
        elseif be1.talked == 4 then
            terry:say_line("/ddte083/")
            wait_for_message()
            start_script(terry.stop_head_left, terry)
            terry:say_line("/ddte084/")
            wait_for_message()
            start_script(terry.head_left, terry)
            terry:say_line("/ddte085/")
        else
            start_script(terry.lefthand_out, terry)
            terry:say_line("/ddte086/")
            wait_for_message()
            start_script(terry.stop_lefthand_out, terry)
            terry:say_line("/ddte087/")
        end
    end
end
be1[100] = { text = "/ddma088/", first_bee_node = TRUE, gesture = manny.shrug_gesture }
be1[100].response = function(arg1) -- line 87
    arg1.off = TRUE
    be1[110].off = FALSE
    if not be1[140].said then
        be1[140].off = FALSE
    end
    be1[180].off = FALSE
    be1.exit_lines.first_bee_node = be1.delayed_exit_line
    terry:say_line("/ddte089/")
    terry:shrug()
    wait_for_message()
    terry:say_line("/ddte090/")
    terry:head_wag()
    start_script(terry.stop_shrug, terry)
    wait_for_message()
    terry:say_line("/ddte091/")
    wait_for_message()
    start_script(terry.lefthand_out, terry)
    terry:say_line("/ddte092/")
    terry:wait_for_message()
    start_script(terry.stop_lefthand_out, terry)
end
be1[110] = { text = "/ddma093/", first_bee_node = TRUE, gesture = manny.head_forward_gesture }
be1[110].off = TRUE
be1[110].response = function(arg1) -- line 112
    arg1.off = TRUE
    terry:say_line("/ddte094/")
    wait_for_message()
    manny:point_gesture()
    manny:say_line("/ddma095/")
    wait_for_message()
    terry:say_line("/ddte096/")
    wait_for_message()
    terry:say_line("/ddte097/")
    terry:gesture1()
    terry:gesture2()
    wait_for_message()
    terry:say_line("/ddte098/")
    terry:stop_gesture()
end
be1[120] = { text = "/ddma099/", first_bee_node = TRUE, gesture = manny.tilt_head_gesture }
be1[120].response = function(arg1) -- line 130
    arg1.off = TRUE
    be1[130].off = FALSE
    if not be1[140].said then
        be1[140].off = FALSE
    end
    if not be1[150].said then
        be1[150].off = FALSE
    end
    be1[160].off = FALSE
    be1.exit_lines.first_bee_node = be1.delayed_exit_line
    start_script(terry.head_wag, terry)
    terry:say_line("/ddte100/")
    wait_for_message()
    start_script(terry.lefthand_out, terry)
    terry:say_line("/ddte101/")
    wait_for_message()
    start_script(terry.stop_lefthand_out, terry)
    terry:say_line("/ddte102/")
end
be1[130] = { text = "/ddma103/", first_bee_node = TRUE, gesture = manny.shrug_gesture }
be1[130].off = TRUE
be1[130].response = function(arg1) -- line 153
    arg1.off = TRUE
    start_script(terry.head_wag, terry)
    terry:say_line("/ddte104/")
    wait_for_message()
    terry:say_line("/ddte105/")
    terry:stop_head_left()
    wait_for_message()
    start_script(terry.head_left, terry)
    terry:say_line("/ddte106/")
    wait_for_message()
    terry:say_line("/ddte107/")
    sleep_for(1000)
    start_script(terry.shrug, terry)
    wait_for_message()
    start_script(terry.stop_shrug, terry)
    manny:head_forward_gesture()
    manny:say_line("/ddma108/")
    wait_for_message()
    start_script(terry.head_nod, terry)
    terry:say_line("/ddte109/")
end
be1[140] = { text = "/ddma110/", first_bee_node = TRUE, gesture = manny.tilt_head_gesture }
be1[140].off = TRUE
be1[140].response = function(arg1) -- line 178
    arg1.off = TRUE
    arg1.said = TRUE
    start_sfx("beeflap1.wav")
    terry:play_chore_looping(bee_barrel_move_wing, "bee_barrel.cos")
    start_script(terry.stop_head_left, terry)
    terry:say_line("/ddte111/")
    wait_for_message()
    start_sfx("beeflap2.wav")
    terry:say_line("/ddte112/")
    terry:head_left()
    start_sfx("beeflap3.wav")
    terry:wait_for_message()
    terry:stop_chore(bee_barrel_move_wing, "bee_barrel.cos")
    terry:say_line("/ddte112b/")
end
be1[150] = { text = "/ddma113/", first_bee_node = TRUE, gesture = manny.head_forward_gesture }
be1[150].off = TRUE
be1[150].response = function(arg1) -- line 197
    arg1.off = TRUE
    arg1.said = TRUE
    start_script(terry.shrug, terry)
    terry:say_line("/ddte114/")
    wait_for_message()
    terry:say_line("/ddte115/")
    wait_for_message()
    start_script(terry.stop_shrug, terry)
    terry:say_line("/ddte116/")
end
be1[160] = { text = "/ddma117/", first_bee_node = TRUE, gesture = manny.twist_head_gesture }
be1[160].off = TRUE
be1[160].response = function(arg1) -- line 211
    arg1.off = TRUE
    terry:say_line("/ddte118/")
    terry:head_wag()
    wait_for_message()
    start_script(terry.stop_head_left, terry)
    terry:say_line("/ddte119/")
    wait_for_message()
    terry:say_line("/ddte120/")
    terry:head_left()
    terry:gesture1()
    terry:gesture2()
    terry:stop_gesture()
    wait_for_message()
    start_script(terry.head_wag, terry)
    terry:say_line("/ddte121/")
end
be1[170] = { text = "/ddma122/", first_bee_node = TRUE, gesture = manny.hand_gesture }
be1[170].off = TRUE
be1[170].response = function(arg1) -- line 231
    arg1.off = TRUE
    arg1.said = TRUE
    start_script(terry.lefthand_out, terry)
    terry:say_line("/ddte123/")
    wait_for_message()
    start_script(terry.stop_lefthand_out, terry)
    manny:say_line("/ddma124/")
    wait_for_message()
    start_script(terry.head_wag, terry)
    terry:say_line("/ddte125/")
end
be1[180] = { text = "/ddma126/", first_bee_node = TRUE, gesture = manny.tilt_head_gesture }
be1[180].off = TRUE
be1[180].response = function(arg1) -- line 246
    arg1.off = TRUE
    start_script(terry.shrug, terry)
    terry:say_line("/ddte127/")
    wait_for_message()
    start_script(terry.stop_shrug, terry)
    terry:say_line("/ddte128/")
    wait_for_message()
    terry:say_line("/ddte129/")
    wait_for_message()
    terry:say_line("/ddte130/")
    terry:gesture1()
    terry:gesture2()
    terry:stop_gesture()
end
be1[190] = { text = "/ddma131/", first_bee_node = TRUE, gesture = manny.point_gesture }
be1[190].off = TRUE
be1[190].response = function(arg1) -- line 264
    arg1.off = TRUE
    arg1.said = TRUE
    dd.talked_charlie = TRUE
    cn.charlie_obj.talked_out = FALSE
    start_script(terry.head_wag, terry)
    terry:say_line("/ddte132/")
    wait_for_message()
    terry:say_line("/ddte133/")
    terry:shrug()
    start_script(terry.stop_shrug, terry)
end
be1[200] = { text = "/ddma134/", first_bee_node = TRUE }
be1[200].off = TRUE
be1[200].response = function(arg1) -- line 279
    arg1.off = TRUE
    arg1.said = TRUE
    start_script(terry.head_wag, terry)
    terry:say_line("/ddte135/")
    wait_for_message()
    manny:point_gesture()
    manny:say_line("/ddma136/")
    wait_for_message()
    start_script(terry.head_nod, terry)
    terry:say_line("/ddte137/")
end
be1.delayed_exit_line = { text = "/ddma138/", gesture = manny.twist_head_gesture }
be1.delayed_exit_line.response = function(arg1) -- line 293
    be1.node = "exit_dialog"
end
be1.aborts.first_bee_node = function(arg1) -- line 297
    be1:clear()
    be1.node = "exit_dialog"
    manny:head_forward_gesture()
    manny:say_line("/ddma139/")
    wait_for_message()
end
be1.outro = function(arg1) -- line 305
    if not be1.outroed then
        be1.outroed = TRUE
        start_script(terry.head_wag, terry)
        terry:say_line("/ddte140/")
        wait_for_message()
        terry:say_line("/ddte141/")
        terry:gesture1()
        terry:gesture2()
        wait_for_message()
        terry:say_line("/ddte142/")
        terry:stop_gesture()
        wait_for_message()
        terry:say_line("/ddte143/")
        start_script(terry.stop_head_left, terry)
        wait_for_message()
        start_script(terry.lefthand_out, terry)
        terry:say_line("/ddte144/")
        wait_for_message()
        start_script(terry.head_left, terry)
        start_script(terry.stop_lefthand_out, terry)
        terry:say_line("/ddte145/")
        wait_for_message()
        terry:say_line("/ddte146/")
        terry:head_wag()
    else
        terry:say_line("/ddte147/")
        terry:head_wag()
    end
    terry:stop_head_left()
    wait_for_message()
    terry:replace_barrel_stamp()
    terry:barrel_idles()
end
CheckFirstTime("dlg_bomb.lua")
bo1 = Dialog:create()
bo1.intro = function(arg1) -- line 11
    bo1.node = "bomb_node"
    enable_head_control(FALSE)
    manny:head_look_at(sl.carla_obj)
    if not bo1.tried then
        bo1.tried = TRUE
        carla:say_line("/slca001/")
    else
        carla:say_line("/slca002/")
    end
end
bo1[100] = { text = "/slma003/", bomb_node = TRUE }
bo1[100].response = function(arg1) -- line 24
    arg1.off = TRUE
    bo1.node = "exit_dialog"
    if sl.carla_scorned then
        bo1:make_nice()
    else
        carla:say_line("/slca004/")
    end
end
bo1.make_nice = function(arg1) -- line 34
    carla:say_line("/slca005/")
end
bo1[110] = { text = "/slma006/", bomb_node = TRUE }
bo1[110].response = function(arg1) -- line 40
    arg1.off = TRUE
    bo1.node = "exit_dialog"
    carla:say_line("/slca007/")
    wait_for_message()
    manny:say_line("/slma008/")
    wait_for_message()
    carla:say_line("/slca009/")
end
bo1[120] = { text = "/slma010/", bomb_node = TRUE }
bo1[120].response = function(arg1) -- line 51
    arg1.off = TRUE
    bo1.node = "exit_dialog"
    if sl.carla_scorned then
        bo1:make_nice()
    else
        carla:say_line("/slca011/")
        wait_for_message()
        carla:say_line("/slca012/")
        wait_for_message()
        carla:say_line("/slca013/")
    end
end
bo1[300] = { text = "/slma014/", bomb_node = TRUE }
bo1[300].response = function(arg1) -- line 66
    arg1.off = TRUE
    bo1.node = "unattended"
    carla:say_line("/slca015/")
end
bo1[400] = { text = "/slma016/", unattended = TRUE, gesture = manny.nod_head_gesture }
bo1[400].response = function(arg1) -- line 73
    local local1
    bo1.node = "exit_dialog"
    arg1.off = TRUE
    stop_script(sl.carla_idle)
    start_script(carla.stand_up, carla)
    wait_for_message()
    carla:say_line("/slca017/")
    carla:wait_for_message()
    local1 = 0
    while not carla:is_choring(carla_stand, TRUE, sl.search_cos) and local1 < 1800 do
        break_here()
        local1 = local1 + system.frameTime
    end
    MakeSectorActive("carlawalk1", TRUE)
    carla:follow_boxes()
    carla:say_line("/slca018/")
    carla:set_walk_rate(0.2)
    Actor.walkto(carla, 0.83329999, -0.77146, 0, 0, 101.0174, 0)
    wait_for_script(carla.stand_up)
    carla:wait_for_message()
    carla:say_line("/slca019/")
    carla:wait_for_actor()
    carla:play_chore(carla_stand_hold, sl.search_chore)
    carla:wait_for_message()
    enable_head_control(TRUE)
    start_script(sl.blow_up_case)
end
bo1[410] = { text = "/slma020/", unattended = TRUE, gesture = manny.twist_head_gesture }
bo1[410].response = bo1[400].response
bo1.aborts.bomb_node = function(arg1) -- line 108
    bo1:clear()
    bo1:execute_line(bo1[300])
    enable_head_control(TRUE)
end
CheckFirstTime("dlg_brennis2.lua")
br2 = { }
br2.active = FALSE
br2.text_objs = nil
br2.choices = { }
br2.brennis_questions = { }
br2.brennis_questions[1] = "/lybs133/"
br2.brennis_questions[2] = "/lybs134/"
br2.brennis_questions[3] = "/lybs135/"
br2.brennis_questions[4] = "/lybs136/"
br2.brennis_questions[5] = "/lybs137/"
br2.brennis_questions[6] = "/lybs138/"
br2.brennis_questions[7] = "/lybs139/"
br2.brennis_questions[8] = "/lybs140/"
br2.brennis_questions[9] = "/lybs141/"
br2.brennis_questions[10] = "/lybs142/"
br2.brennis_questions[11] = "/lybs143/"
br2.brennis_questions[12] = "/lybs144/"
br2.brennis_questions[13] = "/lybs145/"
br2.brennis_questions[14] = "/lybs146/"
br2.brennis_questions[15] = "/lybs147/"
br2.intro = function(arg1) -- line 31
    start_script(ly.brennis_stop_idle)
    ly.keno_actor.game_paused = TRUE
    if ly.keno_actor.game_index == 0 then
        ly.keno_actor:choose_number()
    end
    manny:walkto_object(ly.brennis_obj)
    cameraman_disabled = TRUE
    if not ly.tried_keno then
        ly.tried_keno = TRUE
        ly:current_setup(ly_kenla)
        manny:say_line("/lyma127/")
        manny:wait_for_message()
        manny:say_line("/lyma128/")
        manny:wait_for_message()
        ly:current_setup(ly_elems)
        brennis:say_line("/lybs129/")
        brennis:wait_for_message()
        wait_for_script(ly.brennis_stop_idle)
        brennis:play_chore(br_idles_moves_head, "br_idles.cos")
        brennis:say_line("/lybs130/")
        brennis:wait_for_message()
        sleep_for(1000)
    else
        ly:current_setup(ly_kenla)
        manny:say_line("/lyma131/")
        manny:wait_for_message()
        ly:current_setup(ly_elems)
        wait_for_script(ly.brennis_stop_idle)
    end
    ly.keno_actor:choose_number()
    brennis:say_line("/lybs132/")
    brennis:wait_for_message()
    brennis:say_line(pick_one_of(br2.brennis_questions, TRUE))
end
br2.init = function(arg1, arg2) -- line 73
    system.buttonHandler = noButtonHandler
    manny:head_look_at(ly.brennis_obj)
    if arg1.intro then
        arg1:intro(arg2)
        wait_for_message()
    end
    system.buttonHandler = arg1
    arg1.top_line = 1
    arg1.current_line = 1
    ly:current_setup(ly_kenla)
    arg1:create_text_objs()
    arg1:calc_num_choices()
    arg1:display_lines()
end
br2.create_text_objs = function(arg1) -- line 94
    local local1, local2
    if arg1.text_objs == nil then
        arg1.text_objs = { }
        local1 = { x = 10, y = Dialog.start_y, fgcolor = Dialog.lo_color, font = verb_font, ljustify = TRUE }
        local2 = 1
        while local2 <= Dialog.max_line do
            arg1.text_objs[local2] = MakeTextObject(" ", local1)
            local1.y = local1.y + Dialog.height
            local2 = local2 + 1
        end
    end
end
br2.calc_num_choices = function(arg1) -- line 110
    local local1
    arg1.num_choices = 0
    local1 = 1
    while arg1.choices[local1] do
        if not arg1.choices[local1].disabled then
            arg1.num_choices = arg1.num_choices + 1
        end
        local1 = local1 + 1
    end
end
br2.display_lines = function(arg1) -- line 124
    local local1, local2, local3
    local1 = 1
    local2 = arg1.top_line
    while local1 <= Dialog.max_line and arg1.choices[local2] ~= nil do
        if not arg1.choices[local2].disabled then
            if local1 == Dialog.max_line and arg1.top_line + local1 - 1 ~= arg1.num_choices then
                local3 = arg1.choices[arg1.top_line + local1 - 1].text
                local3 = local3 .. " ..."
                ChangeTextObject(arg1.text_objs[local1], local3)
            else
                ChangeTextObject(arg1.text_objs[local1], arg1.choices[arg1.top_line + local1 - 1].text)
            end
            if arg1.current_line == arg1.top_line + local1 - 1 then
                ChangeTextObject(arg1.text_objs[local1], { fgcolor = Dialog.hi_color })
            else
                ChangeTextObject(arg1.text_objs[local1], { fgcolor = Dialog.lo_color })
            end
            local1 = local1 + 1
        end
        local2 = local2 + 1
    end
end
br2.buttonHandler = function(arg1, arg2, arg3, arg4) -- line 150
    if arg2 == AKEY and developerMode then
        start_script(arg1.finish, arg1)
    elseif not CommonButtonHandler(arg2, arg3, arg4) then
        if arg3 and not br2.active then
            if control_map.DIALOG_DOWN[arg2] then
                single_start_script(arg1.line_down, arg1)
            elseif control_map.DIALOG_UP[arg2] then
                single_start_script(arg1.line_up, arg1)
            elseif control_map.DIALOG_CHOOSE[arg2] then
                single_start_script(arg1.choose_line, arg1)
            elseif control_map.PAGE_UP[arg2] then
                single_start_script(arg1.line_up, arg1, 4)
            elseif control_map.PAGE_DOWN[arg2] then
                single_start_script(arg1.line_down, arg1, 4)
            end
        end
    end
end
br2.line_down = function(arg1, arg2) -- line 175
    local local1
    if not arg2 then
        arg2 = 1
    end
    while get_generic_control_state("DIALOG_DOWN") do
        arg1.current_line = arg1.current_line + arg2
        if arg1.current_line > arg1.num_choices then
            arg1.current_line = arg1.num_choices
        end
        arg1.top_line = arg1.current_line
        if arg1.top_line > arg1.num_choices - 3 then
            arg1.top_line = arg1.num_choices - 3
        end
        arg1:display_lines()
        local1 = 0
        while local1 < 500 and get_generic_control_state("DIALOG_DOWN") do
            break_here()
            local1 = local1 + system.frameTime
        end
    end
end
br2.line_up = function(arg1, arg2) -- line 203
    local local1
    if not arg2 then
        arg2 = 1
    end
    while get_generic_control_state("DIALOG_UP") do
        arg1.current_line = arg1.current_line - arg2
        if arg1.current_line < 1 then
            arg1.current_line = 1
        end
        if arg1.current_line <= arg1.num_choices - 3 then
            arg1.top_line = arg1.current_line
        end
        arg1:display_lines()
        local1 = 0
        while local1 < 500 and get_generic_control_state("DIALOG_UP") do
            break_here()
            local1 = local1 + system.frameTime
        end
    end
end
br2.choose_line = function(arg1) -- line 228
    local local1
    system.buttonHandler = noButtonHandler
    stop_script(arg1.line_up)
    stop_script(arg1.line_down)
    local1 = arg1.choices[arg1.current_line]
    arg1:clear()
    system.currentActor:say_line(local1.text)
    system.currentActor:wait_for_message()
    if local1.func then
        local1.func(arg1)
    else
        arg1:check_response(arg1.current_line)
    end
end
br2.check_response = function(arg1, arg2) -- line 250
    if arg2 == ly.keno_actor.current_number then
        arg1:positive()
    else
        arg1:negative()
    end
end
br2.positive = function(arg1) -- line 258
    br2.solved = TRUE
    cur_puzzle_state[57] = TRUE
    ly:current_setup(ly_elems)
    brennis:say_line("/lybs149/")
    brennis:wait_for_message()
    brennis:say_line("/lybs150/")
    brennis:wait_for_message()
    manny:say_line("/lyma151/")
    manny:wait_for_message()
    brennis:say_line("/lybs152/")
    brennis:wait_for_message()
    manny:say_line("/lyma153/")
    manny:wait_for_message()
    br2:finish()
end
br2.negative = function(arg1) -- line 277
    if not arg1.choices[38].used then
        arg1.choices[38].disabled = FALSE
    end
    ly:current_setup(ly_elems)
    brennis:say_line("/lybs155/")
    brennis:wait_for_message()
    brennis:say_line("/lybs156/")
    br2:finish()
end
br2.complain = function(arg1) -- line 291
    arg1.choices[38].disabled = TRUE
    arg1.choices[38].used = TRUE
    ly:current_setup(ly_elems)
    brennis:say_line("/lybs158/")
    brennis:wait_for_message()
    brennis:say_line("/lybs159/")
    br2:finish()
end
br2.clear = function(arg1) -- line 304
    local local1
    if arg1.text_objs then
        local1 = 1
        while local1 <= Dialog.max_line do
            if arg1.text_objs[local1] then
                KillTextObject(arg1.text_objs[local1])
                arg1.text_objs[local1] = nil
            end
            local1 = local1 + 1
        end
        arg1.text_objs = nil
    end
end
br2.finish = function(arg1) -- line 321
    ly:current_setup(ly_elems)
    arg1:clear()
    arg1:outro()
    system.buttonHandler = SampleButtonHandler
    system.axisHandler = SampleAxisHandler
    enable_head_control(TRUE)
end
br2.outro = function(arg1) -- line 332
    cameraman_disabled = FALSE
    ly.keno_actor.game_paused = FALSE
    if not br2.solved then
        ly:brennis_start_idle()
    else
        ly:add_object_state(ly_elems, "ly_elevator.bm", "ly_elevator.zbm", OBJSTATE_STATE)
        ly.brennis_obj:set_object_state("ly_elevator.cos")
        ly.brennis_obj:play_chore(0)
        ly.brennis_obj:wait_for_chore()
        hf:first_time_in()
    end
end
br2.choices[1] = { text = "/cnma001/" }
br2.choices[2] = { text = "/cnma002/" }
br2.choices[3] = { text = "/cnma003/" }
br2.choices[4] = { text = "/cnma004/" }
br2.choices[5] = { text = "/cnma005/" }
br2.choices[6] = { text = "/cnma006/" }
br2.choices[7] = { text = "/cnma007/" }
br2.choices[8] = { text = "/cnma008/" }
br2.choices[9] = { text = "/cnma009/" }
br2.choices[10] = { text = "/cnma010/" }
br2.choices[11] = { text = "/cnma011/" }
br2.choices[12] = { text = "/cnma012/" }
br2.choices[13] = { text = "/cnma013/" }
br2.choices[14] = { text = "/cnma014/" }
br2.choices[15] = { text = "/cnma015/" }
br2.choices[16] = { text = "/cnma016/" }
br2.choices[17] = { text = "/cnma017/" }
br2.choices[18] = { text = "/cnma018/" }
br2.choices[19] = { text = "/cnma019/" }
br2.choices[20] = { text = "/cnma020/" }
br2.choices[21] = { text = "/cnma021/" }
br2.choices[22] = { text = "/cnma022/" }
br2.choices[23] = { text = "/cnma023/" }
br2.choices[24] = { text = "/cnma024/" }
br2.choices[25] = { text = "/cnma025/" }
br2.choices[26] = { text = "/cnma026/" }
br2.choices[27] = { text = "/cnma027/" }
br2.choices[28] = { text = "/cnma028/" }
br2.choices[29] = { text = "/cnma029/" }
br2.choices[30] = { text = "/cnma030/" }
br2.choices[31] = { text = "/cnma031/" }
br2.choices[32] = { text = "/cnma032/" }
br2.choices[33] = { text = "/cnma033/" }
br2.choices[34] = { text = "/cnma034/" }
br2.choices[35] = { text = "/cnma035/" }
br2.choices[36] = { text = "/cnma036/" }
br2.choices[37] = { text = "/lyma154/", ["func"] = br2.negative }
br2.choices[38] = { text = "/lyma157/", disabled = TRUE, ["func"] = br2.complain }
CheckFirstTime("dlg_brennis.lua")
br1 = Dialog:create()
br1.focus = tu.brennis_obj
br1.intro = function() -- line 13
    br1.node = "first_brennis_node"
    START_CUT_SCENE()
    if not brennis.met then
        brennis.met = TRUE
        manny:hand_gesture()
        manny:say_line("/tuma001/")
        brennis:start_talking()
        manny:wait_for_message()
        brennis:say_line("/tubs002/")
        brennis:wait_for_message()
        brennis:say_line("/tubs003/")
        brennis:wait_for_message()
        brennis:say_line("/tubs004/")
    elseif brennis.chatted_out then
        br1.node = "exit_dialog"
        manny:hand_gesture()
        manny:say_line("/tuma005/")
        manny:wait_for_message()
        brennis:say_line("/tubs006/")
    end
    END_CUT_SCENE()
end
br1[85] = { text = "/tuma007/", first_brennis_node = TRUE, gesture = manny.tilt_head_gesture }
br1[85].response = function(arg1) -- line 41
    arg1.off = TRUE
    br1[87].off = FALSE
    brennis:say_line("/tubs008/")
    brennis:start_talking()
    brennis:wait_for_message()
    brennis:say_line("/tubs009/")
end
br1[87] = { text = "/tuma010/", first_brennis_node = TRUE, gesture = manny.shrug_gesture }
br1[87].off = TRUE
br1[87].response = function(arg1) -- line 52
    arg1.off = TRUE
    br1[130].off = FALSE
    brennis:say_line("/tubs011/")
    brennis:start_talking()
    brennis:wait_for_message()
    brennis:say_line("/tubs012/")
    brennis:wait_for_message()
    manny:tilt_head_gesture()
    manny:say_line("/tuma013/")
    manny:wait_for_message()
    brennis:say_line("/tubs014/")
end
br1[90] = { text = "/tuma015/", first_brennis_node = TRUE, gesture = { manny.point_gesture, manny.head_forward_gesture } }
br1[90].response = function(arg1) -- line 67
    arg1.off = TRUE
    br1[95].off = FALSE
    brennis:say_line("/tubs016/")
    brennis:start_talking()
    brennis:wait_for_message()
    brennis:say_line("/tubs017/")
    brennis:wait_for_message()
    brennis:say_line("/tubs018/")
end
br1[95] = { text = "/tuma019/", first_brennis_node = TRUE, gesture = manny.shrug_gesture }
br1[95].off = TRUE
br1[95].response = function(arg1) -- line 80
    arg1.off = TRUE
    brennis:say_line("/tubs020/")
    brennis:start_talking()
    brennis:wait_for_message()
    manny:say_line("/tuma021/")
    sleep_for(200)
    manny:point_gesture()
    manny:nod_head_gesture(TRUE)
    manny:wait_for_message()
    manny:say_line("/tuma022/")
    manny:wait_for_message()
    brennis:say_line("/tubs023/")
    brennis:wait_for_message()
    brennis:say_line("/tubs024/")
end
br1[100] = { text = "/tuma025/", gesture = { manny.hand_gesture, manny.tilt_head_gesture } }
br1[100].response = function(arg1) -- line 98
    arg1.off = TRUE
    brennis:say_line("/tubs026/")
    brennis:start_talking()
    brennis:wait_for_message()
    brennis:say_line("/tubs027/")
end
br1[110] = { text = "/tuma028/", first_brennis_node = TRUE, gesture = { manny.shrug_gesture, manny.twist_head_gesture } }
br1[110].response = function(arg1) -- line 108
    arg1.off = TRUE
    brennis:say_line("/tubs029/")
    brennis:start_talking()
    brennis:wait_for_message()
    brennis:say_line("/tubs030/")
    brennis:wait_for_message()
    brennis:say_line("/tubs031/")
end
br1[130] = { text = "/tuma032/", first_brennis_node = TRUE, gesture = { manny.shrug_gesture, manny.head_forward_gesture } }
br1[130].off = TRUE
br1[130].response = function(arg1) -- line 120
    arg1.off = TRUE
    brennis:say_line("/tubs033/")
    brennis:start_talking()
    brennis:wait_for_message()
    brennis:say_line("/tubs034/")
    brennis:wait_for_message()
    brennis:say_line("/tubs035/")
    brennis:wait_for_message()
    manny:nod_head_gesture()
    manny:say_line("/tuma036/")
end
br1[140] = { text = "/tuma037/", first_brennis_node = TRUE, gesture = manny.point_gesture }
br1[140].response = function(arg1) -- line 135
    arg1.off = TRUE
    brennis:say_line("/tubs038/")
    brennis:start_talking()
    brennis:wait_for_message()
    brennis:say_line("/tubs039/")
    brennis:wait_for_message()
    brennis:say_line("/tubs040/")
end
br1.exit_lines.first_brennis_node = { text = "/tuma041/", gesture = manny.shrug_gesture }
br1.exit_lines.first_brennis_node.response = function(arg1) -- line 147
    br1.node = "exit_dialog"
    brennis:say_line("/tubs042/")
end
br1.aborts.first_brennis_node = function(arg1) -- line 152
    br1:clear()
    br1.node = exit
    brennis.chatted_out = TRUE
    brennis:start_talking()
    brennis:say_line("/tubs043/")
    brennis:wait_for_message()
    brennis:say_line("/tubs044/")
    brennis:wait_for_message()
    manny:point_gesture()
    manny:say_line("/tuma045/")
end
br1.outro = function(arg1) -- line 165
    START_CUT_SCENE()
    brennis:stop_talking()
    if not brennis.burnt then
        brennis:burn()
    end
    END_CUT_SCENE()
end
br1[999] = "EOD"
CheckFirstTime("dlg_car2.lua")
ca2 = Dialog:create()
ca2.focus = sl.view
ca2.intro = function(arg1) -- line 14
    manny.golden = FALSE
    music_state:set_state(stateSL_TALK)
    manny:ignore_boxes()
    manny:setpos(0.8556, 0.306978, 0)
    manny:setrot(0, 283.908, 0)
    manny:push_costume("manny_lunge.cos")
    manny:play_chore_looping(manny_lunge_sit, "manny_lunge.cos")
    manny:set_speech_mode(MODE_BACKGROUND)
    carla:ignore_boxes()
    carla:setpos(1.2179, 0.763751, 0)
    carla:setrot(0, 229.367, 0)
    carla:set_up_mood_swings()
    sl:current_setup(sl_intws)
    break_here()
    carla:say_line("/slca021/")
    carla:wait_for_message()
    manny:play_chore(manny_lunge_gesture, "manny_lunge.cos")
    manny:say_line("/slma022/")
    manny:wait_for_message()
    carla:say_line("/slca023/")
    carla:wait_for_message()
    manny:stop_chore(manny_lunge_gesture, "manny_lunge.cos")
    manny:play_chore(manny_lunge_wait, "manny_lunge.cos")
    manny:say_line("/slma024/")
    manny:wait_for_message()
    carla:say_line("/slca025/")
    carla:wait_for_message()
    ca2.node = "babble_node"
    start_script(ca2.babble)
end
ca2.update_lines = function(arg1) -- line 56
    local local1 = 1
    lines = arg1.current_choices
    while lines[local1] do
        ChangeTextObject(lines[local1].hText, lines[local1].text)
        local1 = local1 + 1
    end
end
ca2.babble = function() -- line 66
    carla:wait_and_say_line("/slca026/")
    carla:wait_for_message()
    carla:wait_and_say_line("/slca027/")
    carla:wait_for_message()
    ca2[10].text = "/slma028/"
    ca2[20].text = "/slma029/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca030/")
    carla:wait_for_message()
    ca2[10].text = "/slma031/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca032/")
    carla:wait_for_message()
    ca2[20].text = "/slma033/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca034/")
    carla:wait_for_message()
    ca2[30].text = "/slma035/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca036/")
    carla:wait_for_message()
    carla:wait_and_say_line("/slca037/")
    carla:wait_for_message()
    ca2[10].text = "/slma038/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca039/")
    carla:wait_for_message()
    carla:mood_swing("wistful")
    carla:wait_and_say_line("/slca040/")
    carla:wait_for_message()
    ca2[20].text = "/slma041/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca042/")
    carla:wait_for_message()
    ca2[10].text = "/slma043/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca044/")
    carla:wait_for_message()
    ca2[10].text = "/slma045/"
    ca2[20].text = "/slma046/"
    ca2[30].text = "/slma047/"
    ca2:update_lines()
    carla:mood_swing("casual")
    carla:wait_and_say_line("/slca048/")
    carla:wait_for_message()
    ca2[10].text = "/slma049/"
    ca2[20].text = "/slma050/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca051/")
    carla:wait_for_message()
    ca2[10].text = "/slma052/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca053/")
    carla:wait_for_message()
    ca2[10].text = "/slma054/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca055/")
    carla:wait_for_message()
    ca2[20].text = "/slma056/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca057/")
    carla:wait_for_message()
    ca2[10].text = "/slma058/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca059/")
    carla:wait_for_message()
    ca2[10].text = "/slma060/"
    ca2[20].text = "/slma061/"
    ca2[30].text = "/slma062/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca063/")
    carla:wait_for_message()
    carla:wait_and_say_line("/slca064/")
    carla:wait_for_message()
    carla:wait_and_say_line("/slca065/")
    carla:wait_for_message()
    ca2[10].text = "/slma066/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca067/")
    carla:wait_for_message()
    ca2[10].text = "/slma068/"
    ca2[20].text = "/slma069/"
    ca2[30].text = "/slma070/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca071/")
    carla:wait_for_message()
    carla:mood_swing("wistful")
    carla:wait_and_say_line("/slca072/")
    carla:wait_for_message()
    ca2[10].text = "/slma073/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca074/")
    carla:wait_for_message()
    ca2[20].text = "/slma075/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca076/")
    carla:wait_for_message()
    ca2[30].text = "/slma077/"
    ca2:update_lines()
    carla:mood_swing("casual")
    carla:wait_and_say_line("/slca078/")
    carla:wait_for_message()
    ca2[10].text = "/slma079/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca080/")
    carla:wait_for_message()
    ca2[10].text = "/slma081/"
    ca2[20].text = "/slma082/"
    ca2[30].text = "/slma083/"
    ca2:update_lines()
    carla:mood_swing("emote")
    carla:wait_and_say_line("/slca084/")
    carla:wait_for_message()
    carla:mood_swing("bitter")
    carla:wait_and_say_line("/slca085/")
    carla:wait_for_message()
    ca2[10].text = "/slma086/"
    ca2[20].text = "/slma087/"
    ca2[30].text = "/slma088/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca089/")
    sleep_for(1000)
    carla:mood_swing("stomp")
    carla:wait_for_message()
    ca2[10].text = "/slma090/"
    ca2[20].text = "/slma091/"
    ca2:update_lines()
    carla:mood_swing("angry")
    carla:wait_and_say_line("/slca092/")
    carla:wait_for_message()
    ca2[10].text = "/slma093/"
    ca2[20].text = "/slma094/"
    ca2[30].text = "/slma095/"
    ca2:update_lines()
    carla:mood_swing("tense")
    carla:wait_and_say_line("/slca096/")
    carla:wait_for_message()
    carla:wait_and_say_line("/slca097/")
    carla:wait_for_message()
    ca2[10].text = "/slma098/"
    ca2:update_lines()
    carla:mood_swing("cry")
    carla:wait_and_say_line("/slca099/")
    carla:wait_for_message()
    ca2[20].text = "/slma100/"
    ca2[30].text = "/slma101/"
    ca2:update_lines()
    carla:wait_and_say_line("/slca102/")
    carla:wait_for_message()
    carla:wait_and_say_line("/slca103/")
    carla:wait_for_message()
    ca2[10].text = "/slma104/"
    ca2[20].text = "/slma105/"
    ca2:update_lines()
    carla:mood_swing("sob")
    carla:wait_and_say_line("/slca106/")
    carla:wait_for_message()
    ca2[10].text = "/slma107/"
    ca2[20].text = "/slma108/"
    ca2[30].text = "/slma109/"
    ca2:update_lines()
    carla:mood_swing("sniffle")
    carla:say_line("/slca110/")
    carla:wait_for_message()
    while 1 do
        carla:mood_swing("sob")
        carla:wait_and_say_line("/slca111/")
        carla:wait_for_message()
        ca2[10].text = "/slma112/"
        ca2[20].text = "/slma113/"
        ca2[30].text = "/slma114/"
        ca2:update_lines()
        carla:wait_and_say_line("/slca115/")
        carla:wait_for_message()
        carla:wait_and_say_line("/slca116/")
        carla:wait_for_message()
    end
end
ca2[10] = { text = "/slma117/", babble_node = TRUE, gesture = sl.manny_lunge_gesture1 }
ca2[10].response = function(arg1) -- line 312
    ca2.node = "babble_node"
end
ca2[20] = { text = "/slma118/", babble_node = TRUE, gesture = sl.manny_lunge_gesture2 }
ca2[20].response = function(arg1) -- line 317
    ca2.node = "babble_node"
end
ca2[30] = { text = "/slma119/", babble_node = TRUE }
ca2[30].response = function(arg1) -- line 322
    ca2.node = "detector"
    carla:wait_for_message()
    stop_script(ca2.babble)
    carla:stop_looping_chores()
    carla:mood_swing("emote")
    carla:wait_for_message()
    if not ca2.asked_about_detector then
        ca2.asked_about_detector = TRUE
        carla:say_line("/slca120/")
    else
        carla:say_line("/slca121/")
    end
end
ca2[100] = { text = "/slma122/", detector = TRUE }
ca2[100].response = function(arg1) -- line 340
    ca2.node = "exit_dialog"
    stop_script(ca2.babble)
    sl.detector.in_catbox = TRUE
    cur_puzzle_state[26] = TRUE
    sl.detector:make_untouchable()
    cameraman_disabled = TRUE
    carla:stop_looping_chores()
    carla:play_chore(carla_cry_ehold_to_chold, sl.cry_cos)
    carla:wait_for_chore(carla_cry_ehold_to_chold, sl.cry_cos)
    carla:stop_chore(carla_cry_ehold_to_chold, sl.cry_cos)
    carla:play_chore(carla_cry_hold_md_out, sl.cry_cos)
    carla:say_line("/slca123/")
    carla:wait_for_message()
    carla:say_line("/slca124/")
    carla:wait_for_chore(carla_cry_hold_md_out, sl.cry_cos)
    carla:play_chore_looping(carla_cry_shake_md_loop, sl.cry_cos)
    carla:wait_for_message()
    carla:say_line("/slca125/")
    sleep_for(500)
    carla:set_chore_looping(carla_cry_shake_md_loop, FALSE, sl.cry_cos)
    carla:wait_for_chore(carla_cry_shake_md_loop, sl.cry_cos)
    carla:stop_chore(carla_cry_shake_md_loop, sl.cry_cos)
    manny:stop_chore(manny_lunge_sit, "manny_lunge.cos")
    manny:play_chore(manny_lunge_lunge, "manny_lunge.cos")
    carla:play_chore(carla_cry_throw_md, sl.cry_cos)
    manny:wait_for_chore(manny_lunge_lunge, "manny_lunge.cos")
    sleep_for(350)
    start_sfx("mdLand.WAV")
    set_pan("mdLand.WAV", 110)
    wait_for_sound("mdLand.WAV")
    sl:current_setup(sl_winha)
    carla:setpos(1.04081, 0.332219, 0)
    carla:setrot(0, 200.013, 0)
    carla:stop_chore(carla_cry_throw_md, sl.cry_cos)
    manny:stop_chore(manny_lunge_lunge, "manny_lunge.cos")
    manny:setpos(1.1467, 0.575275, 0)
    manny:setrot(0, 302.523, 0)
    manny:play_chore(manny_lunge_lunge2, "manny_lunge.cos")
    carla:wait_for_message()
    carla:say_line("/slca126/")
    carla:wait_for_message()
    carla:say_line("/slca127/")
    carla:wait_for_message()
    carla:wait_for_chore(carla_cry_throw_md, sl.cry_cos)
    carla:stop_chore(carla_cry_throw_md, sl.cry_cos)
    carla:play_chore(carla_stand_hold, sl.search_cos)
    carla:say_line("/slca128/")
    sleep_for(2000)
    manny:wait_for_chore(manny_lunge_lunge2, "manny_lunge.cos")
    manny:stop_chore(manny_lunge_lunge2, "manny_lunge.cos")
    manny:pop_costume()
    manny:setpos(1.25, 0.675, 0)
    manny:setrot(0, 172.425, 0)
    manny:follow_boxes()
    sl:current_setup(sl_intws)
    carla:wait_for_message()
    start_script(sl.carla_storm_out, carla)
    carla:say_line("/slca129/")
    carla:wait_for_message()
    manny:walkto(1.13441, 0.564019, 0)
    manny:wait_for_actor()
    manny:setrot(0, 186.788, 0, TRUE)
    manny:hand_gesture()
    manny:say_line("/slma130/")
    manny:wait_for_message()
    manny:set_speech_mode(MODE_NORMAL)
    sleep_for(1000)
    manny:head_look_at(nil)
    cameraman_disabled = FALSE
    music_state:set_state(stateSL)
end
ca2[110] = { text = "/slma131/", detector = TRUE }
ca2[110].response = function(arg1) -- line 425
    ca2.node = "babble_node"
    ca2[100].text = "/slma132/"
    ca2[110].text = "/slma133/"
    carla:mood_swing("casual")
    carla:say_line("/slca134/")
    carla:wait_for_message()
    carla:say_line("/slca135/")
    carla:wait_for_message()
    ca2[10].text = "/slma136/"
    ca2[20].text = "/slma137/"
    ca2[30].text = "/slma138/"
    start_script(ca2.babble)
end
ca2[999] = "EOD"
CheckFirstTime("dlg_carla.lua")
ca1 = Dialog:create()
ca1.focus = sl.carla_obj
ca1.intro = function(arg1, arg2) -- line 13
    if arg2 == "detector" then
        ca1:execute_line(ca1[40])
    else
        ca1.node = "first_carla_node"
    end
    stop_script(sl.carla_idle)
    manny:wait_for_actor()
    sl:current_setup(sl_diams)
    manny:push_costume("ma_charmer.cos")
    manny:play_chore(ma_charmer_start_charm, "ma_charmer.cos")
    start_script(carla.go_to_prop, carla)
    manny:wait_for_chore(ma_charmer_start_charm, "ma_charmer.cos")
    manny:stop_chore(ma_charmer_start_charm, "ma_charmer.cos")
    manny:play_chore(ma_charmer_hand_to_chin2, "ma_charmer.cos")
    manny:wait_for_chore(ma_charmer_hand_to_chin2, "ma_charmer.cos")
    if sl.bomb_detonated and not ca1.talked_bomb then
        ca1.talked_bomb = TRUE
        manny:say_line("/slma139/")
        manny:wait_for_message()
        carla:say_line("/slca140/")
    end
end
ca1[20] = { text = "/slma141/", first_carla_node = TRUE }
ca1[20].response = function(arg1) -- line 41
    arg1.off = TRUE
    carla:say_line("/slca142/")
    carla:wait_for_message()
    start_script(carla.prop_tilt_head, carla)
    carla:say_line("/slca143/")
    carla:wait_for_message()
    start_script(carla.prop_end_tilt_head, carla)
    carla:say_line("/slca144/")
end
ca1[30] = { text = "/slma145/", first_carla_node = TRUE, gesture = manny.charm_nod_gesture }
ca1[30].response = function(arg1) -- line 53
    arg1.off = TRUE
    carla:say_line("/slca146/")
    carla:wait_for_message()
    carla:say_line("/slca147/")
end
ca1[40] = { text = "/slma148/", first_carla_node = TRUE, gesture = manny.charm_point_gesture }
ca1[40].response = function(arg1) -- line 61
    sl.talked_detectors = TRUE
    arg1.off = TRUE
    ca1.node = "detector_node"
    carla:say_line("/slca149/")
end
ca1[50] = { text = "/slma150/", detector_node = TRUE, gesture = manny.charm_nod_gesture }
ca1[51] = { text = "/slma151/", detector_node = TRUE, gesture = manny.charm_nod_gesture }
ca1[52] = { text = "/slma152/", detector_node = TRUE, gesture = manny.charm_nod_gesture }
ca1[53] = { text = "/slma153/", detector_node = TRUE, gesture = manny.charm_nod_gesture }
ca1[50].response = function(arg1) -- line 73
    ca1.node = "first_carla_node"
    ca1[60].off = FALSE
    ca1[100].off = FALSE
    carla:say_line("/slca154/")
end
ca1[51].response = ca1[50].response
ca1[52].response = ca1[50].response
ca1[53].response = ca1[50].response
ca1[60] = { text = "/slma155/", first_carla_node = TRUE, gesture = manny.charm_point_gesture }
ca1[60].off = TRUE
ca1[60].response = function(arg1) -- line 85
    arg1.off = TRUE
    wait_for_message()
    carla:say_line("/slca156/")
    carla:wait_for_message()
    manny:say_line("/slma157/")
    manny:wait_for_message()
    start_script(carla.go_to_sit, carla)
    carla:say_line("/slca158/")
    carla:wait_for_message()
    carla:say_line("/slca159/")
end
ca1[100] = { text = "/slma160/", first_carla_node = TRUE }
ca1[100].off = TRUE
ca1[100].response = function(arg1) -- line 100
    arg1.off = TRUE
    ca1[110].off = FALSE
    manny:say_line("/slma161/")
    manny:wait_for_message()
    manny:charm_nod_gesture()
    manny:say_line("/slma162/")
    manny:wait_for_message()
    start_script(carla.go_to_sit, carla)
    carla:say_line("/slca163/")
end
ca1[110] = { text = "/slma164/", first_carla_node = TRUE }
ca1[110].off = TRUE
ca1[110].response = function(arg1) -- line 114
    arg1.off = TRUE
    ca1[120].off = FALSE
    carla:say_line("/slca165/")
end
ca1[120] = { text = "/slma166/", first_carla_node = TRUE, gesture = manny.charm_nod_gesture }
ca1[120].off = TRUE
ca1[120].response = function(arg1) -- line 122
    arg1.off = TRUE
    ca1.node = "exit_dialog"
    start_script(carla.go_to_prop, carla)
    carla:say_line("/slca167/")
    carla:wait_for_message()
    carla:say_line("/slca168/")
    carla:wait_for_message()
    carla:head_look_at(nil)
    carla:say_line("/slca169/")
    manny:head_look_at(sl.they1)
    sleep_for(500)
    manny:head_look_at(sl.they2)
    sleep_for(500)
    wait_for_message()
    manny:play_chore(ma_charmer_back_to_idle, "ma_charmer.cos")
    manny:wait_for_chore(ma_charmer_back_to_idle, "ma_charmer.cos")
    manny:head_look_at(sl.gate)
    sleep_for(1000)
    manny:default("cafe")
    manny:head_look_at(nil)
    sl:current_setup(sl_intha)
    manny:shrug_gesture()
    manny:say_line("/slma170/")
    manny:wait_for_message()
    manny:walkto(0.154136, -0.296585, 0)
    manny:wait_for_actor()
end
ca1[130] = { text = "/slma171/", first_carla_node = TRUE, gesture = manny.charm_point_gesture }
ca1[130].response = function(arg1) -- line 152
    arg1.off = TRUE
    start_script(carla.go_to_prop, carla)
    carla:say_line("/slca172/")
    carla:wait_for_message()
    carla:say_line("/slca173/")
    carla:wait_for_message()
    manny:say_line("/slma174/")
end
ca1.exit_lines.first_carla_node = { text = "/slma175/" }
ca1.exit_lines.first_carla_node.response = function(arg1) -- line 163
    ca1.node = "exit_dialog"
    carla:say_line("/slca176/")
end
ca1.aborts.first_carla_node = function(arg1) -- line 168
    ca1:clear()
    ca1.node = "exit_dialog"
    manny:say_line("/slma177/")
    manny:wait_for_message()
    start_script(carla.go_to_prop)
    carla:say_line("/slca178/")
    carla:wait_for_message()
    manny:stop_chore(ma_charmer_hand_to_chin2, "ma_charmer.cos")
    manny:play_chore(ma_charmer_back_to_idle, "ma_charmer.cos")
    manny:wait_for_chore(ma_charmer_back_to_idle, "ma_charmer.cos")
    manny:pop_costume()
    manny:default("cafe")
    manny:head_look_at(nil)
    carla:say_line("/slca179/")
    sl:current_setup(sl_intha)
    single_start_script(sl.carla_idle)
end
ca1.outro = function(arg1) -- line 187
    manny:stop_chore(ma_charmer_hand_to_chin2, "ma_charmer.cos")
    manny:play_chore(ma_charmer_back_to_idle, "ma_charmer.cos")
    manny:wait_for_chore(ma_charmer_back_to_idle, "ma_charmer.cos")
    manny:default("cafe")
    manny:head_look_at(nil)
    sl:current_setup(sl_intha)
    single_start_script(sl.carla_idle)
end
ca1[999] = "EOD"
CheckFirstTime("dlg_celso2.lua")
ce2 = Dialog:create()
ce2.intro = function(arg1) -- line 11
    ce2.node = "n1"
    if not ce2.introduced then
        ce2.introduced = TRUE
        manny:head_forward_gesture()
        manny:say_line("/hfma031/")
        manny:wait_for_message()
        start_script(hf.flores_stop_idles, hf)
        manny:say_line("/hfma032/")
        manny:wait_for_message()
        celso:say_line("/hfce033/")
        celso:wait_for_message()
        celso:play_chore(the_floreses_to_susp)
        celso:say_line("/hfce034/")
        celso:wait_for_chore(the_floreses_to_susp)
        celso:run_chore(the_floreses_susp_cyc)
        celso:run_chore(the_floreses_susp_2dflt)
    else
        manny:tilt_head_gesture()
        manny:say_line("/hfma035/")
        manny:wait_for_message()
        hf:flores_stop_idles()
        celso:play_chore(the_floreses_to_shrug)
        celso:say_line("/hfce036/")
        celso:wait_for_chore(the_floreses_to_shrug)
        celso:run_chore(the_floreses_shg_2dflt)
        celso:play_chore(the_floreses_default)
    end
end
ce2[100] = { text = "/hfma037/", n1 = TRUE }
ce2[100].response = function(arg1) -- line 44
    arg1.off = TRUE
    celso:play_chore(the_floreses_to_explain)
    celso:say_line("/hfce038/")
    celso:wait_for_chore(the_floreses_to_explain)
    celso:wait_for_message()
    celso:play_chore(the_floreses_exp2dflt)
    celso:say_line("/hfce039/")
    celso:wait_for_chore(the_floreses_exp2dflt)
    celso:play_chore(the_floreses_default)
end
ce2[110] = { text = "/hfma040/", n1 = TRUE }
ce2[110].response = function(arg1) -- line 57
    arg1.off = TRUE
    ce2[120].off = FALSE
    ce2.node = "pitch"
    celso:play_chore(the_floreses_let_me)
    sleep_for(200)
    celso:say_line("/hfce041/")
    celso:wait_for_chore(the_floreses_let_me)
    celso:play_chore(the_floreses_default)
    wait_for_message()
    celso:say_line("/hfce042/")
    celso:wait_for_message()
    celso:say_line("/hfce043/")
end
ce2[120] = { text = "/hfma044/", n1 = TRUE, gesture = manny.tilt_head_gesture }
ce2[120].off = TRUE
ce2[120].response = function(arg1) -- line 74
    ce2.node = "pitch"
    celso:say_line("/hfce045/")
end
ce2[130] = { text = "/hfma046/", pitch = TRUE, gesture = manny.head_forward_gesture }
ce2[130].response = function(arg1) -- line 80
    arg1.off = TRUE
    celso:play_chore(the_floreses_to_susp)
    celso:say_line("/hfce047/")
    celso:wait_for_chore(the_floreses_to_susp)
    celso:play_chore_looping(the_floreses_susp_cyc)
    celso:wait_for_message()
    celso:say_line("/hfce048/")
    celso:set_chore_looping(the_floreses_susp_cyc, FALSE)
    celso:wait_for_chore(the_floreses_susp_cyc)
    celso:play_chore(the_floreses_susp_2dflt)
    celso:wait_for_chore(the_floreses_susp_2dflt)
end
ce2[140] = { text = "/hfma049/", pitch = TRUE, gesture = manny.hand_gesture }
ce2[140].response = function(arg1) -- line 95
    arg1.off = TRUE
    celso:play_chore(the_floreses_to_cs_shake)
    celso:say_line("/hfce050/")
    celso:wait_for_chore(the_floreses_to_cs_shake)
    celso:run_chore(the_floreses_cs_shake)
    celso:run_chore(the_floreses_shk_2dflt)
    celso:play_chore(the_floreses_default)
end
ce2[150] = { text = "/hfma051/", pitch = TRUE, gesture = manny.point_gesture }
ce2[150].response = function(arg1) -- line 106
    arg1.off = TRUE
    celso:say_line("/hfce052/")
end
ce2[160] = { text = "/hfma053/", pitch = TRUE, gesture = manny.shrug_gesture }
ce2[160].response = function(arg1) -- line 112
    arg1.off = TRUE
    manny:say_line("/hfma054/")
    manny:wait_for_message()
    manny:twist_head_gesture()
    manny:say_line("/hfma055/")
    wait_for_message()
    celso:play_chore(the_floreses_to_shrug)
    celso:say_line("/hfce056/")
    celso:wait_for_chore(the_floreses_to_shrug)
    celso:run_chore(the_floreses_shg_2dflt)
    celso:play_chore(the_floreses_default)
end
ce2[170] = { text = "/hfma057/", pitch = TRUE, gesture = manny.hand_gesture }
ce2[170].response = function(arg1) -- line 127
    ce2.node = "problems"
    celso:run_chore(the_floreses_to_whsper)
    celso:play_chore(the_floreses_to_cstalk)
    celso:say_line("/hfce058/")
    celso:wait_for_chore(the_floreses_to_cstalk)
    celso:run_chore(the_floreses_cstalk1_cyc)
    celso:run_chore(the_floreses_cstalk2_cyc)
    celso:run_chore(the_floreses_cstalk2_2whspr)
    celso:run_chore(the_floreses_whspr_2dflt)
end
ce2[180] = { text = "/hfma059/", problems = TRUE }
ce2[180].response = function(arg1) -- line 140
    arg1.off = TRUE
    celso:say_line("/hfce060/")
end
ce2[190] = { text = "/hfma061/", problems = TRUE }
ce2[190].response = function(arg1) -- line 146
    arg1.off = TRUE
    celso:say_line("/hfce062/")
end
ce2[200] = { text = "/hfma063/", problems = TRUE }
ce2[200].response = function(arg1) -- line 152
    arg1.off = TRUE
    ce2.node = "exit_dialog"
    ce2.solved = TRUE
    celso:play_chore(the_floreses_to_explain)
    celso:say_line("/hfce064/")
    celso:wait_for_chore(the_floreses_to_explain)
    celso:run_chore(the_floreses_exp2dflt)
    celso:play_chore(the_floreses_default)
    wait_for_message()
    manny:hand_gesture()
    manny:say_line("/hfma065/")
    wait_for_message()
    music_state:set_sequence(seqYr4Iris)
    IrisDown(320, 250, 2000)
    manny:say_line("/hfma066/")
    wait_for_message()
    IrisUp(320, 250, 2000)
    sleep_for(1000)
    celso:say_line("/hfce067/")
    wait_for_message()
    manny:shrug_gesture()
    manny:say_line("/hfma068/")
    wait_for_message()
end
ce2[210] = { text = "/hfma071/", problems = TRUE, gesture = manny.twist_head_gesture }
ce2[210].response = function(arg1) -- line 181
    ce2.node = "n1"
    ce2[225].off = FALSE
    celso:say_line("/hfce072/")
end
ce2[220] = { text = "/hfma073/", n1 = TRUE, gesture = manny.hand_gesture }
ce2[220].response = function(arg1) -- line 188
    arg1.off = TRUE
    celso:say_line("/hfce074/")
    wait_for_message()
    celso:play_chore(the_floreses_lovey)
    celso:say_line("/hfce075/")
    celso:wait_for_message()
    celso:run_chore(the_floreses_lov_2dflt)
end
ce2[225] = { text = "/hfma076/", n1 = TRUE, gesture = manny.tilt_head_gesture }
ce2[225].off = TRUE
ce2[225].response = function(arg1) -- line 200
    ce2.node = "problems"
    celso:play_chore(the_floreses_to_explain)
    celso:play_chore(the_floreses_mf_shake)
    celso:say_line("/hfce077/")
    celso:wait_for_chore(the_floreses_mf_shake)
    celso:wait_for_chore(the_floreses_to_explain)
    celso:play_chore(the_floreses_exp2dflt)
    celso:wait_for_chore()
end
ce2.exit_lines.n1 = { text = "/hfma078/" }
ce2.exit_lines.n1.response = function(arg1) -- line 213
    ce2.node = "exit_dialog"
    celso:say_line("/hfce079/")
end
ce2.exit_lines.pitch = ce2.exit_lines.n1
ce2.outro = function(arg1) -- line 220
    if ce2.solved then
        start_script(hf.celso_buy_ticket)
    else
        start_script(hf.flores_idles, hf)
    end
end
CheckFirstTime("dlg_celso.lua")
ce1 = Dialog:create()
ce1.intro = function(arg1) -- line 10
    ce1.node = "first_celso_node"
    manny:head_look_at(ri.celso_obj)
    if not ce1.introduced then
        ce1.introduced = TRUE
        manny:head_look_at(ri.celso_obj)
        manny:say_line("/rima001/")
        wait_for_message()
        manny:head_look_at(ri.celso_obj)
        start_script(celso.face_manny, celso)
        manny:say_line("/rima002/")
        wait_for_message()
        celso:say_line("/rice003/")
        wait_for_message()
        celso:say_line("/rice004/")
        wait_for_message()
        celso:say_line("/rice005/")
        celso:head_look_at_point(3.0496, 0.3054, 0.6586)
        wait_for_message()
        celso:head_look_at_point(ri.manny_point)
    elseif ce1.talked_out then
        ce1.node = "exit_dialog"
        if ce1.talked_out == 1 then
            manny:say_line("/rima006/")
            wait_for_message()
            celso:say_line("/rice007/")
        elseif ce1.talked_out == 2 then
            manny:say_line("/rima008/")
            wait_for_message()
            celso:say_line("/rice009/")
        elseif ce1.talked_out == 3 then
            manny:say_line("/rima010/")
            wait_for_message()
            celso:say_line("/rice011/")
        elseif ce1.talked_out == 4 then
            manny:say_line("/rima012/")
            wait_for_message()
            celso:say_line("/rice013/")
        else
            manny:say_line("/rima014/")
            wait_for_message()
            celso:say_line("/rice015/")
            start_script(celso.face_manny, celso)
            wait_for_message()
            celso:say_line("/rice016/")
            sleep_for(500)
        end
        ce1.talked_out = ce1.talked_out + 1
    end
end
ce1.execute_line = function(arg1, arg2) -- line 64
    if not celso.facing_manny then
        start_script(celso.face_manny, celso)
    end
    Dialog.execute_line(ce1, arg2)
end
ce1.display_lines = function(arg1) -- line 74
    if celso.facing_manny then
        celso:face_mop()
    end
    Dialog.display_lines(ce1)
end
ce1[100] = { text = "/rima017/", first_celso_node = TRUE }
ce1[100].response = function(arg1) -- line 82
    arg1.off = TRUE
    celso:say_line("/rice018/")
end
ce1[110] = { text = "/rima021/", first_celso_node = TRUE }
ce1[110].response = function(arg1) -- line 92
    arg1.off = TRUE
    if not ce1.talked_wife then
        ce1[120].off = FALSE
    end
    celso:say_line("/rice022/")
    wait_for_message()
    celso:say_line("/rice023/")
end
ce1[120] = { text = "/rima024/", first_celso_node = TRUE }
ce1[120].off = TRUE
ce1[120].response = function(arg1) -- line 104
    ce1[120].off = TRUE
    ce1[130].off = TRUE
    ce1[123].off = FALSE
    ce1[125].off = FALSE
    ce1[135].off = FALSE
    ce1.talked_wife = TRUE
    celso:head_look_at_point(ri.mop_point)
    celso:say_line("/rice025/")
    celso:head_look_at_point(ri.mop_point)
    wait_for_message()
    celso:head_look_at_point(ri.mop_point)
    celso:say_line("/rice026/")
    sleep_for(2000)
    celso:head_look_at_point(ri.manny_point)
    wait_for_message()
    celso:say_line("/rice027/")
    wait_for_message()
end
ce1[123] = { text = "/rima091/", first_celso_node = TRUE }
ce1[123].off = TRUE
ce1[123].response = function(arg1) -- line 126
    arg1.off = TRUE
    celso:say_line("/rice092/")
    wait_for_message()
    celso:say_line("/rice093/")
end
ce1[125] = { text = "/rima028/", first_celso_node = TRUE }
ce1[125].off = TRUE
ce1[125].response = function(arg1) -- line 135
    arg1.off = TRUE
    celso:say_line("/rice029/")
end
ce1[130] = { text = "/rima030/", first_celso_node = TRUE }
ce1[130].response = ce1[120].response
ce1[135] = { text = "/rima031/", first_celso_node = TRUE }
ce1[135].triggers_photo = TRUE
ce1[135].off = TRUE
ce1[135].response = function(arg1) -- line 146
    arg1.off = TRUE
    ri.photo:get()
    celso:say_line("/rice032/")
    sleep_for(500)
    start_script(celso.hand_photo)
    wait_for_message()
    celso:say_line("/rice033/")
    wait_for_message()
    celso:say_line("/rice034/")
    wait_for_message()
    manny:say_line("/rima035/")
    manny:blend(ma_read_note, ma_hold, 500, "ma.cos")
    wait_for_message()
    celso:say_line("/rice036/")
    sleep_for(500)
    manny:blend(ma_hold, ma_read_note, 500, "ma.cos")
    manny:wait_for_chore()
    manny:clear_hands()
end
ce1[140] = { text = "/rima037/", first_celso_node = TRUE }
ce1[140].response = function(arg1) -- line 168
    arg1.off = TRUE
    ce1[150].off = FALSE
    ce1[160].off = FALSE
    celso:say_line("/rice038/")
    wait_for_message()
    manny:say_line("/rima039/")
    wait_for_message()
    celso:say_line("/rice040/")
end
ce1[150] = { text = "/rima041/", first_celso_node = TRUE }
ce1[150].off = TRUE
ce1[150].response = function(arg1) -- line 181
    arg1.off = TRUE
    celso:say_line("/rice042/")
    wait_for_message()
    manny:say_line("/rima043/")
    wait_for_message()
    celso:say_line("/rice044/")
    wait_for_message()
    celso:say_line("/rice045/")
end
ce1[160] = { text = "/rima046/", first = TRUE }
ce1[160].off = TRUE
ce1[160].response = function(arg1) -- line 194
    arg1.off = TRUE
    ce1[170].off = FALSE
    celso:say_line("/rice094/")
    wait_for_message()
    manny:say_line("/rima048/")
end
ce1[170] = { text = "/rima049/", first_celso_node = TRUE }
ce1[170].off = TRUE
ce1[170].response = function(arg1) -- line 204
    arg1.off = TRUE
    celso:say_line("/rice050/")
    wait_for_message()
    celso:say_line("/rice051/")
    wait_for_message()
    celso:say_line("/rice052/")
end
ce1.exit_lines.first_celso_node = { text = "/rima053/" }
ce1.exit_lines.first_celso_node.response = function(arg1) -- line 214
    ce1.node = "exit_dialog"
    celso:say_line("/rice054/")
end
ce1.aborts.first_celso_node = function(arg1) -- line 219
    ce1:clear()
    ce1.node = "exit_dialog"
    ce1.talked_out = 1
    celso:say_line("/rice055/")
    wait_for_message()
    manny:say_line("/rima056/")
    wait_for_message()
    celso:say_line("/rice057/")
end
ce1[999] = "EOD"
ce1.outro = function(arg1) -- line 233
    if celso.facing_manny then
        celso:face_mop()
    end
end
CheckFirstTime("dlg_charlie.lua")
manny.line_189 = function(arg1) -- line 9
    manny:blend(mc_booth_idles_line189, mc_booth_idles_sit_pose, 800)
    sleep_for(800)
end
manny.line246 = function(arg1) -- line 14
    manny:blend(mc_booth_idles_line246, mc_booth_idles_sit_pose, 500)
    sleep_for(500)
end
ch1 = Dialog:create()
ch1.intro = function(arg1) -- line 21
    ch1.node = "first_charlie_node"
    start_script(manny.head_follow_mesh, manny, charlie, 7)
    cn:current_setup(cn_cchms)
    manny:push_costume("mc_booth_idles.cos")
    manny:set_rest_chore(nil)
    manny:ignore_boxes()
    manny:setpos(0.90526, -0.14379, 0.02462)
    manny:setrot(0, 0, 0)
    manny:play_chore(mc_booth_idles_scootch)
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_smoke, 500)
    if charlie.talked_union then
        charlie:say_line("/cncc175/")
        charlie:play_chore(cc_booth_idles_gesture1)
        charlie:wait_for_chore()
        charlie:wait_for_message()
        manny:say_line("/cnma176/")
        manny:wait_for_message()
        charlie:say_line("/cncc177/")
        charlie:stop_chore(cc_booth_idles_gesture1)
        charlie:play_chore(cc_booth_idles_gesture2)
        charlie:wait_for_chore()
        charlie:wait_for_message()
        manny:say_line("/cnma178/")
        manny:wait_for_message()
        manny:say_line("/cnma179/")
        manny:wait_for_message()
    else
        if lm.talked_union or dd.talked_charlie and cn.printer.owner == manny then
            if not ch1[160].said then
                ch1[160].off = FALSE
            else
                ch1[130].off = FALSE
            end
        end
        if not ch1.met then
            ch1.met = TRUE
            manny:say_line("/cnma180/")
            manny:wait_for_message()
            charlie:say_line("/cncc181/")
            charlie:blend(cc_booth_idles_line181, cc_booth_idles_sit_pose, 500)
            charlie:wait_for_chore(cc_booth_idles_line181)
            charlie:wait_for_message()
            charlie:say_line("/cncc182/")
            charlie:blend(cc_booth_idles_line182, cc_booth_idles_line181, 500)
            charlie:wait_for_message()
            charlie:wait_for_chore(cc_booth_idles_line182)
            charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_line182, 500)
        else
            charlie:blend(cc_booth_idles_nod, cc_booth_idles_sit_pose, 500)
            charlie:say_line("/cncc183/")
            charlie:wait_for_message()
            charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_nod, 800)
        end
    end
    manny:wait_for_chore()
    manny:stop_chore(mc_booth_idles_scootch)
    manny:play_chore(mc_booth_idles_sit_pose)
end
ch1.first_charlie_node = function() -- line 88
    if not ch1[100].off then
        ch1[100].off = TRUE
        ch1[110].off = FALSE
    end
end
ch1[100] = { text = "/cnma184/", first_charlie_node = TRUE }
ch1[100].gesture = manny.line_189
ch1[100].response = function(arg1) -- line 98
    ch1[100].off = TRUE
    ch1[110].off = TRUE
    ch1[120].off = FALSE
    manny:say_line("/cnma185/")
    manny:blend(mc_booth_idles_sit_pose, mc_booth_idles_line189, 500)
    manny:wait_for_message()
    manny:wait_for_chore(mc_booth_idles_line190, "mc_booth_idles.cos")
    charlie:say_line("/cncc186/")
    sleep_for(500)
    manny:stop_chore(mc_booth_idles_line189)
    charlie:push_chore(cc_booth_idles_line188)
    charlie:push_chore()
    charlie:push_chore(cc_booth_idles_explain_loop, nil, 800)
    charlie:push_chore()
    charlie:wait_for_message()
    charlie:wait_for_chore(cc_booth_idles_explain_loop)
    charlie:say_line("/cncc187/")
    charlie:blend(cc_booth_idles_smoke_shake, cc_booth_idles_explain_loop, 800)
    charlie:stop_chore(cc_booth_idles_explain_loop)
    charlie:wait_for_message()
    charlie:say_line("/cncc188/")
    charlie:blend(cc_booth_idles_line188, cc_booth_idles_smoke_shake, 500)
    charlie:wait_for_chore(cc_both_idles_line188)
    charlie:blend(cc_booth_idles_sit_pose, cc_both_idles_line188, 800)
    charlie:wait_for_chore()
end
ch1[110] = { text = "/cnma189/", first_charlie_node = TRUE }
ch1[110].off = TRUE
ch1[110].gesture = manny.line_189
ch1[110].response = ch1[100].response
ch1[120] = { text = "/cnma190/", first_charlie_node = TRUE }
ch1[120].off = TRUE
ch1[120].response = function(arg1) -- line 136
    arg1.off = TRUE
    ch1[130].off = FALSE
    cn.printer:get()
    music_state:set_sequence(seqChowchillaBye)
    charlie:say_line("/cncc191/")
    charlie:play_chore(cc_booth_idles_takeout_printer)
    charlie:wait_for_chore()
    tix_printer:set_visibility(TRUE)
    charlie:wait_for_message()
    charlie:say_line("/cncc192/")
    charlie:play_chore(cc_booth_idles_stroke)
    charlie:wait_for_message()
    charlie:say_line("/cncc193/")
    charlie:wait_for_chore()
    charlie:blend(cc_booth_idles_stare, cc_booth_idles_stroke, 800)
    charlie:wait_for_chore(cc_booth_idles_stare)
    sleep_for(2000)
    charlie:blend(cc_booth_idles_gesture1, cc_booth_idles_stare, 500)
    charlie:wait_for_message()
    charlie:say_line("/cncc194/")
    charlie:wait_for_message()
    manny:say_line("/cnma195/")
    manny:stop_chore(mc_booth_idles_sit_pose)
    manny:play_chore(mc_booth_idles_get_printer)
    sleep_for(670)
    tix_printer:set_visibility(FALSE)
    sleep_for(375)
    charlie:blend(cc_booth_idles_bad_grab, cc_booth_idles_stare, 300)
    manny:wait_for_chore()
    manny:stop_chore(mc_booth_idles_get_printer)
    manny:play_chore(mc_booth_idles_sit_pose)
    charlie:wait_for_chore(cc_booth_idles_bad_grab)
    charlie:play_chore_looping(cc_booth_idles_bad_grab)
    manny:wait_for_message()
    charlie:say_line("/cncc196/")
    charlie:wait_for_message()
    manny:wait_for_chore()
    manny:say_line("/cnma197/")
    manny:blend(mc_booth_idles_nod, mc_booth_idles_sit_pose, 300)
    charlie:stop_looping_chore(cc_booth_idles_bad_grab)
    manny:wait_for_message()
    charlie:blend(cc_booth_idles_sad, cc_booth_idles_bad_grab, 500)
    charlie:wait_for_chore()
    manny:wait_for_message()
    charlie:say_line("/cncc198/")
    charlie:wait_for_message()
    manny:blend(mc_booth_idles_sit_pose, mc_booth_idles_nod, 300)
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_sad, 800)
end
ch1[130] = { text = "/cnma199/", first_charlie_node = TRUE }
ch1[130].off = TRUE
ch1[130].gesture = manny.line_189
ch1[130].response = function(arg1) -- line 196
    ch1.node = "counterfeit"
    manny:blend(mc_booth_idles_sit_pose, mc_booth_idles_line189, 500)
    charlie:say_line("/cncc200/")
    charlie:push_chore(cc_booth_idles_line200)
    charlie:push_chore()
    charlie:wait_for_message()
    charlie:say_line("/cncc201/")
    charlie:push_chore(cc_booth_idles_line201)
    charlie:push_chore()
    charlie:push_chore(cc_booth_idles_sit_pose, nil, 500)
    if lm.talked_union or dd.talked_charlie then
        if not ch1[160].said then
            ch1[160].off = FALSE
        end
    end
end
ch1[140] = { text = "/cnma202/", counterfeit = TRUE }
ch1[140].response = function(arg1) -- line 215
    arg1.off = TRUE
    charlie:say_line("/cncc203/")
    charlie:push_chore(cc_booth_idles_smoke_shake)
    charlie:push_chore()
    charlie:push_chore(cc_booth_idles_sit_pose, nil, 500)
    charlie:wait_for_message()
    charlie:say_line("/cncc204/")
    charlie:blend(cc_booth_idles_shake_head, cc_booth_idles_sit_pose, 800)
    charlie:push_chore()
    charlie:wait_for_message()
    charlie:say_line("/cncc205/")
    manny:blend(mc_booth_idles_nod, mc_booth_idles_sit_pose, 300)
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_shake_head, 800)
    charlie:wait_for_message()
    manny:say_line("/cnma206/")
    manny:blend(mc_booth_idles_sit_pose, mc_booth_idles_nod, 300)
    manny:wait_for_message()
    charlie:say_line("/cncc207/")
    charlie:blend(cc_booth_idles_gesture2, cc_booth_idles_sit_pose, 800)
    charlie:wait_for_chore()
    charlie:wait_for_message()
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_gesture2, 800)
end
ch1[150] = { text = "/cnma208/", counterfeit = TRUE }
ch1[150].response = function(arg1) -- line 243
    arg1.off = TRUE
    charlie:say_line("/cncc209/")
    charlie:blend(cc_booth_idles_gesture2, cc_booth_idles_sit_pose, 800)
    charlie:wait_for_message()
    charlie:wait_for_chore(cc_booth_idles_gesture2)
    charlie:say_line("/cncc210/")
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_gesture2, 800)
    charlie:wait_for_message()
end
ch1[160] = { text = "/cnma211/", counterfeit = TRUE, first_charlie_node = TRUE }
ch1[160].off = TRUE
ch1[160].gesture = manny.line_189
ch1[160].response = function(arg1) -- line 258
    arg1.off = TRUE
    arg1.said = TRUE
    ch1.node = "exit_dialog"
    cn.pass:get()
    charlie.talked_union = TRUE
    charlie:say_line("/cncc212/")
    charlie:blend(cc_booth_idles_shake_head, cc_booth_idles_sit_pose, 800)
    charlie:wait_for_message()
    charlie:say_line("/cncc213/")
    charlie:wait_for_chore()
    charlie:blend(cc_booth_idles_gesture1, cc_booth_idles_shake_head, 800)
    charlie:wait_for_message()
    manny:blend(mc_booth_idles_line190, mc_booth_idles_line189, 500)
    manny:say_line("/cnma214/")
    manny:wait_for_message()
    charlie:say_line("/cncc215/")
    charlie:wait_for_message()
    manny:blend(mc_booth_idles_sit_pose, mc_booth_idles_line190, 300)
    charlie:say_line("/cncc216/")
    charlie:wait_for_chore()
    charlie:blend(cc_booth_idles_nod, cc_booth_idles_gesture1, 800)
    charlie:wait_for_message()
    charlie:say_line("/cncc217/")
    charlie:wait_for_chore()
    charlie:blend(cc_booth_idles_stare, cc_booth_idles_nod, 500)
    charlie:wait_for_message()
    manny:say_line("/cnma218/")
    manny:wait_for_message()
    charlie:say_line("/cncc219/")
    charlie:blend(cc_booth_idles_smoke_shake, cc_booth_idles_stare, 800)
    charlie:wait_for_message()
    charlie:say_line("/cncc220/")
    charlie:blend(cc_booth_idles_burst, cc_booth_idles_smoke_shake, 500)
    charlie:wait_for_message()
    charlie:say_line("/cncc221/")
    charlie:blend(cc_booth_idles_line221, cc_booth_idles_burst, 500)
    sleep_for(4500)
    manny:stop_chore(mc_booth_idles_sit_pose)
    manny:play_chore(mc_booth_idles_miss_pass)
    charlie:wait_for_chore()
    charlie:wait_for_message()
    charlie:say_line("/cncc222/")
    charlie:blend(cc_booth_idles_line222, cc_booth_idles_line221, 500)
    manny:play_chore(mc_booth_idles_miss_pass)
    charlie:wait_for_chore()
    charlie:wait_for_message()
    charlie:say_line("/cncc223/")
    charlie:blend(cc_booth_idles_line223, cc_booth_idles_line222, 500)
    charlie:wait_for_chore()
    manny:play_chore(mc_booth_idles_miss_pass)
    charlie:wait_for_message()
    manny:say_line("/cnma224/")
    manny:wait_for_message()
    charlie:say_line("/cncc225/")
    charlie:blend(cc_booth_idles_line225, cc_booth_idles_line223, 500)
    sleep_for(2600)
    manny:play_chore(mc_booth_idles_miss_pass)
    charlie:wait_for_chore()
    charlie:wait_for_message()
    manny:stop_chore(mc_booth_idles_miss_pass)
    manny:play_chore(mc_booth_idles_take_pass)
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_line225, 800)
    manny:wait_for_chore()
    manny:blend(mc_booth_idles_sit_pose, mc_booth_idles_take_pass, 800)
    sleep_for(800)
    cc_246 = FALSE
end
ch1.exit_lines.counterfeit = { text = "/cnma226/", counterfeit = TRUE }
ch1.exit_lines.counterfeit.response = function(arg1) -- line 329
    ch1.node = "first_charlie_node"
    charlie:blend(cc_booth_idles_shake_head, cc_booth_idles_sit_pose, 800)
    charlie:say_line("/cncc227/")
    charlie:wait_for_message()
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_shake_head, 800)
    charlie:wait_for_chore(cc_booth_idles_sit_pose)
end
ch1.aborts.counterfeit = function(arg1) -- line 338
    ch1[130].off = TRUE
    ch1:execute_line(ch1.exit_lines.counterfeit)
end
ch1[180] = { text = "/cnma228/", first_charlie_node = TRUE }
ch1[180].response = function(arg1) -- line 345
    arg1.off = TRUE
    ch1.node = "slot_machines"
    ch1[190].off = FALSE
    ch1[200].off = FALSE
    ch1[210].off = FALSE
    ch1[220].off = FALSE
    charlie:say_line("/cncc229/")
    charlie:blend(cc_booth_idles_smoke_shake, cc_booth_idles_sit_pose, 800)
    charlie:wait_for_message()
    charlie:say_line("/cncc230/")
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_smoke_shake, 800)
    charlie:wait_for_message()
    charlie:say_line("/cncc231/")
    charlie:blend(cc_booth_idles_nod, cc_booth_idles_sit_pose, 500)
    charlie:wait_for_chore(cc_booth_idles_nod)
    charlie:blend(cc_booth_idles_gesture2, cc_booth_idles_nod, 500)
    charlie:wait_for_chore(cc_booth_idles_gesture2)
    charlie:blend(cc_booth_idles_nod, cc_booth_idles_gesture2, 500)
    charlie:wait_for_chore(cc_booth_idles_nod)
    charlie:wait_for_message()
    charlie:say_line("/cncc232/")
    charlie:blend(cc_booth_idles_explain_loop, cc_booth_idles_nod, 500)
    charlie:wait_for_chore(cc_booth_idles_explain_loop)
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_explain_loop, 800)
    charlie:wait_for_message()
end
ch1[190] = { text = "/cnma233/", slot_machines = TRUE }
ch1[190].off = TRUE
ch1[190].response = function(arg1) -- line 375
    arg1.off = TRUE
    ch1.node = "first_charlie_node"
    charlie:blend(cc_booth_idles_gesture2, cc_booth_idles_sit_pose, 800)
    charlie:say_line("/cncc234/")
    charlie:wait_for_message()
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_gesture2, 800)
end
ch1[200] = { text = "/cnma235/", slot_machines = TRUE, first_charlie_node = TRUE }
ch1[200].off = TRUE
ch1[200].response = function(arg1) -- line 386
    arg1.off = TRUE
    ch1.node = "first_charlie_node"
    charlie:blend(cc_booth_idles_nod, cc_booth_idles_sit_pose, 800)
    charlie:say_line("/cncc236/")
    charlie:wait_for_message()
    manny:say_line("/cnma237/")
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_nod, 800)
end
ch1[210] = { text = "/cnma238/", slot_machines = TRUE, first_charlie_node = TRUE }
ch1[210].off = TRUE
ch1[210].response = function(arg1) -- line 398
    arg1.off = TRUE
    ch1.node = "first_charlie_node"
    charlie:say_line("/cncc239/")
    charlie:wait_for_message()
    charlie:say_line("/cncc240/")
end
ch1[220] = { text = "/cnma241/", slot_machines = TRUE, first_charlie_node = TRUE }
ch1[220].off = TRUE
ch1[220].response = function(arg1) -- line 408
    arg1.off = TRUE
    ch1.node = "first_charlie_node"
    charlie:say_line("/cncc243/")
    charlie:blend(cc_booth_idles_line188, cc_booth_idles_sit_pose, 500)
    charlie:wait_for_message()
    charlie:say_line("/cncc244/")
    charlie:blend(cc_booth_idles_line244, cc_booth_idles_line188, 800)
    charlie:wait_for_chore(cc_booth_idles_line244)
    charlie:blend(cc_booth_idles_burst, cc_booth_idles_line244, 500)
    charlie:wait_for_message()
    manny:say_line("/cnma245/")
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_burst, 800)
end
ch1.exit_lines.first_charlie_node = { text = "/cnma246/" }
ch1.exit_lines.first_charlie_node.gesture = manny.line246
ch1.exit_lines.first_charlie_node.response = function(arg1) -- line 425
    ch1.node = "exit_dialog"
    charlie:blend(cc_booth_idles_gesture1, cc_booth_idles_sit_pose, 800)
    if charlie.talked_union then
        charlie:say_line("/cncc247/")
    else
        charlie:say_line("/cncc248/")
    end
    charlie:wait_for_message()
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_gesture1, 800)
    cc_246 = TRUE
end
ch1[230] = { text = "/cnma250/", first_charlie_node = TRUE }
ch1[230].response = function(arg1) -- line 439
    arg1.off = TRUE
    charlie:blend(cc_booth_idles_smoke_shake, cc_booth_idles_sit_pose, 800)
    charlie:say_line("/cncc251/")
    charlie:wait_for_message()
    charlie:blend(cc_booth_idles_nod, cc_booth_idles_smoke_shake, 800)
    charlie:say_line("/cncc252/")
    charlie:wait_for_message()
    charlie:blend(cc_booth_idles_sit_pose, cc_booth_idles_nod, 800)
end
ch1.aborts.first_charlie_node = function(arg1) -- line 452
    cn.charlie_obj.talked_out = TRUE
    ch1:execute_line(ch1.exit_lines.first_charlie_node)
end
ch1.aborts.slot_machines = function(arg1) -- line 457
    ch1:clear()
    ch1.node = "first_charlie_node"
end
ch1.outro = function(arg1) -- line 463
    stop_script(manny.head_follow_mesh)
    manny:head_look_at(nil)
    manny:print_costumes()
    if cc_246 then
        manny:blend(mc_booth_idles_outro, mc_booth_idles_line246, 800)
        manny:print_costumes()
    else
        manny:stop_chore(mc_booth_idles_sit_pose)
        manny:play_chore(mc_booth_idles_outro)
        manny:print_costumes()
    end
    manny:wait_for_chore(mc_booth_idles_outro, "mc_booth_idles.cos")
    manny:print_costumes()
    manny:pop_costume()
    manny:set_rest_chore(mc_rest, "mc.cos")
    manny:setpos(0.928359, -0.266837, 0)
    manny:setrot(0, 378.057, 0)
    manny:follow_boxes()
    cn:current_setup(cn_rulws)
    start_script(cn.charlie_idles)
end
CheckFirstTime("dlg_chepito2.lua")
cp2 = Dialog:create()
cp2.intro = function(arg1) -- line 11
    stop_script(chepito.talk_randomly_from_weighted_table)
    stop_script(mn.chepito_hums)
    manny:head_forward_gesture()
    manny:say_line("/mnma001/")
    sleep_for(500)
    start_script(mn.chepito_stop_idle, mn)
    if chepito.happy then
        cp2[120].off = TRUE
        cp2[130].off = FALSE
        cp2[280].off = TRUE
        chepito:say_line("/mnch002/", { background = TRUE })
        chepito:wait_for_message()
        chepito:say_line("/mnch003/")
        mn:chepito_face_manny()
        if not cp2.met then
            cp2.met = TRUE
            chepito:say_line("/mnch005/")
            chepito:wait_for_message()
            chepito:say_line("/mnch006/")
            chepito:wait_for_message()
            chepito:say_line("/mnch007/")
        end
    else
        manny:wait_for_message()
        chepito:say_line("/mnch004/")
        chepito:wait_for_message()
        mn:chepito_face_manny()
        if not cp2.met then
            cp2.met = TRUE
            chepito:say_line("/mnch005/")
            chepito:wait_for_message()
            chepito:say_line("/mnch006/")
            chepito:wait_for_message()
            chepito:say_line("/mnch007/")
        else
            chepito:say_line("/mnch008/")
        end
    end
end
cp2[100] = { text = "/mnma009/", n1 = TRUE, gesture = manny.shrug_gesture }
cp2[100].setup = function(arg1) -- line 57
    arg1.off = TRUE
end
cp2[100].response = function(arg1) -- line 60
    arg1.off = TRUE
    chepito:say_line("/mnch010/")
end
cp2[110] = { text = "/mnma011/", n1 = TRUE, gesture = manny.hand_gesture }
cp2[110].response = function(arg1) -- line 66
    arg1.off = TRUE
    mn:chepito_face_manny()
    chepito:say_line("/mnch012/")
    chepito:wait_for_message()
    start_script(mn.chepito_stop_face_manny, mn, TRUE)
    chepito:say_line("/mnch013/")
    chepito:wait_for_message()
    chepito:say_line("/mnch014/")
    chepito:wait_for_message()
    chepito:say_line("/mnch015/")
end
cp2[120] = { text = "/mnma016/", n1 = TRUE, gesture = manny.point_gesture }
cp2[120].response = function(arg1) -- line 80
    arg1.off = TRUE
    cp2[130].off = FALSE
    mn:chepito_face_manny()
    chepito:say_line("/mnch017/")
    chepito:wait_for_message()
    chepito:say_line("/mnch018/")
    chepito:wait_for_message()
    chepito:say_line("/mnch019/")
    chepito:wait_for_message()
    chepito:say_line("/mnch020/")
    chepito:wait_for_message()
    chepito:say_line("/mnch021/")
end
cp2[130] = { text = "/mnma022/", n1 = TRUE, gesture = manny.tilt_head_gesture }
cp2[130].off = TRUE
cp2[130].response = function(arg1) -- line 102
    arg1.off = TRUE
    cp2[140].off = FALSE
    cp2[160].off = FALSE
    mn:chepito_face_manny()
    chepito:say_line("/mnch023/")
    chepito:wait_for_message()
    chepito:say_line("/mnch024/")
    chepito:wait_for_message()
    chepito:say_line("/mnch025/")
end
cp2[140] = { text = "/mnma026/", n1 = TRUE, gesture = manny.head_forward_gesture }
cp2[140].off = TRUE
cp2[140].response = function(arg1) -- line 116
    arg1.off = TRUE
    cp2[150].off = FALSE
    mn:chepito_face_manny()
    chepito:say_line("/mnch027/")
    chepito:wait_for_message()
    chepito:say_line("/mnch028/")
    chepito:wait_for_message()
    chepito:say_line("/mnch029/")
end
cp2[150] = { text = "/mnma030/", n1 = TRUE, gesture = manny.hand_gesture }
cp2[150].off = TRUE
cp2[150].response = function(arg1) -- line 129
    arg1.off = TRUE
    mn:chepito_face_manny()
    chepito:say_line("/mnch031/")
    chepito:wait_for_message()
    manny:say_line("/mnma032/")
    manny:wait_for_message()
    chepito:say_line("/mnch033/")
end
cp2[160] = { text = "/mnma034/", n1 = TRUE }
cp2[160].off = TRUE
cp2[160].response = function(arg1) -- line 141
    arg1.off = TRUE
    cp2.node = "desire"
    mn:chepito_face_manny()
    chepito:say_line("/mnch035/")
    chepito:wait_for_message()
    chepito:say_line("/mnch036/")
end
cp2[170] = { text = "/mnma037/", desire = TRUE }
cp2[170].response = function(arg1) -- line 151
    arg1.off = TRUE
    mn:chepito_face_manny()
    chepito:say_line("/mnch038/")
    chepito:wait_for_message()
    chepito:say_line("/mnch039/")
end
cp2[180] = { text = "/mnma040/", desire = TRUE }
cp2[180].response = function(arg1) -- line 160
    arg1.off = TRUE
    chepito.talked_gun = TRUE
    cp2.node = "trade"
    mn:chepito_face_manny()
    chepito:say_line("/mnch041/")
    chepito:wait_for_message()
    chepito:say_line("/mnch042/")
end
cp2[190] = { text = "/mnma043/", trade = TRUE }
cp2[190].response = function(arg1) -- line 171
    arg1.off = TRUE
    cp2.node = "exit_dialog"
    mn:chepito_face_manny()
    chepito:say_line("/mnch044/")
    chepito:wait_for_message()
    manny:say_line("/mnma045/")
    cp2:come_again()
end
cp2[200] = { text = "/mnma046/", trade = TRUE }
cp2[200].response = function(arg1) -- line 182
    arg1.off = TRUE
    cp2.node = "exit_dialog"
    mn:chepito_face_manny()
    chepito:say_line("/mnch047/")
    chepito:wait_for_message()
    chepito:say_line("/mnch048/")
    chepito:wait_for_message()
    manny:say_line("/mnma049/")
    manny:wait_for_message()
    chepito:say_line("/mnch050/")
    chepito:wait_for_message()
    manny:say_line("/mnma051/")
    cp2:come_again()
end
cp2[210] = { text = "/mnma052/", trade = TRUE, gesture = manny.tilt_head_gesture }
cp2[210].response = function(arg1) -- line 199
    arg1.off = TRUE
    cp2.node = "exit_dialog"
    mn:chepito_face_manny()
    chepito:say_line("/mnch053/")
    chepito:wait_for_message()
    cp2:come_again()
end
cp2.come_again = function(arg1) -- line 209
    cp2.node = "exit_dialog"
    wait_for_message()
    mn:chepito_face_manny()
    chepito:say_line("/mnch055/")
    chepito:wait_for_message()
    chepito:say_line("/mnch056/")
    start_script(mn.chepito_stop_face_manny, mn)
end
cp2[220] = { text = "/mnma057/", desire = TRUE, gesture = manny.head_forward_gesture }
cp2[220].response = function(arg1) -- line 220
    arg1.off = TRUE
    mn:chepito_face_manny()
    chepito:say_line("/mnch058/")
    chepito:wait_for_message()
    chepito:say_line("/mnch059/")
end
cp2[230] = { text = "/mnma060/", desire = TRUE }
cp2[230].response = function(arg1) -- line 229
    arg1.off = TRUE
    mn:chepito_face_manny()
    chepito:say_line("/mnch061/")
    chepito:wait_for_message()
    chepito:say_line("/mnch062/")
end
cp2[240] = { text = "/mnma063/", desire = TRUE }
cp2[240].response = function(arg1) -- line 238
    arg1.off = TRUE
    mn:chepito_face_manny()
    chepito:say_line("/mnch064/")
end
cp2[250] = { text = "/mnma065/", desire = TRUE, gesture = manny.shrug_gesture }
cp2[250].response = function(arg1) -- line 245
    arg1.off = TRUE
    mn:chepito_face_manny()
    chepito:say_line("/mnch066/")
    chepito:wait_for_message()
    manny:twist_head_gesture()
    manny:say_line("/mnma067/")
    manny:wait_for_message()
    chepito:say_line("/mnch068/")
    chepito:wait_for_message()
    chepito:say_line("/mnch069/")
    chepito:wait_for_message()
    chepito:say_line("/mnch070/")
    chepito:wait_for_message()
    chepito:say_line("/mnch071/")
end
cp2[260] = { text = "/mnma072/", desire = TRUE }
cp2[260].response = function(arg1) -- line 263
    arg1.off = TRUE
    mn:chepito_face_manny()
    chepito:say_line("/mnch073/")
    chepito:wait_for_message()
    chepito:say_line("/mnch074/")
    chepito:wait_for_message()
    chepito:say_line("/mnch075/")
end
cp2[270] = { text = "/mnma076/", desire = TRUE }
cp2[270].response = function(arg1) -- line 274
    cp2.node = "n1"
    mn:chepito_face_manny()
    chepito:say_line("/mnch077/")
end
cp2.aborts.desire = function(arg1) -- line 282
    cp2.node = "n1"
    cp2:clear()
    mn:chepito_face_manny()
    manny:say_line("/mnma079/")
    manny:wait_for_message()
    chepito:say_line("/mnch080/")
    chepito:wait_for_message()
    manny:say_line("/mnma081/")
    manny:wait_for_message()
    chepito:say_line("/mnch082/")
end
cp2[280] = { text = "/mnma083/", n1 = TRUE }
cp2[280].response = function(arg1) -- line 297
    arg1.off = TRUE
    mn:chepito_face_manny()
    chepito:say_line("/mnch084/")
    chepito:wait_for_message()
    chepito:say_line("/mnch085/")
    chepito:play_chore(chepito_drill_mn2drill, "chepito_drill.cos")
    chepito:wait_for_chore(chepito_drill_mn2drill, "chepito_drill.cos")
    start_sfx("chisel_c.IMU", IM_MED_PRIORITY, chepito.chisel_volume)
    chepito:play_chore_looping(chepito_drill_drill, "chepito_drill.cos")
    chepito.facing_manny = FALSE
    chepito:wait_for_message()
    sleep_for(1000)
    manny:shrug_gesture()
    manny:say_line("/mnma086/")
end
cp2.exit_lines.n1 = { text = "/mnma087/" }
cp2.exit_lines.n1.response = function(arg1) -- line 315
    cp2.node = "exit_dialog"
    start_script(mn.chepito_stop_face_manny, mn)
    chepito:say_line("/mnch088/")
end
cp2.aborts.n1 = function(arg1) -- line 321
    cp2:clear()
    cp2.node = "exit_dialog"
    start_script(mn.chepito_stop_face_manny, mn)
    chepito:say_line("/mnch089/")
    wait_for_message()
    manny:hand_gesture()
    manny:say_line("/mnma090/")
    wait_for_message()
end
cp2.outro = function(arg1) -- line 332
    single_start_script(mn.chepito_stop_face_manny, mn)
end
CheckFirstTime("dlg_chepito.lua")
cp1 = Dialog:create()
cp1.intro = function(arg1) -- line 12
    cp1.node = "first_chepito_node"
    stop_script(su.chepito_sing)
    local local1 = start_script(su.chepito_to_manny)
    manny:wait_for_message()
    if not chepito.met then
        chepito.met = TRUE
        manny:wait_for_message()
        chepito:say_line("/such001/")
        chepito:wait_for_message()
        chepito:say_line("/such002/")
        chepito:blend(chepito_exclaim, nil, 500)
        chepito:wait_for_message()
        chepito:say_line("/such003/")
        chepito:blend(chepito_2base, chepito_exclaim, 500)
        chepito:wait_for_message()
        chepito:say_line("/such004/")
    elseif chepito.knows_manny then
        chepito:say_line("/such005/")
    else
        chepito:say_line("/such006/")
        chepito:wait_for_message()
        chepito:say_line("/such007/")
    end
    wait_for_script(local1)
    chepito.knows_manny = TRUE
end
cp1[100] = { text = "/suma008/", first_chepito_node = TRUE }
cp1[100].response = function(arg1) -- line 43
    arg1.off = TRUE
    cp1[110].off = FALSE
    cp1[120].off = FALSE
    cp1[130].off = FALSE
    cp1[150].off = FALSE
    chepito:say_line("/such009/")
    chepito:blend(chepito_2conv, nil, 500)
    chepito:wait_for_chore()
    chepito:blend(chepito_2base, chepito_2conv, 500)
    chepito:wait_for_message()
end
cp1[110] = { text = "/suma010/", first_chepito_node = TRUE }
cp1[110].off = TRUE
cp1[110].response = function(arg1) -- line 58
    arg1.off = TRUE
    chepito:say_line("/such011/")
    chepito:blend(chepito_exclaim, nil, 500)
    chepito:wait_for_message()
    chepito:say_line("/such012/")
    chepito:blend(chepito_2base, chepito_exclaim, 500)
end
cp1[120] = { text = "/suma013/", first_chepito_node = TRUE }
cp1[120].off = TRUE
cp1[120].response = function(arg1) -- line 69
    arg1.off = TRUE
    chepito:blend(chepito_2conv, nil, 500)
    chepito:say_line("/such014/")
    chepito:wait_for_message()
    manny:say_line("/suma015/")
    manny:wait_for_message()
    chepito:say_line("/such016/")
    chepito:blend(chepito_2base, chepito_2conv, 500)
    chepito:wait_for_message()
    local local1 = start_script(chepito_leads)
    start_script(su.chepito_sing, su, TRUE)
    wait_for_script(local1)
    glottis:blend(glottis_sailor_home_pose, nil, 800, "glottis_sailor.cos")
    manny:say_line("/suma017/")
    manny:wait_for_message()
    chepito:say_line("/such018/")
    chepito:blend(chepito_2conv, nil, 500)
    chepito:wait_for_message()
    chepito:say_line("/such019/")
    chepito:blend(chepito_2base, chepito_2conv, 500)
    chepito:wait_for_message()
    manny:say_line("/suma020/")
    manny:wait_for_message()
    chepito:say_line("/such021/")
    chepito:wait_for_message()
end
cp1[130] = { text = "/suma022/", first_chepito_node = TRUE }
cp1[130].off = TRUE
cp1[130].response = function(arg1) -- line 101
    arg1.off = TRUE
    cp1[140].off = FALSE
    chepito:say_line("/such023/")
    chepito:wait_for_message()
    chepito:say_line("/such024/")
    chepito:blend(chepito_2conv, nil, 500)
    chepito:wait_for_message()
    chepito:say_line("/such025/")
    chepito:wait_for_message()
    chepito:say_line("/such026/")
    chepito:blend(chepito_2base, chepito_2conv, 500)
    chepito:wait_for_message()
    manny:say_line("/suma027/")
    manny:wait_for_message()
    chepito:say_line("/such028/")
    chepito:blend(chepito_exclaim, nil, 500)
    chepito:wait_for_message()
    chepito:say_line("/such029/")
    chepito:blend(chepito_2base, chepito_exclaim, 500)
end
cp1[140] = { text = "/suma030/", first_chepito_node = TRUE }
cp1[140].off = TRUE
cp1[140].response = function(arg1) -- line 125
    arg1.off = TRUE
    chepito:say_line("/such031/")
    chepito:blend(chepito_exclaim, nil, 500)
    chepito:wait_for_message()
    chepito:say_line("/such032/")
    chepito:blend(chepito_2base, chepito_exclaim, 500)
end
cp1[150] = { text = "/suma033/", first_chepito_node = TRUE }
cp1[150].off = TRUE
cp1[150].response = function(arg1) -- line 136
    arg1.off = TRUE
    chepito:say_line("/such034/")
    chepito:wait_for_message()
    chepito:say_line("/such035/")
end
cp1[160] = { text = "/suma036/", first_chepito_node = TRUE }
cp1[160].response = function(arg1) -- line 144
    arg1.off = TRUE
    cp1[170].off = FALSE
    chepito:say_line("/such037/")
end
cp1[170] = { text = "/suma038/", first_chepito_node = TRUE }
cp1[170].off = TRUE
cp1[170].response = function(arg1) -- line 152
    arg1.off = TRUE
    cp1[180].off = FALSE
    cp1[210].off = FALSE
    chepito:say_line("/such039/")
    chepito:blend(chepito_2conv, nil, 500)
    chepito:wait_for_message()
    chepito:say_line("/such040/")
    chepito:blend(chepito_2base, chepito_2conv, 500)
    chepito:wait_for_message()
    manny:say_line("/suma041/")
end
cp1[180] = { text = "/suma042/", first_chepito_node = TRUE }
cp1[180].off = TRUE
cp1[180].response = function(arg1) -- line 167
    arg1.off = TRUE
    chepito:say_line("/such043/")
    chepito:blend(chepito_2conv, nil, 500)
    chepito:wait_for_message()
    chepito:say_line("/such044/")
    chepito:blend(chepito_2base, chepito_2conv, 500)
    chepito:wait_for_message()
    manny:say_line("/hama102/")
    manny:wait_for_message()
    chepito:say_line("/such045/")
end
cp1[190] = { text = "/suma046/", first_chepito_node = TRUE }
cp1[190].response = function(arg1) -- line 182
    arg1.off = TRUE
    chepito:say_line("/such047/")
    chepito:blend(chepito_2conv, nil, 500)
    chepito:wait_for_message()
    chepito:say_line("/such048/")
    chepito:wait_for_message()
    chepito:say_line("/such049/")
    chepito:blend(chepito_exclaim, chepito_2conv, 500)
    chepito:wait_for_message()
    chepito:blend(chepito_2base, chepito_exclaim, 500)
    chepito:say_line("/such050/")
end
cp1[200] = { text = "/suma051/", first_chepito_node = TRUE }
cp1[200].response = function(arg1) -- line 197
    arg1.off = TRUE
    cp1[250].off = FALSE
    chepito:say_line("/such052/")
    chepito:wait_for_message()
    chepito:say_line("/such053/")
end
cp1[210] = { text = "/suma054/", first_chepito_node = TRUE }
cp1[210].off = TRUE
cp1[210].response = function(arg1) -- line 208
    arg1.off = TRUE
    cp1[220].off = FALSE
    chepito:say_line("/such055/")
    chepito:blend(chepito_2conv, nil, 500)
    chepito:wait_for_message()
    manny:say_line("/suma056/")
    manny:wait_for_message()
    chepito:say_line("/such057/")
    chepito:blend(chepito_2base, chepito_2conv, 500)
end
cp1[220] = { text = "/suma058/", first_chepito_node = TRUE }
cp1[220].off = TRUE
cp1[220].response = function(arg1) -- line 222
    arg1.off = TRUE
    cp1[230].off = FALSE
    glottis:say_line("/sugl059/")
    glottis:wait_for_message()
    chepito:say_line("/such060/")
    chepito:wait_for_message()
    chepito:say_line("/such061/")
end
cp1[230] = { text = "/suma062/", first_chepito_node = TRUE }
cp1[230].off = TRUE
cp1[230].response = function(arg1) -- line 234
    arg1.off = TRUE
    cp1[240].off = FALSE
    cp1.just_talked_boats = TRUE
    chepito:say_line("/such063/")
    chepito:blend(chepito_2conv, nil, 500)
    chepito:wait_for_message()
    chepito:say_line("/such064/")
    chepito:blend(chepito_exclaim, chepito_2conv, 500)
    chepito:wait_for_message()
    chepito:say_line("/such065/")
    chepito:blend(chepito_2base, chepito_exclaim, 500)
end
cp1[240] = { text = "/suma066/", first_chepito_node = TRUE }
cp1[240].off = TRUE
cp1[240].response = function(arg1) -- line 250
    arg1.off = TRUE
    if not cp1.just_talked_boats then
        chepito:say_line("/such067/")
        chepito:wait_for_message()
        manny:say_line("/suma068/")
        manny:wait_for_message()
        chepito:say_line("/such069/")
        chepito:wait_for_message()
        chepito:say_line("/such070/")
        chepito:wait_for_message()
    end
    chepito:say_line("/such071/")
    chepito:wait_for_message()
    chepito:say_line("/such072/")
    chepito:blend(chepito_2conv, nil, 500)
    chepito:wait_for_message()
    chepito:say_line("/such073/")
    chepito:blend(chepito_exclaim, chepito_2conv, 500)
    chepito:wait_for_message()
    chepito:say_line("/such074/")
    chepito:blend(chepito_2base, chepito_exclaim, 500)
end
cp1[250] = { text = "/suma075/", first_chepito_node = TRUE }
cp1[250].off = TRUE
cp1[250].response = function(arg1) -- line 277
    arg1.off = TRUE
    chepito:say_line("/such076/")
    chepito:wait_for_message()
    chepito:say_line("/such077/")
    chepito:wait_for_message()
    chepito:say_line("/such078/")
    chepito:wait_for_message()
    manny:say_line("/suma079/")
    manny:wait_for_message()
    chepito:say_line("/such080/")
end
cp1[260] = { text = "/suma081/", first_chepito_node = TRUE }
cp1[260].response = function(arg1) -- line 291
    arg1.off = TRUE
    chepito:say_line("/such082/")
    chepito:wait_for_message()
    chepito:say_line("/such083/")
end
cp1.exit_lines.first_chepito_node = { text = "/suma084/" }
cp1.exit_lines.first_chepito_node.response = function(arg1) -- line 300
    cp1.node = "exit_dialog"
    chepito:say_line("/such085/")
end
cp1.aborts.first_chepito_node = function(arg1) -- line 305
    cp1:clear()
    cp1:execute_line(cp1.exit_lines.first_chepito_node)
end
cp1.outro = function(arg1) -- line 310
    local local1 = chepito:getrot()
    cp1.just_talked_boats = FALSE
    chepito:head_look_at(nil)
    if not cp1.talked_monsters then
        cp1.talked_monsters = TRUE
        manny:say_line("/suma086/")
        chepito:stop_chore(chepito_2base)
        FadeOutChore(chepito.hActor, "chepito.cos", chepito_base, 250)
        manny:wait_for_message()
        chepito:say_line("/such087/")
        chepito:setrot(0, 107, 0, TRUE)
        chepito:wait_for_message()
        chepito:play_chore(chepito_shines)
        chepito:wait_for_chore()
        RunFullscreenMovie("sea_monsters.snm")
        stop_script(su.glottis_follow_manny)
        glottis:head_look_at(nil)
        manny:push_costume("mn_sea_scare.cos")
        glottis:push_costume("gs_sea_scare.cos")
        glottis:play_chore(0)
        manny:play_chore(0)
        chepito:stop_chore(chepito_shines)
        chepito:play_chore(chepito_shine2base)
        chepito:setrot(0, local1.y, 0, TRUE)
        chepito:wait_for_chore()
        chepito:stop_chore(chepito_shine2base)
        chepito:say_line("/such088/")
        chepito:wait_for_message()
        chepito:say_line("/such089/")
        single_start_script(su.glottis_follow_manny)
        manny:wait_for_chore()
        glottis:wait_for_chore()
        glottis:pop_costume()
        manny:pop_costume()
    end
    chepito.just_talked = TRUE
    single_start_script(su.dangle_bait)
end
chepito_leads = function() -- line 352
    local local1 = { }
    local local2 = { }
    local local3 = { }
    local local4 = { }
    cpos = chepito:getpos()
    crot = chepito:getrot()
    chepito:set_collision_mode(COLLISION_OFF)
    glottis:set_collision_mode(COLLISION_OFF)
    manny:set_collision_mode(COLLISION_OFF)
    mpos = manny:getpos()
    gpos = glottis:getpos()
    mrot = manny:getrot()
    grot = glottis:getrot()
    break_here()
    manny:set_run(FALSE)
    glottis:set_walk_rate(0.40000001)
    single_start_script(chepito_lead_walk)
    su.chepito_leading = TRUE
    glottis:ignore_boxes()
    manny:ignore_boxes()
    single_start_script(su.manny_follow_chepito)
    single_start_script(su.glottis_follow_chepito)
    while su.chepito_leading do
        break_here()
    end
    stop_script(su.manny_follow_chepito)
    stop_script(su.glottis_follow_chepito)
    MakeSectorActive("uber_sektor", TRUE)
    glottis:follow_boxes()
    manny:follow_boxes()
    start_script(chepito.walkto, chepito, cpos.x, cpos.y, cpos.z, crot.x, crot.y, crot.z)
    start_script(manny.walkto, manny, mpos.x, mpos.y, mpos.z, mrot.x, mrot.y, mrot.z)
    start_script(glottis.walkto, glottis, gpos.x, gpos.y, gpos.z, grot.x, grot.y, grot.z)
    chepito:set_collision_mode(COLLISION_SPHERE)
    glottis:set_collision_mode(COLLISION_SPHERE)
    manny:set_collision_mode(COLLISION_SPHERE)
    manny:wait_for_actor()
    chepito:wait_for_actor()
    glottis:wait_for_actor()
    MakeSectorActive("uber_sektor", FALSE)
    manny:set_walk_rate(MANNY_WALK_RATE)
    chepito:set_collision_mode(COLLISION_SPHERE)
    glottis:set_collision_mode(COLLISION_SPHERE)
    manny:set_collision_mode(COLLISION_SPHERE)
end
skip_orbiting_with_chepito = function() -- line 407
    kill_override()
    stop_script(su.manny_follow_chepito)
    stop_script(su.glottis_follow_chepito)
    glottis:follow_boxes()
    manny:follow_boxes()
    chepito:set_collision_mode(COLLISION_SPHERE)
    glottis:set_collision_mode(COLLISION_SPHERE)
    manny:set_collision_mode(COLLISION_SPHERE)
    chepito:setpos(cpos.x, cpos.y, cpos.z)
    chepito:setrot(crot.x, crot.y, crot.z)
    manny:setpos(mpos.x, mpos.y, mpos.z)
    manny:setrot(mrot.x, mrot.y, mrot.z)
    glottis:setpos(gpos.x, gpos.y, gpos.z)
    glottis:setrot(grot.x, grot.y, grot.z)
end
su.glottis_follow_chepito = function() -- line 427
    local local1 = glottis:getpos()
    local local2 = { }
    local local3, local4
    local local5 = { x = 0, y = -1, z = 0 }
    break_here()
    while 1 do
        glottis:head_look_at_manny()
        while proximity(glottis, chepito) > 1.5 do
            repeat
                glottis:head_look_at(chepito)
                glottis:stop_chore(glottis_home_pose, "glottis_sailor.cos")
                local2 = chepito:getrot()
                local4 = RotateVector(local5, local2)
                local3 = chepito:getpos()
                local4.x = local4.x + local3.x
                local4.y = local4.y + local3.y
                local4.z = local4.z + local3.z
                TurnActorTo(glottis.hActor, local4.x, local4.y, local4.z)
                glottis:walk_forward()
                break_here()
                local1 = glottis:getpos()
            until proximity(glottis, chepito) < 1.1
        end
        break_here()
        glottis:play_chore(glottis_home_pose, "glottis_sailor.cos")
    end
end
su.manny_follow_chepito = function() -- line 459
    local local1 = manny:getpos()
    local local2 = { }
    local local3, local4
    local local5 = { x = 0, y = -0.30000001, z = 0 }
    break_here()
    while 1 do
        manny:head_look_at(chepito)
        while proximity(chepito, manny) > 0.60000002 do
            repeat
                manny:head_look_at(chepito)
                local2 = chepito:getrot()
                local4 = RotateVector(local5, local2)
                local3 = chepito:getpos()
                local4.x = local4.x + local3.x
                local4.y = local4.y + local3.y
                local4.z = local4.z + local3.z
                TurnActorTo(manny.hActor, local4.x, local4.y, local4.z)
                manny:walk_forward()
                break_here()
                local1 = manny:getpos()
            until proximity(chepito, manny) < 0.34999999
        end
        break_here()
    end
end
chepito_lead_walk = function() -- line 490
    chepito:stop_chore()
    chepito:head_look_at(nil)
    chepito:walkto(3.7, -5.47906, 0)
    chepito:wait_for_actor()
    sleep_for(5000)
    chepito:setpos(7.87, 3.7, 0)
    manny:setpos(7.87, 3.7, 0)
    glottis:setpos(7.87, 3.7, 0)
    chepito:walkto(3.07, 9.35, 0)
    chepito:wait_for_actor()
    chepito:setpos(-9.8, 39, 3)
    manny:setpos(-9.8, 39, 3)
    glottis:setpos(-9.8, 39, 3)
    chepito:walkto(-26, 38, 3)
    chepito:wait_for_actor()
    manny:setpos({ x = -2.66886, y = -5.35335, z = 0 })
    glottis:setpos({ x = -2.66886, y = -5.35335, z = 0 })
    chepito:setpos({ x = -2.66886, y = -5.35335, z = 0 })
    chepito:setrot(0, 448.375, 0)
    su.chepito_leading = FALSE
end
CheckFirstTime("dlg_clown.lua")
cl1 = Dialog:create()
cl1.intro = function(arg1) -- line 11
    cl1.node = "first_clown_node"
    if DEMO then
        cl1[104].off = TRUE
    end
    if not cl1.been_there then
        cl1.been_there = TRUE
        manny:hand_gesture()
        manny:say_line("/fema001/")
        wait_for_message()
        clown:head_look_at(manny)
        clown:say_line("/fecl002/")
        wait_for_message()
        clown:head_look_at(clown.groundPoint)
        clown:say_line("/fecl003/")
    end
end
cl1.outro = function(arg1) -- line 29
    if not clown.idling then
        while find_script(clown.stop_idle) do
            break_here()
        end
        start_script(clown.idle, clown)
    end
end
cl1[50] = { text = "/fema004/", first_clown_node = TRUE, gesture = manny.shrug_gesture }
cl1[50].response = function(arg1) -- line 40
    arg1.off = TRUE
    cl1[60].off = FALSE
    clown:say_line("/fecl005/")
end
cl1[60] = { text = "/fema006/", first_clown_node = TRUE, gesture = manny.tilt_head_gesture }
cl1[60].off = TRUE
cl1[60].response = function(arg1) -- line 48
    arg1.off = TRUE
    cl1[63].off = FALSE
    start_script(clown.stop_idle, clown, TRUE)
    clown:say_line("/fecl007/")
    wait_for_script(clown.stop_idle)
    clown:stop_chore(balloonman_stand, "balloonman.cos")
    clown:push_costume("balloon_loop.cos")
    clown:play_chore(balloon_loop_twist_this, "balloon_loop.cos")
    clown:wait_for_chore(balloon_loop_twist_this)
    clown:pop_costume()
    clown:play_chore_looping(balloonman_stand, "balloonman.cos")
    start_script(clown.idle, clown)
end
cl1[63] = { text = "/fema008/", first_clown_node = TRUE, gesture = manny.point_gesture }
cl1[63].off = TRUE
cl1[63].response = function(arg1) -- line 65
    arg1.off = TRUE
    cl1[64].off = FALSE
    cl1.node = "twist_node"
    cl1:reset_twist_node()
    start_script(clown.stop_idle, clown, TRUE)
    clown:head_look_at(manny)
    clown:say_line("/fecl009/")
    clown:wait_for_message()
    clown:say_line("/fecl010/")
    wait_for_message()
    clown:say_line("/fecl012/")
    clown:play_chore(balloonman_point, "balloonman.cos")
    clown:wait_for_chore()
    clown:play_chore(balloonman_point_loop, "balloonman.cos")
    clown:wait_for_chore()
    clown:play_chore(balloonman_point_loop, "balloonman.cos")
    clown:wait_for_chore()
    clown:play_chore(balloonman_back_to_idle, "balloonman.cos")
    clown:wait_for_chore()
    wait_for_message()
    wait_for_script(clown.stop_idle)
    clown:wait_for_chore(balloonman_back_to_idle)
    clown:stop_chore(balloonman_back_to_idle)
end
cl1[64] = { text = "/fema013/", first_clown_node = TRUE, gesture = manny.tilt_head_gesture }
cl1[64].off = TRUE
cl1[64].response = function(arg1) -- line 96
    cl1.node = "twist_node"
    cl1:reset_twist_node()
    clown:head_look_at(manny)
    clown:say_line("/fecl014/")
    start_script(clown.stop_idle, clown)
end
cl1[70] = { text = "/fema015/", first_clown_node = TRUE, gesture = manny.hand_gesture }
cl1[70].response = function(arg1) -- line 106
    arg1.off = TRUE
    clown:say_line("/fecl016/")
end
cl1[80] = { text = "/fema017/", first_clown_node = TRUE }
cl1[80].response = function(arg1) -- line 112
    arg1.off = TRUE
    clown:say_line("/fecl018/")
    wait_for_message()
    clown:say_line("/fecl019/")
    if not clown.is_standing then
        start_script(clown.stop_idle, clown)
    end
    wait_for_message()
    manny:twist_head_gesture()
    manny:say_line("/fema020/")
    wait_for_message()
    wait_for_script(clown.stop_idle)
    clown:say_line("/fecl021/")
    clown:play_chore(balloonman_point, "balloonman.cos")
    clown:wait_for_chore()
    clown:play_chore(balloonman_point_loop, "balloonman.cos")
    clown:wait_for_chore()
    clown:play_chore(balloonman_point_loop, "balloonman.cos")
    clown:wait_for_chore()
    clown:play_chore(balloonman_back_to_idle, "balloonman.cos")
    clown:wait_for_chore()
    clown:wait_for_message()
    clown:wait_for_chore(balloonman_back_to_idle)
    clown:stop_chore(balloonman_back_to_idle)
    start_script(clown.idle, clown)
end
cl1[90] = { text = "/fema022/", first_clown_node = TRUE, gesture = manny.hand_gesture }
cl1[90].response = function(arg1) -- line 141
    arg1.off = TRUE
    clown:say_line("/fecl023/")
    local local1 = start_script(clown.stop_idle, clown)
    wait_for_message()
    manny:shrug_gesture()
    manny:say_line("/fema024/")
    wait_for_message()
    clown:say_line("/fecl025/")
    wait_for_script(local1)
    start_script(clown.idle, clown)
end
cl1[95] = { text = "/fema026/", first_clown_node = TRUE }
cl1[95].response = function(arg1) -- line 155
    arg1.off = TRUE
    fe.pop_trigger = TRUE
    clown:play_sound_at("bloonpop.wav")
    stop_script(clown.idle)
    if GetActorCostumeDepth(clown.hActor) > 1 then
        clown:pop_costume()
        clown:stop_chore(0)
        clown.idling = FALSE
    end
    clown:play_chore(balloonman_pop_balloon, "balloonman.cos")
    clown:head_look_at(manny)
    clown:say_line("/fecl027/")
    wait_for_message()
    clown:say_line("/fecl028/")
    clown:wait_for_message()
    start_script(clown.idle, clown)
end
cl1.exit_lines.first_clown_node = { text = "/fema029/", gesture = manny.twist_head_gesture }
cl1.exit_lines.first_clown_node.response = function(arg1) -- line 177
    cl1.node = "exit_dialog"
    clown:say_line("/fecl030/")
end
cl1.reset_twist_node = function(arg1) -- line 182
    cl1[100].off = FALSE
    cl1[102].off = FALSE
    if not DEMO then
        cl1[104].off = FALSE
    end
    cl1[100].off = FALSE
end
cl1[100] = { text = "/fema031/", twist_node = TRUE, gesture = manny.tilt_head_gesture }
cl1[100].response = function(arg1) -- line 190
    cl1[100].text = "/fema032/"
    if clown:check_balloon("cat") then
        cl1.node = "exit_dialog"
        clown:say_line("/fecl034/")
        wait_for_message()
        clown:twist_balloon("cat")
    else
        arg1.off = TRUE
    end
end
cl1[102] = { text = "/fema036/", twist_node = TRUE, gesture = manny.head_forward_gesture }
cl1[102].response = function(arg1) -- line 205
    cl1[102].text = "/fema037/"
    if clown:check_balloon("dingo") then
        cl1.node = "exit_dialog"
        clown:say_line("/fecl039/")
        wait_for_message()
        clown:twist_balloon("dingo")
    else
        arg1.off = TRUE
    end
end
cl1[104] = { text = "/fema041/", twist_node = TRUE }
cl1[104].response = function(arg1) -- line 218
    cl1.node = "exit_dialog"
    if reaped_meche then
        arg1.off = TRUE
        clown:say_line("/fecl042/")
        wait_for_message()
        clown:say_line("/fecl043/")
    else
        cl1[104].text = "/fema044/"
        clown:twist_balloon("worm")
    end
end
cl1[106] = { text = "/fema046/", twist_node = TRUE }
cl1[106].response = function(arg1) -- line 232
    cl1[106].text = "/fema047/"
    if clown:check_balloon("frost") then
        cl1.node = "exit_dialog"
        clown:say_line("/fecl049/")
        wait_for_message()
        clown:twist_balloon("frost")
    else
        arg1.off = TRUE
    end
end
cl1.aborts.twist_node = function(arg1) -- line 244
    cl1.node = "first_clown_node"
    if cl1.current_choices[1] then
        cl1:execute_line(cl1.current_choices[1])
    else
        cl1:clear()
    end
end
cl1[999] = "EOD"
CheckFirstTime("dlg_domino.lua")
do2 = Dialog:create()
do2.display_lines = function(arg1) -- line 11
    start_script(dr.smoke_idles, TRUE)
    arg1.parent.display_lines(do2)
end
do2.no_smoking = function(arg1) -- line 16
    stop_script(dr.smoke_idles)
    if domino.smoking then
        domino:play_chore(dom_isle_idles_smoke_no_headphone, "dom_isle_idles.cos")
        domino:blend(dom_isle_idles_idle, dom_isle_idles_smoke_no_headphone, 750, "dom_isle_idles.cos")
        sleep_for(750)
        domino:stop_chore(dom_isle_idles_smoke_no_headphone, "dom_isle_idles.cos")
        domino:play_chore(dom_isle_idles_idle, "dom_isle_idles.cos")
    end
end
do2.execute_line = function(arg1, arg2) -- line 27
    start_script(do2.no_smoking)
    Dialog.execute_line(do2, arg2)
end
do2.intro = function(arg1) -- line 32
    do2.node = "n1"
    stop_script(dr.smoke_idles)
    if meche.locked_up and not do2[90].said and not vd.heard_meche then
        do2[90].off = FALSE
    else
        do2[90].off = TRUE
    end
    if meche.locked_up and not do2[100].said and vd.heard_meche then
        do2[100].off = FALSE
    else
        do2[100].off = TRUE
    end
    if dr.talked_out then
        do2.node = "exit_dialog"
        manny:say_line("/drma001/")
    else
        domino.wearing_headphones = FALSE
        if not do2.initiated then
            manny:say_line("/drma002/")
            wait_for_message()
        end
        manny:walkto_object(dr.domino_obj)
        manny:push_costume("mn_hit_desk.cos")
        manny:play_chore(0)
        sleep_for(500)
        manny:say_line("/drma003/")
        sleep_for(500)
        start_script(dr.phones_off)
        manny:wait_for_chore()
        manny:pop_costume()
        domino:wait_for_chore(dom_isle_idles_takeoff_headphone, "dom_isle_idles.cos")
        wait_for_message()
        if not do2.initiated then
            do2.initiated = TRUE
            domino:say_line("/drdo004/")
            wait_for_message()
            manny:say_line("/drma005/")
            manny:point_gesture()
            wait_for_message()
            domino:say_line("/drdo006/")
            domino:blend(dom_isle_idles_idle, dom_isle_idles_takeoff_headphone, 1000, "dom_isle_idles.cos")
            domino:play_chore(dom_isle_idles_smoke_no_headphone, "dom_isle_idles.cos")
        else
            domino:say_line("/drdo007/")
            domino:blend(dom_isle_idles_idle, dom_isle_idles_takeoff_headphone, 1000, "dom_isle_idles.cos")
        end
    end
end
do2[90] = { text = "/drma008/", n1 = TRUE }
do2[90].off = TRUE
do2[90].response = function(arg1) -- line 88
    arg1.off = TRUE
    domino:say_line("/drdo009/")
    sleep_for(1000)
    domino:play_chore(dom_isle_idles_doublehand, "dom_isle_idles.cos")
    wait_for_message()
    domino:play_chore(dom_isle_idles_doublehand2idle, "dom_isle_idles.cos")
end
do2[100] = { text = "/drma010/", n1 = TRUE, gesture = manny.tilt_head_gesture }
do2[100].off = TRUE
do2[100].response = function(arg1) -- line 100
    arg1.off = TRUE
    domino:say_line("/drdo011/")
    wait_for_message()
    manny:say_line("/drma012/")
    wait_for_message()
    domino:say_line("/drdo013/")
    domino:play_chore(dom_isle_idles_dom_isle_idles_shrug, "dom_isle_idles.cos")
    wait_for_message()
    domino:say_line("/drdo014/")
end
do2[110] = { text = "/drma015/", n1 = TRUE, gesture = manny.point_gesture }
do2[110].response = function(arg1) -- line 113
    arg1.off = TRUE
    domino:say_line("/drdo016/")
    wait_for_message()
    domino:play_chore(dom_isle_idles_head_shake, "dom_isle_idles.cos")
    domino:say_line("/drdo017/")
    sleep_for(2000)
    domino:run_chore(dom_isle_idles_thumb_at_ma, "dom_isle_idles.cos")
    sleep_for(400)
    domino:run_chore(dom_isle_idles_count1, "dom_isle_idles.cos")
    sleep_for(700)
    domino:run_chore(dom_isle_idles_count2, "dom_isle_idles.cos")
    sleep_for(500)
    domino:play_chore(dom_isle_idles_countdown, "dom_isle_idles.cos")
    domino:wait_for_message()
    domino:say_line("/drdo018/")
    domino:wait_for_chore(dom_isle_idles_countdown, "dom_isle_idles.cos")
    domino:play_chore(dom_isle_idles_head_shake, "dom_isle_idles.cos")
end
do2[120] = { text = "/drma019/", n1 = TRUE, gesture = manny.shrug_gesture }
do2[120].response = function(arg1) -- line 134
    arg1.off = TRUE
    do2[170].off = FALSE
    domino:say_line("/drdo020/")
    domino:play_chore(dom_isle_idles_head_shake, "dom_isle_idles.cos")
    wait_for_message()
    domino:say_line("/drdo021/")
    domino:play_chore(dom_isle_idles_thumb_at_ma, "dom_isle_idles.cos")
    domino:wait_for_message()
    domino:play_chore(dom_isle_idles_thumb2idle, "dom_isle_idles.cos")
end
do2[130] = { text = "/drma022/", n1 = TRUE, gesture = manny.twist_head_gesture }
do2[130].response = function(arg1) -- line 147
    arg1.off = TRUE
    domino:say_line("/drdo023/")
end
do2[140] = { text = "/drma024/", n1 = TRUE, gesture = manny.hand_gesture }
do2[140].response = function(arg1) -- line 153
    arg1.off = TRUE
    do2[150].off = FALSE
    domino:say_line("/drdo025/")
    wait_for_message()
    domino:say_line("/drdo026/")
    domino:run_chore(dom_isle_idles_head_shake, "dom_isle_idles.cos")
    domino:run_chore(dom_isle_idles_shrug, "dom_isle_idles.cos")
    wait_for_message()
    domino:say_line("/drdo027/")
    sleep_for(1000)
    domino:run_chore(dom_isle_idles_doublehand, "dom_isle_idles.cos")
    wait_for_message()
    domino:run_chore(dom_isle_idles_doublehand2idle, "dom_isle_idles.cos")
end
do2[150] = { text = "/drma028/", n1 = TRUE, gesture = manny.twist_head_gesture }
do2[150].off = TRUE
do2[150].response = function(arg1) -- line 171
    arg1.off = TRUE
    do2[160].off = FALSE
    domino:say_line("/drdo029/")
    wait_for_message()
    domino:say_line("/drdo030/")
    sleep_for(3000)
    domino:run_chore(dom_isle_idles_smoke_no_headphone, "dom_isle_idles.cos")
    wait_for_message()
    domino:say_line("/drdo031/")
end
do2[160] = { text = "/drma032/", n1 = TRUE }
do2[160].off = TRUE
do2[160].response = function(arg1) -- line 185
    arg1.off = TRUE
    domino:say_line("/drdo033/")
    domino:play_chore(dom_isle_idles_thumb_at_ma, "dom_isle_idles.cos")
    sleep_for(3000)
    domino:play_chore(dom_isle_idles_count1, "dom_isle_idles.cos")
    wait_for_message()
    domino:say_line("/drdo034/")
    domino:play_chore(dom_isle_idles_count2, "dom_isle_idles.cos")
    wait_for_message()
    domino:run_chore(dom_isle_idles_countdown, "dom_isle_idles.cos")
    domino:say_line("/drdo035/")
    domino:play_chore(dom_isle_idles_shrug, "dom_isle_idles.cos")
end
do2[170] = { text = "/drma036/", n1 = TRUE }
do2[170].off = TRUE
do2[170].response = function(arg1) -- line 202
    arg1.off = TRUE
    do2[180].off = FALSE
    domino:say_line("/drdo037/")
    domino:play_chore(dom_isle_idles_head_shake, "dom_isle_idles.cos")
    wait_for_message()
    domino:say_line("/drdo038/")
    domino:play_chore(dom_isle_idles_thumb_at_ma, "dom_isle_idles.cos")
    wait_for_message()
    domino:say_line("/drdo039/")
    wait_for_message()
    domino:play_chore(dom_isle_idles_thumb2idle, "dom_isle_idles.cos")
    domino:say_line("/drdo040/")
end
do2[180] = { text = "/drma041/", n1 = TRUE, gesture = manny.head_forward_gesture }
do2[180].off = TRUE
do2[180].response = function(arg1) -- line 219
    arg1.off = TRUE
    do2[190].off = FALSE
    do2[210].off = FALSE
    domino:say_line("/drdo042/")
    wait_for_message()
    domino:say_line("/drdo043/")
    domino:play_chore(dom_isle_idles_thumb_at_ma, "dom_isle_idles.cos")
    wait_for_message()
    domino:say_line("/drdo044/")
    domino:play_chore(dom_isle_idles_count1, "dom_isle_idles.cos")
    sleep_for(3000)
    domino:run_chore(dom_isle_idles_count2, "dom_isle_idles.cos")
    wait_for_message()
    domino:run_chore(dom_isle_idles_countdown, "dom_isle_idles.cos")
end
do2[190] = { text = "/drma045/", n1 = TRUE, gesture = manny.tilt_head_gesture }
do2[190].off = TRUE
do2[190].response = function(arg1) -- line 238
    arg1.off = TRUE
    do2[195].off = FALSE
    domino:say_line("/drdo046/")
    wait_for_message()
    domino:say_line("/drdo047/")
    domino:play_chore(dom_isle_idles_thumb_at_ma, "dom_isle_idles.cos")
    wait_for_message()
    domino:run_chore(dom_isle_idles_thumb2idle, "dom_isle_idles.cos")
    domino:say_line("/drdo048/")
    domino:play_chore(dom_isle_idles_head_shake, "dom_isle_idles.cos")
end
do2[195] = { text = "/drma049/", n1 = TRUE }
do2[195].off = TRUE
do2[195].response = function(arg1) -- line 254
    arg1.off = TRUE
    domino:say_line("/drdo050/")
    wait_for_message()
    domino:say_line("/drdo051/")
end
do2[200] = { text = "/drma052/", n1 = TRUE }
do2[200].response = function(arg1) -- line 263
    arg1.off = TRUE
    domino:say_line("/drdo053/")
    wait_for_message()
    domino:say_line("/drdo054/")
    sleep_for(3000)
    domino:play_chore(dom_isle_idles_shrug, "dom_isle_idles.cos")
end
do2[210] = { text = "/drma055/", n1 = TRUE, gesture = manny.shrug_gesture }
do2[210].off = TRUE
do2[210].response = function(arg1) -- line 274
    arg1.off = TRUE
    do2[220].off = FALSE
    domino:say_line("/drdo056/")
    domino:play_chore(dom_isle_idles_shake_head, "dom_isle_idles.cos")
    wait_for_message()
    domino:say_line("/drdo057/")
    wait_for_message()
    domino:say_line("/drdo058/")
end
do2[220] = { text = "/drma059/", n1 = TRUE }
do2[220].off = TRUE
do2[220].response = function(arg1) -- line 287
    arg1.off = TRUE
    domino:say_line("/drdo060/")
    sleep_for(2000)
    domino:run_chore(dom_isle_idles_shrug, "dom_isle_idles.cos")
end
do2[230] = { text = "/drma061/", n1 = TRUE, gesture = manny.hand_gesture }
do2[230].response = function(arg1) -- line 295
    arg1.off = TRUE
    domino:say_line("/drdo062/")
    wait_for_message()
    domino:say_line("/drdo063/")
    wait_for_message()
    domino:say_line("/drdo064/")
    domino:run_chore(dom_isle_idles_point, "dom_isle_idles.cos")
    wait_for_message()
    manny:say_line("/drma065/")
    domino:run_chore(dom_isle_idles_point2idle, "dom_isle_idles.cos")
    wait_for_message()
    domino:say_line("/drdo066/")
    wait_for_message()
    domino:say_line("/drdo067/")
    domino:run_chore(dom_isle_idles_point, "dom_isle_idles.cos")
    wait_for_message()
    domino:say_line("/drdo068/")
    domino:run_chore(dom_isle_idles_point2idle, "dom_isle_idles.cos")
    domino:wait_for_message()
end
do2.exit_lines.n1 = { text = "/drma069/", gesture = manny.tilt_head_gesture }
do2.exit_lines.n1.response = function(arg1) -- line 318
    do2.node = "exit_dialog"
    domino:say_line("/drdo070/")
    domino:run_chore(dom_isle_idles_laugh, "dom_isle_idles.cos")
    domino:wait_for_message()
end
do2.aborts.n1 = function(arg1) -- line 325
    dr.talked_out = TRUE
    do2:clear()
    do2:execute_line(do2.exit_lines.n1)
end
do2.outro = function(arg1) -- line 331
    domino:wait_for_chore()
    if not domino.wearing_headphones then
        start_script(dr.phones_on)
    end
    stop_script(dr.smoke_idles)
    start_script(dr.smoke_idles, FALSE)
end
CheckFirstTime("dlg_domino.lua")
do1 = Dialog:create()
do1.talk_domino_count = 0
do1.intro = function(arg1) -- line 8
    do1.node = "first_domino_node"
    break_here()
    dom:current_setup(do_dorws)
    break_here()
    do1.exit_lines.first_domino_node = fdn_exit_1
    if not domino.met then
        domino.met = TRUE
        manny:say_line("/doma001/")
        manny:tilt_head_gesture()
        sleep_for(500)
        if do1[5].said then
            start_script(domino.face_manny, domino, TRUE)
        end
        wait_for_message()
        domino:say_line("/dodo002/")
    else
        do1.talk_domino_count = do1.talk_domino_count + 1
        manny:say_line("/doma003/")
        manny:head_forward_gesture()
        sleep_for(500)
        if do1.talk_domino_count < 3 and do1[5].said then
            start_script(domino.face_manny, domino, FALSE)
        end
        sleep_for(1500)
        wait_for_message()
        domino:say_line("/dodo004/")
    end
    wait_for_message()
end
do1[5] = { text = "/doma005/", first_domino_node = TRUE, gesture = manny.hand_gesture }
do1[5].response = function(arg1) -- line 46
    arg1.off = TRUE
    arg1.said = TRUE
    do1.node = "bruno_node"
    if not domino.facing_manny then
        start_script(domino.face_manny, domino, TRUE)
    end
    sleep_for(500)
    domino:say_line("/dodo006/")
    wait_for_message()
    sleep_for(1000)
    manny:tilt_head_gesture()
    wait_for_script(domino.face_manny)
    domino:say_line("/dodo007/")
    wait_for_message()
    manny:say_line("/doma008/")
    manny:point_gesture()
    wait_for_message()
    domino:say_line("/dodo009/")
    wait_for_message()
    manny:say_line("/doma010/")
    manny:twist_head_gesture()
    wait_for_message()
    domino:say_line("/dodo011/")
    wait_for_message()
    domino:face_bag()
    domino:say_line("/dodo012/")
end
do1[10] = { text = "/doma013/", first_domino_node = TRUE }
do1[10].response = function(arg1) -- line 76
    asked_questions = TRUE
    do1[10].text = "/doma014/"
    do1.node = "question_domino_node"
    do1.exit_lines.question_domino_node = qdn_exit_1
    domino:say_line("/dodo015/")
end
do1[20] = { text = "/doma016/", first_domino_node = TRUE, gesture = manny.nod_gesture }
do1[20].response = function(arg1) -- line 85
    do1.node = "tell_domino_node"
    do1.exit_lines.tell_domino_node = tdn_exit_1
    if made_statements then
        domino:say_line("/dodo017/")
    else
        made_statements = TRUE
        do1[20].text = "/doma018/"
        domino:say_line("/dodo019/")
        wait_for_message()
        domino:say_line("/dodo020/")
    end
end
do1[30] = { text = "/doma021/", first_domino_node = TRUE, gesture = manny.point_gesture }
do1[30].response = function(arg1) -- line 100
    do1[30].off = TRUE
    do1[40].off = FALSE
    domino:say_line("/dodo022/")
end
do1[40] = { text = "/doma024/", first_domino_node = TRUE, off = TRUE, gesture = manny.shrug_gesture }
do1[40].response = function(arg1) -- line 109
    arg1.off = TRUE
    domino:say_line("/dodo025/")
    wait_for_message()
    domino:say_line("/dodo026/")
end
do1[50] = { text = "/doma027/", first_domino_node = TRUE, gesture = manny.twist_head_gesture }
do1[50].response = function(arg1) -- line 118
    arg1.off = TRUE
    domino:say_line("/dodo028/")
    wait_for_message()
    domino:say_line("/dodo029/")
end
fdn_exit_1 = { text = "/doma030/", gesture = manny.hand_gesture }
fdn_exit_1.setup = function(arg1) -- line 126
    do1.exit_lines.first_domino_node = fdn_exit_2
end
fdn_exit_1.response = function(arg1) -- line 129
    do1.node = "exit_dialog"
    domino:say_line("/dodo031/")
    if domino.facing_manny then
        start_script(domino.face_bag, domino)
    end
    wait_for_message()
    domino:say_line("/dodo032/")
end
fdn_exit_2 = { text = "/doma033/", gesture = manny.hand_gesture }
fdn_exit_2.response = fdn_exit_1.response
do1.aborts.first_domino_node = function(arg1) -- line 142
    do1:clear()
    do1.node = "end_dialog"
    manny:say_line("/doma034/")
    manny:nod_head_gesture()
    wait_for_message()
    domino:say_line("/dodo035/")
end
do1.outro = function() -- line 151
    domino:play_chore(dominoboxing_to_box)
    domino:wait_for_chore()
    domino:play_chore_looping(dominoboxing_boxing)
end
do1[50] = { text = "/doma036/", question_domino_node = TRUE, gesture = manny.point_gesture }
do1[50].off = TRUE
do1[50].response = function(arg1) -- line 160
    arg1.off = TRUE
    domino:say_line("/dodo037/")
    wait_for_message()
    domino:say_line("/dodo038/")
end
do1[60] = { text = "/doma039/", question_domino_node = TRUE, gesture = manny.shrug_gesture }
do1[60].response = function(arg1) -- line 168
    arg1.off = TRUE
    domino:say_line("/dodo040/")
    wait_for_message()
    domino:say_line("/dodo041/")
end
do1[70] = { text = "/doma042/", question_domino_node = TRUE, gesture = manny.point_gesture }
do1[70].response = function(arg1) -- line 176
    arg1.off = TRUE
    domino:say_line("/dodo043/")
    wait_for_message()
    domino:say_line("/dodo044/")
    wait_for_message()
    manny:say_line("/doma045/")
    wait_for_message()
    manny:say_line("/doma046/")
    manny:head_forward_gesture()
end
do1[80] = { text = "/doma047/", question_domino_node = TRUE, gesture = manny.shrug_gesture }
do1[80].response = function(arg1) -- line 189
    arg1.off = TRUE
    domino:say_line("/dodo048/")
    wait_for_message()
    domino:say_line("/dodo049/")
    wait_for_message()
    manny:say_line("/doma050/")
    manny:twist_head_gesture()
end
do1[90] = { text = "/doma051/", question_domino_node = TRUE }
do1[90].response = function(arg1) -- line 200
    arg1.off = TRUE
    domino:say_line("/dodo052/")
    wait_for_message()
    manny:say_line("/doma053/")
    manny:twist_head_gesture()
    wait_for_message()
    manny:say_line("/doma054/")
    sleep_for(2000)
    manny:hand_gesture()
    wait_for_message()
    domino:say_line("/dodo055/")
    wait_for_message()
    manny:say_line("/doma056/")
    manny:shrug_gesture()
    wait_for_message()
    domino:say_line("/dodo057/")
end
qdn_exit_1 = { text = "/doma058/" }
qdn_exit_1.setup = function(arg1) -- line 220
    do1.exit_lines.question_domino_node = qdn_exit_2
end
qdn_exit_1.response = function(arg1) -- line 223
    do1.node = "first_domino_node"
    if domino.facing_manny then
        start_script(domino.face_bag, domino)
    end
    domino:say_line("/dodo059/")
    wait_for_message()
    domino:say_line("/dodo060/")
    sleep_for(500)
    wait_for_script(domino.face_bag)
    if not domino.facing_manny then
        start_script(domino.face_manny, domino)
    end
    wait_for_message()
    sleep_for(1000)
    domino:say_line("/dodo061/")
    wait_for_message()
    wait_for_script(domino.face_manny)
    domino:say_line("/dodo062/")
    sleep_for(1000)
    domino:face_bag()
end
qdn_exit_2 = { text = "/doma063/" }
qdn_exit_2.response = function(arg1) -- line 247
    do1.node = "first_domino_node"
    domino:say_line("/dodo064/")
end
do1.aborts.question_domino_node = function(arg1) -- line 261
    do1:clear()
    do1[10].off = TRUE
    do1.node = "first_domino_node"
end
do1[110] = { text = "/doma065/", tell_domino_node = TRUE, gesture = manny.nod_head_gesture }
do1[110].response = function(arg1) -- line 268
    arg1.off = TRUE
    do1[120].off = FALSE
    domino:say_line("/dodo066/")
    wait_for_message()
    domino:say_line("/dodo067/")
end
do1[120] = { text = "/doma068/", tell_domino_node = TRUE, off = TRUE }
do1[120].response = function(arg1) -- line 281
    arg1.off = TRUE
    domino:say_line("/dodo069/")
end
do1[130] = { text = "/doma070/", tell_domino_node = TRUE, gesture = manny.head_forward_gesture }
do1[130].response = function(arg1) -- line 287
    arg1.off = TRUE
    domino:say_line("/dodo071/")
    wait_for_message()
    domino:say_line("/dodo072/")
end
do1[140] = { text = "/doma073/", tell_domino_node = TRUE, gesture = manny.tilt_head_gesture }
do1[140].response = function(arg1) -- line 295
    arg1.off = TRUE
    domino:say_line("/dodo074/")
    wait_for_message()
    domino:say_line("/dodo075/")
    wait_for_message()
    manny:say_line("/doma076/")
    manny:twist_head_gesture()
    wait_for_message()
    manny:stop_chore(nil, "manny_gestures.cos")
    manny:say_line("/doma077/")
end
tdn_exit_1 = { text = "/doma078/", gesture = manny.twist_head_gesture }
tdn_exit_1.setup = function(arg1) -- line 309
    do1.exit_lines.tell_domino_node = tdn_exit_2
end
tdn_exit_1.response = function(arg1) -- line 312
    do1.node = "first_domino_node"
    domino:say_line("/dodo079/")
end
tdn_exit_2 = { text = "/doma080/", gesture = manny.nod_head_gesture }
tdn_exit_2.response = tdn_exit_1.response
do1.aborts.tell_domino_node = function(arg1) -- line 320
    do1:clear()
    do1.node = "first_domino_node"
    do1[20].off = TRUE
end
do1[200] = { text = "/doma081/", bruno_node = TRUE, gesture = manny.nod_head_gesture }
do1[200].response = function(arg1) -- line 327
    do1.node = "first_domino_node"
    domino:say_line("/dodo082/")
    wait_for_message()
    manny:say_line("/doma083/")
    manny:shrug_gesture()
    sleep_for(3000)
    manny:tilt_head_gesture()
end
do1[210] = { text = "/doma084/", bruno_node = TRUE, gesture = manny.nod_head_gesture }
do1[210].response = function(arg1) -- line 338
    do1.node = "first_domino_node"
    domino:say_line("/dodo085/")
    wait_for_message()
    manny:say_line("/doma086/")
end
do1[220] = { text = "/doma087/", bruno_node = TRUE, gesture = manny.twist_head_gesture }
do1[220].response = function(arg1) -- line 346
    do1.node = "first_domino_node"
    domino:say_line("/dodo088/")
end
do1[230] = { text = "/doma090/", bruno_node = TRUE, gesture = manny.twist_head_gesture }
do1[230].response = function(arg1) -- line 354
    do1.node = "first_domino_node"
    domino:say_line("/dodo091/")
    wait_for_message()
    domino:say_line("/dodo092/")
end
do1.outro = function(arg1) -- line 361
    do1.hold_button_handler = SampleButtonHandler
    if domino.facing_manny then
        wait_for_script(domino.face_manny)
        domino:face_bag()
    end
    dom:force_camerachange()
end
do1[999] = "EOD"
CheckFirstTime("dlg_eva2.lua")
ev2 = Dialog:create()
ev2.focus = hq.eva_obj
ev2.intro = function(arg1) -- line 13
    if not eva.got_teeth then
        if dom.mouthpiece.bonded then
            ev2[90].off = FALSE
        end
        if not eva.talked_out_again then
            ev2.node = "first_eva_node"
            if not ev2.talked then
                ev2.talked = TRUE
                manny:point_gesture()
                manny:say_line("/hqma001/")
                wait_for_message()
                eva:say_line("/hqev002/")
                wait_for_message()
                manny:shrug_gesture()
                manny:say_line("/hqma003/")
            end
        elseif not DEMO then
            ev2.node = "exit_dialog"
            manny:say_line("/hqma004/")
            wait_for_message()
            eva:say_line("/hqev005/")
        else
            manny:say_line("/hqma006/")
            wait_for_message()
            eva:say_line("/hqev007/")
        end
    else
        ev2.node = "exit_dialog"
        manny:say_line("/hqma006/")
        wait_for_message()
        eva:say_line("/hqev007/")
        single_start_script(eva.new_run_idle, eva, "turn_back")
    end
end
ev2[90] = { text = "/hqma008/", first_eva_node = TRUE }
ev2[90].off = TRUE
ev2[90].response = function(arg1) -- line 52
    arg1.off = TRUE
    ev2.node = "exit_dialog"
    manny:pull_out_item(dom.mouthpiece)
    start_script(hq.eva_obj.use_mouthpiece, hq.eva_obj)
end
ev2[100] = { text = "/hqma009/", first_eva_node = TRUE }
ev2[100].response = function(arg1) -- line 61
    arg1.off = TRUE
    eva:say_line("/hqev010/")
    wait_for_message()
    manny:say_line("/hqma011/")
    sleep_for(100)
    manny:shrug_gesture()
    wait_for_message()
    eva:say_line("/hqev012/")
end
ev2[110] = { text = "/hqma013/", first_eva_node = TRUE, gesture = manny.hand_gesture }
ev2[110].response = function(arg1) -- line 74
    arg1.off = TRUE
    eva.talked_teeth = TRUE
    eva:say_line("/hqev014/")
    wait_for_message()
    if not DEMO then
        eva:say_line("/hqev015/")
        wait_for_message()
        eva:say_line("/hqev016/")
        wait_for_message()
        manny:tilt_head_gesture()
        manny:say_line("/hqma017/")
        wait_for_message()
        manny:say_line("/hqma018/")
        wait_for_message()
        manny:shrug_gesture()
        manny:say_line("/hqma019/")
        wait_for_message()
        eva:say_line("/hqev020/")
        wait_for_message()
        manny:twist_head_gesture()
        manny:say_line("/hqma021/")
        wait_for_message()
        eva:say_line("/hqev022/")
        wait_for_message()
    end
    eva:say_line("/hqev023/")
    eva:head_look_at(nil)
    if not find_script(eva.new_run_idle) then
        start_script(eva.new_run_idle, eva, "turn_back")
    end
end
ev2[120] = { text = "/hqma024/", first_eva_node = TRUE, gesture = manny.tilt_head_gesture }
ev2[120].response = function(arg1) -- line 109
    arg1.off = TRUE
    eva:say_line("/hqev025/")
    wait_for_message()
    eva:say_line("/hqev026/")
    wait_for_message()
    stop_script(hq.salvador_idles)
    salvador:stop_chore(nil)
    salvador:push_costume("sv_helps.cos")
    salvador:setpos(-0.597382, 0.661287, 0)
    salvador:setrot(0, 135.673, 0)
    salvador:play_chore(sv_helps_peek)
    salvador:wait_for_chore()
    salvador:say_line("/hqsa027/")
    sleep_for(1000)
    manny:head_look_at(salvador)
    wait_for_message()
    manny:head_look_at(nil)
    salvador:play_chore(sv_helps_hide)
    salvador:wait_for_chore()
    salvador:stop_chore(nil)
    salvador:pop_costume()
    salvador:setpos(-0.825013, 0.391542, 0)
    salvador:setrot(0, -200, 0)
    start_script(hq.salvador_idles)
end
ev2[130] = { text = "/hqma031/", first_eva_node = TRUE, gesture = manny.tilt_head_gesture }
ev2[130].response = function(arg1) -- line 149
    arg1.off = TRUE
    eva:say_line("/hqev032/")
    wait_for_message()
    eva:say_line("/hqev033/")
end
ev2[140] = { text = "/hqma034/", first_eva_node = TRUE, gesture = manny.hand_gesture }
ev2[140].response = function(arg1) -- line 158
    arg1.off = TRUE
    eva:say_line("/hqev035/")
    wait_for_message()
    eva:say_line("/hqev036/")
    wait_for_message()
    eva:say_line("/hqev037/")
    wait_for_message()
    manny:tilt_head_gesture()
    manny:say_line("/hqma038/")
    wait_for_message()
    eva:say_line("/hqev039/")
end
ev2.exit_lines.first_eva_node = { text = "/hqma040/" }
ev2.exit_lines.first_eva_node.response = function(arg1) -- line 174
    ev2.node = "exit_dialog"
    eva:say_line("/hqev041/")
    eva:head_look_at(nil)
    if not find_script(eva.new_run_idle) then
        start_script(eva.new_run_idle, eva, "turn_back")
    end
end
ev2.aborts.first_eva_node = function(arg1) -- line 183
    ev2:clear()
    ev2.node = "exit_dialog"
    eva.talked_out_again = TRUE
    manny:hand_gesture()
    manny:say_line("/hqma042/")
    wait_for_message()
    if DEMO then
        eva:say_line("/hqev023/")
    else
        eva:say_line("/hqev043/")
        wait_for_message()
        eva:say_line("/hqev044/")
    end
    eva:head_look_at(nil)
    if not find_script(eva.new_run_idle) then
        start_script(eva.new_run_idle, eva, "turn_back")
    end
end
ev2.outro = function(arg1) -- line 203
    manny:head_look_at(nil)
end
ev2[999] = "EOD"
CheckFirstTime("dlg_eva.lua")
ev1 = Dialog:create()
ev1.focus = ha.eva_obj
ev1.intro = function(arg1, arg2) -- line 7
    ev1.node = "first_eva_node"
    ha:current_setup(ha_evaws)
    stop_script(ha.elevator_door_timer)
    stop_script(ha.elevator_open_too_long)
    manny:turn_toward_entity(ha.eva_obj.obj_x, ha.eva_obj.obj_y, ha.eva_obj.obj_z)
    if reaped_bruno then
        if not ev1.talked_bruno then
            ev1[3].off = FALSE
        end
        ev1[8].off = TRUE
        ev1[10].off = TRUE
        ev1[2].off = TRUE
        ev1[12].off = TRUE
        ev1[14].off = TRUE
        met_eva = TRUE
    end
    if arg2 == "work_order" then
        ev1:execute_line(ev1[2])
    else
        if not met_eva then
            met_eva = TRUE
            manny:say_line("/hama001/")
            wait_for_message()
            eva:say_line("/haev002/")
            wait_for_message()
        end
        if ga.been_there and not met_glottis and not ev1[14].said then
            ev1[14].off = FALSE
        else
            ev1[14].off = TRUE
        end
        if co.been_there and not ev1.talked_don and not reaped_bruno then
            ev1[4].off = FALSE
        end
        if ga.work_order.owner == manny and not reaped_bruno then
            ev1[2].off = FALSE
        end
    end
end
manny.hand_order = function() -- line 66
    manny:walkto(ha.eva_obj)
    if manny.is_holding ~= ga.work_order then
        shrinkBoxesEnabled = FALSE
        open_inventory(TRUE, TRUE)
        manny.is_holding = ga.work_order
        close_inventory()
        if GlobalShrinkEnabled then
            shrinkBoxesEnabled = TRUE
        end
    end
end
ev1[2] = { text = "/hama003/", first_eva_node = TRUE, gesture = manny.hand_order }
ev1[2].off = TRUE
ev1[2].response = function(arg1) -- line 82
    ev1.node = "exit_dialog"
    stop_script(run_idle)
    eva:say_line("/haev004/")
    eva:play_chore(eva_sec_prepare_to_buzz, "eva_sec.cos")
    sleep_for(1000)
    eva:wait_for_message()
    eva:play_chore(eva_sec_buzz, "eva_sec.cos")
    sleep_for(750)
    start_sfx("intrcom.wav")
    wait_for_sound("intrcom.wav")
    start_sfx("intrbuzz.wav")
    wait_for_sound("intrbuzz.wav")
    if co.computer.set_to_sign then
        cur_puzzle_state[2] = TRUE
        start_script(cut_scene.lol, cut_scene)
    else
        eva:say_line("/haev005/")
        eva:wait_for_message()
        co.computer:respond()
        wait_for_message()
        eva:say_line("/haev006/")
        eva:play_chore(eva_sec_s_buzz_back, "eva_sec.cos")
        eva:wait_for_message()
        eva:say_line("/haev007/")
        eva:wait_for_message()
        start_script(put_away_held_item)
        if not buzzed_don then
            buzzed_don = TRUE
            eva:say_line("/haev008/")
            wait_for_message()
            manny:say_line("/hama009/")
            wait_for_message()
            eva:say_line("/haev010/")
        end
        eva:blend(eva_sec_read_loop, eva_sec_s_buzz_back, 1000, "eva_sec.cos")
        start_script(run_idle, eva, eva.idle_table, eva_sec_read_loop)
    end
end
ev1[3] = { text = "/hama011/", first_eva_node = TRUE }
ev1[3].off = TRUE
ev1[3].response = function(arg1) -- line 127
    arg1.off = TRUE
    ev1.talked_bruno = TRUE
    eva:say_line("/haev012/")
    wait_for_message()
    eva:say_line("/haev013/")
    wait_for_message()
    manny:say_line("/hama014/")
    wait_for_message()
    eva:say_line("/haev015/")
end
ev1[4] = { text = "/hama017/", first_eva_node = TRUE }
ev1[4].off = TRUE
ev1[4].response = function(arg1) -- line 141
    arg1.off = TRUE
    ev1.talked_don = TRUE
    eva:say_line("/haev018/")
    wait_for_message()
    manny:say_line("/hama019/")
    wait_for_message()
    eva:say_line("/haev020/")
    wait_for_message()
    eva:say_line("/haev021/")
end
ev1[5] = { text = "/hama022/", first_eva_node = TRUE }
ev1[5].off = TRUE
ev1[5].response = function(arg1) -- line 155
    if ev1.explained_all then
        ev1:explain_choice()
    else
        ev1.node = "explain2_node"
        eva:say_line("/haev023/")
    end
end
ev1[8] = { text = "/hama024/", first_eva_node = TRUE }
ev1[8].response = function(arg1) -- line 165
    arg1.off = TRUE
    ev1[10].off = FALSE
    eva:say_line("/haev025/")
    wait_for_message()
    eva:say_line("/haev026/")
end
ev1[10] = { text = "/hama027/", first_eva_node = TRUE }
ev1[10].off = TRUE
ev1[10].response = function(arg1) -- line 175
    arg1.off = TRUE
    ev1[12].off = FALSE
    eva:say_line("/haev028/")
end
ev1[12] = { text = "/hama030/", first_eva_node = TRUE }
ev1[12].off = TRUE
ev1[12].response = function(arg1) -- line 185
    ev1:explain_choice()
end
ev1[14] = { text = "/hama031/", first_eva_node = TRUE }
ev1[14].off = TRUE
ev1[14].response = function(arg1) -- line 192
    arg1.off = TRUE
    arg1.said = TRUE
    ev1:explain_choice()
end
ev1.explain_choice = function(arg1) -- line 198
    if ev1.explained_all then
        ev1[12].off = TRUE
        ev1[5].off = TRUE
        ev1.node = "first_eva_node"
        eva:say_line("/haev032/")
        wait_for_message()
        eva:say_line("/haev033/")
    else
        ev1.node = "explain_node"
        eva:say_line("/haev034/")
    end
end
ev1.done_explaining = function(arg1) -- line 212
end
ev1[15] = { text = "/hama035/", first_eva_node = TRUE }
ev1[15].response = function(arg1) -- line 216
    arg1.off = TRUE
    ev1[20].off = FALSE
    eva:say_line("/haev036/")
    wait_for_message()
    manny:say_line("/hama037/")
    wait_for_message()
    eva:say_line("/haev038/")
    wait_for_message()
    eva:say_line("/haev039/")
    wait_for_message()
    eva:say_line("/haev040/")
    wait_for_message()
    eva:say_line("/haev041/")
    wait_for_message()
    manny:say_line("/hama042/")
end
ev1[20] = { text = "/hama043/", first_eva_node = TRUE }
ev1[20].off = TRUE
ev1[20].response = function(arg1) -- line 236
    arg1.off = TRUE
    ev1[30].off = FALSE
    eva:say_line("/haev044/")
    wait_for_message()
    eva:say_line("/haev045/")
    wait_for_message()
    eva:say_line("/haev046/")
end
ev1[30] = { text = "/hama047/", first_eva_node = TRUE }
ev1[30].off = TRUE
ev1[30].response = function(arg1) -- line 248
    arg1.off = TRUE
    eva:say_line("/haev048/")
    wait_for_message()
    eva:say_line("/haev049/")
    wait_for_message()
    manny:say_line("/hama050/")
    wait_for_message()
    eva:say_line("/haev051/")
end
ev1[35] = { text = "/hama052/", first_eva_node = TRUE }
ev1[35].response = function(arg1) -- line 260
    arg1.off = TRUE
    eva:say_line("/haev053/")
    wait_for_message()
    manny:say_line("/hama054/")
end
ev1[40] = { text = "/hama055/", first_eva_node = TRUE }
ev1[40].response = function(arg1) -- line 268
    arg1.off = TRUE
    ev1[43].off = FALSE
    eva:say_line("/haev056/")
    wait_for_message()
    manny:say_line("/hama057/")
    wait_for_message()
    eva:say_line("/haev058/")
    wait_for_message()
    eva:say_line("/haev059/")
end
ev1[43] = { text = "/hama060/", first_eva_node = TRUE }
ev1[43].off = TRUE
ev1[43].response = function(arg1) -- line 282
    arg1.off = TRUE
    eva:say_line("/haev061/")
    wait_for_message()
    eva:say_line("/haev062/")
    wait_for_message()
    manny:say_line("/hama063/")
    wait_for_message()
    eva:say_line("/haev064/")
    wait_for_message()
    if reaped_bruno then
        manny:say_line("/hama065/")
    else
        manny:say_line("/hama066/")
        wait_for_message()
        eva:say_line("/haev067/")
    end
end
ev1[50] = { text = "/hama068/", first_eva_node = TRUE }
ev1[50].response = function(arg1) -- line 302
    arg1.off = TRUE
    eva:say_line("/haev069/")
    wait_for_message()
    eva:say_line("/haev070/")
end
ev1[60] = { text = "/hama071/", first_eva_node = TRUE }
ev1[60].response = function(arg1) -- line 310
    arg1.off = TRUE
    eva:say_line("/haev072/")
    wait_for_message()
    manny:say_line("/hama073/")
    wait_for_message()
    eva:say_line("/haev074/")
    wait_for_message()
    manny:say_line("/hama075/")
end
ev1[70] = { text = "/hama076/", explain_node = TRUE }
ev1[70].response = function(arg1) -- line 322
    ev1.node = "explain2_node"
    ev1[5].off = FALSE
    eva:say_line("/haev077/")
    wait_for_message()
    manny:say_line("/hama078/")
    wait_for_message()
    eva:say_line("/haev079/")
    wait_for_message()
    eva:say_line("/haev080/")
    wait_for_message()
    eva:say_line("/haev081/")
    wait_for_message()
    eva:say_line("/haev082/")
    wait_for_message()
    eva:say_line("/haev083/")
    wait_for_message()
    eva:say_line("/haev084/")
end
ev1[75] = { text = "/hama085/", explain_node = TRUE }
ev1[75].response = ev1[70].response
ev1[80] = { text = "/hama086/", explain_node = TRUE }
ev1[80].response = function(arg1) -- line 346
    ev1.node = "page_node"
    eva:say_line("/haev087/")
end
ev1[90] = { text = "/hama088/", page_node = TRUE }
ev1[90].response = function(arg1) -- line 352
    eva:say_line("/haev089/")
    ev1:search_line()
end
ev1[95] = { text = "/hama090/", page_node = TRUE }
ev1[95].response = function(arg1) -- line 358
    eva:say_line("/haev091/")
    ev1:search_line()
end
ev1.search_line = function(arg1) -- line 363
    ev1.node = "explain2_node"
    ev1[105].off = FALSE
    wait_for_message()
    eva:say_line("/haev092/")
end
ev1[100] = { text = "/hama093/", explain2_node = TRUE }
ev1[100].response = function(arg1) -- line 371
    arg1.off = TRUE
    eva:say_line("/haev094/")
end
ev1[105] = { text = "/hama095/", explain2_node = TRUE }
ev1[105].off = TRUE
ev1[105].response = function(arg1) -- line 378
    arg1.off = TRUE
    eva:say_line("/haev096/")
    wait_for_message()
    eva:say_line("/haev097/")
    wait_for_message()
    manny:say_line("/hama098/")
end
ev1[110] = { text = "/hama099/", explain2_node = TRUE }
ev1[110].response = function(arg1) -- line 388
    arg1.off = TRUE
    manny:say_line("/hama100/")
    wait_for_message()
    eva:say_line("/haev101/")
    wait_for_message()
    manny:say_line("/hama102/")
    wait_for_message()
    eva:say_line("/haev103/")
    wait_for_message()
    manny:say_line("/hama104/")
    wait_for_message()
    eva:say_line("/haev105/")
    wait_for_message()
    eva:say_line("/haev106/")
end
ev1[120] = { text = "/hama107/", explain2_node = TRUE }
ev1[120].response = function(arg1) -- line 406
    arg1.off = TRUE
    eva:say_line("/haev108/")
    wait_for_message()
    manny:say_line("/hama109/")
    wait_for_message()
    eva:say_line("/haev110/")
end
ev1[130] = { text = "/hama111/", expain2_node = TRUE }
ev1[130].response = function(arg1) -- line 416
    arg1.off = TRUE
    eva:say_line("/haev112/")
    wait_for_message()
    eva:say_line("/haev113/")
    wait_for_message()
    eva:say_line("/haev114/")
    wait_for_message()
    eva:say_line("/haev115/")
    wait_for_message()
end
ev1[140] = { text = "/hama116/", explain2_node = TRUE }
ev1[140].response = function(arg1) -- line 429
    arg1.off = TRUE
    eva:say_line("/haev117/")
end
ev1.exit_lines.first_eva_node = { text = "/hama118/" }
ev1.exit_lines.first_eva_node.response = function(arg1) -- line 435
    if not ev1.taught_bricks then
        ev1.taught_bricks = TRUE
        eva:say_line("/haev119/")
    end
    ev1.node = "exit_dialog"
end
ev1.exit_lines.explain2_node = ev1.exit_lines.first_eva_node
ev1.aborts.first_eva_node = function(arg1) -- line 444
    ev1:clear()
    ev1.node = "exit_dialog"
    eva:say_line("/haev120/")
    wait_for_message()
    manny:say_line("/hama121/")
end
ev1.aborts.explain2_node = function(arg1) -- line 452
    ev1:clear()
    ev1.explained_all = TRUE
    ev1.node = "first_eva_node"
end
ev1.outro = function(arg1) -- line 458
    system.currentSet:force_camerachange()
end
ev1[999] = "EOD"
CheckFirstTime("dlg_glot2.lua")
gl2 = Dialog:create()
gl2.execute_line = function(arg1, arg2) -- line 11
    if not ci.glottis_obj.looking_up then
        start_script(ci.glottis_obj.lookUp, ci.glottis_obj)
    end
    Dialog.execute_line(gl2, arg2)
end
gl2.intro = function(arg1) -- line 18
    gl2.node = "first_glot_node"
    if cn.pass.owner == manny then
        gl2[80].off = FALSE
    end
    if meche.shanghaid then
        gl2[110].off = TRUE
        gl2[140].off = TRUE
        if not gl2[100].said then
            gl2[100].off = FALSE
        end
    end
    if ci.sung_rusty_anchor and not gl2[90].said then
        gl2[90].off = FALSE
    end
    if bogen.pissed and not gl2.talked_bogen then
        gl2.talked_bogen = TRUE
        glottis:say_line("/cigl067/")
        wait_for_message()
        glottis:play_chore(glottis_piano_turn_head_back, "glottis_piano.cos")
        glottis:say_line("/cigl068/")
        wait_for_message()
        manny:say_line("/cima069/")
        wait_for_message()
        manny:say_line("/cima070/")
        wait_for_message()
        glottis:play_chore(glottis_piano_turn_head, "glottis_piano.cos")
        glottis:say_line("/cigl071/")
        wait_for_message()
        manny:say_line("/cima072/")
    end
end
gl2[80] = { text = "/cima001/", first_glot_node = TRUE }
gl2[80].off = TRUE
gl2[80].response = function(arg1) -- line 53
    arg1.off = TRUE
    gl2.node = "exit dialog"
    ci.said_check_out = TRUE
    start_script(ci.give_pass)
end
gl2[90] = { text = "/cima073/", first_glot_node = TRUE }
gl2[90].off = TRUE
gl2[90].response = function(arg1) -- line 62
    arg1.off = TRUE
    wait_for_message()
    glottis:play_chore(glottis_piano_turn_head_back, "glottis_piano.cos")
    glottis:say_line("/cigl074/")
    wait_for_message()
    glottis:say_line("/cigl075/")
    wait_for_message()
    glottis:play_chore(glottis_piano_turn_head, "glottis_piano.cos")
    glottis:say_line("/cigl076/")
    wait_for_message()
    manny:say_line("/cima077/")
    wait_for_message()
    glottis:say_line("/cigl078/")
end
gl2[100] = { text = "/cima079/", first_glot_node = TRUE }
gl2[100].off = TRUE
gl2[100].response = function(arg1) -- line 80
    arg1.off = TRUE
    glottis:say_line("/cigl080/")
    wait_for_message()
    manny:say_line("/cima081/")
    wait_for_message()
    manny:say_line("/cima082/")
    wait_for_message()
    glottis:say_line("/cigl083/")
    wait_for_message()
    manny:say_line("/cima084/")
    wait_for_message()
    glottis:say_line("/cigl085/")
    glottis:play_chore(glottis_piano_turn_head_back, "glottis_piano.cos")
    wait_for_message()
    glottis:say_line("/cigl086/")
    wait_for_message()
    glottis:play_chore(glottis_piano_turn_head, "glottis_piano.cos")
    glottis:say_line("/cigl087/")
end
gl2[110] = { text = "/cima088/", first_glot_node = TRUE }
gl2[110].response = function(arg1) -- line 103
    arg1.off = TRUE
    glottis:say_line("/cigl089/")
    sleep_for(750)
    glottis:run_chore(glottis_piano_turnhead, "glottis_piano.cos")
    glottis:run_chore(glottis_piano_turnhead, "glottis_piano.cos")
    wait_for_message()
    glottis:say_line("/cigl090/")
    wait_for_message()
    glottis:say_line("/cigl091/")
    glottis:run_chore(glottis_piano_091, "glottis_piano.cos")
end
gl2[120] = { text = "/cima092/", first_glot_node = TRUE }
gl2[120].response = function(arg1) -- line 117
    arg1.off = TRUE
    gl2.special_lady = TRUE
    gl2[130].off = FALSE
    glottis:say_line("/cigl093/")
    wait_for_message()
    glottis:say_line("/cigl094/")
    glottis:play_chore(glottis_piano_turn_head_back, "glottis_piano.cos")
    wait_for_message()
    glottis:say_line("/cigl095/")
    sleep_for(750)
    glottis:play_chore(glottis_piano_turn_head, "glottis_piano.cos")
end
gl2[130] = { text = "/cima096/", first_glot_node = TRUE }
gl2[130].off = TRUE
gl2[130].response = function(arg1) -- line 133
    arg1.off = TRUE
    glottis:say_line("/cigl097/")
    wait_for_message()
    music_state:set_sequence(seqGlottSingBone)
    glottis:say_line("/cigl098/")
    glottis:run_chore(glottis_piano_098, "glottis_piano.cos")
    wait_for_message()
    glottis:say_line("/cigl099/")
    glottis:run_chore(glottis_piano_099a, "glottis_piano.cos")
    wait_for_message()
    glottis:say_line("/cigl100/")
    glottis:run_chore(glottis_piano_099b, "glottis_piano.cos")
    wait_for_message()
    manny:say_line("/cima101/")
end
gl2[140] = { text = "/cima102/", first_glot_node = TRUE }
gl2[140].response = function(arg1) -- line 151
    arg1.off = TRUE
    if gl2.special_lady then
        glottis:say_line("/cigl103/")
        wait_for_message()
        manny:say_line("/cima104/")
        wait_for_message()
    end
    glottis:say_line("/cigl105/")
    glottis:play_chore(glottis_piano_turn_head_back, "glottis_piano.cos")
    wait_for_message()
    glottis:say_line("/cigl106/")
    wait_for_message()
    glottis:play_chore(glottis_piano_turn_head, "glottis_piano.cos")
    glottis:say_line("/cigl107/")
end
gl2[150] = { text = "/cima108/", first_glot_node = TRUE }
gl2[150].response = function(arg1) -- line 169
    arg1.off = TRUE
    glottis:say_line("/cigl109/")
    glottis:run_chore(glottis_piano_091, "glottis_piano.cos")
    wait_for_message()
    glottis:say_line("/cigl110/")
    wait_for_message()
    glottis:say_line("/cigl111/")
    glottis:play_chore(glottis_piano_turn_head_back, "glottis_piano.cos")
    wait_for_message()
    glottis:say_line("/cigl112/")
    glottis:play_chore(glottis_piano_112, "glottis_piano.cos")
    wait_for_message()
    glottis:play_chore(glottis_piano_turn_head, "glottis_piano.cos")
    manny:say_line("/cima113/")
    wait_for_message()
    manny:say_line("/cima114/")
    wait_for_message()
    glottis:say_line("/cigl115/")
    glottis:run_chore(glottis_piano_turnhead, "glottis_piano.cos")
    glottis:run_chore(glottis_piano_turnhead, "glottis_piano.cos")
end
gl2.exit_lines.first_glot_node = { text = "/cima116/" }
gl2.exit_lines.first_glot_node.response = function(arg1) -- line 193
    gl2.node = "exit_dialog"
    glottis:say_line("/cigl117/")
end
gl2.aborts.first_glot_node = function(arg1) -- line 198
    gl2:clear()
    gl2.node = "exit_dialog"
    if not gl2.talked_out then
        gl2.talked_out = TRUE
        manny:say_line("/cima118/")
        wait_for_message()
        glottis:say_line("/cigl119/")
        sleep_for(3000)
        glottis:run_chore(glottis_piano_091, "glottis_piano.cos")
        wait_for_message()
    else
        manny:say_line("/cima121/")
        wait_for_message()
        glottis:say_line("/cigl122/")
    end
end
gl2.outro = function(arg1) -- line 217
    if ci.glottis_obj.looking_up then
        start_script(ci.glottis_obj.lookDn, ci.glottis_obj)
    end
end
CheckFirstTime("dlg_glot3.lua")
gl3 = Dialog:create()
gl3.intro = function(arg1) -- line 10
    if glottis.fainted then
        gl3.node = "exit_dialog"
        manny:say_line("/myma073/")
        manny:wait_for_message()
        manny:shrug_gesture()
        manny:say_line("/myma074/")
        manny:wait_for_message()
        glottis:say_line("/mygl052/")
        glottis:wait_for_message()
    else
        my:mechanics_kill_idles()
        if not my.said_sorry then
            my.said_sorry = TRUE
            manny:hand_gesture()
            manny:say_line("/myma075/")
            manny:wait_for_message()
            glottis:say_line("/mygl076/")
        end
    end
end
gl3[100] = { text = "/myma077/", n1 = TRUE, gesture = manny.twist_head_gesture }
gl3[100].response = function(arg1) -- line 40
    arg1.off = TRUE
    glottis:say_line("/mygl078/")
    wait_for_message()
    glottis:say_line("/mygl079/")
end
gl3[105] = { text = "/myma080/", n1 = TRUE, gesture = manny.tilt_head_gesture }
gl3[105].response = function(arg1) -- line 48
    arg1.off = TRUE
    glottis:say_line("/mygl081/")
end
gl3[110] = { text = "/myma082/", n1 = TRUE, gesture = manny.hand_gesture }
gl3[110].response = function(arg1) -- line 54
    arg1.off = TRUE
    gl3[120].off = FALSE
    glottis:say_line("/mygl083/")
    wait_for_message()
    glottis:say_line("/mygl084/")
    wait_for_message()
    manny:twist_head_gesture()
    manny:say_line("/myma085/")
    wait_for_message()
    glottis:say_line("/mygl086/")
end
gl3[125] = { text = "/myma101/", n1 = TRUE, gesture = manny.twist_head_gesture }
gl3[125].response = function(arg1) -- line 68
    arg1.off = TRUE
    glottis:say_line("/mygl102/")
    glottis:wait_for_message()
    glottis:say_line("/mygl103/")
end
gl3[120] = { text = "/myma087/", n1 = TRUE, gesture = manny.hand_gesture }
gl3[120].off = TRUE
gl3[120].response = function(arg1) -- line 77
    glottis.fainted = TRUE
    gl3.node = "exit_dialog"
    my.blueprints:make_touchable()
    if seen_hell_train then
        stop_script(meche.w_glottis_idle)
        meche:play_chore(meche_w_gl_gl_talks, "meche_w_gl.cos")
    end
    glottis:play_chore(gl_pass_out_talk_out, "gl_pass_out.cos")
    glottis:say_line("/mygl088/")
    glottis:wait_for_message()
    music_state:set_sequence(seqSproutAha)
    music_state:set_state(stateMT_CHEPITO)
    glottis:say_line("/mygl089/")
    glottis:wait_for_message()
    manny:setrot(0, 100, 0, TRUE)
    manny:head_look_at(my.gondola)
    manny:wait_for_actor()
    manny:shrug_gesture()
    manny:say_line("/myma090/")
    manny:wait_for_message()
    glottis:say_line("/mygl091/")
    glottis:wait_for_message()
    glottis:wait_for_chore(gl_pass_out_talk_out, "gl_pass_out.cos")
    if seen_hell_train then
        meche:wait_for_chore(meche_w_gl_gl_talks, "meche_w_gl.cos")
        meche.w_glottis_idle = start_script(meche.new_run_idle, meche, "base", my.meche_w_glottis_table, "meche_w_gl.cos")
    end
    manny:setrot(0, 325, 0, TRUE)
    manny:head_look_at(my.glottis_obj)
    glottis:say_line("/mygl092/")
    sleep_for(500)
    mechanic1:play_chore(mechanic_idles_tip_toes)
    mechanic2:play_chore(mechanic_idles_tip_toes)
    glottis:wait_for_message()
    glottis:say_line("/mygl093/")
    glottis:wait_for_message()
    music_state:set_sequence(seqRocketIdea)
    music_state:update()
    IrisDown(320, 200, 1000)
    sleep_for(1500)
    my.blueprints:play_chore(0)
    mechanic1:setpos(-0.60037, 2.04926, 0.8)
    mechanic1:setrot(0, 350, 0)
    mechanic2:setpos(-0.11137, 2.32426, 0.8)
    mechanic2:setrot(0, 10, 0)
    my:set_up_mechanic_objects()
    IrisUp(320, 200, 1000)
    sleep_for(500)
    if seen_hell_train then
        stop_script(meche.w_glottis_idle)
        meche:play_chore(meche_w_gl_gl_talks, "meche_w_gl.cos")
    end
    glottis:play_chore(gl_pass_out_talk_out, "gl_pass_out.cos")
    glottis:say_line("/mygl094/")
    glottis:wait_for_message()
    glottis:say_line("/mygl095/")
    glottis:wait_for_message()
    glottis:say_line("/mygl096/")
    glottis:wait_for_message()
    glottis:say_line("/mygl097/")
    glottis:wait_for_message()
    glottis:say_line("/mygl098/")
    glottis:wait_for_message()
    glottis:say_line("/mygl099/")
    glottis:wait_for_message()
    manny:tilt_head_gesture()
    manny:say_line("/myma100/")
    manny:wait_for_message()
    manny:say_line("/myma148/")
    if seen_hell_train then
        meche.w_glottis_idle = start_script(meche.new_run_idle, meche, "base", my.meche_w_glottis_table, "meche_w_gl.cos")
    end
end
gl3.aborts.n1 = function(arg1) -- line 155
    if gl3.current_choices[1] then
        gl3:execute_line(gl3.current_choices[1])
    end
end
gl3.outro = function(arg1) -- line 161
    if not glottis.frozen then
        glottis:stop_chore(gl_pass_out_talk_out, "gl_pass_out.cos")
        glottis:play_chore(gl_pass_out_passed_out, "gl_pass_out.cos")
    end
    if not glottis.fainted then
        if mechanic1.frozen then
            mechanic1:thaw(TRUE)
        end
        if mechanic2.frozen then
            mechanic2:thaw(TRUE)
        end
        mechanic1.worship_idle_script = start_script(mechanic1.new_run_idle, mechanic1, "base", my.worship_idle_table, "mechanic_idles.cos")
        mechanic2.worship_idle_script = start_script(mechanic2.new_run_idle, mechanic2, "base", my.worship_idle_table, "mechanic_idles.cos")
    end
end
CheckFirstTime("dlg_glottis.lua")
gl1 = Dialog:create()
gl1.intro = function(arg1) -- line 11
    arg1.node = "first_glottis_node"
end
gl1[50] = { text = "/gama001/", first_glottis_node = TRUE, gesture = manny.point_gesture }
gl1[50].response = function(arg1) -- line 16
    arg1.off = TRUE
    glottis:say_line("/gagl002/")
    glottis:hand_on_chest()
    glottis:head_look_at_manny(200)
    wait_for_message()
    glottis:say_line("/gagl003/")
    glottis:head_look_at(nil)
    wait_for_message()
    glottis:hand_off_chest()
    glottis:say_line("/gagl004/")
    glottis:wait_for_chore(gl_akimbo_idles_hand_chest_akimbo, "gl_akimbo_idles.cos")
    glottis:shake_head()
    wait_for_message()
    glottis:say_line("/gagl005/")
    wait_for_message()
    glottis:say_line("/gagl006/")
end
gl1[60] = { text = "/gama007/", first_glottis_node = TRUE, gesture = manny.head_forward_gesture }
gl1[60].response = function(arg1) -- line 36
    arg1.off = TRUE
    if do1 then
        do1[50].off = FALSE
    end
    gl1[70].off = FALSE
    gl1[300].off = FALSE
    glottis.introduced = TRUE
    glottis:say_line("/gagl008/")
    glottis:start_rocking()
    wait_for_message()
    glottis:say_line("/gagl009/")
    sleep_for(1000)
    glottis:stop_rocking()
    glottis:arms_head_down()
    wait_for_message()
    glottis:say_line("/gagl010/")
    wait_for_message()
    glottis:on_right_hand()
    glottis:say_line("/gagl011/")
    wait_for_message()
    glottis:on_left_hand()
    glottis:say_line("/gagl012/")
    wait_for_message()
    glottis:say_line("/gagl013/")
    glottis:hands_down()
    glottis:flip_ears(4)
    wait_for_message()
    manny:say_line("/gama014/")
    wait_for_message()
    glottis:say_line("/gagl015/")
    glottis:shrug()
end
gl1[70] = { text = "/gama016/", first_glottis_node = TRUE, gesture = manny.twist_head_gesture }
gl1[70].off = TRUE
gl1[70].response = function(arg1) -- line 73
    arg1.off = TRUE
    gl1[80].off = FALSE
    glottis:say_line("/gagl017/")
    glottis:arms_head_down()
    wait_for_message()
    glottis:flip_ears()
    sleep_for(500)
    glottis:say_line("/gagl018/")
    glottis:hand_on_chest()
    wait_for_message()
    glottis:say_line("/gagl019/")
    wait_for_message()
    glottis:hand_off_chest()
    glottis:say_line("/gagl020/")
    glottis:wait_for_chore(gl_akimbo_idles_hand_chest_akimbo, "gl_akimbo_idles.cos")
    glottis:pick_wax()
    wait_for_message()
    glottis:say_line("/gagl021/")
    glottis:wait_for_chore(glottis_ear_wax, "glottis.cos")
    glottis:nod()
end
gl1[80] = { text = "/gama022/", first_glottis_node = TRUE, gesture = manny.point_gesture }
gl1[80].off = TRUE
gl1[80].response = function(arg1) -- line 99
    arg1.off = TRUE
    gl1[90].off = FALSE
    glottis:say_line("/gagl023/")
    glottis:look_down()
    wait_for_message()
    glottis:say_line("/gagl024/")
    glottis:shake_head()
    wait_for_message()
    glottis:say_line("/gagl025/")
    wait_for_message()
    glottis:say_line("/gagl026/")
    glottis:head_flick()
end
gl1[90] = { text = "/gama027/", first_glottis_node = TRUE, gesture = { manny.hand_gesture } }
gl1[90].off = TRUE
gl1[90].response = function(arg1) -- line 116
    gl1.node = "beg_node"
    glottis:shake_head()
    if arg1.said then
        glottis:say_line("/gagl028/")
    else
        arg1.said = TRUE
        glottis:say_line("/gagl029/")
    end
    wait_for_message()
    glottis:say_line("/gagl030/")
    glottis:shrug()
end
gl1[200] = { text = "/gama031/", beg_node = TRUE, gesture = manny.twist_head_gesture }
gl1[200].response = function(arg1) -- line 131
    arg1.off = TRUE
    glottis:say_line("/gagl032/")
    glottis:shake_head()
    wait_for_message()
    glottis:say_line("/gagl033/")
    glottis:shrug()
end
gl1[210] = { text = "/gama034/", beg_node = TRUE, gesture = manny.hand_gesture }
gl1[210].response = function(arg1) -- line 141
    arg1.off = TRUE
    glottis:say_line("/gagl035/")
    glottis:flip_ears(5)
    wait_for_message()
    manny:say_line("/gama036/")
    manny:hand_gesture()
    wait_for_message()
    manny:say_line("/gama037/")
    manny:twist_head_gesture()
    wait_for_message()
    manny:say_line("/gama038/")
    manny:nod_head_gesture()
    wait_for_message()
    manny:say_line("/gama039/")
    manny:point_gesture()
    wait_for_message()
    glottis:say_line("/gagl040/")
    glottis:hand_on_chest()
    glottis:head_look_at_manny()
    sleep_for(2500)
    glottis:hand_off_chest(TRUE)
    glottis:on_right_hand()
    wait_for_message()
    glottis:say_line("/gagl041/")
    glottis:on_left_hand(TRUE)
    glottis:hands_down(TRUE)
    glottis:lean_in_talk(TRUE)
    glottis:smart_ass()
    glottis:wait_for_message()
    glottis:blend(gl_akimbo_idles_default_akimbo, glottis_smart_ass, 500, "gl_akimbo_idles.cos", "glottis.cos")
end
gl1[220] = { text = "/gama042/", beg_node = TRUE, gesture = manny.hand_gesture }
gl1[220].response = function(arg1) -- line 175
    glottis.recruited = TRUE
    cur_puzzle_state[1] = TRUE
    ga.crash.triggered = TRUE
    gl1.node = "exit_dialog"
    arg1.off = TRUE
    glottis:say_line("/gagl043/")
    glottis:head_flick()
    wait_for_message()
    glottis:say_line("/gagl044/")
    glottis:arms_head_down()
    glottis:flip_ears(5)
    wait_for_message()
    glottis:arms_head_up()
    glottis:say_line("/gagl045/")
    glottis:play_chore(glottis_right_smirk, "glottis.cos")
    glottis:start_rocking()
    sleep_for(3000)
    glottis:play_chore(glottis_left_smirk, "glottis.cos")
    wait_for_message()
    glottis:play_chore(glottis_open_eyes, "glottis.cos")
    glottis:say_line("/gagl046/")
    glottis:stop_rocking(TRUE)
    glottis:shake_head()
    wait_for_message()
    glottis:say_line("/gagl047/")
    glottis:look_down()
    wait_for_message()
    manny:say_line("/gama048/")
    wait_for_message()
    glottis:kill_head_script()
    glottis.head_script = start_script(glottis.head_follow_mesh, glottis, manny, 6)
    glottis:say_line("/gagl049/")
    start_script(glottis.hand_work_order)
    wait_for_message()
    glottis:say_line("/gagl050/")
    glottis:flip_ears(5)
    glottis:wait_for_message()
    manny:say_line("/gama051/")
    manny:kill_head_script()
    manny:turn_toward_entity(ga.gs_door)
    manny:wait_for_message()
    manny:head_look_at(nil)
    manny:say_line("/gama052/")
    manny:wait_for_message()
    glottis:kill_head_script()
    glottis:say_line("/gagl053/")
    glottis:nod()
    sleep_for(2500)
    glottis:head_look_at(nil)
    glottis:shake_head()
    glottis:wait_for_message()
    glottis:say_line("/gagl054/")
    glottis:play_chore(glottis_right_smirk, "glottis.cos")
    glottis:wait_for_message()
    glottis:play_chore(glottis_open_eyes, "glottis.cos")
    music_state:set_sequence(seqGlottisOK)
    music_state:set_state(stateGA)
end
gl1[230] = { text = "/gama055/", beg_node = TRUE, gesture = manny.tilt_head_gesture }
gl1[230].response = function(arg1) -- line 237
    arg1.off = TRUE
    glottis:say_line("/gagl056/")
    glottis:shake_head()
    wait_for_message()
    glottis:say_line("/gagl057/")
    sleep_for(2000)
    glottis:head_flick()
end
gl1[240] = { text = "/gama058/", beg_node = TRUE, gesture = manny.shrug_gesture }
gl1[240].response = function(arg1) -- line 248
    arg1.off = TRUE
    glottis:say_line("/gagl059/")
    glottis:shrug()
    wait_for_message()
    glottis:say_line("/gagl060/")
    glottis:lean_in_talk()
    wait_for_message()
    manny:say_line("/gama061/")
    manny:nod_head_gesture()
end
gl1.exit_lines.beg_node = { text = "/gama062/", beg_node = TRUE, gesture = manny.twist_head_gesture }
gl1.exit_lines.beg_node.response = function(arg1) -- line 261
    gl1.node = "exit_dialog"
    glottis:say_line("/gagl063/")
    glottis:look_down()
end
gl1[300] = { text = "/gama064/", first_glottis_node = TRUE, gesture = manny.twist_head_gesture }
gl1[300].off = TRUE
gl1[300].response = function(arg1) -- line 269
    arg1.off = TRUE
    glottis:say_line("/gagl065/")
    glottis:shake_head(TRUE)
    glottis:flip_ears(4)
    wait_for_message()
    glottis:say_line("/gagl066/")
    glottis:hand_on_chest()
    sleep_for(3000)
    glottis:hand_off_chest(TRUE)
    glottis:start_rocking()
    wait_for_message()
    manny:tilt_head_gesture()
    glottis:stop_rocking(TRUE)
    glottis:say_line("/gagl067/")
    glottis:lean_in_talk()
    manny:backup(100)
    wait_for_message()
    glottis:say_line("/gagl068/")
    glottis:flip_ears(5)
    glottis:on_right_hand()
    sleep_for(2000)
    glottis:on_left_hand()
    glottis:wait_for_message()
    glottis:hands_down()
    start_script(manny.walk_and_face, manny, 1.43663, 8.85144, 0, 0, 53.4055, 0)
end
gl1[310] = { text = "/gama069/", first_glottis_node = TRUE, gesture = manny.nod_head_gesture }
gl1[310].response = function(arg1) -- line 298
    arg1.off = TRUE
    gl1[320].off = FALSE
    glottis:say_line("/gagl070/")
    glottis:look_down(TRUE)
    glottis:lean_in_talk(TRUE)
    glottis:hand_on_chest(TRUE)
    glottis:hand_off_chest(TRUE)
end
gl1[320] = { text = "/gama071/", first_glottis_node = TRUE, gesture = manny.hand_gesture }
gl1[320].off = TRUE
gl1[320].response = function(arg1) -- line 310
    arg1.off = TRUE
    glottis:say_line("/gagl072/")
    glottis:shake_head()
    wait_for_message()
    glottis:say_line("/gagl073/")
    glottis:look_down()
    wait_for_message()
    glottis:say_line("/gagl074/")
    glottis:shrug()
    sleep_for(5000)
    glottis:head_flick()
    manny:play_chore(manny_idles_smoke1, "manny_idles.cos")
    wait_for_message()
    glottis:look_down()
    manny:say_line("/gama075/")
    manny:wait_for_message()
    manny:fade_out_chore(manny_idles_smoke1, "manny_idles.cos")
end
gl1[330] = { text = "/gama076/", first_glottis_node = TRUE, gesture = manny.head_forward_gesture }
gl1[330].off = TRUE
gl1[330].response = function(arg1) -- line 332
    glottis:say_line("/gagl077/")
    glottis:shake_head()
    wait_for_message()
    glottis:say_line("/gagl078/")
    glottis:look_down()
    wait_for_message()
    manny:say_line("/gama079/")
    manny:twist_head_gesture()
end
gl1.exit_lines.first_glottis_node = { text = "/gama080/", gesture = manny.point_gesture }
gl1.exit_lines.first_glottis_node.response = function(arg1) -- line 344
    gl1.node = "exit_dialog"
    glottis:say_line("/gagl081/")
    sleep_for(200)
    glottis:lean_in_talk()
end
gl1.outro = function(arg1) -- line 352
    glottis:kill_head_script()
    manny:kill_head_script()
    cameraman_disabled = FALSE
    manny:head_look_at(nil)
    if glottis.is_outside then
        glottis:demerge()
    end
end
gl1[999] = "EOD"
CheckFirstTime("dlg_keeper.lua")
gk1 = Dialog:create()
gk1.intro = function() -- line 12
    if manny.knows_glottis_is_dying and not tg.talked_glottis then
        gk1[140].off = FALSE
    else
        gk1[140].off = TRUE
    end
end
gk1[100] = { text = "/tgma046/", n1 = TRUE }
gk1[100].response = function(arg1) -- line 21
    arg1.off = TRUE
    gate_keeper:say_line("/tggk047/")
    gate_keeper:cross_arms()
    wait_for_message()
    gate_keeper:say_line("/tggk048/")
    gate_keeper:shake_cycle()
    gate_keeper:wait_for_message()
    gate_keeper:stop_shake()
    gate_keeper:uncross_arms()
end
gk1[110] = { text = "/tgma049/", n1 = TRUE }
gk1[110].response = function(arg1) -- line 34
    arg1.off = TRUE
    gk1[120].off = FALSE
    gate_keeper:say_line("/tggk050/")
    gate_keeper:cross_arms()
    wait_for_message()
    gate_keeper:say_line("/tggk051/")
    gate_keeper:shake_cycle()
    gate_keeper:wait_for_message()
    gate_keeper:stop_shake()
    gate_keeper:uncross_arms()
end
gk1[120] = { text = "/tgma052/", n1 = TRUE }
gk1[120].off = TRUE
gk1[120].response = function(arg1) -- line 49
    arg1.off = TRUE
    gk1[130].off = FALSE
    gate_keeper:say_line("/tggk053/")
    gate_keeper:say_what_in()
    wait_for_message()
    gate_keeper:say_line("/tggk054/")
    gate_keeper:say_what_out()
end
gk1[130] = { text = "/tgma055/", n1 = TRUE }
gk1[130].off = TRUE
gk1[130].response = function(arg1) -- line 61
    arg1.off = TRUE
    gate_keeper:say_line("/tggk056/")
    gate_keeper:arms_out()
    wait_for_message()
    gate_keeper:say_line("/tggk057/")
end
gk1[140] = { text = "/tgma058/", n1 = TRUE }
gk1[140].response = function(arg1) -- line 70
    arg1.off = TRUE
    tg.talked_glottis = TRUE
    gate_keeper:say_line("/tggk059/")
    gate_keeper:raise_hands()
    wait_for_message()
    gate_keeper:say_line("/tggk060/")
    wait_for_message()
    gate_keeper:say_line("/tggk062/")
    wait_for_message()
    gate_keeper:say_line("/tggk063/")
    gate_keeper:say_what_in()
    gate_keeper:wait_for_message()
    gate_keeper:say_what_out()
end
gk1.exit_lines.n1 = { text = "/tgma064/", n1 = TRUE }
gk1.exit_lines.n1.response = function(arg1) -- line 91
    gk1.node = "exit_dialog"
    gate_keeper:say_line("/tggk065/")
    gate_keeper:arms_out()
    wait_for_message()
    gate_keeper:wait_for_chore(gatekeeper_points, "gatekeeper.cos")
    gate_keeper:say_line("/tggk066/")
    gate_keeper:fade_out_chore(gatekeeper_points, "gatekeeper.cos")
    gate_keeper:cross_arms()
    wait_for_message()
    gate_keeper:say_line("/tggk067/")
    gate_keeper:wait_for_chore()
    gate_keeper:shake_cycle()
    gate_keeper:wait_for_message()
    gate_keeper:stop_shake()
    gate_keeper:uncross_arms()
end
gk1.aborts.n1 = function(arg1) -- line 109
    gk1:clear()
    manny:say_line("/tgma068/")
    wait_for_message()
    gk1.exit_lines.n1:response()
end
CheckFirstTime("dlg_lupe.lua")
lu1 = Dialog:create()
lu1.intro = function(arg1, arg2) -- line 11
    lu1.node = "lun1"
    START_CUT_SCENE()
    if not bogen.pissed and not lu1[140].said and not cn.been_there then
        lu1[140].off = FALSE
    end
    if bogen.pissed or cn.been_there then
        lu1[140].off = TRUE
    end
    if bogen.pissed and not lu1[150].said then
        lu1[150].off = FALSE
    end
    manny:say_line("/ccma084/")
    start_script(lupe.kill_idle, lupe, lupe_idles_forward_to_talk)
    manny:wait_for_message()
    PrintDebug("param = " .. arg2)
    if arg2 ~= "grabbed" then
        PrintDebug("In here!\n")
        while lupe.last_chore ~= lupe_idles_jumps_greeting and find_script(lupe.kill_idle) do
            break_here()
        end
        lupe:say_line("/cclu086/")
    end
    lupe:head_look_at_manny()
    wait_for_script(lupe.kill_idle)
    lupe:push_chore(lupe_idles_main_pose)
    lupe:push_chore()
    if not cc.met_lupe then
        cc.met_lupe = TRUE
        wait_for_message()
        lupe:say_line("/cclu088/")
        lupe:push_chore(lupe_idles_forward_shake_hands)
        lupe:push_chore()
        lupe:push_chore(lupe_idles_forward_to_talk)
        lupe:push_chore()
    elseif bi.seen_kiss and not cc.talked_note then
        lu1.node = "exit_dialog"
        cc:talk_note()
    end
    END_CUT_SCENE()
end
lu1.execute_line = function(arg1, arg2) -- line 64
    lupe:head_look_at_manny()
    Dialog.execute_line(lu1, arg2)
end
lu1[100] = { text = "/ccma089/", lun1 = TRUE }
lu1[100].response = function(arg1) -- line 70
    arg1.off = TRUE
    lu1.node = "say"
    lu1[135].off = FALSE
    lupe:push_chore(lupe_idles_head_right)
    lupe:push_chore()
    lupe:say_line("/cclu090/")
    wait_for_message()
    lupe:say_line("/cclu091/")
    lupe:push_chore(lupe_idles_head_return_pose)
    lupe:push_chore()
end
lu1[110] = { text = "/ccma092/", say = TRUE }
lu1[110].response = function(arg1) -- line 85
    lu1.node = "lun1"
    lu1.answer = "tonight"
    lupe:say_line("/cclu093/")
    wait_for_message()
    lupe:push_chore(lupe_idles_main_pose)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_forward_shake_hands)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_forward_to_talk)
    lupe:push_chore()
    lupe:say_line("/cclu094/")
end
lu1[120] = { text = "/ccma095/", say = TRUE }
lu1[120].response = function(arg1) -- line 100
    lu1.node = "lun1"
    lu1.answer = "encourage"
    lupe:push_chore(lupe_idles_head_right)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_head_return_pose)
    lupe:push_chore()
    lupe:say_line("/cclu096/")
    wait_for_message()
    manny:say_line("/ccma097/")
    lu1[130]:response()
end
lu1[130] = { text = "/ccma098/", say = TRUE }
lu1[130].response = function(arg1) -- line 116
    lu1.node = "lun1"
    wait_for_message()
    lupe:push_chore(lupe_idles_main_pose)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_karate)
    lupe:push_chore()
    lupe:say_line("/cclu099/")
    wait_for_message()
    lupe:say_line("/cclu100/")
    lupe:push_chore(lupe_idles_forward_to_talk)
    lupe:push_chore()
end
lu1[135] = { text = "/ccma101/", lun1 = TRUE }
lu1[135].off = TRUE
lu1[135].response = function(arg1) -- line 135
    arg1.off = TRUE
    if lu1.answer == "tonight" then
        lupe:push_chore(lupe_idles_main_pose)
        lupe:push_chore()
        lupe:push_chore(lupe_idles_forward_to_talk)
        lupe:push_chore()
        lupe:say_line("/cclu102/")
    elseif lu1.answer == "encourage" then
        lupe:push_chore(lupe_idles_head_right)
        lupe:push_chore()
        lupe:push_chore(lupe_idles_head_return_pose)
        lupe:push_chore()
        lupe:say_line("/cclu103/")
    else
        lupe:say_line("/cclu104/")
    end
    wait_for_message()
    manny:say_line("/ccma105/")
    wait_for_message()
    manny:say_line("/ccma106/")
    wait_for_message()
    lupe:push_chore(lupe_idles_head_right)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_head_return_pose)
    lupe:push_chore()
    lupe:say_line("/cclu107/")
end
lu1[140] = { text = "/ccma108/", lun1 = TRUE }
lu1[140].off = TRUE
lu1[140].response = function(arg1) -- line 168
    arg1.off = TRUE
    arg1.said = TRUE
    lupe:push_chore(lupe_idles_head_right)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_head_return_pose)
    lupe:push_chore()
    lupe:say_line("/cclu109/")
end
lu1[150] = { text = "/ccma110/", lun1 = TRUE }
lu1[150].off = TRUE
lu1[150].response = function(arg1) -- line 180
    arg1.off = TRUE
    arg1.said = TRUE
    lupe:push_chore(lupe_idles_head_right)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_head_return_pose)
    lupe:push_chore()
    lupe:say_line("/cclu111/")
    wait_for_message()
    manny:say_line("/ccma112/")
    wait_for_message()
    lupe:say_line("/cclu113/")
end
lu1[160] = { text = "/ccma114/", lun1 = TRUE }
lu1[160].response = function(arg1) -- line 195
    arg1.off = TRUE
    lupe:say_line("/cclu115/")
    wait_for_message()
    lupe:say_line("/cclu116/")
    lupe:push_chore(lupe_idles_head_right)
    lupe:push_chore()
    wait_for_message()
    lupe:say_line("/cclu117/")
    wait_for_message()
    lupe:push_chore(lupe_idles_head_return_pose)
    lupe:push_chore()
    lupe:say_line("/cclu118/")
    wait_for_message()
    manny:say_line("/ccma119/")
    wait_for_message()
    lupe:say_line("/cclu120/")
end
lu1[170] = { text = "/ccma121/", lun1 = TRUE }
lu1[170].response = function(arg1) -- line 215
    arg1.off = TRUE
    lupe:say_line("/cclu122/")
    lupe:push_chore(lupe_idles_head_right)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_head_return_pose)
    lupe:push_chore()
    wait_for_message()
    lupe:say_line("/cclu123/")
    lupe:push_chore(lupe_idles_main_pose)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_forward_shake_hands)
    lupe:push_chore()
    wait_for_message()
    lupe:say_line("/cclu124/")
    wait_for_message()
    lupe:say_line("/cclu125/")
    lupe:push_chore(lupe_idles_clapping)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_forward_to_talk)
    lupe:push_chore()
    if not lupe.talked_system then
        wait_for_message()
        lupe:say_line("/cclu126/")
    end
end
lu1[190] = { text = "/ccma127/", lun1 = TRUE }
lu1[190].response = function(arg1) -- line 244
    cc.lupe_music = TRUE
    music_state:update()
    arg1.off = TRUE
    lu1[200].off = FALSE
    lupe.talked_system = TRUE
    lupe:say_line("/cclu128/")
    lupe:push_chore(lupe_idles_main_pose)
    lupe:push_chore()
    lupe:push_chore(lupe_idles_clapping)
    lupe:push_chore()
    wait_for_message()
    lupe:say_line("/cclu129/")
    lupe:push_chore(lupe_idles_karate)
    lupe:push_chore()
    wait_for_message()
    lupe:say_line("/cclu130/")
    lupe:push_chore(lupe_idles_forward_shake_hands)
    lupe:push_chore()
    wait_for_message()
    lupe:say_line("/cclu131/")
    manny:head_look_at(cc.distraction1)
    sleep_for(1000)
    manny:head_look_at(cc.distraction2)
    sleep_for(2000)
    manny:head_look_at(cc.lupe_obj)
    break_here()
    manny:head_look_at(cc.distraction1)
    sleep_for(1500)
    cc.lupe_music = FALSE
    music_state:update()
    sleep_for(1500)
    manny:head_look_at(cc.lupe_obj)
    lupe:head_look_at(manny)
    break_here()
    lupe:push_chore(lupe_idles_forward_to_talk)
    lupe:push_chore()
    manny:head_look_at(cc.distraction2)
    sleep_for(1000)
    wait_for_message()
    lupe:say_line("/cclu132/")
    manny:head_look_at(cc.lupe_obj)
    lupe:push_chore(lupe_idles_main_pose)
    lupe:push_chore()
    wait_for_message()
    lupe:say_line("/cclu133/")
    wait_for_message()
    lupe:say_line("/cclu134/")
    wait_for_message()
    manny:say_line("/ccma135/")
    wait_for_message()
    lupe:say_line("/cclu136/")
    wait_for_message()
    lupe:say_line("/cclu137/")
    lupe:head_look_at(nil)
    wait_for_message()
    manny:say_line("/ccma138/")
    wait_for_message()
    lupe:say_line("/cclu139/")
    wait_for_message()
    lupe:push_chore(lupe_idles_forward_to_talk)
    lupe:push_chore()
    lupe:say_line("/cclu140/")
    wait_for_message()
    lupe:say_line("/cclu141/")
end
lu1[200] = { text = "/ccma142/", lun1 = TRUE }
lu1[200].off = TRUE
lu1[200].response = function(arg1) -- line 318
    arg1.off = TRUE
    lupe:push_chore(lupe_idles_head_right)
    lupe:push_chore()
    lupe:say_line("/cclu143/")
    wait_for_message()
    lupe:push_chore(lupe_idles_head_return_pose)
    lupe:push_chore()
end
lu1.exit_lines.lun1 = { text = "/ccma144/" }
lu1.exit_lines.lun1.response = function(arg1) -- line 330
    lu1.node = "exit_dialog"
    if not lupe.talked_system then
        lupe:say_line("/cclu145/")
        lupe:push_chore(lupe_idles_main_pose)
        lupe:push_chore()
        wait_for_message()
        manny:say_line("/ccma146/")
        wait_for_message()
    end
    lupe:say_line("/cclu147/")
end
lu1.aborts.lun1 = function(arg1) -- line 346
    lu1:clear()
    lu1:execute_line(lu1.exit_lines.lun1)
end
lu1.outro = function(arg1) -- line 351
    lupe:head_look_at(nil)
    start_script(lupe.new_run_idle, lupe, "jump_back")
    if not cc.met_lupe or (bi.seen_kiss and not cc.talked_note) then
        cc.lupe_waiting = TRUE
    else
        cc.lupe_waiting = FALSE
    end
end
CheckFirstTime("dlg_maximino.lua")
mx1 = Dialog:create()
mx1.display_lines = function(arg1) -- line 11
    maximino:wait_for_message()
    manny:wait_for_message()
    mx:current_setup(mx_maxcu)
    arg1.parent.display_lines(mx1)
end
mx1.execute_line = function(arg1, arg2) -- line 19
    if type(arg2) == "table" then
        print_table(arg2)
    else
        PrintDebug(arg2)
    end
    mx:current_setup(mx_diarv)
    Dialog.execute_line(mx1, arg2)
end
mx1.intro = function(arg1) -- line 30
    if bi.seen_kiss and mx1[130].said and not mx1[140].said then
        mx1[140].off = FALSE
        mx1.talked_out = FALSE
    end
    if hl.glottis_gambling and not mx1[90].said then
        mx1[90].off = FALSE
        mx1.talked_out = FALSE
    end
    if mx1.talked_out then
        mx1.node = "exit_dialog"
        manny:say_line("/mxma001/")
    else
        manny:clear_hands()
        mx1.node = "first_max_node"
    end
end
mx1[90] = { text = "/mxma073/", first_max_node = TRUE, gesture = manny.hand_gesture }
mx1[90].off = TRUE
mx1[90].response = function(arg1) -- line 52
    arg1.off = TRUE
    arg1.said = TRUE
    mx1.node = "exit_dialog"
    mx:current_setup(mx_max)
    break_here()
    maximino:say_line("/mxmx074/")
    maximino:play_chore(maximino_idles_shake_head)
    wait_for_message()
    mx:current_setup(mx_manny)
    break_here()
    manny:say_line("/mxma075/")
    manny:shrug_gesture(TRUE)
    wait_for_message()
    mx:current_setup(mx_max)
    break_here()
    maximino:say_line("/mxmx076/")
    maximino:play_chore(maximino_idles_cig_gesture)
    wait_for_message()
    mx:current_setup(mx_manny)
    break_here()
    manny:say_line("/mxma077/")
    wait_for_message()
    mx:current_setup(mx_max)
    break_here()
    maximino:say_line("/mxmx078/")
    maximino:play_chore(maximino_idles_dunno)
    wait_for_message()
    break_here()
    maximino:say_line("/mxmx079/")
end
mx1[100] = { text = "/mxma002/", first_max_node = TRUE }
mx1[100].gesture = manny.hand_gesture
mx1[100].response = function(arg1) -- line 86
    arg1.off = TRUE
    mx1[110].off = FALSE
    mx:current_setup(mx_max)
    break_here()
    maximino:say_line("/mxmx003/")
    maximino:play_chore(maximino_idles_shift_weight)
    wait_for_message()
    mx:current_setup(mx_manny)
    break_here()
    manny:say_line("/mxma004/")
    wait_for_message()
    mx:current_setup(mx_max)
    break_here()
    maximino:play_chore(maximino_idles_bk_to_restpos1)
    maximino:say_line("/mxmx005/")
end
mx1[110] = { text = "/mxma006/", first_max_node = TRUE }
mx1[110].off = TRUE
mx1[110].gesture = manny.shrug_gesture
mx1[110].response = function(arg1) -- line 107
    arg1.off = TRUE
    mx:current_setup(mx_max)
    break_here()
    maximino:play_chore(maximino_idles_shake_head)
    maximino:say_line("/mxmx007/")
    wait_for_message()
    maximino:say_line("/mxmx008/")
    maximino:wait_for_chore()
    maximino:play_chore(maximino_idles_cig_gesture)
end
mx1[120] = { text = "/mxma009/", first_max_node = TRUE }
mx1[120].gesture = manny.nod_head_gesture
mx1[120].response = function(arg1) -- line 122
    arg1.off = TRUE
    mx1[130].off = FALSE
    mx:current_setup(mx_max)
    break_here()
    maximino:play_chore(maximino_idles_shift_weight)
    maximino:say_line("/mxmx010/")
    wait_for_message()
    maximino:play_chore(maximino_idles_bk_to_restpos1)
    maximino:say_line("/mxmx011/")
end
mx1[130] = { text = "/mxma012/", first_max_node = TRUE }
mx1[130].off = TRUE
mx1[130].gesture = manny.tilt_head_gesture
mx1[130].response = function(arg1) -- line 138
    arg1.off = TRUE
    arg1.said = TRUE
    if bi.seen_kiss then
        mx1[140].off = FALSE
    end
    mx:current_setup(mx_max)
    break_here()
    maximino:say_line("/mxmx013/")
    maximino:play_chore(maximino_idles_dunno)
    wait_for_message()
    maximino:say_line("/mxmx014/")
end
mx1[140] = { text = "/mxma015/", first_max_node = TRUE }
mx1[140].off = TRUE
mx1[140].gesture = manny.head_forward_gesture
mx1[140].response = function(arg1) -- line 157
    arg1.off = TRUE
    arg1.said = TRUE
    mx1[150].off = FALSE
    mx:current_setup(mx_max)
    break_here()
    maximino:play_chore(maximino_idles_cig_gesture)
    maximino:say_line("/mxmx016/")
    wait_for_message()
    maximino:say_line("/mxmx017/")
end
mx1[150] = { text = "/mxma018/", first_max_node = TRUE }
mx1[150].off = TRUE
mx1[150].gesture = manny.point_gesture
mx1[150].response = function(arg1) -- line 173
    arg1.off = TRUE
    mx1[160].off = FALSE
    mx:current_setup(mx_max)
    break_here()
    maximino:play_chore(maximino_idles_shift_weight)
    maximino:say_line("/mxmx019/")
    wait_for_message()
    maximino:play_chore(maximino_idles_bk_to_restpos1)
    maximino:say_line("/mxmx020/")
    wait_for_message()
    maximino:play_chore(maximino_idles_shake_head)
    maximino:say_line("/mxmx021/")
end
mx1[160] = { text = "/mxma022/", first_max_node = TRUE }
mx1[160].off = TRUE
mx1[160].gesture = manny.twist_head_gesture
mx1[160].response = function(arg1) -- line 192
    arg1.off = TRUE
    mx:current_setup(mx_max)
    break_here()
    maximino:play_chore(maximino_idles_db_arm_gesture)
    maximino:say_line("/mxmx023/")
    wait_for_message()
    maximino:say_line("/mxmx024/")
end
mx1[180] = { text = "/mxma025/", first_max_node = TRUE }
mx1[180].gesture = manny.hand_gesture
mx1[180].response = function(arg1) -- line 206
    arg1.off = TRUE
    mx:current_setup(mx_max)
    break_here()
    maximino:play_chore(maximino_idles_shake_head)
    maximino:say_line("/mxmx026/")
    wait_for_message()
    mx:current_setup(mx_manny)
    break_here()
    manny:twist_head_gesture(TRUE)
    manny:say_line("/mxma027/")
    wait_for_message()
    mx:current_setup(mx_max)
    break_here()
    maximino:play_chore(maximino_idles_laugh)
    maximino:say_line("/mxmx028/")
    wait_for_message()
    mx:current_setup(mx_manny)
    break_here()
    manny:point_gesture(TRUE)
    manny:say_line("/mxma029/")
    wait_for_message()
    mx:current_setup(mx_manny)
    break_here()
    manny:tilt_head_gesture(TRUE)
    manny:say_line("/mxma030/")
    wait_for_message()
    mx:current_setup(mx_max)
    break_here()
    maximino:play_chore(maximino_idles_cig_gesture)
    maximino:say_line("/mxmx031/")
    wait_for_message()
    maximino:say_line("/mxmx032/")
    maximino:wait_for_chore()
    maximino:play_chore(maximino_idles_laugh)
    wait_for_message()
    mx:current_setup(mx_manny)
    break_here()
    manny:say_line("/mxma033/")
    manny:nod_head_gesture()
    manny:wait_for_chore()
end
mx1[190] = { text = "/mxma034/", first_max_node = TRUE }
mx1[190].response = function(arg1) -- line 251
    arg1.off = TRUE
    mx:current_setup(mx_max)
    break_here()
    maximino:say_line("/mxmx035/")
    maximino:play_chore(maximino_idles_db_arm_gesture)
    wait_for_message()
    maximino:say_line("/mxmx036/")
    wait_for_message()
    maximino:play_chore(maximino_idles_cig_gesture)
    maximino:say_line("/mxmx037/")
end
mx1[195] = { text = "/mxma038/", first_max_node = TRUE }
mx1[195].gesture = manny.point_gesture
mx1[195].response = function(arg1) -- line 266
    arg1.off = TRUE
    mx:current_setup(mx_max)
    break_here()
    maximino:play_chore(maximino_idles_dunno)
    maximino:say_line("/mxmx039/")
    wait_for_message()
    maximino:say_line("/mxmx040/")
    maximino:play_chore(maximino_idles_shift_weight)
    maximino:wait_for_chore()
    maximino:play_chore(maximino_idles_bk_to_restpos1)
    wait_for_message()
    maximino:say_line("/mxmx041/")
    maximino:play_chore(maximino_idles_db_arm_gesture)
    wait_for_message()
    maximino:say_line("/mxmx042/")
    maximino:play_chore(maximino_idles_shake_head)
    maximino:wait_for_chore()
end
mx1[200] = { text = "/mxma043/", first_max_node = TRUE }
mx1[200].response = function(arg1) -- line 289
    arg1.off = TRUE
    mx1[210].off = FALSE
    manny:shrug_gesture(TRUE)
    manny:say_line("/mxma044/")
    wait_for_message()
    mx:current_setup(mx_max)
    break_here()
    maximino:play_chore(maximino_idles_dunno)
    maximino:say_line("/mxmx045/")
    wait_for_message()
    maximino:play_chore(maximino_idles_shake_head)
    maximino:say_line("/mxmx046/")
end
mx1[210] = { text = "/mxma047/", first_max_node = TRUE }
mx1[210].off = TRUE
mx1[210].gesture = manny.point_gesture
mx1[210].response = function(arg1) -- line 307
    arg1.off = TRUE
    mx:current_setup(mx_max)
    break_here()
    maximino:play_chore(maximino_idles_shift_weight)
    maximino:say_line("/mxmx048/")
    wait_for_message()
    maximino:play_chore(maximino_idles_bk_to_restpos1)
    maximino:say_line("/mxmx049/")
end
mx1.exit_lines.first_max_node = { text = "/mxma050/" }
mx1.exit_lines.first_max_node.response = function(arg1) -- line 320
    mx1.exit_lines.first_max_node.gesture = manny.tilt_head_gesture
    mx1.node = "exit_dialog"
    mx:current_setup(mx_ofcws)
    break_here()
    maximino:play_chore(maximino_idles_dunno)
    maximino:say_line("/mxmx051/")
end
mx1.aborts.first_max_node = function(arg1) -- line 329
    mx1:clear()
    mx1.talked_out = TRUE
    mx1:execute_line(mx1.exit_lines.first_max_node)
end
mx1.outro = function(arg1) -- line 335
    mx:current_setup(mx_ofcws)
    start_script(mx.maximino_idles, TRUE)
    manny:head_look_at(nil)
end
CheckFirstTime("dlg_mechanics.lua")
mm1 = Dialog:create()
mm1.intro = function(arg1, arg2) -- line 9
    enable_head_control(FALSE)
    manny:head_look_at(my.mechanic)
end
mm1[100] = { text = "/myma104/", n1 = TRUE }
mm1[100].response = function(arg1) -- line 15
    arg1.off = TRUE
    mm1[130].off = FALSE
    single_start_script(my.mechanics_face_manny, my)
    mechanic1:say_line("/mym1105/")
    mechanic1:wait_for_message()
    manny:hand_gesture()
    manny:say_line("/myma106/")
    manny:wait_for_message()
    wait_for_script(my.mechanics_face_manny)
    mechanic1:say_line("/mym1107/")
    mechanic1:wait_for_message()
    mechanic2:say_line("/mym2108/")
    mechanic2:wait_for_message()
    manny:hand_gesture()
    manny:say_line("/myma109/")
    manny:wait_for_message()
    manny:head_look_at(my.glottis_obj)
    manny:setrot(0, my.glottis_obj.use_rot_y, 0, TRUE)
    manny:say_line("/myma110/")
    manny:wait_for_message()
    manny:shrug_gesture()
    manny:say_line("/myma111/")
    manny:wait_for_message()
    manny:twist_head_gesture()
    manny:say_line("/myma112/")
    manny:wait_for_message()
    sleep_for(500)
    manny:head_look_at(my.mechanic)
    manny:setrot(0, my.mechanic.use_rot_y, 0, TRUE)
end
mm1[120] = { text = "/myma113/", n1 = TRUE, gesture = manny.hand_gesture }
mm1[120].response = function(arg1) -- line 48
    arg1.off = TRUE
    single_start_script(my.mechanics_face_manny, my)
    mechanic1:say_line("/mym1114/")
    wait_for_message()
    mechanic2:say_line("/mym2115/")
    wait_for_message()
    my:mechanics_stop_face_manny()
    mechanic1:say_line("/mym1116/", { background = TRUE })
    mechanic2:say_line("/mym2117/", { background = TRUE })
end
mm1[130] = { text = "/myma118/", n1 = TRUE }
mm1[130].off = TRUE
mm1[130].response = function(arg1) -- line 62
    arg1.off = TRUE
    single_start_script(my.mechanics_face_manny, my)
    mechanic1:say_line("/mym1119/")
    wait_for_message()
    mechanic2:say_line("/mym2120/")
    wait_for_message()
    mechanic2:say_line("/mym2121/", { background = TRUE })
    mechanic1:say_line("/mym1122/", { background = TRUE })
end
mm1[140] = { text = "/myma123/", n1 = TRUE, gesture = manny.shrug_gesture }
mm1[140].response = function(arg1) -- line 74
    arg1.off = TRUE
    single_start_script(my.mechanics_face_manny, my)
    mechanic1:say_line("/mym1124/", { background = TRUE })
    mechanic2:say_line("/mym2125/", { background = TRUE })
    wait_for_message()
    mechanic1:say_line("/mym1126/")
    wait_for_message()
    mechanic2:say_line("/mym2127/")
    wait_for_message()
    my:mechanics_stop_face_manny()
    mechanic1:say_line("/mym1128/", { background = TRUE })
    mechanic2:say_line("/mym2129/", { background = TRUE })
end
mm1.exit_lines.n1 = { text = "/myma130/", n1 = TRUE }
mm1.exit_lines.n1.response = function(arg1) -- line 90
    mm1.node = "exit_dialog"
    mechanic1:say_line("/mym1131/")
    mechanic1:wait_for_message()
    single_start_script(my.mechanics_stop_face_manny, my)
    mechanic2:say_line("/mym2132/")
    manny:head_look_at(nil)
end
mm1.aborts.n1 = function(arg1) -- line 99
    mm1:clear()
    mm1:execute_line(mm1.exit_lines.n1)
    single_start_script(my.mechanics_stop_face_manny, my)
    manny:head_look_at(nil)
end
CheckFirstTime("dlg_meche2.lua")
me2 = Dialog:create()
me2.intro = function(arg1) -- line 11
    ar:current_setup(ar_mecla)
    if ar.talked_gun then
        manny:say_line("/arma057/")
        wait_for_message()
        meche:say_line("/armc058/")
        wait_for_message()
        manny:say_line("/arma059/")
        wait_for_message()
        meche:say_line("/armc060/")
    elseif gh.reunited then
        me2.exit_lines.n1 = me2.after_boat_exit
        if not meche.talked_boat then
            meche.talked_boat = TRUE
            manny:say_line("/arma061/")
            wait_for_message()
            meche:say_line("/armc062/")
            wait_for_message()
            manny:say_line("/arma063/")
            wait_for_message()
            meche:say_line("/armc064/")
            wait_for_message()
            manny:say_line("/arma065/")
            wait_for_message()
            manny:say_line("/arma066/")
            wait_for_message()
            manny:head_look_at(ar.ashtray)
            manny:say_line("/arma067/")
            wait_for_message()
            manny:head_look_at(ar.meche_obj)
        end
    end
end
me2[100] = { text = "/arma068/", n1 = TRUE }
me2[100].response = function(arg1) -- line 46
    arg1.off = TRUE
    me2[110].off = FALSE
    meche:say_line("/armc069/")
    wait_for_message()
    meche:say_line("/armc070/")
end
me2[110] = { text = "/arma071/", n1 = TRUE }
me2[110].off = TRUE
me2[110].response = function(arg1) -- line 56
    arg1.off = TRUE
    me2[120].off = FALSE
    meche:say_line("/armc072/")
end
me2[120] = { text = "/arma073/", n1 = TRUE }
me2[120].off = TRUE
me2[120].response = function(arg1) -- line 64
    arg1.off = TRUE
    me2[130].off = FALSE
    meche:say_line("/armc074/")
    wait_for_message()
    meche:say_line("/armc075/")
end
me2[130] = { text = "/arma076/", n1 = TRUE }
me2[130].off = TRUE
me2[130].response = function(arg1) -- line 75
    arg1.off = TRUE
    ar.talked_gun = TRUE
    me2.node = "n2"
    me2[135].off = FALSE
    me2[137].off = FALSE
    meche:say_line("/armc077/")
    wait_for_message()
    meche:say_line("/armc078/")
    wait_for_message()
    manny:say_line("/arma079/")
    wait_for_message()
    meche:say_line("/armc080/")
end
me2[135] = { text = "/arma081/", n1 = TRUE }
me2[135].off = TRUE
me2[135].response = function(arg1) -- line 92
    arg1.off = TRUE
    me2.node = "exit_dialog"
    meche:say_line("/armc082/")
    wait_for_message()
    meche:say_line("/armc083/")
    wait_for_message()
    me2:deal_straight()
end
me2[137] = { text = "/arma084/", n1 = TRUE }
me2[137].off = TRUE
me2[137].response = function(arg1) -- line 104
    arg1.off = TRUE
    me2.node = "exit_dialog"
    meche:say_line("/armc085/")
    wait_for_message()
    meche:say_line("/armc086/")
    wait_for_message()
    manny:say_line("/arma087/")
    wait_for_message()
    me2:deal_straight()
end
me2.deal_straight = function(arg1) -- line 116
    meche:say_line("/armc088/")
end
me2[140] = { text = "/arma089/", n2 = TRUE }
me2[140].response = function(arg1) -- line 122
    me2.node = "n1"
    meche:say_line("/armc090/")
    wait_for_message()
    meche:say_line("/armc091/")
end
me2[150] = { text = "/arma092/", n2 = TRUE }
me2[150].response = function(arg1) -- line 130
    me2.node = "n1"
    meche:say_line("/armc093/")
end
me2[160] = { text = "/arma094/", n2 = TRUE }
me2[160].response = function(arg1) -- line 136
    me2.node = "n1"
    manny:run_chore(mn2_takeout_get, "mn2.cos")
    sleep_for(1000)
    manny:play_chore(mn2_takeout_empty, "mn2.cos")
    wait_for_message()
    manny:say_line("/arma095/")
    wait_for_message()
    manny:stop_chore(mn2_takeout_empty, "mn2.cos")
    meche:say_line("/armc096/")
    wait_for_message()
    me2[140]:response()
end
me2[170] = { text = "/arma097/", n1 = TRUE }
me2[170].response = function(arg1) -- line 151
    arg1.off = TRUE
    me2[180].off = FALSE
    me2[190].off = FALSE
    meche:say_line("/armc098/")
end
me2[180] = { text = "/arma099/", n1 = TRUE }
me2[180].off = TRUE
me2[180].response = function(arg1) -- line 160
    arg1.off = TRUE
    meche:say_line("/armc100/")
    wait_for_message()
    meche:say_line("/armc101/")
end
me2[190] = { text = "/arma102/", n1 = TRUE }
me2[190].off = TRUE
me2[190].response = function(arg1) -- line 169
    arg1.off = TRUE
    me2.node = "n3"
    me2[200].off = FALSE
    meche:say_line("/armc103/")
    wait_for_message()
    meche:say_line("/armc104/")
end
me2[200] = { text = "/arma105/", n1 = TRUE }
me2[200].off = TRUE
me2[200].response = function(arg1) -- line 180
    me2.node = "n3"
    meche:say_line("/armc106/")
end
me2[210] = { text = "/arma107/", n3 = TRUE }
me2[210].response = function(arg1) -- line 186
    arg1.off = TRUE
    meche:say_line("/armc108/")
    wait_for_message()
    meche:say_line("/armc109/")
    wait_for_message()
    manny:say_line("/arma110/")
    wait_for_message()
    meche:say_line("/armc111/")
end
me2[220] = { text = "/arma112/", n3 = TRUE }
me2[220].response = function(arg1) -- line 198
    arg1.off = TRUE
    meche:say_line("/armc113/")
end
me2[230] = { text = "/arma114/", n3 = TRUE }
me2[230].response = function(arg1) -- line 204
    arg1.off = TRUE
    me2[240].off = FALSE
    meche:say_line("/armc115/")
end
me2[240] = { text = "/arma116/", n3 = TRUE }
me2[240].off = TRUE
me2[240].response = function(arg1) -- line 212
    arg1.off = TRUE
    meche:say_line("/armc117/")
    wait_for_message()
    meche:say_line("/armc118/")
    wait_for_message()
    meche:say_line("/armc119/")
end
me2[250] = { text = "/arma120/", n3 = TRUE }
me2[250].response = function(arg1) -- line 222
    arg1.off = TRUE
    meche:say_line("/armc121/")
end
me2[260] = { text = "/arma122/", n3 = TRUE }
me2[260].response = function(arg1) -- line 228
    arg1.off = TRUE
    meche:say_line("/armc123/")
    wait_for_message()
    manny:say_line("/arma124/")
    wait_for_message()
    meche:say_line("/armc125/")
end
me2[270] = { text = "/arma126/", n3 = TRUE }
me2[270].response = function(arg1) -- line 238
    arg1.off = TRUE
    meche:say_line("/armc127/")
    wait_for_message()
    meche:say_line("/armc128/")
end
me2.delayed_n3_exit = { text = "/arma129/" }
me2.delayed_n3_exit.response = function(arg1) -- line 246
    me2.node = "n1"
    meche:say_line("/armc130/")
    if not me2.cologne_joke then
        me2.cologne_joke = TRUE
        wait_for_message()
        manny:say_line("/arma131/")
    end
end
me2.n3 = function(arg1) -- line 256
    me2.exit_lines.n3 = me2.delayed_n3_exit
end
me2.aborts.n3 = function(arg1) -- line 260
    me2:clear()
    me2:execute_line(me2.exit_lines.n3)
    me2[200].off = TRUE
end
me2.exit_lines.n1 = { text = "/arma132/" }
me2.exit_lines.n1.response = function(arg1) -- line 267
    me2.node = "exit_dialog"
    meche:say_line("/armc133/")
end
me2.after_boat_exit = { text = "/arma134/" }
me2.after_boat_exit.response = function(arg1) -- line 273
    me2.node = "exit_dialog"
    meche:say_line("/armc135/")
end
me2.aborts.n1 = function(arg1) -- line 278
    me2:clear()
    me2.node = "exit_dialog"
    manny:say_line("/arma136/")
    wait_for_message()
    meche:say_line("/armc137/")
end
me2.outro = function(arg1) -- line 286
    ar:force_camerachange()
end
CheckFirstTime("dlg_meche.lua")
me1 = Dialog:create()
me1.focus = meche
me1.start_using_computer = function(arg1) -- line 19
    manny:walkto(mo.computer)
    manny:wait_for_actor()
    mo:current_setup(mo_comin)
    manny:ignore_boxes()
    manny:setpos(0.45, 1.875, 0)
    manny:setrot(0, 87.7538, 0)
    mo.computer:play_chore(mo_computer_static)
    manny:push_costume("ma_note_type.cos")
    manny:play_chore(ma_note_type_to_type, "ma_note_type.cos")
    manny:wait_for_chore()
    manny:play_chore(ma_note_type_type_loop, "ma_note_type.cos")
    start_sfx("keyboard.imu")
    sleep_for(100)
    mo.computer:play_chore(mo_computer_scroll)
    manny:wait_for_chore()
    stop_sound("keyboard.imu")
    start_sfx("compbeep.wav")
    manny:head_look_at_point(0.2, 1.875, 0.47, 100)
    wait_for_sound("compbeep.wav")
end
me1.stop_using_computer = function(arg1) -- line 48
    manny:play_chore(ma_note_type_type_to_home, "ma_note_type.cos")
    manny:wait_for_chore()
    manny:head_look_at(nil)
    manny:pop_costume()
    manny:follow_boxes()
    manny:setpos(0.5, 1.975, 0)
end
me1.manny_cu_mark = function(arg1) -- line 58
    manny:stop_chore()
    manny:setpos(1.05347, 1.8705, 0)
    manny:setrot(0, 211.716, 0)
    manny:head_look_at_point(1.09287, 1.6884, 0.4074, 360)
end
me1.walk_manny_to_mark = function(arg1) -- line 65
    manny:walkto(1.05347, 1.8705, 0)
    manny:wait_for_actor()
    manny:setrot(0, 211.716, 0)
    manny:head_look_at_point(1.09287, 1.6884, 0.4074)
end
me1.meche_cu_mark = function(arg1) -- line 72
    meche:setpos(1.09687, 1.52627, 0.0201)
    meche:setrot(0, 38.1745, 0)
end
me1.display_lines = function(arg1) -- line 80
    mo:current_setup(mo_mcecu)
    meche:stop_chore()
    meche:play_chore(meche_sit_base)
    single_start_script(meche.new_run_idle, meche, "base")
    arg1.parent.display_lines(me1)
end
me1.wait_and_cut_to_meche = function() -- line 88
    break_here()
    manny:wait_for_message()
    mo:current_setup(mo_mcecu)
end
me1.manny_look_at_window = function(arg1) -- line 94
    manny:setpos(0.55, 2.15, 0)
    manny:setrot(0, 285.945, 0)
    manny:head_look_at(nil)
    manny:head_look_at(mo_tube)
end
me1.execute_line = function(arg1, arg2) -- line 101
    PrintDebug("Executing line!\n")
    if type(arg2) == "table" then
        print_table(arg2)
    else
        PrintDebug(arg2)
    end
    mo:current_setup(mo_mnycu)
    stop_script(meche.new_run_idle)
    meche:stop_chore()
    meche:play_chore(meche_sit_base)
    start_script(me1.wait_and_cut_to_meche)
    Dialog.execute_line(me1, arg2)
end
me1.intro = function(arg1) -- line 118
    me1.node = "first_meche_node"
    stop_script(mo.meche_looks_at_manny_when_he_talks)
    meche:head_look_at(nil)
    if not meche.introduced then
        meche.introduced = TRUE
        me1:manny_cu_mark()
        me1:meche_cu_mark()
        manny.idles_allowed = FALSE
        meche.stop_idle = TRUE
        stop_script(meche.new_run_idle)
        cameraman_disabled = TRUE
        mo:current_setup(mo_mcecu)
        set_override(me1.intro_override, me1)
        sleep_for(1000)
        meche:say_line("/momc001/")
        meche:play_chore(meche_sit_to_chin)
        wait_for_message()
        manny:head_look_at_point({ 1.09287, 1.6884, 0.4074, 360 }, 300)
        meche:say_line("/momc002/")
        meche:play_chore(meche_sit_in_gesture_2)
        meche:wait_for_chore()
        meche:play_chore(meche_sit_gesture_2_hold)
        wait_for_message()
        mo:current_setup(mo_mnycu)
        manny:head_look_at_point(1.09287, 1.6884, 0.4074, 90)
        manny:say_line("/moma003/")
        wait_for_message()
        mo:current_setup(mo_mcecu)
        meche:say_line("/momc004/")
        meche:play_chore(meche_sit_out_gesture_2)
        meche:wait_for_chore()
        meche:play_chore(meche_sit_hand_down)
        wait_for_message()
        mo:current_setup(mo_mnycu)
        manny:say_line("/moma005/")
        break_here()
        manny:head_look_at_point(1.09287, 1.6884, 0.3874)
        sleep_for(500)
        manny:head_look_at_point(1.09287, 1.6884, 0.4074)
        manny:wait_for_message()
        manny:head_look_at(mo.computer)
        manny:say_line("/moma006/")
        sleep_for(500)
        start_script(arg1.start_using_computer, arg1)
        wait_for_message()
        wait_for_script(arg1.start_using_computer)
        manny:say_line("/moma007/")
        wait_for_message()
        manny:head_look_at(mo.computer)
        sleep_for(500)
        manny:head_look_at_point(0.2, 1.875, 0.47)
        sleep_for(500)
        manny:say_line("/moma008/")
        wait_for_message()
        mo:current_setup(mo_mcecu)
        meche:say_line("/momc009/")
        meche:play_chore(meche_sit_scoot_out)
        manny:play_chore(ma_note_type_type_to_home, "ma_note_type.cos")
        manny:wait_for_chore()
        manny:head_look_at(nil)
        manny:pop_costume()
        manny:follow_boxes()
        me1:manny_look_at_window()
        wait_for_message()
        mo:current_setup(mo_mnycu)
        manny:say_line("/moma010/")
        wait_for_message()
        manny:say_line("/moma011/")
        manny:walkto(1.05347, 1.8705, 0)
        manny:head_look_at_point(1.09287, 1.6884, 0.4074)
        manny:wait_for_actor()
        manny:setrot(0, 211.716, 0)
        wait_for_message()
        sleep_for(500)
        mo:current_setup(mo_mcecu)
        meche:say_line("/momc012/")
        meche:play_chore(meche_sit_scoot_in)
        meche:wait_for_chore()
        meche:play_chore(meche_sit_adj_skirt)
        wait_for_message()
        meche:wait_for_chore()
    else
        manny:say_line("/moma015/")
        start_script(me1.walk_manny_to_mark)
        break_here()
        manny:wait_for_actor()
        mo:current_setup(mo_mnycu)
        wait_for_message()
        mo:current_setup(mo_mcecu)
        meche:say_line("/momc016/")
    end
    single_start_script(meche.new_run_idle, meche, "base")
end
me1.intro_override = function() -- line 237
    kill_override()
    stop_sound("keyboard.imu")
    stop_script(me1.start_using_computer)
    if manny:get_costume() == "ma_note_type.cos" then
        manny:pop_costume()
    end
    shut_up_everybody()
    manny:follow_boxes()
    me1:manny_cu_mark()
    me1:meche_cu_mark()
    cameraman_disabled = TRUE
    mo:current_setup(mo_mcecu)
    single_start_script(meche.new_run_idle, meche, "base")
    if me1.talked_out then
        me1.node = "exit_dialog"
    else
        me1.node = "first_meche_node"
    end
    me1:display_lines()
end
me1[100] = { text = "/moma017/", first_meche_node = TRUE }
me1[100].setup = function(arg1) -- line 258
    arg1.off = TRUE
end
me1[100].response = function(arg1) -- line 261
    arg1.off = TRUE
    meche:say_line("/momc018/")
    meche:play_chore_looping(meche_sit_tap_fingers)
end
me1[115] = { text = "/moma019/", first_meche_node = TRUE }
me1[115].response = function(arg1) -- line 268
    arg1.off = TRUE
    me1.node = "birthmark_node"
    meche:say_line("/momc020/")
    meche:play_chore(meche_sit_nod)
end
me1[120] = { text = "/moma021/", first_meche_node = TRUE }
me1[120].response = function(arg1) -- line 277
    arg1.off = TRUE
    me1[130].off = FALSE
    me1.node = "ask_node"
    meche:say_line("/momc022/")
    meche:play_chore(meche_sit_nod)
end
me1[130] = { text = "/moma023/", first_meche_node = TRUE }
me1[130].off = TRUE
me1[130].response = function(arg1) -- line 287
    me1.node = "ask_node"
    meche:say_line("/momc024/")
    meche:play_chore(meche_sit_squeeze_purse)
end
me1.exit_lines.first_meche_node = { text = "/moma025/" }
me1.exit_lines.first_meche_node.response = function(arg1) -- line 295
    me1.node = "exit_dialog"
    meche:say_line("/momc026/")
    meche:play_chore(meche_sit_look_down_in)
    if not me1.exited then
        me1.exited = TRUE
        wait_for_message()
        mo:current_setup(mo_mnycu)
        manny:say_line("/moma027/")
        wait_for_message()
        manny:head_look_at_point(1.09287, 1.6884, 0.3874)
        manny:say_line("/moma028/")
    end
end
me1.aborts.first_meche_node = function(arg1) -- line 311
    me1.talked_out = TRUE
    me1:clear()
    mo:current_setup(mo_mnycu)
    if system.locale == "EN_USA" then
        manny:say_line("/moma029/")
    else
        manny:say_line("/moma025/")
    end
    manny:wait_for_message()
    me1.exit_lines.first_meche_node.response()
end
me1[200] = { text = "/moma030/", birthmark_node = TRUE }
me1[200].response = function(arg1) -- line 326
    arg1.off = TRUE
    me1.node = "first_meche_node"
    meche:say_line("/momc031/")
    meche:play_chore(meche_sit_scoot_out)
    wait_for_message()
    meche:play_chore(meche_sit_scoot_in)
end
me1[210] = { text = "/moma032/", birthmark_node = TRUE }
me1[210].response = function(arg1) -- line 337
    arg1.off = TRUE
    me1.node = "first_meche_node"
    meche:say_line("/momc033/")
    meche:play_chore(meche_sit_look_around)
end
me1[220] = { text = "/moma034/", birthmark_node = TRUE }
me1[220].response = function(arg1) -- line 345
    arg1.off = TRUE
    me1.node = "exit_dialog"
    meche:say_line("/momc035/")
    meche:play_chore(meche_sit_look_around)
end
me1[300] = { text = "/moma036/", ask_node = TRUE }
me1[300].response = function(arg1) -- line 354
    arg1.off = TRUE
    me1[310].off = FALSE
    meche:say_line("/momc037/")
end
me1[310] = { text = "/moma038/", ask_node = TRUE }
me1[310].off = TRUE
me1[310].response = function(arg1) -- line 362
    arg1.off = TRUE
    me1[320].off = FALSE
    meche:say_line("/momc039/")
    meche:play_chore(meche_sit_look_down_in)
    meche:wait_for_chore()
    meche:play_chore(meche_sit_look_tilt_in)
    meche:wait_for_chore()
    meche:play_chore(meche_sit_look_to_base)
end
me1[320] = { text = "/moma040/", ask_node = TRUE }
me1[320].off = TRUE
me1[320].response = function(arg1) -- line 375
    arg1.off = TRUE
    meche:say_line("/momc041/")
    meche:play_chore(meche_sit_to_chin)
    wait_for_message()
    meche:play_chore(meche_sit_hand_down)
    meche:wait_for_chore()
end
me1[330] = { text = "/moma042/", ask_node = TRUE }
me1[330].response = function(arg1) -- line 385
    arg1.off = TRUE
    meche:say_line("/momc043/")
    meche:play_chore(meche_sit_to_chin)
    wait_for_message()
    mo:current_setup(mo_mnycu)
    manny:say_line("/moma044/")
    wait_for_message()
    mo:current_setup(mo_mcecu)
    meche:say_line("/momc045/")
    sleep_for(1200)
    meche:play_chore(meche_sit_in_gesture_2)
    meche:wait_for_chore()
    meche:play_chore(meche_sit_gesture_2_hold)
    wait_for_message()
    mo:current_setup(mo_mnycu)
    manny:say_line("/moma046/")
end
me1[340] = { text = "/moma047/", ask_node = TRUE }
me1[340].response = function(arg1) -- line 405
    arg1.off = TRUE
    meche:say_line("/momc048/")
    meche:play_chore(meche_sit_lean_fwd)
    wait_for_message()
    meche:say_line("/momc049/")
    meche:play_chore(meche_sit_lean_rt)
    wait_for_message()
    mo:current_setup(mo_mnycu)
    manny:say_line("/moma050/")
end
me1[350] = { text = "/moma051/", ask_node = TRUE }
me1[350].response = function(arg1) -- line 418
    arg1.off = TRUE
    meche:say_line("/momc052/")
    meche:play_chore(meche_sit_adj_skirt)
    wait_for_message()
    mo:current_setup(mo_mnycu)
    manny:say_line("/moma053/")
    wait_for_message()
    mo:current_setup(mo_mcecu)
    meche:wait_for_chore()
    meche:say_line("/momc054/")
    meche:play_chore(meche_sit_to_chin)
    wait_for_message()
    meche:say_line("/momc055/")
    meche:play_chore(meche_sit_to_gesture_1)
    wait_for_message()
    mo:current_setup(mo_mnycu)
    manny:say_line("/moma056/")
end
me1[360] = { text = "/moma057/", ask_node = TRUE }
me1[360].response = function(arg1) -- line 440
    arg1.off = TRUE
    meche:say_line("/momc058/")
    meche:play_chore(meche_sit_scoot_out)
    meche:wait_for_chore()
    meche:play_chore(meche_sit_head_tap_in)
    meche:wait_for_chore()
    meche:play_chore(meche_sit_head_tap_loop)
    meche:wait_for_chore()
    meche:play_chore(meche_sit_head_tap_loop)
    meche:wait_for_chore()
    meche:play_chore(meche_sit_head_tap_out)
    meche:wait_for_chore()
    meche:play_chore(meche_sit_scoot_in)
    wait_for_message()
    mo:current_setup(mo_mnycu)
    manny:say_line("/moma059/")
    wait_for_message()
    mo:current_setup(mo_mcecu)
    meche:say_line("/momc060/")
    meche:play_chore(meche_sit_squeeze_purse)
end
me1[370] = { text = "/moma061/", ask_node = TRUE }
me1[370].response = function(arg1) -- line 464
    arg1.off = TRUE
    meche:say_line("/momc062/")
    meche:play_chore(meche_sit_tap_fingers)
end
me1[380] = { text = "/moma063/", ask_node = TRUE }
me1[380].response = function(arg1) -- line 471
    arg1.off = TRUE
    meche:say_line("/momc064/")
    meche:play_chore(meche_sit_lean_fwd)
    wait_for_message()
    mo:current_setup(mo_mnycu)
    manny:say_line("/moma065/")
end
me1.exit_lines.ask_node = { text = "/moma066/" }
me1.exit_lines.ask_node.response = function(arg1) -- line 481
    me1.node = "first_meche_node"
    meche:say_line("/momc067/")
    meche:play_chore(meche_sit_look_down_in)
    wait_for_message()
end
me1.aborts.ask_node = function(arg1) -- line 488
    PrintDebug("Aborting the ask node.\n")
    me1:clear()
    me1[130].off = TRUE
    me1:execute_line(me1.exit_lines.ask_node)
end
me1.outro = function(arg1) -- line 495
    single_start_script(meche.new_run_idle, meche, "base")
    meche.stop_idle = FALSE
    single_start_script(mo.meche_looks_at_manny_when_he_talks)
    cameraman_disabled = FALSE
    mo:manny_two_shot_mark()
    mo:current_setup(mo_ddtws)
end
me1[999] = "EOD"
CheckFirstTime("dlg_membrillo.lua")
mb1 = Dialog:create()
mb1.intro = function(arg1) -- line 12
    mb1.node = "first_membrillo_node"
    wait_for_message()
    start_script(mg.membrillo_stop_at_corpse_2, mg)
    if not mb1.talked then
        mb1.talked = TRUE
        manny:twist_head_gesture(TRUE)
        manny:hand_gesture(TRUE)
        manny:say_line("/mgma001/")
        manny:wait_for_message()
        membrillo:say_line("/mgme003/")
    end
    wait_for_script(mg.membrillo_stop_at_corpse_2)
end
mb1[100] = { text = "/mgma004/", first_membrillo_node = TRUE }
mb1[100].response = function(arg1) -- line 29
    arg1.off = TRUE
    membrillo:say_line("/mgme005/")
    membrillo:wait_for_message()
    membrillo:say_line("/mgme006/")
    membrillo:wait_for_message()
    membrillo:say_line("/mgme007/")
end
mb1[110] = { text = "/mgma008/", first_membrillo_node = TRUE, gesture = manny.head_forward_gesture }
mb1[110].response = function(arg1) -- line 39
    arg1.off = TRUE
    mb1[140].off = FALSE
    if not membrillo.detecting then
        membrillo:stop_chore(membrillo_lookat_manny, "membrillo.cos")
        membrillo:run_chore(membrillo_lkma_to_rest, "membrillo.cos")
    end
    membrillo:say_line("/mgme009/")
    if not membrillo.detecting then
        membrillo:run_chore(membrillo_rest_to_work, "membrillo.cos")
    end
    membrillo:wait_for_message()
    membrillo:say_line("/mgme010/")
    if not membrillo.detecting then
        membrillo:stop_chore(membrillo_rest_to_work, "membrillo.cos")
        membrillo:play_chore(membrillo_work_start_to_end, "membrillo.cos")
    end
    membrillo:wait_for_message()
    membrillo:say_line("/mgme011/")
    membrillo:wait_for_message()
    if membrillo.detecting then
        membrillo:say_line("/mgme012/")
    else
        membrillo:wait_for_chore(membrillo_work_start_to_end, "membrillo.cos")
        membrillo:say_line("/mgme013/")
        membrillo:run_chore(membrillo_wk_to_lk_tool, "membrillo.cos")
        membrillo:wait_for_message()
        membrillo:stop_chore(membrillo_wk_to_lk_tool, "membrillo.cos")
        membrillo:run_chore(membrillo_lktl_to_rest, "membrillo.cos")
        membrillo:stop_chore(membrillo_lktl_to_rest, "membrillo.cos")
        membrillo:run_chore(membrillo_rest_to_lkma, "membrillo.cos")
        membrillo:stop_chore(membrillo_rest_to_lkma, "membrillo.cos")
        membrillo:play_chore_looping(membrillo_lookat_manny, "membrillo.cos")
    end
end
mb1[120] = { text = "/mgma014/", first_membrillo_node = TRUE, gesture = manny.shrug_gesture }
mb1[120].response = function(arg1) -- line 77
    local local1, local2, local3
    arg1.off = TRUE
    mb1[130].off = FALSE
    membrillo:say_line("/mgme015/")
    if not membrillo.detecting then
        membrillo:stop_chore(membrillo_lookat_manny, "membrillo.cos")
        membrillo:run_chore(membrillo_lkma_to_rest, "membrillo.cos")
        membrillo:run_chore(membrillo_rest_to_work, "membrillo.cos")
        membrillo:stop_chore(membrillo_rest_to_work, "membrillo.cos")
        membrillo:play_chore(membrillo_work_start_to_end, "membrillo.cos")
    end
    membrillo:wait_for_message()
    manny:head_forward_gesture()
    sleep_for(1000)
    local1, local2, local3 = GetActorNodeLocation(membrillo.hActor, 20)
    manny:head_look_at_point(local1, local2, local3)
    sleep_for(1000)
    if not membrillo.detecting then
        membrillo:wait_for_chore(membrillo_work_start_to_end, "membrillo.cos")
        membrillo:run_chore(membrillo_wkend_to_rest, "membrillo.cos")
    end
    membrillo:say_line("/mgme016/")
    if not membrillo.detecting then
        membrillo:stop_chore(membrillo_wkend_to_rest, "membrillo.cos")
        membrillo:run_chore(membrillo_rest_to_lkma, "membrillo.cos")
        membrillo:stop_chore(membrillo_rest_to_lkma, "membrillo.cos")
        membrillo:play_chore_looping(membrillo_lookat_manny, "membrillo.cos")
    end
    membrillo:wait_for_message()
    manny:head_look_at(mg.membrillo_obj)
    manny:twist_head_gesture()
    manny:say_line("/mgma017/")
    manny:wait_for_message()
    membrillo:say_line("/mgme018/")
end
mb1[130] = { text = "/mgma019/", first_membrillo_node = TRUE }
mb1[130].off = TRUE
mb1[130].response = function(arg1) -- line 117
    arg1.off = TRUE
    membrillo:say_line("/mgme020/")
    membrillo:wait_for_message()
    membrillo:say_line("/mgme021/")
    membrillo:wait_for_message()
    membrillo:say_line("/mgme022/")
    if not membrillo.detecting then
        membrillo:stop_chore(membrillo_lookat_manny, "membrillo.cos")
        membrillo:run_chore(membrillo_lkma_to_rest, "membrillo.cos")
    end
    membrillo:wait_for_message()
    manny:twist_head_gesture()
    manny:say_line("/mgma023/")
    manny:wait_for_message()
    if not membrillo.detecting then
        membrillo:stop_chore(membrillo_lkma_to_rest, "membrillo.cos")
        membrillo:run_chore(membrillo_rest_to_lkma, "membrillo.cos")
    end
    membrillo:say_line("/mgme024/")
    if not membrillo.detecting then
        membrillo:play_chore_looping(membrillo_lookat_manny, "membrillo.cos")
    end
end
mb1[140] = { text = "/mgma025/", first_membrillo_node = TRUE }
mb1[140].off = TRUE
mb1[140].response = function(arg1) -- line 145
    arg1.off = TRUE
    membrillo:say_line("/mgme026/")
    membrillo:wait_for_message()
    membrillo:say_line("/mgme027/")
    if not membrillo.detecting then
        membrillo:stop_chore(membrillo_lookat_manny, "membrillo.cos")
        membrillo:run_chore(membrillo_lkma_to_rest, "membrillo.cos")
        membrillo:stop_chore(membrillo_lkma_to_rest, "membrillo.cos")
        membrillo:run_chore(membrillo_rest_to_work, "membrillo.cos")
    end
    membrillo:wait_for_message()
    membrillo:say_line("/mgme028/")
    if not membrillo.detecting then
        membrillo:stop_chore(membrillo_rest_to_work, "membrillo.cos")
        membrillo:run_chore(membrillo_work_start_to_end, "membrillo.cos")
        membrillo:stop_chore(membrillo_work_start_to_end, "membrillo.cos")
        membrillo:run_chore(membrillo_wkend_to_rest, "membrillo.cos")
    end
    membrillo:wait_for_message()
    membrillo:say_line("/mgme029/")
    if not membrillo.detecting then
        membrillo:stop_chore(membrillo_wkend_to_rest, "membrillo.cos")
        membrillo:run_chore(membrillo_rest_to_lkma, "membrillo.cos")
        membrillo:stop_chore(membrillo_rest_to_lkma, "membrillo.cos")
        membrillo:play_chore_looping(membrillo_lookat_manny, "membrillo.cos")
    end
    membrillo:wait_for_message()
    manny:tilt_head_gesture()
    manny:say_line("/mgma030/")
    manny:wait_for_message()
    manny:say_line("/mgma031/")
end
mb1[150] = { text = "/mgma032/", first_membrillo_node = TRUE, gesture = manny.hand_gesture }
mb1[150].response = function(arg1) -- line 181
    arg1.off = TRUE
    mb1[160].off = FALSE
    manny:shrug_gesture()
    manny:say_line("/mgma033/")
    manny:wait_for_message()
    membrillo:say_line("/mgme034/")
    membrillo:wait_for_message()
    membrillo:say_line("/mgme035/")
end
mb1[160] = { text = "/mgma036/", first_membrillo_node = TRUE, gesture = manny.head_forward_gesture }
mb1[160].off = TRUE
mb1[160].response = function(arg1) -- line 194
    arg1.off = TRUE
    membrillo:say_line("/mgme037/")
    if not membrillo.detecting then
        membrillo:stop_chore(membrillo_lookat_manny, "membrillo.cos")
        membrillo:run_chore(membrillo_lkma_to_rest, "membrillo.cos")
        membrillo:run_chore(membrillo_rest_to_work, "membrillo.cos")
        membrillo:play_chore(membrillo_work_start_to_end, "membrillo.cos")
    end
    membrillo:wait_for_message()
    manny:hand_gesture(TRUE)
    manny:tilt_head_gesture(TRUE)
    manny:say_line("/mgma038/")
    manny:wait_for_message()
    membrillo:say_line("/mgme039/")
    if not membrillo.detecting then
        membrillo:wait_for_chore(membrillo_work_start_to_end, "membrillo.cos")
        membrillo:stop_chore(membrillo_work_start_to_end, "membrillo.cos")
        membrillo:run_chore(membrillo_wkend_to_rest, "membrillo.cos")
        membrillo:stop_chore(membrillo_wkend_to_rest, "membrillo.cos")
    end
    membrillo:wait_for_message()
    membrillo:say_line("/mgme040/")
    if not membrillo.detecting then
        membrillo:run_chore(membrillo_rest_to_lkma, "membrillo.cos")
        membrillo:stop_chore(membrillo_rest_to_lkma, "membrillo.cos")
        membrillo:play_chore_looping(membrillo_lookat_manny, "membrillo.cos")
    end
end
mb1.exit_lines.first_membrillo_node = { text = "/mgma041/" }
mb1.exit_lines.first_membrillo_node.response = function(arg1) -- line 225
    mb1.node = "exit_dialog"
    if find_script(mg.membrillo_face_manny) then
        wait_for_script(mg.membrillo_face_manny)
    end
    membrillo.facing_manny = TRUE
    start_script(mg.membrillo_stop_face_manny, mg)
    membrillo:say_line("/mgme042/")
    membrillo.stop_walking = FALSE
end
mb1.aborts.first_membrillo_node = function(arg1) -- line 236
    mb1:clear()
    mb1:execute_line(mb1.exit_lines.first_membrillo_node)
end
CheckFirstTime("dlg_mic.lua")
mi1 = Dialog:create()
mi1.focus = bi.mic
mi1.display_lines = function(arg1) -- line 13
    local local1
    local local2 = 0
    local local3 = { }
    local local4
    local local5 = arg1.node
    local local6 = arg1.exit_lines[local5]
    if local5 ~= "poem_node" then
        Dialog.display_lines(mi1)
    else
        arg1.selected_line = 1
        arg1.next_line = 1
        arg1.ypos = arg1.start_y
        if local6 then
            local4 = arg1.max_line
        else
            local4 = arg1.max_line + 1
        end
        repeat
            local1 = pick_from_nonweighted_table(mi1.poetry_lines)
            if not local3[local1] then
                local3[local1] = TRUE
                local1.response = mi1.poetry_response
                arg1:set_line(local1)
                local2 = local2 + 1
            end
        until arg1.next_line >= local4
        if local6 then
            arg1:set_line(local6)
        end
        system.buttonHandler = arg1
    end
end
mi1.intro = function(arg1) -- line 51
    mi1.node = "first_mic_node"
    manny:say_line("/bima106/")
    enable_head_control(FALSE)
    manny:head_look_at(nil)
    if si.been_there then
        mi1[140].off = TRUE
    end
    if got_tools then
        mi1[130].off = TRUE
    end
    if got_union_card then
        mi1[150].off = TRUE
    end
end
mi1.outro = function(arg1) -- line 69
    enable_head_control(FALSE)
end
mi1[100] = { text = "/bima107/", first_mic_node = TRUE, gesture = manny.hand_gesture }
mi1[100].response = function(arg1) -- line 74
    arg1.off = TRUE
    music_state:set_state(stateBI_POE)
    manny:head_look_at(bi.patrons3)
    sleep_for(1000)
    manny:head_look_at(bi.patrons1)
    sleep_for(1000)
    manny:head_look_at(bi.patrons2)
    sleep_for(1000)
    manny:head_look_at(bi.mic)
    manny:say_line("/bima108/")
    wait_for_message()
    manny:head_look_at(nil)
    music_state:update()
end
mi1[110] = { text = "/bima109/", first_mic_node = TRUE, gesture = manny.head_forward_gesture }
mi1[110].response = function(arg1) -- line 92
    music_state:set_state(stateBI_POE)
    arg1.text = "/bima110/"
    if bi.last_poem and not bi.commies.befriended then
        start_script(bi.one_hiss)
    end
    bi.last_poem = { }
    bi.poem_line = 0
    mi1.node = "poem_node"
end
mi1[120] = { text = "/bima111/", first_mic_node = TRUE, gesture = manny.hand_gesture }
mi1[120].response = function(arg1) -- line 104
    arg1.off = TRUE
    bi:alexi_talking()
    alexi:say_line("/bial113/")
    wait_for_message()
    manny:shrug_gesture()
    manny:say_line("/bima112/")
    wait_for_message()
    bi:alexi_not_talking()
    gunnar:say_line("/bigu114/")
    wait_for_message()
    slisko:say_line("/bisl115/")
    wait_for_message()
    slisko:say_line("/bisl116/")
end
mi1[130] = { text = "/bima117/", first_mic_node = TRUE, gesture = manny.head_forward_gesture }
mi1[130].response = function(arg1) -- line 121
    arg1.off = TRUE
    if bi.commies.befriended then
        gunnar:say_line("/bigu118/")
    else
        bi:alexi_talking()
        alexi:say_line("/bial119/")
        wait_for_message()
        bi:alexi_not_talking()
        slisko:say_line("/bisl120/")
    end
end
mi1[140] = { text = "/bima121/", first_mic_node = TRUE }
mi1[140].response = function(arg1) -- line 135
    arg1.off = TRUE
    gunnar:say_line("/bigu122/")
    wait_for_message()
    alexi:say_line("/bial123/")
end
mi1[150] = { text = "/bima124/", first_mic_node = TRUE, gesture = manny.tilt_head_gesture }
mi1[150].response = function(arg1) -- line 143
    arg1.off = TRUE
    gunnar:say_line("/bigu125/")
    wait_for_message()
    bi:alexi_talking()
    alexi:say_line("/bial126/")
    wait_for_message()
    bi:alexi_not_talking()
end
mi1.exit_lines.first_mic_node = { text = "/bima127/", gesture = manny.hand_gesture }
mi1.exit_lines.first_mic_node.response = function(arg1) -- line 154
    arg1.off = TRUE
    mi1.node = "exit_dialog"
end
mi1.exit_lines.poem_node = { text = "/bima128/" }
mi1.exit_lines.poem_node.response = function(arg1) -- line 160
    arg1.off = TRUE
    mi1.node = "exit_dialog"
    bi.just_read_poem = TRUE
    bi.copied_last_poem = FALSE
    bi.play_bongos(TRUE)
    if bi.commies.befriended then
        start_script(bi.snap)
        gunnar:say_line("/bigu129/")
    else
        slisko:say_line("/bisl131/", { background = TRUE })
        sleep_for(200)
        gunnar:say_line("/bigu133/", { background = TRUE })
        sleep_for(300)
        manny:hand_gesture()
        manny:say_line("/bima132/")
        alexi:say_line("/bial130/", { background = TRUE })
        alexi:wait_for_message()
        alexi:say_line("/bial130/", { background = TRUE })
    end
    music_state:update()
    wait_for_message()
end
mi1.poetry_lines = { { text = "/bima133/", line_num = 1 }, { text = "/bima134/", line_num = 2 }, { text = "/bima135/", line_num = 3 }, { text = "/bima136/", line_num = 4 }, { text = "/bima137/", line_num = 5 }, { text = "/bima138/", line_num = 6 }, { text = "/bima139/", line_num = 7 }, { text = "/bima140/", line_num = 8 }, { text = "/bima141/", line_num = 9 }, { text = "/bima142/", line_num = 10 }, { text = "/bima143/", line_num = 11 }, { text = "/bima144/", line_num = 12 }, { text = "/bima145/", line_num = 13 }, { text = "/bima146/", line_num = 14 }, { text = "/bima147/", line_num = 15 }, { text = "/bima148/", line_num = 16 }, { text = "/bima149/", line_num = 17 }, { text = "/bima150/", line_num = 18 }, { text = "/bima151/", line_num = 19 }, { text = "/bima152/", line_num = 20 }, { text = "/bima153/", line_num = 21 }, { text = "/bima154/", line_num = 22 }, { text = "/bima155/", line_num = 23 }, { text = "/bima156/", line_num = 24 }, { text = "/bima157/", line_num = 25 }, { text = "/bima158/", line_num = 26 }, { text = "/bima159/", line_num = 27 }, { text = "/bima160/", line_num = 28 }, { text = "/bima161/", line_num = 29 }, { text = "/bima162/", line_num = 30 }, { text = "/bima163/", line_num = 31 }, { text = "/bima164/", line_num = 32 }, { text = "/bima165/", line_num = 33 }, { text = "/bima166/", line_num = 34 }, { text = "/bima167/", line_num = 35 }, { text = "/bima168/", line_num = 36 }, { text = "/bima169/", line_num = 37 }, { text = "/bima170/", line_num = 38 }, { text = "/bima171/", line_num = 39 }, { text = "/bima172/", line_num = 40 }, { text = "/bima173/", line_num = 41 }, { text = "/bima174/", line_num = 42 }, { text = "/bima175/", line_num = 43 }, { text = "/bima176/", line_num = 44 }, { text = "/bima177/", line_num = 45 }, { text = "/bima178/", line_num = 46 }, { text = "/bima179/", line_num = 47 }, { text = "/bima180/", line_num = 48 }, { text = "/bima181/", line_num = 49 }, { text = "/bima182/", line_num = 50 }, { text = "/bima183/", line_num = 51 }, { text = "/bima184/", line_num = 52 }, { text = "/bima185/", line_num = 53 }, { text = "/bima186/", line_num = 54 }, { text = "/bima187/", line_num = 55 }, { text = "/bima188/", line_num = 56 }, { text = "/bima189/", line_num = 57 }, { text = "/bima190/", line_num = 58 }, { text = "/bima191/", line_num = 59 }, { text = "/bima192/", line_num = 60 }, { text = "/bima194/", line_num = 61 }, { text = "/bima195/", line_num = 62 }, { text = "/bima196/", line_num = 63 }, { text = "/bima197/", line_num = 64 }, { text = "/bima198/", line_num = 65 }, { text = "/bima199/", line_num = 66 }, { text = "/bima200/", line_num = 67 }, { text = "/bima201/", line_num = 68 }, { text = "/bima202/", line_num = 69 }, { text = "/bima203/", line_num = 70 }, { text = "/bima204/", line_num = 71 }, { text = "/bima205/", line_num = 72 }, { text = "/bima206/", line_num = 73 }, { text = "/bima207/", line_num = 74 }, { text = "/bima208/", line_num = 75 }, { text = "/bima209/", line_num = 76 }, { text = "/bima210/", line_num = 77 }, { text = "/bima211/", line_num = 78 }, { text = "/bima212/", line_num = 79 }, { text = "/bima213/", line_num = 80 }, { text = "/bima214/", line_num = 81 }, { text = "/bima215/", line_num = 82 }, { text = "/bima216/", line_num = 83 }, { text = "/bima217/", line_num = 84 }, { text = "/bima218/", line_num = 85 }, { text = "/bima219/", line_num = 86 } }
mi1.poetry_response = function(arg1) -- line 273
    bi.last_poem[bi.poem_line] = arg1.line_num
    bi.poem_line = bi.poem_line + 1
    if arg1.line_num == 57 and skinny_girl.passed_out then
        manny:head_look_at(bi.patrons2)
        start_script(bi.patrons2.wake_up, bi.patrons2)
        sleep_for(3000)
        manny:head_look_at(nil)
    end
    if rndint(2) == 1 then
        bi.play_bongos(TRUE)
    end
end
mi1[999] = "EOD"
CheckFirstTime("dlg_olivia.lua")
ol1 = Dialog:create()
ol1.focus = bi.olivia_obj
ol1.poem_count = 0
ol1.execute_line = function(arg1, arg2) -- line 14
    if arg1.current_choices[arg2] == ol1[134] then
        ol1[134].text = "/bima242/"
    end
    start_script(Dialog.execute_line, ol1, arg2)
    manny:wait_for_message()
    while olivia.last_chore ~= olivia_idles_gest do
        break_here()
    end
    single_start_script(olivia.new_run_idle, olivia, "gest", olivia.dialog_idle_table, "olivia_idles.cos")
end
ol1.display_lines = function(arg1) -- line 26
    arg1.parent.display_lines(ol1)
    while olivia.last_chore ~= olivia_idles_gest do
        break_here()
    end
    stop_script(olivia.new_run_idle)
end
ol1.intro = function(arg1) -- line 38
    ol1.node = "first_olivia_node"
    bi:current_setup(bi_olvcu)
    start_script(olivia.head_follow_mesh, olivia, manny, 6)
    manny:walk_closeto_object(bi.olivia_obj, 0.2)
end
ol1[100] = { text = "/bima224/", first_olivia_node = TRUE }
ol1[100].response = function(arg1) -- line 48
    arg1.off = TRUE
    ol1[110].off = FALSE
    olivia:say_line("/biol225/")
end
ol1[110] = { text = "/bima226/", first_olivia_node = TRUE }
ol1[110].off = TRUE
ol1[110].response = function(arg1) -- line 56
    arg1.off = TRUE
    olivia:say_line("/biol227/")
    wait_for_message()
    olivia:say_line("/biol228/")
end
ol1[120] = { text = "/bima229/", first_olivia_node = TRUE }
ol1[120].response = function(arg1) -- line 64
    arg1.off = TRUE
    ol1[130].off = FALSE
    olivia:say_line("/biol230/")
    wait_for_message()
    olivia:say_line("/biol231/")
    wait_for_message()
    olivia:say_line("/biol232/")
end
ol1[130] = { text = "/bima233/", first_olivia_node = TRUE }
ol1[130].off = TRUE
ol1[130].response = function(arg1) -- line 76
    arg1.off = TRUE
    olivia:say_line("/biol234/")
end
ol1[131] = { text = "/bima235/", first_olivia_node = TRUE }
ol1[131].response = function(arg1) -- line 82
    arg1.off = TRUE
    ol1[132].off = FALSE
    olivia:say_line("/biol236/")
    wait_for_message()
end
ol1[132] = { text = "/bima237/", first_olivia_node = TRUE }
ol1[132].off = TRUE
ol1[132].response = function(arg1) -- line 91
    arg1.off = TRUE
    ol1[134].off = FALSE
    olivia:say_line("/biol238/")
    wait_for_message()
    olivia:say_line("/biol239/")
    wait_for_message()
    olivia:say_line("/biol240/")
end
ol1[134] = { text = "/bima241/", first_olivia_node = TRUE }
ol1[134].off = TRUE
ol1[134].response = function(arg1) -- line 103
    arg1.off = TRUE
    ol1[136].off = FALSE
    ol1:read_poem()
end
ol1[136] = { text = "/bima243/", first_olivia_node = TRUE }
ol1[136].off = TRUE
ol1[136].response = function(arg1) -- line 111
    if ol1.poemed_out then
        ol1.poemed_out = FALSE
        ol1.poem_count = 0
        olivia:say_line("/biol244/")
        wait_for_message()
        manny:say_line("/bima245/")
        wait_for_message()
        olivia:say_line("/biol246/")
        wait_for_message()
    end
    ol1:read_poem()
end
ol1[140] = { text = "/bima247/", first_olivia_node = TRUE }
ol1[140].response = function(arg1) -- line 126
    arg1.off = TRUE
    olivia:say_line("/biol248/")
    wait_for_message()
    manny:say_line("/bima249/")
end
ol1[150] = { text = "/bima250/", first_olivia_node = TRUE }
ol1[150].response = function(arg1) -- line 134
    arg1.off = TRUE
    ol1[160].off = FALSE
    olivia:say_line("/biol251/")
    wait_for_message()
    olivia:say_line("/biol252/")
end
ol1[160] = { text = "/bima253/", first_olivia_node = TRUE }
ol1[160].off = TRUE
ol1[160].response = function(arg1) -- line 144
    arg1.off = TRUE
    ol1.node = "leaving"
    olivia:say_line("/biol254/")
    wait_for_message()
    olivia:say_line("/biol255/")
    wait_for_message()
    olivia:say_line("/biol256/")
end
ol1[170] = { text = "/bima257/", leaving = TRUE }
ol1[170].response = function(arg1) -- line 155
    olivia:say_line("/biol258/")
    wait_for_message()
    olivia:say_line("/biol259/")
    wait_for_message()
    ol1[180]:response()
end
ol1[180] = { text = "/bima260/", leaving = TRUE }
ol1[180].response = function(arg1) -- line 164
    ol1.node = "first_olivia_node"
    olivia:say_line("/biol261/")
    wait_for_message()
    olivia:say_line("/biol262/")
    wait_for_message()
    sleep_for(500)
    olivia:say_line("/biol263/")
end
ol1.exit_lines.first_olivia_node = { text = "/bima264/", first_olivia_node = TRUE }
ol1.exit_lines.first_olivia_node.response = function(arg1) -- line 175
    ol1.node = "exit_dialog"
    olivia:say_line("/biol265/")
end
ol1.aborts.first_olivia_node = function(arg1) -- line 180
    ol1:clear()
    ol1:execute_line(ol1.exit_lines.first_olivia_node)
end
ol1.read_poem = function(arg1) -- line 185
    local local1 = 0
    olivia:say_line("/biol266/")
    wait_for_message()
    bi.olivia_takes_stage()
    break_here()
    music_state:set_state(stateBI_POE)
    if bi.just_read_poem and not bi.copied_last_poem and bi.poem_line > 0 then
        bi.olivia_just_copied = TRUE
        bi.copied_last_poem = TRUE
        repeat
            olivia:say_line(ol1.poetry_lines[bi.last_poem[local1]])
            wait_for_message()
            if rndint(2) == 1 then
                bi.play_bongos()
                sleep_for(750)
            end
            if bi.last_poem[local1] == 57 and skinny_girl.passed_out then
                olivia:head_look_at(bi.patrons2)
                start_script(bi.patrons2.wake_up, bi.patrons2)
                sleep_for(3000)
                olivia:head_look_at(nil)
            end
            local1 = local1 + 1
            sleep_for(800 * random())
        until local1 >= bi.poem_line
    else
        ol1.poem_count = ol1.poem_count + 1
        if ol1.poem_count == 1 then
            olivia:say_line("/biol267/")
            wait_for_message()
            olivia:say_line("/biol268/")
            wait_for_message()
            olivia:say_line("/biol269/")
            wait_for_message()
            bi.play_bongos()
            sleep_for(750)
            olivia:say_line("/biol270/")
            wait_for_message()
            olivia:say_line("/biol271/")
            wait_for_message()
            olivia:say_line("/biol272/")
            wait_for_message()
            olivia:say_line("/biol273/")
            wait_for_message()
            olivia:say_line("/biol274/")
            bi.play_bongos()
            sleep_for(750)
        elseif ol1.poem_count == 2 then
            olivia:say_line("/biol275/")
            wait_for_message()
            olivia:say_line("/biol276/")
            wait_for_message()
            olivia:say_line("/biol277/")
            wait_for_message()
            olivia:say_line("/biol278/")
            wait_for_message()
            olivia:say_line("/biol279/")
            wait_for_message()
            olivia:say_line("/biol280/")
            wait_for_message()
            olivia:say_line("/biol281/")
            wait_for_message()
            olivia:say_line("/biol282/")
            wait_for_message()
            bi.play_bongos()
            sleep_for(750)
            olivia:say_line("/biol283/")
            wait_for_message()
            olivia:say_line("/biol284/")
            wait_for_message()
            olivia:say_line("/biol285/")
            wait_for_message()
            olivia:say_line("/biol286/")
        elseif ol1.poem_count == 3 then
            olivia:say_line("/biol287/")
            wait_for_message()
            olivia:say_line("/biol288/")
            wait_for_message()
            bi.play_bongos()
            sleep_for(750)
            olivia:say_line("/biol289/")
            wait_for_message()
            olivia:say_line("/biol290/")
            wait_for_message()
            olivia:say_line("/biol291/")
        elseif ol1.poem_count == 4 then
            ol1.poemed_out = TRUE
            olivia:say_line("/biol292/")
            wait_for_message()
            sleep_for(1000)
            olivia:say_line("/biol293/")
            wait_for_message()
            olivia:say_line("/biol294/")
            wait_for_message()
            olivia:say_line("/biol295/")
            wait_for_message()
            bi.play_bongos()
            sleep_for(750)
            olivia:say_line("/biol296/")
            wait_for_message()
            olivia:say_line("/biol297/")
            wait_for_message()
            olivia:say_line("/biol298/")
            wait_for_message()
            olivia:say_line("/biol299/")
            wait_for_message()
            bi.play_bongos()
            sleep_for(750)
            olivia:say_line("/biol300/")
        end
    end
    stop_script(olivia.new_run_idle)
    olivia:wait_for_message()
    olivia:stop_chore(nil, "olivia_idles.cos")
    start_script(bi.snap)
    break_here()
    olivia:follow_boxes()
    olivia:walkto(-0.207802, -1.84426, 0.151924, 0, 170.47501, 0)
    wait_for_script(bi.snap)
    bi.olivia_leaves_stage()
    sleep_for(500)
    music_state:update()
    if bi.olivia_just_copied then
        bi.olivia_just_copied = FALSE
        if not bi.copy_count then
            bi.copy_count = 0
        end
        bi.copy_count = bi.copy_count + 1
        manny:say_line("/bima391/")
        wait_for_message()
        if bi.copy_count == 1 then
            olivia:say_line("/biol392/")
        elseif bi.copy_count == 2 then
            olivia:say_line("/biol393/")
        elseif bi.copy_count == 3 then
            olivia:say_line("/biol394/")
        else
            olivia:say_line("/biol395/")
        end
    else
        manny:say_line("/bima301/")
        wait_for_message()
        if not ol1.poemed_out then
            olivia:say_line("/biol302/")
        else
            olivia:say_line("/biol303/")
        end
    end
end
ol1.poetry_lines = { }
ol1.poetry_lines[1] = "/biol304/"
ol1.poetry_lines[2] = "/biol305/"
ol1.poetry_lines[3] = "/biol306/"
ol1.poetry_lines[4] = "/biol307/"
ol1.poetry_lines[5] = "/biol308/"
ol1.poetry_lines[6] = "/biol309/"
ol1.poetry_lines[7] = "/biol310/"
ol1.poetry_lines[8] = "/biol311/"
ol1.poetry_lines[9] = "/biol312/"
ol1.poetry_lines[10] = "/biol313/"
ol1.poetry_lines[11] = "/biol314/"
ol1.poetry_lines[12] = "/biol315/"
ol1.poetry_lines[13] = "/biol316/"
ol1.poetry_lines[14] = "/biol317/"
ol1.poetry_lines[15] = "/biol318/"
ol1.poetry_lines[16] = "/biol319/"
ol1.poetry_lines[17] = "/biol320/"
ol1.poetry_lines[18] = "/biol321/"
ol1.poetry_lines[19] = "/biol322/"
ol1.poetry_lines[20] = "/biol323/"
ol1.poetry_lines[21] = "/biol324/"
ol1.poetry_lines[22] = "/biol325/"
ol1.poetry_lines[23] = "/biol326/"
ol1.poetry_lines[24] = "/biol327/"
ol1.poetry_lines[25] = "/biol328/"
ol1.poetry_lines[26] = "/biol329/"
ol1.poetry_lines[27] = "/biol330/"
ol1.poetry_lines[28] = "/biol331/"
ol1.poetry_lines[29] = "/biol332/"
ol1.poetry_lines[30] = "/biol333/"
ol1.poetry_lines[31] = "/biol334/"
ol1.poetry_lines[32] = "/biol335/"
ol1.poetry_lines[33] = "/biol336/"
ol1.poetry_lines[34] = "/biol337/"
ol1.poetry_lines[35] = "/biol338/"
ol1.poetry_lines[36] = "/biol339/"
ol1.poetry_lines[37] = "/biol340/"
ol1.poetry_lines[38] = "/biol341/"
ol1.poetry_lines[39] = "/biol342/"
ol1.poetry_lines[40] = "/biol343/"
ol1.poetry_lines[41] = "/biol344/"
ol1.poetry_lines[42] = "/biol345/"
ol1.poetry_lines[43] = "/biol346/"
ol1.poetry_lines[44] = "/biol347/"
ol1.poetry_lines[45] = "/biol348/"
ol1.poetry_lines[46] = "/biol349/"
ol1.poetry_lines[47] = "/biol350/"
ol1.poetry_lines[48] = "/biol351/"
ol1.poetry_lines[49] = "/biol352/"
ol1.poetry_lines[50] = "/biol353/"
ol1.poetry_lines[51] = "/biol354/"
ol1.poetry_lines[52] = "/biol355/"
ol1.poetry_lines[53] = "/biol356/"
ol1.poetry_lines[54] = "/biol357/"
ol1.poetry_lines[55] = "/biol358/"
ol1.poetry_lines[56] = "/biol359/"
ol1.poetry_lines[57] = "/biol360/"
ol1.poetry_lines[58] = "/biol361/"
ol1.poetry_lines[59] = "/biol362/"
ol1.poetry_lines[60] = "/biol363/"
ol1.poetry_lines[61] = "/biol365/"
ol1.poetry_lines[62] = "/biol366/"
ol1.poetry_lines[63] = "/biol367/"
ol1.poetry_lines[64] = "/biol368/"
ol1.poetry_lines[65] = "/biol369/"
ol1.poetry_lines[66] = "/biol370/"
ol1.poetry_lines[67] = "/biol371/"
ol1.poetry_lines[68] = "/biol372/"
ol1.poetry_lines[69] = "/biol373/"
ol1.poetry_lines[70] = "/biol374/"
ol1.poetry_lines[71] = "/biol375/"
ol1.poetry_lines[72] = "/biol376/"
ol1.poetry_lines[73] = "/biol377/"
ol1.poetry_lines[74] = "/biol378/"
ol1.poetry_lines[75] = "/biol379/"
ol1.poetry_lines[76] = "/biol380/"
ol1.poetry_lines[77] = "/biol381/"
ol1.poetry_lines[78] = "/biol382/"
ol1.poetry_lines[79] = "/biol383/"
ol1.poetry_lines[80] = "/biol384/"
ol1.poetry_lines[81] = "/biol385/"
ol1.poetry_lines[82] = "/biol386/"
ol1.poetry_lines[83] = "/biol387/"
ol1.poetry_lines[84] = "/biol388/"
ol1.poetry_lines[85] = "/biol389/"
ol1.poetry_lines[86] = "/biol390/"
ol1.outro = function(arg1) -- line 439
    bi:current_setup(bi_kitdr)
    single_start_script(bi.idle_reds)
    single_start_script(bi.idle_beats)
    cameraman_disabled = FALSE
    stop_script(olivia.head_follow_mesh)
    olivia:switch_to_standing()
    olivia:head_look_at(nil)
end
sa2 = Dialog:create()
sa2.focus = hq.salvador_obj
sa2.intro = function(arg1) -- line 12
    sa2.node = "first_sal_node"
    if rf.eggs.owner == manny then
        sa2[100].off = FALSE
    end
    if salvador.got_eggs then
        sa2[100] = FALSE
        sa2[140] = FALSE
        sa2[210] = FALSE
        sa2[220] = FALSE
        sa2[230] = FALSE
        sa2[240] = FALSE
    end
    if sa2.talked_out then
        if rf.eggs.owner == manny then
            sa2[100].off = FALSE
        else
            sa2.node = "exit_dialog"
            if salvador.got_eggs then
                manny:say_line("/hqma045/")
                wait_for_message()
                salvador:say_line("/hqsa046/")
            else
                manny:hand_gesture()
                manny:say_line("/hqma047/")
                wait_for_message()
                wait_for_message()
                salvador:say_line("/hqsa049/")
                salvador:push_chore(sv_hq_idles_turn_l_hand_out)
                salvador:push_chore()
                wait_for_message()
                salvador:push_chore(sv_hq_idles_turn_back)
                salvador:push_chore()
                manny:shrug_gesture()
                manny:say_line("/hqma050/")
            end
        end
    end
end
sa2[100] = { text = "/hqma051/", first_sal_node = TRUE }
sa2[100].off = TRUE
sa2[100].response = function(arg1) -- line 57
    arg1.off = TRUE
    sa2.node = "exit_dialog"
    sa2.outro = nil
    manny:play_chore(ms_takeout_get, "ms.cos")
    sleep_for(500)
    manny:stop_chore(ms_takeout_get, "ms.cos")
    manny:play_chore(ms_takeout_eggs, "ms.cos")
    manny:wait_for_chore(ms_takeout_eggs, "ms.cos")
    manny:play_chore_looping(ms_hold_eggs, "ms.cos")
    manny.hold_chore = ms_hold_eggs
    manny.is_holding = rf.eggs
    start_script(hq.salvador_obj.use_eggs, hq.salvador_obj)
end
sa2[130] = { text = "/hqma052/", first_sal_node = TRUE }
sa2[130].response = function(arg1) -- line 75
    arg1.off = TRUE
    sa2[135].off = FALSE
    salvador:say_line("/hqsa053/")
end
sa2[140] = { text = "/hqma054/", first_sal_node = TRUE, gesture = manny.tilt_head_gesture }
sa2[140].response = function(arg1) -- line 82
    arg1.off = TRUE
    sa2[210]:response()
end
sa2[135] = { text = "/hqma055/", first_sal_node = TRUE, gesture = manny.twist_head_gesture }
sa2[135].off = TRUE
sa2[135].response = function(arg1) -- line 89
    arg1.off = TRUE
    salvador:play_chore(sv_hq_idles_head_turn_left)
    salvador:say_line("/hqsa056/")
    wait_for_message()
    salvador:play_chore(sv_hq_idles_head_turn_right)
    salvador:say_line("/hqsa057/")
end
sa2[160] = { text = "/hqma058/", first_sal_node = TRUE, gesture = manny.tilt_head_gesture }
sa2[160].response = function(arg1) -- line 101
    arg1.off = TRUE
    sa2[170].off = FALSE
    salvador:push_chore(sv_hq_idles_turn_l_hand_out)
    salvador:push_chore()
    salvador:say_line("/hqsa059/")
    wait_for_message()
    salvador:say_line("/hqsa060/")
    wait_for_message()
    salvador:push_chore(sv_hq_idles_turn_back)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_head_turn_left)
    manny:nod_head_gesture()
    manny:say_line("/hqma061/")
    wait_for_message()
    salvador:say_line("/hqsa062/")
    wait_for_message()
    salvador:say_line("/hqsa063/")
    salvador:push_chore(sv_hq_idles_head_turn_right)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_screen_gest)
    salvador:push_chore()
    wait_for_message()
    manny:hand_gesture()
    manny:say_line("/hqma064/")
    wait_for_message()
    salvador:push_chore(sv_hq_idles_turn_l_hand_out)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_turn_back)
    salvador:push_chore()
    salvador:say_line("/hqsa154/")
    salvador:wait_for_message()
end
sa2[170] = { text = "/hqma066/", first_sal_node = TRUE }
sa2[170].off = TRUE
sa2[170].response = function(arg1) -- line 137
    arg1.off = TRUE
    sa2[180].off = FALSE
    salvador:push_chore(sv_hq_idles_talk_stand_up)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_hand_up_down)
    salvador:push_chore()
    salvador:say_line("/hqsa067/")
    wait_for_message()
    salvador:say_line("/hqsa068/")
    wait_for_message()
    salvador:push_chore(sv_hq_idles_talk_stand_down)
    salvador:push_chore()
    salvador:say_line("/hqsa069/")
    salvador:wait_for_message()
end
sa2[180] = { text = "/hqma070/", first_sal_node = TRUE, gesture = manny.shrug_gesture }
sa2[180].off = TRUE
sa2[180].response = function(arg1) -- line 156
    arg1.off = TRUE
    salvador:play_chore(sv_hq_idles_head_turn_left)
    salvador:push_chore()
    salvador:say_line("/hqsa071/")
    wait_for_message()
    salvador:push_chore(sv_hq_idles_head_turn_right)
    salvador:push_chore()
    salvador:say_line("/hqsa072/")
    salvador:push_chore(sv_hq_idles_hand_forw)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_oh_well)
    salvador:push_chore()
    wait_for_message()
    salvador:say_line("/hqsa073/")
    salvador:play_chore(sv_hq_idles_head_turn_left)
    salvador:push_chore()
    salvador:wait_for_message()
    salvador:play_chore(sv_hq_idles_head_turn_right)
    salvador:wait_for_chore()
end
sa2[190] = { text = "/hqma074/", first_sal_node = TRUE, gesture = manny.tilt_head_gesture }
sa2[190].off = TRUE
sa2[190].response = function(arg1) -- line 180
    arg1.off = TRUE
    sa2[200].off = FALSE
    salvador:push_chore(sv_hq_idles_talk_stand_up)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_hand_up_down)
    salvador:push_chore()
    salvador:say_line("/hqsa075/")
    wait_for_message()
    salvador:head_look_at_point(hq.proj_spot_2)
    salvador:say_line("/hqsa076/")
    wait_for_message()
    manny:say_line("/hqma077/")
    salvador:head_look_at(manny)
    wait_for_message()
    salvador:say_line("/hqsa078/")
    wait_for_message()
    salvador:say_line("/hqsa079/")
    salvador:push_chore(sv_hq_idles_hand_up_down)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_talk_stand_down)
    salvador:push_chore()
    wait_for_message()
    salvador:head_look_at(nil)
    manny:say_line("/hqma080/")
end
sa2[200] = { text = "/hqma081/", first_sal_node = TRUE }
sa2[200].off = TRUE
sa2[200].response = function(arg1) -- line 209
    arg1.off = TRUE
    salvador:say_line("/hqsa082/")
    wait_for_message()
    salvador:say_line("/hqsa083/")
end
sa2[210] = { text = "/hqma084/", first_sal_node = TRUE, gesture = manny.shrug_gesture }
sa2[210].response = function(arg1) -- line 218
    arg1.off = TRUE
    sa2[130].off = TRUE
    sa2[140].off = TRUE
    sa2[135].off = TRUE
    sa2[220].off = FALSE
    salvador:say_line("/hqsa085/")
    salvador:push_chore(sv_hq_idles_talk_stand_up)
    salvador:push_chore()
    wait_for_message()
    salvador:say_line("/hqsa086/")
    salvador:push_chore(sv_hq_idles_hand_up_down)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_hand_up_down)
    salvador:push_chore()
    wait_for_message()
    salvador:say_line("/hqsa087/")
    salvador:push_chore(sv_hq_idles_talk_stand_down)
    salvador:push_chore()
    salvador:wait_for_message()
end
sa2[220] = { text = "/hqma088/", first_sal_node = TRUE, gesture = manny.tilt_head_gesture }
sa2[220].off = TRUE
sa2[220].response = function(arg1) -- line 242
    arg1.off = TRUE
    sa2[230].off = FALSE
    salvador:push_chore(sv_hq_idles_turn_l_hand_out)
    salvador:push_chore()
    salvador:say_line("/hqsa089/")
    wait_for_message()
    salvador:say_line("/hqsa090/")
    salvador:push_chore(sv_hq_idles_turn_back)
    salvador:push_chore()
    wait_for_message()
    salvador:say_line("/hqsa091/")
    salvador:wait_for_message()
end
sa2[230] = { text = "/hqma092/", first_sal_node = TRUE }
sa2[230].off = TRUE
sa2[230].response = function(arg1) -- line 260
    arg1.off = TRUE
    sa2[240].off = FALSE
    salvador.talked_eggs = TRUE
    salvador:push_chore(sv_hq_idles_head_turn_left)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_head_turn_right)
    salvador:push_chore()
    salvador:say_line("/hqsa093/")
    wait_for_message()
    salvador:push_chore(sv_hq_idles_hand_forw)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_oh_well)
    salvador:push_chore()
    salvador:say_line("/hqsa094/")
end
sa2[240] = { text = "/hqma095/", first_sal_node = TRUE, gesture = manny.twist_head_gesture }
sa2[240].off = TRUE
sa2[240].response = function(arg1) -- line 280
    arg1.off = TRUE
    salvador:say_line("/hqsa096/")
    wait_for_message()
    salvador:push_chore(sv_hq_idles_head_turn_left)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_head_turn_right)
    salvador:push_chore()
    salvador:say_line("/hqsa097/")
end
sa2.exit_lines.first_sal_node = { text = "/hqma098/" }
sa2.exit_lines.first_sal_node.response = function(arg1) -- line 293
    sa2.node = "exit_dialog"
    salvador:say_line("/hqsa099/")
    wait_for_message()
end
sa2.aborts.first_sal_node = function(arg1) -- line 299
    sa2:clear()
    sa2.node = "exit_dialog"
    sa2.talked_out = TRUE
    salvador:push_chore(sv_hq_idles_head_turn_left)
    salvador:say_line("/hqsa100/")
    wait_for_message()
    salvador:wait_for_chore()
    salvador:push_chore(sv_hq_idles_head_turn_right)
    salvador:push_chore()
end
sa2.outro = function(arg1) -- line 312
    salvador:say_line("/hqsa101/")
    salvador.stop_idle = FALSE
end
sa2[999] = "EOD"
CheckFirstTime("dlg_salvador.lua")
sa1 = Dialog:create()
sa1.focus = gs.ga_door
sa1.asked_out = 0
sa1.intro = function() -- line 15
    sa1.node = "first_sal_node"
    enable_head_control(FALSE)
    if not sa1.talked then
        manny:say_line("/gsma001/")
    else
        manny:say_line("/gsma002/")
    end
    manny:wait_for_message()
    salvador:set_chore_looping(sv_helps_hidden, FALSE)
    salvador:play_chore(sv_helps_peek)
    salvador:wait_for_chore()
    salvador:play_chore_looping(sv_helps_peek_talk)
    salvador:set_rest_chore(-1)
    manny:walkto(gs.window)
    manny:head_look_at(gs.window)
    if not sa1.talked then
        sa1.talked = TRUE
        salvador:say_line("/gssa003/")
        wait_for_message()
        salvador:say_line("/gssa004/")
        if not sa1[120].said then
            sa1[120].off = FALSE
        else
            sa1[130].off = FALSE
        end
        if not sa1[150].said then
            sa1[150].off = FALSE
        end
    else
        salvador:say_line("/gssa005/")
        if not sa1[110].said then
            sa1[110].off = FALSE
        elseif not sa1[120].said then
            sa1[120].off = FALSE
        else
            sa1[130].off = FALSE
        end
        if not sa1[140].said then
            sa1[140].off = TRUE
        end
    end
end
sa1[100] = { text = "/gsma006/", first_sal_node = TRUE, gesture = manny.point_gesture }
sa1[100].response = function(arg1) -- line 64
    arg1.off = TRUE
    salvador:say_line("/gssa007/")
    wait_for_message()
    salvador:say_line("/gssa008/")
    wait_for_message()
    manny:head_forward_gesture()
    manny:say_line("/gsma009/")
end
sa1[105] = { text = "/gsma011/", first_sal_node = TRUE }
sa1[105].off = TRUE
sa1[105].response = function(arg1) -- line 76
    arg1.off = TRUE
    arg1.said = TRUE
    salvador:say_line("/gssa012/")
    wait_for_message()
    manny:hand_gesture()
    manny:say_line("/gsma013/")
end
sa1[110] = { text = "/gsma014/", first_sal_node = TRUE }
sa1[110].off = TRUE
sa1[110].setup = function(arg1) -- line 88
    arg1.off = TRUE
end
sa1[110].response = function(arg1) -- line 91
    arg1.off = TRUE
    arg1.said = TRUE
    arg1.text = "/gsma015/"
    sa1:back_in()
end
sa1.back_in = function(arg1) -- line 98
    sa1.node = "fold_node"
    sa1[170].off = FALSE
    sa1.asked_out = sa1.asked_out + 1
    if sa1.asked_out == 1 then
        salvador:say_line("/gssa016/")
        wait_for_message()
        salvador:say_line("/gssa017/")
        wait_for_message()
        salvador:say_line("/gssa018/")
    elseif sa1.asked_out == 2 then
        salvador:say_line("/gssa019/")
        wait_for_message()
        manny:say_line("/gsma020/")
    elseif sa1.asked_out == 3 then
        manny:say_line("/gsma021/")
        wait_for_message()
        salvador:say_line("/gssa022/")
    else
        salvador:say_line("/gssa023/")
    end
end
sa1[120] = { text = "/gsma024/", first_sal_node = TRUE }
sa1[120].off = TRUE
sa1[120].response = function(arg1) -- line 124
    arg1.off = TRUE
    sa1:back_in()
end
sa1[130] = { text = "/gsma025/", first_sal_node = TRUE, gesture = manny.nod_head_gesture }
sa1[130].off = TRUE
sa1[130].response = function(arg1) -- line 131
    sa1[130].said = TRUE
    sa1:back_in()
end
sa1[140] = { text = "/gsma026/", first_sal_node = TRUE, gesture = manny.shrug_gesture }
sa1[140].off = TRUE
sa1[140].response = function(arg1) -- line 138
    arg1.off = TRUE
    arg1.said = TRUE
    sa1:back_in()
end
sa1[150] = { text = "/gsma027/", first_sal_node = TRUE, gesture = manny.shrug_gesture }
sa1[150].off = TRUE
sa1[150].response = function(arg1) -- line 147
    arg1.off = TRUE
    arg1.said = TRUE
    sa1:back_in()
end
sa1[155] = { text = "/gsma028/", first_sal_node = TRUE, gesture = manny.tilt_head_gesture }
sa1[155].response = function(arg1) -- line 154
    arg1.off = TRUE
    sa1[160].off = FALSE
    sa1.node = "sprout_node"
    salvador:say_line("/gssa029/")
    wait_for_message()
    salvador:say_line("/gssa030/")
end
sa1[160] = { text = "/gsma031/", first_sal_node = TRUE }
sa1[160].off = TRUE
sa1[160].response = function(arg1) -- line 165
    salvador:say_line("/gssa032/")
    wait_for_message()
    sa1:tell_sprouting()
end
sa1[170] = { text = "/gsma033/", first_sal_node = TRUE, gesture = manny.hand_gesture }
sa1[170].off = TRUE
sa1[170].response = sa1.back_in
sa1.exit_lines.first_sal_node = { text = "/gsma034/", gesture = manny.twist_head_gesture }
sa1.exit_lines.first_sal_node.response = function(arg1) -- line 178
    sa1.node = "exit_dialog"
    if not sa1.told_off then
        sa1.told_off = TRUE
        salvador:say_line("/gssa035/")
        wait_for_message()
    end
    salvador:say_line("/gssa036/")
    wait_for_message()
end
sa1[200] = { text = "/gsma037/", fold_node = TRUE, gesture = manny.point_gesture }
sa1[200].setup = function(arg1) -- line 190
    arg1.off = TRUE
end
sa1[200].response = function(arg1) -- line 193
    salvador:say_line("/gssa038/")
    wait_for_message()
    salvador:say_line("/gssa039/")
end
sa1[210] = { text = "/gsma040/", fold_node = TRUE, gesture = manny.shrug_gesture }
sa1[210].response = function(arg1) -- line 200
    sa1.node = "exit_dialog"
    salvador:say_line("/gssa041/")
    wait_for_message()
    salvador:say_line("/gssa042/")
end
sa1[220] = { text = "/gsma043/", fold_node = TRUE, gesture = manny.head_forward_gesture }
sa1[220].response = function(arg1) -- line 208
    sa1.node = "angry_node"
    if not sa1.heard_anger then
        sa1.heard_anger = TRUE
        salvador:say_line("/gssa044/")
        wait_for_message()
        salvador:say_line("/gssa045/")
    else
        salvador:say_line("/gssa046/")
        wait_for_message()
        salvador:say_line("/gssa047/")
    end
end
sa1[230] = { text = "/gsma048/", fold_node = TRUE, gesture = manny.shrug_gesture }
sa1[230].response = function(arg1) -- line 223
    arg1.off = TRUE
    sa1[200]:response()
end
sa1[240] = { text = "/gsma049/", fold_node = TRUE, gesture = manny.twist_head_gesture }
sa1[240].response = function(arg1) -- line 229
    arg1.off = TRUE
    sa1.node = "exit_dialog"
    salvador:say_line("/gssa050/")
    wait_for_message()
    salvador:say_line("/gssa051/")
    wait_for_message()
    salvador:say_line("/gssa052/")
end
sa1[300] = { text = "/gsma053/", sprout_node = TRUE, gesture = manny.twist_head_gesture }
sa1[300].response = function(arg1) -- line 240
    arg1.off = TRUE
    salvador:say_line("/gssa054/")
    wait_for_message()
    sa1:tell_sprouting()
end
sa1[310] = { text = "/gsma055/", sprout_node = TRUE, gesture = manny.nod_head_gesture }
sa1[310].response = function(arg1) -- line 248
    arg1.off = TRUE
    salvador:say_line("/gssa056/")
    wait_for_message()
    sa1:tell_sprouting()
end
sa1[320] = { text = "/gsma057/", sprout_node = TRUE, gesture = manny.tilt_head_gesture }
sa1[320].response = sa1[300].response
sa1[330] = { text = "/gsma058/", sprout_node = TRUE, gesture = manny.twist_head_gesture }
sa1[330].response = sa1[300].response
sa1.tell_sprouting = function(arg1) -- line 260
    sa1.node = "first_sal_node"
    salvador:say_line("/gssa059/")
    wait_for_message()
    salvador:say_line("/gssa060/")
    wait_for_message()
    salvador:say_line("/gssa061/")
    wait_for_message()
    salvador:say_line("/gssa062/")
    wait_for_message()
    salvador:say_line("/gssa063/")
    wait_for_message()
    salvador:say_line("/gssa064/")
    wait_for_message()
    salvador:say_line("/gssa065/")
    wait_for_message()
    salvador:say_line("/gssa066/")
    wait_for_message()
    if not sa1.heard_story then
        sa1.heard_story = TRUE
        manny:say_line("/gsma067/")
        wait_for_message()
        salvador:say_line("/gssa068/")
        wait_for_message()
        manny:twist_head_gesture()
        manny:say_line("/gsma069/")
    else
        manny:say_line("/gsma070/")
    end
end
sa1[400] = { text = "/gsma071/", angry_node = TRUE, gesture = manny.head_forward_gesture }
sa1[400].response = function(arg1) -- line 292
    sa1.node = "exit_dialog"
    salvador:say_line("/gssa072/")
    wait_for_message()
    salvador:set_chore_looping(sv_helps_peek_talk, FALSE)
    salvador:play_chore(sv_helps_hide)
    salvador:wait_for_chore()
    salvador:setpos(0.8703, 9.6567, 0)
    salvador:setrot(0, 25.0015, 0)
    salvador:set_colormap("eva_sv.cmp")
    ResetTextures()
    salvador:set_head(3, 4, 5, 165, 28, 80)
    gs.ga_door:play_chore(gs_ga_door_open, "gs_ga_door.cos")
    salvador:head_look_at_manny()
    salvador:play_chore(sv_helps_open_door)
    manny:head_look_at(gs.ga_door)
    manny:setrot(0, 259.61, 0, TRUE)
    salvador:wait_for_chore()
    gs.ga_door:wait_for_chore(gs_ga_door_open)
    gs.is_jail = FALSE
    cur_puzzle_state[7] = TRUE
    salvador:say_line("/gssa073/")
    wait_for_message()
    start_script(cut_scene.lsahq)
end
sa1[410] = { text = "/gsma074/", angry_node = TRUE, gesture = manny.tilt_head_gesture }
sa1[410].response = function(arg1) -- line 322
    sa1.node = "exit_dialog"
    salvador:say_line("/gssa075/")
end
sa1[420] = { text = "/gsma076/", angry_node = TRUE, gesture = manny.hand_gesture }
sa1[420].response = sa1[410].response
sa1.outro = function(arg1) -- line 330
    if sa1[100].off and not sa1[105].said then
        sa1[105].off = FALSE
    end
    if gs.is_jail then
        salvador:set_chore_looping(sv_helps_peek_talk, FALSE)
        salvador:play_chore(sv_helps_hide)
        salvador:wait_for_chore()
        salvador:play_chore_looping(sv_helps_hidden)
        manny:head_look_at(nil)
    end
end
sa1[999] = "EOD"
CheckFirstTime("dlg_vel2.lua")
ve2 = Dialog:create()
ve2.focus = lm.velasco_obj
ve2.intro = function(arg1) -- line 13
    ve2.node = "first_vel_node"
    music_state:set_state(stateLM_TALK)
    if lm.talked_union and lm.talked_naranja and lm.talked_tools then
        ve2[90].off = FALSE
    end
    if made_vacancy and hh.union_card.owner == manny and dd.strike_on then
        ve2[90].off = TRUE
    end
    if made_vacancy then
        ve2[100].off = FALSE
        ve2[180].off = TRUE
        ve2[110].off = TRUE
        ve2[120].off = TRUE
        ve2[130].off = TRUE
        if not ve2[140].said then
            ve2[140].off = FALSE
        end
        ve2[150].off = TRUE
        ve2[160].off = TRUE
        ve2[190].off = TRUE
    end
    if hh.union_card.owner == manny then
        ve2[100].off = FALSE
        ve2[150].off = TRUE
        ve2[160].off = TRUE
        ve2[200].off = TRUE
        ve2[210].off = TRUE
    end
    if dd.strike_on then
        ve2[100].off = FALSE
        ve2[160].off = TRUE
        ve2[165].off = TRUE
        ve2[170].off = TRUE
    end
    manny:head_look_at(arg1.focus)
    break_here()
    manny:head_look_at(arg1.focus)
end
ve2.execute_line = function(arg1, arg2) -- line 56
    if not velasco.facing_manny then
        start_script(velasco.face_manny)
    end
    ve2.parent.execute_line(ve2, arg2)
end
ve2[90] = { text = "/lmma001/", first_vel_node = TRUE }
ve2[90].off = TRUE
ve2[90].response = function(arg1) -- line 65
    local local1 = made_vacancy
    local local2 = hh.union_card.owner == manny
    local local3 = dd.strike_on
    lm.talked_naranja = TRUE
    lm.talked_union = TRUE
    lm.talked_tools = TRUE
    ve2.node = "exit_dialog"
    lm:talk_progress(local1, local2, local3)
end
ve2[100] = { text = "/lmma002/", first_vel_node = TRUE }
ve2[100].response = function(arg1) -- line 80
    arg1.off = TRUE
    if made_vacancy or hh.union_card.owner == manny or dd.strike_on then
        ve2[90]:response()
    else
        ve2[110].off = FALSE
        velasco:say_line("/lmve003/")
        wait_for_message()
        manny:say_line("/lmma004/")
        wait_for_message()
        velasco:say_line("/lmve005/")
        wait_for_message()
        velasco:say_line("/lmve007/")
    end
end
ve2[110] = { text = "/lmma008/", first_vel_node = TRUE, gesture = manny.shrug_gesture }
ve2[110].off = TRUE
ve2[110].response = function(arg1) -- line 100
    arg1.off = TRUE
    ve2[120].off = FALSE
    ve2[165].off = FALSE
    lm.talked_tools = TRUE
    velasco:say_line("/lmve009/")
    wait_for_message()
    manny:head_forward_gesture()
    manny:say_line("/lmma010/")
    wait_for_message()
    velasco:say_line("/lmve011/")
    velasco:run_chore(ve_talks_to_ma_thinking, "ve_talks_to_ma.cos")
    wait_for_message()
    manny:say_line("/lmma012/")
    wait_for_message()
    velasco:say_line("/lmve013/")
    wait_for_message()
    velasco:say_line("/lmve014/")
end
ve2[120] = { text = "/lmma015/", first_vel_node = TRUE, gesture = manny.hand_gesture }
ve2[120].off = TRUE
ve2[120].response = function(arg1) -- line 123
    arg1.off = TRUE
    ve2[130].off = FALSE
    velasco:say_line("/lmve016/")
    wait_for_message()
    velasco:say_line("/lmve017/")
    wait_for_message()
    velasco:say_line("/lmve018/")
    wait_for_message()
    velasco:say_line("/lmve019/")
    wait_for_message()
    velasco:head_look_at(lm.bottle)
    velasco:say_line("/lmve020/")
    wait_for_message()
    velasco:set_look_rate(120)
    velasco:head_look_at(nil)
end
ve2[130] = { text = "/lmma021/", first_vel_node = TRUE }
ve2[130].off = TRUE
ve2[130].response = function(arg1) -- line 143
    arg1.off = TRUE
    ve2[140].off = FALSE
    if not made_vacancy then
        ve2[150].off = FALSE
        ve2[190].off = FALSE
    end
    lm.talked_naranja = TRUE
    velasco:say_line("/lmve022/")
end
ve2[140] = { text = "/lmma023/", first_vel_node = TRUE }
ve2[140].off = TRUE
ve2[140].response = function(arg1) -- line 156
    arg1.off = TRUE
    arg1.said = TRUE
    velasco:say_line("/lmve024/")
    wait_for_message()
    manny:nod_head_gesture()
    manny:say_line("/lmma025/")
    wait_for_message()
    velasco:say_line("/lmve026/")
end
ve2[150] = { text = "/lmma027/", first_vel_node = TRUE }
ve2[150].off = TRUE
ve2[150].response = function(arg1) -- line 169
    arg1.off = TRUE
    ve2[160].off = FALSE
    if not hh.union_card.owner == manny then
        ve2[200].off = FALSE
    end
    lm.talked_union = TRUE
    cn.charlie_obj.talked_out = FALSE
    velasco:say_line("/lmve028/")
    wait_for_message()
    manny:point_gesture()
    manny:tilt_head_gesture(TRUE)
    manny:say_line("/lmma029/")
    wait_for_message()
    velasco:say_line("/lmve030/")
    wait_for_message()
    velasco:say_line("/lmve031/")
    wait_for_message()
    velasco:say_line("/lmve032/")
    wait_for_message()
    velasco:say_line("/lmve033/")
end
ve2[160] = { text = "/lmma034/", first_vel_node = TRUE, gesture = manny.head_forward_gesture }
ve2[160].off = TRUE
ve2[160].response = function(arg1) -- line 194
    arg1.off = TRUE
    manny:say_line("/lmma035/")
    wait_for_message()
    velasco:say_line("/lmve036/")
    wait_for_message()
    manny:hand_gesture()
    manny:say_line("/lmma037/")
    wait_for_message()
    velasco:say_line("/lmve038/")
    wait_for_message()
    manny:say_line("/lmma039/")
    wait_for_message()
    velasco:say_line("/lmve040/")
    wait_for_message()
    manny:tilt_head_gesture()
    manny:say_line("/lmma041/")
    wait_for_message()
    velasco:say_line("/lmve042/")
    velasco:head_look_at(lm.bottle)
    wait_for_message()
    sleep_for(2000)
    velasco:head_look_at_manny()
    velasco:say_line("/lmve043/")
end
ve2[165] = { text = "/lmma044/", first_vel_node = TRUE }
ve2[165].off = TRUE
ve2[165].response = function(arg1) -- line 222
    arg1.off = TRUE
    ve2[170].off = FALSE
    velasco:say_line("/lmve045/")
end
ve2[170] = { text = "/lmma046/", first_vel_node = TRUE, gesture = manny.shrug_gesture }
ve2[170].off = TRUE
ve2[170].response = function(arg1) -- line 230
    arg1.off = TRUE
    velasco:say_line("/lmve047/")
    wait_for_message()
    velasco:say_line("/lmve048/")
    wait_for_message()
    velasco:say_line("/lmve049/")
end
ve2[180] = { text = "/lmma050/", first_vel_node = TRUE }
ve2[180].off = TRUE
ve2[180].response = function(arg1) -- line 241
    arg1.off = TRUE
    if si.naranja_out then
        velasco:say_line("/lmve051/")
        wait_for_message()
        manny:twist_head_gesture()
        manny:say_line("/lmma052/")
        wait_for_message()
        velasco:say_line("/lmve053/")
    else
        velasco:say_line("/lmve054/")
    end
end
ve2[190] = { text = "/lmma055/", first_vel_node = TRUE }
ve2[190].off = TRUE
ve2[190].response = function(arg1) -- line 257
    arg1.off = TRUE
    velasco:say_line("/lmve056/")
end
ve2[200] = { text = "/lmma057/", first_vel_node = TRUE }
ve2[200].off = TRUE
ve2[200].response = function(arg1) -- line 264
    arg1.off = TRUE
    ve2[210].off = FALSE
    velasco:say_line("/lmve058/")
    wait_for_message()
    velasco:say_line("/lmve059/")
    wait_for_message()
    velasco:say_line("/lmve060/")
    wait_for_message()
    velasco:say_line("/lmve061/")
    wait_for_message()
    manny:tilt_head_gesture()
    manny:say_line("/lmma062/")
end
ve2[210] = { text = "/lmma063/", first_vel_node = TRUE }
ve2[210].off = TRUE
ve2[210].response = function(arg1) -- line 281
    arg1.off = TRUE
    velasco:say_line("/lmve064/")
    wait_for_message()
    manny:point_gesture()
    manny:say_line("/lmma065/")
    wait_for_message()
    velasco:say_line("/lmve066/")
    wait_for_message()
    velasco:say_line("/lmve067/")
    wait_for_message()
    velasco:say_line("/lmve068/")
end
ve2[220] = { text = "/lmma069/", first_vel_node = TRUE }
ve2[220].response = function(arg1) -- line 296
    arg1.off = TRUE
    velasco:say_line("/lmve070/")
    velasco:head_look_at(lm.bottle)
    manny:head_look_at(lm.bottle)
    wait_for_message()
    velasco:say_line("/lmve071/")
    wait_for_message()
    manny:head_look_at(lm.velasco_obj)
    manny:say_line("/lmma072/")
    wait_for_message()
    sleep_for(1000)
    velasco:head_look_at_manny()
    sleep_for(1000)
    velasco:say_line("/lmve073/")
    wait_for_message()
    manny:twist_head_gesture()
    manny:say_line("/lmma074/")
end
ve2.exit_lines.first_vel_node = { text = "/lmma075/" }
ve2.exit_lines.first_vel_node.response = function(arg1) -- line 318
    ve2.node = "exit_dialog"
    single_start_script(velasco.face_bottle, velasco)
    velasco:say_line("/lmve076/")
end
ve2.aborts.first_vel_node = function(arg1) -- line 324
    ve2:execute_line(ve2.exit_lines.first_vel_node)
end
ve2.outro = function(arg1) -- line 328
    music_state:set_state(stateLM)
    if velasco.facing_manny then
        single_start_script(velasco.face_bottle, velasco)
    end
end
ve2[999] = "EOD"
CheckFirstTime("dlg_velasco.lua")
ve1 = Dialog:create()
ve1.focus = re.velasco_obj
ve1.track_conversation = function(arg1) -- line 12
    local local1
    while system.currentSet == re do
        local1 = system.lastActorTalking
        if local1 == velasco then
            manny:head_look_at(re.velasco_obj)
        elseif local1 == glottis then
            manny:head_look_at_point({ x = 0.82182503, y = -4.5329499, z = -2.6559999 })
        end
        while local1 == system.lastActorTalking do
            break_here()
        end
    end
end
ve1.intro = function(arg1, arg2) -- line 27
    ve1.node = "first_velasco_node"
    stop_script(re.fake_conversation)
    re.in_dialog = TRUE
    start_script(ve1.track_conversation)
    wait_for_script(re.car_talk_intro)
    velasco:shut_up()
    glottis:shut_up()
    stop_script(re.vel_look_around)
    velasco:head_look_at_manny()
    stop_script(velasco.new_run_idle)
    velasco:play_chore(velasco_idles_back_to_rest, "velasco_idles.cos")
    manny:face_entity(re.velasco_obj)
    if arg2 == "photo" then
        if not ve1.seen_picture then
            ve1.seen_picture = TRUE
            ve1.talked_out = FALSE
            ve1[90].off = FALSE
            manny:say_line("/rema001/")
            wait_for_message()
            velasco:say_line("/reve002/")
            wait_for_message()
            velasco:say_line("/reve003/")
            wait_for_message()
            velasco:say_line("/reve004/")
            sleep_for(1000)
            manny:clear_hands()
        elseif ve1.got_logbook then
            ve1.node = "exit_dialog"
            velasco:say_line("/reve003/")
            wait_for_message()
            velasco:say_line("/reve016/")
            wait_for_message()
            manny:clear_hands()
        end
    elseif ve1.talked_out then
        ve1.node = "exit_dialog"
        manny:say_line("/rema005/")
        wait_for_message()
        velasco:say_line("/reve006/")
        wait_for_message()
        velasco:say_line("/reve007/")
    elseif not ve1.introduced then
        ve1.introduced = TRUE
        re:more_car_talk()
        wait_for_message()
        manny:say_line("/lyma047/")
        glottis:head_look_at_manny()
        wait_for_message()
        glottis:say_line("/regl008/")
        wait_for_message()
        glottis:say_line("/regl009/")
        wait_for_message()
        velasco:say_line("/reve010/")
        glottis:head_follow_mesh(velasco, 6, TRUE)
        wait_for_message()
        glottis:head_look_at_manny()
        glottis:say_line("/regl011/")
        wait_for_message()
        velasco:say_line("/reve012/")
        glottis:head_follow_mesh(velasco, 6, TRUE)
        wait_for_message()
    else
        manny:say_line("/rema013/")
        wait_for_message()
        velasco:say_line("/reve014/")
    end
end
ve1[90] = { text = "/rema015/", first_velasco_node = TRUE, gesture = manny.twist_head_gesture }
ve1[90].off = TRUE
ve1[90].response = function(arg1) -- line 106
    arg1.off = TRUE
    ve1.got_logbook = TRUE
    velasco:say_line("/reve016/")
    wait_for_message()
    velasco:head_look_at(nil)
    velasco:say_line("/reve017/")
    manny:clear_hands()
    manny:walkto(0.462738, -4.19471, -3.4, 0, 301.02, 0)
    manny:wait_for_actor()
    velasco:stop_chore(velasco_idles_back_to_rest, "velasco_idles.cos")
    velasco:play_chore(velasco_idles_give_logbook, "velasco_idles.cos")
    manny:play_chore(ma_reach_med, "ma.cos")
    sleep_for(1000)
    manny:generic_pickup(re.logbook)
    velasco:wait_for_chore(velasco_idles_give_logbook, "velasco_idles.cos")
    manny:fade_out_chore(ma_reach_med, "ma.cos", 500)
    velasco:play_chore(velasco_idles_stop_give_logbook, "velasco_idles.cos")
    velasco:wait_for_chore(velasco_idles_stop_give_logbook, "velasco_idles.cos")
    velasco:play_chore(velasco_idles_standing, "velasco_idles.cos")
    velasco:wait_for_message()
    look_at_item_in_hand(TRUE)
    velasco:say_line("/reve018/")
    wait_for_message()
    manny:head_look_at(nil)
    manny:clear_hands()
    velasco:say_line("/reve019/")
end
ve1[100] = { text = "/rema020/", first_velasco_node = TRUE, gesture = manny.head_forward_gesture }
ve1[100].response = function(arg1) -- line 136
    arg1.off = TRUE
    velasco:say_line("/reve021/")
    wait_for_message()
    velasco:say_line("/reve022/")
    wait_for_message()
    manny:twist_head_gesture()
    manny:say_line("/rema023/")
    wait_for_message()
    velasco:say_line("/reve024/")
    wait_for_message()
    velasco:say_line("/reve025/")
end
ve1[110] = { text = "/rema026/", first_velasco_node = TRUE, gesture = manny.hand_gesture }
ve1[110].response = function(arg1) -- line 152
    arg1.off = TRUE
    velasco:say_line("/reve027/")
    wait_for_message()
    velasco:say_line("/reve028/")
end
ve1[120] = { text = "/rema029/", first_velasco_node = TRUE, gesture = manny.shrug_gesture }
ve1[120].response = function(arg1) -- line 160
    arg1.off = TRUE
    ve1[130].off = FALSE
    velasco:say_line("/reve030/")
    wait_for_message()
    velasco:say_line("/reve031/")
    wait_for_message()
    velasco:say_line("/reve032/")
    wait_for_message()
    glottis:say_line("/regl033/")
    wait_for_message()
    glottis:head_look_at_manny()
    glottis:say_line("/regl034/")
    wait_for_message()
    glottis:head_follow_mesh(velasco, 6, TRUE)
end
ve1[130] = { text = "/rema035/", first_velasco_node = TRUE, gesture = manny.point_gesture }
ve1[130].off = TRUE
ve1[130].response = function(arg1) -- line 179
    arg1.off = TRUE
    manny:tilt_head_gesture()
    manny:say_line("/rema036/")
    wait_for_message()
    velasco:say_line("/reve037/")
    wait_for_message()
    velasco:say_line("/reve038/")
    wait_for_message()
    velasco:say_line("/reve039/")
end
ve1.exit_lines.first_velasco_node = { text = "/rema047/" }
ve1.exit_lines.first_velasco_node.response = function(arg1) -- line 193
    ve1.node = "exit_dialog"
    if not ve1.seen_picture or (ve1.seen_picture and ve1.talked_lamancha) then
        velasco:say_line("/reve048/")
        wait_for_message()
        velasco:say_line("/reve049/")
    end
end
ve1.aborts.first_velasco_node = function(arg1) -- line 202
    ve1:clear()
    ve1.node = "exit_dialog"
    ve1.talked_out = TRUE
    glottis:head_look_at_manny()
    glottis:say_line("/regl050/")
    wait_for_message()
    manny:shrug_gesture()
    manny:say_line("/rema051/")
    manny:wait_for_message()
end
ve1.outro = function(arg1) -- line 214
    if ve1.seen_picture and not ve1.talked_lamancha then
        ve1.talked_lamancha = TRUE
        wait_for_message()
        velasco:say_line("/reve052/")
        wait_for_message()
        velasco:say_line("/reve053/")
        wait_for_message()
        velasco:say_line("/reve054/")
        wait_for_message()
        manny:say_line("/rema055/")
        wait_for_message()
        velasco:say_line("/reve056/")
        wait_for_message()
        velasco:say_line("/reve057/")
    end
    stop_script(ve1.track_conversation)
    manny:head_look_at(nil)
    velasco:head_look_at_point(re.bw_look2)
    single_start_script(velasco.new_run_idle, velasco, "standing")
    single_start_script(re.vel_look_around)
    glottis:head_follow_mesh(velasco, 6, TRUE)
    re.in_dialog = FALSE
    start_script(re.fake_conversation)
end
ve1[999] = "EOD"
CheckFirstTime("dlg_virago.lua")
vi1 = Dialog:create()
vi1.focus = hl.virago_obj
vi1.intro = function(arg1) -- line 13
    vi1.node = "first_virago_node"
    if dd.terry_arrested and not vi1[110].said then
        vi1[110].off = FALSE
    end
    if bi.seen_kiss and not vi1[280].said then
        vi1[280].off = FALSE
    end
    manny:head_look_at(hl.virago_obj)
    if vi1.joke_time then
        vi1.joke_time = FALSE
        manny:say_line("/hlma001/")
        manny:wait_for_message()
        virago:stop_chore(nick_idles_pprwrk_base)
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
        manny:say_line("/hlma002/")
        manny:wait_for_message()
        virago:say_line("/hlvi003/")
        virago:wait_for_chore()
        virago:wait_for_message()
        virago.down = FALSE
    elseif not vi1.introduced then
        vi1.introduced = TRUE
        manny:say_line("/hlma007/")
        manny:wait_for_message()
        virago:stop_chore(nick_idles_pprwrk_base)
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
        manny:say_line("/hlma008/")
        manny:wait_for_message()
        virago:say_line("/hlvi009/")
        virago:wait_for_chore()
        virago.down = FALSE
    else
        manny:say_line("/hlma010/")
        manny:wait_for_message()
        virago:say_line("/hlvi011/")
        virago.down = TRUE
    end
    if bi.seen_kiss and not vi1.talked_kiss then
        if virago.down then
            virago:stop_chore(nick_idles_pprwrk_base)
            virago:push_chore(nick_idles_pprwrk2kckbk)
            virago:push_chore()
            virago:push_chore(nick_idles_kckbk_hld)
        end
        virago:wait_for_message()
        vi1.talked_kiss = TRUE
        manny:say_line("/hlma004/")
        manny:wait_for_message()
        virago:wait_for_chore(nick_idles_kckbk_hld)
        virago:stop_chore(nick_idles_kckbk_hld)
        virago:play_chore(nick_idles_dropkey)
        sleep_for(4154)
        virago:say_line("/hlvi005/")
        sleep_for(12906)
        virago:say_line("/hlvi006/")
        sleep_for(2200)
        cigcase_actor:set_visibility(TRUE)
        hl.case.interest_actor:put_in_set(hl)
        hl.case:make_touchable()
        hl.nicks_papers:make_untouchable()
        manny:wait_for_message()
        virago:wait_for_chore()
        virago.down = FALSE
    end
end
vi1[100] = { text = "/hlma012/", first_virago_node = TRUE }
vi1[100].response = function(arg1) -- line 91
    arg1.off = TRUE
    vi1[240].off = FALSE
    vi1.node = "trouble_node"
    if virago.down then
        virago.down = FALSE
        virago:stop_chore(nick_idles_pprwrk_base)
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
        virago:wait_for_chore()
    else
        virago:stop_chore(nick_idles_kckbk_hld)
        virago:push_chore(nick_idles_kckbk_nod)
        virago:push_chore()
    end
    if not vi1.talked_lawyer then
        vi1.talked_lawyer = TRUE
        virago:say_line("/hlvi013/")
    else
        virago:say_line("/hlvi014/")
    end
end
vi1[110] = { text = "/hlma015/", trouble_node = TRUE }
vi1[110].off = TRUE
vi1[110].response = function(arg1) -- line 117
    arg1.said = TRUE
    if virago.down then
        virago.down = FALSE
        virago:stop_chore(nick_idles_pprwrk_base)
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
        virago:wait_for_chore()
    end
    virago:say_line("/hlvi016/")
    vi1:good_question()
end
vi1[120] = { text = "/hlma017/", trouble_node = TRUE }
vi1[120].response = function(arg1) -- line 134
    arg1.off = TRUE
    vi1.node = "exit_dialog"
    virago:say_line("/hlvi018/")
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:play_chore(nick_idles_2pprwrk)
    virago:wait_for_chore()
    virago:stop_chore(nick_idles_2pprwrk)
    start_script(hl.virago_idles)
    hl:current_setup(0)
    manny:head_look_at(nil)
end
vi1[130] = { text = "/hlma019/", trouble_node = TRUE }
vi1[130].response = function(arg1) -- line 148
    arg1.off = TRUE
    if virago.down then
        virago.down = FALSE
        virago:stop_chore(nick_idles_pprwrk_base)
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
        virago:wait_for_chore()
    else
        virago:stop_chore(nick_idles_kckbk_hld)
        virago:push_chore(nick_idles_kckbk_nod)
        virago:push_chore()
    end
    virago:say_line("/hlvi020/")
    virago:wait_for_message()
    manny:say_line("/hlma021/")
    vi1:good_question()
end
vi1[140] = { text = "/hlma022/", trouble_node = TRUE }
vi1[140].response = function(arg1) -- line 170
    arg1.off = TRUE
    if virago.down then
        virago.down = FALSE
        virago:stop_chore(nick_idles_pprwrk_base)
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
        virago:wait_for_chore()
    else
        virago:push_chore(nick_idles_smoke)
        virago:push_chore()
    end
    virago:say_line("/hlvi023/")
    virago:wait_for_message()
    manny:say_line("/hlma024/")
    manny:wait_for_message()
    virago:say_line("/hlvi025/")
    vi1:good_question()
end
vi1[150] = { text = "/hlma026/", trouble_node = TRUE }
vi1[150].response = function(arg1) -- line 194
    arg1.off = TRUE
    if virago.down then
        virago.down = FALSE
        virago:stop_chore(nick_idles_pprwrk_base)
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
        virago:wait_for_chore()
    else
        virago:push_chore(nick_idles_smoke)
        virago:push_chore()
    end
    virago:say_line("/hlvi027/")
    virago:wait_for_message()
    manny:push_costume("mc_tap_head.cos")
    manny:play_chore(0)
    manny:say_line("/hlma028/")
    manny:wait_for_message()
    manny:say_line("/hlma029/")
    manny:wait_for_message()
    manny:wait_for_chore()
    manny:pop_costume()
    virago:say_line("/hlvi030/")
    virago:push_chore(nick_idles_kckbk_nod)
    vi1:good_question()
end
vi1.good_question = function() -- line 224
    vi1.node = "good_node"
    manny:wait_for_message()
    if virago.down then
        virago.down = FALSE
        virago:stop_chore(nick_idles_pprwrk_base)
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
    end
    if vi1.asked_good then
        virago:say_line("/hlvi031/")
        virago:wait_for_message()
    else
        vi1.asked_good = TRUE
    end
    virago:say_line("/hlvi032/")
    virago:wait_for_message()
    virago:wait_for_chore()
end
vi1[160] = { text = "/hlma034/", good_node = TRUE }
vi1[160].response = function(arg1) -- line 247
    vi1.node = "exit_dialog"
    virago:say_line("/hlvi035/")
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:play_chore(nick_idles_2pprwrk)
    virago:wait_for_chore()
    virago:stop_chore(nick_idles_2pprwrk)
    start_script(hl.virago_idles)
    hl:current_setup(0)
    manny:head_look_at(nil)
end
vi1[170] = { text = "/hlma036/", good_node = TRUE }
vi1[170].response = function(arg1) -- line 260
    vi1.node = "excellent_node"
    virago:say_line("/hlvi037/")
end
vi1[180] = { text = "/hlma038/", excellent_node = TRUE }
vi1[180].response = function(arg1) -- line 266
    virago:say_line("/hlvi039/")
    virago:wait_for_message()
    manny:say_line("/hlma040/")
    manny:wait_for_message()
    vi1[190]:response()
end
vi1[190] = { text = "/hlma041/", excellent_node = TRUE }
vi1[190].response = function(arg1) -- line 275
    vi1.node = "best_node"
    virago:say_line("/hlvi042/")
    virago:wait_for_message()
    virago:say_line("/hlvi043/")
end
vi1[200] = { text = "/hlma044/", best_node = TRUE }
vi1[200].response = function(arg1) -- line 283
    vi1.node = "exit_dialog"
    vi1.refused_already = TRUE
    virago:push_chore(nick_idles_smoke)
    virago:say_line("/hlvi045/")
    virago:wait_for_message()
    virago:say_line("/hlvi046/")
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:play_chore(nick_idles_2pprwrk)
    virago:wait_for_chore()
    virago:stop_chore(nick_idles_2pprwrk)
    start_script(hl.virago_idles)
    hl:current_setup(0)
    manny:head_look_at(nil)
end
vi1[210] = { text = "/hlma047/", best_node = TRUE }
vi1[210].response = function(arg1) -- line 302
    arg1.off = TRUE
    vi1.node = "exit_dialog"
    vi1.joke_time = TRUE
    virago:say_line("/hlvi048/")
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:push_chore(nick_idles_kckbk_nod)
    virago:push_chore()
    virago:wait_for_message()
    virago:say_line("/hlvi049/")
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:play_chore(nick_idles_2pprwrk)
    virago:wait_for_message()
    virago:say_line("/hlvi050/")
    virago:wait_for_message()
    virago:say_line("/hlvi051/")
    virago:wait_for_chore()
    virago:stop_chore(nick_idles_2pprwrk)
    start_script(hl.virago_idles)
    hl:current_setup(0)
    manny:head_look_at(nil)
end
vi1[220] = { text = "/hlma052/", best_node = TRUE }
vi1[220].response = function(arg1) -- line 327
    arg1.off = TRUE
    vi1.node = "exit_dialog"
    virago:say_line("/hlvi053/")
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:play_chore(nick_idles_2pprwrk)
    virago:wait_for_chore()
    virago:stop_chore(nick_idles_2pprwrk)
    start_script(hl.virago_idles)
    hl:current_setup(0)
    manny:head_look_at(nil)
end
vi1[230] = { text = "/hlma054/", best_node = TRUE }
vi1[230].response = function(arg1) -- line 342
    vi1.node = "exit_dialog"
    if virago.down then
        virago.down = FALSE
        virago:stop_chore(nick_idles_pprwrk_base)
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
        virago:wait_for_chore()
    end
    hl:current_setup(0)
    virago:say_line("/hlvi055/")
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:play_chore(nick_idles_2pprwrk)
    virago:wait_for_message()
    virago:say_line("/hlvi056/")
    virago:wait_for_chore()
    virago:stop_chore(nick_idles_2pprwrk)
    start_script(hl.virago_idles)
    manny:head_look_at(nil)
end
vi1[240] = { text = "/hlma057/", first_virago_node = TRUE }
vi1[240].off = TRUE
vi1[240].response = function(arg1) -- line 369
    if virago.down then
        virago.down = FALSE
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
    else
        virago:push_chore(nick_idles_kckbk_nod)
        virago:push_chore()
    end
    if vi1.refused_already then
        vi1.node = "threats_node"
        virago:say_line("/hlvi058/")
    else
        vi1.node = "trouble_node"
        virago:say_line("/hlvi059/")
    end
    virago:wait_for_chore()
end
vi1[250] = { text = "/hlma060/", threats_node = TRUE }
vi1[250].response = function(arg1) -- line 394
    arg1.off = TRUE
    virago:say_line("/hlvi061/")
end
vi1[260] = { text = "/hlma062/", threats_node = TRUE }
vi1[260].response = function(arg1) -- line 400
    arg1.off = TRUE
    virago:say_line("/hlvi063/")
    virago:push_chore(nick_idles_smoke)
    virago:wait_for_message()
    virago:say_line("/hlvi064/")
end
vi1[270] = { text = "/hlma065/", threats_node = TRUE }
vi1[270].response = function(arg1) -- line 410
    arg1.off = TRUE
    virago:say_line("/hlvi066/")
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:push_chore(nick_idles_tap_loop)
    virago:push_chore()
    virago:push_chore(nick_idles_tap_loop)
    virago:push_chore()
    virago:wait_for_message()
    virago:say_line("/hlvi067/")
end
vi1[280] = { text = "/hlma068/", threats_node = TRUE }
vi1[280].off = TRUE
vi1[280].response = function(arg1) -- line 424
    arg1.off = TRUE
    arg1.said = TRUE
    vi1.node = "exit_dialog"
    vi1.tried_blackmail = TRUE
    if virago.down then
        virago.down = FALSE
        virago:stop_chore(nick_idles_pprwrk_base)
        virago:run_chore(nick_idles_pprwrk2kckbk)
        virago:run_chore(nick_idles_kckbk_hld)
    end
    virago:say_line("/hlvi069/")
    virago:wait_for_message()
    virago:say_line("/hlvi070/")
    virago:wait_for_message()
    virago:push_chore(nick_idles_smoke)
    virago:push_chore()
    virago:push_chore(nick_idles_tap_loop)
    virago:push_chore()
    virago:push_chore(nick_idles_tap_loop)
    virago:push_chore()
    manny:say_line("/hlma071/")
    manny:wait_for_message()
    virago:say_line("/hlvi072/")
    virago:wait_for_message()
    virago:say_line("/hlvi073/")
    virago:wait_for_message()
    virago:say_line("/hlvi074/")
    virago:wait_for_message()
    virago:say_line("/hlvi075/")
    virago:wait_for_message()
    start_script(hl.nick_leaves)
end
vi1[290] = { text = "/hlma076/", threats_node = TRUE }
vi1[290].response = function(arg1) -- line 460
    arg1.off = TRUE
    vi1.node = "exit_dialog"
    virago:say_line("/hlvi077/")
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:play_chore(nick_idles_2pprwrk)
    virago:wait_for_chore()
    virago:stop_chore(nick_idles_2pprwrk)
    start_script(hl.virago_idles)
    hl:current_setup(0)
    manny:head_look_at(nil)
end
vi1[300] = { text = "/hlma078/", first_virago_node = TRUE }
vi1[300].response = function(arg1) -- line 474
    arg1.off = TRUE
    if virago.down then
        virago.down = FALSE
        virago:stop_chore(nick_idles_pprwrk_base)
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
        virago:wait_for_chore()
    else
        virago:stop_chore(nick_idles_kckbk_hld)
        virago:push_chore(nick_idles_kckbk_nod)
        virago:push_chore()
    end
    virago:say_line("/hlvi079/")
end
vi1[310] = { text = "/hlma080/", first_virago_node = TRUE }
vi1[310].response = function(arg1) -- line 493
    arg1.off = TRUE
    if virago.down then
        virago.down = FALSE
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
        virago:wait_for_chore()
    else
        virago:push_chore(nick_idles_tap_loop)
        virago:push_chore()
        virago:push_chore(nick_idles_tap_loop)
        virago:push_chore()
        virago:push_chore(nick_idles_smoke)
        virago:push_chore()
    end
    virago:say_line("/hlvi081/")
    virago:wait_for_message()
    manny:say_line("/hlma082/")
    manny:wait_for_message()
    virago:say_line("/hlvi083/")
    virago:wait_for_message()
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:push_chore(nick_idles_kckbk_nod)
    virago:push_chore()
    virago:say_line("/hlvi084/")
    virago:wait_for_chore()
end
vi1[320] = { text = "/hlma085/", first_virago_node = TRUE }
vi1[320].response = function(arg1) -- line 525
    arg1.off = TRUE
    if virago.down then
        virago.down = FALSE
        virago:push_chore(nick_idles_pprwrk2kckbk)
        virago:push_chore()
        virago:push_chore(nick_idles_kckbk_hld)
        virago:wait_for_chore()
    else
        virago:push_chore(nick_idles_kckbk_nod)
        virago:push_chore()
    end
    virago:say_line("/hlvi086/")
end
vi1.exit_lines.first_virago_node = { text = "/hlma087/" }
vi1.exit_lines.first_virago_node.response = function(arg1) -- line 543
    vi1.node = "exit_dialog"
    virago:say_line("/hlvi088/")
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:play_chore(nick_idles_2pprwrk)
    virago:wait_for_chore()
    virago:stop_chore(nick_idles_2pprwrk)
    start_script(hl.virago_idles)
    hl:current_setup(0)
    manny:head_look_at(nil)
end
vi1.aborts.first_virago_node = function(arg1) -- line 555
    vi1:clear()
    vi1.node = "exit_dialog"
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:play_chore(nick_idles_2pprwrk)
    virago:wait_for_chore()
    virago:stop_chore(nick_idles_2pprwrk)
    start_script(hl.virago_idles)
    hl:current_setup(0)
    manny:head_look_at(nil)
end
vi1.aborts.trouble_node = function(arg1) -- line 567
    if vi1.current_choices[1] then
        vi1:execute_line(vi1.current_choices[1])
    else
        vi1:clear()
        vi1.node = "exit_dialog"
        virago:say_line("/hlvi089/")
        virago:wait_for_message()
        virago:say_line("/hlvi090/")
        virago:wait_for_message()
        virago:say_line("/hlvi091/")
        virago:wait_for_message()
        virago:say_line("/hlvi092/")
        hl:current_setup(0)
    end
    manny:head_look_at(nil)
end
vi1.aborts.threats_node = function(arg1) -- line 585
    if vi1.current_choices[1] then
        vi1:execute_line(vi1.current_choices[1])
    else
        vi1:clear()
        vi1.node = "exit_dialog"
        virago:say_line("/hlvi093/")
        virago:stop_chore(nick_idles_kckbk_hld)
        virago:play_chore(nick_idles_2pprwrk)
        virago:wait_for_chore()
        virago:stop_chore(nick_idles_2pprwrk)
        start_script(hl.virago_idles)
        hl:current_setup(0)
        manny:head_look_at(nil)
    end
end
do_door_open_door_set_open = 0
do_door_open_door_set_closed = 1
do_drawer_open_drawer_open_glow = 0
do_drawer_open_drawer_open_wo_glow = 1
do_drawer_open_drawer_close_glow = 2
do_drawer_open_drawer_close_wo_glow = 3
do_drawer_open_drawer_set_closed = 4
do_drawer_open_drawer_set_open_glow = 5
do_drawer_open_drawer_set_open_wo_glow = 6
do_fight_fight_push = 0
do_fight_fight_across = 1
do_fight_watch_smash_eye = 2
do_fight_mumble = 3
do_fight_stop_talk = 4
do_fight_c = 5
do_fight_m = 6
do_fight_f = 7
do_fight_e = 8
do_fight_u = 9
do_fight_l = 10
do_fight_o = 11
do_fight_a = 12
do_fight_t = 13
do_fight_rest = 14
CheckFirstTime("do.lua")
dom = Set:create("do.set", "Domino's Office", { do_cnrla = 0, do_winws = 1, do_winws2 = 1, do_dorws = 2, overhead = 3 })
dom.camera_adjusts = { 20, 350, 340 }
dom.shrinkable = 0.03
dom.sb_close_vol = 127
dom.sb_medium_vol = 50
dom.sb_far_vol = 20
dofile("ma_drink.lua")
dofile("domino_boxing.lua")
dofile("manny_box.lua")
dofile("ma_open_drwr.lua")
dofile("ma_reachin_drwr.lua")
dofile("do_drawer_open.lua")
dofile("do_door_open.lua")
dofile("do_window_open.lua")
dofile("ma_exit_office.lua")
dofile("bag_box_ma.lua")
dofile("mouthpiece_box.lua")
domino.face_manny = function(arg1, arg2) -- line 31
    if find_script(domino.face_bag) then
        wait_for_script(domino.face_bag)
    end
    domino.facing_manny = TRUE
    domino:stop_looping_chore(domino_boxing_boxing, "domino_boxing.cos")
    if arg2 then
        domino:play_chore(domino_boxing_trans_spunch, "domino_boxing.cos")
        sleep_for(2500)
        stop_sound("speedbag.imu")
        domino:wait_for_chore(domino_boxing_trans_spunch, "domino_boxing.cos")
    else
        domino:play_chore(domino_boxing_drop_hands, "domino_boxing.cos")
        sleep_for(500)
        stop_sound("speedbag.imu")
        domino:wait_for_chore(domino_boxing_drop_hands, "domino_boxing.cos")
    end
    dom:current_setup(do_winws)
    domino:run_chore(domino_boxing_to_talk, "domino_boxing.cos")
end
domino.face_bag = function(arg1) -- line 52
    if find_script(domino.face_manny) then
        wait_for_script(domino.face_manny)
    end
    domino.facing_manny = FALSE
    domino:run_chore(domino_boxing_to_box, "domino_boxing.cos")
    domino:update_talk_chores()
    dom:current_setup(do_dorws)
    domino:play_chore_looping(domino_boxing_boxing, "domino_boxing.cos")
    start_sfx("speedbag.imu", IM_LOW_PRIORITY, dom.sb_medium_vol)
end
domino.update_talk_chores = function(arg1) -- line 64
    if domino.facing_manny then
        domino:set_mumble_chore(domino_boxing_mumble, "domino_boxing.cos")
        domino:set_talk_chore(1, domino_boxing_no_talk)
        domino:set_talk_chore(2, domino_boxing_a)
        domino:set_talk_chore(3, domino_boxing_c)
        domino:set_talk_chore(4, domino_boxing_e)
        domino:set_talk_chore(5, domino_boxing_f)
        domino:set_talk_chore(6, domino_boxing_l)
        domino:set_talk_chore(7, domino_boxing_m)
        domino:set_talk_chore(8, domino_boxing_o)
        domino:set_talk_chore(9, domino_boxing_t)
        domino:set_talk_chore(10, domino_boxing_u)
    else
        domino:set_mumble_chore(domino_boxing_mumble, "domino_boxing.cos")
        domino:set_talk_chore(1, domino_boxing_no_talk)
        domino:set_talk_chore(2, nil)
        domino:set_talk_chore(3, nil)
        domino:set_talk_chore(4, nil)
        domino:set_talk_chore(5, nil)
        domino:set_talk_chore(6, nil)
        domino:set_talk_chore(7, nil)
        domino:set_talk_chore(8, nil)
        domino:set_talk_chore(9, nil)
        domino:set_talk_chore(10, nil)
    end
end
scotch = Actor:create(nil, nil, nil, "/dotx093/")
scotch.default = function(arg1) -- line 98
    scotch:set_costume("do_scotch.cos")
    scotch:ignore_boxes()
    scotch:put_in_set(dom)
    scotch:setpos(1.3319, 2.32167, 0)
    scotch:setrot(0, 223.277, 0)
    scotch:play_chore(0)
end
speed_bag = Actor:create(nil, nil, nil, "/dotx144/")
speed_bag.default = function(arg1) -- line 108
    speed_bag:set_costume("bag_box_ma.cos")
    speed_bag:ignore_boxes()
    speed_bag:put_in_set(dom)
    speed_bag:setpos(dom.bag.use_pnt_x, dom.bag.use_pnt_y, dom.bag.use_pnt_z)
    speed_bag:setrot(0, dom.bag.use_rot_y, 0)
    speed_bag:play_chore(bag_box_ma_here)
end
dom.set_up_actors = function(arg1) -- line 117
    scotch:default()
    drawer_glow = NewObjectState(do_cnrla, OBJSTATE_STATE, "do_drawer_w_glow.bm", "do_drawer.zbm")
    drawer_woglow = NewObjectState(do_cnrla, OBJSTATE_STATE, "do_drawer_w_o_glow.bm", "do_drawer.zbm")
    dom.drawer_object:set_object_state("do_drawer_open.cos")
    NewObjectState(do_cnrla, OBJSTATE_UNDERLAY, "do_open_door.bm")
    NewObjectState(do_dorws, OBJSTATE_STATE, "do_open_door_dorws.bm", "do_open_door_dorws.zbm")
    dom.ha_door:set_object_state("do_door_open.cos")
    NewObjectState(do_winws, OBJSTATE_STATE, "do_open_window.bm", "do_open_window.zbm")
    dom.window:set_object_state("do_window_open.cos")
    NewObjectState(do_cnrla, OBJSTATE_OVERLAY, "do_tubemask.bm", nil, TRUE)
    dom.tube_object:set_object_state("do_tube.cos")
    if dom:current_setup() == do_cnrla then
        dom.tube_object.interest_actor:play_chore_looping(0)
    end
    if not ma_drink_cos then
        ma_drink_cos = "ma_drink.cos"
    end
    if not reaped_meche then
        dom.bag:make_untouchable()
        MakeSectorActive("dom_box", FALSE)
        domino:default()
        domino:put_in_set(dom)
        domino:set_costume("domino_boxing.cos")
        domino.facing_manny = FALSE
        domino:update_talk_chores()
        domino:setpos(0.21078, 1.01771, 0)
        domino:setrot(0, -321.566, 0)
        domino:set_collision_mode(COLLISION_BOX)
        SetActorCollisionScale(domino.hActor, 0.5)
        manny:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(manny.hActor, 0.35)
        MakeSectorActive("do_exit_box", TRUE)
        dom.domino_obj:make_touchable()
        domino:play_chore_looping(domino_boxing_boxing)
    else
        dom.bag:make_touchable()
        MakeSectorActive("dom_box", TRUE)
        domino:put_in_set(nil)
        MakeSectorActive("do_exit_box", FALSE)
        dom.domino_obj:make_untouchable()
        speed_bag:default()
        if not dom.mouthpiece_actor then
            dom.mouthpiece_actor = Actor:create(nil, nil, nil, "mouthpiece")
        end
        if dom.mouthpiece.owner ~= manny then
            dom.mouthpiece_actor:set_costume("mouthpiece_box.cos")
            dom.mouthpiece_actor:put_in_set(system.currentSet)
            dom.mouthpiece_actor:ignore_boxes()
            dom.mouthpiece_actor:setpos(0.3, 1.09654, 0.006)
            dom.mouthpiece_actor:setrot(0, 74.1295, 0)
            if dom.mouthpiece.status == MOUTHPIECE_ON_SHELF then
                PrintDebug("on the shelf")
                dom.mouthpiece_actor:play_chore_looping(mouthpiece_box_sitting)
            elseif dom.mouthpiece.status == MOUTHPIECE_KNOCKED_ONCE then
                dom.mouthpiece_actor:complete_chore(mouthpiece_box_first_hit)
            elseif dom.mouthpiece.status == MOUTHPIECE_KNOCKED_TWICE then
                dom.mouthpiece_actor:complete_chore(mouthpiece_box_second_hit)
            elseif dom.mouthpiece.status == MOUTHPIECE_ON_FLOOR then
                dom.mouthpiece_actor:play_chore_looping(mouthpiece_box_sitting)
                dom.mouthpiece_actor:setpos(0.29, 1.02654, -0.67)
            end
        end
    end
    NewObjectState(do_cnrla, OBJSTATE_STATE, "do_open_door.bm", nil, 1)
    if reaped_meche then
        dom.ha_door:play_chore(do_door_open_door_set_closed)
    else
        dom.ha_door:play_chore(do_door_open_door_set_open)
    end
    if dom.window:is_open() then
        dom.window:play_chore(do_window_open_window_set_open)
    else
        dom.window:play_chore(do_window_open_window_set_closed)
    end
    if dom.drawer_object:is_open() then
        if dom.coral.owner == IN_THE_ROOM then
            dom.drawer_object:play_chore(do_drawer_open_drawer_set_open_glow)
        else
            dom.drawer_object:play_chore(do_drawer_open_drawer_set_open_wo_glow)
        end
    else
        dom.drawer_object:play_chore(do_drawer_open_drawer_set_closed)
    end
end
dom.climb_out = function(arg1) -- line 220
    START_CUT_SCENE()
    while manny.is_idling do
        break_here()
    end
    dom:current_setup(1)
    manny:ignore_boxes()
    manny:setpos(1.1908, 2.82343, 0)
    manny:setrot(0, 1.96674, 0)
    manny:push_costume("ma_exit_office.cos")
    manny:play_chore(0, "ma_exit_office.cos")
    sleep_for(500)
    start_sfx("maEntWnd.WAV")
    manny:wait_for_chore()
    manny:pop_costume()
    manny:stop_chore(0, "ma_exit_office.cos")
    manny:follow_boxes()
    le:come_out_door(le.dom_door)
    le:current_setup(le_rufla)
    END_CUT_SCENE()
end
dom.enter = function(arg1) -- line 250
    LoadCostume("ma_drink.cos")
    LoadCostume("ma_note_type.cos")
    LoadCostume("ma_reachin_drwr.cos")
    LoadCostume("ma_open_drwr.cos")
    LoadCostume("manny_box.cos")
    LoadCostume("ma_exit_office.cos")
    LoadCostume("bag_box_ma.cos")
    LoadCostume("do_drawer_open.cos")
    manny.footsteps = footsteps.rug
    SetShadowColor(0, 10, 20)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 200, 1000, 2000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(domino.hActor, 0)
    SetActorShadowPoint(domino.hActor, 200, 1000, 2000)
    SetActorShadowPlane(domino.hActor, "shadow1")
    AddShadowPlane(domino.hActor, "shadow1")
    SetActiveShadow(speed_bag.hActor, 0)
    SetActorShadowPoint(speed_bag.hActor, 200, 1000, 2000)
    SetActorShadowPlane(speed_bag.hActor, "shadow1")
    AddShadowPlane(speed_bag.hActor, "shadow1")
    dom:set_up_actors()
    if not reaped_meche then
        start_sfx("speedbag.imu", IM_LOW_PRIORITY, dom.sb_medium_vol)
    end
end
dom.exit = function(arg1) -- line 289
    KillActorShadows(manny.hActor)
    KillActorShadows(domino.hActor)
    KillActorShadows(speed_bag.hActor)
    speed_bag:free()
    scotch:free()
    domino:set_collision_mode(COLLISION_OFF)
    manny:set_collision_mode(COLLISION_OFF)
    domino:free()
    stop_sound("speedbag.imu")
end
dom.camerachange = function(arg1, arg2, arg3) -- line 302
    if arg2 == do_cnrla then
        dom.tube_object.interest_actor:stop_chore(0)
    elseif arg3 == do_cnrla then
        dom.tube_object.interest_actor:play_chore_looping(0)
    end
    if not reaped_meche then
        if arg3 == do_cnrla then
            set_vol("speedbag.imu", dom.sb_far_vol)
        elseif arg3 == do_winws then
            set_vol("speedbag.imu", dom.sb_medium_vol)
        else
            set_vol("speedbag.imu", dom.sb_close_vol)
        end
    end
end
dom.scotch_object = Object:create(dom, "/dotx095/scotch", 1.54015, 2.23106, 0.23999999, { range = 0.775047 })
dom.scotch_object.use_pnt_x = 1.3319
dom.scotch_object.use_pnt_y = 2.3216701
dom.scotch_object.use_pnt_z = 0
dom.scotch_object.use_rot_x = 0
dom.scotch_object.use_rot_y = 223.27699
dom.scotch_object.use_rot_z = 0
dom.scotch_object.string_name = "scotch_object"
dom.scotch_object.lookAt = function(arg1) -- line 340
    if reaped_meche then
        START_CUT_SCENE()
        manny:say_line("/doma096/")
        wait_for_message()
        manny:say_line("/doma097/")
        END_CUT_SCENE()
    else
        START_CUT_SCENE()
        manny:say_line("/doma098/")
        wait_for_message()
        domino:say_line("/dodo099/")
        END_CUT_SCENE()
    end
end
dom.scotch_object.use = function(arg1) -- line 356
    while manny.is_idling do
        break_here()
    end
    if manny:walkto(arg1) then
        START_CUT_SCENE("no head")
        manny:push_costume(ma_drink_cos)
        scotch:play_chore(1)
        manny:play_chore(ma_drink_drink, "ma_drink.cos")
        manny:wait_for_chore()
        scotch:play_chore(0)
        manny:pop_costume()
        END_CUT_SCENE()
    end
end
dom.scotch_object.pickUp = dom.scotch_object.use
dom.tube_object = Object:create(dom, "/dotx100/tube", 0.82014501, 2.9410601, 0.27000001, { range = 0.71758699 })
dom.tube_object.use_pnt_x = 0.880418
dom.tube_object.use_pnt_y = 2.7402599
dom.tube_object.use_pnt_z = 0
dom.tube_object.use_rot_x = 0
dom.tube_object.use_rot_y = 29.6826
dom.tube_object.use_rot_z = 0
dom.tube_object.lookAt = function(arg1) -- line 387
    manny:say_line("/doma101/")
end
dom.tube_object.use = function(arg1) -- line 391
    START_CUT_SCENE()
    manny:say_line("/doma102/")
    wait_for_message()
    END_CUT_SCENE()
    manny:say_line("/doma103/")
    manny:twist_head_gesture()
end
dom.tube_object.use_coral = dom.tube_object.use
dom.tube_object.use_cat_balloon = dom.tube_object.use
dom.tube_object.use_dingo_balloon = dom.tube_object.use
dom.tube_object.use_frost_balloon = dom.tube_object.use
dom.tube_object.use_eggs = dom.tube_object.use
dom.tube_object.use_bread = dom.tube_object.use
dom.frames_1_obj = Object:create(dom, "/dotx104/diplomas", 1.58015, 2.3310599, 0.51999998, { range = 0.65618002 })
dom.frames_1_obj.use_pnt_x = 1.3200001
dom.frames_1_obj.use_pnt_y = 2.21
dom.frames_1_obj.use_pnt_z = 0
dom.frames_1_obj.use_rot_x = 0
dom.frames_1_obj.use_rot_y = -136.72301
dom.frames_1_obj.use_rot_z = 0
dom.frames_1_obj.lookAt = function(arg1) -- line 419
    if reaped_meche then
        manny:say_line("/doma105/")
    else
        START_CUT_SCENE()
        manny:say_line("/doma106/")
        wait_for_message()
        domino:say_line("/dodo107/")
        wait_for_message()
        manny:say_line("/doma108/")
        END_CUT_SCENE()
    end
end
dom.frames_1_obj.pickUp = function(arg1) -- line 433
    manny:say_line("/doma109/")
end
dom.computer_obj = Object:create(dom, "/dotx110/computer", 0.140145, 2.3710599, 0.46000001, { range = 0.74503303 })
dom.computer_obj.use_pnt_x = 0.42500001
dom.computer_obj.use_pnt_y = 2.3800001
dom.computer_obj.use_pnt_z = 0
dom.computer_obj.use_rot_x = 0
dom.computer_obj.use_rot_y = 94.57
dom.computer_obj.use_rot_z = 0
dom.computer_obj.count = 0
dom.computer_obj.use = function(arg1) -- line 451
    if reaped_meche then
        while manny.is_idling do
            break_here()
        end
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        if manny.is_holding then
            put_away_held_item()
        end
        if dom.computer_obj.count < 2 then
            manny:say_line("/doma111/")
            wait_for_message()
        end
        dom.computer_obj.count = dom.computer_obj.count + 1
        if dom.computer_obj.count <= 9 then
            manny:push_costume("ma_note_type.cos")
            manny:play_chore(ma_note_type_to_type, "ma_note_type.cos")
            manny:wait_for_chore()
            manny:play_chore(ma_note_type_type_loop, "ma_note_type.cos")
            start_sfx("keyboard.imu")
            manny:wait_for_chore()
            stop_sound("keyboard.imu")
            start_sfx("compbeep.wav")
            manny:head_look_at(0.155, 2.42, 0.47)
            wait_for_sound("compbeep.wav")
            sleep_for(500)
        end
        if dom.computer_obj.count == 1 then
            manny:say_line("/doma112/")
        elseif dom.computer_obj.count == 2 then
            manny:say_line("/doma113/")
        elseif dom.computer_obj.count == 3 then
            manny:say_line("/doma114/")
        elseif dom.computer_obj.count == 4 then
            manny:say_line("/doma115/")
        elseif dom.computer_obj.count == 5 then
            manny:say_line("/doma116/")
        elseif dom.computer_obj.count == 6 then
            manny:say_line("/doma117/")
        elseif dom.computer_obj.count == 7 then
            manny:say_line("/doma118/")
        elseif dom.computer_obj.count == 8 then
            manny:say_line("/doma119/")
        elseif dom.computer_obj.count == 9 then
            manny:say_line("/doma120/")
        else
            manny:say_line("/doma121/")
        end
        if dom.computer_obj.count <= 9 then
            manny:play_chore(ma_note_type_type_to_home, "ma_note_type.cos")
            manny:wait_for_chore()
            manny:pop_costume()
        end
        END_CUT_SCENE()
    else
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        manny:head_look_at(dom.domino_obj)
        manny:say_line("/doma122/")
        wait_for_message()
        domino:say_line("/dodo123/")
        sleep_for(750)
        manny:head_look_at(arg1)
        END_CUT_SCENE()
    end
end
dom.computer_obj.pickUp = function(arg1) -- line 525
    system.default_response("not portable")
end
dom.computer_obj.lookAt = dom.computer_obj.use
dom.domino_obj = Object:create(dom, "/dotx125/Domino", 0.274019, 0.91632497, 0.48100001, { range = 0.89999998 })
dom.domino_obj.use_pnt_x = 0.705019
dom.domino_obj.use_pnt_y = 0.67032599
dom.domino_obj.use_pnt_z = 0
dom.domino_obj.use_rot_x = 0
dom.domino_obj.use_rot_y = 47.768902
dom.domino_obj.use_rot_z = 0
dom.domino_obj.lookAt = function(arg1) -- line 548
    START_CUT_SCENE()
    manny:say_line("/doma126/")
    wait_for_message()
    domino:say_line("/dodo127/")
    END_CUT_SCENE()
end
dom.domino_obj.pickUp = function(arg1) -- line 556
    manny:say_line("/doma128/")
end
dom.domino_obj.use = function(arg1) -- line 560
    if manny:walkto(arg1) then
        START_CUT_SCENE()
        manny:wait_for_actor()
        END_CUT_SCENE()
        Dialog:run("do1", "dlg_domino.lua")
    end
end
dom.domino_obj.use_scythe = function(arg1) -- line 569
    manny:say_line("/doma168/")
end
dom.frames_2_obj = Object:create(dom, "/dotx129/pictures", 0.140145, 0.021059999, 0.52999997, { range = 0.93014002 })
dom.frames_2_obj.use_pnt_x = 0.107839
dom.frames_2_obj.use_pnt_y = 0.60944098
dom.frames_2_obj.use_pnt_z = 0
dom.frames_2_obj.use_rot_x = 0
dom.frames_2_obj.use_rot_y = 197.991
dom.frames_2_obj.use_rot_z = 0
dom.frames_2_obj.lookAt = function(arg1) -- line 585
    if reaped_meche then
        manny:say_line("/doma130/")
    else
        START_CUT_SCENE()
        manny:say_line("/doma131/")
        wait_for_message()
        END_CUT_SCENE()
        domino:say_line("/dodo132/")
    end
end
dom.frames_2_obj.pickUp = function(arg1) -- line 597
    manny:say_line("/doma133/")
end
dom.drawer_object = Object:create(dom, "/dotx134/drawer", 0.4962, 2.2067001, 0.17, { range = 0.5 })
dom.drawer_object.use_pnt_x = 0.52600002
dom.drawer_object.use_pnt_y = 2.3800001
dom.drawer_object.use_pnt_z = 0
dom.drawer_object.use_rot_x = 0
dom.drawer_object.use_rot_y = 549.80103
dom.drawer_object.use_rot_z = 0
dom.drawer_object.nothin_there = function(arg1) -- line 617
    manny:say_line("/doma135/")
end
dom.drawer_object.lookAt = function(arg1) -- line 621
    if arg1:is_open() then
        if dom.coral.owner == IN_THE_ROOM then
            manny:say_line("/doma136/")
        else
            dom.drawer_object:nothin_there()
        end
    else
        manny:say_line("/doma137/")
    end
end
dom.drawer_object.use = function(arg1) -- line 636
    if manny:walkto_object(arg1) then
        START_CUT_SCENE(no_head)
        if not reaped_meche then
            manny:play_chore(ms_reach_med, "ms.cos")
            sleep_for(200)
            domino:say_line("/dodo138/")
        elseif arg1:is_open() then
            while manny.is_idling do
                break_here()
            end
            if manny.is_holding then
                put_away_held_item()
            end
            if dom.coral.owner == IN_THE_ROOM then
                preload_sfx("getCoral.wav")
                manny:push_costume("ma_reachin_drwr.cos")
                manny:play_chore(ma_reachin_drwr_grab_coral, "ma_reachin_drwr.cos")
                sleep_for(933)
                SendObjectToFront(drawer_woglow)
                arg1:play_chore(do_drawer_open_drawer_set_open_wo_glow)
                sleep_for(150)
                manny:stop_chore(ma_reachin_drwr_grab_coral, "ma_reachin_drwr.cos")
                manny:pop_costume()
                dom.coral:get()
                manny:say_line("/gtcma12/")
                manny.is_holding = dom.coral
                manny.hold_chore = ms_activate_coral
                manny:play_chore_looping(ms_activate_coral, "ms.cos")
                manny:play_chore_looping(ms_hold, "ms.cos")
            else
                manny:push_costume("ma_open_drwr.cos")
                manny:play_chore(ma_open_drwr_close_drwr, "ma_open_drwr.cos")
                sleep_for(500)
                start_sfx("deskopen.wav")
                arg1:play_chore(do_drawer_open_drawer_close_wo_glow)
                manny:wait_for_chore()
                manny:pop_costume()
                arg1:close()
            end
        else
            preload_sfx("getCoral.wav")
            if manny.is_holding then
                put_away_held_item()
            end
            manny:push_costume("ma_open_drwr.cos")
            manny:play_chore(ma_open_drwr_open_drwr, "ma_open_drwr.cos")
            sleep_for(700)
            start_sfx("deskopen.wav")
            if dom.coral.owner == IN_THE_ROOM then
                arg1:play_chore(do_drawer_open_drawer_open_glow)
            else
                arg1:play_chore(do_drawer_open_drawer_open_wo_glow)
            end
            manny:wait_for_chore()
            manny:pop_costume()
            if dom.coral.owner == IN_THE_ROOM then
                start_sfx("getCoral.wav")
            end
            arg1:open()
            if dom.coral.owner == IN_THE_ROOM then
                if not arg1.seen then
                    arg1.seen = TRUE
                    wait_for_message()
                    manny:say_line("/doma139/")
                end
            end
        end
        END_CUT_SCENE()
    end
end
dom.drawer_object.pickUp = dom.drawer_object.use
dom.coral = Object:create(dom, "/dotx140/coral", 0.4962, 2.2067001, 0.17, { range = 0.5 })
dom.coral.use_pnt_x = dom.drawer_object.use_pnt_x
dom.coral.use_pnt_y = dom.drawer_object.use_pnt_y
dom.coral.use_pnt_z = dom.drawer_object.use_pnt_z
dom.coral.use_rot_x = dom.drawer_object.use_rot_x
dom.coral.use_rot_y = dom.drawer_object.use_rot_y
dom.coral.use_rot_z = dom.drawer_object.use_rot_z
dom.coral:make_untouchable()
dom.coral.wav = "getCoral.wav"
dom.coral.lookAt = function(arg1) -- line 730
    manny:say_line("/doma141/")
end
dom.coral.pickUp = function(arg1) -- line 734
    if dom.coral.owner == IN_THE_ROOM then
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        END_CUT_SCENE()
        arg1:get()
        dom.coral:make_untouchable()
    end
end
dom.coral.use = function(arg1) -- line 744
    manny:say_line("/doma142/")
end
dom.coral.default_response = function(arg1) -- line 748
    manny:say_line("/doma143/")
end
dom.bag = Object:create(dom, "/dotx144/speed bag", 0.100145, 1.16106, 0.58999997, { range = 0.89999998 })
dom.bag.use_pnt_x = 0.276687
dom.bag.use_pnt_y = 1.09654
dom.bag.use_pnt_z = 0
dom.bag.use_rot_x = 0
dom.bag.use_rot_y = 74.129501
dom.bag.use_rot_z = 0
dom.bag.punch_count = 0
dom.bag.lookAt = function(arg1) -- line 769
    manny:say_line("/doma145/")
end
dom.bag.pickUp = function(arg1) -- line 773
    system.default_response("attached")
end
dom.bag.use = function(arg1) -- line 777
    if dom.bag.punch_count < 3 then
        if not manny_box_cos then
            manny_box_cos = "manny_box.cos"
        end
        if DEMO then
            START_CUT_SCENE(no_head)
            cameraman_disabled = FALSE
            manny:walkto_object(arg1)
            manny:push_costume(manny_box_cos)
            dom:current_setup(do_dorws)
            if speed_bag:is_choring(0) or speed_bag:is_choring(3) then
                manny:play_chore(manny_box_first_hit, manny_box_cos)
                sleep_for(600)
                start_sfx("speedhit.wav", nil, 90)
                sleep_for(400)
                speed_bag:stop_chore(3)
                speed_bag:stop_chore(0)
                speed_bag:play_chore(3)
            else
                speed_bag:stop_chore(0)
                speed_bag:play_chore(0)
                manny:play_chore(manny_box_first_hit, manny_box_cos)
                sleep_for(600)
                start_sfx("speedhit.wav", nil, 90)
            end
            manny:wait_for_chore()
            manny:pop_costume()
            dom:current_setup(do_winws)
            END_CUT_SCENE()
        else
            START_CUT_SCENE()
            manny:walkto_object(arg1)
            dom:current_setup(do_winws)
            manny:push_costume(manny_box_cos)
            if dom.bag.punch_count == 0 then
                manny:play_chore(manny_box_first_hit, manny_box_cos)
                speed_bag:play_chore(0)
                sleep_for(300)
                dom.mouthpiece_actor:stop_chore(mouthpiece_box_sitting)
                dom.mouthpiece_actor:play_chore(mouthpiece_box_first_hit)
                sleep_for(300)
                start_sfx("speedhit.wav", nil, 50)
                manny:wait_for_chore()
                dom.mouthpiece.status = MOUTHPIECE_KNOCKED_ONCE
            elseif dom.bag.punch_count == 1 then
                if speed_bag:is_choring(0) or speed_bag:is_choring(3) then
                    manny:play_chore(manny_box_first_hit, manny_box_cos)
                    sleep_for(300)
                    dom.mouthpiece_actor:play_chore(mouthpiece_box_second_hit)
                    sleep_for(300)
                    start_sfx("speedhit.wav", nil, 80)
                    sleep_for(400)
                    speed_bag:stop_chore(3)
                    speed_bag:stop_chore(0)
                    speed_bag:play_chore(3)
                else
                    speed_bag:stop_chore(0)
                    speed_bag:play_chore(0)
                    manny:play_chore(manny_box_first_hit, manny_box_cos)
                    sleep_for(300)
                    dom.mouthpiece_actor:play_chore(mouthpiece_box_second_hit)
                    sleep_for(300)
                    start_sfx("speedhit.wav", nil, 80)
                end
                dom.mouthpiece.status = MOUTHPIECE_KNOCKED_TWICE
                manny:wait_for_chore()
            elseif dom.bag.punch_count == 2 then
                if speed_bag:is_choring(0) or speed_bag:is_choring(3) then
                    manny:play_chore(manny_box_first_hit, manny_box_cos)
                    sleep_for(300)
                    dom.mouthpiece_actor:play_chore(mouthpiece_box_third_hit)
                    sleep_for(300)
                    start_sfx("speedhit.wav", nil, 127)
                    sleep_for(400)
                    speed_bag:stop_chore(3)
                    speed_bag:stop_chore(0)
                    speed_bag:play_chore(3)
                else
                    speed_bag:stop_chore(0)
                    speed_bag:play_chore(0)
                    manny:play_chore(manny_box_first_hit, manny_box_cos)
                    sleep_for(300)
                    dom.mouthpiece_actor:play_chore(mouthpiece_box_third_hit)
                    sleep_for(300)
                    start_sfx("speedhit.wav", nil, 80)
                end
                dom.mouthpiece_actor:wait_for_chore()
                manny:wait_for_chore()
                dom.mouthpiece:make_touchable()
                dom.mouthpiece_actor:stop_chore(mouthpiece_box_third_hit)
                dom.mouthpiece_actor:play_chore_looping(mouthpiece_box_sitting)
                dom.mouthpiece_actor:setpos(0.29, 1.02654, -0.67)
                dom.mouthpiece.status = MOUTHPIECE_ON_FLOOR
            end
            dom.bag.punch_count = dom.bag.punch_count + 1
            manny:pop_costume()
            END_CUT_SCENE()
        end
    else
        START_CUT_SCENE(no_head)
        cameraman_disabled = FALSE
        manny:walkto_object(arg1)
        manny:push_costume(manny_box_cos)
        dom:current_setup(do_dorws)
        if speed_bag:is_choring(0) or speed_bag:is_choring(3) then
            manny:play_chore(manny_box_first_hit, manny_box_cos)
            sleep_for(600)
            start_sfx("speedhit.wav", nil, 90)
            sleep_for(400)
            speed_bag:stop_chore(3)
            speed_bag:stop_chore(0)
            speed_bag:play_chore(3)
        else
            speed_bag:stop_chore(0)
            speed_bag:play_chore(0)
            manny:play_chore(manny_box_first_hit, manny_box_cos)
            sleep_for(600)
            start_sfx("speedhit.wav", nil, 90)
        end
        manny:wait_for_chore()
        manny:pop_costume()
        dom:current_setup(do_winws)
        END_CUT_SCENE()
    end
end
dom.bag:make_untouchable()
dom.mouthpiece = Object:create(dom, "/dotx147/mouthpiece", 0.100145, 1.02106, 0.0100002, { range = 0.5 })
dom.mouthpiece.use_pnt_x = 0.28738701
dom.mouthpiece.use_pnt_y = 0.91093999
dom.mouthpiece.use_pnt_z = 0
dom.mouthpiece.use_rot_x = 0
dom.mouthpiece.use_rot_y = 56.720402
dom.mouthpiece.use_rot_z = 0
MOUTHPIECE_ON_SHELF = 0
MOUTHPIECE_KNOCKED_ONCE = 1
MOUTHPIECE_KNOCKED_TWICE = 2
MOUTHPIECE_ON_FLOOR = 3
dom.mouthpiece.bonded = FALSE
dom.mouthpiece.molded = FALSE
dom.mouthpiece.status = MOUTHPIECE_ON_SHELF
dom.mouthpiece.lookAt = function(arg1) -- line 924
    if arg1.bonded then
        if arg1.molded then
            manny:say_line("/doma148/")
        else
            manny:say_line("/doma149/")
        end
    else
        manny:say_line("/doma150/")
        if arg1.owner == manny then
            START_CUT_SCENE()
            wait_for_message()
            manny:say_line("/doma151/")
            END_CUT_SCENE()
        end
    end
end
dom.mouthpiece.pickUp = function(arg1) -- line 942
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:play_chore(ms_reach_low, "ms.cos")
    sleep_for(804)
    dom.mouthpiece:get()
    dom.mouthpiece_actor:free()
    manny:wait_for_chore(ms_reach_low, "ms.cos")
    manny:stop_chore(ms_reach_low, "ms.cos")
    manny:play_chore_looping(ms_hold, "ms.cos")
    manny:play_chore_looping(ms_activate_mouthpiece, "ms.cos")
    manny.hold_chore = ms_activate_mouthpiece
    manny.is_holding = dom.mouthpiece
    manny:say_line("/doma152/")
    END_CUT_SCENE()
end
dom.mouthpiece.use = function(arg1) -- line 959
    if arg1.owner == IN_THE_ROOM then
        arg1:pickUp()
    else
        START_CUT_SCENE()
        manny:push_costume("ma_fill_bondo.cos")
        manny:stop_chore(manny.hold_chore, "ms.cos")
        manny:stop_chore(ms_hold, "ms.cos")
        if arg1.bonded then
            cur_puzzle_state[10] = TRUE
            manny:play_chore(ma_fill_bondo_put_filled_mp_mouth)
            manny:wait_for_chore()
            manny:pop_costume()
            manny:play_chore_looping(manny.hold_chore, "ms.cos")
            manny:play_chore_looping(ms_hold, "ms.cos")
            if arg1.molded then
                manny:say_line("/doma153/")
            else
                arg1.molded = TRUE
                manny:say_line("/doma154/")
                wait_for_message()
                manny:say_line("/doma155/")
            end
        else
            manny:play_chore(ma_fill_bondo_wear_mp)
            manny:wait_for_chore()
            manny:play_chore(ma_fill_bondo_wear_turn)
            manny:wait_for_chore()
            manny:play_chore(ma_fill_bondo_takeoff_mp)
            manny:wait_for_chore()
            manny:pop_costume()
            manny:play_chore_looping(manny.hold_chore, "ms.cos")
            manny:play_chore_looping(ms_hold, "ms.cos")
            manny:say_line("/doma156/")
            wait_for_message()
            manny:say_line("/doma157/")
        end
        END_CUT_SCENE()
    end
end
dom.mouthpiece.default_response = function(arg1) -- line 1002
    if arg1.bonded then
        if arg1.molded then
            manny:say_line("/doma158/")
        else
            manny:say_line("/doma159/")
        end
    else
        manny:say_line("/doma160/")
    end
end
dom.mouthpiece:make_untouchable()
dom.window = Object:create(dom, "/dotx161/window", 1.1762, 3.0267, 0.47999999, { range = 0.69999999 })
dom.window.use_pnt_x = 1.20166
dom.window.use_pnt_y = 2.73315
dom.window.use_pnt_z = 0
dom.window.use_rot_x = 0
dom.window.use_rot_y = 3.5924101
dom.window.use_rot_z = 0
dom.window.out_pnt_x = 1.20166
dom.window.out_pnt_y = 2.73315
dom.window.out_pnt_z = 0
dom.window.out_rot_x = 0
dom.window.out_rot_y = 3.5924101
dom.window.out_rot_z = 0
dom.do_window_box = dom.window
dom.window.lookAt = function(arg1) -- line 1034
    manny:say_line("/doma162/")
end
dom.window.use = function(arg1) -- line 1038
    if reaped_meche then
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        if manny.is_holding then
            put_away_held_item()
        end
        dom:climb_out()
        END_CUT_SCENE()
    else
        manny:say_line("/doma163/")
    end
end
dom.window.walkOut = dom.window.use
dom.ha_door = Object:create(dom, "/dotx164/door", 0.76014501, -0.048941199, 0.50999999, { range = 0.93039 })
dom.do_ha_box = dom.ha_door
dom.ha_door.use_pnt_x = 0.75
dom.ha_door.use_pnt_y = 0.1
dom.ha_door.use_pnt_z = 0
dom.ha_door.use_rot_x = 0
dom.ha_door.use_rot_y = 179.62199
dom.ha_door.use_rot_z = 0
dom.ha_door.out_pnt_x = 0.74199998
dom.ha_door.out_pnt_y = -0.2
dom.ha_door.out_pnt_z = 0
dom.ha_door.out_rot_x = 0
dom.ha_door.out_rot_y = -179.88901
dom.ha_door.out_rot_z = 0
dom.ha_door.walkOut = function(arg1) -- line 1074
    if reaped_meche then
        soft_script()
        manny:say_line("/doma165/")
    else
        ha:come_out_door(ha.do_door)
    end
end
dom.ha_door.lookAt = function(arg1) -- line 1087
    manny:say_line("/doma167/")
end
dom.ha_door.pickUp = dom.ha_door.walkOut
domino_boxing_boxing = 0
domino_boxing_trans_spunch = 1
domino_boxing_drop_hands = 2
domino_boxing_to_talk = 3
domino_boxing_talk = 4
domino_boxing_to_box = 5
domino_boxing_mumble = 6
domino_boxing_no_talk = 7
domino_boxing_c = 8
domino_boxing_m = 9
domino_boxing_f = 10
domino_boxing_e = 11
domino_boxing_u = 12
domino_boxing_l = 13
domino_boxing_o = 14
domino_boxing_a = 15
domino_boxing_t = 16
dom_isle_idles_idle = 0
dom_isle_idles_idle_headphone = 1
dom_isle_idles_smoke = 2
dom_isle_idles_takeoff_headphone = 3
dom_isle_idles_put_on_headphone = 4
dom_isle_idles_point = 5
dom_isle_idles_point_hold = 6
dom_isle_idles_laugh = 7
dom_isle_idles_point2idle = 8
dom_isle_idles_doublehand = 9
dom_isle_idles_doublehand_hold = 10
dom_isle_idles_doublehand2idle = 11
dom_isle_idles_doublehand2point = 12
dom_isle_idles_point2doublehand = 13
dom_isle_idles_smoke_no_headphone = 14
dom_isle_idles_headphone_only = 15
dom_isle_idles_mumble = 16
dom_isle_idles_no_talk = 17
dom_isle_idles_c = 18
dom_isle_idles_m = 19
dom_isle_idles_f = 20
dom_isle_idles_e = 21
dom_isle_idles_u = 22
dom_isle_idles_l = 23
dom_isle_idles_o = 24
dom_isle_idles_a = 25
dom_isle_idles_gun_out = 26
dom_isle_idles_gun_idle = 27
dom_isle_idles_head_shake = 28
dom_isle_idles_hide_gun = 29
dom_isle_idles_thumb_at_ma = 30
dom_isle_idles_thumb_idle = 31
dom_isle_idles_thumb2idle = 32
dom_isle_idles_shrug = 33
dom_isle_idles_count2 = 34
dom_isle_idles_countdown = 35
dom_isle_idles_count1 = 36
dom_isle_idles_t = 37
do_scotch_show = 0
do_scotch_hide = 1
tube_Chore0 = 0
doug_idles_rest = 0
doug_idles_look_down = 1
doug_idles_look_up = 2
doug_idles_nod = 3
doug_idles_look_left = 4
doug_idles_look_rest = 5
doug_idles_shake_left = 6
doug_idles_mumble = 7
doug_idles_stop_talk = 8
doug_idles_o = 9
doug_idles_m = 10
doug_idles_l = 11
doug_idles_c = 12
doug_idles_a = 13
doug_idles_e = 14
doug_idles_f = 15
doug_idles_u = 16
doug_idles_take_stub = 17
doug_idles_look_stub = 18
doug_idles_rid_stub = 19
doug_idles_take_photo = 20
doug_idles_get_photo = 21
doug_idles_get_photo_hold = 22
doug_idles_give_photo = 23
doug_idles_t = 24
do_window_open_window_set_open = 0
do_window_open_window_set_closed = 1
CheckFirstTime("dp.lua")
dp = Set:create("dp.set", "dock porthole", { dp_top = 0, dp_extms = 1 })
dp.anchor_creak_vol = 20
dp.position_manny = function() -- line 15
    START_CUT_SCENE()
    break_here()
    break_here()
    manny:walkto(dp.anchor)
    manny:wait_for_actor()
    END_CUT_SCENE()
end
dp.anchor_cutscene = function(arg1, arg2) -- line 24
    local local1 = { }
    local local2 = 0
    dp:switch_to_set()
    if arg2 == "lower" then
        start_sfx("anchup.wav")
        repeat
            local1 = star_anchor:getpos()
            local2 = local2 + 0.1
            local1.z = local1.z - PerSecond(local2)
            if local1.z < -0.84289998 then
                local1.z = -0.84289998
            end
            star_anchor:setpos(local1.x, local1.y, local1.z)
            break_here()
        until local1.z == -0.84289998
        start_sfx("anchspls.wav")
    else
        start_sfx("anchup.wav")
        repeat
            local1 = star_anchor:getpos()
            local2 = local2 + 0.1
            local1.z = local1.z + PerSecond(local2)
            if local1.z > 0.79110003 then
                local1.z = 0.79110003
            end
            star_anchor:setpos(local1.x, local1.y, local1.z)
            break_here()
        until local1.z == 0.79110003
    end
    ei:switch_to_set()
end
dp.end_result = function(arg1) -- line 57
    dp:switch_to_set_soft()
    star_anchor:put_in_set(dp)
    star_hook:put_in_set(dp)
    star_anchor:setpos(0.0198187, -0.354, 0.6412)
    star_anchor:setrot(0, 90, 0)
    star_hook:setrot(0, 90, 0)
    star_anchor:play_chore_looping(anchors_upr_sway)
    star_hook:play_chore_looping(anchors_lower_sway)
    port_anchor:setpos(-0.0597416, -0.3246, -0.696)
    port_anchor:setrot(0, 20, 0)
    port_anchor:stop_chore()
    port_hook:play_chore(anchors_lower_sway)
    sleep_for(3000)
    dp:return_to_set()
end
dp.switch_to_set_soft = function(arg1) -- line 79
    system.lastSet = system.currentSet
    LockSet(system.currentSet.setFile)
    inventory_save_set = system.currentSet
    arg1:CommonEnter()
    MakeCurrentSet(arg1.setFile)
    arg1:enter()
    system.currentSet = dp
    if system.ambientLight then
        SetAmbientLight(system.ambientLight)
    end
    inventory_save_handler = system.buttonHandler
end
dp.return_to_set = function(arg1) -- line 95
    dp:exit()
    system.currentSet = inventory_save_set
    UnLockSet(inventory_save_set.setFile)
    MakeCurrentSet(inventory_save_set.setFile)
    system.buttonHandler = inventory_save_handler
end
dp.enter = function(arg1) -- line 110
    dp:current_setup(dp_extms)
    if ei.ship_ripped then
        NewObjectState(dp_extms, OBJSTATE_STATE, "dp_torn.bm", "dp_torn.zbm")
        dp.anchor:set_object_state("dp_tear.cos")
        dp.anchor:play_chore(0)
    end
    force_star_anchor_update = TRUE
    start_script(dp.position_manny)
    star_anchor:put_in_set(dp)
    star_hook:put_in_set(dp)
    SetActorClipPlane(manny.hActor, 0, 1, 0.02, -0.03, 0.0106954, 0)
    SetActorClipActive(manny.hActor, TRUE)
    MakeSectorActive("dp_wall", FALSE)
    if ei.sa.state == "straight" or ei.sa.state == "out" or ei.sa.state == "up" or ei.sa.state == "under" then
        start_sfx("dpCreak.imu", IM_HIGH_PRIORITY, 90)
    end
end
dp.exit = function(arg1) -- line 133
    SetActorClipActive(manny.hActor, FALSE)
    stop_sound("dpCreak.imu")
end
dp.anchor = Object:create(dp, "anchor", 0.102681, -0.505, 0.62, { range = 2 })
dp.anchor.use_pnt_x = -0.037318699
dp.anchor.use_pnt_y = 0.125
dp.anchor.use_pnt_z = 0
dp.anchor.use_rot_x = 0
dp.anchor.use_rot_y = -165.627
dp.anchor.use_rot_z = 0
dp.anchor.lookAt = function(arg1) -- line 152
    if ei.ship_ripped then
        manny:say_line("/eima009/")
    elseif ei.sa.state == "up" then
        if ei.anchors_hooked then
            start_script(ei.anchor_talk, "locked")
        else
            start_script(ei.anchor_talk, "up")
        end
    else
        start_script(ei.anchor_talk, "down")
    end
end
dp.anchor.pickUp = function(arg1) -- line 168
    system.default_response("reach")
end
dp.anchor.use = dp.anchor.pickUp
dp.anchor.use_scythe = function(arg1) -- line 174
    local local1 = 0
    if ei.ship_ripped then
        manny:say_line("/eima009/")
    else
        START_CUT_SCENE()
        if ei.sa.state == "up" then
            if ei.anchors_hooked then
                ei.pa.state = "portholed"
                hooked_porthole = dp.anchor
                MakeSectorActive("dp_wall", TRUE)
                manny:walkto(0.0173187, 0.176, 0, 0, 180, 0)
                manny:wait_for_actor()
                stop_script(monitor_star_anchor_state)
                stop_script(monitor_port_anchor_state)
                star_anchor:set_chore_looping(anchors_upr_sway, FALSE)
                star_hook:set_chore_looping(anchors_lower_sway, FALSE)
                star_anchor:wait_for_chore()
                star_hook:wait_for_chore()
                SetActorClipActive(manny.hActor, FALSE)
                manny:push_costume("mn_hook_anchors.cos")
                manny:stop_chore(mn2_hold_scythe, "mn2.cos")
                manny:play_chore(0)
                star_anchor:stop_chore(anchors_upr_sway)
                star_hook:stop_chore(anchors_lower_sway)
                star_anchor:play_chore(anchors_upr_hooked)
                star_hook:play_chore(anchors_lower_hooked)
                manny:wait_for_chore()
                manny:pop_costume()
                manny:walkto(0.0014863299, 0.36675799, 0, 0, -175, 0)
                SetActorClipActive(manny.hActor, TRUE)
                MakeSectorActive("dp_wall", FALSE)
                manny:play_chore_looping(mn2_hold_scythe, "mn2.cos")
                start_script(show_hooked_anchor, star_anchor)
                start_script(ei.anchor_talk, "there")
            else
                MakeSectorActive("dp_wall", TRUE)
                manny:walkto(-0.104396, 0.220246, 0, 0, -208.562, 0)
                manny:wait_for_actor()
                manny:head_look_at(manny)
                manny:play_chore(mn2_lft_on_obj, "mn2.cos")
                manny:wait_for_chore()
                start_sfx("anchup.wav")
                repeat
                    pos = star_anchor:getpos()
                    local1 = local1 + 0.1
                    pos.z = pos.z - PerSecond(local1)
                    if pos.z < 0.30000001 then
                        pos.z = 0.30000001
                    end
                    star_anchor:setpos(pos.x, pos.y, pos.z)
                    break_here()
                until pos.z == 0.30000001
                stop_sound("anchup.wav")
                manny:play_chore(mn2_lft_off, "mn2.cos")
                manny:wait_for_chore()
                manny:walkto(0.0173187, 0.176, 0, 0, 180, 0)
                manny:wait_for_actor()
                SetActorClipActive(manny.hActor, FALSE)
                manny:push_costume("mn_hook_anchors.cos")
                manny:stop_chore(mn2_hold_scythe, "mn2.cos")
                manny:play_chore(1)
                manny:wait_for_chore()
                manny:pop_costume()
                manny:play_chore_looping(mn2_hold_scythe, "mn2.cos")
                manny:walkto(-0.104396, 0.220246, 0, 0, -208.562, 0)
                manny:wait_for_actor()
                manny:head_look_at(manny)
                manny:play_chore(mn2_lft_on_obj, "mn2.cos")
                manny:wait_for_chore()
                SetActorClipActive(manny.hActor, TRUE)
                start_sfx("anchup.wav")
                local1 = 0
                repeat
                    pos = star_anchor:getpos()
                    local1 = local1 + 0.1
                    pos.z = pos.z + PerSecond(local1)
                    if pos.z > 0.76789999 then
                        pos.z = 0.76789999
                    end
                    star_anchor:setpos(pos.x, pos.y, pos.z)
                    break_here()
                until pos.z == 0.76789999
                stop_sound("anchup.wav")
                manny:play_chore(mn2_lft_off, "mn2.cos")
                manny:wait_for_chore()
                manny:walkto(0.0014863299, 0.36675799, 0, 0, -175, 0)
                MakeSectorActive("dp_wall", FALSE)
                system.default_response("frustrated")
                system.default_response("frustrated")
            end
        else
            start_script(ei.anchor_talk, "easier")
        end
        manny:wait_for_message()
        mo.scythe:put_away()
        END_CUT_SCENE()
    end
end
dp.ei_door = Object:create(dp, "/dptx002/door", -0.60294801, 0.13393299, 0, { range = 0.60000002 })
dp.ei_door.use_pnt_x = -0.60294801
dp.ei_door.use_pnt_y = 0.13393299
dp.ei_door.use_pnt_z = 0
dp.ei_door.use_rot_x = 0
dp.ei_door.use_rot_y = -171.37199
dp.ei_door.use_rot_z = 0
dp.ei_door:make_untouchable()
dp.ei_box = dp.ei_door
dp.ei_door.walkOut = function(arg1) -- line 302
    ei:come_out_door(ei.dp_door)
end
dp_tear_Chore0 = 0
CheckFirstTime("dr.lua")
dr = Set:create("dr.set", "dominos room", { dr_winws = 0, dr_winws1 = 0, dr_dorrv = 1, dr_ovrhd = 2 })
dofile("dom_isle_idles.lua")
dr.gw = function() -- line 14
    mn.gun:get()
    mn.chisel:get()
    fo.hammer:get()
    mo.scythe:get()
end
dr.dp = function() -- line 21
    stop_script(dr.weapons_check)
    stop_script(dr.smoke_idles)
    dofile("patch")
    start_script(dr.weapons_check)
    start_script(dr.smoke_idles)
end
fs = function() -- line 29
    domino:play_chore(dom_isle_idles_idle_headphone, "dom_isle_idles.cos")
    domino:fade_out_chore(dom_isle_idles_smoke, "dom_isle_idles.cos", 1000)
end
dr.weapons_check = function() -- line 34
    local local1 = manny.is_holding
    while 1 do
        if system.currentSet == dr then
            if manny.is_holding == mn.gun or manny.is_holding == mn.chisel or (manny.is_holding == fo.hammer and not dr.laughed_at_hammer) or manny.is_holding == mo.scythe then
                set_override(nil)
                START_CUT_SCENE()
                stop_script(dr.smoke_idles)
                local1 = manny.is_holding
                if domino.smoking then
                    domino.smoking = FALSE
                    domino:play_chore(dom_isle_idles_idle_headphone, "dom_isle_idles.cos")
                    domino:fade_out_chore(dom_isle_idles_smoke, "dom_isle_idles.cos", 750)
                    sleep_for(750)
                end
                domino:run_chore(dom_isle_idles_gun_out, "dom_isle_idles.cos")
                wait_for_script(close_inventory)
                if local1 == fo.hammer then
                    dr.laughed_at_hammer = TRUE
                    domino:say_line("/drdo071/")
                    wait_for_message()
                    domino:say_line("/drdo072/")
                    wait_for_message()
                    domino:play_chore(dom_isle_idles_laugh, "dom_isle_idles.cos")
                    domino:say_line("/drdo073/")
                    wait_for_message()
                    domino:say_line("/drdo074/")
                    domino:wait_for_chore(dom_isle_idles_laugh, "dom_isle_idles.cos")
                else
                    if not dr.tried_weapon then
                        dr.tried_weapon = TRUE
                        domino:say_line("/drdo075/")
                    else
                        domino:say_line("/drdo076/")
                    end
                    domino:wait_for_message()
                    manny:clear_hands()
                    domino:say_line("/drdo077/")
                end
                domino:run_chore(dom_isle_idles_hide_gun, "dom_isle_idles.cos")
                domino:fade_out_chore(dom_isle_idles_hide_gun, "dom_isle_idles.cos")
                domino:complete_chore(dom_isle_idles_idle_headphone, "dom_isle_idles.cos")
                single_start_script(dr.smoke_idles)
                END_CUT_SCENE()
            end
        end
        break_here()
    end
end
test = function() -- line 87
    while 1 do
        PrintDebug(cutSceneLevel)
        break_here()
    end
end
dr.smoke_idles = function(arg1) -- line 94
    while 1 do
        domino.smoking = FALSE
        sleep_for(10000 + 5000 * random())
        domino.smoking = TRUE
        if arg1 then
            domino:run_chore(dom_isle_idles_smoke_no_headphone, "dom_isle_idles.cos")
            domino:stop_chore(dom_isle_idles_smoke_no_headphone, "dom_isle_idles.cos")
            domino:complete_chore(dom_isle_idles_idle, "dom_isle_idles.cos")
        else
            domino:run_chore(dom_isle_idles_smoke, "dom_isle_idles.cos")
            domino:stop_chore(dom_isle_idles_smoke, "dom_isle_idles.cos")
            domino:complete_chore(dom_isle_idles_idle_headphone, "dom_isle_idles.cos")
        end
    end
end
dr.phones_off = function() -- line 112
    domino.wearing_headphones = FALSE
    domino:play_chore(dom_isle_idles_takeoff_headphone, "dom_isle_idles.cos")
    sleep_for(1600)
    dr.phones:set_visibility(TRUE)
    start_sfx("TinHect.IMU", IM_HIGH_PRIORITY, 127)
    set_pan("TinHect.IMU", 80)
end
dr.phones_on = function() -- line 121
    domino.wearing_headphones = TRUE
    domino:play_chore(dom_isle_idles_put_on_headphone, "dom_isle_idles.cos")
    fade_sfx("TinHect.IMU", 500, 0)
    sleep_for(500)
    dr.phones:set_visibility(FALSE)
end
dr.set_up_actors = function(arg1) -- line 129
    domino:set_costume(nil)
    domino:default()
    domino:ignore_boxes()
    domino:put_in_set(dr)
    domino:set_costume("dom_isle_idles.cos")
    domino:setpos(-0.0463288, 0.999448, 0)
    domino:setrot(0, 108.041, 0)
    domino:set_mumble_chore(dom_isle_idles_mumble, "dom_isle_idles.cos")
    domino:set_talk_chore(1, dom_isle_idles_no_talk)
    domino:set_talk_chore(2, dom_isle_idles_a)
    domino:set_talk_chore(3, dom_isle_idles_c)
    domino:set_talk_chore(4, dom_isle_idles_e)
    domino:set_talk_chore(5, dom_isle_idles_f)
    domino:set_talk_chore(6, dom_isle_idles_l)
    domino:set_talk_chore(7, dom_isle_idles_m)
    domino:set_talk_chore(8, dom_isle_idles_o)
    domino:set_talk_chore(9, dom_isle_idles_t)
    domino:set_talk_chore(10, dom_isle_idles_u)
    domino:set_head(6, 7, 8, 165, 28, 80)
    domino:set_look_rate(130)
    if not dr.phones then
        dr.phones = Actor:create()
    end
    dr.phones:ignore_boxes()
    dr.phones:put_in_set(dr)
    dr.phones:set_costume("dom_isle_idles.cos")
    dr.phones:setpos(-0.0463288, 0.999448, 0)
    dr.phones:setrot(0, 108.041, 0)
    dr.phones:play_chore(dom_isle_idles_headphone_only, "dom_isle_idles.cos")
    dr.phones:set_visibility(FALSE)
    domino.wearing_headphones = TRUE
    domino:play_chore(dom_isle_idles_idle_headphone, "dom_isle_idles.cos")
    start_script(dr.smoke_idles)
    SetShadowColor(10, 10, 20)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 100, 40, 600)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
end
dr.enter = function(arg1) -- line 182
    dr:set_up_actors()
    start_script(dr.weapons_check)
end
dr.camerachange = function(arg1, arg2, arg3) -- line 187
    if arg3 == dr_winws then
        domino:setpos(-0.0463288, 0.999448, -0.06)
    else
        domino:setpos(-0.0463288, 0.999448, 0)
    end
end
dr.exit = function(arg1) -- line 195
    domino:free()
    dr.phones:free()
    stop_script(dr.smoke_idles)
    stop_script(dr.weapons_check)
    dr.tried_weapon = FALSE
    KillActorShadows(manny.hActor)
    if sound_playing("TinHect.IMU") then
        stop_sound("TinHect.IMU")
    end
end
dr.domino_obj = Object:create(dr, "/drtx078/Domino", 0.076994799, 0.99400002, 0.4465, { range = 1 })
dr.domino_obj.use_pnt_x = -0.25600499
dr.domino_obj.use_pnt_y = 0.34999999
dr.domino_obj.use_pnt_z = 0
dr.domino_obj.use_rot_x = 0
dr.domino_obj.use_rot_y = -33.384602
dr.domino_obj.use_rot_z = 0
dr.domino_obj.lookAt = function(arg1) -- line 223
    manny:say_line("/drma079/")
end
dr.domino_obj.use = function(arg1) -- line 227
    Dialog:run("do2", "dlg_dom2.lua")
end
dr.domino_obj.use_hammer = function(arg1) -- line 231
    manny:say_line("/drma080/")
end
dr.domino_obj.use_stockings = function(arg1) -- line 235
    manny:say_line("/drma081/")
end
dr.ar_door = Object:create(dr, "/drtx082/door", 0.0126288, -2.9293399, 0.31999999, { range = 0.60000002 })
dr.ar_door.use_pnt_x = 0.00262878
dr.ar_door.use_pnt_y = -2.7093401
dr.ar_door.use_pnt_z = -0.14
dr.ar_door.use_rot_x = 0
dr.ar_door.use_rot_y = -533.91199
dr.ar_door.use_rot_z = 0
dr.ar_door.out_pnt_x = 0.00262878
dr.ar_door.out_pnt_y = -2.7093401
dr.ar_door.out_pnt_z = -0.14
dr.ar_door.out_rot_x = 0
dr.ar_door.out_rot_y = -533.91199
dr.ar_door.out_rot_z = 0
dr.ar_box = dr.ar_door
dr.ar_door.walkOut = function(arg1) -- line 260
    ar:come_out_door(ar.dr_door)
end
ea_door_open = 0
ea_door_close = 1
ea_door_set_open = 2
ea_door_set_closed = 3
CheckFirstTime("ea.lua")
dofile("ea_door.lua")
ea = Set:create("ea.set", "exterior airlock", { ea_widha = 0, ea_ovrhd = 1 })
ea.cheat_boxes = { pole_cheat = 0 }
ea.arrive = function() -- line 16
    START_CUT_SCENE()
    ew:switch_to_set()
    sleep_for(5000)
    mn:switch_to_set()
    play_movie("mn_sub.snm", 107, 0)
    wait_for_movie()
    sleep_for(1000)
    ea:switch_to_set()
    play_movie("ea_sub.snm", 0, 128)
    wait_for_movie()
    manny:put_in_set(ea)
    manny:ignore_boxes()
    glottis:default("sailor")
    glottis:put_in_set(ea)
    manny:push_costume("mn_jump_sub.cos")
    manny:set_softimage_pos(-3.2175, -0.0112, 98.4986)
    manny:setrot(0, -74.461, 0)
    glottis:push_costume("gl_jump_sub.cos")
    glottis:set_softimage_pos(7.1378, 0, 99.9097)
    glottis:setrot(0, 2.527, 0)
    start_sfx("current.IMU", IM_HIGH_PRIORITY, 0)
    fade_sfx("current.IMU", 1000, 127)
    manny:play_chore(0, "mn_jump_sub.cos")
    glottis:play_chore(0, "gl_jump_sub.cos")
    sleep_for(6000)
    fade_sfx("current.IMU", 500, 0)
    manny:wait_for_chore(0, "mn_jump_sub.cos")
    manny:pop_costume()
    glottis:say_line("/eagl001/")
    wait_for_message()
    manny:twist_head_gesture()
    manny:say_line("/eama002/")
    wait_for_message()
    glottis:wait_for_chore(0, "gl_jump_sub.cos")
    glottis:pop_costume()
    manny:follow_boxes()
    ea.glottis_obj.touchable = TRUE
    END_CUT_SCENE()
end
ea.set_up_actors = function() -- line 63
    if not dr.reunited then
        if not find_script(ea.arrive) and not find_script(cut_scene.subjacked) then
            glottis:default("sailor")
            glottis:put_in_set(ea)
            glottis:set_softimage_pos(7.1378, 0, 99.9097)
            glottis:setrot(0, 2.527, 0)
        end
        ea.glottis_obj:make_touchable()
    else
        glottis:put_in_set(nil)
        ea.glottis_obj:make_untouchable()
    end
end
ea.enter = function(arg1) -- line 84
    ea.fh_door.hObjectState = ea:add_object_state(ea_widha, "ea_door.bm", nil, OBJSTATE_UNDERLAY)
    ea.fh_door:set_object_state("ea_door.cos")
    start_script(ea.set_up_actors)
    ea:add_ambient_sfx(underwater_ambience_list, underwater_ambience_parm_list)
end
ea.exit = function(arg1) -- line 93
    glottis:free()
    stop_sound("bubvox.imu")
end
ea.darkness1 = { }
ea.darkness2 = ea.darkness1
ea.darkness1.walkOut = function(arg1) -- line 108
    manny:say_line("/eama003/")
end
ea.glottis_obj = Object:create(ea, "/eatx004/Glottis", 0.68710399, -10.0523, 0.72960001, { range = 1 })
ea.glottis_obj.use_pnt_x = 0.32505101
ea.glottis_obj.use_pnt_y = -9.4310799
ea.glottis_obj.use_pnt_z = 0
ea.glottis_obj.use_rot_x = 0
ea.glottis_obj.use_rot_y = 206.12399
ea.glottis_obj.use_rot_z = 0
ea.glottis_obj.touchable = FALSE
ea.glottis_obj.lookAt = function(arg1) -- line 124
    manny:say_line("/eama005/")
end
ea.glottis_obj.pickUp = function(arg1) -- line 128
    system.default_response("underwater")
end
ea.glottis_obj.use = function(arg1) -- line 132
    START_CUT_SCENE()
    manny:say_line("/eama006/")
    wait_for_message()
    glottis:say_line("/eagl007/")
    wait_for_message()
    glottis:say_line("/eagl008/")
    END_CUT_SCENE()
end
ea.mn_door = Object:create(ea, "/eatx009/lit pathway", -2.69999, -9.8492899, 0.51999998, { range = 1 })
ea.mn_door.use_pnt_x = -2.3099899
ea.mn_door.use_pnt_y = -9.7892904
ea.mn_door.use_pnt_z = 0
ea.mn_door.use_rot_x = 0
ea.mn_door.use_rot_y = 119.254
ea.mn_door.use_rot_z = 0
ea.mn_door.out_pnt_x = -2.5891199
ea.mn_door.out_pnt_y = -9.9456701
ea.mn_door.out_pnt_z = 0
ea.mn_door.out_rot_x = 0
ea.mn_door.out_rot_y = 119.254
ea.mn_door.out_rot_z = 0
ea.mn_box = ea.mn_door
ea.mn_door.lookAt = function(arg1) -- line 165
    manny:say_line("/eama010/")
end
ea.mn_door.walkOut = function(arg1) -- line 169
    mn:come_out_door(mn.ea_door)
end
ea.cy_door = Object:create(ea, "lit pathway", 5.0538101, -3.96085, 0.51999998, { range = 1.5 })
ea.cy_door.use_pnt_x = 5.1205502
ea.cy_door.use_pnt_y = -3.6636901
ea.cy_door.use_pnt_z = 0
ea.cy_door.use_rot_x = 0
ea.cy_door.use_rot_y = 312.728
ea.cy_door.use_rot_z = 0
ea.cy_door.out_pnt_x = 5.5071602
ea.cy_door.out_pnt_y = -3.30352
ea.cy_door.out_pnt_z = 0
ea.cy_door.out_rot_x = 0
ea.cy_door.out_rot_y = 311.811
ea.cy_door.out_rot_z = 0
ea.cy_box = ea.cy_door
ea.cy_door.lookAt = function(arg1) -- line 190
    manny:say_line("/eama011/")
end
ea.cy_door.walkOut = function(arg1) -- line 194
    cy:come_out_door(cy.ea_door)
end
ea.fh_door = Object:create(ea, "/eatx018/door", 0.075093001, -2.7922699, 0.46059999, { range = 0.60000002 })
ea.fh_door.use_pnt_x = -0.033969998
ea.fh_door.use_pnt_y = -3.7019999
ea.fh_door.use_pnt_z = 0
ea.fh_door.use_rot_x = 0
ea.fh_door.use_rot_y = 0
ea.fh_door.use_rot_z = 0
ea.fh_door.out_pnt_x = -0.0350269
ea.fh_door.out_pnt_y = -2.825
ea.fh_door.out_pnt_z = 0
ea.fh_door.out_rot_x = 0
ea.fh_door.out_rot_y = 0
ea.fh_door.out_rot_z = 0
ea.fh_box = ea.fh_door
ea.fh_box.passage = { "fh_psg" }
ea.fh_door.walkOut = function(arg1) -- line 218
    if not fh.been_there then
        START_CUT_SCENE()
        set_override(ea.fh_door.skipWalkOut, ea.fh_door)
        manny:face_entity(ea.glottis_obj)
        manny:head_look_at(ea.glottis_obj)
        manny:say_line("/eama012/")
        manny:wait_for_message()
        glottis:say_line("/eagl013/")
        glottis:wait_for_message()
        manny:say_line("/eama014/")
        manny:wait_for_message()
        manny:setrot(arg1.out_rot_x, arg1.out_rot_y, arg1.out_rot_z, TRUE)
        glottis:say_line("/eagl015/")
        glottis:wait_for_message()
        glottis:say_line("/eagl016/")
        glottis:wait_for_message()
        END_CUT_SCENE()
    end
    START_CUT_SCENE()
    set_override(ea.fh_door.skipWalkOut, ea.fh_door)
    manny:clear_hands()
    manny:walkto(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
    manny:wait_for_actor()
    ea.fh_door:close()
    END_CUT_SCENE()
    fh:come_out_door(fh.ea_door)
end
ea.fh_door.skipWalkOut = function(arg1) -- line 249
    kill_override()
    manny:clear_hands()
    ea.fh_door:close()
    fh:come_out_door(fh.ea_door)
end
ea.fh_door.lookAt = function(arg1) -- line 256
    manny:say_line("/eama017/")
end
ea.fh_door.comeOut = function(arg1) -- line 260
    START_CUT_SCENE()
    arg1:open()
    arg1:complete_chore(ea_door_set_open)
    manny:put_in_set(ea)
    manny:setpos(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
    manny:setrot(arg1.out_rot_x, arg1.out_rot_y + 180, arg1.out_rot_z)
    manny:walkto(arg1.use_pnt_x, arg1.use_pnt_y, arg1.use_pnt_z)
    END_CUT_SCENE()
end
ea.fh_trigger = { }
ea.fh_trigger.walkOut = function(arg1) -- line 274
    if not ea.fh_door.opened then
        start_sfx("eadoorop.wav")
        ea.fh_door:play_chore(ea_door_open)
        ea.fh_door:wait_for_chore(ea_door_open)
        ea.fh_door:open()
    end
    start_script(ea.fh_trigger.wait_to_close)
end
ea.fh_trigger.wait_to_close = function(arg1) -- line 284
    while system.currentSet == ea and manny:find_sector_name("fh_trigger") do
        break_here()
    end
    if system.currentSet == ea then
        if not manny:find_sector_name("to_airlock") then
            ea.fh_door:close()
            start_sfx("eadoorcl.wav")
            ea.fh_door:play_chore(ea_door_close)
            ea.fh_door:wait_for_chore(ea_door_close)
        end
    end
end
eggs_egg = 0
ei_door_Chore0 = 0
ei_door_Chore1 = 1
CheckFirstTime("ei.lua")
ei = Set:create("ei.set", "engine room interior", { ei_top = 0, ei_intha = 1 })
dofile("mn_levers.lua")
dofile("ei_outside.lua")
ei.ship_creak_vol = 14
dofile("anchors.lua")
show_hooked_anchor = function(arg1) -- line 32
    prop_anchor = Actor:create(nil, nil, nil, "prop anchor")
    prop_hook = Actor:create(nil, nil, nil, "prop_hook")
    prop_anchor:put_in_set(ei)
    prop_anchor:set_costume("anchors.cos")
    prop_anchor:setrot(0, 0, 0)
    prop_anchor:play_chore_looping(anchors_upr_hooked_stop)
    prop_hook:put_in_set(ei)
    prop_hook:set_costume("anchors.cos")
    prop_hook:setrot(0, 0, 0)
    prop_hook:play_chore_looping(anchors_lwr_hooked_stop)
    start_script(locate_bottom_anchor, prop_anchor, prop_hook)
    if arg1 == star_anchor then
        port_anchor:setpos(-0.0597416, -0.3246, -0.696)
        port_anchor:setrot(0, 20, 0)
        star_anchor:setpos(0.0198187, -0.354, 0.6412)
        star_anchor:setrot(0, 180, 0)
        star_hook:setrot(0, 180, 0)
        prop_anchor:setpos(1.5107, 0.7343, 0.8152)
        prop_anchor:setrot(0, 270, 0)
        prop_hook:setrot(0, 270, 0)
    else
        star_anchor:setpos(0.0467813, -0.6282, -0.8429)
        star_anchor:setrot(0, 0, 0)
        port_anchor:setpos(0.100058, -0.3298, 0.6692)
        port_anchor:setrot(0, 180, 0)
        port_hook:setrot(0, 180, 0)
        prop_anchor:setpos(-1.5706, 0.5713, 0.8503)
        prop_anchor:setrot(0, 90, 0)
        prop_hook:setrot(0, 90, 0)
    end
end
monitor_port_anchor_state = function() -- line 75
    local local1
    local local2 = ei.pa
    local local3 = ei.anchors_hooked
    while 1 do
        force_port_anchor_update = FALSE
        port_anchor:put_in_set(op)
        port_hook:put_in_set(op)
        local1 = local2.state
        local3 = ei.anchors_hooked
        port_anchor:stop_chore()
        port_hook:stop_chore()
        if ei.anchors_hooked then
            port_hook:set_visibility(TRUE)
        else
            port_hook:set_visibility(FALSE)
        end
        if local2.state == "out" then
            port_anchor:setpos(-0.136742, -1.4378, -0.14749999)
            port_anchor:setrot(-45, 0, 0)
            port_anchor:play_chore_looping(anchors_upr_sway)
        elseif local2.state == "straight" or local2.state == "under" then
            port_anchor:setpos(0.040158398, -0.5553, -0.69999999)
            port_anchor:setrot(0, 180, 0)
            port_anchor:play_chore_looping(anchors_upr_sway)
            port_hook:play_chore_looping(anchors_lower_sway)
        elseif local2.state == "drawn" or local2.state == "portholed" then
            port_anchor:setpos(-0.059741601, -0.32460001, -0.69599998)
            port_anchor:setrot(0, 20, 0)
            port_hook:play_chore(anchors_lower_sway)
        elseif local2.state == "up" then
            port_anchor:setpos(0.100058, -0.32980001, 0.6692)
            port_anchor:setrot(0, 180, 0)
            port_hook:setrot(0, 180, 0)
            port_anchor:play_chore_looping(anchors_upr_sway)
            port_hook:play_chore_looping(anchors_lower_sway)
        end
        while local2.state == local1 and local3 == ei.anchors_hooked and not force_port_anchor_update do
            break_here()
        end
        break_here()
    end
end
monitor_star_anchor_state = function() -- line 126
    local local1
    local local2 = ei.sa
    local local3 = ei.anchors_hooked
    while 1 do
        force_star_anchor_update = FALSE
        local1 = local2.state
        local3 = ei.anchors_hooked
        star_anchor:put_in_set(dp)
        star_hook:put_in_set(dp)
        star_anchor:stop_chore()
        star_hook:stop_chore()
        if ei.anchors_hooked then
            star_hook:set_visibility(TRUE)
        else
            star_hook:set_visibility(FALSE)
        end
        if local2.state == "out" then
            star_anchor:setpos(0.0051812702, -1.8283, -0.18520001)
            star_anchor:setrot(-45, 0, 0)
            star_anchor:play_chore_looping(anchors_upr_sway)
        elseif local2.state == "straight" or local2.state == "under" then
            star_anchor:setpos(0.046781301, -0.62819999, -0.69999999)
            star_anchor:setrot(0, 180, 0)
            star_hook:play_chore_looping(anchors_lower_sway)
            star_anchor:play_chore_looping(anchors_upr_sway)
        elseif local2.state == "drawn" or local2.state == "portholed" then
            star_anchor:setpos(0.046781301, -0.62819999, -0.84289998)
            star_anchor:setrot(0, 0, 0)
            star_hook:play_chore(anchors_lower_sway)
        elseif local2.state == "up" then
            star_anchor:setpos(0.019818701, -0.354, 0.64120001)
            star_anchor:setrot(0, 180, 0)
            star_hook:setrot(0, 180, 0)
            star_anchor:play_chore_looping(anchors_upr_sway)
            star_hook:play_chore_looping(anchors_lower_sway)
        end
        while local2.state == local1 and local3 == ei.anchors_hooked and not force_star_anchor_update do
            break_here()
        end
        break_here()
    end
end
ei.sa = { state = "straight", name = "starboard anchor" }
ei.pa = { state = "straight", name = "port-side anchor" }
ei.sa.other_anchor = ei.pa
ei.pa.other_anchor = ei.sa
ei.anchors_hooked = FALSE
ei.boat_state = "pier"
locate_bottom_anchor = function(arg1, arg2) -- line 206
    local local1 = { x = 0, y = 0, z = 0 }
    local local2 = { }
    local local3, local4
    while arg2:get_costume() do
        local2 = arg1:getrot()
        local4 = RotateVector(local1, local2)
        local3 = arg1:getpos()
        local4.x = local4.x + local3.x
        local4.y = local4.y + local3.y
        local4.z = local4.z + local3.z
        arg2:setpos(local4.x, local4.y, local4.z)
        break_here()
    end
end
anchor_init = function() -- line 224
    if not star_anchor then
        star_anchor = Actor:create(nil, nil, nil, "star anchor")
        port_anchor = Actor:create(nil, nil, nil, "port anchor")
        star_hook = Actor:create(nil, nil, nil, "star bottom anchor")
        port_hook = Actor:create(nil, nil, nil, "port bottom anchor")
    end
    star_anchor:put_in_set(dp)
    star_anchor:set_costume("anchors.cos")
    port_anchor:setrot(0, 0, 0)
    star_anchor:play_chore_looping(anchors_upr_sway)
    star_hook:put_in_set(dp)
    star_hook:set_costume("anchors.cos")
    star_hook:play_chore_looping(anchors_lower_sway)
    start_script(locate_bottom_anchor, star_anchor, star_hook)
    port_anchor:put_in_set(op)
    port_anchor:set_costume("anchors.cos")
    port_anchor:setrot(0, 0, 0)
    port_anchor:play_chore_looping(anchors_upr_sway)
    port_hook:put_in_set(op)
    port_hook:set_costume("anchors.cos")
    port_hook:play_chore_looping(anchors_lower_sway)
    start_script(locate_bottom_anchor, port_anchor, port_hook)
    if ei.anchors_hooked then
        port_hook:set_visibility(TRUE)
        star_hook:set_visibility(TRUE)
    else
        port_hook:set_visibility(FALSE)
        star_hook:set_visibility(FALSE)
    end
    start_script(monitor_port_anchor_state)
    start_script(monitor_star_anchor_state)
end
ei.anchor_rip = function() -- line 264
    local local1 = 0
    local local2 = prop_anchor:getpos()
    repeat
        local1 = local1 + PerSecond(0.015)
        local2 = prop_anchor:getpos()
        prop_anchor:setpos(local2.x, local2.y, local2.z - local1)
        break_here()
    until local1 < 0.28
    prop_anchor:free()
    prop_hook:free()
    prop_anchor = nil
    prop_hook = nil
end
ei.rip_ship = function() -- line 280
    preload_sfx("anchrip.wav")
    START_CUT_SCENE()
    ei.ship_ripped = TRUE
    manny:say_line("/eima001/")
    wait_for_message()
    stop_script(ei.glottis_look_at_manny)
    NewObjectState(ei_intha, OBJSTATE_UNDERLAY, "ei_anchor_rip_r.bm")
    ei.dp_button:set_object_state("ei_rip_r.cos")
    NewObjectState(ei_intha, OBJSTATE_UNDERLAY, "ei_anchor_rip_l.bm")
    ei.op_button:set_object_state("ei_rip_l.cos")
    if hooked_porthole == dp.anchor then
        glottis:push_costume("glottis_rip_left.cos")
        ei.dp_button:play_chore(0)
    else
        glottis:push_costume("glottis_rip_right.cos")
        ei.op_button:play_chore(0)
    end
    start_script(ei.anchor_rip)
    glottis:play_chore(0)
    start_sfx("anchrip.wav")
    glottis:wait_for_chore()
    glottis:pop_costume()
    if hooked_porthole == op.anchor then
        dp:end_result()
        NewObjectState(ei_intha, OBJSTATE_UNDERLAY, "ei_anchor_rip_r.bm")
        ei.dp_button:set_object_state("ei_rip_r.cos")
        ei.dp_button:play_chore(0)
    else
        op:end_result()
        NewObjectState(ei_intha, OBJSTATE_UNDERLAY, "ei_anchor_rip_l.bm")
        ei.op_button:set_object_state("ei_rip_l.cos")
        ei.op_button:complete_chore(0)
    end
    glottis:say_line("/eigl002/")
    wait_for_message()
    manny:say_line("/eima003/")
    END_CUT_SCENE()
end
ei.anchor_talk = function(arg1) -- line 328
    if arg1 == "locked" then
        manny:say_line("/eima004/")
    elseif arg1 == "up" then
        manny:say_line("/cwma010/")
        wait_for_message()
        manny:say_line("/eima006/")
    elseif arg1 == "down" then
        manny:say_line("/eima007/")
    elseif arg1 == "easier" then
        manny:say_line("/eima008/")
    elseif arg1 == "there" then
        manny:say_line("/eima031/")
    end
end
ei.glottis_look_at_manny = function() -- line 345
    while 1 do
        glottis:head_look_at_manny()
        break_here()
    end
end
anchor_cutscene = function(arg1, arg2) -- line 353
    if arg1 == ei.pa then
        op:anchor_cutscene(arg2)
    else
        dp:anchor_cutscene(arg2)
    end
end
ei.change_anchor_state = function(arg1, arg2, arg3) -- line 361
    local local1 = arg2.other_anchor
    if ei.ship_ripped then
        manny:say_line("/eima009/")
    else
        start_script(fade_sfx, "eiCreak.imu", 300, 0)
        START_CUT_SCENE()
        if arg3 == "raise" then
            if ei.anchors_hooked then
                if arg2.state == "portholed" then
                    start_script(ei.rip_ship)
                elseif arg2.state == "up" then
                    system.default_response("as far")
                else
                    arg2.state = "straight"
                    break_here()
                    anchor_cutscene(arg2, arg3)
                end
                arg2.state = "up"
                local1.state = "drawn"
            else
                if arg2.state == "up" then
                    system.default_response("as far")
                else
                    if arg2.state == "out" then
                        arg2.state = "straight"
                        break_here()
                    end
                    anchor_cutscene(arg2, arg3)
                end
                arg2.state = "up"
            end
        elseif ei.anchors_hooked then
            if local1.state == "portholed" then
                manny:say_line("/eima010/")
            elseif arg2.state == "out" then
                system.default_response("as far")
            elseif arg2.state == "straight" then
                system.default_response("as far")
            elseif arg2.state == "under" then
                system.default_response("as far")
            elseif arg2.state == "drawn" then
                system.default_response("as far")
            elseif arg2.state == "up" then
                anchor_cutscene(arg2, arg3)
                arg2.state = "straight"
                local1.state = "under"
            end
        elseif arg2.state == "out" then
            system.default_response("as far")
        elseif arg2.state == "straight" then
            system.default_response("as far")
        elseif arg2.state == "under" then
            system.default_response("as far")
        elseif arg2.state == "up" then
            anchor_cutscene(arg2, arg3)
            arg2.state = "straight"
            if arg2.other_anchor.state == "under" then
                PrintDebug("hooked")
                ei.anchors_hooked = TRUE
                sleep_for(500)
                start_sfx("anchlock.wav")
                wait_for_sound("anchlock.wav")
            end
        end
        END_CUT_SCENE()
        start_script(start_sfx, "eiCreak.imu", IM_MEDIUM_PRIORITY, ei.ship_creak_vol)
    end
end
ei.take_controls = function(arg1) -- line 438
    START_CUT_SCENE()
    manny:walkto_object(ei.spot)
    manny:wait_for_actor()
    manny:push_costume("mn_levers.cos")
    manny:play_chore_looping(mn_levers_hat_on)
    ei.lever_actor:set_visibility(FALSE)
    manny:play_chore(mn_levers_hands_on_levers)
    system.buttonHandler = engineButtonHandler
    END_CUT_SCENE()
end
ei.drop_controls = function(arg1) -- line 450
    START_CUT_SCENE()
    manny:play_chore(mn_levers_back_to_idle)
    manny:wait_for_chore()
    ei.lever_actor:set_visibility(TRUE)
    manny:pop_costume()
    manny:play_chore_looping(mn2_hat_on, "mn2.cos")
    END_CUT_SCENE()
    system.buttonHandler = SampleButtonHandler
end
view_moving_pier = function() -- line 461
    stop_sound("eiCreak.imu")
    start_sfx("eistrain.imu")
    if ei.boat_state == "ocean" then
        ei.pier:stop_chore(ei_outside_bobbing_away)
        ei.pier:play_chore(ei_outside_move_near)
        ei.pier:wait_for_chore()
        ei.pier:stop_chore(ei_outside_move_near)
        ei.pier:play_chore_looping(ei_outside_bobbing_near)
    else
        ei.pier:stop_chore(ei_outside_bobbing_near)
        ei.pier:play_chore(ei_outside_move_away)
        ei.pier:wait_for_chore()
        ei.pier:stop_chore(ei_outside_move_away)
        ei.pier:play_chore_looping(ei_outside_bobbing_away)
    end
    fade_sfx("eistrain.imu", 400, 0)
    start_sfx("eiCreak.imu", IM_MEDIUM_PRIORITY, ei.ship_creak_vol)
end
ei.drive_ship = function(arg1, arg2) -- line 482
    stop_sound("eiCreak.imu")
    START_CUT_SCENE()
    start_sfx("eirev.wav")
    if arg2 == "forward" then
        manny:play_chore(mn_levers_both_up)
        manny:wait_for_chore()
        ul.props_running = TRUE
        go_under_lola()
        manny:play_chore(mn_levers_neutral_hold)
        start_sfx("eirevend.wav")
        manny:wait_for_chore()
    elseif arg2 == "reverse" then
        manny:play_chore(mn_levers_both_down)
        manny:wait_for_chore()
        if ei.ship_ripped then
            stop_script(show_hooked_anchor)
            stop_script(monitor_port_anchor_state)
            stop_script(monitor_star_anchor_state)
            port_anchor:free()
            port_hook:free()
            star_anchor:free()
            star_hook:free()
            system.buttonHandler = SampleButtonHandler
            start_script(cut_scene.hydrfoil, cut_scene)
        else
            ul.props_running = TRUE
            go_under_lola()
            manny:play_chore(mn_levers_neutral2)
            start_sfx("eirevend.wav")
            manny:wait_for_chore()
            go_under_lola()
        end
    elseif arg2 == "port" then
        manny:play_chore(mn_levers_right_up)
        manny:wait_for_chore()
        ul.props_running = TRUE
        go_under_lola()
        if ei.boat_state == "ocean" then
            view_moving_pier()
            ei.boat_state = "pier"
            if ei.sa.state == "out" then
                ei.sa.state = "straight"
            elseif ei.sa.state == "straight" then
                ei.sa.state = "under"
            end
            if ei.pa.state == "straight" then
                ei.pa.state = "out"
            elseif ei.pa.state == "under" then
                ei.pa.state = "straight"
            end
            manny:play_chore(mn_levers_neutral4)
            start_sfx("eirevend.wav")
            manny:wait_for_actor()
            go_under_lola()
        else
            manny:play_chore(mn_levers_neutral4)
            start_sfx("eirevend.wav")
            manny:wait_for_actor()
        end
    elseif arg2 == "starboard" then
        manny:play_chore(mn_levers_left_up)
        manny:wait_for_chore()
        ul.props_running = TRUE
        go_under_lola()
        if ei.boat_state == "pier" then
            view_moving_pier()
            ei.boat_state = "ocean"
            if ei.sa.state == "straight" then
                ei.sa.state = "out"
            elseif ei.sa.state == "under" then
                ei.sa.state = "straight"
            end
            if ei.pa.state == "out" then
                ei.pa.state = "straight"
            elseif ei.pa.state == "straight" then
                ei.pa.state = "under"
            end
            manny:play_chore(mn_levers_neutral3)
            start_sfx("eirevend.wav")
            manny:wait_for_chore()
            go_under_lola()
        else
            manny:play_chore(mn_levers_neutral3)
            start_sfx("eirevend.wav")
            manny:wait_for_chore()
        end
    end
    wait_for_message()
    END_CUT_SCENE()
    start_sfx("eiCreak.imu", IM_MEDIUM_PRIORITY, ei.ship_creak_vol)
end
engineButtonHandler = function(arg1, arg2, arg3) -- line 585
    local local1 = FALSE
    if cutSceneLevel <= 0 then
        if control_map.MOVE_FORWARD[arg1] and arg2 then
            local1 = TRUE
            single_start_script(ei.drive_ship, ei, "forward")
        elseif control_map.MOVE_BACKWARD[arg1] and arg2 then
            local1 = TRUE
            single_start_script(ei.drive_ship, ei, "reverse")
        elseif control_map.TURN_LEFT[arg1] and arg2 then
            local1 = TRUE
            single_start_script(ei.drive_ship, ei, "port")
        elseif control_map.TURN_RIGHT[arg1] and arg2 then
            local1 = TRUE
            single_start_script(ei.drive_ship, ei, "starboard")
        elseif control_map.USE[arg1] or control_map.PICK_UP[arg1] or control_map.INVENTORY[arg1] and arg2 then
            local1 = TRUE
            single_start_script(ei.drop_controls, ei)
        end
    end
    if not local1 then
        CommonButtonHandler(arg1, arg2, arg3)
    end
end
ei.set_up_actors = function(arg1) -- line 613
    manny:put_in_set(ei)
    glottis:set_costume("glottis_sailor.cos")
    glottis:set_talk_color(Orange)
    glottis:set_visibility(TRUE)
    glottis:set_head(3, 4, 4, 165, 28, 80)
    glottis:set_mumble_chore(glottis_mumble)
    glottis:set_talk_chore(1, glottis_stop_talk)
    glottis:set_talk_chore(2, glottis_a)
    glottis:set_talk_chore(3, glottis_c)
    glottis:set_talk_chore(4, glottis_e)
    glottis:set_talk_chore(5, glottis_f)
    glottis:set_talk_chore(6, glottis_l)
    glottis:set_talk_chore(7, glottis_m)
    glottis:set_talk_chore(8, glottis_o)
    glottis:set_talk_chore(9, glottis_t)
    glottis:set_talk_chore(10, glottis_u)
    glottis:put_in_set(ei)
    glottis:setpos(0.507027, 0.975, 0)
    glottis:setrot(0, 880, 0)
    glottis:play_chore_looping(glottis_flip_ears)
    glottis:set_collision_mode(COLLISION_SPHERE)
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(manny.hActor, 0.35)
    SetActorCollisionScale(glottis.hActor, 0.5)
    if ei.seen_hitmen then
        glottis:play_chore(glottis_sailor_eyes_bulging, "glottis_sailor.cos")
        start_script(ei.glottis_look_at_manny)
    end
    if not ei.pier then
        ei.pier = Actor:create(nil, nil, nil, "pier")
    end
    ei.pier:set_costume("ei_outside.cos")
    ei.pier:put_in_set(ei)
    ei.pier:set_softimage_pos(16.8937, 2.2758, -8.8166)
    ei.pier:setrot(0, 180, 0)
    if ei.boat_state == "ocean" then
        ei.pier:play_chore_looping(ei_outside_bobbing_away)
    else
        ei.pier:play_chore_looping(ei_outside_bobbing_near)
    end
    if not ei.lever_actor then
        ei.lever_actor = Actor:create(nil, nil, nil, "lever")
    end
    ei.lever_actor:set_costume("mn_levers.cos")
    ei.lever_actor:put_in_set(ei)
    ei.lever_actor:setpos(-0.7592, 0.4438, 0)
    ei.lever_actor:setrot(0, 1.97816, 0)
    ei.lever_actor:play_chore_looping(mn_levers_levers_only)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -0.75, 0.81, 4.89)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(glottis.hActor, 0)
    SetActorShadowPoint(glottis.hActor, -0.75, 0.81, 4.89)
    SetActorShadowPlane(glottis.hActor, "shadow1")
    AddShadowPlane(glottis.hActor, "shadow1")
end
ei.enter = function(arg1) -- line 687
    ei:current_setup(ei_intha)
    ei:set_up_actors()
    if not port_anchor then
        anchor_init()
    end
    if prop_anchor then
        if ei.pa.state == "portholed" then
            prop_anchor:setpos(1.5107, 0.7343, 0.8152)
            prop_anchor:setrot(0, 270, 0)
            prop_hook:setrot(0, 270, 0)
        else
            prop_anchor:setpos(-1.5706, 0.5713, 0.8503)
            prop_anchor:setrot(0, 90, 0)
            prop_hook:setrot(0, 90, 0)
        end
    end
    if ei.ship_ripped then
        NewObjectState(ei_intha, OBJSTATE_UNDERLAY, "ei_anchor_rip_r.bm")
        ei.dp_button:set_object_state("ei_rip_r.cos")
        ei.dp_button:complete_chore(0)
        NewObjectState(ei_intha, OBJSTATE_UNDERLAY, "ei_anchor_rip_l.bm")
        ei.op_button:set_object_state("ei_rip_l.cos")
        ei.op_button:complete_chore(0)
    end
    NewObjectState(ei_intha, OBJSTATE_UNDERLAY, "ei_door.bm")
    ei.il_door:set_object_state("ei_door.cos")
    start_sfx("eiCreak.imu", IM_MEDIUM_PRIORITY, ei.ship_creak_vol)
end
ei.exit = function(arg1) -- line 723
    glottis:set_collision_mode(COLLISION_OFF)
    manny:set_collision_mode(COLLISION_OFF)
    glottis:free()
    ei.pier:free()
    stop_script(ei.glottis_look_at_manny)
    ei.lever_actor:free()
    stop_sound("eiCreak.imu")
    KillActorShadows(manny.hActor)
    KillActorShadows(glottis.hActor)
end
ei.dp_button = Object:create(ei, "button", 1.2046601, 0.65616298, 0.28, { range = 0.60000002 })
ei.dp_button.use_pnt_x = 0.83009499
ei.dp_button.use_pnt_y = 0.31885201
ei.dp_button.use_pnt_z = 0
ei.dp_button.use_rot_x = 0
ei.dp_button.use_rot_y = -56.958099
ei.dp_button.use_rot_z = 0
ei.dp_button.lookAt = function(arg1) -- line 751
    manny:say_line("/eima011/")
end
ei.dp_button.pickUp = function(arg1) -- line 755
    system.default_response("attached")
end
ei.dp_button.use = function(arg1) -- line 759
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:play_chore(mn2_hand_on_obj, "mn2.cos")
    manny:wait_for_chore()
    start_sfx("deBtn.wav")
    manny:stop_chore(mn2_hand_on_obj, "mn2.cos")
    manny:play_chore(mn2_hand_off_obj, "mn2.cos")
    manny:wait_for_chore()
    manny:stop_chore(mn2_hand_off_obj, "mn2.cos")
    END_CUT_SCENE()
    if ei.sa.state == "up" then
        ei:change_anchor_state(ei.sa, "lower")
    else
        ei:change_anchor_state(ei.sa, "raise")
    end
    manny:setpos(0.830095, 0.318852, 0)
    manny:setrot(0, -56.9581, 0)
end
ei.op_button = Object:create(ei, "button", -1.17233, 0.589715, 0.31, { range = 0.60000002 })
ei.op_button.use_pnt_x = -0.979298
ei.op_button.use_pnt_y = 0.198717
ei.op_button.use_pnt_z = 0
ei.op_button.use_rot_x = 0
ei.op_button.use_rot_y = 60.062
ei.op_button.use_rot_z = 0
ei.op_button.lookAt = function(arg1) -- line 789
    manny:say_line("/eima012/")
end
ei.op_button.pickUp = function(arg1) -- line 793
    system.default_response("attached")
end
ei.op_button.use = function(arg1) -- line 797
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:play_chore(mn2_hand_on_obj, "mn2.cos")
    manny:wait_for_chore()
    start_sfx("deBtn.wav")
    manny:stop_chore(mn2_hand_on_obj, "mn2.cos")
    manny:play_chore(mn2_hand_off_obj, "mn2.cos")
    manny:wait_for_chore()
    manny:stop_chore(mn2_hand_off_obj, "mn2.cos")
    END_CUT_SCENE()
    if ei.pa.state == "up" then
        ei:change_anchor_state(ei.pa, "lower")
    else
        ei:change_anchor_state(ei.pa, "raise")
    end
    manny:setpos(-0.979298, 0.198717, 0)
    manny:setrot(0, 60.062, 0)
end
ei.intruments = Object:create(ei, "instruments", -0.741952, 0.97491002, 0.56999999, { range = 0.60000002 })
ei.intruments.use_pnt_x = -0.741952
ei.intruments.use_pnt_y = 0.52490997
ei.intruments.use_pnt_z = 0
ei.intruments.use_rot_x = 0
ei.intruments.use_rot_y = 365.23599
ei.intruments.use_rot_z = 0
ei.intruments.lookAt = function(arg1) -- line 827
    manny:say_line("/eima013/")
    wait_for_message()
    glottis:say_line("/eigl014/")
    wait_for_message()
    glottis:say_line("/eigl015/")
end
ei.intruments.use = function(arg1) -- line 835
    ei.left_control:use()
end
ei.left_control = Object:create(ei, "lever", -0.85195202, 0.67491001, 0.25999999, { range = 0.60000002 })
ei.left_control.use_pnt_x = -0.741952
ei.left_control.use_pnt_y = 0.52490997
ei.left_control.use_pnt_z = 0
ei.left_control.use_rot_x = 0
ei.left_control.use_rot_y = 365.23599
ei.left_control.use_rot_z = 0
ei.left_control.lookAt = function(arg1) -- line 847
    manny:say_line("/eima016/")
end
ei.left_control.use = function(arg1) -- line 851
    ei:take_controls()
end
ei.left_control.pick_up = ei.left_control.use
ei.right_control = Object:create(ei, "lever", -0.61195201, 0.67491001, 0.25999999, { range = 0.60000002 })
ei.right_control.use_pnt_x = -0.741952
ei.right_control.use_pnt_y = 0.52490997
ei.right_control.use_pnt_z = 0
ei.right_control.use_rot_x = 0
ei.right_control.use_rot_y = 365.23599
ei.right_control.use_rot_z = 0
ei.right_control.lookAt = function(arg1) -- line 865
    manny:say_line("/eima017/")
end
ei.right_control.use = function(arg1) -- line 869
    ei:take_controls()
end
ei.right_control.pick_up = ei.right_control.use
ei.engine = Object:create(ei, "engine", -0.40317801, -0.38499999, 0.44999999, { range = 0.80000001 })
ei.engine.use_pnt_x = -0.30317801
ei.engine.use_pnt_y = 0.175
ei.engine.use_pnt_z = 0
ei.engine.use_rot_x = 0
ei.engine.use_rot_y = 180.84399
ei.engine.use_rot_z = 0
ei.engine.lookAt = function(arg1) -- line 883
    START_CUT_SCENE()
    manny:say_line("/eima018/")
    wait_for_message()
    manny:say_line("/eima019/")
    wait_for_message()
    glottis:say_line("/eigl020/")
    wait_for_message()
    glottis:say_line("/eigl021/")
    wait_for_message()
    manny:say_line("/eima022/")
    END_CUT_SCENE()
end
ei.engine.pickUp = function(arg1) -- line 897
    system.default_response("bolted")
end
ei.engine.use = function(arg1) -- line 901
    manny:say_line("/eima023/")
    wait_for_message()
    manny:say_line("/eima024/")
end
ei.spot = Object:create(ei, "", 0, 0, 0, { range = 0 })
ei.spot.use_pnt_x = -0.75919998
ei.spot.use_pnt_y = 0.4438
ei.spot.use_pnt_z = 0
ei.spot.use_rot_x = 0
ei.spot.use_rot_y = 1.97816
ei.spot.use_rot_z = 0
ei.glottis_obj = Object:create(ei, "Glottis", 0.447227, 1.04851, 0.56999999, { range = 0.80000001 })
ei.glottis_obj.use_pnt_x = -0.0127726
ei.glottis_obj.use_pnt_y = 0.72851402
ei.glottis_obj.use_pnt_z = 0
ei.glottis_obj.use_rot_x = 0
ei.glottis_obj.use_rot_y = -41.402302
ei.glottis_obj.use_rot_z = 0
ei.glottis_obj.lookAt = function(arg1) -- line 926
    manny:say_line("/eima025/")
    wait_for_message()
    glottis:say_line("/eigl026/")
end
ei.glottis_obj.use = function(arg1) -- line 932
    START_CUT_SCENE()
    manny:say_line("/eima027/")
    wait_for_message()
    manny:say_line("/eima028/")
    wait_for_message()
    glottis:say_line("/eigl029/")
    wait_for_message()
    sleep_for(500)
    glottis:say_line("/eigl030/")
    END_CUT_SCENE()
end
ei.op_door = Object:create(ei, "door", -1.01042, 0.33446601, 0, { range = 0 })
ei.op_door.use_pnt_x = -0.75845301
ei.op_door.use_pnt_y = 0.311728
ei.op_door.use_pnt_z = 0
ei.op_door.use_rot_x = 0
ei.op_door.use_rot_y = 69.007202
ei.op_door.use_rot_z = 0
ei.op_door.out_pnt_x = -0.94445699
ei.op_door.out_pnt_y = 0.38302299
ei.op_door.out_pnt_z = 0
ei.op_door.out_rot_x = 0
ei.op_door.out_rot_y = 69.007202
ei.op_door.out_rot_z = 0
ei.op_box = ei.op_door
ei.op_door.walkOut = function(arg1) -- line 967
    op:come_out_door(op.ei_door)
end
ei.dp_door = Object:create(ei, "door", 1.08878, 0.70887601, 0, { range = 0 })
ei.dp_door.use_pnt_x = 0.84227997
ei.dp_door.use_pnt_y = 0.335841
ei.dp_door.use_pnt_z = 0
ei.dp_door.use_rot_x = 0
ei.dp_door.use_rot_y = -16.0637
ei.dp_door.use_rot_z = 0
ei.dp_door.out_pnt_x = 1.08825
ei.dp_door.out_pnt_y = 0.73490602
ei.dp_door.out_pnt_z = 0
ei.dp_door.out_rot_x = 0
ei.dp_door.out_rot_y = -87.632202
ei.dp_door.out_rot_z = 0
ei.dp_box = ei.dp_door
ei.dp_door.walkOut = function(arg1) -- line 989
    dp:come_out_door(dp.ei_door)
end
ei.il_door = Object:create(ei, "hatch", -0.075000003, 1.2049, 0.41, { range = 0 })
ei.il_door.use_pnt_x = -0.075000003
ei.il_door.use_pnt_y = 1.0749
ei.il_door.use_pnt_z = 0
ei.il_door.use_rot_x = 0
ei.il_door.use_rot_y = -349.22198
ei.il_door.use_rot_z = 0
ei_outside_move_near = 0
ei_outside_bobbing_away = 1
ei_outside_move_away = 2
ei_outside_bobbing_near = 3
ei_outside_water = 4
ei_rip_l_Chore0 = 0
ei_rip_l_Chore1 = 1
ei_rip_r_Chore0 = 0
ei_rip_r_Chore1 = 1
est_1 = 0
eva_sec_look_up = 0
eva_sec_look_back = 1
eva_sec_to_type = 2
eva_sec_trans_type = 3
eva_sec_type = 4
eva_sec_chk_type = 5
eva_sec_to_read = 6
eva_sec_hand_down = 7
eva_sec_up_file = 8
eva_sec_to_file = 9
eva_sec_look_nail = 10
eva_sec_look_loop = 11
eva_sec_file_loop = 12
eva_sec_down_file = 13
eva_sec_stretch = 14
eva_sec_flip_page = 15
eva_sec_read_loop = 16
eva_sec_head_prop = 17
eva_sec_mouth_gen = 18
eva_sec_mouth_c = 19
eva_sec_mouth_m = 20
eva_sec_mouth_f = 21
eva_sec_mouth_e = 22
eva_sec_mouth_u = 23
eva_sec_mouth_l = 24
eva_sec_mouth_a = 25
eva_sec_mouth_o = 26
eva_sec_s_look_up = 27
eva_sec_s_hold_look_up = 28
eva_sec_s_buzz_back = 29
eva_sec_buzz = 30
eva_sec_prepare_to_buzz = 31
eva_sec_mumble = 32
eva_sec_mouth_t = 33
ev_door_open = 0
ev_door_close = 1
ev_door_set_open = 2
ev_door_set_closed = 3
ev_door_set_gone = 4
ev_get_mp_get_mp = 0
ev_get_mp_hqev122 = 1
ev_get_mp_hqev123 = 2
ev_get_mp_hold_pose = 3
ev_get_mp_return_pose = 4
ev_get_mp_hqev041 = 5
CheckFirstTime("ev.lua")
dofile("ev_door.lua")
ev = Set:create("ev.set", "Elevator Station", { ev_elvms = 0, ev_ovrhd = 1 })
ev.watch_manny = function() -- line 15
    while 1 do
        while manny:find_sector_name("force_manny") do
            manny:walk_forward()
            break_here()
        end
        break_here()
    end
end
ev.enter = function(arg1) -- line 31
    start_script(ev.watch_manny)
    start_script(foghorn_sfx)
    ev.be_door.hObjectState = ev:add_object_state(ev_elvms, "ev_door.bm", "ev_door.zbm", OBJSTATE_STATE)
    ev.be_door:set_object_state("ev_door.cos")
    ev.be_door:complete_chore(ev_door_set_closed)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0.5, -0.8, 2)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    ev:add_ambient_sfx(harbor_ambience_list, harbor_ambience_parm_list)
end
ev.exit = function(arg1) -- line 48
    stop_script(ev.watch_manny)
    stop_script(foghorn_sfx)
    KillActorShadows(manny.hActor)
end
ev.ce_door = Object:create(ev, "/evtx001/stairs", 1.01702, 0.97369301, 1.6, { range = 0.60000002 })
ev.ce_door.use_pnt_x = 0.79443401
ev.ce_door.use_pnt_y = 1.00498
ev.ce_door.use_pnt_z = 1.19376
ev.ce_door.use_rot_x = 0
ev.ce_door.use_rot_y = 296.72299
ev.ce_door.use_rot_z = 0
ev.ce_door.out_pnt_x = 1.14597
ev.ce_door.out_pnt_y = 1.07464
ev.ce_door.out_pnt_z = 1.25
ev.ce_door.out_rot_x = 0
ev.ce_door.out_rot_y = 269.89001
ev.ce_door.out_rot_z = 0
ev.ce_door.touchable = FALSE
ev.ce_box = ev.ce_door
ev.ce_door.walkOut = function(arg1) -- line 85
    ce:come_out_door(ce.ev_door)
end
ev.be_door = Object:create(ev, "/evtx002/elevator", 0.111536, -0.16264699, 0.41, { range = 0.80000001 })
ev.be_door.use_pnt_x = -0.015126
ev.be_door.use_pnt_y = -0.77272499
ev.be_door.use_pnt_z = 0.050000001
ev.be_door.use_rot_x = 0
ev.be_door.use_rot_y = 7.98352
ev.be_door.use_rot_z = 0
ev.be_door.out_pnt_x = -0.108002
ev.be_door.out_pnt_y = -0.0225458
ev.be_door.out_pnt_z = 0.050000001
ev.be_door.out_rot_x = 0
ev.be_door.out_rot_y = 11.3366
ev.be_door.out_rot_z = 0
ev.be_box = ev.be_door
ev.be_door.passage = { "ev_be_psg" }
ev.be_door.walkOut = function(arg1) -- line 109
    START_CUT_SCENE()
    set_override(ev.be_door.skipWalkOut, ev.be_door)
    manny:clear_hands()
    manny:walkto(-0.081, -0.675, 0.05, 0, 315.391, 0)
    manny:wait_for_actor()
    manny:start_open_door_anim()
    sleep_for(800)
    start_sfx("evdoorop.WAV", nil, 80)
    arg1:play_chore(ev_door_open)
    manny:finish_open_door_anim()
    arg1:wait_for_chore(ev_door_open)
    arg1:open()
    manny:walkto(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z, arg1.out_rot_x, arg1.out_rot_y, arg1.out_rot_z)
    manny:wait_for_actor()
    arg1:play_chore(ev_door_close)
    sleep_for(500)
    start_sfx("evdoorcl.wav", nil, 80)
    arg1:wait_for_chore(ev_door_close)
    arg1:close()
    arg1:play_chore(ev_door_set_closed)
    manny:set_visibility(FALSE)
    play_movie("ev_up.snm", 243, 153)
    wait_for_movie()
    manny:set_visibility(TRUE)
    arg1:play_chore(ev_door_set_gone)
    END_CUT_SCENE()
    bw:come_out_door(bw.ev_door)
end
ev.be_door.skipWalkOut = function(arg1) -- line 142
    kill_override()
    manny:set_visibility(TRUE)
    ev.be_door:close()
    ev.be_door:stop_chore()
    ev.be_door:play_chore(ev_door_set_closed)
    manny:default("cafe")
    bw:come_out_door(bw.ev_door)
end
ev.be_door.comeOut = function(arg1) -- line 152
    START_CUT_SCENE()
    set_override(ev.be_door.skipComeOut, ev.be_door)
    manny:clear_hands()
    manny:set_visibility(FALSE)
    arg1:play_chore(ev_door_set_closed)
    play_movie("ev.snm", 243, 153)
    wait_for_movie()
    manny:setpos(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
    manny:setrot(arg1.out_rot_x, arg1.out_rot_y + 180, arg1.out_rot_z)
    start_sfx("evdoorop.wav", nil, 80)
    arg1:play_chore(ev_door_open)
    arg1:wait_for_chore(ev_door_open)
    arg1:open()
    manny:set_visibility(TRUE)
    manny:walkto(-0.0619582, -0.669169, 0.05, 0, 309.503, 0)
    manny:wait_for_actor()
    manny:start_open_door_anim(TRUE)
    sleep_for(500)
    arg1:play_chore(ev_door_close)
    sleep_for(500)
    start_sfx("evdoorcl.wav", nil, 80)
    arg1:wait_for_chore(ev_door_close)
    manny:finish_open_door_anim(TRUE)
    arg1:close()
    manny:walkto(arg1.use_pnt_x, arg1.use_pnt_y, arg1.use_pnt_z)
    END_CUT_SCENE()
end
ev.be_door.skipComeOut = function(arg1) -- line 186
    kill_override()
    ev:switch_to_set()
    manny:set_visibility(TRUE)
    manny:setpos(ev.be_door.use_pnt_x, ev.be_door.use_pnt_y, ev.be_door.use_pnt_z)
    manny:setrot(ev.be_door.use_rot_x, ev.be_door.use_rot_y + 180, ev.be_door.use_rot_z)
    ev.be_door:close()
    ev.be_door:stop_chore()
    ev.be_door:play_chore(ev_door_set_closed)
    manny:default("cafe")
end
ev.be_door.lookAt = function(arg1) -- line 198
    if arg1.opened then
        system.default_response("open")
    else
        system.default_response("closed")
    end
end
ev.be_door.use = ev.be_door.walkOut
ev.pc_door = Object:create(ev, "door", 0.181108, -1.7453001, 0.050000001, { range = 0.60000002 })
ev.pc_door.use_pnt_x = 0.181108
ev.pc_door.use_pnt_y = -1.1153001
ev.pc_door.use_pnt_z = 0.050000001
ev.pc_door.use_rot_x = 0
ev.pc_door.use_rot_y = -540.71997
ev.pc_door.use_rot_z = 0
ev.pc_door.out_pnt_x = 0.175212
ev.pc_door.out_pnt_y = -1.56317
ev.pc_door.out_pnt_z = -0.067439497
ev.pc_door.out_rot_x = 0
ev.pc_door.out_rot_y = -540.71997
ev.pc_door.out_rot_z = 0
ev.pc_door.touchable = FALSE
ev.pc_box = ev.pc_door
ev.pc_door.walkOut = function(arg1) -- line 228
    pc:come_out_door(pc.ev_door)
end
ev_r_idles_l_toward_ma = 0
ev_r_idles_hold_to_ma = 1
ev_r_idles_turn_bk = 2
ev_r_idles_foot_tap = 3
ev_r_idles_turn_back = 4
ev_r_idles_m_tune_radio = 5
ev_r_idles_m_distracted = 6
ev_r_idles_m_turn_l_to_ma = 7
ev_r_idles_listen = 8
ev_r_idles_mumble = 9
ev_r_idles_stop_talk = 10
ev_r_idles_c = 11
ev_r_idles_m = 12
ev_r_idles_f = 13
ev_r_idles_e = 14
ev_r_idles_u = 15
ev_r_idles_l = 16
ev_r_idles_a = 17
ev_r_idles_o = 18
ev_r_idles_t = 19
ev_stand_idles_stand_idle = 0
ev_stand_idles_press_key = 1
ev_stand_idles_twist = 2
ev_stand_idles_tap_head = 3
ev_stand_idles_rest2talk = 4
ev_stand_idles_talkpos = 5
ev_stand_idles_gesture = 6
ev_stand_idles_finger_chin = 7
ev_stand_idles_talk2rest = 8
ev_stand_idles_mumble = 9
ev_stand_idles_stop_talk = 10
ev_stand_idles_c = 11
ev_stand_idles_m = 12
ev_stand_idles_f = 13
ev_stand_idles_e = 14
ev_stand_idles_u = 15
ev_stand_idles_l = 16
ev_stand_idles_a = 17
ev_stand_idles_o = 18
ev_stand_idles_t = 19
CheckFirstTime("ew.lua")
dofile("crane.lua")
ew = Set:create("ew.set", "end of the world", { ew_ishla = 0, ew_ovrhd = 1 })
ew.music_counter = 0
CRANE_SPEED = 10
ew.crane_points = { }
ew.crane_points[0] = { }
ew.crane_points[0].pos = { x = -0.195516, y = -1.36254, z = -1.299 }
ew.crane_points[0].rot = { x = 0, y = 94.3899, z = 0 }
ew.crane_points[1] = { }
ew.crane_points[1].pos = { x = -0.204701, y = -1.24289, z = -1.299 }
ew.crane_points[1].rot = { x = 0, y = 94.3899, z = 0 }
ew.crane_points[2] = { }
ew.crane_points[2].pos = { x = -0.212356, y = -1.14319, z = -1.299 }
ew.crane_points[2].rot = { x = 0, y = 95.4127, z = 0 }
ew.crane_points[3] = { }
ew.crane_points[3].pos = { x = -0.231221, y = -0.944089, z = -1.299 }
ew.crane_points[3].rot = { x = 0, y = 95.4127, z = 0 }
ew.crane_points[4] = { }
ew.crane_points[4].pos = { x = -0.250087, y = -0.744988, z = -1.299 }
ew.crane_points[4].rot = { x = 0, y = 95.4127, z = 0 }
ew.crane_points[5] = { }
ew.crane_points[5].pos = { x = -0.267067, y = -0.565797, z = -1.299 }
ew.crane_points[5].rot = { x = 0, y = 97.3118, z = 0 }
ew.crane_points[6] = { }
ew.crane_points[6].pos = { x = -0.29252, y = -0.367433, z = -1.299 }
ew.crane_points[6].rot = { x = 0, y = 99.2711, z = 0 }
ew.crane_points[7] = { }
ew.crane_points[7].pos = { x = -0.324741, y = -0.170058, z = -1.299 }
ew.crane_points[7].rot = { x = 0, y = 102.631, z = 0 }
ew.crane_points[8] = { }
ew.crane_points[8].pos = { x = -0.368475, y = 0.0250848, z = -1.299 }
ew.crane_points[8].rot = { x = 0, y = 106.717, z = 0 }
ew.crane_points[9] = { }
ew.crane_points[9].pos = { x = -0.504842, y = 0.222564, z = -1.299 }
ew.crane_points[9].rot = { x = 0, y = 115.522, z = 0 }
ew.crane_points[10] = { }
ew.crane_points[10].pos = { x = -0.615764, y = 0.409756, z = -1.299 }
ew.crane_points[10].rot = { x = 0, y = 124.888, z = 0 }
ew.crane_points[11] = { }
ew.crane_points[11].pos = { x = -0.78678, y = 0.63038, z = -1.299 }
ew.crane_points[11].rot = { x = 0, y = 129.767, z = 0 }
ew.crane_points[12] = { }
ew.crane_points[12].pos = { x = -0.982809, y = 0.743015, z = -1.299 }
ew.crane_points[12].rot = { x = 0, y = 135.113, z = 0 }
ew.crane_points[13] = { }
ew.crane_points[13].pos = { x = -1.17633, y = 0.894887, z = -1.299 }
ew.crane_points[13].rot = { x = 0, y = 144.89, z = 0 }
ew.crane_points[14] = { }
ew.crane_points[14].pos = { x = -1.50502, y = 0.996818, z = -1.299 }
ew.crane_points[14].rot = { x = 0, y = 151.497, z = 0 }
ew.crane_points[15] = { }
ew.crane_points[15].pos = { x = -1.78102, y = 1.04727, z = -1.299 }
ew.crane_points[15].rot = { x = 0, y = 160.016, z = 0 }
ew.crane_points[16] = { }
ew.crane_points[16].pos = { x = -2.04848, y = 1.03976, z = -1.299 }
ew.crane_points[16].rot = { x = 0, y = 166.125, z = 0 }
ew.crane_points[17] = { }
ew.crane_points[17].pos = { x = -2.40612, y = 1.06319, z = -1.2532 }
ew.crane_points[17].rot = { x = 0, y = 172.472, z = 0 }
ew.crane_points[18] = { }
ew.crane_points[18].pos = { x = -2.66296, y = 1.06126, z = -1.1776 }
ew.crane_points[18].rot = { x = 0, y = 181.352, z = 0 }
ew.crane_points[19] = { }
ew.crane_points[19].pos = { x = -2.95654, y = 1.01722, z = -1.1445 }
ew.crane_points[19].rot = { x = 0, y = 189.598, z = 0 }
ew.crane_points[20] = { }
ew.crane_points[20].pos = { x = -3.24564, y = 0.948033, z = -1.1445 }
ew.crane_points[20].rot = { x = 0, y = 199.154, z = 0 }
ew.crane_points[21] = { }
ew.crane_points[21].pos = { x = -3.55745, y = 0.819236, z = -1.0537 }
ew.crane_points[21].rot = { x = 0, y = 207.946, z = 0 }
ew.crane_points[22] = { }
ew.crane_points[22].pos = { x = -3.87541, y = 0.650527, z = -0.9428 }
ew.crane_points[22].rot = { x = 0, y = 214.867, z = 0 }
ew.crane_points[23] = { }
ew.crane_points[23].pos = { x = -4.11395, y = 0.415188, z = -0.9428 }
ew.crane_points[23].rot = { x = 0, y = 224.438, z = 0 }
ew.crane_points[24] = { }
ew.crane_points[24].pos = { x = -4.25619, y = 0.160655, z = -0.852 }
ew.crane_points[24].rot = { x = 0, y = 235.249, z = 0 }
ew.crane_points[25] = { }
ew.crane_points[25].pos = { x = -4.30947, y = -0.166427, z = -0.8046 }
ew.crane_points[25].rot = { x = 0, y = 242.075, z = 0 }
ew.crane_points[26] = { }
ew.crane_points[26].pos = { x = -4.34558, y = -0.463871, z = -0.7594 }
ew.crane_points[26].rot = { x = 0, y = 252.304, z = 0 }
ew.crane_points[27] = { }
ew.crane_points[27].pos = { x = -4.34959, y = -0.674897, z = -0.7385 }
ew.crane_points[27].rot = { x = 0, y = 268.546, z = 0 }
ew.crane_points[28] = { }
ew.crane_points[28].pos = { x = -4.3257, y = -0.875492, z = -0.6465 }
ew.crane_points[28].rot = { x = 0, y = 298.493, z = 0 }
ew.crane_points.num_points = 29
ew.crane_points.index = 0
ew.at_conveyor = 0
ew.in_between = 1
ew.at_crusher = ew.crane_points.num_points - 1
ew.crane_pos = ew.at_conveyor
ew.crane_actor = Actor:create(nil, nil, nil, "/ewtx002/")
ew.crane_actor.cur_point = 0
ew.crane_actor.volume = 90
ew.crane_actor.default = function(arg1) -- line 158
    arg1:set_costume("crane.cos")
    arg1:put_in_set(ew)
    SetActorScale(arg1.hActor, 0.2)
    arg1:setpos(0, 0, 0)
    arg1:setrot(0, 0, 0)
    arg1:set_walk_rate(0.1)
    arg1:set_turn_rate(15)
    arg1:set_walk_chore(-1)
    arg1:set_turn_chores(-1, -1)
    arg1:set_rest_chore(-1)
    if ew.crane_broken then
        arg1:play_chore(crane_broken)
    else
        arg1:play_chore(crane_fixed)
    end
end
ew.crane_actor.move_left = function(arg1) -- line 176
    local local1 = 0
    stop_script(arg1.move_right)
    if not sound_playing("crane.imu") then
        start_sfx("crane.imu")
    else
        fade_sfx("crane.imu", 500, arg1.volume)
    end
    START_CUT_SCENE()
    while get_generic_control_state("TURN_LEFT") and local1 < ew.crane_points.num_points do
        local1 = arg1.cur_point + 1
        if local1 < ew.crane_points.num_points then
            arg1:move_to_point(local1)
        end
    end
    END_CUT_SCENE()
    if sound_playing("crane.imu") then
        fade_sfx("crane.imu", 500, 0)
    end
end
ew.crane_actor.move_right = function(arg1) -- line 201
    local local1 = 0
    stop_script(arg1.move_left)
    if not sound_playing("crane.imu") then
        start_sfx("crane.imu")
    else
        fade_sfx("crane.imu", 500, arg1.volume)
    end
    START_CUT_SCENE()
    while get_generic_control_state("TURN_RIGHT") and local1 >= 0 do
        local1 = arg1.cur_point - 1
        if local1 >= 0 then
            arg1:move_to_point(local1)
        end
    end
    END_CUT_SCENE()
    if sound_playing("crane.imu") then
        fade_sfx("crane.imu", 500, 0)
    end
end
ew.crane_actor.init_current_point = function(arg1) -- line 226
    local local1, local2
    if arg1.cur_point == nil then
        arg1.cur_point = 0
    end
    local1 = ew.crane_points[arg1.cur_point].pos
    local2 = ew.crane_points[arg1.cur_point].rot
    arg1:setpos(local1.x, local1.y, local1.z)
    arg1:setrot(local2.x, local2.y, local2.z)
    if arg1.cur_point == ew.at_conveyor or arg1.cur_point == ew.at_crusher then
        ew.crane_pos = arg1.cur_point
    else
        ew.crane_pos = ew.in_between
    end
end
ew.crane_actor.move_to_point = function(arg1, arg2) -- line 245
    local local1, local2, local3
    local local4, local5, local6, local7
    local local8, local9
    local1 = ew.crane_points[arg1.cur_point]
    local2 = ew.crane_points[arg2]
    if local2 then
        local4 = (local2.pos.x - local1.pos.x) / CRANE_SPEED
        local5 = (local2.pos.y - local1.pos.y) / CRANE_SPEED
        local6 = (local2.pos.z - local1.pos.z) / CRANE_SPEED
        if abs(local2.rot.y - local1.rot.y) > 180 then
            if local1.rot.y < local2.rot.y then
                local7 = (local2.rot.y - 360 - local1.rot.y) / CRANE_SPEED
            else
                local7 = (local2.rot.y + 360 - local1.rot.y) / CRANE_SPEED
            end
        else
            local7 = (local2.rot.y - local1.rot.y) / CRANE_SPEED
        end
        local3 = 0
        local8 = local1.pos
        local9 = local1.rot
        while local3 < CRANE_SPEED do
            local8.x = local8.x + local4
            local8.y = local8.y + local5
            local8.z = local8.z + local6
            arg1:setpos(local8.x, local8.y, local8.z)
            local9.y = local9.y + local7
            arg1:setrot(local9.x, local9.y, local9.z)
            break_here()
            local3 = local3 + 1
        end
        arg1.cur_point = arg2
        arg1:init_current_point()
    end
end
ew.buttonHandler = function(arg1, arg2, arg3) -- line 290
    if cutSceneLevel <= 0 then
        if control_map.TURN_LEFT[arg1] and arg2 then
            if ew.crane_down then
                start_script(ew.raise_crane_and_move, ew, ew.crane_actor.move_left)
            else
                single_start_script(ew.crane_actor.move_left, ew.crane_actor)
            end
        elseif control_map.TURN_RIGHT[arg1] and arg2 then
            if ew.crane_down then
                start_script(ew.raise_crane_and_move, ew, ew.crane_actor.move_right)
            else
                single_start_script(ew.crane_actor.move_right, ew.crane_actor)
            end
        elseif control_map.INVENTORY[arg1] and arg2 then
            system.default_response("not now")
        elseif control_map.MOVE_FORWARD[arg1] and arg2 then
            single_start_script(ew.raise_crane, ew)
        elseif control_map.MOVE_BACKWARD[arg1] and arg2 then
            single_start_script(ew.lower_crane, ew)
        elseif control_map.USE[arg1] or control_map.PICK_UP[arg1] and arg2 then
            start_script(ew.exit_crane, ew)
        else
            CommonButtonHandler(arg1, arg2, arg3)
        end
    else
        CommonButtonHandler(arg1, arg2, arg3)
    end
end
ew.raise_crane_and_move = function(arg1, arg2) -- line 322
    if system.currentSet == ew then
        single_start_script(ew.raise_crane, ew)
        wait_for_script(ew.raise_crane)
        cutSceneLevel = 0
        if arg2 == ew.crane_actor.move_left and get_generic_control_state("TURN_LEFT") then
            single_start_script(arg2, ew.crane_actor)
        elseif arg2 == ew.crane_actor.move_right and get_generic_control_state("TURN_RIGHT") then
            single_start_script(arg2, ew.crane_actor)
        end
    end
end
ew.operate_crane = function(arg1) -- line 335
    ew.prev_button_handler = system.buttonHandler
    system.buttonHandler = ew.buttonHandler
    ew:switch_to_set()
    ew.crane_actor:default()
    ew.crane_actor:init_current_point()
    manny:put_in_set(ew)
    manny:set_visibility(FALSE)
    if not ew.used_crane then
        ew.used_crane = TRUE
        ew:preview_crane()
    end
end
ew.preview_crane = function(arg1) -- line 355
    local local1, local2
    START_CUT_SCENE()
    sleep_for(500)
    start_sfx("crane.IMU", IM_HIGH_PRIORITY, 0)
    fade_sfx("crane.IMU", 500, ew.crane_actor.volume)
    sleep_for(500)
    local1 = 0
    local2 = ew.crane_actor:getrot()
    while local1 < 8 do
        ew.crane_actor:setrot(local2.x, local2.y, 1)
        break_here()
        ew.crane_actor:setrot(local2.x, local2.y, 0)
        break_here()
        local1 = local1 + 1
    end
    ew.crane_actor:setrot(local2.x, local2.y, local2.z)
    fade_sfx("crane.IMU", 500, 0)
    END_CUT_SCENE()
end
ew.raise_crane = function(arg1) -- line 378
    START_CUT_SCENE()
    if ew.crane_down then
        ew.crane_down = FALSE
        if ew.crane_broken then
            if ac.chain_state == "wrapped" then
                ew:exit_crane(TRUE)
                ew.crane_pos = ew.at_crusher
                ew.crane_actor.cur_point = ew.at_crusher
                ac.chain_state = "gone"
                cv.chain_bunched = FALSE
                start_script(cut_scene.posidon, cut_scene)
            elseif ew.crane_pos == ew.at_crusher then
                cu:free_crusher()
            elseif ew.crane_pos == ew.at_conveyor then
                cv:recoil_chain()
            else
                ew:chain_out_trough()
            end
        elseif ew.crane_pos == ew.at_conveyor then
            ew:end_snap_at_anchor()
        else
            START_CUT_SCENE()
            ew.crane_actor:stop_chore(crane_down)
            start_sfx("crane_ud.WAV")
            ew.crane_actor:run_chore(crane_up)
            END_CUT_SCENE()
            if bu.scoop_here then
                bu.scoop_here = FALSE
            end
        end
    end
    END_CUT_SCENE()
end
ew.lower_crane = function(arg1) -- line 415
    START_CUT_SCENE()
    if not ew.crane_down then
        if ew.crane_broken then
            if ew.crane_pos == ew.in_between then
                ew:chain_in_trough()
            elseif ew.crane_pos == ew.at_conveyor then
                if raised_lamancha then
                    system.default_response("already")
                else
                    cv:spill_chain()
                end
            elseif ew.crane_pos == ew.at_crusher then
                cu:spill_chain()
            end
        elseif ew.crane_pos == ew.in_between then
            ew:snap_at_limbo()
        elseif ew.crane_pos == ew.at_conveyor then
            ew:snap_at_anchor()
        elseif ew.crane_pos == ew.at_crusher then
            ew:land_on_beach()
        end
    end
    END_CUT_SCENE()
end
ew.snap_at_limbo = function(arg1) -- line 443
    START_CUT_SCENE()
    ew.crane_actor:stop_chore(crane_up)
    start_sfx("crane_ud.WAV")
    ew.crane_actor:run_chore(crane_down)
    ew.crane_down = TRUE
    END_CUT_SCENE()
end
ew.snap_at_anchor = function(arg1) -- line 452
    START_CUT_SCENE()
    ew.crane_actor:run_chore(crane_down)
    ac:switch_to_set()
    if not ac.crane_actor then
        ac.crane_actor = Actor:create(nil, nil, nil, "crane scoop")
    end
    ac.crane_actor:set_costume(nil)
    ac.crane_actor:set_costume("crane_scoop.cos")
    SetActorFrustrumCull(ac.crane_actor.hActor, FALSE)
    SetActorScale(ac.crane_actor.hActor, 0.3)
    ac.crane_actor:put_in_set(ac)
    ac.crane_actor:setpos(7.74274, -0.252156, 11.728)
    ac.crane_actor:setrot(0, 309.762, 0)
    ac.crane_actor:play_chore(0)
    sleep_for(500)
    start_sfx("scoopcls.WAV")
    ac.crane_actor:wait_for_chore(0)
    sleep_for(1000)
    SetActorFrustrumCull(ac.crane_actor.hActor, TRUE)
    ac.crane_actor:free()
    ew:switch_to_set()
    ew.crane_down = FALSE
    ew.crane_actor:default()
    ew.crane_actor:init_current_point()
    ew.crane_actor:play_chore(crane_down_hold)
    manny:put_in_set(ew)
    manny:set_visibility(FALSE)
    ew.crane_down = TRUE
    END_CUT_SCENE()
end
ew.end_snap_at_anchor = function(arg1) -- line 488
    START_CUT_SCENE()
    ac:switch_to_set()
    if not ac.crane_actor then
        ac.crane_actor = Actor:create(nil, nil, nil, "crane scoop")
    end
    ac.crane_actor:set_costume(nil)
    ac.crane_actor:set_costume("crane_scoop.cos")
    SetActorFrustrumCull(ac.crane_actor.hActor, FALSE)
    SetActorScale(ac.crane_actor.hActor, 0.3)
    ac.crane_actor:put_in_set(ac)
    ac.crane_actor:setpos(7.74274, -0.252156, 11.728)
    ac.crane_actor:setrot(0, 309.762, 0)
    start_sfx("scoopopn.WAV")
    ac.crane_actor:play_chore(1)
    ac.crane_actor:wait_for_chore(1)
    SetActorFrustrumCull(ac.crane_actor.hActor, TRUE)
    ac.crane_actor:free()
    ew:switch_to_set()
    ew.crane_down = FALSE
    ew.crane_actor:stop_chore(crane_down_hold)
    ew.crane_actor:default()
    ew.crane_actor:init_current_point()
    ew.crane_actor:run_chore(crane_up)
    manny:put_in_set(ew)
    manny:set_visibility(FALSE)
    ew.crane_down = FALSE
    END_CUT_SCENE()
end
ew.land_on_beach = function(arg1) -- line 522
    START_CUT_SCENE()
    bu:lower_scoop()
    ew:exit_crane()
    END_CUT_SCENE()
end
ew.chain_in_trough = function(arg1) -- line 529
    START_CUT_SCENE()
    music_state:set_sequence(seqCraneTrack)
    ew.crane_down = TRUE
    set_override(ew.skip_chain_in_trough, ew)
    ck:switch_to_set()
    play_movie("ck_chain.snm", 320, 0)
    wait_for_movie()
    ew:switch_to_set()
    END_CUT_SCENE()
end
ew.skip_chain_in_trough = function(arg1) -- line 542
    kill_override()
    ew:switch_to_set()
end
ew.chain_out_trough = function(arg1) -- line 547
    START_CUT_SCENE()
    ew.crane_down = FALSE
    set_override(ew.skip_chain_in_trough, ew)
    ck:switch_to_set()
    play_movie("ck_chain_reverse.snm", 320, 0)
    wait_for_movie()
    ew:switch_to_set()
    END_CUT_SCENE()
end
ew.exit_crane = function(arg1, arg2) -- line 559
    stop_script(ew.raise_crane_and_move)
    if arg2 then
        single_start_script(WalkManny)
        system.buttonHandler = ew.prev_button_handler
        manny:set_visibility(TRUE)
        system.buttonHandler = SampleButtonHandler
    elseif ew.crane_pos == ew.in_between then
        manny:say_line("/ewma001/")
    else
        single_start_script(WalkManny)
        system.buttonHandler = ew.prev_button_handler
        manny:set_visibility(TRUE)
        doorman_in_hot_box = TRUE
        if ew.crane_pos == ew.at_conveyor then
            START_CUT_SCENE()
            cv:switch_to_set()
            manny:put_in_set(cv)
            manny:setpos(-4.34365, -10.3907, 7.89)
            manny:setrot(0, 233.953, 0)
            manny:walkto(-3.32008, -10.4037, 7.89)
            manny:wait_for_actor()
            END_CUT_SCENE()
        else
            start_script(cu.exit_crane, cu)
        end
    end
end
ew.update_music_state = function(arg1) -- line 600
    if ew.music_counter > 2 then
        return stateEW_LATER
    else
        return stateEW
    end
end
ew.enter = function(arg1) -- line 608
    play_movie_looping("ew_w.snm")
    ew.crane_actor:default()
    ew.crane_actor:init_current_point()
    ew.music_counter = ew.music_counter + 1
end
ew.exit = function(arg1) -- line 616
    ew.crane_actor:free()
    StopMovie()
end
ew.cu_door = Object:create(ew, "door", -4.1750002, 0.40000001, 0.15000001, { range = 0.60000002 })
ew.cu_door.use_pnt_x = -4.1750002
ew.cu_door.use_pnt_y = 0.40000001
ew.cu_door.use_pnt_z = 0.15000001
ew.cu_door.use_rot_x = 0
ew.cu_door.use_rot_y = -811.15503
ew.cu_door.use_rot_z = 0
ew.cu_door.out_pnt_x = -4.1750002
ew.cu_door.out_pnt_y = 0.40000001
ew.cu_door.out_pnt_z = 0.15000001
ew.cu_door.out_rot_x = 0
ew.cu_door.out_rot_y = -811.15503
ew.cu_door.out_rot_z = 0
ew.cu_box = ew.cu_door
ew.cu_door.walkOut = function(arg1) -- line 649
    cu:come_out_door(cu.ew_door)
end
ew.cv_door = Object:create(ew, "door", -6.0118299, 0.375577, 0.15000001, { range = 0 })
ew.cv_door.use_pnt_x = -6.0118299
ew.cv_door.use_pnt_y = 0.375577
ew.cv_door.use_pnt_z = 0.15000001
ew.cv_door.use_rot_x = 0
ew.cv_door.use_rot_y = -989.16498
ew.cv_door.use_rot_z = 0
ew.cv_door.out_pnt_x = -6.0118299
ew.cv_door.out_pnt_y = 0.375577
ew.cv_door.out_pnt_z = 0.15000001
ew.cv_door.out_rot_x = 0
ew.cv_door.out_rot_y = -989.16498
ew.cv_door.out_rot_z = 0
ew.cv_box = ew.cv_door
ew.cv_door.walkOut = function(arg1) -- line 670
    cv:come_out_door(cv.ew_door)
end
ew.ck_door = Object:create(ew, "door", -6.625, -1.125, 0.15000001, { range = 0 })
ew.ck_door.use_pnt_x = -6.625
ew.ck_door.use_pnt_y = -1.125
ew.ck_door.use_pnt_z = 0.15000001
ew.ck_door.use_rot_x = 0
ew.ck_door.use_rot_y = -926.67902
ew.ck_door.use_rot_z = 0
ew.ck_door.out_pnt_x = -6.625
ew.ck_door.out_pnt_y = -1.125
ew.ck_door.out_pnt_z = 0.15000001
ew.ck_door.out_rot_x = 0
ew.ck_door.out_rot_y = -926.67902
ew.ck_door.out_rot_z = 0
ew.ck_box = ew.ck_door
ew.ck_door.walkOut = function(arg1) -- line 692
    ck:come_out_door(ck.ew_door)
end
extinguisher_show = 0
extinguisher_hide = 1
fatlady_base_pose = 0
fatlady_tap_table = 1
fatlady_move_stuff = 2
fatlady_hand_gesture = 3
fatlady_collect = 4
CheckFirstTime("fc.lua")
fc = Set:create("fc.set", "foggy cactus", { fc_extws = 0, fc_ovrhd = 1 })
fc.enter = function(arg1) -- line 18
end
fe_crowd_balloons_idle = 0
fe_crowd_balloons_here = 1
fe_crowd_balloons_gone = 2
fe_crowd_idle_idle = 0
fe_crowd_idle_here = 1
fe_crowd_idle_gone = 2
fh_door_opened = 0
fh_door_closed = 1
CheckFirstTime("fh.lua")
fh = Set:create("fh.set", "temp factory hub", { fh_top = 0, fh_elvha = 1 })
dofile("fh_propellor.lua")
fh.cheat_boxes = { cheat_box1 = 0 }
fh.step_in_elevator = function(arg1) -- line 16
    fh.propellor:stop_chore()
    fh.propellor:play_chore(fh_propellor_still)
    play_movie("fh_wi.snm", 512, 96)
    wait_for_movie()
    play_movie("fh_ed.snm", 432, 32)
    wait_for_movie()
end
fh.step_outta_elevator = function(arg1) -- line 25
    START_CUT_SCENE()
    set_override(fh.step_outta_elevator_override)
    fh.propellor:stop_chore()
    fh.propellor:play_chore(fh_propellor_still)
    manny:put_in_set(fh)
    manny:setpos(fh.ea_door.out_pnt_x, fh.ea_door.out_pnt_y, fh.ea_door.out_pnt_z)
    manny:setrot(fh.ea_door.out_rot_x, 180 + fh.ea_door.out_rot_y, fh.ea_door.out_rot_z)
    play_movie("fh_eu.snm", 432, 32)
    wait_for_movie()
    fh.propellor:play_chore_looping(fh_propellor_spinning)
    single_start_sfx("fh_prop.IMU", IM_MED_PRIORITY, 100)
    set_pan("fh_prop.IMU", 90)
    manny:walkto(fh.ea_door.use_pnt_x, fh.ea_door.use_pnt_y, fh.ea_door.use_pnt_z)
    END_CUT_SCENE()
end
fh.step_outta_elevator_override = function() -- line 42
    kill_override()
    manny:setpos(fh.ea_door.use_pnt_x, fh.ea_door.use_pnt_y, fh.ea_door.use_pnt_z)
    manny:setrot(fh.ea_door.use_rot_x, 180 + fh.ea_door.use_rot_y, fh.ea_door.use_rot_z)
    fh.propellor:play_chore_looping(fh_propellor_spinning)
    single_start_sfx("fh_prop.IMU", IM_MED_PRIORITY, 100)
    set_pan("fh_prop.IMU", 90)
end
fh.enter = function(arg1) -- line 58
    fh:current_setup(fh_elvha)
    fh.fo_door.hObjectState = fh:add_object_state(fh_elvha, "fh_door.bm", nil, OBJSTATE_STATE, FALSE)
    fh.fo_door:set_object_state("fh_door.cos")
    fh.propellor.hObjectState = fh:add_object_state(fh_elvha, "fh_propellor.bm", nil, OBJSTATE_OVERLAY, FALSE)
    fh.propellor:set_object_state("fh_propellor.cos")
    fh.propellor.touchable = nil
    if fh.fo_door.opened then
        fh.fo_door:make_untouchable()
        fh.fo_door:play_chore(0)
        fh.fo_door:set_new_out_point()
    else
        fh.fo_door:make_touchable()
        fh.fo_door:play_chore(1)
    end
    if system.lastSet ~= ea then
        fh.propellor:play_chore_looping(fh_propellor_spinning)
        start_sfx("fh_prop.IMU", IM_MED_PRIORITY, 100)
        set_pan("fh_prop.IMU", 90)
    end
end
fh.exit = function(arg1) -- line 80
    stop_sound("fh_prop.IMU")
end
fh.propellor = Object:create(fh, "", 0, 0, 0, { range = 0 })
fh.fo_door = Object:create(fh, "/fhtx001/door", -0.86454803, -3.0660501, -0.83710003, { range = 0.60000002 })
fh.fo_door.use_pnt_x = -1.09732
fh.fo_door.use_pnt_y = -2.76824
fh.fo_door.use_pnt_z = -1.28
fh.fo_door.use_rot_x = 0
fh.fo_door.use_rot_y = -122.648
fh.fo_door.use_rot_z = 0
fh.fo_door.out_pnt_x = -0.90325898
fh.fo_door.out_pnt_y = -2.86462
fh.fo_door.out_pnt_z = -1.3
fh.fo_door.out_rot_x = 0
fh.fo_door.out_rot_y = 194.508
fh.fo_door.out_rot_z = 0
fh.fo_door.opened = TRUE
fh.fo_door.set_new_out_point = function(arg1) -- line 120
    arg1.out_pnt_x = -0.788647
    arg1.out_pnt_y = -3.26008
    arg1.out_pnt_z = -1.3
    arg1.out_rot_x = 0
    arg1.out_rot_y = 194.51
    arg1.out_rot_z = 0
end
fh.fo_door.walkOut = function(arg1) -- line 129
    if dr.reunited then
        fo:come_out_door(fo.fh_door)
    else
        START_CUT_SCENE()
        manny:walkto_object(arg1, TRUE)
        manny:play_chore(mn2_reach_med, "mn2.cos")
        manny:say_line("/fhma002/")
        sleep_for(500)
        manny:wait_for_chore(mn2_reach_med, "mn2.cos")
        manny:stop_chore(mn2_reach_med, "mn2.cos")
        ResetMarioControls()
        manny:walkto(-1.2911, -2.6914, -1.28, 0, 10.457, 0)
        END_CUT_SCENE()
    end
end
fh.ea_door = Object:create(fh, "/fhtx003/elevator", -0.50551897, -0.00125456, -0.82999998, { range = 1 })
fh.ea_door.use_pnt_x = -1.16362
fh.ea_door.use_pnt_y = -0.041154601
fh.ea_door.use_pnt_z = -1.3
fh.ea_door.use_rot_x = 0
fh.ea_door.use_rot_y = 283.51901
fh.ea_door.use_rot_z = 0
fh.ea_door.out_pnt_x = -0.52647197
fh.ea_door.out_pnt_y = 0.0197767
fh.ea_door.out_pnt_z = -1.3
fh.ea_door.out_rot_x = 0
fh.ea_door.out_rot_y = 280.55099
fh.ea_door.out_rot_z = 0
fh.ea_door.lookAt = function(arg1) -- line 162
    manny:say_line("/fhma004/")
end
fh.ea_door.opened = TRUE
fh.ea_door.walkOut = function(arg1) -- line 168
    manny:clear_hands()
    if manny:walkto_object(arg1, TRUE) then
        START_CUT_SCENE()
        fh:step_in_elevator()
        END_CUT_SCENE()
        ea:come_out_door(ea.fh_door)
    end
end
fh.ea_door.comeOut = function(arg1) -- line 178
    start_script(fh.step_outta_elevator, fh)
end
fh.vd_door = Object:create(fh, "/fhtx005/walkway", 1.7792799, 8.3426905, 0.44999999, { range = 0 })
fh.vd_door.use_pnt_x = -3.4500501
fh.vd_door.use_pnt_y = 0.50798398
fh.vd_door.use_pnt_z = -1.3
fh.vd_door.use_rot_x = 0
fh.vd_door.use_rot_y = -366.263
fh.vd_door.use_rot_z = 0
fh.vd_door.out_pnt_x = -3.4184799
fh.vd_door.out_pnt_y = 0.79666197
fh.vd_door.out_pnt_z = -1.3
fh.vd_door.out_rot_x = 0
fh.vd_door.out_rot_y = -366.263
fh.vd_door.out_rot_z = 0
fh.vd_door.walkOut = function(arg1) -- line 197
    vd:come_out_door(vd.fh_door)
end
fh.vd_door.lookAt = function(arg1) -- line 201
    manny:say_line("/fhma006/")
end
fh_propellor_spinning = 0
fh_propellor_still = 1
fi_bell_remove_tape = 0
fi_bell_tape_here = 1
fi_bell_ring_bell = 2
fi_bell_bell_here = 3
fi_door_open = 0
fi_door_close = 1
CheckFirstTime("fi.lua")
fi = Set:create("fi.set", "florist interior", { fi_top = 0, fi_intha = 1 })
fi.shrinkable = 0.02
dofile("bs_idles.lua")
dofile("msb_react.lua")
dofile("fi_bell.lua")
bowlsley.rants = { }
bowlsley.rants.max = 0
bowlsley.rants[1] = "/fibl001/"
bowlsley.rants[2] = "/fibl002/"
bowlsley.rants[3] = "/fibl003/"
bowlsley.rants[4] = "/fibl004/"
bowlsley.rants[5] = "/fibl005/"
bowlsley.rants[6] = "/fibl006/"
bowlsley.rants[7] = "/fibl007/"
bowlsley.rants[8] = "/fibl008/"
bowlsley.rants[9] = "/fibl009/"
bowlsley.rants[10] = "/fibl010/"
bowlsley.rants[11] = "/fibl011/"
bowlsley.rants[12] = "/fibl012/"
bowlsley.rants[13] = "/fibl013/"
bowlsley.rants[14] = "/fibl014/"
bowlsley.rants[15] = "/fibl015/"
bowlsley.rants[16] = "/fibl016/"
bowlsley.rants[17] = "/fibl017/"
bowlsley.rants[18] = "/fibl018/"
bowlsley.rants[19] = "/fibl019/"
bowlsley.rants[20] = "/fibl020/"
bowlsley.rants[21] = "/fibl021/"
bowlsley.rants[22] = "/fibl022/"
bowlsley.rants[23] = "/fibl023/"
bowlsley.rants[24] = "/fibl024/"
bowlsley.rants[25] = "/fibl025/"
bowlsley.rants[26] = "/fibl026/"
bowlsley.rants[27] = "/fibl027/"
bowlsley.rants[28] = "/fibl028/"
bowlsley.rants[29] = "/fibl029/"
bowlsley.rants[30] = "/fibl030/"
bowlsley.rants[31] = "/fibl031/"
bowlsley.rants[32] = "/fibl032/"
bowlsley.rants[33] = "/fibl033/"
bowlsley.rants[34] = "/fibl034/"
bowlsley.rants[35] = "/fibl035/"
bowlsley.rants[36] = "/fibl036/"
bowlsley.rants[37] = "/fibl037/"
bowlsley.rants[38] = "/fibl038/"
bowlsley.rants[39] = "/fibl039/"
bowlsley.rants[40] = "/fibl040/"
bowlsley.rants[41] = "/fibl041/"
bowlsley.rants[42] = "/fibl042/"
bowlsley.rants[43] = "/fibl043/"
fi.added_rant = { }
fi.add_rant = function(arg1) -- line 66
    if not fi.added_rant[arg1] then
        fi.added_rant[arg1] = TRUE
        bowlsley.rants.max = bowlsley.rants.max + 1
        bowlsley.rants.pointer = bowlsley.rants.max
        bowlsley.rants[bowlsley.rants.pointer] = arg1
    end
end
fi.insane_ranting = function() -- line 75
    local local1
    while 1 do
        local1 = 3000 * random()
        sleep_for(local1)
        bowlsley:wait_for_message()
        bowlsley:say_line(pick_from_ordered_table(bowlsley.rants))
        bowlsley:wait_for_message()
    end
end
fi.talk_count = 0
fi.talk_down_bowlsley = function() -- line 88
    stop_script(fi.insane_ranting)
    bowlsley:wait_for_message()
    fi.talk_count = fi.talk_count + 1
    START_CUT_SCENE()
    if fi.talk_count == 1 then
        manny:say_line("/fima044/")
        manny:wait_for_message()
        fi.add_rant("/fibl045/")
    elseif fi.talk_count == 2 then
        manny:say_line("/fima046/")
        manny:wait_for_message()
        fi.add_rant("/fibl047/")
    elseif fi.talk_count == 3 then
        manny:say_line("/fima048/")
        manny:wait_for_message()
        fi.add_rant("/fibl049/")
    else
        manny:say_line("/fima050/")
    end
    manny:wait_for_message()
    END_CUT_SCENE()
    start_script(fi.insane_ranting)
end
fi.too_close = function() -- line 116
    START_CUT_SCENE()
    stop_script(fi.insane_ranting)
    bowlsley:stop_chore(bs_idles_idle)
    bowlsley:play_chore(bs_idles_react)
    if not fi.warned then
        fi.warned = TRUE
        bowlsley:say_line("/fibl051/")
        bowlsley:wait_for_message()
        bowlsley:wait_for_chore()
        bowlsley:stop_chore(bs_idles_react)
        bowlsley:play_chore_looping(bs_idles_shiver)
        if manny.fancy then
            manny:push_costume("mccthund_react.cos")
        else
            manny:push_costume("msb_react.cos")
        end
        manny:play_chore(msb_react_standback)
        bowlsley:say_line("/fibl052/")
        bowlsley:wait_for_message()
        bowlsley:say_line("/fibl053/")
        bowlsley:wait_for_message()
        bowlsley:set_chore_looping(bs_idles_shiver, FALSE)
        bowlsley:wait_for_chore()
        bowlsley:say_line("/fibl054/")
    else
        bowlsley:wait_for_chore()
        if manny.fancy then
            manny:push_costume("mccthund_react.cos")
        else
            manny:push_costume("msb_react.cos")
        end
        manny:play_chore(msb_react_standback)
        bowlsley:say_line("/fibl055/")
        bowlsley:stop_chore(bs_idles_react)
        bowlsley:play_chore_looping(bs_idles_shiver)
        bowlsley:wait_for_message()
    end
    manny:setpos({ x = -0.332293, y = -0.278123, z = 0 })
    manny:pop_costume()
    manny:head_look_at(nil)
    END_CUT_SCENE()
    bowlsley:stop_chore(bs_idles_shiver)
    bowlsley:play_chore(bs_idles_retreat)
    bowlsley:wait_for_chore()
    bowlsley:stop_chore(bs_idles_retreat)
    bowlsley:play_chore_looping(bs_idles_idle)
    start_script(fi.insane_ranting)
end
fi.wait_gun = function(arg1) -- line 172
    sleep_for(6600)
    bowlsley:play_chore(bs_idles_hide_gun)
end
fi.happy_bowlsley = function() -- line 177
    fi.gun:get()
    fi.sproutella:get()
    START_CUT_SCENE()
    bowlsley:set_chore_looping(bs_idles_idle, FALSE)
    bowlsley:say_line("/fibl056/")
    start_script(manny.walkto, manny, -0.216634, -0.172976, 0, 0, 593.826, 0)
    bowlsley:wait_for_message()
    bowlsley:wait_for_chore()
    bowlsley:say_line("/fibl057/")
    bowlsley:play_chore(bs_idles_handoff1)
    bowlsley:wait_for_message()
    manny:say_line("/fima058/")
    manny:wait_for_message()
    manny:say_line("/fima059/")
    manny:wait_for_message()
    manny:wait_for_actor()
    if manny.fancy then
        manny:push_costume("mccthund_react.cos")
    else
        manny:push_costume("msb_react.cos")
    end
    manny:play_chore(msb_react_get_gun)
    start_script(fi.wait_gun)
    bowlsley:say_line("/fibl060/")
    bowlsley:play_chore(bs_idles_handoff2)
    bowlsley:wait_for_message()
    manny:wait_for_chore()
    manny:ignore_boxes()
    manny:setpos({ x = 0.0103987, y = -0.309207, z = 0 })
    manny:setrot(0, -126.704, 0)
    manny:pop_costume()
    if manny.fancy then
        manny:play_chore_looping(mcc_thunder_activate_gun, manny.base_costume)
        manny:play_chore_looping(mcc_thunder_hold, manny.base_costume)
        manny.hold_chore = mcc_thunder_activate_gun
        manny:play_chore(mcc_thunder_no_talk, "mcc_thunder.cos")
    else
        manny:play_chore_looping(msb_activate_gun, manny.base_costume)
        manny:play_chore_looping(msb_hold, manny.base_costume)
        manny.hold_chore = msb_activate_gun
    end
    manny.is_holding = fi.gun
    bowlsley:say_line("/fibl061/")
    put_away_held_item()
    bowlsley:wait_for_message()
    manny:say_line("/fima062/")
    manny:wait_for_message()
    bowlsley:say_line("/fibl063/")
    manny:setpos(-0.216634, -0.172976, 0)
    manny:setrot(0, 593.826, 0)
    if manny.fancy then
        manny:push_costume("mccthund_react.cos")
    else
        manny:push_costume("msb_react.cos")
    end
    manny:play_chore(msb_react_get_can)
    sleep_for(734)
    bowlsley:play_chore(bs_idles_hide_gun)
    manny:wait_for_chore()
    manny:setpos({ x = 0.0103987, y = -0.309207, z = 0 })
    manny:setrot(0, -126.704, 0)
    manny:pop_costume()
    bowlsley:play_chore(bs_idles_hide_can)
    if manny.fancy then
        manny:play_chore_looping(mcc_thunder_activate_sproutella, manny.base_costume)
        manny.hold_chore = mcc_thunder_activate_sproutella
    else
        manny:play_chore_looping(msb_activate_sproutella, manny.base_costume)
        manny.hold_chore = msb_activate_sproutella
    end
    manny:play_chore_looping(msb_hold, manny.base_costume)
    manny.is_holding = fi.sproutella
    if manny.fancy then
        manny:play_chore(ms_stop_talk, manny.base_costume)
    end
    put_away_held_item()
    bowlsley:say_line("/fibl064/")
    start_script(fi.bs_follow_manny)
    manny:backup(1000)
    bowlsley:wait_for_message()
    manny:follow_boxes()
    manny:walkto_object(fi.fp_door)
    manny:wait_for_actor()
    music_state:set_sequence(seqYr4Iris)
    IrisDown(320, 200, 1000)
    sleep_for(1100)
    sh:switch_to_set()
    MakeSectorActive("glottis_here", TRUE)
    MakeSectorActive("glottis_gone", TRUE)
    start_sfx("bwIdle.IMU", IM_HIGH_PRIORITY, 80)
    if manny.costume_state == "thunder" then
        if manny.fancy then
            glottis:set_costume("bonewagon_cc.cos")
        else
            glottis:set_costume("bonewagon_thunder.cos")
        end
    else
        glottis:set_costume("bonewagon_alb.cos")
    end
    glottis:put_in_set(sh)
    glottis:set_visibility(TRUE)
    glottis:set_mumble_chore(bonewagon_gl_gl_mumble)
    glottis:set_talk_chore(1, bonewagon_gl_stop_talk)
    glottis:set_talk_chore(2, bonewagon_gl_a)
    glottis:set_talk_chore(3, bonewagon_gl_c)
    glottis:set_talk_chore(4, bonewagon_gl_e)
    glottis:set_talk_chore(5, bonewagon_gl_f)
    glottis:set_talk_chore(6, bonewagon_gl_l)
    glottis:set_talk_chore(7, bonewagon_gl_m)
    glottis:set_talk_chore(8, bonewagon_gl_o)
    glottis:set_talk_chore(9, bonewagon_gl_t)
    glottis:set_talk_chore(10, bonewagon_gl_u)
    glottis:play_chore(bonewagon_alb_gl_drive)
    glottis:play_chore(bonewagon_alb_ma_sit)
    glottis:follow_boxes()
    glottis:setpos(2.39009, 1.6486, 0)
    glottis:setrot(0, -191.033, 0)
    glottis:set_walk_rate(0.4)
    start_script(glottis.walkto, glottis, 2.04434, -0.128071, 0, 0, -191.033, 0)
    IrisUp(320, 200, 800)
    glottis:wait_for_actor()
    stop_sound("bwIdle.IMU")
    glottis:play_chore(bonewagon_alb_ma_jump_out)
    glottis:wait_for_chore()
    single_start_script(sg.glottis_roars, sg, glottis)
    manny:setpos(1.53579, 1.66838, 0)
    manny:put_in_set(sh)
    manny:walkto(0.957532, 0.0707181, 0, 0, 161.368, 0)
    glottis:ignore_boxes()
    MakeSectorActive("glottis_gone", FALSE)
    END_CUT_SCENE()
    cur_puzzle_state[54] = TRUE
    sh.remote:free()
    glottis.in_at = FALSE
end
fi.bs_follow_manny = function() -- line 320
    while system.currentSet == fi do
        bowlsley:head_look_at_manny()
        break_here()
    end
end
fi.enter_from_fp = function(arg1) -- line 327
    START_CUT_SCENE()
    fi:switch_to_set()
    manny:put_in_set(fi)
    fi:current_setup(fi_intha)
    if not fi.bell.unbound then
        fi.bell:play_chore(fi_bell_tape_here)
    else
        fi.bell:play_chore(fi_bell_bell_here)
    end
    manny:setpos(-0.025, 0.6656, 0)
    manny:setrot(0, 180, 0)
    fi.fp_door:play_chore(0)
    if fi.bell.unbound then
        fi.bell:play_chore(fi_bell_ring_bell)
    end
    sleep_for(1000)
    manny:pop_costume()
    END_CUT_SCENE()
    if not fi.bell.unbound then
        start_script(fi.insane_ranting)
    else
        start_script(fi.happy_bowlsley)
    end
end
fi.set_up_actors = function(arg1) -- line 354
    bowlsley:put_in_set(fi)
    bowlsley:setpos(0.23649, -0.32308, 0)
    bowlsley:setrot(0, 180, 0)
    bowlsley:set_costume("bs_idles.cos")
    bowlsley:set_mumble_chore(bs_idles_mumble)
    bowlsley:set_talk_chore(1, bs_idles_no_talk)
    bowlsley:set_talk_chore(2, bs_idles_a)
    bowlsley:set_talk_chore(3, bs_idles_c)
    bowlsley:set_talk_chore(4, bs_idles_e)
    bowlsley:set_talk_chore(5, bs_idles_f)
    bowlsley:set_talk_chore(6, bs_idles_l)
    bowlsley:set_talk_chore(7, bs_idles_m)
    bowlsley:set_talk_chore(8, bs_idles_o)
    bowlsley:set_talk_chore(9, bs_idles_t)
    bowlsley:set_talk_chore(10, bs_idles_u)
    bowlsley:set_head(3, 4, 5, 165, 28, 80)
    bowlsley:set_speech_mode(MODE_BACKGROUND)
    fi.fp_door:set_object_state("fi_door.cos")
    fi.fp_door:complete_chore(1)
    fi.bell:set_object_state("fi_bell.cos")
    bowlsley:play_chore_looping(bs_idles_idle)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0.6, -0.4, 3)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(bowlsley.hActor, 0)
    SetActorShadowPoint(bowlsley.hActor, 0.6, -0.4, 2)
    SetActorShadowPlane(bowlsley.hActor, "shadow1")
    AddShadowPlane(bowlsley.hActor, "shadow1")
end
fi.untape_bell = function() -- line 394
    cur_puzzle_state[50] = TRUE
    START_CUT_SCENE()
    stop_script(fi.insane_ranting)
    fi.bell.unbound = TRUE
    manny:walkto(-0.15856, 0.36836, 0, 0, -14.7573, 0)
    manny:wait_for_actor()
    if manny.fancy then
        manny:push_costume("mccthund_react.cos")
    else
        manny:push_costume("msb_react.cos")
    end
    manny:stop_chore(msb_hold_scythe, manny.base_costume)
    manny:stop_chore(msb_hold, manny.base_costume)
    manny:play_chore(msb_react_ring_bell)
    sleep_for(2150)
    fi.bell:play_chore(fi_bell_remove_tape)
    music_state:set_state(stateFVID)
    manny:wait_for_chore()
    manny:pop_costume()
    if manny.fancy then
        manny:play_chore(ms_stop_talk, "mcc_thunder.cos")
    end
    manny:play_chore_looping(msb_hold_scythe, manny.base_costume)
    bowlsley:say_line("/fibl065/")
    sleep_for(500)
    manny:head_look_at(bowlsley)
    start_script(manny.turn_right, manny, 160)
    bowlsley:wait_for_message()
    bowlsley:say_line("/fibl066/")
    bowlsley:wait_for_message()
    bowlsley:say_line("/fibl067/")
    sleep_for(750)
    manny:head_look_at(nil)
    manny:walkto(-0.0264367, 0.725, 0, 0, 2.24411, 0)
    bowlsley:wait_for_message()
    manny:wait_for_actor()
    END_CUT_SCENE()
    fp:come_out_door(fp.fi_door)
    start_sfx("DorOfCls.wav")
    start_sfx("fi_drbel.wav")
end
fi.update_music_state = function(arg1) -- line 444
    if fi.bell.unbound then
        return stateFI_OK
    else
        return stateFI
    end
end
fi.enter = function(arg1) -- line 453
    fi:set_up_actors()
    NewObjectState(fi_intha, OBJSTATE_OVERLAY, "fi_bell.bm", nil, TRUE)
    NewObjectState(fi_intha, OBJSTATE_STATE, "fi_door.bm", "fi_door_open.zbm")
    NewObjectState(fi_intha, OBJSTATE_UNDERLAY, "fi_tapeball.bm", nil, TRUE)
end
fi.exit = function(arg1) -- line 462
    KillActorShadows(manny.hActor)
    KillActorShadows(bowlsley.hActor)
    stop_script(sg.glottis_roars)
    bowlsley:free()
    stop_script(fi.insane_ranting)
end
fi.gun = Object:create(fi, "/fitx068/gun", 0, 0, 0, { range = 0 })
fi.gun.wav = "fi_grbgn.wav"
fi.gun.lookAt = function(arg1) -- line 480
    manny:say_line("/fima069/")
end
fi.gun.use = function(arg1) -- line 484
    manny:say_line("/fima070/")
end
fi.gun.default_response = function(arg1) -- line 488
    manny:say_line("/fima071/")
end
fi.sproutella = Object:create(fi, "/fitx072/can of sproutella", 0, 0, 0, { range = 0 })
fi.sproutella.string_name = "sproutella"
fi.sproutella.lookAt = function(arg1) -- line 494
end
fi.sproutella.use = function(arg1) -- line 498
    manny:say_line("/fima074/")
end
fi.sproutella.lookAt = function(arg1) -- line 502
    manny:say_line("/fima073/")
end
fi.sproutella.default_response = function(arg1, arg2) -- line 506
    if arg2.person then
        manny:say_line("/fima075/")
    else
        manny:say_line("/fima076/")
    end
end
fi.window_display = Object:create(fi, "/fitx077/window_display", 0.68077302, 0.75999999, 0.30000001, { range = 0.60000002 })
fi.window_display.use_pnt_x = 0.47077301
fi.window_display.use_pnt_y = 0.44999999
fi.window_display.use_pnt_z = 0
fi.window_display.use_rot_x = 0
fi.window_display.use_rot_y = 1035.42
fi.window_display.use_rot_z = 0
fi.window_display.lookAt = function(arg1) -- line 522
    manny:say_line("/fima078/")
    manny:wait_for_message()
    fi.add_rant("/fibl079/")
end
fi.window_display.use = function(arg1) -- line 528
    manny:say_line("/fima080/")
    manny:wait_for_message()
    fi.add_rant("/fibl081/")
end
fi.window_display.pickUp = fi.window_display.use
fi.fridge1 = Object:create(fi, "/fitx082/refrigerator", -0.81, 0.244504, 0.38999999, { range = 0.60000002 })
fi.fridge1.use_pnt_x = -0.60000002
fi.fridge1.use_pnt_y = 0.244504
fi.fridge1.use_pnt_z = 0
fi.fridge1.use_rot_x = 0
fi.fridge1.use_rot_y = -622.55902
fi.fridge1.use_rot_z = 0
fi.fridge1.lookAt = function(arg1) -- line 545
    manny:say_line("/fima083/")
    manny:wait_for_message()
    fi.add_rant("/fibl084/")
end
fi.fridge1.use = function(arg1) -- line 551
    system.default_response("locked")
    if not fi.bell.unbound then
        soft_script()
        wait_for_message()
        bowlsley:say_line("/fibl085/")
        wait_for_message()
        fi.add_rant("/fibl086/")
    end
end
fi.fridge2 = Object:create(fi, "/fitx087/refrigerator", -0.49252799, 0.68000001, 0.47999999, { range = 0.60000002 })
fi.fridge2.use_pnt_x = -0.50252801
fi.fridge2.use_pnt_y = 0.44999999
fi.fridge2.use_pnt_z = 0
fi.fridge2.use_rot_x = 0
fi.fridge2.use_rot_y = -702.95898
fi.fridge2.use_rot_z = 0
fi.fridge2.parent = fi.fridge1
fi.bell = Object:create(fi, "/fitx088/ball of tape", 0.148376, 0.60232902, 0.72000003, { range = 0.81 })
fi.bell.use_pnt_x = -0.00162365
fi.bell.use_pnt_y = 0.42232901
fi.bell.use_pnt_z = 0
fi.bell.use_rot_x = 0
fi.bell.use_rot_y = -8.7921
fi.bell.use_rot_z = 0
fi.bell.lookAt = function(arg1) -- line 580
    if not arg1.unbound then
        manny:say_line("/fima089/")
        manny:wait_for_message()
        fi.add_rant("/fibl090/")
    else
        manny:say_line("/fima091/")
    end
end
fi.bell.use = function(arg1) -- line 590
    system.default_response("reach")
end
fi.bell.pickUp = fi.bell.use
fi.bell.use_scythe = function(arg1) -- line 596
    if not arg1.unbound then
        start_script(fi.untape_bell)
    else
        bowlsley:say_line("/fibl092/")
    end
end
fi.cases = Object:create(fi, "/fitx093/cases", -0.19301701, -0.61475497, 0.23, { range = 0.60000002 })
fi.cases.string_name = "sproutella"
fi.cases.use_pnt_x = -0.28029299
fi.cases.use_pnt_y = -0.28812301
fi.cases.use_pnt_z = 0
fi.cases.use_rot_x = 0
fi.cases.use_rot_y = 188.959
fi.cases.use_rot_z = 0
fi.cases.lookAt = function(arg1) -- line 614
    manny:say_line("/fima094/")
    if not arg1.seen then
        START_CUT_SCENE()
        arg1.seen = TRUE
        manny:wait_for_message()
        bowlsley:say_line("/fibl095/")
        bowlsley:wait_for_message()
        bowlsley:say_line("/fibl096/")
        END_CUT_SCENE()
    end
    wait_for_message()
    fi.add_rant("/fibl097/")
    fi.add_rant("/fibl098/")
end
fi.cases.pickUp = function(arg1) -- line 632
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:play_chore(ms_reach_med, manny.base_costume)
    if not fi.bell.unbound then
        start_script(fi.too_close)
        sleep_for(500)
        start_script(manny.turn_left, manny, 70)
        manny:head_look_at(bowlsley)
    else
        bowlsley:say_line("/fibl099/")
    end
    END_CUT_SCENE()
end
fi.cases.use = fi.cases.pickUp
fi.bowlsley_obj = Object:create(fi, "/fitx100/Bowlsley", 0.31698301, -0.464755, 0.23, { range = 0.60000002 })
fi.bowlsley_obj.use_pnt_x = -0.043950599
fi.bowlsley_obj.use_pnt_y = -0.22471599
fi.bowlsley_obj.use_pnt_z = 0
fi.bowlsley_obj.use_rot_x = 0
fi.bowlsley_obj.use_rot_y = 552.328
fi.bowlsley_obj.use_rot_z = 0
fi.bowlsley_obj.lookAt = function(arg1) -- line 659
    if not fi.bell.unbound then
        manny:say_line("/fima101/")
    else
        manny:say_line("/fima102/")
        manny:wait_for_message()
        bowlsley:say_line("/fibl103/")
    end
end
fi.bowlsley_obj.pickUp = function(arg1) -- line 669
    if fi.bell.unbound then
        bowlsley:say_line("/fibl104/")
    else
        START_CUT_SCENE()
        manny:walkto_object(fi.cases)
        manny:wait_for_actor()
        manny:play_chore(ms_reach_med, manny.base_costume)
        if not fi.bell.unbound then
            start_script(fi.too_close)
            sleep_for(500)
            start_script(manny.turn_left, manny, 70)
            manny:head_look_at(bowlsley)
        end
        END_CUT_SCENE()
    end
end
fi.bowlsley_obj.use = function(arg1) -- line 687
    start_script(fi.talk_down_bowlsley)
end
fi.bowlsley_obj.use_gun = function(arg1) -- line 695
    START_CUT_SCENE()
    manny:say_line("/fima105/")
    manny:wait_for_message()
    bowlsley:say_line("/fibl106/")
    bowlsley:wait_for_message()
    bowlsley:say_line("/fibl107/")
    END_CUT_SCENE()
end
fi.fp_door = Object:create(fi, "/fitx108/door", -0.00162365, 0.63232899, 0.38, { range = 0.60000002 })
fi.fp_door.use_pnt_x = -0.00162365
fi.fp_door.use_pnt_y = 0.42232901
fi.fp_door.use_pnt_z = 0
fi.fp_door.use_rot_x = 0
fi.fp_door.use_rot_y = 6.3978701
fi.fp_door.use_rot_z = 0
fi.fp_door.out_pnt_x = -0.021545099
fi.fp_door.out_pnt_y = 0.60000002
fi.fp_door.out_pnt_z = 0
fi.fp_door.out_rot_x = 0
fi.fp_door.out_rot_y = 6.3972702
fi.fp_door.out_rot_z = 0
fi.fp_box = fi.fp_door
fi.fp_door.lookAt = function(arg1) -- line 728
    if fi.bell.unbound then
        system.default_response("way out")
    else
        manny:say_line("/fima109/")
        manny:wait_for_message()
        fi.add_rant("/fibl110/")
    end
end
fi.fp_door.walkOut = function(arg1) -- line 738
    if fi.bell.unbound then
        START_CUT_SCENE()
        bowlsley:say_line("/fibl111/")
        bowlsley:wait_for_message()
        END_CUT_SCENE()
    end
    fp:come_out_door(fp.fi_door)
end
flower_trail_grow = 0
flower_trail_grown = 1
fo_door_opening = 0
fo_door_closing = 1
fo_door_open = 2
fo_door_closed = 3
CheckFirstTime("fo.lua")
fo = Set:create("fo.set", "foremans office", { fo_berws = 0, fo_berws2 = 0, fo_berws3 = 0, fo_berws4 = 0, fo_bercu = 1, fo_bercu2 = 1, fo_bercu3 = 1, fo_ovrhd = 2 })
fo.shrinkable = 0.018
dofile("bibi_work_idles.lua")
dofile("bibi_talk_idles.lua")
dofile("pu_work_idles.lua")
dofile("pu_talk_idles.lua")
dofile("pu_argue.lua")
dofile("bibi_argue.lua")
dofile("angelito_scripts.lua")
dofile("fo_door.lua")
fo.random_hammer_sound = function(arg1, arg2) -- line 24
    arg2:play_sound_at(pick_one_of({ "foHamr1.WAV", "foHamr2.WAV", "foHamr3.WAV", "foHamr4.WAV" }), 10, 100)
end
fo.random_chisel_sound = function(arg1, arg2) -- line 28
    arg2:play_sound_at(pick_one_of({ "foFile1.WAV", "foFile2.WAV", "foFile3.WAV", "foFile4.WAV" }), 10, 60)
end
fo.watch_costume_events = function(arg1) -- line 32
    while 1 do
        if pu_work_idles_event then
            if pu_work_idles_event == 0 then
                pugsy_stuff:complete_chore(pu_work_idles_show_nothing, "pu_work_idles.cos")
            elseif pu_work_idles_event == 1 then
                pugsy_stuff:complete_chore(pu_work_idles_stick_only, "pu_work_idles.cos")
            elseif pu_work_idles_event == 2 then
                pugsy_stuff:complete_chore(pu_work_idles_scrap_only, "pu_work_idles.cos")
            elseif pu_work_idles_event == 3 then
                pugsy_stuff:complete_chore(pu_work_idles_coral_only, "pu_work_idles.cos")
            elseif pu_work_idles_event == 4 then
                pugsy_stuff:complete_chore(pu_work_idles_stick_coral_only, "pu_work_idles.cos")
            elseif pu_work_idles_event == 5 then
                pugsy_stuff:complete_chore(pu_work_idles_axe_only, "pu_work_idles.cos")
            elseif pu_work_idles_event == 6 then
                pugsy:play_chore(pu_talk_idles_a, "pu_talk_idles.cos")
            elseif pu_work_idles_event == 7 then
                pugsy:play_chore(pu_talk_idles_u, "pu_talk_idles.cos")
            elseif pu_work_idles_event == 8 then
                pugsy:play_chore(pu_talk_idles_stop_talk, "pu_talk_idles.cos")
            elseif pu_work_idles_event == 9 then
                fo:random_hammer_sound(pugsy)
            elseif pu_work_idles_event == 10 then
                fo:random_chisel_sound(pugsy)
            else
                PrintDebug("Unknown event for pu_work_idles!\n")
            end
            pu_work_idles_event = nil
        end
        if bibi_work_idles_event then
            if bibi_work_idles_event == 0 then
                bibi_stuff:complete_chore(bibi_work_idles_show_nothing, "bibi_work_idles.cos")
            elseif bibi_work_idles_event == 1 then
                bibi_stuff:complete_chore(bibi_work_idles_stick_only, "bibi_work_idles.cos")
            elseif bibi_work_idles_event == 2 then
                bibi_stuff:complete_chore(bibi_work_idles_scrap_only, "bibi_work_idles.cos")
            elseif bibi_work_idles_event == 3 then
                bibi_stuff:complete_chore(bibi_work_idles_coral_only, "bibi_work_idles.cos")
            elseif bibi_work_idles_event == 4 then
                bibi_stuff:complete_chore(bibi_work_idles_stick_coral_only, "bibi_work_idles.cos")
            elseif bibi_work_idles_event == 5 then
                fo.ricochet:play_chore(bibi_work_idles_ricochet, "bibi_work_idles.cos")
            elseif bibi_work_idles_event == 6 then
                bibi:play_chore(bibi_talk_idles_a, "bibi_talk_idles.cos")
            elseif bibi_work_idles_event == 7 then
                bibi:play_chore(bibi_talk_idles_u, "bibi_talk_idles.cos")
            elseif bibi_work_idles_event == 8 then
                bibi:play_chore(bibi_talk_idles_stop_talk, "bibi_talk_idles.cos")
            elseif bibi_work_idles_event == 9 then
                fo:random_hammer_sound(bibi)
            elseif bibi_work_idles_event == 10 then
                fo:random_chisel_sound(bibi)
            else
                PrintDebug("Unknown event for bibi_work_idles!\n")
            end
            bibi_work_idles_event = nil
        end
        break_here()
    end
end
fo.set_up_actors = function(arg1) -- line 100
    if meche_freed then
        bibi:free()
        pugsy:free()
        fo.pugsy_obj:make_untouchable()
        fo.bibi_obj:make_untouchable()
    else
        bibi:put_in_set(fo)
        bibi:setpos(0.085, -0.155, 0.66)
        pugsy:free()
        pugsy:put_in_set(fo)
        pugsy:set_costume("pu_talk_idles.cos")
        pugsy:set_mumble_chore(pu_talk_idles_mumble, "pu_talk_idles.cos")
        pugsy:set_talk_chore(1, pu_talk_idles_stop_talk)
        pugsy:set_talk_chore(2, pu_talk_idles_a)
        pugsy:set_talk_chore(3, pu_talk_idles_c)
        pugsy:set_talk_chore(4, pu_talk_idles_e)
        pugsy:set_talk_chore(5, pu_talk_idles_f)
        pugsy:set_talk_chore(6, pu_talk_idles_l)
        pugsy:set_talk_chore(7, pu_talk_idles_m)
        pugsy:set_talk_chore(8, pu_talk_idles_o)
        pugsy:set_talk_chore(9, pu_talk_idles_t)
        pugsy:set_talk_chore(10, pu_talk_idles_u)
        pugsy:push_costume("pu_work_idles.cos")
        pugsy:set_head(6, 7, 8, 165, 28, 80)
        pugsy:set_look_rate(130)
        pugsy:setpos(-0.07735, -0.17651, 0.32896)
        pugsy:setrot(0, 250.13, 0)
        if not pugsy_stuff then
            pugsy_stuff = Actor:create()
        end
        pugsy_stuff:set_costume("pu_work_idles.cos")
        pugsy_stuff:put_in_set(fo)
        pugsy_stuff:setpos(-0.07735, -0.17651, 0.32896)
        pugsy_stuff:setrot(0, 250.13, 0)
        pugsy_stuff:complete_chore(pu_work_idles_show_nothing, "pu_work_idles.cos")
        if fo.hammer_thrown then
            pugsy:complete_chore(pu_work_idles_hide_hammer, "pu_work_idles.cos")
        else
            pugsy:complete_chore(pu_work_idles_show_hammer, "pu_work_idles.cos")
        end
        bibi:free()
        bibi:put_in_set(fo)
        bibi:set_costume("bibi_talk_idles.cos")
        bibi:set_mumble_chore(bibi_talk_idles_mumble, "bibi_talk_idles.cos")
        bibi:set_talk_chore(1, bibi_talk_idles_stop_talk)
        bibi:set_talk_chore(2, bibi_talk_idles_a)
        bibi:set_talk_chore(3, bibi_talk_idles_c)
        bibi:set_talk_chore(4, bibi_talk_idles_e)
        bibi:set_talk_chore(5, bibi_talk_idles_f)
        bibi:set_talk_chore(6, bibi_talk_idles_l)
        bibi:set_talk_chore(7, bibi_talk_idles_m)
        bibi:set_talk_chore(8, bibi_talk_idles_o)
        bibi:set_talk_chore(9, bibi_talk_idles_t)
        bibi:set_talk_chore(10, bibi_talk_idles_u)
        bibi:push_costume("bibi_work_idles.cos")
        bibi:set_head(6, 7, 8, 165, 28, 80)
        bibi:set_look_rate(125)
        bibi:setpos(0.05654, -0.09785, 0.58611)
        bibi:setrot(0, 210, 0)
        if not bibi_stuff then
            bibi_stuff = Actor:create()
        end
        bibi_stuff:set_costume("bibi_work_idles.cos")
        bibi_stuff:put_in_set(fo)
        bibi_stuff:setpos(0.05654, -0.09785, 0.58611)
        bibi_stuff:setrot(0, 210, 0)
        bibi_stuff:complete_chore(bibi_work_idles_show_nothing, "bibi_work_idles.cos")
        if not fo.ricochet then
            fo.ricochet = Actor:create()
        end
        fo.ricochet:set_costume("bibi_work_idles.cos")
        fo.ricochet:put_in_set(fo)
        fo.ricochet:setpos(0.413341, -0.0173069, 0.2904)
        fo.ricochet:setrot(0, 21.6747, 0)
        fo.ricochet:complete_chore(bibi_work_idles_show_nothing, "bibi_work_idles.cos")
        bibi:set_speech_mode(MODE_BACKGROUND)
        pugsy:set_speech_mode(MODE_BACKGROUND)
        pu_work_idles_event = nil
        bibi_work_idles_event = nil
        start_script(fo.watch_costume_events)
        pugsy:start_work(TRUE)
        bibi:start_work(TRUE)
        if fo.hammer.touchable then
            fo.hammer:set_up_actor()
        end
        fo.cage_door:complete_chore(fo_door_closed)
    end
end
fo.use_chisel = function(arg1) -- line 203
    if meche_freed then
        mn.chisel:operate()
    else
        fo.pugsy_obj:use_chisel()
    end
end
fo.enter = function(arg1) -- line 217
    LoadCostume("mn_ham_react.cos")
    dr.reunited = TRUE
    fo:set_up_actors()
    fo.cage_door.hObjectState = fo:add_object_state(fo_bercu, "fo_door.bm", "fo_door.zbm", OBJSTATE_STATE, FALSE)
    fo.cage_door:set_object_state("fo_door.cos")
    fh.fo_door.opened = TRUE
    fh.fo_door:set_new_out_point()
    LoadCostume("pu_argue.cos")
    LoadCostume("bibi_argue.cos")
    preload_sfx("foHamr1.WAV")
    preload_sfx("foHamr2.WAV")
    preload_sfx("foHamr3.WAV")
    preload_sfx("foHamr4.WAV")
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0.65, 0.15, 1.84)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    arg1.former_lookrate = manny:get_look_rate()
end
fo.exit = function(arg1) -- line 246
    KillActorShadows(manny.hActor)
    if not meche_freed then
        stop_script(fo.watch_costume_events)
        bibi:free()
        bibi_stuff:free()
        pugsy:free()
        pugsy_stuff:free()
        pugsy:kill_crying()
        bibi:kill_crying()
        fo.ricochet:free()
        if fo.fighting then
            fo.fighting = FALSE
            stop_script(fo.fight)
        end
        if pugsy.work_task then
            stop_script(pugsy.work_task)
            pugsy.work_task = nil
        end
        if bibi.work_task then
            stop_script(bibi.work_task)
            bibi.work_task = nil
        end
        if bibi.screaming then
            bibi.screaming = FALSE
            stop_script(bibi.scream)
        end
        if pugsy.screaming then
            pugsy.screaming = FALSE
            stop_script(pugsy.screaming)
        end
    end
    manny:set_look_rate(arg1.former_lookrate)
end
fo.hammer = Object:create(fo, "/fotx153/hammer", 0.23377, -0.64950001, 0.040899999, { range = 0.60000002 })
fo.hammer.use_pnt_x = 0.32216999
fo.hammer.use_pnt_y = -0.67309999
fo.hammer.use_pnt_z = 0
fo.hammer.use_rot_x = 0
fo.hammer.use_rot_y = -639.77698
fo.hammer.use_rot_z = 0
fo.hammer.string_name = "hammer"
fo.hammer:make_untouchable()
fo.hammer.lookAt = function(arg1) -- line 302
    manny:say_line("/foma154/")
end
fo.hammer.pickUp = function(arg1) -- line 306
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    break_here()
    manny:play_chore(mn2_reach_low, "mn2.cos")
    sleep_for(750)
    manny:generic_pickup(arg1)
    arg1.act:free()
    manny:wait_for_chore(mn2_reach_low, "mn2.cos")
    manny:stop_chore(mn2_reach_low, "mn2.cos")
    END_CUT_SCENE()
end
fo.hammer.use = function(arg1) -- line 319
    if arg1.owner == manny then
        manny:say_line("/foma155/")
    else
        arg1:pickUp()
    end
end
fo.hammer.set_up_actor = function(arg1) -- line 327
    if not arg1.act then
        arg1.act = Actor:create()
    end
    arg1.act:set_costume("pu_work_idles.cos")
    arg1.act:put_in_set(fo)
    arg1.act:setpos(0.331482, -0.0681313, 0.2443)
    arg1.act:setrot(0, 160.498, 100)
    arg1.act:complete_chore(pu_work_idles_axe_only, "pu_work_idles.cos")
    arg1:make_touchable()
end
fo.desk = Object:create(fo, "/fotx156/desk", -0.0499998, -0.81999999, 0.17, { range = 0.40000001 })
fo.desk.use_pnt_x = -0.0499998
fo.desk.use_pnt_y = -1
fo.desk.use_pnt_z = 0
fo.desk.use_rot_x = 0
fo.desk.use_rot_y = 748.37097
fo.desk.use_rot_z = 0
fo.desk.lookAt = function(arg1) -- line 347
    manny:say_line("/foma157/")
end
fo.desk.pickUp = function(arg1) -- line 351
    system.default_response("furniture")
end
fo.desk.use = function(arg1) -- line 355
    manny:say_line("/foma158/")
end
fo.pugsy_obj = Object:create(fo, "/fotx159/angelito", -0.02, -0.15000001, 0.41, { range = 0.60000002 })
fo.pugsy_obj.use_pnt_x = 0.161847
fo.pugsy_obj.use_pnt_y = -0.51618898
fo.pugsy_obj.use_pnt_z = 0
fo.pugsy_obj.use_rot_x = 0
fo.pugsy_obj.use_rot_y = 31.872601
fo.pugsy_obj.use_rot_z = 0
fo.pugsy_obj.lookAt = function(arg1) -- line 368
    if not fo.pugsy_obj.seen then
        fo.pugsy_obj.seen = TRUE
        manny:say_line("/foma160/")
    else
        manny:say_line("/foma161/")
    end
end
fo.pugsy_obj.pickUp = function(arg1) -- line 377
    soft_script()
    manny:say_line("/foma162/")
    manny:wait_for_message()
    manny:say_line("/foma163/")
end
fo.pugsy_obj.use = function(arg1) -- line 384
    Dialog:run("an1", "dlg_angelitos.lua")
end
fo.pugsy_obj.use_gun = function(arg1) -- line 388
    manny:say_line("/foma164/")
end
fo.pugsy_obj.use_chisel = function(arg1) -- line 392
    START_CUT_SCENE()
    manny:walkto(arg1)
    manny:wait_for_actor()
    if pugsy.work_task then
        start_script(pugsy.kill_idle, pugsy)
    end
    if bibi.work_task then
        start_script(bibi.kill_idle, bibi)
    end
    if fo.fighting then
        start_script(exit_fight)
    end
    manny:say_line("/foma165/")
    manny:wait_for_message()
    manny:say_line("/foma166/")
    manny:wait_for_message()
    start_script(mn.chisel.operate, mn.chisel)
    sleep_for(650)
    start_sfx("ChisCage.wav")
    sleep_for(350)
    start_script(fo.kids_scream)
    wait_for_script(mn.chisel.operate)
    wait_for_script(bibi.scream)
    wait_for_script(pugsy.scream)
    END_CUT_SCENE()
end
fo.pugsy_obj.use_hammer = function(arg1) -- line 414
    START_CUT_SCENE()
    manny:say_line("/foma167/")
    manny:wait_for_message()
    pugsy:say_line("/fopu168/")
    END_CUT_SCENE()
end
fo.pugsy_obj.use_stockings = function(arg1) -- line 422
    START_CUT_SCENE()
    if pugsy.work_task then
        start_script(pugsy.kill_idle, pugsy)
    end
    if bibi.work_task then
        start_script(bibi.kill_idle, bibi)
    end
    if fo.fighting then
        start_script(exit_fight)
    end
    manny:say_line("/foma169/")
    sleep_for(1000)
    bibi:head_look_at_manny()
    pugsy:head_look_at_manny()
    manny:play_chore(mn2_use_obj, "mn2.cos")
    sleep_for(1000)
    manny:twist_head_gesture()
    manny:wait_for_message()
    pugsy:say_line("/fopu170/")
    pugsy:wait_for_message()
    bibi:start_crying()
    sleep_for(500)
    pugsy:start_crying()
    sleep_for(1500)
    manny:say_line("/foma171/")
    start_script(pugsy.exit_cry, pugsy)
    bibi:exit_cry()
    manny:wait_for_message()
    bibi:wait_for_message()
    bibi.cry_state = "sniffle"
    bibi:sniffle("/fobi172/")
    bibi:exit_cry()
    bibi:start_work()
    wait_for_script(pugsy.exit_cry)
    pugsy:start_work()
    END_CUT_SCENE()
end
fo.bibi_obj = Object:create(fo, "/fotx173/angelita", 0.1, -0.16, 0.67000002, { range = 0.80000001 })
fo.bibi_obj.parent = fo.pugsy_obj
fo.cage_door = Object:create(fo, "/fotx174/cage door", 0.31002301, -0.33708701, 0.333, { range = 0.40000001 })
fo.cage_door.use_pnt_x = 0.44502199
fo.cage_door.use_pnt_y = -0.354761
fo.cage_door.use_pnt_z = 0
fo.cage_door.use_rot_x = 0
fo.cage_door.use_rot_y = -632.69501
fo.cage_door.use_rot_z = 0
fo.cage_door.lookAt = function(arg1) -- line 468
    soft_script()
    manny:say_line("/foma175/")
    wait_for_message()
    if not meche_freed then
        pugsy:say_line("/fopu176/")
    end
end
fo.cage_door.use = function(arg1) -- line 477
    if meche_freed then
        system.default_response("nobody")
    else
        START_CUT_SCENE("no head")
        fo:current_setup(fo_bercu)
        manny:walkto_object(arg1)
        break_here()
        manny:play_chore(mn2_reach_med, "mn2.cos")
        sleep_for(500)
        arg1:run_chore(fo_door_opening)
        manny:head_look_at(bibi)
        if not fo.cage_door.tried then
            fo.cage_door.tried = TRUE
            manny:head_look_at(fo.bibi_obj)
            manny:say_line("/foma177/")
            manny:wait_for_message()
            pugsy:say_line("/fopu178/")
            pugsy:wait_for_message()
            bibi:say_line("/fobi179/")
            bibi:wait_for_message()
        else
            manny:say_line("/foma180/")
            if not pugsy.crying and not bibi.crying and not pugsy.screaming and not bibi.screaming and not fo.fighting then
                manny:wait_for_message()
                pugsy:say_line("/fopu181/")
                pugsy:wait_for_message()
                bibi:say_line("/fobi182/")
                sleep_for(750)
                pugsy:say_line("/fopu183/")
                bibi:wait_for_message()
                bibi:say_line("/fobi184/")
                pugsy:wait_for_message()
                pugsy:say_line("/fopu185/")
            end
        end
        manny:wait_for_chore(mn2_reach_med, "mn2.cos")
        manny:stop_chore(mn2_reach_med, "mn2.cos")
        manny:play_chore(mn2_reach_high, "mn2.cos")
        sleep_for(1000)
        arg1:play_chore(fo_door_closing)
        manny:say_line("/foma186/")
        manny:wait_for_message()
        bibi:say_line("/fobi187/")
        manny:wait_for_chore(mn2_reach_high, "mn2.cos")
        manny:stop_chore(mn2_reach_high, "mn2.cos")
        END_CUT_SCENE()
    end
end
fo.cage_door.use_chisel = function(arg1) -- line 530
    manny:say_line("/foma188/")
end
fo.cage_door.pickUp = fo.cage_door.use
fo.fh_door = Object:create(fo, "/fotx189/door", 0.77249801, 0.120142, 0.44999999, { range = 0.60000002 })
fo.fh_door.use_pnt_x = 0.68870902
fo.fh_door.use_pnt_y = 0.0556878
fo.fh_door.use_pnt_z = 0
fo.fh_door.use_rot_x = 0
fo.fh_door.use_rot_y = -16.683201
fo.fh_door.use_rot_z = 0
fo.fh_door.out_pnt_x = 0.77249801
fo.fh_door.out_pnt_y = 0.120142
fo.fh_door.out_pnt_z = 0
fo.fh_door.out_rot_x = 0
fo.fh_door.out_rot_y = -364.56
fo.fh_door.out_rot_z = 0
fo.fh_box = fo.fh_door
fo.fh_door.walkOut = function(arg1) -- line 562
    fh:come_out_door(fh.fo_door)
end
fo.fh_door.lookAt = function(arg1) -- line 566
    system.default_response("way out")
end
forklift_fork_up = 0
forklift_fork_down = 1
forklift_show_shaft = 2
forklift_hide_shaft = 3
forklift_mc_out = 4
forklift_down_hold = 5
forklift_mc_in_fork = 6
forklift_mc_hide = 7
forklift_mc_climb_fork = 8
forklift_shaft_only = 9
forklift_hide_rear = 10
forklift_up_hold = 11
forklift_manny_mumble = 12
forklift_stop_talk = 13
forklift_a = 14
forklift_e = 15
forklift_l = 16
forklift_f = 17
forklift_m = 18
forklift_o = 19
forklift_u = 20
forklift_c = 21
forklift_t = 22
fp_door_Chore0 = 0
fp_door_Chore1 = 1
CheckFirstTime("fp.lua")
fp = Set:create("fp.set", "florist shop", { fp_top = 0, fp_extws = 1 })
fp.hear_bell = function() -- line 12
    break_here()
    print_temporary("sfx: Ding! Ding!")
end
fp.enter = function(arg1) -- line 22
    NewObjectState(fp_extws, OBJSTATE_STATE, "fp_door.bm", "fp_door_open.zbm")
    fp.fi_door:set_object_state("fp_door.cos")
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0.02, 0.73, 1.2)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
    AddShadowPlane(manny.hActor, "shadow4")
end
fp.ext = function(arg1) -- line 36
    KillActorShadows(manny.hActor)
end
fp.flowerbox = Object:create(fp, "/fptx002/flowerbox", -0.51320302, 0.89507401, 0.19, { range = 1 })
fp.flowerbox.use_pnt_x = 0.0467971
fp.flowerbox.use_pnt_y = 1.27507
fp.flowerbox.use_pnt_z = -0.15000001
fp.flowerbox.use_rot_x = 0
fp.flowerbox.use_rot_y = -529.185
fp.flowerbox.use_rot_z = 0
fp.flowerbox.lookAt = function(arg1) -- line 53
    manny:say_line("/fpma003/")
end
fp.flowerbox.pickUp = function(arg1) -- line 57
    system.default_response("no")
end
fp.flowerbox.use = function(arg1) -- line 61
    system.default_response("no")
end
fp.flowerbox2 = Object:create(fp, "/fptx004/flowerbox", 0.526797, 0.89507401, 0.19, { range = 1 })
fp.flowerbox2.use_pnt_x = 0.0467971
fp.flowerbox2.use_pnt_y = 1.27507
fp.flowerbox2.use_pnt_z = -0.15000001
fp.flowerbox2.use_rot_x = 0
fp.flowerbox2.use_rot_y = -529.185
fp.flowerbox2.use_rot_z = 0
fp.flowerbox2.parent = fp.flowerbox
fp.at_door = Object:create(fp, "/fptx001/door", -0.049922001, 2.8169701, 0.376041, { range = 0.60000002 })
fp.at_door.use_pnt_x = -0.071339399
fp.at_door.use_pnt_y = 1.83802
fp.at_door.use_pnt_z = -0.27553901
fp.at_door.use_rot_x = 0
fp.at_door.use_rot_y = -354.61099
fp.at_door.use_rot_z = 0
fp.at_door.out_pnt_x = -0.079703301
fp.at_door.out_pnt_y = 1.925
fp.at_door.out_pnt_z = -0.28999999
fp.at_door.out_rot_x = 0
fp.at_door.out_rot_y = -354.61099
fp.at_door.out_rot_z = 0
fp.at_box = fp.at_door
fp.at_door.walkOut = function(arg1) -- line 95
    at:come_out_door(at.fp_door)
end
fp.fi_door = Object:create(fp, "/fptx005/florist's shop", 0.029999999, 0.58499998, 0.56, { range = 2 })
fp.fi_door.use_pnt_x = 0.049835201
fp.fi_door.use_pnt_y = 0.85460001
fp.fi_door.use_pnt_z = 0
fp.fi_door.use_rot_x = 0
fp.fi_door.use_rot_y = -180.10001
fp.fi_door.use_rot_z = 0
fp.fi_door.out_pnt_x = 0.0495211
fp.fi_door.out_pnt_y = 0.625
fp.fi_door.out_pnt_z = 0
fp.fi_door.out_rot_x = 0
fp.fi_door.out_rot_y = -180.10001
fp.fi_door.out_rot_z = 0
fp.fi_box = fp.fi_door
fp.fi_door.lookAt = function(arg1) -- line 117
    manny:say_line("/fpma006/")
end
fp.fi_door.walkOut = function(arg1) -- line 121
    if fi.gun.owner == manny then
        system.default_response("nah")
    else
        START_CUT_SCENE()
        if manny.is_holding then
            put_away_held_item()
        end
        manny:start_open_door_anim()
        sleep_for(800)
        fp.fi_door:play_chore(0)
        sleep_for(268)
        END_CUT_SCENE()
        fi:enter_from_fp()
    end
end
frg_door_door_open = 0
frg_door_door_closed = 1
frg_door_door_ajar = 2
frost_balloon_frosty = 0
ga_dom_limo_part1 = 0
ga_dom_limo_part2 = 1
ga_dom_limo_part3 = 2
ga_door_note_here = 0
ga_door_note_gone = 1
ga_door_opened = 2
ga_door_closed = 3
ga_elevator_open = 0
ga_elevator_close = 1
ga_elevator_set_open = 2
ga_elevator_set_closed = 3
ga_gs_door_open = 0
ga_gs_door_close = 1
ga_gs_door_glottis_out = 2
ga_gs_door_glottis_in = 3
CheckFirstTime("ga.lua")
ga = Set:create("ga.set", "Garage", { ga_elerv = 0, ga_elerv2 = 0, ga_entha = 1, ga_entha2 = 1, ga_entha3 = 1, ga_entha4 = 1, ga_wshms = 2, ga_rckha = 3, ga_ofcws = 4, ga_rckws = 5, ga_rckws2 = 5, overhead = 6, ga_ofcha = 7 })
ga.cheat_boxes = { ga_cheat_box_1 = 0, ga_cheat_box_2 = 1, ga_cheat_box_3 = 2, ga_cheat_box_4 = 3, ga_cheat_box_5 = 4, ga_cheat_box_6 = 5, ga_cheat_box_7 = 6, ga_cheat_box_8 = 7 }
dofile("glottis_scripts.lua")
dofile("dlg_glottis.lua")
dofile("ga_elevator.lua")
dofile("ga_skid_marks.lua")
dofile("glottis_peek.lua")
dofile("ga_door.lua")
ga.glottis_music = FALSE
ga.test = function(arg1) -- line 30
    manny:stop_chore(nil, "ms.cos")
    manny:setpos(1.43663, 8.85144, 0)
    if not glottis.is_outside then
        glottis:emerge()
    end
    sleep_for(500)
    glottis.hand_work_order()
end
glottis.hand_work_order = function() -- line 40
    manny:kill_head_script()
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_give_workorder, "gl_akimbo_idles.cos")
    start_script(manny.walk_and_face, manny, 0.969331, 8.7336, 0, 0, 91.6708, 0)
    sleep_for(1000)
    manny:play_chore(ms_hand_on_obj, "ms.cos")
    break_here()
    manny:play_chore(ms_reach_med, "ms.cos")
    sleep_for(500)
    manny:setrot(0, 109.711, 0)
    manny:stop_chore(ms_reach_med, "ms.cos")
    manny:stop_chore(ms_hand_on_obj, "ms.cos")
    manny:generic_pickup(ga.work_order)
    glottis:wait_for_chore(gl_akimbo_idles_give_workorder, "gl_akimbo_idles.cos")
    start_sfx("getWrkOr.wav")
    look_at_item_in_hand(TRUE)
    glottis:complete_chore(gl_akimbo_idles_deactivate_workorder, "gl_akimbo_idles.cos")
    glottis:play_chore(gl_akimbo_idles_workorder_to_akimbo, "gl_akimbo_idles.cos")
    glottis:wait_for_chore(gl_akimbo_idles_workorder_to_akimbo, "gl_akimbo_idles.cos")
    glottis:akimbo()
end
ga.domino_drive_by = function() -- line 63
    START_CUT_SCENE()
    system:lock_display()
    set_override(ga.domino_drive_by_override)
    StartMovie("ga_limo1.snm", nil, 448, 166)
    system:unlock_display()
    wait_for_movie()
    ga:current_setup(ga_entha)
    StartMovie("ga_limo2.snm")
    wait_for_movie()
    END_CUT_SCENE()
    ga.domino_drive_by_override()
end
ga.domino_drive_by_override = function() -- line 77
    system:lock_display()
    kill_override()
    ga:current_setup(ga_elerv)
    break_here()
    system:unlock_display()
end
glottis.emerge = function(arg1) -- line 85
    ga:current_setup(ga_ofcha)
    manny:head_look_at(ga.gs_door)
    ga.glottis_music = TRUE
    music_state:update(system.currentSet)
    play_movie("ga_out.snm", 142, 139)
    sleep_for(2000)
    wait_for_movie()
    ga:current_setup(ga_ofcws)
    glottis:set_visibility(TRUE)
    glottis.is_outside = TRUE
    manny.head_script = start_script(manny.head_follow_mesh, manny, glottis, 4)
end
glottis.demerge = function(arg1) -- line 99
    glottis:set_visibility(FALSE)
    glottis:stop_chore(nil)
    manny:kill_head_script()
    ga:current_setup(ga_ofcha)
    play_movie("ga_in.snm", 142, 139)
    wait_for_movie()
    ga.glottis_eyes:make_untouchable()
    glottis.is_outside = FALSE
    manny:head_look_at(nil)
    ga:force_camerachange()
    ga.glottis_music = FALSE
    music_state:update(system.currentSet)
end
ga.back_away = function(arg1) -- line 116
    manny:setrot(0, 59.9581, 0, TRUE)
    manny:backup(arg1)
end
ga.prepare_for_glottis = function(arg1) -- line 121
    if arg1 == "door" then
        ga.back_away(2000)
    elseif arg1 == ga.toolbox1 then
        ga.back_away(3000)
    elseif arg1 == ga.toolbox2 then
        manny:turn_toward_entity(ga.gs_door)
    elseif arg1 == "crash" then
        manny:turn_toward_entity(ga.gs_door)
    elseif arg1 == "fountain" then
        manny:turn_toward_entity(ga.gs_door)
    end
end
ga.dialog_pos = function() -- line 135
    glottis.head_script = start_script(glottis.head_follow_mesh, glottis, manny, 6)
    start_script(manny.walk_and_face, manny, 1.43663, 8.85144, 0, 0, 53.4055, 0)
    repeat
        break_here()
    until point_proximity(1.43663, 8.85144, 0) < 0.5
    glottis:kill_head_script()
    glottis:head_look_at_point({ x = 1.43663, y = 8.85144, z = 0.475 })
end
ga.disturb_glottis = function(arg1, arg2) -- line 145
    local local1
    if not reaped_bruno then
        glottis:head_look_at(nil)
        if glottis.recruited then
            single_start_script(ga.do_not_disturb_glottis)
        else
            START_CUT_SCENE("no head")
            manny:head_look_at(nil)
            wait_for_message()
            if glottis.met then
                if arg2 == "door" then
                    if not ga.called_genie then
                        ga.called_genie = TRUE
                        manny:say_line("/gama082/")
                    end
                    wait_for_message()
                elseif arg2 == ga.toolbox1 or arg2 == ga.toolbox2 or arg2 == "fountain" then
                    glottis:say_line("/gagl085/")
                end
                start_script(ga.prepare_for_glottis, arg2)
                sleep_for(1000)
                wait_for_message()
                glottis:emerge()
                glottis:say_line("/gagl084/")
                ga.dialog_pos()
            else
                glottis.met = TRUE
                if arg2 == "door" then
                    manny:say_line("/gama083/")
                    manny:wait_for_message()
                end
                glottis:say_line("/gagl085/")
                sleep_for(500)
                start_script(ga.prepare_for_glottis, arg2)
                glottis:wait_for_message()
                if arg2 == ga.toolbox1 or arg2 == ga.toolbox2 or arg2 == "fountain" or arg2 == "crash" then
                    glottis:say_line("/gagl086/")
                end
                sleep_for(500)
                if arg2 == "crash" then
                    start_script(ga.dialog_pos)
                    glottis:emerge()
                else
                    glottis:emerge()
                    ga.dialog_pos()
                end
                wait_for_message()
                glottis:say_line("/gagl087/")
                wait_for_message()
                glottis:say_line("/gagl088/")
                glottis:shrug()
            end
            wait_for_message()
            cameraman_disabled = TRUE
            ga:current_setup(ga_ofcws)
            ga.crash:disable()
            END_CUT_SCENE()
            Dialog:run("gl1", "dlg_glottis.lua")
        end
    end
end
ga.do_not_disturb_glottis = function(arg1) -- line 213
    START_CUT_SCENE("no head")
    glottis:set_costume(nil)
    glottis:set_costume("glottis_peek.cos")
    glottis:set_collision_mode(COLLISION_OFF)
    glottis:set_visibility(TRUE)
    glottis:put_in_set(ga)
    glottis:ignore_boxes()
    glottis:setpos(0.421567, 10.3963, 0)
    glottis:setrot(0, 186.662, 0)
    glottis:head_look_at(nil)
    glottis:set_mumble_chore(glottis_peek_mumble)
    glottis:set_talk_chore(1, glottis_peek_m)
    glottis:set_talk_chore(2, glottis_peek_a)
    glottis:set_talk_chore(3, glottis_peek_c)
    glottis:set_talk_chore(4, glottis_peek_e)
    glottis:set_talk_chore(5, glottis_peek_f)
    glottis:set_talk_chore(6, glottis_peek_l)
    glottis:set_talk_chore(7, glottis_peek_m)
    glottis:set_talk_chore(8, glottis_peek_o)
    glottis:set_talk_chore(9, glottis_peek_t)
    glottis:set_talk_chore(10, glottis_peek_u)
    glottis:play_chore(glottis_peek_peek_in, "glottis_peek.cos")
    glottis:wait_for_chore(glottis_peek_peek_in, "glottis_peek.cos")
    glottis:say_line("/gagl089/")
    start_script(manny.walkto, manny, ga.window)
    manny:head_look_at(ga.window)
    wait_for_message()
    glottis:say_line("/gagl090/")
    wait_for_message()
    manny:say_line("/gama091/")
    sleep_for(500)
    manny:shrug_gesture()
    wait_for_message()
    glottis:say_line("/gagl092/")
    wait_for_message()
    glottis:say_line("/gagl093/")
    wait_for_message()
    manny:say_line("/gama094/")
    manny:twist_head_gesture()
    wait_for_message()
    glottis:stop_chore(glottis_peek_peek_hold)
    glottis:play_chore(glottis_peek_peek_done)
    glottis:wait_for_chore()
    glottis:set_visibility(FALSE)
    manny:say_line("/gama095/")
    manny:point_gesture()
    wait_for_message()
    manny:say_line("/gama096/")
    manny:turn_right(90)
    END_CUT_SCENE()
end
ga.set_up_actors = function(arg1) -- line 267
    glottis:default()
    glottis:push_costume("gl_akimbo_idles.cos")
    glottis:set_mumble_chore(glottis_mumble)
    glottis:put_in_set(ga)
    glottis:setpos(0.755, 9.182, 0)
    glottis:setrot(0, 230, 0)
    glottis:follow_boxes()
    glottis:set_visibility(FALSE)
    SetShadowColor(5, 5, 5)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 100)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 15.5084, 12.3313, 3.76082)
    SetActorShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow2")
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, 15.5084, 12.3313, 3.76082)
    SetActorShadowPlane(manny.hActor, "shadow3")
    AddShadowPlane(manny.hActor, "shadow3")
    SetActiveShadow(manny.hActor, 3)
    SetActorShadowPoint(manny.hActor, 15.5084, 12.3313, 3.76082)
    SetActorShadowPlane(manny.hActor, "shadow4")
    AddShadowPlane(manny.hActor, "shadow4")
    SetActiveShadow(glottis.hActor, 0)
    SetActorShadowPoint(glottis.hActor, 0, 0, 100)
    SetActorShadowPlane(glottis.hActor, "shadow1")
    AddShadowPlane(glottis.hActor, "shadow1")
end
ga.update_music_state = function(arg1) -- line 315
    if ga.glottis_music then
        return stateGS
    else
        return stateGA
    end
end
ga.enter = function(arg1) -- line 324
    ga:add_object_state(0, "ga_ele_dr.bm", "ga_ele_dr.zbm", OBJSTATE_STATE)
    ga.ha_door:set_object_state("ga_elevator.cos")
    if reaped_bruno then
        ga.door_object_states.hObjectState1 = ga:add_object_state(ga_rckha, "ga_3_opndor.bm", nil, OBJSTATE_STATE, FALSE)
        ga.door_object_states.hObjectState2 = ga:add_object_state(ga_rckws, "ga_5_opndor.bm", nil, OBJSTATE_STATE, FALSE)
        ga.door_object_states.hObjectState3 = ga:add_object_state(ga_ofcha, "ga_7_opndor.bm", "ga_7_opndor.zbm", OBJSTATE_STATE, FALSE)
        ga.door_object_states.hObjectState4 = ga:add_object_state(ga_rckha, "ga_3_glnote.bm", nil, OBJSTATE_STATE, FALSE)
        ga.door_object_states.hObjectState5 = ga:add_object_state(ga_rckws, "ga_5_glnote.bm", nil, OBJSTATE_STATE, FALSE)
        ga.door_object_states.hObjectState6 = ga:add_object_state(ga_ofcha, "ga_7_glnote.bm", nil, OBJSTATE_STATE, FALSE)
        ga.door_object_states:set_object_state("ga_door.cos")
        if reaped_meche then
            ga:add_object_state(ga_entha, "ga_skid_marks.bm", nil, OBJSTATE_UNDERLAY)
            ga.skid_marks:set_object_state("ga_skid_marks.cos")
            ga.skid_marks:play_chore(ga_skid_marks_here, "ga_skid_marks.cos")
            ga.gs_door.locked = FALSE
            ga.gs_door.opened = TRUE
            Object.open(ga.gs_door)
            ga.door_object_states:play_chore(ga_door_opened)
            ga.gs_door.obj_x = 0.575784
            ga.gs_door.obj_y = 9.81803
            ga.gs_door.obj_z = 0.545
            ga.gs_door:update_look_point()
            ga.al_door:unlock()
            ga.al_door:open()
            Object.open(ga.al_door)
            ga:add_object_state(ga_entha, "ga_rollup_entha.bm", "ga_rollup_entha.zbm", OBJSTATE_STATE)
            ga:add_object_state(ga_rckws, "ga_rollup_rckws.bm", nil, OBJSTATE_UNDERLAY)
            ga.al_door:set_object_state("ga_rollup_door.cos")
            ga.al_door:play_chore(0)
            ga.ha_door.locked = TRUE
            MakeSectorActive("no_hallway", FALSE)
            MakeSectorActive("ha_door_trigger", FALSE)
            MakeSectorActive("crash_box_1", nil)
            MakeSectorActive("crash_box_2", nil)
        else
            ga.gs_door.opened = FALSE
            ga.gs_door.locked = TRUE
            Object.close(ga.gs_door)
            ga.al_door:close()
            ga.al_door:lock()
            Object.close(ga.al_door)
            ga.door_object_states:play_chore(ga_door_note_here)
        end
    else
        ga.door_object_states.opened = FALSE
        ga.gs_door.locked = TRUE
        Object.close(ga.gs_door)
        ga.al_door:close()
        ga.al_door:lock()
        MakeSectorActive("ha_door_trigger", TRUE)
    end
    if ga.crash.triggered then
        ga.crash:disable()
        MakeSectorActive("crash_box_1", nil)
        MakeSectorActive("crash_box_2", nil)
    end
    ga:set_up_actors()
    if not ga.seen_domino and ha.been_there then
        ga.seen_domino = TRUE
        start_script(ga.domino_drive_by, ga)
    else
        ga:add_object_state(7, "ga_new_door.bm", nil, OBJSTATE_UNDERLAY)
    end
    preload_sfx("gaTools.wav")
end
ga.exit = function(arg1) -- line 416
    glottis:free()
    ga.glottis_eyes:make_untouchable()
    KillActorShadows(manny.hActor)
    KillActorShadows(glottis.hActor)
end
ga.door_object_states = Object:create(ga, "", 0, 0, 0, { range = 0 })
ga.door_object_states:make_untouchable()
ga.skid_marks = Object:create(ga, "", 0, 0, 0, { range = 0 })
ga.skid_marks.touchable = FALSE
ga.work_order = Object:create(ga, "/gatx098/work order", 0, 0, 0, { range = 0 })
ga.work_order.string_name = "work_order"
ga.work_order.wav = "getWrkOr.wav"
ga.work_order.shrink_radius = 0.029999999
ga.work_order.lookAt = function(arg1) -- line 443
    manny:say_line("/gama099/")
end
ga.work_order.use = ga.work_order.lookAt
ga.work_order.default_response = function(arg1) -- line 449
    manny:say_line("/gama100/")
end
ga.fountain = Object:create(ga, "/gatx105/water fountain", 1.2787, 9.8868198, 0.3971, { range = 0.60000002 })
ga.fountain.use_pnt_x = 1.425
ga.fountain.use_pnt_y = 9.8983202
ga.fountain.use_pnt_z = 0
ga.fountain.use_rot_x = 0
ga.fountain.use_rot_y = 96.035202
ga.fountain.use_rot_z = 0
ga.fountain.lookAt = function(arg1) -- line 462
    manny:say_line("/gama106/")
end
ga.fountain.use = function(arg1) -- line 466
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:wait_for_actor()
        manny:push_costume("manny_wave.cos")
        manny:play_chore(manny_wave_wave, "manny_wave.cos")
        sleep_for(500)
        start_sfx("gaWtrFtn.wav")
        manny:fade_out_chore(manny_wave_wave, "manny_wave.cos")
        manny:wait_for_chore(manny_wave_wave, "manny_wave.cos")
        manny:pop_costume()
        END_CUT_SCENE()
        ga:disturb_glottis("fountain")
    end
end
ga.toolbox1 = Object:create(ga, "/gatx107/tool cabinet", 0.325892, 8.8715601, 0.3371, { range = 0.75 })
ga.toolbox1.use_pnt_x = 0.52919197
ga.toolbox1.use_pnt_y = 8.8715601
ga.toolbox1.use_pnt_z = 0
ga.toolbox1.use_rot_x = 0
ga.toolbox1.use_rot_y = 105.39
ga.toolbox1.use_rot_z = 0
ga.toolbox1.lookAt = function(arg1) -- line 492
    manny:say_line("/gama108/")
end
ga.toolbox1.use = function(arg1) -- line 496
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:wait_for_actor()
        END_CUT_SCENE()
        if not arg1.touched then
            START_CUT_SCENE()
            arg1.touched = TRUE
            start_sfx("gaTools.wav")
            manny:push_costume("ma_wheel_stuck.cos")
            manny:run_chore(ma_wheel_stuck_hand_on_tu, "ma_wheel_stuck.cos")
            manny:play_chore_looping(ma_wheel_stuck_turn_tu, "ma_wheel_stuck.cos")
            sleep_for(1000)
            manny:say_line("/gama109/")
            wait_for_sound("gaTools.wav")
            manny:stop_chore(ma_wheel_stuck_turn_tu, "ma_wheel_stuck.cos")
            manny:run_chore(ma_wheel_stuck_hand_off_tu, "ma_wheel_stuck.cos")
            manny:pop_costume()
            wait_for_message()
            END_CUT_SCENE()
            start_script(ga.disturb_glottis, ga, arg1)
        else
            manny:say_line("/gama109/")
        end
    end
end
ga.toolbox2 = Object:create(ga, "/gatx110/tool cabinet", 1.12326, 7.2038102, 0.32030001, { range = 0.69999999 })
ga.toolbox2.use_pnt_x = 1.02086
ga.toolbox2.use_pnt_y = 7.4755101
ga.toolbox2.use_pnt_z = 0
ga.toolbox2.use_rot_x = 0
ga.toolbox2.use_rot_y = 201.31599
ga.toolbox2.use_rot_z = 0
ga.toolbox2.lookAt = ga.toolbox1.lookAt
ga.toolbox2.use = ga.toolbox1.use
ga.window = Object:create(ga, "/gatx111/window", 0.40641999, 9.7950602, 0.44999999, { range = 0.55000001 })
ga.window.use_pnt_x = 0.31200001
ga.window.use_pnt_y = 9.6400003
ga.window.use_pnt_z = 0
ga.window.use_rot_x = 0
ga.window.use_rot_y = 1035.87
ga.window.use_rot_z = 0
ga.window.lookAt = function(arg1) -- line 546
    if reaped_bruno then
        manny:say_line("/gama112/")
    else
        manny:say_line("/gama113/")
    end
end
ga.window.use = function(arg1) -- line 554
    manny:say_line("/gama114/")
end
ga.crash = Object:create(ga, "/gatx115/crash trigger", 0, 0, 0, { range = 0 })
ga.crash:make_untouchable()
ga.crash.triggered = FALSE
ga.tire_box = ga.crash
ga.crash.disable = function(arg1) -- line 564
    MakeSectorActive("crash_box_1", nil)
    MakeSectorActive("crash_box_2", nil)
end
ga.crash.walkOut = function(arg1) -- line 569
    START_CUT_SCENE()
    arg1.triggered = TRUE
    start_sfx("gaJunk.wav")
    sleep_for(4000)
    END_CUT_SCENE()
    start_script(manny.walk_and_face, manny, 3.31, 7.143, 0, 0, 1124.42, 0)
    if not reaped_bruno and not glottis.recruited then
        start_script(ga.disturb_glottis, ga, "crash")
    end
end
ga.glottis_eyes = Object:create(ga, "/gatx116/Glottis' eyes", 0.93450201, 9.1657104, 0.86000001, { range = 3 })
ga.glottis_eyes:make_untouchable()
ga.glottis_eyes.use_pnt_x = 1.46
ga.glottis_eyes.use_pnt_y = 9.4619999
ga.glottis_eyes.use_pnt_z = 0
ga.glottis_eyes.use_rot_x = 0
ga.glottis_eyes.use_rot_y = 1190.17
ga.glottis_eyes.use_rot_z = 0
ga.kiosk = Object:create(ga, "/gatx123/kiosk", 14.1299, 8.6680603, 0.5, { range = 0.89999998 })
ga.kiosk.use_pnt_x = 13.5499
ga.kiosk.use_pnt_y = 8.69806
ga.kiosk.use_pnt_z = 0
ga.kiosk.use_rot_x = 0
ga.kiosk.use_rot_y = -439.996
ga.kiosk.use_rot_z = 0
ga.kiosk.lookAt = function(arg1) -- line 600
    soft_script()
    manny:say_line("/gama124/")
    wait_for_message()
    manny:say_line("/gama125/")
end
ga.kiosk.pickUp = function(arg1) -- line 607
end
ga.kiosk.use = function(arg1) -- line 610
    soft_script()
    manny:say_line("/gama126/")
    wait_for_message()
    manny:say_line("/gama127/")
end
ga.lol_trigger = { }
ga.lol_trigger.walkOut = function(arg1) -- line 618
    ga.lol.use()
end
ga.lol = Object:create(ga, "/gatx128/Land of the Living", 15.4095, 13.5545, 1.0700001, { range = 2.5999999 })
ga.lol.use_pnt_x = 15.4095
ga.lol.use_pnt_y = 10.5345
ga.lol.use_pnt_z = 0
ga.lol.use_rot_x = 0
ga.lol.use_rot_y = -371.84799
ga.lol.use_rot_z = 0
ga.lol.lookAt = function(arg1) -- line 630
    manny:say_line("/gama129/")
end
ga.lol.use = function(arg1) -- line 634
    manny:say_line("/gama130/")
    wait_for_message()
    manny:say_line("/gama131/")
end
ga.cars = Object:create(ga, "/gatx132/cars", 5.63764, 6.3539, 1.17, { range = 2.3 })
ga.cars.use_pnt_x = 5.7176399
ga.cars.use_pnt_y = 7.0138998
ga.cars.use_pnt_z = 0
ga.cars.use_rot_x = 0
ga.cars.use_rot_y = -555.85498
ga.cars.use_rot_z = 0
ga.cars.lookAt = function(arg1) -- line 648
    if reaped_meche then
        soft_script()
        manny:say_line("/gama133/")
        wait_for_message()
        manny:say_line("/gama134/")
    else
        manny:say_line("/gama135/")
    end
end
ga.cars.pickUp = function(arg1) -- line 659
    manny:say_line("/gama136/")
end
ga.cars.use = ga.cars.pickUp
ga.gs_door = Object:create(ga, "/gatx117/door", 0.83642, 9.7850504, 0.5, { range = 0.75 })
ga.ga_gs_box = ga.gs_door
ga.gs_door.use_pnt_x = 0.82700002
ga.gs_door.use_pnt_y = 9.6400003
ga.gs_door.use_pnt_z = 0
ga.gs_door.use_rot_x = 0
ga.gs_door.use_rot_y = 6.74999
ga.gs_door.use_rot_z = 0
ga.gs_door.out_pnt_x = 0.80800003
ga.gs_door.out_pnt_y = 10
ga.gs_door.out_pnt_z = 0
ga.gs_door.out_rot_x = 0
ga.gs_door.out_rot_y = 2.9427099
ga.gs_door.out_rot_z = 0
ga.gs_door.passage = { "ga_shop_box_1", "ga_shop_box_2" }
ga.gs_door.lookAt = function(arg1) -- line 693
    if reaped_meche then
        soft_script()
        manny:say_line("/gama102/")
        wait_for_message()
        manny:say_line("/gama103/")
    elseif reaped_bruno then
        arg1.read_junk = TRUE
        manny:say_line("/gama104/")
    else
        system.default_response("closed")
    end
end
ga.gs_door.locked_out = function(arg1) -- line 707
    START_CUT_SCENE()
    if reaped_bruno then
        manny:walkto_object(ga.gs_door)
        manny:setrot(0, 35.9933, 0, TRUE)
        manny:wait_for_actor()
        manny:play_chore(ms_reach_med, "ms.cos")
        sleep_for(500)
        system.default_response("locked")
        manny:wait_for_chore(ms_reach_med, "ms.cos")
        manny:stop_chore(ms_reach_med, "ms.cos")
        manny:walkto(arg1)
        wait_for_message()
        if not arg1.read_junk then
            arg1:lookAt()
        end
    else
        manny:knock_on_door_anim()
    end
    END_CUT_SCENE()
    if not reaped_bruno then
        ga:disturb_glottis("door")
    end
end
ga.gs_door.walkOut = function(arg1) -- line 733
    gs:come_out_door(gs.ga_door)
end
ga.ha_door = Object:create(ga, "/gatx118/elevator", 15.7683, 0.016555, 0.47999999, { range = 0.75 })
ga.ga_ha_box = ga.ha_door
ga.ha_door.use_pnt_x = 15.772
ga.ha_door.use_pnt_y = 0.22499999
ga.ha_door.use_pnt_z = 0
ga.ha_door.use_rot_x = 0
ga.ha_door.use_rot_y = 176.205
ga.ha_door.use_rot_z = 0
ga.ha_door.out_pnt_x = 15.6093
ga.ha_door.out_pnt_y = -0.55000001
ga.ha_door.out_pnt_z = 0
ga.ha_door.out_rot_x = 0
ga.ha_door.out_rot_y = -179.776
ga.ha_door.out_rot_z = 0
ga.ha_door.passage = { "ga_elevator_psg" }
ga.ha_door.locked_out = function(arg1) -- line 772
    START_CUT_SCENE()
    manny:say_line("/gama119/")
    wait_for_message()
    manny:say_line("/gama120/")
    END_CUT_SCENE()
end
ga.ha_door.lookAt = function(arg1) -- line 781
    if not arg1:is_locked() then
        system.default_response("here already")
    else
        arg1:locked_out()
    end
end
ga.ha_door.walkOut = function(arg1) -- line 789
    START_CUT_SCENE()
    manny:clear_hands()
    manny.footsteps = footsteps.concrete
    manny:walkto_object(arg1, TRUE)
    start_script(arg1.close, arg1)
    while TurnActorTo(manny.hActor, arg1.use_pnt_x, arg1.use_pnt_y, arg1.use_pnt_z) do
        break_here()
    end
    wait_for_script(arg1.close)
    ha:switch_to_set()
    manny:put_in_set(ha)
    manny:setpos(ha.ga_door.out_pnt_x, ha.ga_door.out_pnt_y, ha.ga_door.out_pnt_z)
    manny:setrot(0, 266.69, 0)
    ha.ga_door:open()
    manny:walkto(ha.ga_door.use_pnt_x, ha.ga_door.use_pnt_y, ha.ga_door.use_pnt_z)
    manny:wait_for_actor()
    ha.ga_door:close()
    END_CUT_SCENE()
end
ga.ha_door.open = function(arg1) -- line 811
    if arg1:is_locked() then
        return Object.open(arg1)
    end
    if not arg1:is_open() then
        arg1.interest_actor:play_chore(ga_elevator_open, "ga_elevator.cos")
        arg1.interest_actor:wait_for_chore()
        Object.open(arg1)
    end
    return TRUE
end
ga.ha_door.close = function(arg1) -- line 825
    if arg1:is_open() then
        arg1.interest_actor:play_chore(ga_elevator_close, "ga_elevator.cos")
        arg1.interest_actor:wait_for_chore()
        Object.close(arg1)
    end
end
ga.ha_door.use = function(arg1) -- line 834
    START_CUT_SCENE()
    if not arg1:is_locked() then
        if not arg1:is_open() then
            arg1:open()
        end
        arg1:walkOut()
    else
        arg1:lockedOut()
    end
    END_CUT_SCENE()
end
ga.ha_door_trigger = { }
ga.ha_door_trigger.walkOut = function(arg1) -- line 852
    if ga.ha_door:is_locked() then
        return
    end
    if ga.ha_door.interest_actor:is_choring() then
        ga.ha_door.interest_actor:wait_for_chore()
    end
    ga.ha_door:open()
    while manny:find_sector_name("ha_door_trigger") do
        break_here()
    end
    if manny:find_sector_name("ga_elerv_floor") then
        if ga.ha_door.interest_actor:is_choring() then
            ga.ha_door.interest_actor:wait_for_chore()
        end
        ga.ha_door:close()
    end
end
ga.al_door = Object:create(ga, "/gatx121/big door", 18.025499, 5.5318699, 0.54000002, { range = 1.5 })
ga.al_door.use_pnt_x = 17.715
ga.al_door.use_pnt_y = 5.572
ga.al_door.use_pnt_z = 0
ga.al_door.use_rot_x = 0
ga.al_door.use_rot_y = 269.45999
ga.al_door.use_rot_z = 0
ga.al_door.out_pnt_x = 18.200001
ga.al_door.out_pnt_y = 5.5710001
ga.al_door.out_pnt_z = 0
ga.al_door.out_rot_x = 0
ga.al_door.out_rot_y = 269.45999
ga.al_door.out_rot_z = 0
ga.ga_al_box = ga.al_door
ga.al_door.passage = { "ga_al_pass1" }
ga.al_door.lookAt = function(arg1) -- line 898
    manny:say_line("/gama122/")
end
ga.al_door.locked_out = function(arg1) -- line 901
    al.ga_door:locked_out()
end
ga.al_door.walkOut = function(arg1) -- line 905
    al:come_out_door(al.ga_door)
end
ga_rollup_door_open = 0
ga_skid_marks_here = 0
ga_skid_marks_gone = 1
gatekeeper_mumble = 0
gatekeeper_stop_talk = 1
gatekeeper_c = 2
gatekeeper_m = 3
gatekeeper_f = 4
gatekeeper_a = 5
gatekeeper_o = 6
gatekeeper_e = 7
gatekeeper_u = 8
gatekeeper_l = 9
gatekeeper_gesture = 10
gatekeeper_give_note = 11
gatekeeper_nod_cycle = 12
gatekeeper_points = 13
gatekeeper_raise_hands = 14
gatekeeper_say_what_hold = 15
gatekeeper_say_what_in = 16
gatekeeper_say_what_out = 17
gatekeeper_shake_cycle = 18
gatekeeper_uncross_arms = 19
gatekeeper_cross_arms = 20
gatekeeper_cross_arms_hold = 21
gatekeeper_hide_note = 22
gatekeeper_back_to_rest = 23
gatekeeper_t = 24
CheckFirstTime("gh.lua")
gh = Set:create("gh.set", "Glottis hanging on the Lamancha", { gh_top = 0, gh_lamha = 1 })
dofile("gl_work_idles.lua")
gh.run_props = function() -- line 14
    start_sfx("gh_prop.wav")
    gh.prop:run_chore(0)
    wait_for_sound("gh_prop.wav")
    start_sfx("gh_prop.wav")
    gh.prop:run_chore(0)
    wait_for_sound("gh_prop.wav")
    if rnd() then
        start_sfx("gh_prop.wav")
        gh.prop:run_chore(0)
    end
    gh.prop:complete_chore(2)
end
gh.prop_watch = function() -- line 28
    while 1 do
        while not prop_trigger do
            break_here()
        end
        prop_trigger = FALSE
        if gh.reunited then
            if rnd() then
                gh.run_props()
            end
        end
    end
end
gh.tinker_sound_watcher = function() -- line 42
    local local1, local2, local3
    local3 = ""
    while 1 do
        local2 = pick_one_of({ "tinker1.wav", "tinker3.wav", "tinker4.wav", "tinker5.wav", "tinker6.wav", "tinker7.wav", "tinker8.wav", "tinker9.wav" })
        if glottis.last_chore == gl_work_idles_work2_loop or glottis.last_chore == gl_work_idles_work_cycle then
            if cutSceneLevel == 0 then
                start_sfx(local2)
                wait_for_sound(local2)
                sleep_for(rndint(500, 3000))
            end
        end
        break_here()
    end
end
gh.reunion = function() -- line 62
    gh.reunited = TRUE
    START_CUT_SCENE()
    manny:set_run(TRUE)
    set_override(gh.reunion_override)
    wait_for_message()
    manny:say_line("/ghma001/")
    gh.glot_look_manny()
    wait_for_message()
    manny:say_line("/ghma002/")
    wait_for_message()
    glottis:say_line("/ghgl003/")
    sleep_for(3500)
    glottis:play_chore(gl_work_idles_gesture, "gl_work_idles.cos")
    wait_for_message()
    manny:say_line("/ghma004/")
    wait_for_message()
    glottis:say_line("/ghgl005/")
    glottis:run_chore(gl_work_idles_look_back_work, "gl_work_idles.cos")
    glottis:run_chore(gl_work_idles_start_work, "gl_work_idles.cos")
    glottis:play_chore(gl_work_idles_see_spin, "gl_work_idles.cos")
    sleep_for(1000)
    gh.run_props()
    glottis:wait_for_chore(gl_work_idles_see_spin, "gl_work_idles.cos")
    glottis:say_line("/ghgl006/")
    glottis:run_chore(gl_work_idles_look_at_manny, "gl_work_idles.cos")
    gh.glot_return_work()
    wait_for_message()
    manny:say_line("/ghma007/")
    END_CUT_SCENE()
    manny:set_run(FALSE)
end
gh.reunion_override = function() -- line 97
    kill_override()
    manny:put_at_object(gh.glottis_obj)
    glottis:stop_chore()
    single_start_script(glottis.new_run_idle, glottis, "work_cycle", gh.work_table, "gl_work_idles.cos")
end
gh.glot_look_manny = function() -- line 104
    glottis.working = FALSE
    stop_script(glottis.new_run_idle)
    glottis:wait_for_chore(nil, "gl_work_idles.cos")
    if glottis.last_chore == gl_work_idles_work2_loop or glottis.last_chore == gl_work_idles_work_to_work2 then
        glottis:run_chore(gl_work_idles_work2_to_work, "gl_work_idles.cos")
    end
    if glottis.last_chore == gl_work_idles_working_up then
        glottis:run_chore(gl_work_idles_look_at_manny, "gl_work_idles.cos")
    else
        glottis:run_chore(gl_work_idles_work_to_manny, "gl_work_idles.cos")
    end
end
gh.glot_return_work = function() -- line 118
    glottis.working = TRUE
    glottis:run_chore(gl_work_idles_look_back_work, "gl_work_idles.cos")
    glottis:run_chore(gl_work_idles_start_work, "gl_work_idles.cos")
    single_start_script(glottis.new_run_idle, glottis, "work_cycle", gh.work_table, "gl_work_idles.cos")
end
gh.glot_tinker_sfx = function() -- line 125
    start_sfx(pick_one_of({ "tinker1.wav", "tinker3.wav", "tinker4.wav", "tinker5.wav", "tinker6.wav", "tinker7.wav", "tinker8.wav", "tinker9.wav" }))
end
gh.work_table = Idle:create("gl_work_idles")
idt = gh.work_table
idt:add_state("work_cycle", { work_cycle = 0.69999999, working_up = 0.1, work_to_work2 = 0.1, see_spin = 0.1 })
idt:add_state("see_spin", { start_work = 1 })
idt:add_state("start_work", { work_cycle = 1 })
idt:add_state("working_up", { pause = 1 })
idt:add_state("pause", { pause = 0.69999999, working_down = 0.30000001 })
idt:add_state("working_down", { work_cycle = 1 })
idt:add_state("work_to_work2", { work2_loop = 1 })
idt:add_state("work2_loop", { work2_loop = 0.80000001, work2_to_work = 0.2 })
idt:add_state("work2_to_work", { work_cycle = 1 })
gh.set_up_actors = function(arg1) -- line 147
    if dr.reunited then
        glottis:default("sailor")
        glottis:ignore_boxes()
        glottis:put_in_set(gh)
        glottis:push_costume("gl_work_idles.cos")
        glottis:setpos(1.70973, 0.24421, 0.927887)
        glottis:setrot(0, 151.875, 0)
        single_start_script(glottis.new_run_idle, glottis, "work_cycle", gh.work_table, "gl_work_idles.cos")
        glottis.working = TRUE
        gh.prop:complete_chore(2)
    end
end
gh.come_out_door = function(arg1, arg2) -- line 162
    START_CUT_SCENE()
    manny:default()
    gh:switch_to_set()
    box_off("ac_door")
    doorman_in_hot_box = TRUE
    manny:put_in_set(gh)
    box_off("ac_door")
    manny:put_at_object(gh.ac_door)
    manny:push_costume("mn2_ladder_jump.cos")
    manny:run_chore(0)
    box_off("ac_door")
    manny:pop_costume()
    manny:walkto(-2.94464, -4.61542, 2.62035)
    sleep_for(500)
    while manny:find_sector_name("ac_door") do
        break_here()
    end
    sleep_for(500)
    box_on("ac_door")
    END_CUT_SCENE()
end
gh.enter = function(arg1) -- line 192
    inventory_disabled = FALSE
    if not dr.reunited then
        gh.glottis_obj:make_untouchable()
    else
        gh.glottis_obj:make_touchable()
    end
    gh:current_setup(gh_lamha)
    gh.seen_lamancha = TRUE
    gh:set_up_actors()
    gh.prop.hObjectState = gh:add_object_state(gh_lamha, "gh_prop.bm", nil, OBJSTATE_UNDERLAY, FALSE)
    gh.prop:set_object_state("gh_prop.cos")
    start_script(gh.prop_watch)
    start_script(gh.tinker_sound_watcher)
    start_sfx("eiCreak.imu", IM_HIGH_PRIORITY, 64)
end
gh.exit = function(arg1) -- line 211
    stop_script(gh.prop_watch)
    stop_script(gh.tinker_sound_watcher)
    glottis:free()
    stop_sound("eiCreak.imu")
end
gh.prop = Object:create(gh, "", 0, 0, 0, { range = 0 })
gh.prop.touchable = FALSE
gh.edge_trigger = { }
gh.edge_trig1 = gh.edge_trigger
gh.edge_trig2 = gh.edge_trigger
gh.edge_trigger.walkOut = function(arg1) -- line 233
    manny:say_line("/ghma008/")
end
gh.glottis_obj = Object:create(gh, "/ghtx009/Glottis", 1.37207, 0.030761199, 1.66072, { range = 0.75 })
gh.glottis_obj.use_pnt_x = 0.73766702
gh.glottis_obj.use_pnt_y = -0.24983899
gh.glottis_obj.use_pnt_z = 1.45872
gh.glottis_obj.use_rot_x = 0
gh.glottis_obj.use_rot_y = -67.615097
gh.glottis_obj.use_rot_z = 0
gh.glottis_obj.lookAt = function(arg1) -- line 247
    if gh.reunited then
        manny:say_line("/ghma010/")
    else
        start_script(gh.reunion)
    end
end
gh.glottis_obj.use = function(arg1) -- line 255
    if gh.reunited then
        START_CUT_SCENE()
        manny:say_line("/ghma011/")
        gh.glot_look_manny()
        wait_for_message()
        glottis:play_chore(gl_work_idles_look_back_work, "gl_work_idles.cos")
        glottis:say_line("/ghgl012/")
        wait_for_message()
        glottis:play_chore(gl_work_idles_look_at_manny, "gl_work_idles.cos")
        glottis:say_line("/ghgl013/")
        gh.glot_return_work()
        END_CUT_SCENE()
    else
        start_script(gh.reunion)
    end
end
gh.glottis_obj.use_scythe = function(arg1) -- line 273
    if gh.reunited then
        START_CUT_SCENE()
        manny:say_line("/ghma014/")
        wait_for_message()
        glottis:say_line("/ghgl015/")
        END_CUT_SCENE()
    else
        start_script(gh.reunion)
    end
end
gh.glottis_obj.use_hammer = function(arg1) -- line 285
    if gh.reunited then
        START_CUT_SCENE()
        manny:say_line("/ghma016/")
        wait_for_message()
        glottis:say_line("/ghgl017/")
        wait_for_message()
        glottis:say_line("/ghgl018/")
        END_CUT_SCENE()
    else
        start_script(gh.reunion)
    end
end
gh.glottis_obj.use_gun = function(arg1) -- line 299
    if gh.reunited then
        START_CUT_SCENE()
        manny:say_line("/ghma019/")
        wait_for_message()
        manny:say_line("/ghma020/")
        gh.glot_look_manny()
        wait_for_message()
        glottis:say_line("/ghgl021/")
        wait_for_message()
        manny:say_line("/ghma022/")
        wait_for_message()
        glottis:say_line("/ghgl023/")
        gh.glot_return_work()
        END_CUT_SCENE()
    else
        start_script(gh.reunion)
    end
end
gh.glottis_obj.use_chisel = function(arg1) -- line 319
    if gh.reunited then
        START_CUT_SCENE()
        manny:say_line("/ghma024/")
        gh.glot_look_manny()
        wait_for_message()
        glottis:say_line("/ghgl025/")
        wait_for_message()
        glottis:say_line("/ghgl026/")
        gh.glot_return_work()
        END_CUT_SCENE()
    else
        start_script(gh.reunion)
    end
end
gh.ac_door = Object:create(gh, "/ghtx027/chain", -3.1500001, -5.5324001, 3.4844999, { range = 2 })
gh.ac_door.use_pnt_x = -3.1500001
gh.ac_door.use_pnt_y = -5.0999899
gh.ac_door.use_pnt_z = 2.6099999
gh.ac_door.use_rot_x = 0
gh.ac_door.use_rot_y = -177.633
gh.ac_door.use_rot_z = 0
gh.ac_door.out_pnt_x = -3.1500001
gh.ac_door.out_pnt_y = -5.0999899
gh.ac_door.out_pnt_z = 2.6099999
gh.ac_door.out_rot_x = 0
gh.ac_door.out_rot_y = -177.633
gh.ac_door.out_rot_z = 0
gh.ac_door.walkOut = function(arg1) -- line 356
    if dr.reunited and not gh.reunited then
        START_CUT_SCENE()
        glottis:say_line("/ghgl028/")
        start_script(manny.walkto, manny, gh.glottis_obj)
        break_here()
        manny:set_run(TRUE)
        END_CUT_SCENE()
        start_script(gh.reunion)
    else
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        manny:wait_for_actor()
        manny:clear_hands()
        manny:push_costume("mn2_ladder_jump.cos")
        manny:run_chore(1)
        manny:pop_costume()
        system:lock_display()
        ac:switch_to_set()
        manny:put_in_set(ac)
        manny:follow_boxes()
        break_here()
        manny:ignore_boxes()
        manny:push_costume("mn_conveyor.cos")
        manny:setpos(8.38527, -1.78484, 0.3333)
        manny:setrot(0, 95.7788, 0)
        system:unlock_display()
        manny:stop_chore(mn_conveyor_loop_current, "mn_conveyor.cos")
        manny:play_chore_looping(mn_conveyor_drift, "mn_conveyor.cos")
        ac.prev_button_handler = system.buttonHandler
        system.buttonHandler = drift_button_handler
        ac.drifting = TRUE
        END_CUT_SCENE()
    end
end
gh.ac_door.lookAt = function(arg1) -- line 395
    manny:say_line("/ghma029/")
end
gh.ac_door.use = gh.ac_door.walkOut
gh_prop_sputter = 0
gh_prop_go_away = 1
gh_prop_rest = 2
gl_akimbo_idles_default_akimbo = 0
gl_akimbo_idles_hand_on_chest = 1
gl_akimbo_idles_hand_chest_hold = 2
gl_akimbo_idles_hand_chest_akimbo = 3
gl_akimbo_idles_head_flick = 4
gl_akimbo_idles_shrug = 5
gl_akimbo_idles_pick_wedgie = 6
gl_akimbo_idles_shake_head = 7
gl_akimbo_idles_nod = 8
gl_akimbo_idles_lean_in_talk = 9
gl_akimbo_idles_one_hand_other = 10
gl_akimbo_idles_arms_headdown = 11
gl_akimbo_idles_arms_headdown_hold = 12
gl_akimbo_idles_arms_headdown_akimbo = 13
gl_akimbo_idles_give_workorder = 14
gl_akimbo_idles_give_workorder_hold = 15
gl_akimbo_idles_workorder_to_akimbo = 16
gl_akimbo_idles_deactivate_workorder = 17
gl_akimbo_idles_on_right_hand = 18
gl_akimbo_idles_on_left_hand = 19
gl_akimbo_idles_hands_to_akimbo = 20
gl_akimbo_idles_default_keys = 21
gl_boarding_bw_hold_in_bw = 0
gl_boarding_bw_hop_in_bw = 1
gl_boarding_bw_mumble = 2
gl_boarding_bw_c = 3
gl_boarding_bw_f = 4
gl_boarding_bw_e = 5
gl_boarding_bw_u = 6
gl_boarding_bw_t = 7
gl_boarding_bw_m = 8
gl_boarding_bw_a = 9
gl_boarding_bw_o = 10
gl_boarding_bw_stop_talk = 11
gl_cask_to_cask = 0
gl_cask_drink_cask = 1
gl_cask_to_closet = 2
gl_cask_to_out_raoul = 3
gl_cask_out_raoul = 4
gl_cask_hide_glottis = 5
gl_cask_hide_scythe = 6
gl_climb_dock_climb_dock = 0
gl_drive_up_drive_up = 0
gl_drive_up_drive_out = 1
gl_fastwalk_fastwalk = 0
gl_fastwalk_show_weight = 1
gl_fastwalk_hide_weight = 2
gl_fastwalk_swivel_left = 3
gl_fastwalk_swivel_right = 4
gl_gamble_rest_gambling = 0
gl_gamble_drink_wine = 1
gl_gamble_rest_gambling2 = 2
gl_gamble_drunk_rambles = 3
gl_gamble_rest_gambling3 = 4
gl_gamble_lk_left = 5
gl_gamble_left_hold = 6
gl_gamble_left_back_rest_gambling = 7
gl_gamble_rest_gambling4 = 8
gl_gamble_turn_speak = 9
gl_gamble_speak_pos = 10
gl_gamble_talks_drunk = 11
gl_gamble_speak_pos2 = 12
gl_gamble_speak_to_rest_gambling = 13
gl_gamble_rest_gambling5 = 14
gl_gamble_gamble_rest = 15
gl_gamble_drunk_talk = 16
gl_gamble_drunktalk_cycle = 17
gl_gamble_dtc1_to_dtc2 = 18
gl_gamble_drunktalk_cycle2 = 19
gl_gamble_gest_rest = 20
gl_grab_ct_gl_lift_ct = 0
gl_grab_ct_hold_ct = 1
gl_grab_ct_walk = 2
gl_grab_ct_drop_ct = 3
gl_HITMAN_hitman = 0
gl_hrpass_to_get_hrpass = 0
gl_hrpass_take_hrpass = 1
gl_jump_sub_jump_sub = 0
glottis_cry_sit_hold = 0
glottis_cry_tantrum_in = 1
glottis_cry_tantrum_cyc = 2
glottis_cry_tantrum_out = 3
glottis_cry_shrug = 4
glottis_cry_cry_out = 5
glottis_cry_cry_cyc = 6
glottis_cry_cry_in = 7
glottis_cry_head_swing_out = 8
glottis_cry_head_swing_in = 9
glottis_cry_head_swing_cyc = 10
glottis_cry_fist_shake_in = 11
glottis_cry_fist_shake_cyc = 12
glottis_cry_fist_shake_out = 13
glottis_cry_arm_lift = 14
glottis_idles_scratches_nose = 0
glottis_idles_polishes_hand_on_chest = 1
glottis_idles_hold = 2
glottis_trans_rock = 0
glottis_ear_wax = 1
glottis_trans_home = 2
glottis_smart_ass = 3
glottis_rock_loop = 4
glottis_look_down = 5
glottis_home_pose = 6
glottis_flip_ears = 7
glottis_mumble = 8
glottis_c = 9
glottis_f = 10
glottis_e = 11
glottis_u = 12
glottis_t = 13
glottis_m = 14
glottis_a = 15
glottis_o = 16
glottis_stop_talk = 17
glottis_eye_buldge = 18
glottis_right_smirk = 19
glottis_left_smirk = 20
glottis_blink = 21
glottis_squint = 22
glottis_l = 23
glottis_default_keys = 24
glottis_open_eyes = 25
glottis_peek_peek_in = 0
glottis_peek_peek_hold = 1
glottis_peek_peek_done = 2
glottis_peek_mumble = 3
glottis_peek_c = 4
glottis_peek_f = 5
glottis_peek_e = 6
glottis_peek_u = 7
glottis_peek_t = 8
glottis_peek_m = 9
glottis_peek_a = 10
glottis_peek_o = 11
glottis_peek_l = 12
glottis_piano_piano_loop = 0
glottis_piano_turn_head = 1
glottis_piano_talk = 2
glottis_piano_turn_head_back = 3
glottis_piano_turnhead = 4
glottis_piano_piano_loop = 5
glottis_piano_112 = 6
glottis_piano_099b = 7
glottis_piano_099a = 8
glottis_piano_098 = 9
glottis_piano_091 = 10
glottis_piano_stop_playing = 11
glottis_piano_start_playing = 12
glottis_piano_pause_playing = 13
glottis_piano_resume_playing = 14
glottis_rip_left_left = 0
glottis_rip_right_right = 0
glottis_sailor_trans_rock = 0
glottis_sailor_ear_wax = 1
glottis_sailor_trans_home = 2
glottis_sailor_smart_ass = 3
glottis_sailor_rock_loop = 4
glottis_sailor_look_down = 5
glottis_sailor_home_pose = 6
glottis_sailor_flip_ears = 7
glottis_sailor_mumble = 8
glottis_sailor_c = 9
glottis_sailor_f = 10
glottis_sailor_e = 11
glottis_sailor_u = 12
glottis_sailor_t = 13
glottis_sailor_m = 14
glottis_sailor_a = 15
glottis_sailor_o = 16
glottis_sailor_stop_talk = 17
glottis_sailor_l = 18
glottis_sailor_eyes_bulging = 19
glottis_sailor_normal_eyes = 20
CheckFirstTime("glottis_scripts.lua")
dofile("glottis.lua")
dofile("gl_akimbo_idles.lua")
dofile("glottis_sailor.lua")
glottis = Actor:create(nil, nil, nil, "Glottis")
glottis:set_talk_color(Orange)
glottis:set_look_rate(200)
glottis.start_rocking = function(arg1) -- line 17
    glottis:complete_chore(gl_akimbo_idles_default_keys, "gl_akimbo_idles.cos")
    glottis:run_chore(glottis_trans_rock, "glottis.cos")
    glottis:head_look_at(nil, 60)
    glottis:play_chore_looping(glottis_rock_loop, "glottis.cos")
end
glottis.stop_rocking = function(arg1, arg2) -- line 24
    glottis:complete_chore(gl_akimbo_idles_default_keys, "gl_akimbo_idles.cos")
    glottis:stop_looping_chore(glottis_rock_loop, "glottis.cos")
    glottis:play_chore(glottis_trans_home, "glottis.cos")
    glottis:head_look_at_manny(50)
    if arg2 then
        glottis:wait_for_chore(glottis_trans_home, "glottis.cos")
    end
end
glottis.pick_wax = function(arg1) -- line 34
    glottis:head_look_at(nil)
    glottis:complete_chore(gl_akimbo_idles_default_keys, "gl_akimbo_idles.cos")
    glottis:run_chore(glottis_ear_wax, "glottis.cos")
    glottis:head_look_at_manny()
end
glottis.smart_ass = function(arg1, arg2) -- line 41
    glottis:head_look_at(nil)
    glottis:complete_chore(gl_akimbo_idles_default_keys, "gl_akimbo_idles.cos")
    glottis:play_chore(glottis_smart_ass, "glottis.cos")
    sleep_for(2000)
    glottis:head_look_at_manny(60)
    if arg2 then
        glottis:wait_for_chore(glottis_smart_ass, "glottis.cos")
    end
end
glottis.look_down = function(arg1, arg2) -- line 52
    glottis:head_look_at(nil, 80)
    glottis:complete_chore(gl_akimbo_idles_default_keys, "gl_akimbo_idles.cos")
    glottis:play_chore(glottis_look_down, "glottis.cos")
    sleep_for(1200)
    glottis:head_look_at(manny, 80)
    if arg2 then
        glottis:wait_for_chore(glottis_look_down, "glottis.cos")
    end
end
glottis.home_pose = function(arg1) -- line 63
    glottis:complete_chore(gl_akimbo_idles_default_keys, "gl_akimbo_idles.cos")
    glottis:stop_chore(nil, "glottis.cos")
    glottis:play_chore(glottis_home_pose, "glottis.cos")
end
glottis.flip_ears = function(arg1, arg2, arg3) -- line 69
    start_script(glottis.ear_flipper, glottis, arg2)
    if arg3 then
        wait_for_script(glottis.ear_flipper)
    end
end
glottis.ear_flipper = function(arg1, arg2) -- line 76
    local local1 = 0
    glottis:complete_chore(gl_akimbo_idles_default_keys, "gl_akimbo_idles.cos")
    if not arg2 then
        arg2 = 1
    end
    repeat
        glottis:run_chore(glottis_flip_ears, "glottis.cos")
        local1 = local1 + 1
    until local1 >= arg2
end
glottis.akimbo = function(arg1) -- line 88
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_default_akimbo, "gl_akimbo_idles.cos")
end
glottis.hand_on_chest = function(arg1, arg2) -- line 93
    glottis:head_look_at(nil)
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_hand_on_chest, "gl_akimbo_idles.cos")
    if arg2 then
        glottis:wait_for_chore(gl_akimbo_idles_hand_on_chest, "gl_akimbo_idles.cos")
    end
end
glottis.hand_off_chest = function(arg1, arg2) -- line 102
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_hand_chest_akimbo, "gl_akimbo_idles.cos")
    glottis:head_look_at_manny(50)
    if arg2 then
        glottis:wait_for_chore(gl_akimbo_idles_hand_chest_akimbo, "gl_akimbo_idles.cos")
    end
end
glottis.head_flick = function(arg1, arg2) -- line 111
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_head_flick, "gl_akimbo_idles.cos")
    if arg2 then
        glottis:wait_chore(gl_akimbo_idles_head_flick, "gl_akimbo_idles.cos")
    end
end
glottis.shrug = function(arg1, arg2) -- line 119
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_shrug, "gl_akimbo_idles.cos")
    if arg2 then
        glottis:wait_for_chore(gl_akimbo_idles_shrug, "gl_akimbo_idles.cos")
    end
end
glottis.pick_wedgie = function(arg1, arg2) -- line 127
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_pick_wedgie, "gl_akimbo_idles.cos")
    if arg2 then
        glottis:wait_for_chore(gl_akimbo_idles_pick_wedgie, "gl_akimbo_idles.cos")
    end
end
glottis.shake_head = function(arg1, arg2) -- line 135
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_shake_head, "gl_akimbo_idles.cos")
    if arg2 then
        glottis:wait_for_chore(gl_akimbo_idles_shake_head, "gl_akimbo_idles.cos")
    end
end
glottis.nod = function(arg1, arg2) -- line 143
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_nod, "gl_akimbo_idles.cos")
end
glottis.lean_in_talk = function(arg1, arg2) -- line 148
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_lean_in_talk, "gl_akimbo_idles.cos")
    if arg2 then
        glottis:wait_for_chore(gl_akimbo_idles_lean_in_talk, "gl_akimbo_idles.cos")
    end
end
glottis.arms_head_down = function(arg1, arg2) -- line 156
    glottis:head_look_at(nil, 90)
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_arms_headdown, "gl_akimbo_idles.cos")
end
glottis.arms_head_up = function(arg1, arg2) -- line 162
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_arms_headdown_akimbo, "gl_akimbo_idles.cos")
    glottis:head_look_at_manny(40)
end
glottis.on_right_hand = function(arg1, arg2) -- line 168
    glottis:head_look_at(nil)
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_on_right_hand, "gl_akimbo_idles.cos")
    if arg2 then
        glottis:wait_for_chore(gl_akimbo_idles_on_right_hand, "gl_akimbo_idles.cos")
    end
end
glottis.on_left_hand = function(arg1, arg2) -- line 176
    glottis:head_look_at(nil)
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_on_left_hand, "gl_akimbo_idles.cos")
    if arg2 then
        glottis:wait_for_chore(gl_akimbo_idles_on_left_hand, "gl_akimbo_idles.cos")
    end
end
glottis.hands_down = function(arg1, arg2) -- line 184
    glottis:complete_chore(glottis_default_keys, "glottis.cos")
    glottis:play_chore(gl_akimbo_idles_hands_to_akimbo, "gl_akimbo_idles.cos")
    sleep_for(500)
    glottis:head_look_at_manny(50)
    if arg2 then
        glottis:wait_for_chore(gl_akimbo_idles_hands_to_akimbo, "gl_akimbo_idles.cos")
    end
end
glottis.default = function(arg1, arg2) -- line 195
    glottis:stop_chore()
    glottis:free()
    if arg2 == "sailor" then
        glottis:set_costume("glottis_sailor.cos")
        glottis:set_mumble_chore(glottis_sailor_mumble)
        glottis:set_talk_chore(1, glottis_sailor_stop_talk)
        glottis:set_talk_chore(2, glottis_sailor_a)
        glottis:set_talk_chore(3, glottis_sailor_c)
        glottis:set_talk_chore(4, glottis_sailor_e)
        glottis:set_talk_chore(5, glottis_sailor_f)
        glottis:set_talk_chore(6, glottis_sailor_l)
        glottis:set_talk_chore(7, glottis_sailor_m)
        glottis:set_talk_chore(8, glottis_sailor_o)
        glottis:set_talk_chore(9, glottis_sailor_t)
        glottis:set_talk_chore(10, glottis_sailor_u)
    else
        glottis:set_costume("glottis.cos")
        glottis:set_mumble_chore(glottis_mumble)
        glottis:set_talk_chore(1, glottis_stop_talk)
        glottis:set_talk_chore(2, glottis_a)
        glottis:set_talk_chore(3, glottis_c)
        glottis:set_talk_chore(4, glottis_e)
        glottis:set_talk_chore(5, glottis_f)
        glottis:set_talk_chore(6, glottis_l)
        glottis:set_talk_chore(7, glottis_m)
        glottis:set_talk_chore(8, glottis_o)
        glottis:set_talk_chore(9, glottis_t)
        glottis:set_talk_chore(10, glottis_u)
    end
    glottis:set_colormap("glottis.cmp")
    glottis:set_talk_color(Orange)
    glottis:set_visibility(TRUE)
    glottis:set_head(3, 4, 4, 165, 35, 80)
end
glottis.idle_to_home = function(arg1) -- line 234
    while glottis.last_chore ~= glottis_home_pose do
        break_here()
    end
    stop_script(glottis.new_run_idle)
    glottis:stop_chore()
    glottis:play_chore(glottis_home_pose, "glottis.cos")
end
glottis.idle_table = Idle:create("glottis")
idt = glottis.idle_table
idt:add_state("trans_rock", { rock_loop = 1 })
idt:add_state("ear_wax", { trans_rock = 0.1, smart_ass = 0, look_down = 0.050000001, home_pose = 0.40000001, flip_ears = 0.44999999 })
idt:add_state("trans_home", { home_pose = 1 })
idt:add_state("smart_ass", { home_pose = 1 })
idt:add_state("rock_loop", { rock_loop = 0.69999999, trans_home = 0.30000001 })
idt:add_state("look_down", { look_down = 0, trans_rock = 0.1, home_pose = 0.5, flip_ears = 0.40000001 })
idt:add_state("home_pose", { home_pose = 0.60000002, trans_rock = 0.1, smart_ass = 0, look_down = 0.050000001, flip_ears = 0.2, ear_wax = 0.050000001 })
idt:add_state("flip_ears", { flip_ears = 0.69999999, home_pose = 0.30000001 })
glottis.start_gesture_chore = function(arg1, arg2, arg3) -- line 284
    if not arg3 then
        wait_for_script(arg1.play_gesture_chore)
    end
    start_script(arg1.play_gesture_chore, arg1, arg2)
end
glottis.play_gesture_chore = function(arg1, arg2) -- line 291
    arg1:push_costume("gl_akimbo_idles.cos")
    arg1:play_chore(arg2, "gl_akimbo_idles.cos")
    arg1:wait_for_chore()
    arg1:pop_costume()
end
glottis_throws_throws = 0
glottis_throws_sleep = 1
glottis_tux_trans_rock = 0
glottis_tux_ear_wax = 1
glottis_tux_trans_home = 2
glottis_tux_smart_ass = 3
glottis_tux_rock_loop = 4
glottis_tux_look_down = 5
glottis_tux_home_pose = 6
glottis_tux_flip_ears = 7
glottis_tux_mumble = 8
glottis_tux_c = 9
glottis_tux_f = 10
glottis_tux_e = 11
glottis_tux_u = 12
glottis_tux_t = 13
glottis_tux_m = 14
glottis_tux_a = 15
glottis_tux_o = 16
glottis_tux_stop_talk = 17
glottis_tux_eye_buldge = 18
glottis_tux_right_smirk = 19
glottis_tux_left_smirk = 20
glottis_tux_blink = 21
glottis_tux_squint = 22
glottis_tux_l = 23
glottis_tux_normal_eyes = 24
glottis_tux_mumble_slow = 25
gl_pass_out_passed_out = 0
gl_pass_out_talk_out = 1
gl_puke_puke = 0
gl_puke_on_knees = 1
gl_rescue_mn_rescue = 0
gl_saved_saved = 0
gl_shake_shake = 0
gl_shooter_get_bottle = 0
gl_shooter_hold_bottle = 1
gl_shooter_lookat_manny = 2
gl_shooter_drink = 3
gl_shooter_give_back = 4
gl_shooter_wait = 5
gl_shooter_grab = 6
gl_shooter_shake = 7
gl_shooter_lookup = 8
gl_shooter_prep_run = 9
gl_shooter_run_out = 10
gl_tree_climb = 0
gl_tree_jumpdown = 1
gl_tree_grabwt = 2
gl_tree_fasten_wt_in = 3
gl_tree_falls = 4
gl_tree_falls_fr_spin = 5
gl_tree_fastens_cycle = 6
gl_tree_fastens_out = 7
gl_tree_wheels = 8
gl_work_idles_start_work = 0
gl_work_idles_work_cycle = 1
gl_work_idles_gesture = 2
gl_work_idles_look_back_work = 3
gl_work_idles_look_at_manny = 4
gl_work_idles_back_to_work = 5
gl_work_idles_look_at_manny_hold = 6
gl_work_idles_see_spin = 7
gl_work_idles_see_hold = 8
gl_work_idles_work_to_manny = 9
gl_work_idles_work_to_work2 = 10
gl_work_idles_work2_loop = 11
gl_work_idles_work2_to_work = 12
gl_work_idles_working_up = 13
gl_work_idles_working_down = 14
gl_work_idles_pause = 15
gold_Chore0 = 0
gs_bondo_bondo = 0
gs_bondo_gone = 1
gs_copal_body_slam_door = 0
gs_copal_body_hold_door = 1
gs_copal_body_door_be_gone = 2
gs_door_open_open = 0
gs_ga_door_open = 0
gs_ga_door_close = 1
gs_ga_door_set_open = 2
gs_ga_door_set_closed = 3
gs_ga_door_copal_here = 4
gs_ga_door_copal_close = 5
CheckFirstTime("gs.lua")
gs = Set:create("gs.set", "Glottis' Shop", { gs_ofcha = 0, gs_ovrhd = 1 })
dofile("sv_helps.lua")
dofile("gs_ga_door.lua")
dofile("copal_yell.lua")
dofile("ma_fill_bondo.lua")
gs.update_states = function(arg1) -- line 17
    if gs.is_jail then
        gs.ga_door:close()
        gs.ga_door:lock()
        gs.ga_door:play_chore(gs_ga_door_set_closed, "gs_ga_door.cos")
        MakeSectorActive("door_box1", FALSE)
        MakeSectorActive("door_box2", FALSE)
        gs.window:make_touchable()
    else
        gs.ga_door:unlock()
        gs.ga_door:open()
        gs.ga_door:make_untouchable()
        gs.open_out_door:play_chore(0)
        MakeSectorActive("door_box1", TRUE)
        MakeSectorActive("door_box2", TRUE)
        gs.window:make_untouchable()
    end
end
gs.set_up_prison = function(arg1) -- line 36
    local local1
    START_CUT_SCENE()
    gs.is_jail = TRUE
    manny:put_in_set(nil)
    gs:switch_to_set()
    local1 = NewObjectState(gs_ofcha, OBJSTATE_STATE, "gs_copal.bm", "gs_copal.zbm")
    SendObjectToFront(local1)
    gs:update_states()
    copal:set_costume("copal_yell.cos")
    copal:put_in_set(gs)
    copal:set_visibility(TRUE)
    copal:setpos(0.7899, 9.9869003, 0)
    copal:setrot(0, 28.74, 0)
    copal:play_chore(copal_yell_talk_hold)
    copal:set_mumble_chore(copal_yell_mumble)
    copal:set_talk_chore(1, copal_yell_no_talk)
    copal:set_talk_chore(2, copal_yell_a)
    copal:set_talk_chore(3, copal_yell_c)
    copal:set_talk_chore(4, copal_yell_e)
    copal:set_talk_chore(5, copal_yell_f)
    copal:set_talk_chore(6, copal_yell_l)
    copal:set_talk_chore(7, copal_yell_m)
    copal:set_talk_chore(8, copal_yell_o)
    copal:set_talk_chore(9, copal_yell_t)
    copal:set_talk_chore(10, copal_yell_u)
    manny:put_in_set(gs)
    manny:setpos(0.55629998, 10.4237, 0)
    manny:setrot(0, 205.494, 0)
    manny:head_look_at(nil)
    break_here()
    copal:say_line("/gsco078/")
    copal:wait_for_message()
    copal:say_line("/gsco079/")
    copal:wait_for_message()
    copal:play_chore(copal_yell_close_door, "copal_yell.cos")
    copal:wait_for_chore()
    copal:put_in_set(nil)
    copal:free()
    gs.ga_door:play_chore(gs_ga_door_set_closed)
    FreeObjectState(local1)
    ForceRefresh()
    salvador:put_in_set(gs)
    salvador:set_costume("sv_helps.cos")
    salvador:set_colormap("black.cmp")
    salvador:set_visibility(TRUE)
    salvador:set_mumble_chore(sv_helps_mumble, "sv_helps.cos")
    salvador:set_talk_chore(1, sv_helps_stop_talk)
    salvador:set_talk_chore(2, sv_helps_a)
    salvador:set_talk_chore(3, sv_helps_c)
    salvador:set_talk_chore(4, sv_helps_e)
    salvador:set_talk_chore(5, sv_helps_f)
    salvador:set_talk_chore(6, sv_helps_l)
    salvador:set_talk_chore(7, sv_helps_m)
    salvador:set_talk_chore(8, sv_helps_o)
    salvador:set_talk_chore(9, sv_helps_t)
    salvador:set_talk_chore(10, sv_helps_u)
    salvador:ignore_boxes()
    salvador:setpos(0.81453401, 9.5706797, 0)
    salvador:setrot(0, 6.2112999, 0)
    salvador:play_chore(sv_helps_hidden, "sv_helps.cos")
    gs.ga_door:make_touchable()
    gs.window:make_touchable()
    END_CUT_SCENE()
end
gs.update_music_state = function(arg1) -- line 119
    if gs.is_jail then
        return stateGS_JAIL
    else
        return stateGS
    end
end
gs.enter = function(arg1) -- line 128
    local local1
    NewObjectState(gs_ofcha, OBJSTATE_STATE, "gs_bondo.bm", "gs_bondo.zbm", TRUE)
    gs.bondo_machine:set_object_state("gs_bondo.cos")
    gs.bondo_machine:play_chore(1)
    NewObjectState(gs_ofcha, OBJSTATE_STATE, "gs_sal_door.bm", "gs_sal_door.zbm", TRUE)
    gs.ga_door:set_object_state("gs_ga_door.cos")
    gs.open_out_door.hObjectState = gs:add_object_state(gs_ofcha, "gs_door_open.bm", "gs_door_open.zbm", OBJSTATE_STATE, FALSE)
    gs.open_out_door:set_object_state("gs_door_open.cos")
    gs:update_states()
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 60)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
end
gs.exit = function(arg1) -- line 152
    KillActorShadows(manny.hActor)
    salvador:free()
end
gs.open_out_door = Object:create(gs, "", 0, 0, 0, { range = 0 })
gs.open_out_door:make_untouchable()
gs.bondo_machine = Object:create(gs, "/gstx081/dispenser", 0.354534, 10.4907, 0.47999999, { range = 0.69999999 })
gs.bondo_machine.use_pnt_x = 0.53600001
gs.bondo_machine.use_pnt_y = 10.48
gs.bondo_machine.use_pnt_z = 0
gs.bondo_machine.use_rot_x = 0
gs.bondo_machine.use_rot_y = -269.73001
gs.bondo_machine.use_rot_z = 0
gs.bondo_machine.lookAt = function(arg1) -- line 173
    manny:say_line("/gsma082/")
end
gs.bondo_machine.pickUp = function(arg1) -- line 177
    manny:say_line("/gsma083/")
end
gs.bondo_machine.use = function(arg1) -- line 181
    START_CUT_SCENE()
    manny:walkto(0.55047, 10.4217, 0, 0, 90, 0)
    manny:wait_for_actor()
    manny:play_chore(ms_hand_on_obj, "ms.cos")
    manny:wait_for_chore()
    arg1:play_chore(0)
    arg1:wait_for_chore()
    manny:say_line("/slma058/")
    manny:wait_for_message()
    manny:play_chore(ms_hand_off_obj, "ms.cos")
    SetActorTimeScale(manny.hActor, 3.5)
    arg1:play_chore(1)
    start_sfx("dropdent.wav")
    manny:wait_for_chore()
    SetActorTimeScale(manny.hActor, 1)
    manny:say_line("/gsma084/")
    END_CUT_SCENE()
end
gs.bondo_machine.use_mouthpiece = function(arg1) -- line 202
    if dom.mouthpiece.bonded then
        manny:say_line("/gsma085/")
    else
        dom.mouthpiece.bonded = TRUE
        START_CUT_SCENE()
        manny:walkto(0.55047, 10.4867, 0, 0, 90, 0)
        manny:wait_for_actor()
        manny:push_costume("ma_fill_bondo.cos")
        manny:stop_chore(manny.hold_chore, "ms.cos")
        manny:stop_chore(ms_hold, "ms.cos")
        manny:play_chore(ma_fill_bondo_fill_mp)
        sleep_for(804)
        arg1:play_chore(0)
        arg1:wait_for_chore()
        arg1:play_chore(1)
        manny:wait_for_chore()
        manny:play_chore(ma_fill_bondo_fill_mp_done)
        manny:wait_for_chore()
        FadeOutChore(manny.hActor, "ma_fill_bondo.cos", ma_fill_bondo_fill_mp_done, 700)
        manny:pop_costume()
        manny:play_chore_looping(manny.hold_chore, "ms.cos")
        manny:play_chore_looping(ms_hold, "ms.cos")
        manny:say_line("/gsma086/")
        END_CUT_SCENE()
    end
end
gs.window = Object:create(gs, "/gstx087/window", 0.42199999, 9.7799997, 0.53399998, { range = 0.69999999 })
gs.window.use_pnt_x = 0.44100001
gs.window.use_pnt_y = 10.1
gs.window.use_pnt_z = 0
gs.window.use_rot_x = 0
gs.window.use_rot_y = -196.944
gs.window.use_rot_z = 0
gs.window.lookAt = function(arg1) -- line 239
    manny:say_line("/gsma088/")
end
gs.window.use = function(arg1) -- line 243
    manny:say_line("/gsma089/")
end
gs.window.use_scythe = function(arg1) -- line 247
    manny:say_line("/gsma090/")
end
gs.ga_door = Object:create(gs, "/gstx092/door", 0.85453397, 9.8106804, 0.46000001, { range = 1.05 })
gs.gs_ga_box = gs.ga_door
gs.ga_door.use_pnt_x = 0.83553201
gs.ga_door.use_pnt_y = 10.0325
gs.ga_door.use_pnt_z = 0
gs.ga_door.use_rot_x = 0
gs.ga_door.use_rot_y = 186.80701
gs.ga_door.use_rot_z = 0
gs.ga_door.out_pnt_x = 0.85000002
gs.ga_door.out_pnt_y = 9.6750002
gs.ga_door.out_pnt_z = 0
gs.ga_door.out_rot_x = 0
gs.ga_door.out_rot_y = 177.036
gs.ga_door.out_rot_z = 0
gs.ga_door.locked_out = function(arg1) -- line 302
    START_CUT_SCENE()
    manny:walkto_object(gs.ga_door)
    manny:knock_on_door_anim()
    END_CUT_SCENE()
    Dialog:run("sa1", "dlg_salvador.lua")
end
gs.ga_door.walkOut = function(arg1) -- line 310
    if not arg1:is_locked() then
        ga:come_out_door(ga.gs_door)
    end
end
gs.ga_door.comeOut = function(arg1) -- line 316
    Object.come_out_door(arg1)
    if hq.been_there and not glottis.missed then
        glottis.missed = TRUE
        manny:say_line("/gsma080/")
    end
end
gs_sea_scare_sea_scare = 0
CheckFirstTime("gt.lua")
gt = Set:create("gt.set", "lol gate", { gt_estws = 0, gt_estws1 = 0, gt_extst = 1, gt_overhead = 2 })
gt.enter = function(arg1) -- line 18
    single_start_sfx("blimp.imu")
    if system.lastSet == bb then
        set_vol("blimp.imu", bb.blimp_vol_close)
    else
        set_vol("blimp.imu", bb.blimp_vol_med)
    end
    set_pan("blimp.imu", 1)
    single_start_script(blimp_sound_killer)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -0.84, -0.08, 21)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, -0.4, 6.32, 24)
    SetActorShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
end
gt.exit = function(arg1) -- line 44
    KillActorShadows(manny.hActor)
end
gt.camerachange = function(arg1, arg2, arg3) -- line 48
    if arg3 == gt_estws then
        set_vol("blimp.imu", bb.blimp_vol_close)
        set_pan("blimp.imu", 1)
    else
        set_vol("blimp.imu", bb.blimp_vol_med)
        set_pan("blimp.imu", 1)
    end
end
gt.exit_pt = Object:create(gt, "/gttx001/exit", -0.795771, 6.0345802, 19.51, { range = 0 })
gt.exit_pt.use_pnt_x = -0.795771
gt.exit_pt.use_pnt_y = 6.0345802
gt.exit_pt.use_pnt_z = 19.51
gt.exit_pt.use_rot_x = 0
gt.exit_pt.use_rot_y = -451.47699
gt.exit_pt.use_rot_z = 0
gt.exit_pt.touchable = FALSE
gt.bb_door = Object:create(gt, "/gttx002/door", -0.31331101, -1.66922, 19.7229, { range = 0 })
gt.bb_door.use_pnt_x = -0.31331101
gt.bb_door.use_pnt_y = -1.1992199
gt.bb_door.use_pnt_z = 19.502899
gt.bb_door.use_rot_x = 0
gt.bb_door.use_rot_y = 179.25301
gt.bb_door.use_rot_z = 0
gt.bb_door.out_pnt_x = -0.31725499
gt.bb_door.out_pnt_y = -1.51079
gt.bb_door.out_pnt_z = 19.501101
gt.bb_door.out_rot_x = 0
gt.bb_door.out_rot_y = 179.25301
gt.bb_door.out_rot_z = 0
gt.bb_box = gt.bb_door
gt.bb_door.walkOut = function(arg1) -- line 96
    bb:come_out_door(bb.gt_door)
end
gt.tb_door = Object:create(gt, "/gttx003/door", -0.427156, 7.0579801, 19.51, { range = 0 })
gt.tb_door.use_pnt_x = -0.55780602
gt.tb_door.use_pnt_y = 6.31182
gt.tb_door.use_pnt_z = 19.51
gt.tb_door.use_rot_x = 0
gt.tb_door.use_rot_y = -7.7581201
gt.tb_door.use_rot_z = 0
gt.tb_door.out_pnt_x = -0.532242
gt.tb_door.out_pnt_y = 6.5
gt.tb_door.out_pnt_z = 19.51
gt.tb_door.out_rot_x = 0
gt.tb_door.out_rot_y = -7.7581201
gt.tb_door.out_rot_z = 0
gt.tb_box = gt.tb_door
gt.tb_door.walkOut = function(arg1) -- line 117
    if not tb.seen_intro then
        tb.needs_intro = TRUE
    end
    tb:come_out_door(tb.gt_door)
end
gt.sl_door = Object:create(gt, "/gttx004/door", -0.16857301, 4.89534, 22.200001, { range = 0.60000002 })
gt.sl_door.use_pnt_x = -1.5320899
gt.sl_door.use_pnt_y = 4.9860201
gt.sl_door.use_pnt_z = 22.200001
gt.sl_door.use_rot_x = 0
gt.sl_door.use_rot_y = 622.61102
gt.sl_door.use_rot_z = 0
gt.sl_door.out_pnt_x = -1.2524199
gt.sl_door.out_pnt_y = 4.9498701
gt.sl_door.out_pnt_z = 22.200001
gt.sl_door.out_rot_x = 0
gt.sl_door.out_rot_y = 622.61102
gt.sl_door.out_rot_z = 0
gt.stair_box = gt.sl_door
gt.camera_script = function() -- line 141
    local local1, local2, local3
    repeat
        local1, local2, local3 = GetActorPos(system.currentActor.hActor)
        break_here()
    until local3 > 21
    system.currentSet:current_setup(gt_estws)
end
gt.sl_door.walkOut = function(arg1) -- line 150
    sl:come_out_door(sl.gt_door)
end
gt.sl_door.skipWalkOut = function(arg1) -- line 154
    kill_override()
    sl:come_out_door(sl.gt_door)
end
gunar_rest = 0
gunar_tap_cycle = 1
gunar_look_at_slisko = 2
gunar_look_hold = 3
gunar_gesture1 = 4
gunar_gesture2 = 5
gunar_gesture3 = 6
gunar_gesture4 = 7
gunar_gesture5 = 8
gunar_gesture6 = 9
gunar_gesture7 = 10
gunar_mumble = 11
gunar_m = 12
gunar_c = 13
gunar_u = 14
gunar_o = 15
gunar_a = 16
gunar_e = 17
gunar_f = 18
gunar_t = 19
gunar_stop_talk = 20
gunar_l = 21
gunar_meshes_just_hand = 0
gunar_meshes_just_head = 1
gunar_meshes_all_but_hand = 2
gunar_meshes_all_but_head = 3
gunar_meshes_all_but_head_hand = 4
gunar_meshes_just_hand_head = 5
gunar_meshes_show_all = 6
ha_elvos_elev_door_door_open = 0
ha_elvos_elev_door_door_close = 1
ha_elvos_elev_door_whole_animation = 2
ha_elvos_elev_door_abort_close = 3
ha_elvos_garelev_door_door_open = 0
ha_elvos_garelev_door_door_close = 1
ha_elvos_garelev_door_abort_close = 2
ha_intls_domino_door_door_open = 0
ha_intls_domino_door_door_close = 1
ha_intls_domino_door_set_open = 2
ha_intls_domino_door_set_closed = 3
CheckFirstTime("ha.lua")
ha = Set:create("ha.set", "Hallway", { ha_elvos = 0, ha_revls = 1, ha_intls = 2, ha_intls2 = 2, ha_evaws = 3, ha_evacu = 4, ha_mnycu = 5, overhead = 6 })
ha.shrinkable = 0.025
ha.cheat_boxes = { ha_cheat_box_1 = 1 }
dofile("eva_sec.lua")
dofile("ha_elvos_elev_door.lua")
dofile("ha_elvos_garelev_door.lua")
dofile("ha_intls_domino_door.lua")
dofile("ma_open_door.lua")
dofile("hole_punch.lua")
dofile("ma_card_punch.lua")
ha.eva_chat_box = { }
ha.random_squeaks = function(arg1) -- line 27
    local local1, local2
    local2 = 0
    if not arg1 then
        arg1 = 1
    end
    while local2 < arg1 do
        local1 = pick_from_nonweighted_table(fe.balloon_sfx)
        start_sfx(local1)
        wait_for_sound(local1)
        local2 = local2 + 1
    end
end
ha.elevator_open_too_long = function() -- line 42
    if system.currentSet == ha then
        START_CUT_SCENE()
        eva:say_line("/haev165/")
        wait_for_message()
        manny:say_line("/hama166/")
        wait_for_message()
        eva:say_line("/haev167/")
        eva.talked_elevator_too_long = TRUE
        END_CUT_SCENE()
    end
end
ha.elevator_min_msecs = 8000
ha.elevator_max_msecs = 10000
ha.elevator_too_long_msecs = 60000
ha.elevator_door_timer = function(arg1) -- line 60
    local local1, local2
    local2 = 0
    while arg1:is_open() do
        local1 = rnd(ha.elevator_min_msecs, ha.elevator_max_msecs)
        sleep_for(local1)
        local2 = local2 + local1
        if arg1:is_open() then
            if arg1 == ha.lo_door then
                arg1.interest_actor:play_chore(ha_elvos_elev_door_abort_close)
            else
                arg1.interest_actor:play_chore(ha_elvos_garelev_door_abort_close)
            end
            arg1.interest_actor:wait_for_chore()
            if local2 >= ha.elevator_too_long_msecs and not eva.talked_elevator_too_long then
                local2 = 0
                ha.elevator_open_too_long()
            end
        end
    end
end
ha.eva_chat_box.walkOut = function(arg1) -- line 84
    local local1
    if fe.balloon_cat.owner == manny or fe.balloon_dingo.owner == manny or fe.balloon_frost == manny then
        local1 = TRUE
    end
    if tu.chem_state == "both chem" and not eva.talked_server then
        eva.talked_server = TRUE
        eva:say_line("/haev122/")
        wait_for_message()
        manny:say_line("/hama123/")
    elseif local1 and not eva.talked_balloons then
        eva.talked_balloons = TRUE
        ha.random_squeaks(3)
        eva:say_line("/haev124/")
        wait_for_message()
        start_script(ha.random_squeaks, 2)
        manny:say_line("/hama125/")
    elseif ga.been_there and not glottis.met and not eva.driver_hint then
        eva.driver_hint = TRUE
        eva:say_line("/haev126/")
    end
end
ha.funny_bones = function() -- line 107
    START_CUT_SCENE("nohead")
    manny:head_look_at(nil)
    manny:walkto(6.52021, 0.682541, 0)
    manny:wait_for_actor()
    start_script(play_movie, "funny.snm", 384, 110)
    sleep_for(1000)
    copal:say_line("/haco127/")
    sleep_for(500)
    manny:head_look_at(ha.co_door)
    sleep_for(500)
    manny:setrot(0, 172.154, 0, TRUE)
    copal:wait_for_message()
    copal:say_line("/haco128/")
    copal:wait_for_message()
    copal:say_line("/haco129/")
    wait_for_movie()
    system:lock_display()
    copal:wait_for_message()
    END_CUT_SCENE()
    stop_script(run_idle)
    stop_sound("keyboard.IMU")
    eva:stop_chore()
    eva:free()
    start_script(cut_scene.reapmec3, cut_scene)
end
ha.check_evas_head = function(arg1) -- line 134
    if ha:current_setup() == ha_mnycu or ha:current_setup() == ha_elvos then
        eva:set_visibility(FALSE)
    else
        eva:set_visibility(TRUE)
    end
end
ha.eva_follow_manny = function(arg1) -- line 146
    local local1, local2, local3, local4, local5
    while 1 do
        local1, local2, local3, local4, local5 = GetVisibleThings()
        if local1 ~= eva.hActor and local2 ~= eva.hActor and local3 ~= eva.hActor and local4 ~= eva.hActor and local5 ~= eva.hActor then
            eva:head_look_at(manny)
        else
            eva:head_look_at(nil)
        end
        break_here()
    end
end
ha.set_up_actors = function(arg1) -- line 159
    if not eva.idle_table then
        eva.idle_table = { }
        eva.idle_table[eva_sec_look_up] = { }
        eva.idle_table[eva_sec_look_up][eva_sec_look_back] = 0.5
        eva.idle_table[eva_sec_look_up][eva_sec_to_type] = 0.5
        eva.idle_table[eva_sec_look_back] = { }
        eva.idle_table[eva_sec_look_back][eva_sec_look_up] = 0.1
        eva.idle_table[eva_sec_look_back][eva_sec_read_loop] = 0.7
        eva.idle_table[eva_sec_look_back][eva_sec_hand_down] = 0.1
        eva.idle_table[eva_sec_look_back][eva_sec_flip_page] = 0.1
        eva.idle_table[eva_sec_to_type] = { }
        eva.idle_table[eva_sec_to_type][eva_sec_trans_type] = 0.99
        eva.idle_table[eva_sec_to_type][eva_sec_to_read] = 0.01
        eva.idle_table[eva_sec_trans_type] = { }
        eva.idle_table[eva_sec_trans_type][eva_sec_type] = 0.5
        eva.idle_table[eva_sec_trans_type][eva_sec_chk_type] = 0.5
        eva.idle_table[eva_sec_type] = { }
        eva.idle_table[eva_sec_type][eva_sec_type] = 0.85
        eva.idle_table[eva_sec_type][eva_sec_chk_type] = 0.1
        eva.idle_table[eva_sec_type][eva_sec_to_read] = 0.05
        eva.idle_table[eva_sec_chk_type] = { }
        eva.idle_table[eva_sec_chk_type][eva_sec_type] = 0.95
        eva.idle_table[eva_sec_chk_type][eva_sec_to_read] = 0.05
        eva.idle_table[eva_sec_to_read] = { }
        eva.idle_table[eva_sec_to_read][eva_sec_read_loop] = 0.5
        eva.idle_table[eva_sec_to_read][eva_sec_flip_page] = 0.5
        eva.idle_table[eva_sec_hand_down] = { }
        eva.idle_table[eva_sec_hand_down][eva_sec_up_file] = 0.9
        eva.idle_table[eva_sec_hand_down][eva_sec_stretch] = 0.1
        eva.idle_table[eva_sec_up_file] = { }
        eva.idle_table[eva_sec_up_file][eva_sec_to_file] = 0.8
        eva.idle_table[eva_sec_up_file][eva_sec_look_loop] = 0.09
        eva.idle_table[eva_sec_up_file][eva_sec_down_file] = 0.01
        eva.idle_table[eva_sec_to_file] = { }
        eva.idle_table[eva_sec_to_file][eva_sec_file_loop] = 0.8
        eva.idle_table[eva_sec_to_file][eva_sec_look_nail] = 0.2
        eva.idle_table[eva_sec_look_nail] = { }
        eva.idle_table[eva_sec_look_nail][eva_sec_look_loop] = 0.8
        eva.idle_table[eva_sec_look_nail][eva_sec_down_file] = 0.2
        eva.idle_table[eva_sec_look_loop] = { }
        eva.idle_table[eva_sec_look_loop][eva_sec_look_loop] = 0.03
        eva.idle_table[eva_sec_look_loop][eva_sec_down_file] = 0.3
        eva.idle_table[eva_sec_look_loop][eva_sec_to_file] = 0.67
        eva.idle_table[eva_sec_file_loop] = { }
        eva.idle_table[eva_sec_file_loop][eva_sec_file_loop] = 0.95
        eva.idle_table[eva_sec_file_loop][eva_sec_look_nail] = 0.05
        eva.idle_table[eva_sec_down_file] = { }
        eva.idle_table[eva_sec_down_file][eva_sec_stretch] = 0.9
        eva.idle_table[eva_sec_down_file][eva_sec_up_file] = 0.1
        eva.idle_table[eva_sec_stretch] = { }
        eva.idle_table[eva_sec_stretch][eva_sec_read_loop] = 1
        eva.idle_table[eva_sec_flip_page] = { }
        eva.idle_table[eva_sec_flip_page][eva_sec_flip_page] = 0.3
        eva.idle_table[eva_sec_flip_page][eva_sec_read_loop] = 0.7
        eva.idle_table[eva_sec_read_loop] = { }
        eva.idle_table[eva_sec_read_loop][eva_sec_read_loop] = 0.6
        eva.idle_table[eva_sec_read_loop][eva_sec_look_up] = 0.2
        eva.idle_table[eva_sec_read_loop][eva_sec_hand_down] = 0.05
        eva.idle_table[eva_sec_read_loop][eva_sec_flip_page] = 0.15
    end
    eva:default("sec")
    eva:setrot(0, 50, 0)
    eva:setpos(7.14472, 0.36273, 0.007)
    eva:set_head(33, 34, 35, 165, 28, 80)
    eva:put_in_set(ha)
    ha:check_evas_head()
    start_script(run_idle, eva, eva.idle_table, eva_sec_type)
    if not copal then
        copal = Actor:create("x_spot.3do", nil, nil, "/hatx130/")
    end
    copal:put_in_set(co)
    copal:set_visibility(FALSE)
    copal:setpos(7.14472, 0.3, 0.3)
    copal:set_talk_color(Blue)
    ha.hole_punch:default_actor()
    SetShadowColor(5, 5, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, -30, 200)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
    AddShadowPlane(manny.hActor, "shadow4")
    AddShadowPlane(manny.hActor, "shadow5")
end
ha.enter = function(arg1) -- line 290
    manny.footsteps = footsteps.rug
    ha:set_up_actors()
    ha:add_object_state(ha_elvos, "elev_door.bm", "elev_door.zbm", OBJSTATE_STATE)
    ha:add_object_state(ha_elvos, "garelev_door_close.bm", "garelev_door_close.zbm", OBJSTATE_STATE)
    ha:add_object_state(ha_intls, "domino_door_open.bm", nil, OBJSTATE_STATE)
    ha.ga_door:set_object_state("ha_elvos_garelev_door.cos")
    ha.do_door:set_object_state("ha_intls_domino_door.cos")
    ha.lo_door:set_object_state("ha_elvos_elev_door.cos")
    if reaped_bruno and not reaped_meche then
        MakeSectorActive("ha_do_gate", TRUE)
        ha.do_door:play_chore(2)
        ha.do_door:unlock()
    else
        ha.do_door:play_chore(3)
        MakeSectorActive("ha_do_gate", FALSE)
        ha.do_door:lock()
    end
    MakeSectorActive("ha_co_gate", FALSE)
    ha.ga_door:make_touchable()
    ha.lo_door:make_touchable()
end
ha.camerachange = function(arg1, arg2, arg3) -- line 318
    ha:check_evas_head()
    if reaped_meche and arg3 == ha_evaws then
        start_script(ha.funny_bones)
    end
    music_state:set_state(arg1:update_music_state(arg3))
end
ha.update_music_state = function(arg1, arg2) -- line 328
    local local1
    if local1 == nil then
        local1 = arg1:current_setup()
    end
    if local1 == ha_elvos then
        return stateHA_ELVOS
    elseif local1 == ha_revls then
        return stateHA_REVLS
    elseif local1 == ha_intls then
        return stateHA_INTLS
    elseif local1 == ha_mnycu then
        return stateHA_MNYCU
    elseif local1 == ha_evacu then
        return stateHA_EVACU
    elseif local1 == ha_evaws then
        return stateHA_EVAWS
    end
end
ha.exit = function(arg1) -- line 350
    stop_script(run_idle)
    eva:set_visibility(TRUE)
    eva:free()
    ha.ga_door:free_object_state()
    ha.do_door:free_object_state()
    ha.lo_door:free_object_state()
    ha.hole_punch.objstate_actor:free()
    KillActorShadows(manny.hActor)
end
ha.hole_punch = Object:create(ha, "/hatx131/hole punch", 7.1735702, 0.748806, 0.25999999, { range = 0.5 })
ha.hole_punch.use_pnt_x = 7.12498
ha.hole_punch.use_pnt_y = 0.89999998
ha.hole_punch.use_pnt_z = 0
ha.hole_punch.use_rot_x = 0
ha.hole_punch.use_rot_y = 194.299
ha.hole_punch.use_rot_z = 0
ha.hole_punch.lookAt = function(arg1) -- line 383
    manny:say_line("/hama132/")
end
ha.hole_punch.pickUp = function(arg1) -- line 387
    START_CUT_SCENE()
    manny:say_line("/hama133/")
    wait_for_message()
    eva:say_line("/haev134/")
    wait_for_message()
    END_CUT_SCENE()
end
ha.hole_punch.use = function(arg1) -- line 397
    local local1
    START_CUT_SCENE()
    enable_head_control(FALSE)
    manny:head_look_at_point(7.1265998, 0.37580001, 0.38)
    break_here()
    manny:say_line("/hama136/")
    manny:wait_for_message()
    eva:say_line("/haev137/")
    eva:wait_for_message()
    manny:walkto_object(arg1)
    manny:push_costume("ma_card_punch.cos")
    local1 = 0
    while local1 < 2 do
        manny:play_chore(ma_card_punch_hit_puncher, "ma_card_punch.cos")
        arg1.objstate_actor:play_chore(hole_punch_hit_puncher, "hole_punch.cos")
        manny:wait_for_chore()
        local1 = local1 + 1
    end
    manny:stop_chore(hole_punch_hit_puncher, "hole_punch.cos")
    manny:play_chore_looping(ms_rest, "ms.cos")
    manny:pop_costume()
    manny:head_look_at_point(7.1265998, 0.37580001, 0.38)
    manny:say_line("/hama138/")
    manny:wait_for_message()
    eva:say_line("/haev139/")
    sleep_for(200)
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
ha.hole_punch.use_card = function(arg1, arg2) -- line 431
    if arg2.punched then
        manny:say_line("/hama140/")
    else
        arg2.punched = TRUE
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        manny:wait_for_actor()
        manny:stop_chore(ms_hold_card, "ms.cos")
        manny:push_costume("ma_card_punch.cos")
        manny:play_chore_looping(ma_card_punch_act_card)
        manny:play_chore(ma_card_punch_card_punch, "ma_card_punch.cos")
        arg1.objstate_actor:play_chore(hole_punch_card_punch, "hole_punch.cos")
        manny:wait_for_chore()
        manny:stop_chore(ma_card_punch_act_card)
        manny:play_chore(ma_card_punch_act_hole_card)
        manny:play_chore_looping(ma_card_punch_hide_card)
        manny:blend(ms_activate_hole_card, ma_card_punch_card_punch, 500, "ms.cos", "ma_card_punch.cos")
        sleep_for(500)
        manny:pop_costume()
        manny:play_chore_looping(ms_activate_hole_card, "ms.cos")
        if not mo.one_card.ever_punched then
            mo.one_card.ever_punched = TRUE
            eva:say_line("/haev141/")
            wait_for_message()
            manny:say_line("/hama142/")
        end
        END_CUT_SCENE()
    end
end
ha.hole_punch.use_cards = function(arg1) -- line 465
    mo.cards:switch_to_one()
    ha.hole_punch:use_card(mo.one_card)
end
ha.hole_punch.use_mt_balloon = function(arg1) -- line 470
    manny:say_line("/hama168/")
end
ha.hole_punch.use_full_balloon = ha.hole_punch.use_mt_balloon
ha.hole_punch.default_actor = function(arg1) -- line 476
    if not arg1.objstate_actor then
        arg1.objstate_actor = Actor:create(nil, nil, nil, "hole punch")
    end
    arg1.objstate_actor:set_costume("hole_punch.cos")
    arg1.objstate_actor:put_in_set(ha)
    arg1.objstate_actor:set_visibility(TRUE)
    arg1.objstate_actor:setpos(7.19556, 0.884999, 0.00230002)
    arg1.objstate_actor:setrot(0, 170, 0)
    arg1.objstate_actor:play_chore(hole_punch_show, "hole_punch.cos")
end
ha.eva_obj = Object:create(ha, "/hatx143/Eva", 7.1265998, 0.37580001, 0.38, { range = 1 })
ha.eva_obj.use_pnt_x = 6.9679999
ha.eva_obj.use_pnt_y = 0.89700001
ha.eva_obj.use_pnt_z = 0
ha.eva_obj.use_rot_x = 0
ha.eva_obj.use_rot_y = 197.37
ha.eva_obj.use_rot_z = 0
ha.eva_obj.lookAt = function(arg1) -- line 497
    START_CUT_SCENE()
    manny:say_line("/hama144/")
    wait_for_message()
    eva:say_line("/haev145/")
    END_CUT_SCENE()
end
ha.eva_obj.use_memo = function(arg1) -- line 505
    eva:say_line("/haev146/")
end
ha.eva_obj.use = function(arg1) -- line 509
    Dialog:run("ev1", "dlg_eva.lua")
end
ha.eva_obj.use_work_order = function(arg1) -- line 513
    Dialog:run("ev1", "dlg_eva.lua", "work_order")
end
ha.eva_obj.use_card = function(arg1) -- line 517
    eva:say_line("/haev147/")
    manny:use_default()
end
ha.eva_obj.use_cards = function(arg1) -- line 522
    eva:say_line("/haev148/")
    manny:use_default()
end
ha.eva_obj.use_cat_balloon = function(arg1) -- line 527
    start_script(ha.random_squeaks, 2)
    manny:use_default()
    eva:say_line("/haev169/")
end
ha.eva_obj.use_dingo_balloon = ha.eva_obj.use_cat_balloon
ha.eva_obj.use_frost_balloon = ha.eva_obj.use_cat_balloon
ha.do_door = Object:create(ha, "/hatx149/door", 2.5557101, -0.1668127, 0.46000001, { range = 1.05431 })
ha.ha_do_box = ha.do_door
ha.do_door.passage = { "ha_do_gate" }
ha.do_door:lock()
ha.do_door.use_pnt_x = 2.5090001
ha.do_door.use_pnt_y = 0.141
ha.do_door.use_pnt_z = 0
ha.do_door.use_rot_x = 0
ha.do_door.use_rot_y = -547.21503
ha.do_door.use_rot_z = 0
ha.do_door.out_pnt_x = 2.5350001
ha.do_door.out_pnt_y = -0.097000003
ha.do_door.out_pnt_z = 0
ha.do_door.out_rot_x = 0
ha.do_door.out_rot_y = -169.132
ha.do_door.out_rot_z = 0
ha.do_door.lookAt = function(arg1) -- line 568
    manny:say_line("/doma167/")
end
ha.do_door.walkOut = function(arg1) -- line 572
    dom:come_out_door(dom.ha_door)
end
ha.do_door.use_card = function(arg1) -- line 576
    mo.one_card:picklock()
end
ha.do_door.locked_out = function(arg1) -- line 580
    manny:say_line("/hama150/")
    wait_for_message()
    if not ha.do_door.lamented and not reaped_meche then
        START_CUT_SCENE()
        ha.do_door.lamented = TRUE
        wait_for_message()
        manny:say_line("/hama151/")
        wait_for_message()
        manny:say_line("/hama170/")
        END_CUT_SCENE()
    end
end
ha.co_door = Object:create(ha, "/hatx152/door", 6.2465901, -0.24420001, 0.46000001, { range = 1.05431 })
ha.co_door:lock()
ha.ha_co_box = ha.co_door
ha.co_door.use_pnt_x = 6.197
ha.co_door.use_pnt_y = 0.111
ha.co_door.use_pnt_z = 0
ha.co_door.use_rot_x = 0
ha.co_door.use_rot_y = -181.09
ha.co_door.use_rot_z = 0
ha.co_door.out_pnt_x = 6.2319999
ha.co_door.out_pnt_y = -0.197
ha.co_door.out_pnt_z = 0
ha.co_door.out_rot_x = 0
ha.co_door.out_rot_y = 168.612
ha.co_door.out_rot_z = 0
ha.co_door.locked_out = function(arg1) -- line 618
    eva:say_line("/haev153/")
end
ha.co_door.walkOut = function(arg1) -- line 622
end
ha.co_door.lookAt = function(arg1) -- line 625
    START_CUT_SCENE()
    manny:say_line("/hama154/")
    wait_for_message()
    eva:say_line("/haev155/")
    wait_for_message()
    manny:say_line("/hama156/")
    wait_for_message()
    eva:say_line("/haev157/")
    wait_for_message()
    manny:say_line("/hama158/")
    END_CUT_SCENE()
end
ha.mo_door = Object:create(ha, "/hatx159/door", 0.84439999, -0.1543, 0.46000001, { range = 1.05431 })
ha.mo_door.passage = { "mo_door_psg1", "mo_door_psg2" }
ha.mo_door:open()
ha.ha_mo_box = ha.mo_door
ha.mo_door.use_pnt_x = 0.83600003
ha.mo_door.use_pnt_y = 0.122
ha.mo_door.use_pnt_z = 0
ha.mo_door.use_rot_x = 0
ha.mo_door.use_rot_y = 185.87
ha.mo_door.use_rot_z = 0
ha.mo_door.out_pnt_x = 0.86799997
ha.mo_door.out_pnt_y = -0.152
ha.mo_door.out_pnt_z = 0
ha.mo_door.out_rot_x = 0
ha.mo_door.out_rot_y = -160.21001
ha.mo_door.out_rot_z = 0
ha.mo_door.lookAt = function(arg1) -- line 661
    manny:say_line("/hama160/")
end
ha.mo_door.walkOut = function(arg1) -- line 665
    mo:come_out_door(mo.ha_door)
end
ha.ga_door = Object:create(ha, "/hatx161/elevator", 6.58356, 1.92881, 0.44, { range = 0.89999998 })
ha.ga_door.passage = { "ga_door_passage", "ga_door_psg2" }
ha.ga_door.use_pnt_x = 6.724
ha.ga_door.use_pnt_y = 1.931
ha.ga_door.use_pnt_z = 0
ha.ga_door.use_rot_x = 0
ha.ga_door.use_rot_y = 87.173103
ha.ga_door.use_rot_z = 0
ha.ga_door.out_pnt_x = 6.2729998
ha.ga_door.out_pnt_y = 2.029
ha.ga_door.out_pnt_z = 0
ha.ga_door.out_rot_x = 0
ha.ga_door.out_rot_y = 87.173103
ha.ga_door.out_rot_z = 0
ha.ga_door.walkOut = function(arg1) -- line 691
    START_CUT_SCENE()
    manny:clear_hands()
    manny:walkto(ha.ga_door.out_pnt_x, ha.ga_door.out_pnt_y, ha.ga_door.out_pnt_z)
    manny:wait_for_actor()
    start_script(ha.ga_door.close, ha.ga_door)
    while TurnActorTo(manny.hActor, ha.ga_door.use_pnt_x, ha.ga_door.use_pnt_y, ha.ga_door.use_pnt_z) do
        break_here()
    end
    wait_for_script(ha.ga_door.close)
    ga:switch_to_set()
    manny:put_in_set(ga)
    manny:setpos(ga.ha_door.out_pnt_x, ga.ha_door.out_pnt_y, ga.ha_door.out_pnt_z)
    manny:setrot(ga.ha_door.out_rot_x, ga.ha_door.out_rot_y + 180, ga.ha_door.out_rot_z)
    ga.ha_door:open()
    manny:walkto(ga.ha_door.use_pnt_x, ga.ha_door.use_pnt_y, ga.ha_door.use_pnt_z)
    manny:wait_for_actor()
    start_script(ga.ha_door.close, ga.ha_door)
    END_CUT_SCENE()
end
ha.ga_door.lookAt = function(arg1) -- line 715
    manny:say_line("/hama162/")
end
ha.ga_door.use = function(arg1) -- line 719
    START_CUT_SCENE()
    if not arg1:is_open() then
        arg1:open()
    end
    arg1:walkOut()
    END_CUT_SCENE()
end
ha.ga_door.open = function(arg1) -- line 728
    if not arg1:is_open() then
        arg1.interest_actor:wait_for_chore(ha_elvos_garelev_door_door_close)
        arg1.interest_actor:stop_chore()
        arg1.interest_actor:play_chore(ha_elvos_garelev_door_door_open)
        arg1.interest_actor:wait_for_chore()
        Object.open(arg1)
    end
    return TRUE
end
ha.ga_door.close = function(arg1) -- line 740
    if arg1:is_open() then
        Object.close(arg1)
        arg1.interest_actor:wait_for_chore(ha_elvos_garelev_door_door_open)
        arg1.interest_actor:stop_chore()
        arg1.interest_actor:play_chore(ha_elvos_garelev_door_door_close)
        arg1.interest_actor:wait_for_chore()
    end
    return TRUE
end
ha.ga_door_trigger = { }
ha.ga_door_trigger.walkOut = function(arg1) -- line 757
    local local1
    if ha.ga_door.interest_actor:is_choring() then
        ha.ga_door.interest_actor:wait_for_chore()
    end
    ha.ga_door:open()
    local1 = start_script(ha.elevator_door_timer, ha.ga_door)
    while manny:find_sector_name("ga_door_trigger") do
        break_here()
    end
    while manny:find_sector_name("ga_crushed") do
        break_here()
    end
    stop_script(local1)
    if manny:find_sector_name("ga_door") then
        single_start_script(ha.ga_door.walkOut)
        return nil
    elseif ha.ga_door.interest_actor:is_choring() then
        ha.ga_door.interest_actor:wait_for_chore()
    end
    ha.ga_door:close()
end
ha.lo_door = Object:create(ha, "/hatx163/elevator", 7.1044002, 3.0057001, 0.49000001, { range = 0.89999998 })
ha.lo_door.passage = { "lo_door_passage", "lo_door_psg2" }
ha.lo_door.use_pnt_x = 7.1040101
ha.lo_door.use_pnt_y = 2.3378401
ha.lo_door.use_pnt_z = 0
ha.lo_door.use_rot_x = 0
ha.lo_door.use_rot_y = 1.5
ha.lo_door.use_rot_z = 0
ha.lo_door.out_pnt_x = 7.08074
ha.lo_door.out_pnt_y = 3.2
ha.lo_door.out_pnt_z = 0
ha.lo_door.out_rot_x = 0
ha.lo_door.out_rot_y = 1.5
ha.lo_door.out_rot_z = 0
ha.lo_door.lookAt = function(arg1) -- line 803
    manny:say_line("/hama164/")
end
ha.lo_door.open = function(arg1) -- line 807
    if not arg1:is_open() then
        arg1.interest_actor:wait_for_chore(ha_elvos_elev_door_door_close)
        arg1.interest_actor:stop_chore()
        arg1:play_chore(ha_elvos_elev_door_door_open)
        arg1:wait_for_chore()
        Object.open(arg1)
    end
    return TRUE
end
ha.lo_door.close = function(arg1) -- line 819
    if arg1:is_open() then
        Object.close(arg1)
        arg1.interest_actor:wait_for_chore(ha_elvos_elev_door_door_open)
        arg1.interest_actor:stop_chore()
        arg1:play_chore(ha_elvos_elev_door_door_close)
        arg1:wait_for_chore()
    end
    return TRUE
end
ha.lo_door.walkOut = function(arg1) -- line 831
    stop_script(ha.elevator_door_timer)
    START_CUT_SCENE()
    manny:clear_hands()
    if ha.lo_door.interest_actor:is_choring() then
        ha.lo_door.interest_actor:wait_for_chore()
    end
    manny:walkto(ha.lo_door.out_pnt_x, ha.lo_door.out_pnt_y, ha.lo_door.out_pnt_z, ha.lo_door.out_rot_x, ha.lo_door.out_rot_y + 180, ha.lo_door.out_rot_z)
    ha.lo_door:close()
    END_CUT_SCENE()
    lo:switch_to_set()
    manny:put_in_set(lo)
    manny:setpos(lo.ha_door.out_pnt_x, lo.ha_door.out_pnt_y, lo.ha_door.out_pnt_z)
    manny:setrot(lo.ha_door.out_rot_x, lo.ha_door.out_rot_y + 180, lo.ha_door.out_rot_z)
    lo:elev_walk_out()
end
ha.lo_door.use = function(arg1) -- line 850
    START_CUT_SCENE()
    if not arg1:is_open() then
        arg1:open()
    end
    arg1:walkOut()
    END_CUT_SCENE()
end
ha.lo_door_trigger = { }
ha.lo_door_trigger.walkOut = function(arg1) -- line 864
    local local1
    if ha.lo_door.interest_actor:is_choring() then
        ha.lo_door.interest_actor:wait_for_chore()
    end
    ha.lo_door:open()
    local1 = start_script(ha.elevator_door_timer, ha.lo_door)
    while manny:find_sector_name("lo_door_trigger") do
        break_here()
    end
    while manny:find_sector_name("lo_crushed") do
        break_here()
    end
    stop_script(local1)
    if manny:find_sector_name("lo_door") then
        single_start_script(ha.lo_door.walkOut)
        return nil
    elseif ha.lo_door.interest_actor:is_choring() then
        ha.lo_door.interest_actor:wait_for_chore()
    end
    ha.lo_door:close()
end
CheckFirstTime("hb.lua")
hb = Set:create("hb.set", "temp hub room", { na_top = 0, na_intha = 1, na_intws = 2 })
hb.enter = function(arg1) -- line 18
    start_script(foghorn_sfx)
    hb:add_ambient_sfx(harbor_ambience_list, harbor_ambience_parm_list)
    StartMovie("hb.snm", TRUE, 0, 0)
end
hb.exit = function(arg1) -- line 24
    StopMovie()
    stop_script(foghorn_sfx)
end
hb.dd_door = Object:create(hb, "/hbtx001/door", -0.131596, -4.20928, 1.1, { range = 0.60000002 })
hb.dd_door.use_pnt_x = -2.7476599
hb.dd_door.use_pnt_y = 1.88727
hb.dd_door.use_pnt_z = 1.258
hb.dd_door.use_rot_x = 0
hb.dd_door.use_rot_y = -1008.75
hb.dd_door.use_rot_z = 0
hb.dd_door.out_pnt_x = -3.12497
hb.dd_door.out_pnt_y = 2.0151701
hb.dd_door.out_pnt_z = 1.258
hb.dd_door.out_rot_x = 0
hb.dd_door.out_rot_y = -1008.75
hb.dd_door.out_rot_z = 0
hb.dd_box = hb.dd_door
hb.dd_door:make_untouchable()
hb.dd_door.walkOut = function(arg1) -- line 58
    dd:come_out_door(dd.hb_door)
end
hb.bw_door = Object:create(hb, "/hbtx002/door", 0.76840401, 3.99072, 1.7, { range = 0.60000002 })
hb.bw_door.use_pnt_x = 0.659536
hb.bw_door.use_pnt_y = 3.3587201
hb.bw_door.use_pnt_z = 1.258
hb.bw_door.use_rot_x = 0
hb.bw_door.use_rot_y = -1093.17
hb.bw_door.use_rot_z = 0
hb.bw_door.out_pnt_x = 0.75928998
hb.bw_door.out_pnt_y = 3.78582
hb.bw_door.out_pnt_z = 1.258
hb.bw_door.out_rot_x = 0
hb.bw_door.out_rot_y = -1093.17
hb.bw_door.out_rot_z = 0
hb.bw_box = hb.bw_door
hb.bw_door:make_untouchable()
hb.bw_door.walkOut = function(arg1) -- line 81
    bw:come_out_door(bw.hb_door)
end
hb.xb_door = Object:create(hb, "/hbtx003/door", -3.1315999, 2.1907201, 1.5, { range = 0.60000002 })
hb.xb_door.use_pnt_x = -0.069325402
hb.xb_door.use_pnt_y = -3.2717299
hb.xb_door.use_pnt_z = 0.815
hb.xb_door.use_rot_x = 0
hb.xb_door.use_rot_y = -887.39502
hb.xb_door.use_rot_z = 0
hb.xb_door.out_pnt_x = 0.0077585201
hb.xb_door.out_pnt_y = -3.61642
hb.xb_door.out_pnt_z = 0.815
hb.xb_door.out_rot_x = 0
hb.xb_door.out_rot_y = -887.39502
hb.xb_door.out_rot_z = 0
hb.xb_box = hb.xb_door
hb.xb_door:make_untouchable()
hb.xb_door.walkOut = function(arg1) -- line 105
    xb:come_out_door(xb.hb_door)
end
hb.lm_door = Object:create(hb, "/hbtx004/door", 3.3684001, -0.0092823096, 0.89999998, { range = 0.60000002 })
hb.lm_door.use_pnt_x = 2.7368801
hb.lm_door.use_pnt_y = -0.0227677
hb.lm_door.use_pnt_z = 0.815
hb.lm_door.use_rot_x = 0
hb.lm_door.use_rot_y = -1162.86
hb.lm_door.use_rot_z = 0
hb.lm_door.out_pnt_x = 3.2635601
hb.lm_door.out_pnt_y = 0.043249998
hb.lm_door.out_pnt_z = 0.815
hb.lm_door.out_rot_x = 0
hb.lm_door.out_rot_y = -1162.86
hb.lm_door.out_rot_z = 0
hb.lm_box = hb.lm_door
hb.lm_door:make_untouchable()
hb.lm_door.walkOut = function(arg1) -- line 128
    lm:come_out_door(lm.hb_door)
    if in_year_four and not lm.velasco_gone then
        start_script(lm.reunion)
    end
end
he_door_Chore0 = 0
he_door_Chore1 = 1
he_greenhouse_aim = 0
he_greenhouse_shoot_once = 1
he_greenhouse_shoot_loop = 2
he_greenhouse_shoot_to_aim = 3
he_greenhouse_aim_pos = 4
he_greenhouse_aim_to_crouch = 5
he_greenhouse_crouch = 6
he_greenhouse_crouch_to_run = 7
he_greenhouse_run_cycle = 8
he_greenhouse_run_to_cruch = 9
he_greenhouse_crouch_to_aim = 10
he_greenhouse_hide_gun = 11
he_greenhouse_show_gun = 12
he_greenhouse_crouch_rest = 13
CheckFirstTime("he.lua")
he = Set:create("he.set", "high roller elevator", { he_dorws = 0, he_ovrhd = 1 })
he.shrinkable = 0.07
he.aitor_snore_idles = function(arg1) -- line 14
    aitor:play_chore(aitor_idles_eyes_shut, "aitor_idles.cos")
    while 1 do
        aitor:say_line(pick_one_of({ "/heai043/", "/heai044/", "/heai045/", "/heai046/" }), { background = TRUE, skip_log = TRUE })
        sleep_for(rndint(5000, 10000))
    end
end
prop_forklift = Actor:create(nil, nil, nil, "prop forklift")
prop_forklift.he_pt = { x = 0.201511, y = 2.3064201, z = 0 }
prop_forklift.default_he = function(arg1) -- line 32
    local local1
    arg1:free()
    arg1:set_costume("forklift.cos")
    arg1:put_in_set(he)
    arg1:ignore_boxes()
    arg1:setpos(arg1.he_pt.x, arg1.he_pt.y, arg1.he_pt.z)
    local1 = de.forklift_actor:getrot()
    arg1:setrot(local1.x, local1.y + 90, local1.z)
    if de.forklift_actor.blades_up then
        arg1:play_chore(forklift_up_hold)
    else
        arg1:play_chore(forklift_down_hold)
    end
end
he.aitor_downstairs = TRUE
he.enter = function(arg1) -- line 55
    MakeSectorActive("elevator_box", FALSE)
    NewObjectState(he_dorws, OBJSTATE_STATE, "he_door.bm", "he_door.zbm")
    he.elevator:set_object_state("he_door.cos")
    if not he.elevator.locked then
        he.de_box = he.de_door
        he.aitor_obj:make_untouchable()
    elseif not he.aitor_downstairs and not hk.raoul_quit then
        aitor:default()
        aitor:pop_costume()
        aitor:set_mumble_chore(aitor_idles_mumble)
        aitor:set_talk_chore(1, aitor_idles_stop_talk)
        aitor:set_talk_chore(2, aitor_idles_a)
        aitor:set_talk_chore(3, aitor_idles_c)
        aitor:set_talk_chore(4, aitor_idles_e)
        aitor:set_talk_chore(5, aitor_idles_f)
        aitor:set_talk_chore(6, aitor_idles_l)
        aitor:set_talk_chore(7, aitor_idles_m)
        aitor:set_talk_chore(8, aitor_idles_o)
        aitor:set_talk_chore(9, aitor_idles_t)
        aitor:set_talk_chore(10, aitor_idles_u)
        aitor:push_costume("aitor_cask.cos")
        aitor:put_in_set(he)
        aitor:setpos(-1.25632, -0.752019, 0)
        aitor:setrot(0, 142.005, 0)
        aitor:play_chore(aitor_idles_sit_pos, "aitor_idles.cos")
        aitor:play_chore(aitor_idles_head_down, "aitor_idles.cos")
        aitor:play_chore(aitor_idles_eyes_shut, "aitor_idles.cos")
        he.aitor_obj:make_touchable()
        start_script(he.aitor_snore_idles, he)
    else
        he.aitor_obj:make_untouchable()
    end
    if he.aitor_obj.touchable then
        box_on("aitor1")
        box_on("aitor2")
        box_on("aitor3")
        box_off("no_aitor1")
        box_off("no_aitor2")
    else
        box_off("aitor1")
        box_off("aitor2")
        box_off("aitor3")
        box_on("no_aitor1")
        box_on("no_aitor2")
    end
    if de.forklift_actor.currentSet == de then
        prop_forklift:default_he()
    end
    start_sfx("he_hk_hp.imu", nil, 90)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0.4, 4)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(aitor.hActor, 0)
    SetActorShadowPoint(aitor.hActor, 0, 0.4, 4)
    SetActorShadowPlane(aitor.hActor, "shadow1")
    AddShadowPlane(aitor.hActor, "shadow1")
end
he.exit = function(arg1) -- line 128
    if sound_playing("wcDoor.wav") then
        wait_for_sound("wcDoor.wav")
    end
    if find_script(he.aitor_snore_idles) then
        stop_script(he.aitor_snore_idles)
    end
    stop_sound("hkCaskRl.imu")
    KillActorShadows(manny.hActor)
    KillActorShadows(aitor.hActor)
    prop_forklift:free()
    stop_sound("he_hk_hp.imu")
end
he.elevator = Object:create(he, "/hetx047/elevator", -0.0145502, 1.1127501, 0.47999999, { range = 0.85000002 })
he.elevator.use_pnt_x = 0.20545
he.elevator.use_pnt_y = 0.60275197
he.elevator.use_pnt_z = 0
he.elevator.use_rot_x = 0
he.elevator.use_rot_y = 36.550999
he.elevator.use_rot_z = 0
he.elevator:lock()
he.elevator.lookAt = function(arg1) -- line 161
    manny:say_line("/hema048/")
end
he.elevator.use = function(arg1) -- line 165
    if arg1:is_open() then
        manny:walkto(he.de_door, TRUE)
    else
        he.button:use()
    end
end
he.elevator.open = function(arg1) -- line 173
    if not arg1:is_open() then
        arg1:play_chore(0)
        arg1:wait_for_chore(0)
        MakeSectorActive("elevator_box", TRUE)
        Object.open(arg1)
    end
end
he.elevator.close = function(arg1) -- line 182
    if arg1:is_open() then
        arg1:play_chore(1)
        arg1:wait_for_chore(1)
        MakeSectorActive("elevator_box", FALSE)
        Object.close(arg1)
    end
end
he.elevator.comeOut = function(arg1) -- line 191
    START_CUT_SCENE()
    manny:ignore_boxes()
    manny:setpos(-0.0151523, 1.57243, 0)
    manny:setrot(0, 176.285, 0)
    arg1:open()
    manny:follow_boxes()
    manny:walkto(-0.0843952, 0.505871, 0, 0, 176.285, 0)
    arg1:close()
    END_CUT_SCENE()
end
he.button = Object:create(he, "/hetx049/button", 0.49544999, 0.87275201, 0.36000001, { range = 0.60000002 })
he.button.use_pnt_x = 0.41064799
he.button.use_pnt_y = 0.48445401
he.button.use_pnt_z = 0
he.button.use_rot_x = 0
he.button.use_rot_y = 20.780001
he.button.use_rot_z = 0
he.button.lookAt = function(arg1) -- line 212
    manny:say_line("/hema050/")
end
he.button.pickUp = function(arg1) -- line 216
    arg1:use()
end
he.button.use = function(arg1) -- line 220
    if hh.union_card.owner == manny then
        system.default_response("already")
    else
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        manny:wait_for_chore()
        manny:play_chore(mc_hand_on_obj, "mc.cos")
        sleep_for(400)
        start_sfx("deBtn.wav")
        manny:wait_for_chore(mc_hand_on_obj, "mc.cos")
        manny:play_chore(mc_hand_off_obj, "mc.cos")
        manny:wait_for_chore(mc_hand_off_obj, "mc.cos")
        manny:head_look_at(he.elevator)
        END_CUT_SCENE()
        if he.elevator.locked then
            if not he.aitor_downstairs then
                Dialog:run("ai1", "dlg_aitor.lua")
            else
                START_CUT_SCENE()
                sleep_for(1000)
                manny:head_look_at(arg1)
                manny:play_chore(mc_hand_on_obj, "mc.cos")
                sleep_for(400)
                start_sfx("deBtn.wav")
                manny:wait_for_chore(mc_hand_on_obj, "mc.cos")
                manny:play_chore(mc_hand_off_obj, "mc.cos")
                manny:wait_for_chore(mc_hand_off_obj, "mc.cos")
                manny:head_look_at(he.elevator)
                Object.lookAt(arg1)
                END_CUT_SCENE()
            end
        else
            START_CUT_SCENE()
            manny:walkto_object(he.elevator)
            manny:wait_for_actor()
            END_CUT_SCENE()
            he.elevator:open()
        end
    end
end
he.aitor_obj = Object:create(he, "/hetx051/Aitor", -0.357155, 0.34619799, 0.60000002, { range = 0.89999998 })
he.aitor_obj.use_pnt_x = -0.037489299
he.aitor_obj.use_pnt_y = 0.0236906
he.aitor_obj.use_pnt_z = 0
he.aitor_obj.use_rot_x = 0
he.aitor_obj.use_rot_y = 45.862598
he.aitor_obj.use_rot_z = 0
he.aitor_obj.lookAt = function(arg1) -- line 270
    manny:say_line("/hema052/")
end
he.aitor_obj.pickUp = function(arg1) -- line 274
    system.default_response("something")
end
he.aitor_obj.use = function(arg1) -- line 278
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:head_forward_gesture()
    manny:say_line("/hema053/")
    manny:wait_for_message()
    stop_script(he.aitor_snore_idles, he)
    aitor:shut_up()
    sleep_for(500)
    aitor:play_chore(aitor_idles_eyes_open, "aitor_idles.cos")
    END_CUT_SCENE()
    Dialog:run("ai1", "dlg_aitor.lua")
end
he.hk_door = Object:create(he, "/hetx054/door", -0.050000001, -1.4311301, 0.43000001, { range = 0.60000002 })
he.hk_door.use_pnt_x = 0.0763264
he.hk_door.use_pnt_y = -0.33903199
he.hk_door.use_pnt_z = 0
he.hk_door.use_rot_x = 0
he.hk_door.use_rot_y = 172.12199
he.hk_door.use_rot_z = 0
he.hk_door.out_pnt_x = -0.071795098
he.hk_door.out_pnt_y = -0.85998303
he.hk_door.out_pnt_z = 0
he.hk_door.out_rot_x = 0
he.hk_door.out_rot_y = 171.071
he.hk_door.out_rot_z = 0
he.hk_box = he.hk_door
he.hk_door.walkOut = function(arg1) -- line 314
    hk:come_out_door(hk.he_door)
end
he.de_door = Object:create(he, "/hetx055/elevator", 0.040658701, 1.19301, 0.47999999, { range = 0 })
he.de_door.use_pnt_x = 0.040658701
he.de_door.use_pnt_y = 0.71301299
he.de_door.use_pnt_z = 0
he.de_door.use_rot_x = 0
he.de_door.use_rot_y = 5.58289
he.de_door.use_rot_z = 0
he.de_door.out_pnt_x = 0.0115489
he.de_door.out_pnt_y = 1.01079
he.de_door.out_pnt_z = 0
he.de_door.out_rot_x = 0
he.de_door.out_rot_y = 5.58289
he.de_door.out_rot_z = 0
he.de_door.touchable = FALSE
he.de_door.walkOut = function(arg1) -- line 337
    START_CUT_SCENE()
    manny:wait_for_actor()
    he.elevator:close()
    de:come_out_door(de.grating)
    END_CUT_SCENE()
end
he_praise_enter = 0
he_praise_hold = 1
he_praise_nod_talk = 2
he_praise_exit = 3
he_praise_mumble = 4
he_praise_c = 5
he_praise_f = 6
he_praise_m = 7
he_praise_e = 8
he_praise_u = 9
he_praise_l = 10
he_praise_a = 11
he_praise_o = 12
he_praise_stop_talk = 13
he_praise_t = 14
he_shooting_shooting = 0
hf_elevator_door_open = 0
hf_elevator_door_close = 1
hf_elevator_door_set_open = 2
hf_elevator_door_set_closed = 3
hf_hectors_door_open = 0
hf_hectors_door_close = 1
hf_hectors_door_set_open = 2
hf_hectors_door_set_closed = 3
CheckFirstTime("hf.lua")
dofile("the_floreses.lua")
dofile("he_praise.lua")
hf = Set:create("hf.set", "hectors foyer", { hf_top = 0, hf_intha = 1, hf_intha1 = 1, hf_diaws = 2 })
hf.shrinkable = 0.04
hf.hector_pos = { x = -0.06602, y = 0.49406, z = 0 }
hf.hector_rot = { x = 0, y = 180, z = 0 }
hector.default_praise = function(arg1) -- line 24
    arg1:set_costume(nil)
    arg1:set_costume("he_praise.cos")
    arg1:set_mumble_chore(he_praise_mumble)
    arg1:set_talk_chore(1, he_praise_stop_talk)
    arg1:set_talk_chore(2, he_praise_a)
    arg1:set_talk_chore(3, he_praise_c)
    arg1:set_talk_chore(4, he_praise_e)
    arg1:set_talk_chore(5, he_praise_f)
    arg1:set_talk_chore(6, he_praise_l)
    arg1:set_talk_chore(7, he_praise_m)
    arg1:set_talk_chore(8, he_praise_o)
    arg1:set_talk_chore(9, he_praise_t)
    arg1:set_talk_chore(10, he_praise_u)
    arg1:put_in_set(hf)
    arg1:setpos(hf.hector_pos.x, hf.hector_pos.y, hf.hector_pos.z)
    arg1:setrot(hf.hector_rot.x, hf.hector_rot.y, hf.hector_rot.z)
end
hf.flores_idles = function(arg1) -- line 48
    while 1 do
        celso:play_chore(the_floreses_default)
        sleep_for(3000)
        if rnd(7) then
            celso:run_chore(the_floreses_to_whsper)
            celso:play_chore(the_floreses_whsper_hld)
            celso.whispering = TRUE
            sleep_for(rndint(5000, 8000))
            celso:run_chore(the_floreses_whspr_2dflt)
            celso.whispering = FALSE
        elseif rnd(7) then
            celso:run_chore(the_floreses_lovey)
            celso:play_chore(the_floreses_lov_hld)
            celso.lovey = TRUE
            sleep_for(rndint(5000, 8000))
            celso:run_chore(the_floreses_lov_2dflt)
            celso.lovey = FALSE
        end
    end
end
hf.flores_stop_idles = function(arg1) -- line 71
    stop_script(hf.flores_idles)
    celso:wait_for_chore()
    if celso.whispering then
        celso:run_chore(the_floreses_whspr_2dflt)
    end
    if celso.lovey then
        celso:run_chore(the_floreses_lov_2dflt)
    end
    celso:play_chore(the_floreses_default)
end
hf.meet_hector = function(arg1) -- line 87
    START_CUT_SCENE()
    if not hf.met_hector then
        sleep_for(500)
        manny:shrug_gesture()
        manny:say_line("/hfma002/")
        manny:wait_for_message()
        manny:knock_on_door_anim()
        start_script(manny.backup, manny, 500)
        sleep_for(500)
        manny:setrot(0, 45, 0, TRUE)
        sleep_for(500)
        hector:default_praise()
        hector:say_line("/hfhe003/")
        hf.hectors_door:play_chore(0)
        hf.hectors_door:wait_for_chore(0)
        hector:run_chore(he_praise_enter)
        hector:wait_for_message()
        hector:say_line("/hfhe004/")
        hector:wait_for_message()
        manny:wait_for_actor()
        manny:play_chore(ms_takeout_get, manny.base_costume)
        manny:say_line("/hfma005/")
        manny:wait_for_message()
    else
        manny:say_line("/hfma006/")
        manny:wait_for_message()
        manny:knock_on_door_anim()
        start_script(manny.backup, manny, 500)
        sleep_for(500)
        manny:setrot(0, 45, 0, TRUE)
        sleep_for(500)
        manny:wait_for_actor()
        manny:play_chore(ms_takeout_get, manny.base_costume)
        hector:default_praise()
        hf.hectors_door:play_chore(0)
        hf.hectors_door:wait_for_chore(0)
        hector:run_chore(he_praise_enter)
        hector:say_line("/hfhe007/")
        hector:wait_for_message()
    end
    hector:say_line("/hfhe008/")
    hector:wait_for_message()
    hector:run_chore(he_praise_exit)
    start_sfx("hecdoors.WAV")
    hf.hectors_door:play_chore(1)
    hf.hectors_door:wait_for_chore(1)
    manny:play_chore(ms_takeout_empty, manny.base_costume)
    if not hf.met_hector then
        hf.met_hector = TRUE
        wait_for_message()
        celso:say_line("/hfce009/")
        sleep_for(500)
        manny:head_look_at(hf.couple)
        manny:turn_toward_entity(hf.couple)
        celso:wait_for_message()
        celso:say_line("/hfce010/")
        celso:wait_for_message()
    end
    manny:wait_for_chore(ms_takeout_empty, manny.base_costume)
    manny:stop_chore(ms_takeout_empty, manny.base_costume)
    END_CUT_SCENE()
end
hf.celso_buy_ticket = function(arg1) -- line 154
    START_CUT_SCENE()
    celso.sold = TRUE
    hf.couple:make_untouchable()
    celso:play_chore(the_floreses_lovey)
    celso:say_line("/hfce069/")
    manny:head_look_at(nil)
    start_script(hf.manny_knock_and_back_off, hf)
    celso:wait_for_message()
    celso:play_chore(the_floreses_lov_2dflt)
    celso:say_line("/hfce070/")
    celso:wait_for_chore(the_floreses_love_2dflt)
    wait_for_script(hf.manny_knock_and_back_off)
    hf:current_setup(hf_intha)
    hector:default_praise()
    hf.hectors_door:play_chore(0)
    hf.hectors_door:wait_for_chore(0)
    hector:run_chore(he_praise_enter)
    celso:say_line("/hfce011/")
    celso:wait_for_message()
    hector:play_chore(he_praise_nod_talk)
    hector:say_line("/hfhe012/")
    hector:wait_for_message()
    celso:play_chore(the_floreses_walk_away)
    hector:say_line("/hfhe013/")
    hector:wait_for_message()
    celso:say_line("/hfce014/")
    hector:play_chore(he_praise_exit)
    hector:wait_for_chore()
    sleep_for(1000)
    hf:current_setup(hf_diaws)
    celso:wait_for_chore()
    celso:put_in_set(nil)
    celso:wait_for_message()
    hector:say_line("/hfhe015/")
    manny:shrug_gesture()
    hector:wait_for_message()
    hector:say_line("/hfhe016/")
    hector:wait_for_message()
    start_sfx("hecdoorc.WAV")
    hf.hectors_door:play_chore(1)
    hf.hectors_door:wait_for_chore(1)
    sleep_for(500)
    manny:tilt_head_gesture()
    manny:say_line("/hfma017/")
    manny:wait_for_message()
    manny:say_line("/hfma018/")
    manny:wait_for_message()
    END_CUT_SCENE()
    box_on("celso_box")
end
hf.goto_oldjob = function(arg1) -- line 209
    cur_puzzle_state[58] = TRUE
    th.grinder_actor:free()
    START_CUT_SCENE()
    manny:stop_walk()
    hf:current_setup(hf_intha)
    hector:default_praise()
    hf.hectors_door:play_chore(0)
    hf.hectors_door:wait_for_chore(0)
    hector:run_chore(he_praise_enter)
    hector:say_line("/hfhe019/")
    manny:head_look_at(hf.hectors_door)
    start_script(manny.turn_toward_entity, manny, hf.hectors_door)
    hector:wait_for_message()
    hector:play_chore(he_praise_nod_talk)
    hector:say_line("/hfhe020/")
    hector:wait_for_message()
    hector:say_line("/hfhe021/")
    hector:wait_for_message()
    END_CUT_SCENE()
    nq.photo:free()
    sh.remote:free()
    manny:head_look_at(nil)
    manny:default("reaper")
    start_script(cut_scene.oldjob, cut_scene)
end
hf.manny_knock_and_back_off = function(arg1) -- line 237
    manny:walkto(-0.00817938, -0.518114, 0)
    manny:wait_for_actor()
    manny:walkto_object(hf.hectors_door)
    manny:wait_for_actor()
    manny:knock_on_door_anim()
    manny:backup(3000)
end
hf.first_time_in = function(arg1) -- line 246
    START_CUT_SCENE()
    hf:switch_to_set()
    manny:put_in_set(hf)
    manny:setpos(hf.ly_door.out_pnt_x, hf.ly_door.out_pnt_y, hf.ly_door.out_pnt_z)
    manny:setrot(0, hf.ly_door.out_rot_y + 180, 0)
    hf:current_setup(hf_intha)
    hf.ly_door:play_chore(0)
    hf.ly_door:wait_for_chore(0)
    manny:walkto(hf.ly_door.use_pnt_x, hf.ly_door.use_pnt_y, hf.ly_door.use_pnt_z)
    manny:wait_for_actor()
    hf.ly_door:play_chore(1)
    hf.ly_door:wait_for_chore(1)
    END_CUT_SCENE()
end
hf.set_up_actors = function(arg1) -- line 268
    if not celso.sold then
        celso:set_costume(nil)
        celso:set_costume("the_floreses.cos")
        celso:set_talk_color(Yellow)
        celso:set_mumble_chore(the_floreses_mumble)
        celso:set_talk_chore(1, the_floreses_no_talk)
        celso:set_talk_chore(2, the_floreses_a)
        celso:set_talk_chore(3, the_floreses_c)
        celso:set_talk_chore(4, the_floreses_e)
        celso:set_talk_chore(5, the_floreses_f)
        celso:set_talk_chore(6, the_floreses_l)
        celso:set_talk_chore(7, the_floreses_m)
        celso:set_talk_chore(8, the_floreses_o)
        celso:set_talk_chore(9, the_floreses_t)
        celso:set_talk_chore(10, the_floreses_u)
        celso:put_in_set(hf)
        celso:setpos(0.7579, -0.63158, 0.00559)
        celso:setrot(0, 88.3265, 0)
        celso:play_chore(the_floreses_default)
        start_script(hf.flores_idles)
    end
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, -0.5, 10)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(celso.hActor, 0)
    SetActorShadowPoint(celso.hActor, 0, -0.5, 10)
    SetActorShadowPlane(celso.hActor, "shadow1")
    AddShadowPlane(celso.hActor, "shadow1")
end
hf.enter = function(arg1) -- line 307
    hf:add_object_state(hf_intha, "hf_hectors_door.bm", "hf_hectors_door.zbm", OBJSTATE_STATE)
    hf:add_object_state(hf_intha, "hf_elevator_door.bm", nil, OBJSTATE_UNDERLAY)
    hf.hectors_door:set_object_state("hf_hectors_door.cos")
    hf.ly_door:set_object_state("hf_elevator_door.cos")
    hf:set_up_actors()
    if celso.sold then
        hf.couple:make_untouchable()
        box_on("celso_box")
    else
        box_off("celso_box")
    end
end
hf.exit = function(arg1) -- line 324
    KillActorShadows(manny.hActor)
    KillActorShadows(celso.hActor)
    stop_script(hf.flores_idles)
    celso:free()
end
hf.oldjob_trig = { }
hf.oldjob_trig.walkOut = function(arg1) -- line 338
    if celso.sold then
        start_script(hf.goto_oldjob)
    end
end
hf.couple = Object:create(hf, "/hftx022/couple", 0.75774002, -0.65548301, 0.41, { range = 0.80000001 })
hf.couple.use_pnt_x = 0.58999997
hf.couple.use_pnt_y = -0.48113099
hf.couple.use_pnt_z = 0
hf.couple.use_rot_x = 0
hf.couple.use_rot_y = 234.54401
hf.couple.use_rot_z = 0
hf.couple.person = TRUE
hf.couple.lookAt = function(arg1) -- line 355
    manny:say_line("/hfma023/")
end
hf.couple.use = function(arg1) -- line 359
    if manny:walkto_object(arg1) then
        Dialog:run("ce2", "dlg_celso2.lua")
    end
end
hf.hectors_door = Object:create(hf, "/hftx024/door", -0.034597199, 0.228605, 0.47999999, { range = 0.80000001 })
hf.hectors_door.use_pnt_x = 0.027194999
hf.hectors_door.use_pnt_y = 0.080907501
hf.hectors_door.use_pnt_z = 0
hf.hectors_door.use_rot_x = 0
hf.hectors_door.use_rot_y = 10
hf.hectors_door.use_rot_z = 0
hf.hectors_door.lookAt = function(arg1) -- line 374
    manny:say_line("/hfma025/")
    manny:wait_for_message()
    manny:say_line("/hfma026/")
end
hf.hectors_door.use = function(arg1) -- line 381
    if manny:walkto_object(arg1) then
        start_script(hf.meet_hector)
    end
end
hf.floor = Object:create(hf, "/hftx027/monogram", 0.00056155602, -0.56940001, 0, { range = 0.60000002 })
hf.floor.use_pnt_x = -0.00199996
hf.floor.use_pnt_y = -0.67832702
hf.floor.use_pnt_z = 0
hf.floor.use_rot_x = 0
hf.floor.use_rot_y = 259.224
hf.floor.use_rot_z = 0
hf.floor.lookAt = function(arg1) -- line 396
    manny:say_line("/hfma028/")
    wait_for_message()
    manny:say_line("/hfma029/")
end
hf.floor.use = function(arg1) -- line 402
    local local1 = FALSE
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        if manny:get_costume() ~= "mcc_thunder_wait_idles.cos" then
            manny:push_costume("mcc_thunder_wait_idles.cos")
            local1 = TRUE
        end
        manny:run_chore(manny_idles_smoke1, "mcc_thunder_wait_idles.cos")
        manny:stop_chore(manny_idles_smoke1, "mcc_thunder_wait_idles.cos")
        manny:run_chore(manny_idles_smoke_stomp, "mcc_thunder_wait_idles.cos")
        manny:stop_chore(manny_idles_smoke_stomp, "mcc_thunder_wait_idles.cos")
        if local1 then
            manny:pop_costume()
        end
        END_CUT_SCENE()
    end
end
hf.ly_door = Object:create(hf, "/hftx001/door", 0.0068063699, -1.85392, 0.60000002, { range = 0.60000002 })
hf.ly_door.use_pnt_x = -0.106329
hf.ly_door.use_pnt_y = -0.94224101
hf.ly_door.use_pnt_z = 0
hf.ly_door.use_rot_x = 0
hf.ly_door.use_rot_y = 183
hf.ly_door.use_rot_z = 0
hf.ly_door.out_pnt_x = -0.119464
hf.ly_door.out_pnt_y = -1.3
hf.ly_door.out_pnt_z = 0
hf.ly_door.out_rot_x = 0
hf.ly_door.out_rot_y = 183
hf.ly_door.out_rot_z = 0
hf.ly_box = hf.ly_door
hf.ly_door.walkOut = function(arg1) -- line 446
    START_CUT_SCENE()
    manny:walkto(-0.00724274, -1.08005, 0)
    manny:wait_for_actor()
    manny:say_line("/hfma030/")
    END_CUT_SCENE()
end
hh_elev_Chore0 = 0
hh_elev_Chore1 = 1
CheckFirstTime("hh.lua")
hh = Set:create("hh.set", "high roller hall", { hh_estla = 0, hh_ovrhd = 1, hh_gtc2 = 2, hh_gtc3 = 3, hh_gtc4 = 4, hh_gtc5 = 5 })
hh.shrinkable = 0.05
hh.roll_test = function() -- line 14
    local local1
    break_here()
    break_here()
    break_here()
    while 1 do
        local1 = manny:getpos()
        print_temporary("I'm on!:" .. tostring(local1.x))
        SetCameraRoll(200 * local1.x)
        break_here()
    end
end
cc_getcard_alright = 0
cc_getcard_case = 1
cc_getcard_muscle = 2
cc_getcard_goons = 3
cc_getcard_give_card = 4
hh.set_up_actors = function(arg1) -- line 42
    if not hh.showed_pass and not hl.glottis_gambling then
        raoul:default()
        raoul:put_in_set(hh)
        raoul:ignore_boxes()
        raoul:setpos(0.0375492, 1.04758, 0)
        raoul:setrot(0, -183.424, 0)
    end
end
hh.enter = function(arg1) -- line 52
    NewObjectState(hh_estla, OBJSTATE_STATE, "hh_elev.bm", "hh_elev.zbm")
    hh.hl_door:set_object_state("hh_elev.cos")
    hh:set_up_actors()
end
hh.exit = function(arg1) -- line 62
    raoul:free()
end
hh.union_card = Object:create(hh, "/hhtx001/union card", 0, 0, 0, { range = 0 })
hh.union_card.string_name = "union_card"
hh.union_card.wav = "getCard.wav"
hh.union_card.lookAt = function(arg1) -- line 76
    manny:say_line("/hhma002/")
end
hh.union_card.use = function(arg1) -- line 80
    manny:say_line("/hhma003/")
end
hh.union_card.default_response = hh.union_card.use
hh.tb_door = Object:create(hh, "/hhtx004/stairs", -0.063047998, -0.95240301, 0.0100001, { range = 0.60000002 })
hh.tb_door.use_pnt_x = -0.054778699
hh.tb_door.use_pnt_y = -0.79997802
hh.tb_door.use_pnt_z = 0
hh.tb_door.use_rot_x = 0
hh.tb_door.use_rot_y = -895.28601
hh.tb_door.use_rot_z = 0
hh.tb_door.out_pnt_x = -0.047213301
hh.tb_door.out_pnt_y = -1.15
hh.tb_door.out_pnt_z = -0.2
hh.tb_door.out_rot_x = 0
hh.tb_door.out_rot_y = -534.84998
hh.tb_door.out_rot_z = 0
hh.tb_box = hh.tb_door
hh.tb_door:make_untouchable()
hh.tb_door.walkOut = function(arg1) -- line 112
    if not tb.seen_intro then
        tb.needs_intro = TRUE
    end
    tb:come_out_door(tb.hh_door)
end
hh.hl_door = Object:create(hh, "/hhtx006/door", 0.0384355, 0.70923799, 0.49399999, { range = 0.69999999 })
hh.hl_door.use_pnt_x = -0.0271775
hh.hl_door.use_pnt_y = 0.96948802
hh.hl_door.use_pnt_z = 0
hh.hl_door.use_rot_x = 0
hh.hl_door.use_rot_y = 191.09801
hh.hl_door.use_rot_z = 0
hh.hl_door.out_pnt_x = -0.0271775
hh.hl_door.out_pnt_y = 0.96948802
hh.hl_door.out_pnt_z = 0
hh.hl_door.out_rot_x = 0
hh.hl_door.out_rot_y = 191.09801
hh.hl_door.out_rot_z = 0
hh.hl_box = hh.hl_door
hh.hl_door.passage = { "hl_door_psg1", "hl_door_psg2", "hl_door_psg3" }
hh.hl_door.lookAt = function(arg1) -- line 137
    manny:say_line("/hhma007/")
end
hh.hl_door.walkOut = function(arg1) -- line 141
    if hh.showed_pass or hl.glottis_gambling then
        if manny.is_holding then
            put_away_held_item()
        end
        hl.elev_open:comeOut()
    end
end
hh.hl_door.open = function(arg1) -- line 151
    if not arg1:is_open() then
        arg1:play_chore(0)
        Object.open(arg1)
    end
end
hh.hl_door.close = function(arg1) -- line 158
    if arg1:is_open() then
        arg1:play_chore(1)
        Object.close(arg1)
    end
end
hh.hl_door.use_pass = hh.hl_door.walkOut
hh.hl_door.comeOut = function(arg1) -- line 168
    START_CUT_SCENE()
    hh:switch_to_set()
    hh:current_setup(hh_estla)
    manny:put_in_set(hh)
    manny:setpos(-0.0271775, 0.969488, 0)
    manny:setrot(0, 191, 0)
    arg1:play_chore(0)
    arg1:wait_for_chore()
    manny:walkto(0.0254188, 0.396167, 0)
    manny:wait_for_actor()
    arg1:close()
    END_CUT_SCENE()
end
hh.hl_door_trigger = { }
hh.hl_door_trigger.walkOut = function(arg1) -- line 186
    hh.hl_door:open()
    if hh.showed_pass or hl.glottis_gambling then
        while manny:find_sector_name("hl_door_trigger") do
            break_here()
        end
        if manny:find_sector_name("hh_floor") then
            hh.hl_door:close()
        end
    elseif cn.pass.owner ~= manny then
        music_state:set_sequence(seqRaoulAppears)
        if not hh.tried_door then
            hh.tried_door = TRUE
            START_CUT_SCENE()
            manny:walkto(0.202223, 0.505423, 0, 0, 33.1976, 0)
            raoul:say_line("/hhra008/")
            raoul:wait_for_message()
            manny:nod_head_gesture()
            manny:say_line("/hhma009/")
            manny:wait_for_message()
            raoul:say_line("/hhra010/")
            raoul:wait_for_message()
            manny:point_gesture()
            manny:say_line("/hhma011/")
            manny:wait_for_message()
            raoul:say_line("/hhra012/")
            raoul:wait_for_message()
            raoul:say_line("/hhra013/")
            raoul:wait_for_message()
            END_CUT_SCENE()
        else
            START_CUT_SCENE()
            raoul:say_line("/hhra014/")
            raoul:wait_for_message()
            manny:say_line("/hhma015/")
            manny:wait_for_message()
            raoul:say_line("/hhra016/")
            raoul:wait_for_message()
            END_CUT_SCENE()
        end
        hh.hl_door:close()
    else
        hh.showed_pass = TRUE
        hh.raoul_in_elevator = TRUE
        if manny.is_holding ~= cn.pass then
            manny:pull_out_item(cn.pass)
        end
        START_CUT_SCENE()
        manny:walkto(0.202223, 0.505423, 0, 0, 33.1976, 0)
        raoul:say_line("/hhra017/")
        raoul:wait_for_message()
        manny:say_line("/hhma018/")
        manny:walkto_object(hh.hl_door)
        manny:wait_for_message()
        raoul:say_line("/hhra019/")
        raoul:wait_for_message()
        manny:wait_for_actor()
        manny:clear_hands()
        raoul:say_line("/hhra020/")
        raoul:wait_for_message()
        music_state:set_sequence(seqRaoulDissed)
        sleep_for(1500)
        hh.hl_door:play_chore(1)
        hh.hl_door:wait_for_chore()
        END_CUT_SCENE()
        hl.elev_open:comeOut()
    end
end
CheckFirstTime("hk.lua")
dofile("aitor_cask.lua")
dofile("aitor_idles.lua")
dofile("cask.lua")
dofile("hk_pantry.lua")
dofile("mc_pantry.lua")
dofile("gl_cask.lua")
dofile("manny_cut_cask.lua")
dofile("raoul_cask.lua")
dofile("mc_cask.lua")
hk = Set:create("hk.set", "high roller kitchen", { hk_cskws = 0, hk_ovrhd = 1 })
hk.cask_actor = Actor:create(nil, nil, nil, "Cask")
hk.cask_actor.default = function(arg1) -- line 24
    arg1:set_costume("cask.cos")
    arg1:put_in_set(hk)
    arg1:set_softimage_pos(-6.0836, 0, -2.8973)
    arg1:setrot(0, 268.437, 0)
    arg1:set_visibility(TRUE)
    arg1:play_chore(cask_show, "cask.cos")
end
hk.scythe_actor = Actor:create(nil, nil, nil, "Scythe in pantry")
hk.scythe_actor.default = function(arg1) -- line 34
    arg1:set_costume("mc_pantry.cos")
    arg1:put_in_set(hk)
    arg1:setpos(-0.19374, -0.11101, 0)
    arg1:setrot(0, 270, 0)
end
hk.manny_pull_in_scythe = function(arg1) -- line 41
    manny:ignore_boxes()
    manny:put_in_set(hk)
    manny:set_visibility(TRUE)
    manny:setpos(0.0757646, 1.04339, 0.5602)
    manny:setrot(0, 163.017, 0)
    manny:push_costume("mc_cask.cos")
    glottis:play_chore(gl_cask_hide_scythe, "gl_cask.cos")
    manny:play_chore(mc_cask_cask_scythe, "mc_cask.cos")
    manny:wait_for_chore(mc_cask_cask_scythe, "mc_cask.cos")
    manny:stop_chore(mc_cask_cask_scythe, "mc_cask.cos")
    manny:pop_costume()
end
hk.stowaway = function(arg1) -- line 55
    hk.raoul_trapped = TRUE
    hl.glottis_gambling = TRUE
    START_CUT_SCENE()
    cur_puzzle_state[20] = TRUE
    set_override(hk.skip_stowaway, hk)
    manny:walkto(0.10168, 0.28562, 0.78821, 0, 6.394, 0)
    manny:wait_for_actor()
    break_here()
    manny:push_costume("manny_cut_cask.cos")
    manny:play_chore(manny_cut_cask_into_cask, "manny_cut_cask.cos")
    manny:wait_for_chore(manny_cut_cask_into_cask, "manny_cut_cask.cos")
    manny:stop_chore(manny_cut_cask_into_cask, "manny_cut_cask.cos")
    manny:pop_costume()
    manny:put_in_set(nil)
    IrisDown(355, 245, 1000)
    sleep_for(1500)
    hl:switch_to_set()
    hl:current_setup(hl_glot)
    stop_script(hl.glottis_idle)
    glottis:stop_chore(gl_gamble_rest_gambling2, "gl_gamble.cos")
    glottis:play_chore(gl_gamble_turn_speak, "gl_gamble.cos")
    IrisUp(215, 280, 1000)
    glottis:say_line("/hkgl001/")
    sleep_for(1500)
    glottis:wait_for_chore(gl_gamble_turn_speak, "gl_gamble.cos")
    glottis:stop_chore(gl_gamble_turn_speak, "gl_gamble.cos")
    glottis:play_chore_looping(gl_gamble_talks_drunk, "gl_gamble.cos")
    glottis:wait_for_message()
    sleep_for(1000)
    break_here()
    glottis:stop_chore(gl_gamble_talks_drunk, "gl_gamble.cos")
    hk.pantry:unlock()
    hk:switch_to_set()
    hk.cask_actor:set_visibility(FALSE)
    glottis:put_in_set(hk)
    glottis:set_costume(nil)
    glottis:set_costume("glottis_tux.cos")
    glottis:set_mumble_chore(glottis_mumble)
    glottis:set_talk_color(Orange)
    glottis:set_talk_chore(1, glottis_stop_talk)
    glottis:set_talk_chore(2, glottis_a)
    glottis:set_talk_chore(3, glottis_c)
    glottis:set_talk_chore(4, glottis_e)
    glottis:set_talk_chore(5, glottis_f)
    glottis:set_talk_chore(6, glottis_l)
    glottis:set_talk_chore(7, glottis_m)
    glottis:set_talk_chore(8, glottis_o)
    glottis:set_talk_chore(9, glottis_t)
    glottis:set_talk_chore(10, glottis_u)
    glottis:setpos(-0.606111, 0.330135, 0)
    glottis:setrot(0, 268.446, 0)
    glottis:push_costume("gl_cask.cos")
    raoul:set_costume(nil)
    raoul:set_costume("raoul_cask.cos")
    raoul:set_talk_color(Red)
    raoul:set_mumble_chore(raoul_cask_mumble)
    raoul:set_talk_chore(1, raoul_cask_no_talk)
    raoul:set_talk_chore(2, raoul_cask_a)
    raoul:set_talk_chore(3, raoul_cask_c)
    raoul:set_talk_chore(4, raoul_cask_e)
    raoul:set_talk_chore(5, raoul_cask_f)
    raoul:set_talk_chore(6, raoul_cask_l)
    raoul:set_talk_chore(7, raoul_cask_m)
    raoul:set_talk_chore(8, raoul_cask_o)
    raoul:set_talk_chore(9, raoul_cask_t)
    raoul:set_talk_chore(10, raoul_cask_u)
    raoul:ignore_boxes()
    raoul:put_in_set(hk)
    raoul:setpos(0.325089, -0.0250647, 0)
    raoul:setrot(0, 90, 0)
    raoul:set_visibility(FALSE)
    glottis:play_chore(gl_cask_to_cask, "gl_cask.cos")
    glottis:wait_for_chore(gl_cask_to_cask, "gl_cask.cos")
    hk.cask_actor:set_visibility(FALSE)
    glottis:stop_chore(gl_cask_to_cask, "gl_cask.cos")
    glottis:play_chore(gl_cask_to_closet, "gl_cask.cos")
    sleep_for(1000)
    music_state:set_sequence(seqGlottNoWine)
    glottis:say_line("/hkgl002/")
    glottis:wait_for_message()
    sleep_for(200)
    hk:manny_knocked_around()
    sleep_for(1500)
    glottis:say_line("/hkgl003/")
    sleep_for(1300)
    hk:manny_knocked_around()
    glottis:wait_for_message()
    glottis:wait_for_chore(gl_cask_to_closet, "gl_cask.cos")
    glottis:stop_chore(gl_cask_to_closet, "gl_cask.cos")
    glottis:play_chore(gl_cask_to_out_raoul, "gl_cask.cos")
    glottis:say_line("/hkgl004/")
    glottis:wait_for_message()
    glottis:wait_for_chore(gl_cask_to_out_raoul, "gl_cask.cos")
    glottis:stop_chore(gl_cask_to_out_raoul, "gl_cask.cos")
    raoul:set_visibility(TRUE)
    glottis:play_chore(gl_cask_out_raoul, "gl_cask.cos")
    raoul:play_chore(raoul_cask_fall, "raoul_cask.cos")
    sleep_for(100)
    hk.pantry:open_anim()
    raoul:say_line("/hkra005/")
    raoul:wait_for_message()
    raoul:wait_for_chore(raoul_cask_fall, "raoul_cask.cos")
    raoul:stop_chore(raoul_cask_fall, "raoul_cask.cos")
    raoul:play_chore(raoul_cask_fall_hold, "raoul_cask.cos")
    glottis:say_line("/hkgl006/")
    raoul:wait_for_chore(raoul_cask_fall_hold, "raoul_cask.cos")
    raoul:stop_chore(raoul_cask_fall_hold, "raoul_cask.cos")
    raoul:play_chore(raoul_cask_out, "raoul_cask.cos")
    glottis:wait_for_message()
    glottis:say_line("/hkgl007/")
    raoul:wait_for_chore(raoul_cask_out, "raoul_cask.cos")
    raoul:stop_chore(raoul_cask_out, "raoul_cask.cos")
    raoul:play_chore(raoul_cask_to_feet, "raoul_cask.cos")
    glottis:wait_for_message()
    raoul:wait_for_chore(raoul_cask_to_feet, "raoul_cask.cos")
    raoul:stop_chore(raoul_cask_to_feet, "raoul_cask.cos")
    raoul:play_chore(raoul_cask_head_hold, "raoul_cask.cos")
    raoul:say_line("/hkra008/")
    glottis:wait_for_chore(gl_cask_out_raoul, "gl_cask.cos")
    glottis:play_chore(gl_cask_hide_glottis, "gl_cask.cos")
    raoul:wait_for_message()
    raoul:say_line("/hkra009/")
    raoul:wait_for_chore(raoul_cask_head_hold, "raoul_cask.cos")
    raoul:stop_chore(raoul_cask_head_hold, "raoul_cask.cos")
    raoul:play_chore(raoul_cask_turn_back, "raoul_cask.cos")
    raoul:wait_for_message()
    start_script(hk.manny_pull_in_scythe, hk)
    raoul:say_line("/hkra010/")
    raoul:wait_for_chore(raoul_cask_turn_back, "raoul_cask.cos")
    raoul:stop_chore(raoul_cask_turn_back, "raoul_cask.cos")
    raoul:play_chore(raoul_cask_turn_back_hold, "raoul_cask.cos")
    raoul:wait_for_message()
    raoul:say_line("/hkra011/")
    raoul:wait_for_message()
    raoul:say_line("/hkra012/")
    raoul:wait_for_message()
    raoul:wait_for_chore(raoul_cask_turn_back_hold, "raoul_cask.cos")
    IrisDown(380, 300, 1000)
    sleep_for(1500)
    he.aitor_downstairs = TRUE
    wc.de_door:open()
    wc:switch_to_set()
    hk.cask_actor:default()
    hk.cask_actor:put_in_set(wc)
    hk.cask_actor:set_visibility(TRUE)
    hk.cask_actor:setpos(2.07433, 0.1397, -0.3473)
    hk.cask_actor:setrot(0, 180, 0)
    aitor:set_costume(nil)
    aitor:set_costume("aitor_cask.cos")
    aitor:stop_chore()
    aitor:put_in_set(wc)
    aitor:ignore_boxes()
    aitor:set_collision_mode(COLLISION_OFF)
    aitor:setpos(1.10153, -2.2523, 0.5211)
    aitor:setrot(0, 180, 0)
    de.forklift_actor:default()
    de.forklift_actor:put_in_set(wc)
    de.forklift_actor:setpos(0.934834, -2.1862, 0)
    de.forklift_actor:setrot(0, 14.7653, 0)
    de.forklift_actor:play_chore(forklift_down_hold)
    aitor:stop_chore(aitor_cask_in_elev, "aitor_cask.cos")
    IrisUp(200, 330, 1000)
    aitor:play_chore(aitor_cask_out_forklift_roll, "aitor_cask.cos")
    sleep_for(7300)
    hk.cask_actor:set_visibility(FALSE)
    sleep_for(200)
    start_sfx("wcCaskDn.WAV")
    sleep_for(900)
    start_sfx("hkCaskRl.IMU")
    sleep_for(500)
    fade_sfx("hkCaskRl.IMU", 500)
    start_sfx("hkCskBnc.WAV")
    sleep_for(2000)
    wc.de_door:play_chore(wc_door_close)
    aitor:wait_for_chore(aitor_cask_out_forklift_roll, "aitor_cask.cos")
    stop_sound("hkCaskRl.IMU")
    wc.de_door:wait_for_chore(wc_door_close)
    wc.de_door:close()
    aitor:put_in_set(nil)
    aitor:stop_chore(aitor_cask_out_forklift_roll, "aitor_cask.cos")
    manny:put_in_set(wc)
    manny:ignore_boxes()
    manny:setpos(-0.70697, -1.30588, 0.8022)
    manny:setrot(0, 688.391, 0)
    manny:set_visibility(TRUE)
    manny:push_costume("manny_cut_cask.cos")
    manny:play_chore(manny_cut_cask_cask_out, "manny_cut_cask.cos")
    manny:wait_for_chore(manny_cut_cask_cask_out, "manny_cut_cask.cos")
    manny:stop_chore(manny_cut_cask_cask_out, "manny_cut_cask.cos")
    manny:pop_costume()
    manny:follow_boxes()
    manny:setpos(-0.46517, -0.93618, 0.0210001)
    manny:setrot(0, 320, 0)
    if mo.scythe.owner ~= manny then
        mo.scythe:get()
    end
    hk.raoul_quit = TRUE
    hk.pantry:unlock()
    hk.pantry:open()
    aitor:free()
    END_CUT_SCENE()
end
hk.skip_stowaway = function(arg1) -- line 288
    kill_override()
    stop_sound("hkCaskRl.IMU")
    he.aitor_downstairs = TRUE
    hk.raoul_quit = TRUE
    hk.pantry:unlock()
    hk.pantry:open()
    if mo.scythe.owner ~= manny then
        mo.scythe:get()
    end
    raoul:free()
    aitor:free()
    glottis:free()
    wc:switch_to_set()
    wc.de_door:close()
    stop_sound("hkCaskRl.IMU")
    IrisUp(0, 0, 1)
    manny:default("cafe")
    manny:put_in_set(wc)
    manny:follow_boxes()
    manny:set_visibility(TRUE)
    manny:setpos(-0.46517, -0.93618, 0.0210001)
    manny:setrot(0, 320, 0)
end
hk.manny_knocked_around = function(arg1) -- line 317
    manny:say_line(pick_one_of({ "/hkma013/", "/hkma014/Ah!", "/hkma015/Uh!" }), { background = TRUE, skip_log = TRUE })
end
hk.remove_scythe = function(arg1) -- line 321
    START_CUT_SCENE()
    manny:walkto(-0.19374, -0.11101, 0, 0, 270, 0)
    manny:wait_for_actor()
    break_here()
    manny:stop_chore()
    manny:set_costume(nil)
    manny:set_costume("mc_pantry.cos")
    manny:play_chore(mc_pantry_scythe_unblock, "mc_pantry.cos")
    hk.scythe_actor:put_in_set(nil)
    manny:wait_for_chore(mc_pantry_scythe_unblock, "mc_pantry.cos")
    manny:stop_chore(mc_pantry_scythe_unblock, "mc_pantry.cos")
    manny:default("cafe")
    mo.scythe:get()
    manny.is_holding = mo.scythe
    manny:play_chore_looping(mc_hold_scythe, "mc.cos")
    END_CUT_SCENE()
    hk.pantry:unlock()
end
hk.put_up_new_cask = function(arg1) -- line 341
    local local1
    hk.seen_swap = TRUE
    START_CUT_SCENE()
    he.aitor_downstairs = TRUE
    set_override(hk.skip_put_up_cask, hk)
    aitor:default()
    aitor:put_in_set(hk)
    aitor:setpos(-0.63693899, 0.64820302, 0)
    aitor:setrot(0, 1.7168, 0)
    aitor:set_turn_rate(10)
    aitor:play_chore(aitor_cask_roll_cask, "aitor_cask.cos")
    start_sfx("hkCaskRl.imu")
    sleep_for(600)
    local1 = 1
    while local1 < 27 do
        local1 = local1 + 1
        aitor:setrot(0, local1, 0)
        break_here()
    end
    while aitor:is_turning() do
        break_here()
    end
    stop_sound("hkCaskRl.imu")
    he:switch_to_set()
    aitor:put_in_set(he)
    aitor:setpos(-0.57912201, -1.4167, 0)
    aitor:setrot(0, 167.819, 0)
    aitor:stop_chore(aitor_cask_roll_cask, "aitor_cask.cos")
    aitor:play_chore(aitor_cask_roll_cask, "aitor_cask.cos")
    start_sfx("hkCaskRl.imu")
    sleep_for(3000)
    stop_sound("hkCaskRl.imu")
    aitor:wait_for_chore(aitor_cask_roll_cask, "aitor_cask.cos")
    he.elevator:play_chore(0, "he_door.cos")
    he.elevator:wait_for_chore(0, "he_door.cos")
    aitor:play_chore(aitor_cask_in_elev, "aitor_cask.cos")
    sleep_for(500)
    start_sfx("hkCaskRl.imu")
    sleep_for(500)
    fade_sfx("hkCaskRl.imu", 200, 0)
    start_sfx("hkCskBnc.WAV")
    sleep_for(2500)
    he.elevator:play_chore(1, "he_door.cos")
    he.elevator:wait_for_chore(1, "he_door.cos")
    hk:switch_to_set()
    manny:put_in_set(hk)
    manny:setpos(-1.2446899, 0.178395, 0)
    stop_sound("hkCaskRl.IMU")
    manny:setrot(0, 222.498, 0)
    END_CUT_SCENE()
end
hk.skip_put_up_cask = function(arg1) -- line 404
    kill_override()
    aitor:stop_chore(nil, "aitor_cask.cos")
    aitor:put_in_set(nil)
    he.elevator:complete_chore(1, "he_door.cos")
    hk:switch_to_set()
    manny:put_in_set(hk)
    manny:setpos(-1.24469, 0.178395, 0)
    manny:setrot(0, 222.498, 0)
    stop_sound("hkCaskRl.IMU")
end
hk.look_meat = function(arg1) -- line 418
    soft_script()
    if not hk.cans1.seen then
        hk.cans1.seen = TRUE
        manny:say_line("/hkma016/")
        wait_for_message()
        manny:say_line("/hkma017/")
    else
        manny:say_line("/hkma018/")
    end
end
hk.spill_wine = function() -- line 430
    stop_script(hk.raoul_in_the_kitchen)
    START_CUT_SCENE()
    manny:walkto_object(hk.spigot)
    manny:play_chore(mc_hand_on_obj, "mc.cos")
    manny:wait_for_chore(mc_hand_on_obj, "mc.cos")
    hk.cask_actor:play_chore(cask_start_pour, "cask.cos")
    hk.cask_actor:wait_for_chore(cask_start_pour, "cask.cos")
    hk.cask_actor:play_chore(cask_pour_loop, "cask.cos")
    hk.cask_actor:play_chore(cask_floor_spill_start, "cask.cos")
    hk.cask_actor:wait_for_chore(cask_floor_spill_start, "cask.cos")
    hk.cask_actor:play_chore_looping(cask_spill_loop, "cask.cos")
    sleep_for(2000)
    if hk.raoul_in_kitchen and not hk.pantry:is_open() then
        hk.pantry:open_anim()
        hk.pantry:open()
    end
    if not hk.spilled_wine then
        hk.spilled_wine = TRUE
        if not hk.raoul_in_kitchen then
            raoul:default()
        end
        raoul:say_line("/hkra019/", { x = 100, y = 60 })
        sleep_for(500)
        manny:head_look_at_point(-1.38276, -0.127603, 0.4706)
        wait_for_message()
        if not hk.raoul_in_kitchen then
            raoul:put_in_set(hk)
            raoul:setpos(-1.525, 0.2219, 0)
            raoul:setrot(0, 290.017, 0)
            raoul:walkto(-1.0506, 0.2219, 0)
        else
            MakeSectorActive("pantry_box", TRUE)
            raoul:follow_boxes()
            if find_script(hk.raoul_leave_pantry) then
                stop_script(hk.raoul_leave_pantry)
            end
            hk.raoul_in_pantry = FALSE
            if hk.pantry:is_open() then
                box_on("pantry_box")
            end
            raoul:walkto(-1.0506, 0.2219, 0, 0, 290.017, 0)
        end
        manny:play_chore(mc_hand_off_obj, "mc.cos")
        hk.cask_actor:play_chore(cask_end_pour, "cask.cos")
        sleep_for(500)
        manny:setrot(0, 120.11, 0, TRUE)
        manny:wait_for_chore(mc_hand_off_obj, "mc.cos")
        manny:stop_chore(mc_hand_off_obj, "mc.cos")
        manny:wait_for_actor()
        hk.cask_actor:stop_chore(cask_spill_loop, "cask.cos")
        hk.cask_actor:play_chore(cask_spill_done, "cask.cos")
        manny:shrug_gesture()
        manny:say_line("/hkma020/")
        wait_for_message()
        raoul:say_line("/hkra021/")
        wait_for_message()
        raoul:say_line("/hkra022/")
        wait_for_message()
        manny:hand_gesture()
        manny:say_line("/hkma023/")
        wait_for_message()
        if hk.glottis_gambling then
            raoul:say_line("/hkra024/")
        else
            raoul:say_line("/hkra025/")
            wait_for_message()
            raoul:say_line("/hkra026/")
        end
    else
        raoul:say_line("/hkra027/")
        sleep_for(500)
        if not hk.raoul_in_kitchen then
            raoul:default()
            raoul:put_in_set(hk)
            raoul:setpos(-1.525, 0.2219, 0)
            raoul:setrot(0, 290.017, 0)
            raoul:walkto(-1.0506, 0.2219, 0)
        else
            MakeSectorActive("pantry_box", TRUE)
            raoul:follow_boxes()
            if find_script(hk.raoul_leave_pantry) then
                stop_script(hk.raoul_leave_pantry)
            end
            hk.raoul_in_pantry = FALSE
            if hk.pantry:is_open() then
                box_on("pantry_box")
            end
            raoul:walkto(-1.0506, 0.2219, 0, 0, 290.017, 0)
        end
        manny:head_look_at_point(-1.38276, -0.127603, 0.4706)
        wait_for_message()
        manny:play_chore(mc_hand_off_obj, "mc.cos")
        hk.cask_actor:play_chore(cask_end_pour, "cask.cos")
        sleep_for(500)
        manny:setrot(0, 120.11, 0, TRUE)
        manny:wait_for_chore(mc_hand_off_obj, "mc.cos")
        manny:stop_chore(mc_hand_off_obj, "mc.cos")
        manny:wait_for_actor()
        hk.cask_actor:stop_chore(cask_spill_loop, "cask.cos")
        hk.cask_actor:play_chore(cask_spill_done, "cask.cos")
        manny:shrug_gesture()
        manny:say_line("/hkma028/")
        wait_for_message()
        raoul:say_line("/hkra029/")
    end
    MakeSectorActive("pantry_box", FALSE)
    manny:walkto(hk.hl_door, TRUE)
    manny:wait_for_actor()
    wait_for_message()
    hk.raoul_in_kitchen = TRUE
    hl:switch_to_set()
    hl:current_setup(hl_elews)
    manny:put_in_set(hl)
    manny:setpos(-2.00906, 0.587105, 0)
    manny:setrot(0, 56.5524, 0)
    END_CUT_SCENE()
end
hk.change_casks = function() -- line 565
    START_CUT_SCENE()
    raoul:say_line("/hkra030/")
    wait_for_message()
    raoul:say_line("/hkra031/")
    wait_for_message()
    raoul:say_line("/hkra032/")
    wait_for_message()
    raoul:say_line("/hkra033/")
    wait_for_message()
    raoul:say_line("/hkra034/")
    END_CUT_SCENE()
end
hk.raoul_collision = function(arg1) -- line 579
    raoul:say_line(pick_one_of({ "/hkra035/", "/hkra036/", "/hkra037/", "/hkra038/", "/hkra039/", "/hkra040/", "/hkra041/", "/hkra042/", "/hkra043/", "/hkra044/", "/hkra045/", "/hkra046/", "/hkra047/", "/hkra048/" }, { background = TRUE, skip_log = TRUE }))
end
hk.raoul_in_the_kitchen = function() -- line 598
    local local1
    local local2, local3, local4, local5
    local local6
    while TRUE do
        local1 = 20000 + random() * 7000
        sleep_for(local1)
        while cutSceneLevel > 0 or system.currentSet ~= hk do
            break_here()
        end
        START_CUT_SCENE()
        hk.raoul_in_kitchen = TRUE
        raoul:default("walks")
        raoul:put_in_set(hk)
        raoul:setpos(-1.525, 0.2219, 0)
        raoul:setrot(0, 290.017, 0)
        if manny:find_sector_name("hit_raoul_box") and (not manny:find_sector_name("hkladder") and not manny:find_sector_name("pantry_top")) then
            manny:head_look_at_point(-1.525, 0.2219, 0.5)
            manny:walkto(-0.64321899, -0.38552901, 0)
        end
        if not hk.caught then
            hk.caught = TRUE
            raoul:say_line("/hkra049/", { background = TRUE, x = 100, y = 60 })
            sleep_for(500)
            raoul:walkto(-1.0506001, 0.2219, 0)
            raoul:wait_for_actor()
            local4 = manny:getpos()
            local2 = GetActorYawToPoint(raoul.hActor, local4)
            raoul:setrot(0, local2, 0, TRUE)
            local4 = raoul:getpos()
            local3 = GetActorYawToPoint(manny.hActor, local4)
            manny:setrot(0, local3, 0, TRUE)
            manny:head_look_at_point(local4.x, local4.y, local4.z + 0.5)
            raoul:wait_for_message()
            raoul:say_line("/hkra050/")
            wait_for_message()
            raoul:say_line("/hkra051/")
            wait_for_message()
            raoul:say_line("/hkra052/")
            wait_for_message()
            manny:head_look_at(nil)
            manny:head_forward_gesture()
            manny:say_line("/hkma053/")
            wait_for_message()
            raoul:say_line("/hkra054/")
        else
            raoul:say_line(pick_one_of({ "/hkra055/", "/hkra056/", "/hkra057/", "/hkra058/", "/hkra059/", "/hkra060/" }, { background = TRUE, x = 100, y = 60 }))
            sleep_for(500)
            raoul:walkto(-1.0506001, 0.2219, 0)
            raoul:wait_for_actor()
            local4 = manny:getpos()
            local2 = GetActorYawToPoint(raoul.hActor, local4)
            raoul:setrot(0, local2, 0, TRUE)
            local4 = raoul:getpos()
            local3 = GetActorYawToPoint(manny.hActor, local4)
            manny:head_look_at_point(local4.x, local4.y, local4.z + 0.5)
            manny:setrot(0, local3, 0, TRUE)
        end
        raoul:wait_for_message()
        raoul:walkto(-0.30647701, -0.0536948, 0, 0, 269.98001, 0)
        raoul:wait_for_actor()
        if not hk.pantry:is_open() then
            if hk.pantry.locked then
                raoul:say_line("/hkra061/")
                manny:head_look_at(hk.pantry)
                raoul:wait_for_message()
                raoul:set_walk_rate(-GetActorWalkRate(raoul.hActor))
                local5 = 0
                while local5 < 15 do
                    WalkActorForward(raoul.hActor)
                    break_here()
                    local5 = local5 + 1
                end
                raoul:set_walk_rate(-GetActorWalkRate(raoul.hActor))
                hk.pantry:use()
                wait_for_message()
                manny:wait_for_actor()
                manny:head_look_at(nil)
                manny:walkto(-0.263825, -0.641334, 0, 0, 3.35269, 0)
                raoul:say_line("/hkra062/")
                raoul:wait_for_message()
            end
            raoul:walkto(-0.263951, -0.0593265, 0.0099999998, 0, 227.842, 0)
            raoul:wait_for_actor()
            raoul:set_rest_chore(-1)
            raoul:stop_chore(ra_walks_idle, "ra_walks.cos")
            raoul:play_chore(ra_walks_open_pantry, "ra_walks.cos")
            sleep_for(700)
            hk.pantry:open_anim()
            raoul:wait_for_chore(ra_walks_open_pantry, "ra_walks.cos")
            raoul:set_rest_chore(ra_walks_idle, "ra_walks.cos")
        end
        hk.pantry:close()
        hk.pantry.opened = TRUE
        MakeSectorActive("door1_box", FALSE)
        MakeSectorActive("door2_box", FALSE)
        hk.raoul_in_pantry = TRUE
        MakeSectorActive("pantry_box", TRUE)
        raoul:walkto(0.22499999, -0.0155022, 0, 0, 270.021, 0)
        raoul:wait_for_actor()
        raoul:ignore_boxes()
        MakeSectorActive("pantry_box", FALSE)
        manny:head_look_at(nil)
        END_CUT_SCENE()
        single_start_script(hk.raoul_leave_pantry)
        while find_script(hk.raoul_leave_pantry) do
            break_here()
        end
    end
end
hk.raoul_leave_pantry = function() -- line 732
    local local1
    local local2
    local local3
    sleep_for(25000)
    while cutSceneLevel > 0 do
        break_here()
    end
    if not hk.pantry:is_open() then
        if hk.pantry:is_locked() then
            if not find_script(hk.trap_raoul) then
                start_script(hk.trap_raoul)
            end
        else
            hk:almost_trap_raoul()
            hk.raoul_in_kitchen = FALSE
        end
    else
        hk.raoul_in_pantry = FALSE
        hk.raoul_in_kitchen = FALSE
        START_CUT_SCENE()
        if manny:find_sector_name("hit_raoul_box") and not manny:find_sector_name("hkladder") and not manny:find_sector_name("pantry_top") then
            manny:head_look_at(hk.pantry)
            manny:walkto(-0.64321899, -0.38552901, 0)
            sleep_for(500)
        end
        MakeSectorActive("pantry_box", TRUE)
        raoul:follow_boxes()
        raoul:default("walks")
        raoul:put_in_set(hk)
        raoul:setpos(0.22499999, -0.0155022, 0)
        raoul:setrot(0, 270.021, 0)
        raoul:walkto(-1.0506001, 0.2219, 0)
        manny:head_look_at(nil)
        while raoul:is_moving() do
            local3 = raoul:getpos()
            local1 = GetActorYawToPoint(manny.hActor, local3)
            manny:setrot(0, local1, 0, TRUE)
            break_here()
        end
        local3 = manny:getpos()
        local2 = GetActorYawToPoint(raoul.hActor, local3)
        raoul:setrot(0, local2, 0, TRUE)
        raoul:say_line("/hkra063/")
        raoul:wait_for_message()
        raoul:walkto(-1.525, 0.2219, 0)
        raoul:wait_for_actor()
        raoul:put_in_set(nil)
        MakeSectorActive("pantry_box", FALSE)
        hk.pantry:open()
        END_CUT_SCENE()
    end
end
hk.almost_trap_raoul = function() -- line 793
    local local1, local2
    while system.currentSet == cafe_inv or cutSceneLevel > 0 do
        break_here()
    end
    if system.currentSet == hk then
        START_CUT_SCENE()
        if manny:find_sector_name("hit_raoul_box") and not manny:find_sector_name("hkpantry") and not manny:find_sector_name("pantry_top") then
            manny:head_look_at(hk.pantry)
            manny:walkto(-0.64321899, -0.38552901, 0)
            sleep_for(500)
        end
        MakeSectorActive("pantry_box", TRUE)
        hk.pantry.opened = TRUE
        hk.raoul_in_pantry = FALSE
        wait_for_message()
        hk.pantry:open_anim()
        raoul:follow_boxes()
        raoul:default("walks")
        raoul:put_in_set(hk)
        raoul:follow_boxes()
        raoul:setpos(0.22499999, -0.0155022, 0)
        raoul:setrot(0, 270.021, 0)
        raoul:walkto(-0.30647701, -0.0536948, 0)
        raoul:wait_for_actor()
        local2 = manny:getpos()
        local1 = GetActorYawToPoint(raoul.hActor, local2)
        raoul:setrot(0, local1, 0)
        local2 = raoul:getpos()
        local1 = GetActorYawToPoint(manny.hActor, local2)
        raoul:say_line("/hkra064/")
        sleep_for(500)
        manny:setrot(0, local1, 0, TRUE)
        if not hk.tried_trapping then
            hk.tried_trapping = TRUE
            wait_for_message()
            raoul:say_line("/hkra065/")
            wait_for_message()
            raoul:say_line("/hkra066/")
            wait_for_message()
            raoul:say_line("/hkra067/")
        end
        raoul:wait_for_message()
        END_CUT_SCENE()
        raoul:walkto(-1.525, 0.2219, 0)
        raoul:wait_for_actor()
        raoul:put_in_set(nil)
        MakeSectorActive("door1_box", FALSE)
        MakeSectorActive("door2_box", FALSE)
    else
        hk.pantry.opened = TRUE
        MakeSectorActive("door1_box", FALSE)
        MakeSectorActive("door2_box", FALSE)
        hk.raoul_in_pantry = FALSE
        raoul:put_in_set(nil)
    end
end
hk.trap_raoul = function() -- line 859
    stop_script(hk.raoul_in_the_kitchen)
    hk.raoul_trapped = TRUE
    cur_puzzle_state[19] = TRUE
    START_CUT_SCENE()
    wait_for_message()
    manny:head_look_at(nil)
    set_override(hk.skip_trap_raoul, hk)
    manny:walkto(-1.525, 0.236379, 0, 0, 82.7411, 0)
    manny:wait_for_actor()
    manny:put_in_set(nil)
    start_sfx("hpknock1.wav")
    wait_for_sound("hpknock1.wav")
    raoul:say_line("/hkra068/")
    wait_for_message()
    start_sfx("hpknock1.wav")
    raoul:say_line("/hkra069/")
    wait_for_message()
    raoul:say_line("/hkra070/")
    wait_for_message()
    start_sfx("hpknock2.WAV")
    wait_for_sound("hpknock2.WAV")
    raoul:say_line("/hkra071/")
    wait_for_message()
    start_sfx("hpknock2.wav")
    raoul:say_line("/hkra072/")
    wait_for_message()
    raoul:say_line("/hkra073/")
    wait_for_message()
    start_sfx("hpknock3.wav")
    raoul:say_line("/hkra074/")
    wait_for_message()
    start_sfx("hpknock3.wav")
    raoul:say_line("/hkra075/")
    wait_for_message()
    hp:switch_to_set()
    raoul:stop_chore()
    raoul:set_costume(nil)
    raoul:set_costume("ra_bonked.cos")
    raoul:ignore_boxes()
    raoul:put_in_set(hp)
    raoul:setpos(-0.01509, -0.32876, 0)
    raoul:setrot(0, 541.536, 0)
    music_state:set_sequence(seqRaoulKO)
    raoul:play_chore(ra_bonked_knock_out, "ra_bonked.cos")
    raoul:say_line("/hkra076/")
    wait_for_message()
    raoul:say_line("/hkra077/")
    wait_for_message()
    sleep_for(500)
    hl:switch_to_set()
    hl:current_setup(hl_glot)
    sleep_for(1000)
    stop_script(hl.glottis_idle)
    wait_for_message()
    glottis:stop_chore(nil, "gl_gamble.cos")
    glottis:play_chore(gl_gamble_rest_gambling2, "gl_gamble.cos")
    sleep_for(500)
    glottis:stop_chore(gl_gamble_rest_gambling2, "gl_gamble.cos")
    glottis:play_chore(gl_gamble_turn_speak, "gl_gamble.cos")
    glottis:say_line("/hkgl078/")
    glottis:wait_for_chore(gl_gamble_turn_speak, "gl_gamble.cos")
    glottis:stop_chore(gl_gamble_turn_speak, "gl_gamble.cos")
    glottis:play_chore_looping(gl_gamble_talks_drunk, "gl_gamble.cos")
    glottis:wait_for_message()
    sleep_for(1000)
    glottis:set_chore_looping(gl_gamble_talks_drunk, FALSE, "gl_gamble.cos")
    glottis:wait_for_chore(gl_gamble_talks_drunk, "gl_gamble.cos")
    glottis:stop_chore(gl_gamble_talks_drunk, "gl_gamble.cos")
    glottis:play_chore(gl_gamble_speak_to_rest_gambling, "gl_gamble.cos")
    glottis:wait_for_chore(gl_gamble_speak_to_rest_gambling, "gl_gamble.cos")
    glottis:stop_chore(gl_gamble_speak_to_rest_gambling, "gl_gamble.cos")
    glottis:play_chore_looping(gl_gamble_rest_gambling2, "gl_gamble.cos")
    glottis:say_line("/hkgl079/")
    glottis:wait_for_message()
    hk:switch_to_set()
    glottis:put_in_set(hk)
    glottis:set_softimage_pos(-6.0836, 0, -2.8973)
    glottis:setrot(0, 268.402, 0)
    glottis:stop_chore()
    glottis:set_costume(nil)
    glottis:set_costume("glottis_tux.cos")
    glottis:set_mumble_chore(glottis_mumble)
    glottis:set_talk_chore(1, glottis_stop_talk)
    glottis:set_talk_chore(2, glottis_a)
    glottis:set_talk_chore(3, glottis_c)
    glottis:set_talk_chore(4, glottis_e)
    glottis:set_talk_chore(5, glottis_f)
    glottis:set_talk_chore(6, glottis_l)
    glottis:set_talk_chore(7, glottis_m)
    glottis:set_talk_chore(8, glottis_o)
    glottis:set_talk_chore(9, glottis_t)
    glottis:set_talk_chore(10, glottis_u)
    glottis:push_costume("gl_cask.cos")
    glottis:play_chore(gl_cask_to_cask, "gl_cask.cos")
    glottis:wait_for_chore(gl_cask_to_cask, "gl_cask.cos")
    glottis:stop_chore(gl_cask_to_cask, "gl_cask.cos")
    hk.cask_actor:set_visibility(FALSE)
    music_state:set_sequence(seqGlottDrinkWine)
    glottis:play_chore(gl_cask_drink_cask, "gl_cask.cos")
    sleep_for(4500)
    glottis:say_line("/hkgl110/")
    sleep_for(6500)
    glottis:say_line("/hkgl080/")
    glottis:wait_for_message()
    glottis:wait_for_chore(gl_cask_drink_cask, "gl_cask.cos")
    glottis:put_in_set(nil)
    glottis:pop_costume()
    hk.cask_actor:set_visibility(TRUE)
    sleep_for(2000)
    manny:put_in_set(hk)
    manny:setpos(-1.525, 0.236379, 0)
    manny:setrot(0, 82.7411, 0)
    manny:walkto(-1.0506, 0.2219, 0)
    END_CUT_SCENE()
    hk.cask_empty = TRUE
end
hk.skip_trap_raoul = function(arg1) -- line 990
    kill_override()
    stop_script(hk.pantry.use_scythe)
    stop_script(hk.almost_trap_raoul)
    stop_script(hk.raoul_leave_pantry)
    hk.cask_empty = TRUE
    raoul:free()
    glottis:free()
    hk:switch_to_set()
    hk.cask_actor:set_visibility(TRUE)
    manny:default()
    manny:put_in_set(hk)
    manny:setpos(-1.0506, 0.2219, 0)
    manny:setrot(0, 262, 0)
end
hk.set_up_baster = function(arg1) -- line 1010
    if hk.turkey_baster.touchable then
        if not hk.baster_actor then
            hk.baster_actor = Actor:create(nil, nil, nil, "turkey baster")
        end
        hk.baster_actor:set_costume("baster.cos")
        hk.baster_actor:put_in_set(hk)
        hk.baster_actor:setpos(-1.29752, -1.45604, 0.1859)
        hk.baster_actor:setrot(0, 133.475, 90)
        hk.baster_actor:set_visibility(TRUE)
    elseif hk.baster_actor then
        hk.baster_actor:set_costume(nil)
    end
end
hk.set_up_pantry_and_cask = function(arg1) -- line 1027
    NewObjectState(hk_cskws, OBJSTATE_STATE, "hk_pantry_doors.bm", "hk_pantry_doors.zbm")
    hk.pantry:set_object_state("hk_pantry.cos")
    if hk.pantry:is_open() then
        MakeSectorActive("pantry_box", TRUE)
        hk.pantry:play_chore(hk_pantry_set_open)
        MakeSectorActive("door1_box", FALSE)
        MakeSectorActive("door2_box", FALSE)
    else
        MakeSectorActive("pantry_box", FALSE)
        hk.pantry:play_chore(hk_pantry_set_closed)
        MakeSectorActive("door1_box", TRUE)
        MakeSectorActive("door2_box", TRUE)
    end
    if hk.pantry:is_locked() then
        hk.scythe_actor:default()
        hk.scythe_actor:play_chore(mc_pantry_scythe_end, "mc_pantry.cos")
    end
    hk.cask_actor:default()
end
hk.ladder_monitor = function(arg1) -- line 1050
    local local1
    local local2
    while hk.bMonitorLadder do
        if manny:find_sector_name("hkladder") then
            local1 = TRUE
            if manny.is_running then
                manny:set_run(FALSE)
                manny:force_auto_run(FALSE)
                stop_script(monitor_run)
                manny.is_running = FALSE
            end
            local2 = find_stair_chore()
            manny:set_walk_chore(local2)
            manny:set_turn_chores(-1, -1)
            if manny.is_backward then
                manny:set_walk_rate(-0.25)
            else
                manny:set_walk_rate(0.25)
            end
            manny:set_time_scale(0.75)
        elseif local1 then
            local1 = FALSE
            manny:set_turn_chores(ms_swivel_lf, ms_swivel_rt)
            if manny.is_backward then
                manny:set_walk_rate(-0.40000001)
            else
                manny:set_walk_rate(0.40000001)
            end
            if manny.is_running then
                manny:set_walk_chore(ms_run)
            elseif not manny.is_backward then
                manny:set_walk_chore(ms_walk)
            end
            manny:set_time_scale(1)
        end
        if manny:find_sector_name("pantry_top") or manny:find_sector_name("hkladder") then
            if not hk.upper_cask.touchable then
                hk.upper_cask:make_touchable()
            end
            if hk.lower_cask.touchable then
                hk.lower_cask:make_untouchable()
            end
        else
            if hk.upper_cask.touchable then
                hk.upper_cask:make_untouchable()
            end
            if not hk.lower_cask.touchable then
                hk.lower_cask:make_touchable()
            end
        end
        break_here()
    end
    manny:set_turn_chores(ms_swivel_lf, ms_swivel_rt)
    if manny.is_backward then
        manny:set_walk_rate(-0.40000001)
    else
        manny:set_walk_rate(0.40000001)
    end
    if manny.is_running then
        manny:set_walk_chore(ms_run)
    elseif not manny.is_backward then
        manny:set_walk_chore(ms_walk)
    end
    manny:set_time_scale(1)
end
hk.enter = function(arg1) -- line 1132
    if system.lastSet ~= hp and system.lastSet ~= he then
        he.aitor_downstairs = FALSE
    end
    if not hk.raoul_quit and not hk.raoul_trapped and hl.glottis_gambling then
        if hk.raoul_in_pantry then
            start_script(hk.raoul_leave_pantry)
        elseif not find_script(hk.raoul_in_the_kitchen) then
            start_script(hk.raoul_in_the_kitchen)
        end
    end
    if not hk.seen_swap then
        start_script(hk.put_up_new_cask, hk)
    end
    start_script(hk.set_up_pantry_and_cask)
    hk.upper_cask:make_touchable()
    hk.lower_cask:make_untouchable()
    hk.bMonitorLadder = TRUE
    start_script(hk.ladder_monitor, hk)
    hk:set_up_baster()
    start_sfx("he_hk_hp.imu", nil, 90)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -0.6, -0.4, 4)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(aitor.hActor, 0)
    SetActorShadowPoint(aitor.hActor, 0, 0.4, 4)
    SetActorShadowPlane(aitor.hActor, "shadow1")
    AddShadowPlane(aitor.hActor, "shadow1")
    SetActiveShadow(glottis.hActor, 0)
    SetActorShadowPoint(glottis.hActor, 0, 0.4, 4)
    SetActorShadowPlane(glottis.hActor, "shadow1")
    AddShadowPlane(glottis.hActor, "shadow1")
end
hk.exit = function() -- line 1179
    raoul:free()
    glottis:free()
    hk.cask_actor:free()
    hk.scythe_actor:free()
    stop_script(hk.raoul_in_the_kitchen)
    stop_script(hk.raoul_leave_pantry)
    if hk.raoul_in_pantry and hk.pantry:is_open() then
        hk.raoul_in_pantry = FALSE
    end
    hk.bMonitorLadder = FALSE
    stop_sound("he_hk_hp.imu")
    stop_sound("hkCaskRl.imu")
    KillActorShadows(manny.hActor)
    KillActorShadows(aitor.hActor)
    KillActorShadows(glottis.hActor)
end
hk.pantry = Object:create(hk, "/hktx081/pantry", 0.15539999, -0.107379, 0.40560001, { range = 0.89999998 })
hk.pantry.use_pnt_x = -0.15346
hk.pantry.use_pnt_y = -0.099749997
hk.pantry.use_pnt_z = 0
hk.pantry.use_rot_x = 0
hk.pantry.use_rot_y = 269.978
hk.pantry.use_rot_z = 0
hk.pantry.passage = { "pantry_box" }
Object.close(hk.pantry)
hk.pantry.lookAt = function(arg1) -- line 1222
    if hk.raoul_quit then
        manny:say_line("/hkma084/")
    elseif hk.raoul_trapped then
        manny:say_line("/hkma082/")
    elseif hk.raoul_in_pantry then
        manny:say_line("/hkma083/")
    else
        manny:say_line("/hkma084/")
    end
end
hk.pantry.open = function(arg1) -- line 1238
    if not hk.pantry.locked then
        if not hk.raoul_in_pantry then
            MakeSectorActive("pantry_box", TRUE)
        end
        MakeSectorActive("door1_box", FALSE)
        MakeSectorActive("door2_box", FALSE)
        hk.pantry.opened = TRUE
    end
end
hk.pantry.close = function(arg1) -- line 1249
    arg1.opened = FALSE
    MakeSectorActive("pantry_box", FALSE)
    MakeSectorActive("door1_box", TRUE)
    MakeSectorActive("door2_box", TRUE)
end
hk.pantry.use = function(arg1) -- line 1257
    if arg1.opened then
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        hk.pantry:manny_close()
        arg1:close()
        END_CUT_SCENE()
    elseif not hk.pantry.locked then
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        hk.pantry:manny_open()
        END_CUT_SCENE()
        arg1:open()
    elseif hk.raoul_trapped and not hk.raoul_quit then
        manny:say_line("/hkma085/")
    else
        START_CUT_SCENE()
        hk:remove_scythe()
        END_CUT_SCENE()
    end
end
hk.pantry.use_scythe = function(arg1) -- line 1283
    if hk.raoul_in_kitchen and not hk.raoul_in_pantry then
        system.default_response("hes watching")
    else
        START_CUT_SCENE()
        hk.pantry:lock()
        manny:wait_for_actor()
        if hk.pantry:is_open() then
            manny:clear_hands()
            hk.pantry:use()
            manny.is_holding = mo.scythe
            close_inventory()
        end
        manny:wait_for_actor()
        manny:walkto(-0.19374, -0.11101, 0, 0, 270, 0)
        manny:wait_for_actor()
        break_here()
        manny:set_costume(nil)
        manny:set_costume("mc_pantry.cos")
        manny:play_chore(mc_pantry_scythe_block, "mc_pantry.cos")
        manny:wait_for_chore(mc_pantry_scythe_block, "mc_pantry.cos")
        manny:stop_chore(mc_pantry_scythe_block, "mc_pantry.cos")
        mo.scythe:put_in_limbo()
        hk.scythe_actor:default()
        hk.scythe_actor:play_chore(mc_pantry_scythe_end, "mc_pantry.cos")
        manny:default("cafe")
        if not hk.raoul_in_pantry then
            manny:say_line("/hkma086/")
        end
        END_CUT_SCENE()
        if hk.raoul_in_pantry and not hk.raoul_quit then
            if not find_script(hk.trap_raoul) then
                start_script(hk.trap_raoul)
            end
        end
    end
end
hk.pantry.manny_open = function(arg1) -- line 1323
    manny:push_costume("mc_pantry.cos")
    manny:play_chore(mc_pantry_open_pantry, "mc_pantry.cos")
    sleep_for(1000)
    arg1:open_anim()
    manny:wait_for_chore(mc_pantry_open_pantry, "mc_pantry.cos")
    manny:pop_costume()
end
hk.pantry.manny_close = function(arg1) -- line 1332
    manny:push_costume("mc_pantry.cos")
    manny:play_chore(mc_pantry_close_pantry, "mc_pantry.cos")
    sleep_for(800)
    arg1:close_anim()
    manny:wait_for_chore(mc_pantry_close_pantry, "mc_pantry.cos")
    manny:pop_costume()
end
hk.pantry.open_anim = function(arg1, arg2) -- line 1341
    arg1:play_chore(hk_pantry_open)
    if arg2 then
        arg1:wait_for_chore(hk_pantry_open)
    end
end
hk.pantry.close_anim = function(arg1, arg2) -- line 1348
    arg1:play_chore(hk_pantry_close)
    if arg2 then
        arg1:wait_for_chore(hk_pantry_close)
    end
end
hk.turkey_baster = Object:create(hk, "/hktx087/turkey baster", -1.31265, -1.46042, 0.2122, { range = 0.69999999 })
hk.turkey_baster.use_pnt_x = -1.17172
hk.turkey_baster.use_pnt_y = -1.4248101
hk.turkey_baster.use_pnt_z = 0
hk.turkey_baster.use_rot_x = 0
hk.turkey_baster.use_rot_y = 97.965897
hk.turkey_baster.use_rot_z = 0
hk.turkey_baster.string_name = "turkey_baster"
hk.turkey_baster.full = FALSE
hk.turkey_baster.lookAt = function(arg1) -- line 1369
    arg1.seen = TRUE
    if arg1.full then
        manny:say_line("/hkma088/")
    else
        manny:say_line("/hkma089/")
    end
end
hk.turkey_baster.pickUp = function(arg1) -- line 1378
    START_CUT_SCENE()
    preload_sfx("tkBstEmp.wav")
    box_on("baster_box")
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:play_chore(mc_reach_med, "mc.cos")
    sleep_for(200)
    start_sfx("pikUpSm1.wav")
    sleep_for(300)
    hk.baster_actor:put_in_set(nil)
    hk.baster_actor:free()
    manny:generic_pickup(hk.turkey_baster)
    sleep_for(500)
    if not arg1.seen then
        arg1:lookAt()
    end
    manny:walkto(-1.01433, -1.2922, 0.01, 0, 277.703, 0)
    manny:wait_for_actor()
    box_off("baster_box")
    END_CUT_SCENE()
end
hk.turkey_baster.use = function(arg1) -- line 1401
    if arg1.owner ~= manny then
        arg1:pickUp()
    elseif arg1.full then
        manny:say_line("/hkma090/")
    else
        system.default_response("empty")
    end
end
hk.cans1 = Object:create(hk, "/hktx091/cans", -0.81084001, 1.285, 0.75, { range = 0.89999998 })
hk.cans1.use_pnt_x = -0.57084101
hk.cans1.use_pnt_y = 1.075
hk.cans1.use_pnt_z = 0
hk.cans1.use_rot_x = 0
hk.cans1.use_rot_y = -339.52399
hk.cans1.use_rot_z = 0
hk.cans1.lookAt = function(arg1) -- line 1422
    start_script(hk.look_meat)
end
hk.cans1.pickUp = function(arg1) -- line 1426
    if not hk.cans1.seen then
        soft_script()
        start_script(hk.cans1.lookAt)
        wait_for_message()
    end
    manny:say_line("/hkma092/")
end
hk.cans1.use = hk.cans1.pickUp
hk.cans2 = Object:create(hk, "/hktx093/cans", -0.23084, 1.285, 0.75, { range = 0.89999998 })
hk.cans2.parent = hk.cans1
hk.lower_cask = Object:create(hk, "/hktx094/cask", -0.202126, 0.60840797, 0.47, { range = 0.56800002 })
hk.lower_cask.use_pnt_x = -0.44212601
hk.lower_cask.use_pnt_y = 0.60840797
hk.lower_cask.use_pnt_z = 0
hk.lower_cask.use_rot_x = 0
hk.lower_cask.use_rot_y = -90.2407
hk.lower_cask.use_rot_z = 0
hk.lower_cask.lookAt = function(arg1) -- line 1452
    if not hk.cask_empty then
        manny:say_line("/hkma095/")
    else
        manny:say_line("/hkma096/")
    end
end
hk.lower_cask.pickUp = function(arg1) -- line 1460
    system.default_response("hernia")
end
hk.lower_cask.use = function(arg1) -- line 1464
    hk.spigot:use()
end
hk.upper_cask = Object:create(hk, "/hktx097/cask top", 0.042674098, 0.495, 1.09, { range = 0.80000001 })
hk.upper_cask.use_pnt_x = 0.192674
hk.upper_cask.use_pnt_y = 0.27500001
hk.upper_cask.use_pnt_z = 0.79000002
hk.upper_cask.use_rot_x = 0
hk.upper_cask.use_rot_y = 19.224001
hk.upper_cask.use_rot_z = 0
hk.upper_cask.lookAt = function(arg1) -- line 1476
    if arg1:is_open() then
        manny:say_line("/hkma098/")
    else
        manny:say_line("/hkma099/")
    end
end
hk.upper_cask.pickUp = function(arg1) -- line 1484
    system.default_response("hernia")
end
hk.upper_cask.use = function(arg1) -- line 1488
    if hk.upper_cask:is_open() then
        if hk.raoul_quit then
            system.default_response("already")
        else
            hk:stowaway()
        end
    else
        manny:say_line("/hkma100/")
    end
end
hk.upper_cask.use_opener = function(arg1) -- line 1500
    if hk.cask_empty then
        arg1:open()
        ks.opener:put_in_limbo()
        START_CUT_SCENE()
        manny:walkto(0.10168, 0.28562, 0.78821, 0, 6.394, 0)
        manny:wait_for_actor()
        break_here()
        manny:push_costume("manny_cut_cask.cos")
        manny.is_holding = nil
        manny:stop_chore(mc_hold, "mc.cos")
        manny:stop_chore(mc_activate_opener, "mc.cos")
        manny:play_chore(manny_cut_cask_open_cask, "manny_cut_cask.cos")
        manny:wait_for_chore(manny_cut_cask_open_cask, "manny_cut_cask.cos")
        manny:stop_chore(manny_cut_cask_open_cask, "manny_cut_cask.cos")
        manny:pop_costume()
        start_sfx("canodrop.wav")
        END_CUT_SCENE()
    else
        manny:say_line("/hkma101/")
        wait_for_message()
        manny:say_line("/hkma102/")
    end
end
hk.spigot = Object:create(hk, "/hktx103/spigot", -0.25212499, 0.75840801, 0.40000001, { range = 0.60000002 })
hk.spigot.use_pnt_x = -0.50125802
hk.spigot.use_pnt_y = 0.45089701
hk.spigot.use_pnt_z = 0
hk.spigot.use_rot_x = 0
hk.spigot.use_rot_y = 328.70599
hk.spigot.use_rot_z = 0
hk.spigot.lookAt = function(arg1) -- line 1534
    if hk.cask_empty then
        manny:say_line("/hkma104/")
    else
        manny:say_line("/hkma105/")
    end
end
hk.spigot.use = function(arg1) -- line 1542
    if hk.cask_empty then
        START_CUT_SCENE()
        manny:walkto_object(hk.spigot)
        manny:play_chore(mc_hand_on_obj, "mc.cos")
        manny:wait_for_chore(mc_hand_on_obj, "mc.cos")
        sleep_for(1000)
        manny:say_line("/hkma106/")
        manny:play_chore(mc_hand_off_obj, "mc.cos")
        manny:wait_for_chore(mc_hand_off_obj, "mc.cos")
        manny:stop_chore(mc_hand_off_obj, "mc.cos")
        END_CUT_SCENE()
    else
        hk.spill_wine()
    end
end
hk.hl_door = Object:create(hk, "/hktx107/door", -1.53781, 0.247998, 0.5, { range = 0.60000002 })
hk.hl_box = hk.hl_door
hk.hl_door.use_pnt_x = -1.3292
hk.hl_door.use_pnt_y = 0.34085199
hk.hl_door.use_pnt_z = 0
hk.hl_door.use_rot_x = 0
hk.hl_door.use_rot_y = -996.15698
hk.hl_door.use_rot_z = 0
hk.hl_door.out_pnt_x = -1.525
hk.hl_door.out_pnt_y = 0.36189801
hk.hl_door.out_pnt_z = 0
hk.hl_door.out_rot_x = 0
hk.hl_door.out_rot_y = -996.15698
hk.hl_door.out_rot_z = 0
hk.hl_door.touchable = FALSE
hk.hl_door.walkOut = function(arg1) -- line 1586
    hl:come_out_door(hl.hk_door)
end
hk.hl_door.lookAt = function(arg1) -- line 1590
    hk:stowaway()
end
hk.he_door = Object:create(hk, "/hktx108/door", 0.66874599, -1.1433901, 0.46000001, { range = 0.60000002 })
hk.he_box = hk.he_door
hk.he_door.use_pnt_x = 0.34310499
hk.he_door.use_pnt_y = -1.22596
hk.he_door.use_pnt_z = 0
hk.he_door.use_rot_x = 0
hk.he_door.use_rot_y = -114.147
hk.he_door.use_rot_z = 0
hk.he_door.out_pnt_x = 0.45079899
hk.he_door.out_pnt_y = -1.2742
hk.he_door.out_pnt_z = 0
hk.he_door.out_rot_x = 0
hk.he_door.out_rot_y = -114.147
hk.he_door.out_rot_z = 0
hk.he_door.touchable = FALSE
hk.he_door.walkOut = function(arg1) -- line 1616
    he:come_out_door(he.hk_door)
end
hk.hp_door = Object:create(hk, "/hktx109/pantry", 0.0021869901, -0.132002, 0.46000001, { range = 0 })
hk.hp_door.use_pnt_x = -0.12865099
hk.hp_door.use_pnt_y = -0.088504396
hk.hp_door.use_pnt_z = 0
hk.hp_door.use_rot_x = 0
hk.hp_door.use_rot_y = -82.705704
hk.hp_door.use_rot_z = 0
hk.hp_door.out_pnt_x = 0.14630499
hk.hp_door.out_pnt_y = -0.0533056
hk.hp_door.out_pnt_z = 0
hk.hp_door.out_rot_x = 0
hk.hp_door.out_rot_y = -82.705704
hk.hp_door.out_rot_z = 0
hk.hp_door:make_untouchable()
hk.hp_box = hk.hp_door
hk.hp_door.walkOut = function(arg1) -- line 1644
    if not manny:find_sector_name("pantry_top") then
        hp:come_out_door(hp.hk_door)
    end
end
hk_pantry_open = 0
hk_pantry_close = 1
hk_pantry_set_open = 2
hk_pantry_set_closed = 3
hl_elev_Chore0 = 0
hl_elev_Chore1 = 1
CheckFirstTime("hl.lua")
dofile("raoul_bored.lua")
dofile("nick_idles.lua")
dofile("gl_gamble.lua")
hl = Set:create("hl.set", "high roller lounge", { hl_dorrv = 0, hl_dorrv2 = 0, hl_elews = 1, hl_elews2 = 1, hl_glot = 2, hl_ovrhd = 3, hl_nikcu = 4 })
hl.raoul_idle_in_view = FALSE
hl.talking_to_nick = FALSE
hl.nick_leaves = function() -- line 23
    hl.nick_gone = TRUE
    hl.virago_obj:make_untouchable()
    START_CUT_SCENE()
    virago:wait_for_chore(nick_idles_tap_loop)
    virago:stop_chore(nick_idles_tap_loop)
    virago:stop_chore(nick_idles_kckbk_hld)
    virago:play_chore(nick_idles_stnd_walk)
    virago:wait_for_chore()
    virago:set_costume("nick_walk.cos")
    virago:set_walk_chore(0, "nick_walk.cos")
    virago:setpos(2.41821, -2.65785, 0)
    virago:setrot(0, -20, 0)
    virago:follow_boxes()
    hl:current_setup(0)
    MakeSectorActive("nick_walk", FALSE)
    END_CUT_SCENE()
    virago:walkto(1.26668, 2.64996, 0)
    while virago:is_moving() and hl:current_setup() == hl_dorrv do
        break_here()
    end
    virago:free()
    MakeSectorActive("nick_walk", TRUE)
end
hl.talk_about_terry = function(arg1) -- line 49
    START_CUT_SCENE()
    manny:say_line("/hlma094/")
    manny:wait_for_message()
    if manny.is_holding then
        put_away_held_item()
    end
    END_CUT_SCENE()
    start_script(cut_scene.puzl39, cut_scene)
end
hl.blackmail_virago = function(arg1) -- line 60
    hl.virago_blackmailed = TRUE
    START_CUT_SCENE()
    manny:say_line("/hlma095/")
    if not manny.is_holding then
        shrinkBoxesEnabled = FALSE
        open_inventory(TRUE, TRUE)
        manny.is_holding = tb.blackmail_photo
        close_inventory()
    end
    manny:play_chore(mc_use_obj, manny.base_costume)
    virago:stop_chore(nick_idles_pprwrk_base)
    virago:play_chore(nick_idles_lkma)
    sleep_for(1000)
    wait_for_message()
    manny:wait_for_chore(mc_use_obj, manny.base_costume)
    manny:say_line("/hlma096/")
    manny:wait_for_message()
    manny:clear_hands()
    shrinkBoxesEnabled = TRUE
    virago:say_line("/hlvi097/")
    virago:wait_for_message()
    END_CUT_SCENE()
    if dd.terry_arrested then
        hl.talk_about_terry()
        return TRUE
    else
        START_CUT_SCENE()
        manny:say_line("/hlma098/")
        manny:wait_for_message()
        manny:say_line("/hlma099/")
        manny:wait_for_message()
        END_CUT_SCENE()
    end
    virago:wait_for_message()
    virago:stop_chore(nick_idles_lkma)
    virago:play_chore(nick_idles_lkma_2pprwrk)
    virago:wait_for_chore()
    virago:stop_chore(nick_idles_lkma_2pprwrk)
    start_script(hl.virago_idles)
    hl:current_setup(hl_dorrv)
end
hl.virago_idles = function() -- line 104
    local local1
    local local2
    if hl.current_setup == hl_nikcu then
        hl:current_setup(hl_dorrv)
    end
    virago.down = TRUE
    virago.stop_idle = FALSE
    while not virago.stop_idle do
        local1 = rndint(2)
        virago:stop_chore(nick_idles_pprwrk_base)
        if local1 == 0 then
            virago:play_chore(nick_idles_pprwrk_smoke)
            virago:wait_for_chore()
            virago:stop_chore(nick_idles_pprwrk_smoke)
            virago:play_chore(nick_idles_pprwrk_2smk_hld2)
            virago:wait_for_chore()
            virago:play_chore(nick_idles_pprwrk_2smk_hld2)
            virago:play_chore(nick_idles_pprwrk_smk2base)
            virago:wait_for_chore()
            virago:wait_here(rndint(1, 4))
            virago:stop_chore(nick_idles_pprwrk_smk2base)
        elseif local1 == 1 then
            virago:play_chore(nick_idles_nod)
            virago:wait_for_chore()
            virago:stop_chore(nick_idles_nod)
        else
            virago:play_chore(nick_idles_lkma)
            virago:wait_for_chore()
            virago:wait_here(rndint(2))
            virago:play_chore(nick_idles_lkma_nod_lp)
            virago:wait_for_chore()
            virago:stop_chore(nick_idles_lkma_nod_lp)
            virago:play_chore(nick_idles_lkma_2pprwrk)
            virago:wait_for_chore()
            virago:stop_chore(nick_idles_lkma_2pprwrk)
        end
        virago:play_chore(nick_idles_pprwrk_base)
        virago:wait_here(rndint(3))
        virago:head_look_at(nil)
    end
end
glottis.gambles = { }
glottis.gambles["/hlgl100/"] = 0.050000001
glottis.gambles["/hlgl101/"] = 0.050000001
glottis.gambles["/hlgl102/"] = 0.050000001
glottis.gambles["/hlgl103/"] = 0.050000001
glottis.gambles["/hlgl104/"] = 0.050000001
glottis.gambles["/hlgl105/"] = 0.050000001
glottis.gambles["/hlgl106/"] = 0.050000001
glottis.gambles["/hlgl107/"] = 0.050000001
glottis.gambles["/hlgl108/"] = 0.050000001
glottis.gambles["/hlgl109/"] = 0.050000001
glottis.gambles["/hlgl110/"] = 0.050000001
glottis.gambles["/hlgl111/"] = 0.050000001
glottis.gambles["/hlgl112/"] = 0.050000001
glottis.gambles["/hlgl113/"] = 0.050000001
glottis.gambles["/hlgl114/"] = 0.025
glottis.gambles["/hlgl115/"] = 0.025
glottis.gambles["/hlgl116/"] = 0.050000001
glottis.gambles["/hlgl117/"] = 0.050000001
glottis.gambles["/hlgl118/"] = 0.025
glottis.gambles["/hlgl119/"] = 0.050000001
glottis.gambles["/hlgl120/"] = 0.025
glottis.gambles["/hlgl121/"] = 0.025
glottis.gambles["/hlgl122/"] = 0.025
glottis.gambling_volume = 100
glottis.gambling_pan = 64
hl.glottis_idle = function(arg1) -- line 185
    local local1
    local local2
    glottis:play_chore_looping(gl_gamble_rest_gambling2, "gl_gamble.cos")
    local2 = 7
    break_here()
    while TRUE do
        while local2 <= 15 do
            hl:check_glottis_volume(hl:current_setup())
            local1 = pick_from_weighted_table(glottis.gambles)
            if rnd(5) then
                start_script(hl.glottis_ramble, hl)
            else
                glottis:play_chore(glottis_tux_blink, "glottis_tux.cos")
            end
            if IsMessageGoing() then
                glottis:say_line(local1, { background = TRUE, volume = 10, pan = glottis.gambling_pan, skip_log = TRUE })
            else
                glottis:say_line(local1, { background = TRUE, volume = glottis.gambling_volume, pan = glottis.gambling_pan, skip_log = TRUE })
            end
            if rnd(7) and not hk.raoul_trapped then
                sleep_for(rndint(1000, 2000))
                glottis:wait_for_message()
                hl:glottis_drink()
            end
            sleep_for(3000 + 3000 * random())
            local2 = local2 + 1
        end
        local2 = 1
        if not hk.raoul_trapped then
            hl:check_glottis_volume(hl:current_setup())
            hl:glottis_look_back()
            hl:glottis_look_back_talk()
            glottis:say_line(pick_one_of({ "/hlgl123/", "/hlgl124/", "/hlgl125/", "/hlgl126/", "/hlgl127/", "/hlgl128/", "/hlgl129/", "/hlgl130/", "/hlgl131/", "/hlgl132/", "/hlgl133/", "/hlgl134/", "/hlgl135/", "/hlgl136/" }), { background = TRUE, volume = glottis.gambling_volume, pan = glottis.gambling_pan })
            glottis:wait_for_message()
            hl:glottis_stop_look_back_talk()
            hl:check_glottis_volume(hl:current_setup())
            glottis:say_line("/hlgl137/", { background = TRUE, volume = glottis.gambling_volume, pan = glottis.gambling_pan })
            glottis:wait_for_message()
            hl:glottis_stop_look_back()
            if rnd(8) then
                sleep_for(2000)
                hl:glottis_look_back()
                hl:glottis_look_back_talk()
                hl:check_glottis_volume(hl:current_setup())
                glottis:say_line("/hlgl138/", { background = TRUE, volume = glottis.gambling_volume, pan = glottis.gambling_pan })
                glottis:wait_for_message()
                hl:glottis_stop_look_back_talk()
                hl:glottis_stop_look_back()
            end
            sleep_for(1000)
        end
    end
end
hl.glottis_look_left = function(arg1) -- line 265
    glottis:wait_for_chore()
    glottis:play_chore(glottis_tux_right_smirk, "glottis_tux.cos")
    sleep_for(1000)
    glottis:stop_chore(gl_gamble_rest_gambling2, "gl_gamble.cos")
    glottis:play_chore(gl_gamble_lk_left, "gl_gamble.cos")
    glottis:wait_for_chore(gl_gamble_lk_left, "gl_gamble.cos")
    glottis:stop_chore(gl_gamble_lk_left, "gl_gamble.cos")
    glottis:play_chore_looping(gl_gamble_left_hold, "gl_gamble.cos")
end
hl.glottis_stop_look_left = function(arg1) -- line 276
    stop_script(hl.glottis_look_left)
    glottis:stop_chore(gl_gamble_left_hold, "gl_gamble.cos")
    glottis:play_chore(gl_gamble_left_back_rest_gambling, "gl_gamble.cos")
    glottis:wait_for_chore(gl_gamble_left_back_rest_gambling, "gl_gamble.cos")
    glottis:stop_chore(gl_gamble_left_back_rest_gambling, "gl_gamble.cos")
    glottis:play_chore_looping(gl_gamble_rest_gambling2, "gl_gamble.cos")
end
hl.glottis_look_back = function(arg1) -- line 285
    glottis:wait_for_chore()
    glottis:play_chore(glottis_tux_left_smirk, "glottis_tux.cos")
    sleep_for(1000)
    glottis:stop_chore(gl_gamble_rest_gambling2, "gl_gamble.cos")
    glottis:play_chore(gl_gamble_turn_speak, "gl_gamble.cos")
    glottis:wait_for_chore(gl_gamble_turn_speak, "gl_gamble.cos")
    glottis:stop_chore(gl_gamble_turn_speak, "gl_gamble.cos")
    glottis:play_chore_looping(gl_gamble_speak_pos2, "gl_gamble.cos")
end
hl.glottis_stop_look_back = function(arg1) -- line 296
    stop_script(hl.glottis_look_back)
    if glottis:is_choring(gl_gamble_talks_drunk, FALSE, "gl_gamble.cos") then
        hl:glottis_stop_look_back_talk()
    end
    glottis:stop_chore(gl_gamble_speak_pos2, "gl_gamble.cos")
    glottis:play_chore(gl_gamble_speak_to_rest_gambling, "gl_gamble.cos")
    glottis:wait_for_chore(gl_gamble_speak_to_rest_gambling, "gl_gamble.cos")
    glottis:stop_chore(gl_gamble_speak_to_rest_gambling, "gl_gamble.cos")
    glottis:play_chore_looping(gl_gamble_rest_gambling2, "gl_gamble.cos")
end
hl.glottis_look_back_talk = function(arg1) -- line 308
    glottis:wait_for_chore()
    if not glottis:is_choring(gl_gamble_speak_pos2, FALSE, "gl_gamble.cos") then
        hl:glottis_look_back()
    end
    glottis:stop_chore(gl_gamble_speak_pos2, "gl_gamble.cos")
    glottis:play_chore_looping(gl_gamble_talks_drunk, "gl_gamble.cos")
end
hl.glottis_stop_look_back_talk = function(arg1) -- line 317
    glottis:set_chore_looping(gl_gamble_talks_drunk, FALSE, "gl_gamble.cos")
    glottis:wait_for_chore(gl_gamble_talks_drunk, "gl_gamble.cos")
    glottis:stop_chore(gl_gamble_talks_drunk, "gl_gamble.cos")
    glottis:play_chore_looping(gl_gamble_speak_pos2, "gl_gamble.cos")
end
hl.glottis_ramble = function(arg1) -- line 324
    glottis:wait_for_chore()
    glottis:stop_chore(gl_gamble_rest_gambling2, "gl_gamble.cos")
    glottis:play_chore(glottis_tux_eye_buldge, "glottis_tux.cos")
    glottis:play_chore(gl_gamble_drunk_rambles, "gl_gamble.cos")
    glottis:wait_for_chore(gl_gamble_drunk_rambles, "gl_gamble.cos")
    glottis:stop_chore(gl_gamble_drunk_rambles, "gl_gamble.cos")
    glottis:play_chore(glottis_tux_blink, "glottis_tux.cos")
    glottis:play_chore_looping(gl_gamble_rest_gambling2, "gl_gamble.cos")
end
hl.glottis_drink = function(arg1) -- line 335
    if find_script(hl.glottis_ramble) then
        wait_for_script(hl.glottis_ramble)
    end
    if hl:current_setup() == hl_glot then
        hl.slurp_vol = 127
    else
        hl.slurp_vol = 64
    end
    glottis:stop_chore(gl_gamble_drunk_rambles, "gl_gamble.cos")
    glottis:stop_chore(gl_gamble_rest_gambling2, "gl_gamble.cos")
    glottis:play_chore(glottis_tux_stop_talk, "glottis_tux.cos")
    glottis:play_chore(glottis_tux_blink, "glottis_tux.cos")
    glottis:play_chore(gl_gamble_drink_wine, "gl_gamble.cos")
    sleep_for(1250)
    start_sfx(pick_one_of({ "glSlurp1.WAV", "glSlurp2.WAV", "glSlurp3.WAV", "glSlurp4.WAV" }), nil, hl.slurp_vol)
    glottis:wait_for_chore(gl_gamble_drink_wine, "gl_gamble.cos")
    glottis:stop_chore(gl_gamble_drink_wine, "gl_gamble.cos")
    glottis:play_chore_looping(gl_gamble_rest_gambling2, "gl_gamble.cos")
end
raoul.idle_table = Idle:create("raoul_bored")
raoul.idle_table:add_state("shakes_ankle", { shakes_ankle = 0.80000001, scratches_head = 0.1, cigarette_drag = 0.1 })
raoul.idle_table:add_state("scratches_head", { shakes_ankle = 1 })
raoul.idle_table:add_state("cigarette_drag", { shakes_ankle = 1 })
hl.raoul_paths = { }
hl.raoul_paths.num_paths = 0
hl.raoul_paths.add_path = function(arg1, arg2, arg3, arg4) -- line 376
    local local1
    arg1.num_paths = arg1.num_paths + 1
    local1 = arg1.num_paths
    arg1[local1] = { }
    arg1[local1].setup = arg2
    arg1[local1].next_setup = arg3
    arg1[local1].points = { }
    arg1[local1].num_points = 0
    if not arg4 then
        arg1[local1].delay = 10000
    else
        arg1[local1].delay = arg4
    end
    return arg1[local1]
end
hl.raoul_paths.add_point = function(arg1, arg2, arg3, arg4, arg5, arg6) -- line 396
    arg2.num_points = arg2.num_points + 1
    arg2.points[arg2.num_points] = { }
    arg2.points[arg2.num_points].x = arg3
    arg2.points[arg2.num_points].y = arg4
    arg2.points[arg2.num_points].z = arg5
    arg2.points[arg2.num_points].yaw = arg6
end
hl.raoul_paths.init = function(arg1) -- line 405
    local local1
    if not arg1.initialized then
        arg1.initialized = TRUE
        local1 = hl.raoul_paths:add_path(hl_glot, hl_elews, 5000)
        hl.raoul_paths:add_point(local1, 0.76425099, 4.2552299, 1.9, 76)
        hl.raoul_paths:add_point(local1, -1.22183, 4.2641301, 1.9, 97)
        local1 = hl.raoul_paths:add_path(hl_glot, hl_elews, 10000)
        hl.raoul_paths:add_point(local1, -1.4281, 1.4573801, 1.9, 12)
        hl.raoul_paths:add_point(local1, -1.69583, 3.0841401, 1.9, 48)
        local1 = hl.raoul_paths:add_path(hl_dorrv, hl_elews)
        hl.raoul_paths:add_point(local1, -2.6301501, -2.2046499, 0, 1)
        hl.raoul_paths:add_point(local1, -2.6401701, -0.238925, 0, 355)
        local1 = hl.raoul_paths:add_path(hl_dorrv, hl_elews)
        hl.raoul_paths:add_point(local1, 1.93304, 2.12763, 0, 56)
        hl.raoul_paths:add_point(local1, 1.0224, 2.6998, 0, 90)
        local1 = hl.raoul_paths:add_path(hl_elews, hl_dorrv, 15000)
        hl.raoul_paths:add_point(local1, 0.329593, 3.18448, 0.38685301, 186)
        hl.raoul_paths:add_point(local1, 0.52750099, 2.54091, 0, 270)
        hl.raoul_paths:add_point(local1, 1.8327, 2.5434201, 0, 270)
        local1 = hl.raoul_paths:add_path(hl_elews, hl_dorrv, 15000)
        hl.raoul_paths:add_point(local1, -2.63662, -0.190025, 0, 155)
        hl.raoul_paths:add_point(local1, -2.68909, -0.99633098, 0, 202)
        local1 = hl.raoul_paths:add_path(hl_elews, hl_glot, 15000)
        hl.raoul_paths:add_point(local1, -1.00367, 1.00269, 0, 84)
        hl.raoul_paths:add_point(local1, -1.79219, 1.02162, 0, 89)
        hl.raoul_paths:add_point(local1, -1.6125, 2.37696, 0, 248)
        hl.raoul_paths:add_point(local1, 0.053780999, 2.00248, 0, 270)
        hl.raoul_paths.setup_paths = { }
        hl.raoul_paths.setup_paths[hl_glot] = { 1 }
        hl.raoul_paths.setup_paths[hl_dorrv] = { 3, 4 }
        hl.raoul_paths.setup_paths[hl_elews] = { 2, 5, 6 }
        arg1.cur_setup = hl_glot
    end
end
hl.raoul_paths.run_path = function(arg1, arg2) -- line 455
    local local1, local2
    local1, local2 = next(arg2.points, nil)
    if local1 then
        raoul:default("walks")
        raoul:put_in_set(hl)
        raoul:setpos(local2.x, local2.y, local2.z)
        raoul:setrot(0, local2.yaw, 0)
        raoul:set_collision_mode(COLLISION_SPHERE, 0.40000001)
        manny.collision_handler = manny.hl_collision_handler
        local1, local2 = next(arg2.points, local1)
        while local1 ~= nil and not arg1.finish_run_path do
            raoul:walkto(local2.x, local2.y, local2.z)
            while raoul:is_moving() and not arg1.finish_run_path do
                break_here()
            end
            local1, local2 = next(arg2.points, local1)
        end
        raoul:put_in_set(nil)
        arg1.cur_setup = arg2.next_setup
        arg1.finish_run_path = FALSE
    end
end
manny.hl_collision_handler = function(arg1, arg2) -- line 482
    if arg2 == raoul then
        hk:raoul_collision()
        raoul:wait_for_message()
    end
end
hl.raoul_paths.gambling_tour = function(arg1) -- line 489
    local local1, local2
    local local3
    arg1.pause_gambling_tour = FALSE
    while TRUE do
        if arg1.cur_setup == hl_glot then
            local2 = rndint(1, 2)
        elseif arg1.cur_setup == hl_dorrv then
            local2 = rndint(3, 4)
        elseif arg1.cur_setup == hl_elews then
            local2 = rndint(5, 6)
        end
        local1 = arg1[local2]
        local3 = 0
        while local3 < local1.delay and not arg1.pause_gambling_tour do
            break_here()
            local3 = local3 + system.frameTime
        end
        if arg1.pause_gambling_tour then
            while arg1.pause_gambling_tour do
                break_here()
            end
        else
            arg1.cur_setup = local1.next_setup
        end
    end
end
hl.raoul_paths.check_for_raoul_setup = function(arg1, arg2) -- line 524
    local local1, local2
    local local3, local4
    local local5, local6
    local local7, local8
    local local9
    if find_script(arg1.glimpse_raoul) then
        arg1.finish_run_path = TRUE
    elseif find_script(arg1.gambling_tour) then
        if arg1.cur_setup then
            local2 = arg1.setup_paths[arg2]
            if local2 then
                local3 = 0
                local9 = nil
                local6, local5 = next(local2, nil)
                while local6 do
                    local1 = arg1[local5]
                    if local1 ~= nil and local1.setup == arg1.cur_setup then
                        local7, local8 = next(local1.points, nil)
                        local4 = proximity(manny.hActor, local8.x, local8.y, local8.z)
                        if local4 > local3 then
                            local3 = local4
                            local9 = local1
                        end
                    end
                    local6, local5 = next(local2, local6)
                end
                if local9 then
                    single_start_script(arg1.glimpse_raoul, arg1, local9)
                end
            end
        end
    end
end
hl.raoul_paths.glimpse_raoul = function(arg1, arg2) -- line 563
    arg1.pause_gambling_tour = TRUE
    arg1:run_path(arg2)
    arg1.pause_gambling_tour = FALSE
end
hl.raoul_paths.leave_kitchen = function(arg1) -- line 569
    arg1.pause_gambling_tour = TRUE
    hk.raoul_in_kitchen = FALSE
    arg1:run_path(arg1[7])
    single_start_script(arg1.gambling_tour, arg1)
end
hl.set_up_actors = function(arg1) -- line 581
    hk.cask_actor:default()
    hk.cask_actor:put_in_set(hl)
    hk.cask_actor:setpos(-0.358381, 0.906964, 0)
    hk.cask_actor:setrot(0, 268.437, 0)
    if not cigcase_actor then
        cigcase_actor = Actor:create(nil, nil, nil, "cigcase")
    end
    cigcase_actor:set_costume("cigcase.cos")
    cigcase_actor:setpos({ x = 2.44585, y = -4.67677, z = 0.265 })
    cigcase_actor:setrot(0, 140.125, 0)
    cigcase_actor:put_in_set(hl)
    if hl.case.touchable then
        cigcase_actor:set_visibility(TRUE)
    else
        cigcase_actor:set_visibility(FALSE)
    end
    if hl.nick_gone then
        hl.virago_obj:make_untouchable()
    else
        virago:set_costume("nick_idles.cos")
        virago:set_head(3, 4, 5, 165, 28, 80)
        virago:set_mumble_chore(nick_idles_mumble)
        virago:set_talk_chore(1, nick_idles_no_talk)
        virago:set_talk_chore(2, nick_idles_a)
        virago:set_talk_chore(3, nick_idles_c)
        virago:set_talk_chore(4, nick_idles_e)
        virago:set_talk_chore(5, nick_idles_f)
        virago:set_talk_chore(6, nick_idles_l)
        virago:set_talk_chore(7, nick_idles_m)
        virago:set_talk_chore(8, nick_idles_o)
        virago:set_talk_chore(9, nick_idles_t)
        virago:set_talk_chore(10, nick_idles_u)
        virago:put_in_set(hl)
        virago:ignore_boxes()
        virago:set_softimage_pos(22.11, -0.0066, 46.3082)
        virago:setrot(0, -31.8202, 0)
        start_script(hl.virago_idles)
        hl.virago_obj:make_touchable()
    end
    if hl.glottis_gambling then
        glottis:set_costume(nil)
        glottis:put_in_set(hl)
        glottis:set_costume("glottis_tux.cos")
        glottis:set_mumble_chore(glottis_mumble)
        glottis:set_talk_chore(1, glottis_stop_talk)
        glottis:set_talk_chore(2, glottis_a)
        glottis:set_talk_chore(3, glottis_c)
        glottis:set_talk_chore(4, glottis_e)
        glottis:set_talk_chore(5, glottis_f)
        glottis:set_talk_chore(6, glottis_l)
        glottis:set_talk_chore(7, glottis_m)
        glottis:set_talk_chore(8, glottis_o)
        glottis:set_talk_chore(9, glottis_t)
        glottis:set_talk_chore(10, glottis_u)
        glottis:push_costume("gl_gamble.cos")
        glottis:ignore_boxes()
        glottis:setpos(-0.975807, 0.551755, 1.9)
        glottis:setrot(0, 177.456, 0)
        hl.glottis_obj:make_touchable()
        if not find_script(hk.stowaway) then
            start_script(hl.glottis_idle)
        end
        hl.raoul_obj:make_untouchable()
        if not hk.raoul_quit then
            if not hk.raoul_trapped and not hk.raoul_in_kitchen then
                single_start_script(hl.raoul_paths.gambling_tour, hl.raoul_paths)
            elseif not hk.raoul_trapped and hk.raoul_in_kitchen and not hk.raoul_in_pantry then
                single_start_script(hl.raoul_paths.leave_kitchen, hl.raoul_paths)
            end
        end
    else
        hl.glottis_obj:make_untouchable()
        if not hk.raoul_quit then
            if not hk.raoul_trapped and not hk.raoul_in_kitchen and not hh.raoul_in_elevator then
                raoul:default("bored")
                raoul:put_in_set(hl)
                raoul:setpos(-2.30389, 0.138841, -0.05)
                raoul:setrot(0, 33.4643, 0)
                raoul:set_collision_mode(COLLISION_OFF)
                if hl:current_setup() == hl_elews then
                    start_script(raoul.new_run_idle, raoul, "shakes_ankle")
                end
                hl.raoul_idle_in_view = TRUE
                hl.raoul_obj:make_touchable()
            elseif not hk.raoul_trapped and hk.raoul_in_kitchen and not hk.raoul_in_pantry and not hh.raoul_in_elevator then
                hl.raoul_obj:make_untouchable()
                single_start_script(hl.raoul_paths.leave_kitchen, hl.raoul_paths)
            else
                hl.raoul_obj:make_untouchable()
            end
        end
    end
end
hl.check_glottis_volume = function(arg1, arg2) -- line 684
    if arg2 == hl_dorrv then
        glottis.gambling_volume = 20
        glottis.gambling_pan = 100
    elseif arg2 == hl_elews then
        glottis.gambling_volume = 80
        glottis.gambling_pan = 64
    elseif arg2 == hl_glot then
        glottis.gambling_volume = 120
        glottis.gambling_pan = 50
    elseif arg2 == hl_nikcu then
        glottis.gambling_volume = 10
        glottis.gambling_pan = 120
    end
end
hl.enter = function(arg1) -- line 706
    hl.raoul_paths:init()
    if hk.pantry:is_open() then
        hl:add_object_state(hl_elews, "hl_hpopn.bm", nil, OBJSTATE_UNDERLAY)
        if not hl.pantry_actor then
            hl.pantry_actor = Actor:create(nil, nil, nil, "pantry")
        end
        hl.pantry_actor:set_costume("hl_pantry.cos")
        hl.pantry_actor:put_in_set(hl)
        hl.pantry_actor:play_chore(0)
    elseif hk.pantry:is_locked() then
        if not hl.pantry_actor then
            hl.pantry_actor = Actor:create(nil, nil, nil, "pantry")
        end
        hl.pantry_actor:set_costume("mc_pantry.cos")
        hl.pantry_actor:put_in_set(hl)
        hl.pantry_actor:play_chore(mc_pantry_scythe_end)
        hl.pantry_actor:setpos(0.0209391, 0.495896, -0.024)
        hl.pantry_actor:setrot(0, 270, 0)
    elseif hl.pantry_actor then
        hl.pantry_actor:put_in_set(nil)
    end
    if hk.raoul_in_kitchen and system.lastSet ~= hk then
        hk.raoul_in_kitchen = FALSE
    end
    if dd.strike_on then
        hl.nick_gone = TRUE
    elseif tb.blackmail_photo.owner == manny then
        hl.nick_gone = FALSE
    elseif not bi.seen_kiss then
        hl.nick_gone = TRUE
    end
    hl:set_up_actors()
    NewObjectState(hl_elews, OBJSTATE_STATE, "hl_elev.bm", "hl_elev.zbm")
    hl.hh_door:set_object_state("hl_elev.cos")
    MakeSectorActive("hl_elev", FALSE)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -0.14, 0.45, 5)
    SetActorShadowPlane(manny.hActor, "shadow_top")
    AddShadowPlane(manny.hActor, "shadow_top")
    SetActorShadowValid(manny.hActor, -1)
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, -0.14, 0.45, 15)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActorShadowValid(manny.hActor, -1)
end
hl.exit = function(arg1) -- line 766
    stop_script(hl.virago_idles)
    stop_script(hl.glottis_idle)
    glottis:shut_up()
    glottis:free()
    cigcase_actor:free()
    if hl.pantry_actor then
        hl.pantry_actor:free()
    end
    stop_script(hl.raoul_paths.gambling_tour)
    stop_script(hl.raoul_paths.glimpse_raoul)
    stop_script(hl.raoul_paths.leave_kitchen)
    stop_script(raoul.new_run_idle)
    raoul:free()
    raoul:set_collision_mode(COLLISION_OFF)
    manny.collision_handler = nil
    hl.raoul_idle_in_view = FALSE
    virago:free()
    hk.cask_actor:free()
    hh.raoul_in_elevator = FALSE
    KillActorShadows(manny.hActor)
end
hl.update_music_state = function(arg1) -- line 795
    if hl.glottis_gambling and not hl.talking_to_nick then
        return stateHL_GLOT
    else
        return stateHL
    end
end
hl.camerachange = function(arg1, arg2, arg3) -- line 803
    hl.raoul_paths:check_for_raoul_setup(arg3)
    if arg3 == hl_elews then
        if hl.raoul_idle_in_view then
            start_script(raoul.new_run_idle, raoul, "shakes_ankle")
        end
    else
        stop_script(raoul.new_run_idle)
    end
    hl:check_glottis_volume(arg3)
end
hl.glottis_obj = Object:create(hl, "/hltx139/Glottis", -0.97711599, 0.52448601, 2.4344001, { range = 1.08 })
hl.glottis_obj.use_pnt_x = -0.32935801
hl.glottis_obj.use_pnt_y = 0.219381
hl.glottis_obj.use_pnt_z = 1.9
hl.glottis_obj.use_rot_x = 0
hl.glottis_obj.use_rot_y = 68.153198
hl.glottis_obj.use_rot_z = 0
hl.glottis_obj.lookAt = function(arg1) -- line 835
    manny:twist_head_gesture()
    manny:say_line("/hlma140/")
end
hl.glottis_obj.use = function(arg1) -- line 840
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    stop_script(hl.glottis_idle)
    if lm.ready_to_sail then
        if not hl.bugged_glottis then
            hl.bugged_glottis = TRUE
            manny:head_forward_gesture()
            manny:say_line("/hlma141/")
            manny:wait_for_message()
            manny:point_gesture()
            manny:say_line("/hlma142/")
            manny:wait_for_message()
            hl:glottis_look_left()
            sleep_for(3000)
            glottis:say_line("/hlgl143/")
            glottis:wait_for_message()
            start_script(hl.glottis_stop_look_left, hl)
            glottis:say_line("/hlgl144/")
        else
            manny:head_forward_gesture()
            manny:say_line("/hlma145/")
            manny:wait_for_message()
            hl:glottis_look_left()
            sleep_for(1000)
            hl:glottis_stop_look_left()
            start_script(hl.glottis_look_back_talk, hl)
            glottis:say_line("/hlgl146/")
            glottis:wait_for_message()
            hl:glottis_stop_look_back()
        end
    elseif not hl.talked_glottis then
        hl.talked_glottis = TRUE
        manny:tilt_head_gesture()
        manny:say_line("/hlma147/")
        manny:wait_for_message()
        start_script(hl.glottis_look_left, hl)
        glottis:say_line("/hlgl148/")
        glottis:wait_for_message()
        hl:glottis_stop_look_left()
        glottis:say_line("/hlgl149/")
        hl:glottis_look_back()
        hl:glottis_look_back_talk()
        glottis:wait_for_message()
        hl:glottis_stop_look_back_talk()
        hl:glottis_stop_look_back()
    else
        manny:tilt_head_gesture()
        manny:say_line("/hlma150/")
        manny:wait_for_message()
        if not hl.talked_glottis_twice then
            hl.talked_glottis_twice = TRUE
            start_script(hl.glottis_look_left, hl)
            glottis:say_line("/hlgl151/")
            glottis:wait_for_message()
            hl:glottis_stop_look_left()
        else
            glottis:play_chore(glottis_tux_right_smirk, "glottis_tux.cos")
            glottis:say_line("/hlgl153/")
            wait_for_message()
            glottis:play_chore(glottis_tux_blink, "glottis_tux.cos")
            glottis:say_line("/hlgl154/")
            glottis:wait_for_message()
        end
        glottis:wait_for_message()
    end
    wait_for_message()
    sleep_for(1000)
    END_CUT_SCENE()
    start_script(hl.glottis_idle)
end
hl.glottis_obj.use_suitcase = function(arg1) -- line 917
    START_CUT_SCENE()
    manny:say_line("/hlma152/")
    manny:wait_for_message()
    start_script(hl.glottis_ramble, hl)
    glottis:say_line("/hlgl153/")
    wait_for_message()
    start_script(hl.glottis_ramble, hl)
    glottis:say_line("/hlgl154/")
    END_CUT_SCENE()
end
hl.stair_bot_box = { }
hl.stair_bot_box.walkOut = function(arg1) -- line 932
    START_CUT_SCENE()
    manny:setpos(-1.93073, 2.99635, 1.9)
    manny:setrot(0, -598.875, 0)
    manny:walkto(-1.43425, 2.58847, 1.9)
    manny:wait_for_actor()
    END_CUT_SCENE()
end
hl.stair_top_box = { }
hl.stair_top_box.walkOut = function(arg1) -- line 943
    START_CUT_SCENE()
    manny:setpos(0.282199, 3.01702, 0.177527)
    manny:setrot(0, -1277.41, 0)
    manny:walkto(0.443163, 2.63761, 0)
    manny:wait_for_actor()
    END_CUT_SCENE()
end
hl.gold_cat = Object:create(hl, "/hltx155/statue", 0.45471901, -3.0049601, 1.6, { range = 1.72 })
hl.gold_cat.use_pnt_x = 0.78492397
hl.gold_cat.use_pnt_y = -3.27125
hl.gold_cat.use_pnt_z = 0
hl.gold_cat.use_rot_x = 0
hl.gold_cat.use_rot_y = 47.954201
hl.gold_cat.use_rot_z = 0
hl.gold_cat.lookAt = function(arg1) -- line 961
    soft_script()
    manny:say_line("/hlma156/")
    manny:wait_for_message()
    manny:say_line("/hlma157/")
end
hl.gold_cat.pickUp = function(arg1) -- line 968
    manny:say_line("/hlma158/")
end
hl.gold_cat.use = function(arg1) -- line 972
    manny:say_line("/hlma159/")
end
hl.monitor = Object:create(hl, "/hltx160/monitor", -0.217647, 2.62235, 3.4200001, { range = 2 })
hl.monitor.use_pnt_x = -0.137954
hl.monitor.use_pnt_y = 1.6886801
hl.monitor.use_pnt_z = 1.9
hl.monitor.use_rot_x = 0
hl.monitor.use_rot_y = 348.70499
hl.monitor.use_rot_z = 0
hl.monitor.lookAt = function(arg1) -- line 984
    manny:say_line("/hlma161/")
end
hl.monitor.use = function(arg1) -- line 988
    manny:say_line("/hlma162/")
end
hl.virago_obj = Object:create(hl, "/hltx163/Virago", 2.2216599, -4.7417798, 0.44999999, { range = 1.5 })
hl.virago_obj.use_pnt_x = 2.3670101
hl.virago_obj.use_pnt_y = -4.1946502
hl.virago_obj.use_pnt_z = 0
hl.virago_obj.use_rot_x = 0
hl.virago_obj.use_rot_y = 162.526
hl.virago_obj.use_rot_z = 0
hl.virago_obj.lookAt = function(arg1) -- line 999
    if bi.seen_kiss then
        manny:say_line("/hlma164/")
    else
        manny:say_line("/hlma165/")
    end
end
hl.virago_obj.use = function(arg1) -- line 1007
    START_CUT_SCENE()
    hl.talking_to_nick = TRUE
    music_state:update()
    virago.stop_idle = TRUE
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    hl:current_setup(hl_nikcu)
    wait_for_script(hl.virago_idles)
    END_CUT_SCENE()
    if hl.virago_blackmailed then
        if dd.terry_arrested then
            hl:talk_about_terry()
        else
            START_CUT_SCENE()
            manny:say_line("/hlma166/")
            virago:stop_chore(nick_idles_pprwrk_base)
            virago:play_chore(nick_idles_lkma)
            virago:wait_for_chore()
            virago:wait_for_message()
            virago:say_line("/hlvi167/")
            virago:wait_for_message()
            manny:say_line("/hlma168/")
            manny:wait_for_message()
            manny:say_line("/hlma169/")
            manny:wait_for_message()
            virago:say_line("/hlvi170/")
            virago:wait_for_message()
            virago:stop_chore(nick_idles_lkma)
            virago:play_chore(nick_idles_lkma_2pprwrk)
            virago:wait_for_chore()
            virago:stop_chore(nick_idles_lkma_2pprwrk)
            END_CUT_SCENE()
            hl:current_setup(hl_dorrv)
            start_script(hl.virago_idles)
        end
    elseif tb.blackmail_photo.owner == manny then
        hl:blackmail_virago()
    else
        Dialog:run("vi1", "dlg_virago.lua")
    end
    hl.talking_to_nick = FALSE
    music_state:update()
end
hl.virago_obj.use_blackmail = hl.virago_obj.use
hl.nicks_papers = Object:create(hl, "/hltx171/papers", 2.44472, -4.6549602, 0.25, { range = 0.60000002 })
hl.nicks_papers.use_pnt_x = 2.0894201
hl.nicks_papers.use_pnt_y = -4.4724998
hl.nicks_papers.use_pnt_z = 0
hl.nicks_papers.use_rot_x = 0
hl.nicks_papers.use_rot_y = -134.922
hl.nicks_papers.use_rot_z = 0
hl.nicks_papers:make_untouchable()
hl.nicks_papers.lookAt = function(arg1) -- line 1067
    manny:say_line("/hlma172/")
end
hl.nicks_papers.pickUp = function(arg1) -- line 1071
    manny:say_line("/hlma173/")
end
hl.nicks_papers.use = hl.nicks_papers.pickUp
hl.case = Object:create(hl, "/hltx174/case", 2.4152501, -4.6474199, 0.255, { range = 0.60000002 })
hl.case.use_pnt_x = 2.0894201
hl.case.use_pnt_y = -4.4724998
hl.case.use_pnt_z = 0
hl.case.use_rot_x = 0
hl.case.use_rot_y = -134.922
hl.case.use_rot_z = 0
hl.case.string_name = "cigcase"
hl.case:make_untouchable()
hl.case.lookAt = function(arg1) -- line 1087
    manny:say_line("/hlma175/")
end
hl.case.pickUp = function(arg1) -- line 1091
    if hl.nick_gone then
        START_CUT_SCENE()
        manny:walkto(2.36201, -4.21565, 0, 0, 208.7, 0)
        manny:wait_for_actor()
        manny:say_line("/hlma176/")
        manny:play_chore(mc_get_case, "mc.cos")
        sleep_for(737)
        hl.case:get()
        cigcase_actor:set_visibility(FALSE)
        manny:generic_pickup(arg1)
        manny:wait_for_chore(mc_get_case, "mc.cos")
        manny:stop_chore(mc_get_case, "mc.cos")
        manny:wait_for_message()
        hl.nicks_papers:make_touchable()
        END_CUT_SCENE()
    else
        manny:say_line("/sima172/")
    end
end
hl.case.use = function(arg1) -- line 1112
    START_CUT_SCENE()
    if hl.case.owner ~= manny then
        hl.case:pickUp()
    end
    if hl.nick_gone then
        manny:stop_chore(mc_hold, "mc.cos")
        manny:stop_chore(manny.hold_chore, "mc.cos")
        manny:push_costume("manny_open_cig_case.cos")
        manny:play_chore(2)
        manny:wait_for_chore(2, "manny_open_cig_case.cos")
        manny:play_chore(0)
        manny:wait_for_chore()
        start_sfx("hlRattle.wav")
        wait_for_sound("hlRattle.wav")
        if not arg1.tried then
            arg1.tried = TRUE
            manny:say_line("/hlma177/")
            manny:wait_for_message()
            manny:say_line("/hlma178/")
        else
            manny:say_line("/hlma179/")
            manny:wait_for_message()
            manny:say_line("/hlma180/")
        end
        manny:play_chore(1)
        manny:wait_for_chore()
        manny:play_chore(3)
        manny:wait_for_chore(3, "manny_open_cig_case.cos")
        manny:pop_costume()
        manny:play_chore_looping(ms_hold, "mc.cos")
        manny:play_chore_looping(manny.hold_chore, "mc.cos")
    end
    END_CUT_SCENE()
end
hl.case.default_response = function(arg1) -- line 1149
    manny:say_line("/hlma181/")
end
hl.raoul_obj = Object:create(hl, "Raoul", -2.2569301, 0.107943, 0.5, { range = 0.80000001 })
hl.raoul_obj.use_pnt_x = -2.5109601
hl.raoul_obj.use_pnt_y = 0.54952401
hl.raoul_obj.use_pnt_z = 0
hl.raoul_obj.use_rot_x = 0
hl.raoul_obj.use_rot_y = 173.485
hl.raoul_obj.use_rot_z = 0
hl.raoul_obj.lookAt = function(arg1) -- line 1163
    START_CUT_SCENE()
    manny:say_line("/hama052/")
    manny:wait_for_message()
    raoul:say_line("/hkra029/")
    END_CUT_SCENE()
end
hl.raoul_obj.pickUp = function(arg1) -- line 1171
    system.default_response("nah")
end
hl.raoul_obj.use = hl.raoul_obj.lookAt
hl.hk_door = Object:create(hl, "/hltx182/door", -1.08233, 0.85732001, 0.5, { range = 0 })
hl.hk_box = hl.hk_door
hl.hk_door.use_pnt_x = -1.35155
hl.hk_door.use_pnt_y = 0.86664999
hl.hk_door.use_pnt_z = 0
hl.hk_door.use_rot_x = 0
hl.hk_door.use_rot_y = -447.897
hl.hk_door.use_rot_z = 0
hl.hk_door.out_pnt_x = -0.92223698
hl.hk_door.out_pnt_y = 0.88242
hl.hk_door.out_pnt_z = 0
hl.hk_door.out_rot_x = 0
hl.hk_door.out_rot_y = -447.897
hl.hk_door.out_rot_z = 0
hl.hk_door.walkOut = function(arg1) -- line 1203
    hk:come_out_door(hk.hl_door)
end
hl.mx_door = Object:create(hl, "/hltx183/door", -4.1039, -1.09201, 0.42699999, { range = 1 })
hl.mx_door.use_pnt_x = -3.5099001
hl.mx_door.use_pnt_y = -1.56601
hl.mx_door.use_pnt_z = 0
hl.mx_door.use_rot_x = 0
hl.mx_door.use_rot_y = -292.67001
hl.mx_door.use_rot_z = 0
hl.mx_door.out_pnt_x = -4.0453701
hl.mx_door.out_pnt_y = -1.19244
hl.mx_door.out_pnt_z = 0
hl.mx_door.out_rot_x = 0
hl.mx_door.out_rot_y = -294.27399
hl.mx_door.out_rot_z = 0
hl.mx_door:make_untouchable()
hl.mx_door.walkOut = function(arg1) -- line 1226
    if hl.nick_gone and not dd.strike_on and bi.seen_kiss == TRUE then
        manny:say_line("/hlma185/")
    else
        mx:come_out_door(mx.hl_door)
    end
end
hl.hh_door = Object:create(hl, "/hltx184/door", -0.98232698, 2.7573199, 0.40000001, { range = 0 })
hl.hh_door.use_pnt_x = -0.67500001
hl.hh_door.use_pnt_y = 2.95
hl.hh_door.use_pnt_z = 0
hl.hh_door.use_rot_x = 0
hl.hh_door.use_rot_y = -172.914
hl.hh_door.use_rot_z = 0
hl.hh_door.out_pnt_x = -0.67500001
hl.hh_door.out_pnt_y = 2.95
hl.hh_door.out_pnt_z = 0
hl.hh_door.out_rot_x = 0
hl.hh_door.out_rot_y = -172.914
hl.hh_door.out_rot_z = 0
hl.hh_door.walkOut = function(arg1) -- line 1252
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    if manny.is_holding then
        put_away_held_item()
    end
    arg1:close()
    hh.hl_door:comeOut()
    END_CUT_SCENE()
end
hl.hh_door.open = function(arg1) -- line 1266
    if not arg1:is_open() then
        arg1:play_chore(0)
        arg1:wait_for_chore()
        Object.open(arg1)
    end
end
hl.hh_door.close = function(arg1) -- line 1275
    if arg1:is_open() then
        arg1:play_chore(1)
        arg1:wait_for_chore()
        Object.close(arg1)
    end
end
hl.elev_open = { }
hl.elev_open.walkOut = function(arg1) -- line 1288
    MakeSectorActive("hl_elev", TRUE)
    hl.hh_door:open()
    while manny:find_sector_name("elev_open") do
        break_here()
    end
    if manny:find_sector_name("hh_box") then
        hl.hh_door:walkOut()
    else
        hl.hh_door:close()
        MakeSectorActive("hl_elev", FALSE)
    end
end
hl.elev_open.comeOut = function(arg1) -- line 1302
    START_CUT_SCENE()
    hl:switch_to_set()
    hl:current_setup(hl_elews)
    manny:put_in_set(hl)
    manny:setpos(-0.675, 2.95, 0)
    manny:setrot(0, -172.914, 0)
    hl.hh_door:open()
    MakeSectorActive("hl_elev", TRUE)
    manny:walkto(-0.675601, 2.69798, 0)
    manny:wait_for_actor()
    hl.hh_door:close()
    MakeSectorActive("hl_elev", FALSE)
    END_CUT_SCENE()
end
hl_pantry_set_open = 0
hl_pantry_set_closed = 1
hm1_HITMAN_hitman = 0
hm1_HITMAN_Chore1 = 1
hm2_HITMAN_hitman = 0
hm2_HITMAN_Chore1 = 1
hm3_HITMAN_hitman = 0
hm3_HITMAN_Chore1 = 1
hole_punch_hit_puncher = 0
hole_punch_card_punch = 1
hole_punch_hold = 2
hole_punch_card_rest = 3
hole_punch_show = 4
hole_punch_hide = 5
hooka_guys_rest = 0
hooka_guys_gesture1 = 1
hooka_guys_hold_gesture1 = 2
hooka_guys_gesture2 = 3
hooka_guys_gesture3 = 4
hooka_guys_hold_gesture3 = 5
hooka_guys_gesture4 = 6
hooka_guys_look_at_olivia = 7
hooka_guys_look_hold = 8
hooka_guys_begin_snap = 9
hooka_guys_snap_cycle = 10
hooka_guys_end_snap = 11
hooka_guys_hooka_in_mouth = 12
hooka_guys_smoke = 13
hooka_guys_blow = 14
hooka_guys_back_to_rest = 15
hooka_lid_hooka_lid = 0
hookashooters_hookashooters = 0
CheckFirstTime("hp.lua")
dofile("ra_bonked.lua")
hp = Set:create("hp.set", "high roller pantry", { hp_intha = 0, hp_hpopn = 1, hp_ovrhd = 2 })
hp.can_actor = Actor:create(nil, nil, nil, "Can of olives")
hp.can_actor.default = function(arg1) -- line 15
    arg1:set_costume(nil)
    arg1:set_costume("ra_bonked.cos")
    arg1:put_in_set(hp)
    arg1:setpos(-0.01509, -0.32876, 0)
    arg1:setrot(0, 541.536, 0)
end
hp.update_music_state = function(arg1) -- line 28
    return stateHP
end
hp.enter = function(arg1) -- line 32
    SetActorScale(manny.hActor, 1.3)
    if not hk.raoul_trapped then
        hp.can_actor:default()
        hp.can_actor:play_chore(ra_bonked_can_only, "ra_bonked.cos")
    end
    start_sfx("he_hk_hp.imu", IM_MEDIUM_PRIORITY, 50)
end
hp.exit = function(arg1) -- line 43
    SetActorScale(manny.hActor, 1)
    hp.can_actor:free()
    stop_sound("he_hk_hp.imu")
end
hp.cans1 = Object:create(hp, "/hptx001/cans", -0.38930601, 0.26661599, 0.69919997, { range = 0.89999998 })
hp.cans1.use_pnt_x = 0.19992299
hp.cans1.use_pnt_y = -0.0049829702
hp.cans1.use_pnt_z = 0
hp.cans1.use_rot_x = 0
hp.cans1.use_rot_y = 1352.92
hp.cans1.use_rot_z = 0
hp.cans1.parent = hk.cans1
hp.cans2 = Object:create(hp, "/hptx002/cans", -0.30170599, -0.468384, 0.2466, { range = 0.89999998 })
hp.cans2.use_pnt_x = 0.19992299
hp.cans2.use_pnt_y = -0.0049829702
hp.cans2.use_pnt_z = 0
hp.cans2.use_rot_x = 0
hp.cans2.use_rot_y = 1352.92
hp.cans2.use_rot_z = 0
hp.cans2.parent = hk.cans1
hp.cans3 = Object:create(hp, "/hptx003/cans", -0.27800101, -0.140359, 0.45750001, { range = 0.60000002 })
hp.cans3.use_pnt_x = 0.088239796
hp.cans3.use_pnt_y = -0.0133994
hp.cans3.use_pnt_z = 0
hp.cans3.use_rot_x = 0
hp.cans3.use_rot_y = 1534.3101
hp.cans3.use_rot_z = 0
hp.cans3.parent = hk.cans1
hp.cans4 = Object:create(hp, "/hptx004/cans", -0.27800101, 0.44454101, -0.1045, { range = 0.60000002 })
hp.cans4.use_pnt_x = 0.088239796
hp.cans4.use_pnt_y = -0.0133994
hp.cans4.use_pnt_z = 0
hp.cans4.use_rot_x = 0
hp.cans4.use_rot_y = 1534.3101
hp.cans4.use_rot_z = 0
hp.cans4.parent = hk.cans1
hp.hk_door = Object:create(hp, "/hptx005/door", 0.1018, -0.59680003, 0.5, { range = 0.60000002 })
hp.hk_door.use_pnt_x = 0.101979
hp.hk_door.use_pnt_y = -0.225199
hp.hk_door.use_pnt_z = 0
hp.hk_door.use_rot_x = 0
hp.hk_door.use_rot_y = 184.59399
hp.hk_door.use_rot_z = 0
hp.hk_door.out_pnt_x = 0.132102
hp.hk_door.out_pnt_y = -0.60000002
hp.hk_door.out_pnt_z = 0
hp.hk_door.out_rot_x = 0
hp.hk_door.out_rot_y = 184.59399
hp.hk_door.out_rot_z = 0
hp.hk_door.touchable = FALSE
hp.hk_box = hp.hk_door
hp.hk_door.walkOut = function(arg1) -- line 116
    START_CUT_SCENE()
    hk:switch_to_set()
    hk:current_setup(0)
    manny:put_in_set(hk)
    manny:setpos(hk.hp_door.out_pnt_x, hk.hp_door.out_pnt_y, hk.hp_door.out_pnt_z)
    manny:walkto(hk.hp_door.use_pnt_x, hk.hp_door.use_pnt_y, hk.hp_door.use_pnt_z)
    END_CUT_SCENE()
end
hp.hk_door.comeOut = function(arg1) -- line 126
    if hk.pantry:is_open() then
        hp:current_setup(hp_hpopn)
    else
        hp:current_setup(hp_intha)
    end
    Object.come_out_door(arg1)
end
CheckFirstTime("hq.lua")
hq = Set:create("hq.set", "headquarters", { hq_bgbrd = 0, hq_bgbrd1 = 0, hq_ovrhd = 1, hq_elews = 2 })
hq.camera_adjusts = { 330, 10 }
hq.radio_volume = 30
hq.shrinkable = 0.03
dofile("sv_in_hq.lua")
dofile("sv_hq_idles.lua")
dofile("ev_r_idles.lua")
dofile("ma_wheel_stuck.lua")
dofile("hq_slideshow.lua")
dofile("ev_get_mp.lua")
hq.leave_town = function(arg1) -- line 23
    START_CUT_SCENE()
    salvador.stop_idle = TRUE
    hq:current_setup(hq_bgbrd1)
    manny:walkto_object(hq.salvador_obj)
    manny:wait_for_actor()
    salvador:push_chore(sv_hq_idles_head_turn_left)
    salvador:push_chore()
    salvador:say_line("/hqsa102/")
    salvador:push_chore(sv_hq_idles_head_turn_right)
    salvador:push_chore()
    wait_for_message()
    salvador:play_chore(sv_hq_idles_talk_stand_up)
    salvador:wait_for_chore()
    salvador:say_line("/hqsa103/")
    wait_for_message()
    END_CUT_SCENE()
    if DEMO then
        hq:demo_closing()
    else
        stop_script(hq.eva_radio_noise)
        stop_script(hq.static)
        stop_sound("projectr.imu")
        stop_script(hq.lsa_slideshow)
        start_script(cut_scene.stump, cut_scene)
    end
end
hq.eva_mover = function(arg1) -- line 52
    if hq:current_setup() == hq_elews then
        eva:setpos(-0.557415, -0.414567, -0.07)
        eva:setrot(0, 172, 0)
    else
        eva:setpos(-0.563042, -0.421926, -0.08)
        eva:setrot(0, 178, 0)
    end
    while 1 do
        if hq.cameraChange then
            if hq:current_setup() == hq_elews then
                eva:setpos(-0.557415, -0.414567, -0.07)
                eva:setrot(0, 172, 0)
                hq.radio_volume = 100
            else
                eva:setpos(-0.563042, -0.421926, -0.08)
                eva:setrot(0, 177, 0)
                hq.radio_volume = 30
            end
        end
        break_here()
    end
end
ge = function() -- line 77
    rf.eggs:get()
    dom.mouthpiece:get()
    dom.mouthpiece.bonded = TRUE
    dom.mouthpiece.molded = TRUE
end
hq.demo_opening = function(arg1) -- line 84
    START_CUT_SCENE()
    set_override(hq.demo_opening_override, hq)
    ImSetState(STATE_NULL)
    if not PL_MODE then
        StartFullscreenMovie("demo_frontend.san")
        wait_for_movie()
    end
    manny:setpos(0.608613, -0.19144, 0)
    manny:setrot(0, 88.8016, 0)
    hq:init_hq()
    salvador:setpos(-0.861, -0.201, 0)
    salvador:setrot(0, 272.255, 0)
    start_script(hq.salvador_walks)
    wait_for_script(hq.salvador_walks)
    eva:setpos(-0.563042, -0.421926, -0.08)
    eva:setrot(0, 177, 0)
    END_CUT_SCENE()
    hq:demo_opening_override()
end
hq.demo_opening_override = function(arg1, arg2) -- line 116
    if arg2 then
        kill_override()
        break_here()
    end
    manny:setpos(0.608613, -0.19144, 0)
    manny:setrot(0, 88.8016, 0)
    stop_script(hq.salvador_walks)
    stop_script(hq.sal_turn_home)
    salvador:follow_boxes()
    salvador:ignore_boxes()
    salvador:stop_chore(sv_in_hq_walk)
    salvador:stop_chore(sv_in_hq_begin_walk)
    salvador:stop_chore(sv_in_hq_end_walk)
    salvador:setrot(0, -200, 0)
    salvador:setpos(-0.825013, 0.391542, 0)
    hq:current_setup(hq_bgbrd)
    eva:setpos(-0.563042, -0.421926, -0.08)
    eva:setrot(0, 177, 0)
    hq:init_hq()
end
hq.demo_closing = function(arg1) -- line 145
    START_CUT_SCENE()
    ImSetState(STATE_NULL)
    ImStopAllSounds()
    set_override(hq.demo_closing_override, hq)
    pause_scripts()
    if not PL_MODE then
        RunFullscreenMovie("demo_backend.san")
    end
    END_CUT_SCENE()
    exit()
end
hq.demo_closing_override = function(arg1) -- line 158
    unpause_scripts()
    kill_override()
    exit()
end
hq.sal_turn_home = function() -- line 164
    while TurnActorTo(salvador.hActor, -0.825013, 0.391542, 0) do
        break_here()
    end
end
hq.salvador_walks = function() -- line 170
    stop_script(hq.salvador_idles)
    START_CUT_SCENE()
    hq:current_setup(hq_elews)
    sleep_for(500)
    salvador:set_walk_rate(0.5)
    start_script(hq.sal_turn_home, hq)
    salvador:play_chore(sv_in_hq_begin_walk)
    salvador:wait_for_chore()
    wait_for_script(hq.sal_turn_home)
    salvador:set_walk_chore(sv_in_hq_walk)
    salvador:walkto(-0.825013, 0.391542, 0)
    sleep_for(1600)
    salvador:stop_walk()
    salvador:set_walk_chore(nil)
    salvador:stop_chore(sv_in_hq_walk)
    salvador:setpos(-0.781387, 0.36856, 0.01)
    salvador:setrot(0, 180, 0)
    set_override(nil)
    salvador:push_costume("sv_hq_idles.cos")
    salvador:play_chore(sv_hq_idles_hold, "sv_hq_idles.cos")
    salvador:wait_for_chore()
    salvador:pop_costume()
    hq:current_setup(hq_bgbrd)
    END_CUT_SCENE()
end
hq.salvador_idles = function() -- line 204
    local local1
    local local2
    salvador:setpos(-0.78138697, 0.36855999, 0.0099999998)
    salvador:setrot(0, 180, 0)
    salvador:push_costume("sv_hq_idles.cos")
    salvador:play_chore(sv_hq_idles_hold, "sv_hq_idles.cos")
    salvador.stop_idle = FALSE
    while 1 do
        while not salvador.stop_idle do
            salvador:play_chore(sv_hq_idles_hold)
            salvador:wait_here(rnd(1, 3))
            salvador:head_look_at(nil)
            if rnd() then
                hq.salvador_scratching = FALSE
                salvador:wait_here(rnd(2, 4))
            else
                hq.salvador_scratching = TRUE
                salvador:stop_chore(sv_hq_idles_hold)
                if not salvador.stop_idle then
                    salvador:play_chore_looping(sv_hq_idles_scratch_chin)
                    salvador:wait_here(rnd(1, 3))
                    salvador:set_chore_looping(sv_hq_idles_scratch_chin, FALSE)
                    salvador:wait_for_chore()
                end
            end
            salvador:play_chore(sv_hq_idles_hold)
        end
        break_here()
    end
end
salvador.wait_here = function(arg1, arg2) -- line 238
    repeat
        if arg1.stop_idle then
            arg2 = 0
        else
            arg2 = arg2 - 1
            sleep_for(500)
        end
    until arg2 <= 0
end
hq.salvador_look_at_manny = function() -- line 253
    hq.salvador_look = FALSE
    while not hq.done_looking do
        break_here()
    end
    salvador:head_look_at_manny()
end
hq.radio_sfx = { }
hq.radio_sfx[1] = "blip1.wav"
hq.radio_sfx[2] = "blip2.wav"
hq.radio_sfx[3] = "blip3.wav"
hq.radio_sfx[4] = "blip4.wav"
hq.radio_sfx[5] = "blip5.wav"
hq.radio_sfx[6] = "blip6.wav"
hq.radio_sfx[7] = "blip7.wav"
hq.radio_sfx[8] = "blip8.wav"
hq.radio_sfx[9] = "blip9.wav"
hq.radio_sfx[10] = "blip10.wav"
hq.radio_sfx[11] = "blip11.wav"
hq.radio_sfx[12] = "blip12.wav"
hq.radio_sfx[13] = "blip13.wav"
hq.radio_sfx[14] = "blip14.wav"
hq.radio_sfx[15] = "blip15.wav"
hq.static = function() -- line 280
    while 1 do
        eva:play_sound_at("static.wav")
        wait_for_sound("static.wav")
    end
end
hq.eva_radio_noise = function() -- line 288
    local local1, local2, local3
    while 1 do
        local1 = eva:is_choring()
        if local1 == ev_r_idles_m_tune_radio then
            local2 = pick_from_nonweighted_table(hq.radio_sfx)
            local3 = pick_from_nonweighted_table(hq.radio_sfx)
            start_sfx(local2, nil, hq.radio_volume)
            sleep_for(rnd(25, 100))
            start_sfx(local3, nil, hq.radio_volume)
            wait_for_sound(local2)
            wait_for_sound(local3)
            sleep_for(rnd(50, 300))
            break_here()
        end
        break_here()
    end
end
hq.set_up_actors = function(arg1) -- line 310
    salvador:default()
    salvador:put_in_set(hq)
    salvador:set_mumble_chore(sv_in_hq_mumble)
    salvador:set_talk_chore(1, sv_in_hq_stop_talk)
    salvador:set_talk_chore(2, sv_in_hq_a)
    salvador:set_talk_chore(3, sv_in_hq_c)
    salvador:set_talk_chore(4, sv_in_hq_e)
    salvador:set_talk_chore(5, sv_in_hq_f)
    salvador:set_talk_chore(6, sv_in_hq_l)
    salvador:set_talk_chore(7, sv_in_hq_m)
    salvador:set_talk_chore(8, sv_in_hq_o)
    salvador:set_talk_chore(9, sv_in_hq_t)
    salvador:set_talk_chore(10, sv_in_hq_u)
    eva:default()
    eva.idle_table = nil
    eva.idle_table = Idle:create("ev_r_idles")
    eva.idle_table:add_state("l_toward_ma", { hold_to_ma = 1 })
    eva.idle_table:add_state("hold_to_ma", { hold_to_ma = 0.85, turn_bk = 0.15 })
    eva.idle_table:add_state("turn_bk", { l_toward_ma = 0.2, m_tune_radio = 0.45, m_turn_l_to_ma = 0.35 })
    eva.idle_table:add_state("turn_back", { l_toward_ma = 0.05, m_tune_radio = 0.45, listen = 0.45, m_turn_l_to_ma = 0.05 })
    eva.idle_table:add_state("m_tune_radio", { m_tune_radio = 0.45, listen = 0.45, m_turn_l_to_ma = 0.1 })
    eva.idle_table:add_state("listen", { m_tune_radio = 0.45, m_turn_l_to_ma = 0.05 })
    eva.idle_table:add_state("m_distracted", { m_distracted = 0.5, turn_back = 0.5 })
    eva.idle_table:add_state("m_turn_l_to_ma", { turn_back = 1 })
    eva.stop_table = { }
    eva.stop_table[ev_r_idles_l_toward_ma] = ev_r_idles_turn_bk
    eva.stop_table[ev_r_idles_hold_to_ma] = ev_r_idles_turn_bk
    eva.stop_table[ev_r_idles_turn_bk] = ev_r_idles_m_turn_l_to_ma
    eva.stop_table[ev_r_idles_turn_back] = ev_r_idles_m_turn_l_to_ma
    eva.stop_table[ev_r_idles_m_tune_radio] = ev_r_idles_m_turn_l_to_ma
    eva.stop_table[ev_r_idles_listen] = ev_r_idles_m_turn_l_to_ma
    eva.stop_table[ev_r_idles_m_distracted] = ev_r_idles_turn_bk
    if not er_radio_cos then
        er_radio_cos = "ev_r_idles.cos"
    end
    eva:put_in_set(hq)
    eva:set_mumble_chore(ev_r_idles_mumble)
    eva:set_talk_chore(1, ev_r_idles_stop_talk)
    eva:set_talk_chore(2, ev_r_idles_a)
    eva:set_talk_chore(3, ev_r_idles_c)
    eva:set_talk_chore(4, ev_r_idles_e)
    eva:set_talk_chore(5, ev_r_idles_f)
    eva:set_talk_chore(6, ev_r_idles_l)
    eva:set_talk_chore(7, ev_r_idles_m)
    eva:set_talk_chore(8, ev_r_idles_o)
    eva:set_talk_chore(9, ev_r_idles_t)
    eva:set_talk_chore(10, ev_r_idles_u)
    eva:set_turn_rate(40)
    eva:set_head(3, 4, 5, 165, 28, 80)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 0.29)
    SetActorShadowPlane(manny.hActor, "slide_shadow")
    AddShadowPlane(manny.hActor, "slide_shadow")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 100, 0, 100)
    SetActorShadowPlane(manny.hActor, "door_shadow")
    AddShadowPlane(manny.hActor, "door_shadow")
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, 0, 10, 100)
    SetActorShadowPlane(manny.hActor, "wheel_shadow")
    AddShadowPlane(manny.hActor, "wheel_shadow")
    SetActiveShadow(manny.hActor, 3)
    SetActorShadowPoint(manny.hActor, 1, -6, 35)
    SetActorShadowPlane(manny.hActor, "eva_shadow")
    AddShadowPlane(manny.hActor, "eva_shadow")
    salvador:setrot(0, -200, 0)
    salvador:setpos(-0.825013, 0.391542, 0)
end
hq.lsa_slideshow = function(arg1) -- line 390
    local local1 = { }
    local local2, local3
    local1[0] = hq_slideshow_slide1
    local1[1] = hq_slideshow_slide2
    hq.slideshow_displayed = FALSE
    local2, local3 = next(local1, nil)
    while TRUE do
        hq.slideshow_displayed = TRUE
        hq.plans:play_chore(local3)
        sleep_for(10000)
        hq.slideshow_displayed = FALSE
        hq.plans:play_chore(hq_slideshow_no_slide)
        start_sfx("slidechg.wav")
        sleep_for(500)
        local2, local3 = next(local1, local2)
        if local2 == nil then
            local2, local3 = next(local1, nil)
        end
    end
end
hq.enter = function(arg1) -- line 421
    eva:set_visibility(TRUE)
    LoadCostume("ma_wheel_stuck.cos")
    hq.plans:set_object_state("hq_slideshow.cos")
    NewObjectState(0, 3, "hq_slideshow.bm", nil)
    if DEMO and not hq.run_demo_opening then
        hq.run_demo_opening = TRUE
        dofile("sv_helps.lua")
        start_script(hq.demo_opening, hq)
    else
        hq:init_hq()
    end
end
hq.init_hq = function(arg1) -- line 437
    manny.footsteps = footsteps.marble
    hq.al_door:open(TRUE)
    single_start_sfx("projectr.imu")
    set_vol("projectr.imu", 50)
    single_start_script(hq.lsa_slideshow, hq)
    start_script(hq.eva_radio_noise)
    hq:set_up_actors()
    single_start_script(hq.track_shadows, hq)
    single_start_script(eva.new_run_idle, eva, "m_tune_radio")
    single_start_script(hq.eva_mover)
    single_start_script(hq.salvador_idles)
end
hq.exit = function(arg1) -- line 455
    salvador:free()
    eva:free()
    stop_script(hq.eva_radio_noise)
    stop_script(hq.static)
    stop_script(hq.eva_mover)
    stop_script(hq.salvador_idles)
    stop_sound("projectr.imu")
    stop_script(hq.lsa_slideshow)
    stop_script(hq.track_shadows)
    KillActorShadows(manny.hActor)
    hq.slideshow_displayed = FALSE
    stop_script(hq.salvador_look_at_manny)
end
hq.track_shadows = function(arg1) -- line 472
    local local1 = { }
    local local2 = { }
    local local3 = { }
    local local4
    local2.x = 3
    local2.y = 0
    local2.z = 0.5
    local3.x = 3
    local3.y = 0
    local3.z = 0.5
    while TRUE do
        local1 = manny:getpos()
        if local1.x < -0.33000001 and local1.y > 0 then
            ActivateActorShadow(manny.hActor, 0, TRUE)
        else
            ActivateActorShadow(manny.hActor, 0, nil)
        end
        break_here()
    end
end
hq.salvador_obj = Object:create(hq, "/hqtx104/Salvador", -0.83501297, 0.46154201, 0.43000001, { range = 0.80000001 })
hq.salvador_obj.use_pnt_x = -0.29821101
hq.salvador_obj.use_pnt_y = 0.24349201
hq.salvador_obj.use_pnt_z = 0
hq.salvador_obj.use_rot_x = 0
hq.salvador_obj.use_rot_y = 83.460403
hq.salvador_obj.use_rot_z = 0
hq.salvador_obj.lookAt = function(arg1) -- line 516
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    END_CUT_SCENE()
    manny:say_line("/hqma105/")
end
hq.salvador_obj.pickUp = function(arg1) -- line 524
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    END_CUT_SCENE()
    manny:say_line("/hqma106/")
end
hq.salvador_obj.use = function(arg1) -- line 532
    START_CUT_SCENE()
    salvador.stop_idle = TRUE
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    END_CUT_SCENE()
    Dialog:run("sa2", "dlg_sal2.lua")
end
hq.salvador_obj.use_eggs = function(arg1) -- line 541
    START_CUT_SCENE()
    salvador.stop_idle = TRUE
    manny:walkto_object(arg1)
    manny:say_line("/alma010/")
    manny:wait_for_actor()
    END_CUT_SCENE()
    START_CUT_SCENE()
    salvador.got_eggs = TRUE
    rf.eggs:put_in_limbo()
    wait_for_message()
    salvador:push_chore(sv_hq_idles_gets_up)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_hand_up_down)
    salvador:push_chore()
    salvador:push_chore(sv_hq_idles_grab_n_sit)
    salvador:say_line("/hqsa107/")
    wait_for_message()
    salvador:say_line("/hqsa108/")
    wait_for_message()
    salvador:say_line("/hqsa109/")
    wait_for_message()
    salvador:wait_for_chore(sv_hq_idles_grab_n_sit)
    salvador:pop_costume()
    salvador:play_chore_looping(sv_in_hq_hide_eggs)
    manny:stop_chore(ms_hold, "ms.cos")
    manny:stop_chore(manny.hold_chore, "ms.cos")
    manny.is_holding = nil
    manny.hold_chore = nil
    salvador:head_look_at(manny)
    salvador:play_chore(sv_in_hq_to_salute)
    salvador:setrot(0, 190, 0, TRUE)
    salvador:wait_for_chore()
    salvador:play_chore_looping(sv_in_hq_hold_salute)
    salvador:say_line("/hqsa110/")
    wait_for_message()
    salvador:stop_chore(sv_in_hq_hold_salute)
    salvador:play_chore(sv_in_hq_done_salute)
    salvador:setrot(0, 180, 0, TRUE)
    salvador:wait_for_chore()
    salvador:head_look_at(nil)
    salvador:push_costume("sv_hq_idles.cos")
    salvador:play_chore_looping(sv_hq_idles_hide_the_damn_eggs)
    if DEMO then
        END_CUT_SCENE()
        hq:leave_town()
    elseif eva.got_teeth then
        hq:leave_town()
    else
        manny:say_line("/hqma111/")
        wait_for_message()
        salvador:say_line("/hqsa112/")
        wait_for_message()
        salvador:say_line("/hqsa113/")
        start_script(hq.salvador_idles)
    end
    END_CUT_SCENE()
    salvador:stop_chore(sv_in_hq_hide_eggs)
end
hq.salvador_obj.use_mouthpiece = function(arg1) -- line 607
    START_CUT_SCENE()
    start_script(hq.salvador_look_at_manny)
    END_CUT_SCENE()
    START_CUT_SCENE()
    salvador:say_line("/hqsa114/")
    wait_for_message()
    salvador:say_line("/hqsa115/")
    END_CUT_SCENE()
    start_script(hq.salvador_idles)
end
hq.salvador_obj.kill_idle = function(arg1) -- line 619
    salvador.stop_idle = TRUE
    wait_for_script(hq.salvador_idles)
end
hq.eva_obj = Object:create(hq, "/hqtx116/Eva", -0.54741502, -0.49456701, 0.43000001, { range = 0.60000002 })
hq.eva_obj.use_pnt_x = -0.64592803
hq.eva_obj.use_pnt_y = -0.175311
hq.eva_obj.use_pnt_z = 0
hq.eva_obj.use_rot_x = 0
hq.eva_obj.use_rot_y = 169.146
hq.eva_obj.use_rot_z = 0
hq.eva_obj.lookAt = function(arg1) -- line 635
    soft_script()
    manny:say_line("/hqma117/")
    wait_for_message()
    eva:say_line("/hqev118/")
end
hq.eva_obj.pickUp = function(arg1) -- line 642
    soft_script()
    manny:say_line("/hqma119/")
    wait_for_message()
    eva:say_line("/hqev120/")
end
hq.eva_obj.use = function(arg1) -- line 649
    if manny:walkto(arg1) then
        START_CUT_SCENE()
        start_script(eva.kill_idle, eva, ev_r_idles_m_turn_l_to_ma)
        eva:head_look_at(manny)
        END_CUT_SCENE()
        Dialog:run("ev2", "dlg_eva2.lua")
    end
end
hq.eva_obj.use_eggs = function(arg1) -- line 659
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:say_line("/alma010/")
    start_script(eva.kill_idle, eva, ev_r_idles_m_turn_l_to_ma)
    eva:head_look_at(manny)
    wait_for_message()
    END_CUT_SCENE()
    eva:say_line("/hqev121/")
    start_script(eva.new_run_idle, eva, "turn_back")
    eva:head_look_at(nil)
end
hq.eva_obj.use_mouthpiece = function(arg1) -- line 674
    if dom.mouthpiece.bonded then
        if dom.mouthpiece.molded then
            START_CUT_SCENE()
            manny:walkto_object(arg1)
            stop_script(eva.new_run_idle)
            manny:wait_for_actor()
            eva:stop_chore(nil)
            eva:push_costume("ev_get_mp.cos")
            eva.got_teeth = TRUE
            dom.mouthpiece:put_in_limbo()
            eva:play_chore(ev_get_mp_get_mp)
            sleep_for(1541)
            sleep_for(871)
            eva:wait_for_chore()
            eva:stop_chore(ev_get_mp_get_mp)
            eva:play_chore(ev_get_mp_hqev122)
            eva:say_line("/hqev122/")
            start_sfx("evagrbmp.WAV")
            manny:stop_chore(manny.hold_chore, "ms.cos")
            manny:stop_chore(ms_hold, "ms.cos")
            manny.is_holding = nil
            wait_for_message()
            eva:wait_for_chore()
            eva:stop_chore(ev_get_mp_hqev122)
            eva:play_chore(ev_get_mp_hqev123)
            eva:say_line("/hqev123/")
            wait_for_message()
            salvador:say_line("/hqsa124/")
            salvador:wait_for_message()
            eva:pop_costume()
            start_script(eva.new_run_idle, eva, "m_tune_radio")
            if salvador.got_eggs then
                hq:leave_town()
            elseif salvador.talked_pigeons then
                manny:say_line("/hqma125/")
                wait_for_message()
                salvador:say_line("/hqsa126/")
            end
            END_CUT_SCENE()
        else
            START_CUT_SCENE()
            eva:say_line("/hqev127/")
            wait_for_message()
            manny:say_line("/hqma128/")
            wait_for_message()
            eva:say_line("/hqev129/")
            END_CUT_SCENE()
        end
    else
        START_CUT_SCENE()
        eva:say_line("/hqev130/")
        wait_for_message()
        manny:say_line("/hqma131/")
        wait_for_message()
        eva:say_line("/hqev132/")
        wait_for_message()
        END_CUT_SCENE()
    end
end
hq.plans = Object:create(hq, "/hqtx133/plans", -0.99760002, 0.0470002, 0.46000001, { range = 0.60000002 })
hq.plans.use_pnt_x = -0.63136101
hq.plans.use_pnt_y = 0.15371899
hq.plans.use_pnt_z = 0
hq.plans.use_rot_x = 0
hq.plans.use_rot_y = 96.810303
hq.plans.use_rot_z = 0
hq.plans.lookAt = function(arg1) -- line 746
    START_CUT_SCENE()
    salvador.stop_idle = TRUE
    manny:walkto_object(arg1)
    manny:say_line("/hqma134/")
    wait_for_message()
    salvador:play_chore(sv_hq_idles_head_turn_left)
    salvador:say_line("/hqsa135/")
    salvador:wait_for_message()
    salvador:play_chore(sv_hq_idles_head_turn_right)
    salvador.stop_idle = FALSE
    END_CUT_SCENE()
end
hq.plans.use = function(arg1) -- line 760
    manny:say_line("/hqma136/")
end
hq.projector = Object:create(hq, "/hqtx137/slide projector", -0.0575996, -0.0129997, 0.25999999, { range = 0.5 })
hq.projector.use_pnt_x = 0.1228
hq.projector.use_pnt_y = 0.237
hq.projector.use_pnt_z = 0
hq.projector.use_rot_x = 0
hq.projector.use_rot_y = 173.099
hq.projector.use_rot_z = 0
hq.projector.lookAt = function(arg1) -- line 773
    manny:say_line("/hqma138/")
end
hq.projector.pickUp = function(arg1) -- line 777
    manny:say_line("/hqma139/")
end
hq.projector.use = function(arg1) -- line 781
    START_CUT_SCENE()
    salvador.stop_idle = TRUE
    manny:walkto(arg1)
    while not hq.slideshow_displayed do
        break_here()
    end
    stop_script(hq.lsa_slideshow)
    manny:play_chore(ms_hand_on_obj, "ms.cos")
    manny:wait_for_chore(ms_hand_on_obj, "ms.cos")
    hq.plans:play_chore(hq_slideshow_no_slide)
    start_sfx("slidechg.wav")
    manny:head_look_at(hq.plans)
    manny:play_chore(ms_hand_off_obj, "ms.cos")
    manny:wait_for_chore(ms_hand_off_obj, "ms.cos")
    salvador:say_line("/hqsa140/")
    salvador:play_chore(sv_hq_idles_head_turn_left)
    salvador:wait_for_message()
    manny:head_look_at(arg1)
    manny:play_chore(ms_hand_on_obj, "ms.cos")
    manny:wait_for_chore(ms_hand_on_obj, "ms.cos")
    start_sfx("slidechg.wav")
    start_script(hq.lsa_slideshow, hq)
    salvador:play_chore(sv_hq_idles_head_turn_right)
    salvador.stop_idle = FALSE
    manny:play_chore(ms_hand_off_obj, "ms.cos")
    manny:wait_for_chore(ms_hand_off_obj, "ms.cos")
    END_CUT_SCENE()
end
hq.hatch = Object:create(hq, "/hqtx141/hatch", 0.51239997, 0.79699999, 0.41, { range = 0.69999999 })
hq.hatch.use_pnt_x = 0.465
hq.hatch.use_pnt_y = 0.63999999
hq.hatch.use_pnt_z = 0
hq.hatch.use_rot_x = 0
hq.hatch.use_rot_y = -356.53601
hq.hatch.use_rot_z = 0
hq.hatch.lookAt = function(arg1) -- line 824
    START_CUT_SCENE()
    salvador.stop_idle = TRUE
    manny:say_line("/hqma142/")
    wait_for_message()
    salvador:say_line("/hqsa143/")
    salvador:play_chore(sv_hq_idles_head_turn_left)
    salvador:wait_for_message()
    salvador:play_chore(sv_hq_idles_head_turn_right)
    salvador.stop_idle = FALSE
    hq.hatch:members_only()
    END_CUT_SCENE()
end
hq.hatch.members_only = function(arg1) -- line 839
    salvador:say_line("/hqsa144/")
end
hq.hatch.use = function(arg1) -- line 844
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:push_costume("ma_wheel_stuck.cos")
    manny:play_chore(ma_wheel_stuck_hands_on_wheel, "ma_wheel_stuck.cos")
    manny:wait_for_chore(ma_wheel_stuck_hands_on_wheel, "ma_wheel_stuck.cos")
    manny:play_chore(ma_wheel_stuck_turn_stuck_wheel, "ma_wheel_stuck.cos")
    manny:play_sound_at("valvtwst.wav")
    manny:wait_for_chore(ma_wheel_stuck_turn_stuck_wheel, "ma_wheel_stuck.cos")
    manny:say_line("/hqma145/")
    manny:play_chore(ma_wheel_stuck_hands_off_wheel, "ma_wheel_stuck.cos")
    manny:wait_for_chore(ma_wheel_stuck_hands_off_wheel, "ma_wheel_stuck.cos")
    manny:pop_costume()
    wait_for_message()
    hq.hatch:members_only()
    END_CUT_SCENE()
end
hq.hatch.pickUp = hq.hatch.use
hq.computer = Object:create(hq, "/hqtx146/computer", -0.41760001, 0.56699997, 0.34, { range = 0.5 })
hq.computer.use_pnt_x = -0.39300001
hq.computer.use_pnt_y = 0.26100001
hq.computer.use_pnt_z = 0
hq.computer.use_rot_x = 0
hq.computer.use_rot_y = -356.67001
hq.computer.use_rot_z = 0
hq.computer.lookAt = function(arg1) -- line 873
    manny:say_line("/hqma147/")
    if not arg1.seen then
        arg1.seen = TRUE
        START_CUT_SCENE()
        salvador.stop_idle = TRUE
        wait_for_message()
        salvador:play_chore(sv_hq_idles_head_turn_left)
        salvador:say_line("/hqsa148/")
        wait_for_message()
        salvador:play_chore(sv_hq_idles_head_turn_right)
        salvador.stop_idle = FALSE
        if not eva.got_teeth and not DEMO then
            salvador:say_line("/hqsa149/")
            wait_for_message()
            manny:say_line("/hqma150/")
            wait_for_message()
            salvador:say_line("/hqsa151/")
        end
        END_CUT_SCENE()
    end
end
hq.computer.pickUp = function(arg1) -- line 896
    system.default_response("not portable")
end
hq.computer.use = hq.computer.lookAt
hq.proj_spot_1 = { x = -0.83501399, y = -0.23845799, z = 0.60000002 }
hq.proj_spot_2 = { x = -0.99501401, y = -0.87501401, z = 0.0115416 }
hq.proj_spot_3 = { x = -0.98501402, y = 0.0515416, z = 0.33000001 }
hq.slide_items = { }
hq.slide_items[1] = hq.proj_spot_1
hq.slide_items[2] = hq.proj_spot_2
hq.slide_items[3] = hq.proj_spot_3
hq.scratch_spot1 = { x = -0.995013, y = 0.101542, z = 0.61000001 }
hq.scratch_spot2 = { x = -0.995013, y = 0.101542, z = 0.58999997 }
hq.scratch_spot3 = { x = -1.01501, y = -0.0284584, z = 0.58999997 }
hq.scratch_items = { }
hq.scratch_items[1] = hq.scratch_spot1
hq.scratch_items[2] = hq.scratch_spot2
hq.scratch_items[3] = hq.scratch_spot3
hq.al_door = Object:create(hq, "/hqtx152/elevator", 1.0524, 0.046999998, 0.5, { range = 0.1 })
hq.hq_al_box = hq.al_door
hq.al_door.use_pnt_x = 0.89461601
hq.al_door.use_pnt_y = -0.0153875
hq.al_door.use_pnt_z = 0
hq.al_door.use_rot_x = 0
hq.al_door.use_rot_y = -92.425797
hq.al_door.use_rot_z = 0
hq.al_door.out_pnt_x = 1.3379101
hq.al_door.out_pnt_y = -0.00312
hq.al_door.out_pnt_z = 0
hq.al_door.out_rot_x = 0
hq.al_door.out_rot_y = 90
hq.al_door.out_rot_z = 0
hq.al_door.passage = { "hq_elev_box" }
hq.al_door.lookAt = function(arg1) -- line 944
    manny:say_line("/hqma153/")
end
hq.al_door.walkOut = function(arg1) -- line 948
    START_CUT_SCENE()
    set_override(hq.al_door.skip_walkout, hq.al_door)
    manny:walkto_object(arg1, TRUE)
    ImSetState(STATE_NULL)
    play_movie("hq_close.snm", 193, 173)
    wait_for_movie()
    al:switch_to_set()
    al.hq_door:open()
    al.ga_door_obj.interest_actor:put_in_set(al)
    al.ga_door_obj:play_chore(0)
    SendObjectToBack(al.hDoorObj)
    ForceRefresh()
    manny:put_in_set(al)
    manny:setpos(0.075089, 2.08581, 0)
    manny:setrot(0, 260, 0)
    manny:walkto(0.45573, 2.02417, 0)
    sleep_for(100)
    manny:head_look_at_point(0.442081, 1.96215, 0)
    manny:wait_for_actor()
    al.hq_door:close()
    al.ga_door_obj:play_chore(1)
    SendObjectToBack(al.hDoorObj)
    ImSetState(STATE_NULL)
    play_movie("al_close.snm", 0, 64)
    manny:head_look_at(nil)
    manny:walkto(0.467088, 1.52067, 0)
    wait_for_movie()
    al.ga_door_obj:play_chore(0)
    SendObjectToBack(al.hDoorObj)
    ForceRefresh()
    manny:wait_for_actor()
    music_state:set_state(stateAL)
    END_CUT_SCENE()
end
hq.al_door.skip_walkout = function(arg1) -- line 988
    kill_override()
    break_here()
    al:switch_to_set()
    al.hq_door:close()
    manny:put_in_set(al)
    manny:setpos(0.467088, 1.52067, 0)
    manny:setrot(0, 62, 0)
    manny:head_look_at(nil)
    al.ga_door_obj:play_chore(0)
    ForceRefresh()
    music_state:set_state(stateAL)
end
hq.al_door.open = function(arg1, arg2) -- line 1002
    if not arg2 then
        START_CUT_SCENE()
        ImSetState(STATE_NULL)
        wait_for_movie()
        music_state:set_state(stateHQ)
        END_CUT_SCENE()
    end
    Object.open(arg1)
end
hq.al_door.close = function(arg1, arg2) -- line 1015
    if not arg2 then
        START_CUT_SCENE()
        ImSetState(STATE_NULL)
        wait_for_movie()
        music_state:set_state(stateHQ)
        END_CUT_SCENE()
    end
    Object.close(arg1)
end
hq_slideshow_slide1 = 0
hq_slideshow_slide2 = 1
hq_slideshow_no_slide = 2
CheckFirstTime("il.lua")
il = Set:create("il.set", "Inside the Lola", { il_top = 0, il_hitla = 1 })
il.surprise = function() -- line 13
    break_here()
    manny:walkto(0.944739, -1.65, 1.22)
    MakeSectorActive("after_sector", FALSE)
    sleep_for(1000)
    manny:say_line("/ilma001/")
end
dofile("mn_ladder_generic.lua")
il.hitsquad = { }
il.set_up_actors = function(arg1) -- line 25
    local local1 = 0
    repeat
        local1 = local1 + 1
        if not il.hitsquad[local1] then
            il.hitsquad[local1] = Actor:create(nil, nil, nil, "hitman" .. local1)
        end
        il.hitsquad[local1]:set_costume("hm" .. local1 .. "_HITMAN.cos")
        il.hitsquad[local1]:ignore_boxes()
        il.hitsquad[local1]:put_in_set(il)
        il.hitsquad[local1]:play_chore(1)
    until local1 == 3
    il.hitsquad[1]:setpos(-0.83835399, 5.77565, 0)
    il.hitsquad[1]:setrot(0, -115.959, 0)
    il.hitsquad[2]:setpos(1.0599999, 6.0443702, 0)
    il.hitsquad[2]:setrot(0, -299.41901, 0)
    il.hitsquad[3]:setpos(0.80137002, 6, 0)
    il.hitsquad[3]:setrot(0, -21.087799, 0)
end
il.enter = function(arg1) -- line 53
    il:current_setup(il_hitla)
    il:set_up_actors()
    if system.lastSet == lz then
        start_script(il.surprise)
    end
end
il.exit = function(arg1) -- line 64
    local local1 = 0
    repeat
        local1 = local1 + 1
        il.hitsquad[local1]:free()
    until local1 == 3
end
il.corpse2_trigger = { }
il.corpse2_trigger.walkOut = function(arg1) -- line 79
    il.corpse2:make_touchable()
    MakeSectorActive("corpse2_trigger", FALSE)
    manny:say_line("/ilma002/")
end
il.corpse3_4_trig = { }
il.corpse3_4_trig.walkOut = function(arg1) -- line 87
    il.corpse3:make_touchable()
    il.corpse4:make_touchable()
    MakeSectorActive("corpse3_4_trigger", FALSE)
    manny:say_line("/ilma003/")
    wait_for_message()
    manny:say_line("/ilma004/")
end
il.hit_trigger = { }
il.hit_trigger.walkOut = function(arg1) -- line 98
    start_script(cut_scene.hitsquad, cut_scene)
end
il.corpse1 = Object:create(il, "body", -0.64091802, -2.1347001, 1.47, { range = 2.2 })
il.corpse1.use_pnt_x = -0.45375299
il.corpse1.use_pnt_y = -1.89984
il.corpse1.use_pnt_z = 1.22
il.corpse1.use_rot_x = 0
il.corpse1.use_rot_y = 500.20401
il.corpse1.use_rot_z = 0
il.corpse1.lookAt = function(arg1) -- line 112
    manny:say_line("/ilma005/")
end
il.corpse1.pickUp = function(arg1) -- line 116
    manny:say_line("/ilma006/")
end
il.corpse1.use = function(arg1) -- line 121
    manny:say_line("/ilma007/")
end
il.corpse2 = Object:create(il, "body", 0.909082, -1.7247, 0.15000001, { range = 2.2 })
il.corpse2.use_pnt_x = 0.75139397
il.corpse2.use_pnt_y = -2.0161099
il.corpse2.use_pnt_z = 0
il.corpse2.use_rot_x = 0
il.corpse2.use_rot_y = 692.20599
il.corpse2.use_rot_z = 0
il.corpse2:make_untouchable()
il.corpse2.lookAt = function(arg1) -- line 135
    manny:say_line("/ilma008/")
end
il.corpse2.pickUp = function(arg1) -- line 139
end
il.corpse2.use = function(arg1) -- line 142
end
il.corpse3 = Object:create(il, "bodies", -0.227751, 0.54334402, 0.090000004, { range = 4 })
il.corpse3.use_pnt_x = -0.227751
il.corpse3.use_pnt_y = 0.0133441
il.corpse3.use_pnt_z = 0
il.corpse3.use_rot_x = 0
il.corpse3.use_rot_y = 741.45099
il.corpse3.use_rot_z = 0
il.corpse3:make_untouchable()
il.corpse3.lookAt = function(arg1) -- line 155
    manny:say_line("/ilma009/")
end
il.corpse3.pickUp = function(arg1) -- line 159
end
il.corpse3.use = function(arg1) -- line 162
end
il.corpse4 = Object:create(il, "bodies", 0.27697, 3.8699701, 0.059999999, { range = 7 })
il.corpse4.use_pnt_x = 0.27697
il.corpse4.use_pnt_y = 3.3299699
il.corpse4.use_pnt_z = 0
il.corpse4.use_rot_x = 0
il.corpse4.use_rot_y = 726.98999
il.corpse4.use_rot_z = 0
il.corpse4:make_untouchable()
il.corpse4.lookAt = il.corpse3.lookAt
il.corpse4.pickUp = function(arg1) -- line 177
end
il.corpse4.use = function(arg1) -- line 180
end
il.ladder = Object:create(il, "", -0.929676, -2.54263, 1.22, { range = 0 })
il.ladder.use_pnt_x = -0.92801201
il.ladder.use_pnt_y = -2.52267
il.ladder.use_pnt_z = 1.22
il.ladder.use_rot_x = 0
il.ladder.use_rot_y = 98.054703
il.ladder.use_rot_z = 0
il.ladder_top = il.ladder
il.ladder.walkOut = function(arg1) -- line 198
    local local1 = { }
    START_CUT_SCENE()
    manny:walkto(-0.929676, -2.54263, 1.22, 0, 98.054703, 0)
    manny:wait_for_actor()
    manny:wait_for_message()
    manny:ignore_boxes()
    manny:push_costume("mn_ladder_generic.cos")
    manny:play_chore_looping(mn_ladder_generic_hat_on)
    manny:play_chore(5)
    manny:wait_for_chore()
    manny:setpos(-0.707012, -2.4626701, 0.54400003)
    manny:play_chore(4)
    repeat
        local1 = manny:getpos()
        local1.z = local1.z - PerSecond(1)
        if local1.z < 0 then
            local1.z = 0
        end
        manny:setpos(local1)
        break_here()
    until local1.z == 0
    manny:pop_costume()
    manny:play_chore_looping(mn2_hat_on, "mn2.cos")
    manny:follow_boxes()
    END_CUT_SCENE()
end
il.lz_door = Object:create(il, "hatch", 1.6194299, -1.8312401, 1.65, { range = 0.60000002 })
il.lz_door.use_pnt_x = 1.3794301
il.lz_door.use_pnt_y = -1.8312401
il.lz_door.use_pnt_z = 1.22
il.lz_door.use_rot_x = 0
il.lz_door.use_rot_y = 266.48801
il.lz_door.use_rot_z = 0
il.lz_door.out_pnt_x = 1.5
il.lz_door.out_pnt_y = -1.83859
il.lz_door.out_pnt_z = 1.22
il.lz_door.out_rot_x = 0
il.lz_door.out_rot_y = 266.48801
il.lz_door.out_rot_z = 0
il.lz_door.walkOut = function(arg1) -- line 251
    lz:come_out_door(lz.il_door)
end
il.lz_door.lookAt = function(arg1) -- line 255
    system.default_response("way out")
end
il.lz_door.use = function(arg1) -- line 260
end
inventory_mt_balloon_in = 0
inventory_mt_balloon_out = 1
inventory_bread_in = 2
inventory_bread_out = 3
inventory_coral_in = 4
inventory_coral_out = 5
inventory_eggs_in = 6
inventory_eggs_out = 7
inventory_emptyhand_in = 8
inventory_emptyhand_out = 9
inventory_scythe_in = 10
inventory_scythe_out = 11
inventory_cat_balloon_out = 12
inventory_cat_balloon_in = 13
inventory_dingo_balloon_in = 14
inventory_dingo_balloon_out = 15
inventory_frost_balloon_in = 16
inventory_frost_balloon_out = 17
inventory_full_balloon_in = 18
inventory_full_balloon_out = 19
inventory_cards_in = 20
inventory_cards_out = 21
inventory_mouthpiece_in = 22
inventory_mouthpiece_out = 23
inventory_work_order_in = 24
inventory_work_order_out = 25
inventory_card_in = 26
inventory_card_out = 27
inventory_holycard_in = 28
inventory_holycard_out = 29
inventory_memo_in = 30
inventory_memo_out = 31
inventory_extinguisher_in = 32
inventory_extinguisher_out = 33
inventory_full_balloon2_in = 34
inventory_full_balloon2_out = 35
CheckFirstTime("inv_naut.lua")
inv_naut = Set:create("inv_naut.set", "Inventory", { chest = 0 })
inv_naut.set_up_actors = function(arg1) -- line 13
    if not mannys_hands then
        mannys_hands = Actor:create("ma_naut_arms.3do", nil, "ma_naut_pp.key", "/sytx187/")
    end
    mannys_hands:put_in_set(arg1)
    mannys_hands:moveto(0, 0, 0)
    mannys_hands:setrot(0, 180, 0)
end
inv_naut.enter = function(arg1) -- line 25
    arg1:set_up_actors()
    PrintDebug("Inventory save set: " .. tostring(inventory_save_set) .. "\n")
    PrintDebug("Inventory save handler: " .. tostring(inventory_save_handler) .. "\n")
end
inv_naut.exit = function(arg1) -- line 32
end
jb_jello_Chore0 = 0
jb_jello_Chore1 = 1
jb_jello_Chore2 = 2
CheckFirstTime("jb.lua")
jb = Set:create("jb.set", "Bone Wagon Garage", { jb_garin = 0, jb_ovrhd = 1 })
dofile("msb_shooter.lua")
dofile("gl_shooter.lua")
jb.poured = FALSE
jb.frozen = FALSE
jb.glottis_nauseated_reminder = function(arg1) -- line 19
    while 1 do
        sleep_for(rndint(6000, 16000))
        start_sfx("glNausea.wav", IM_LOW_PRIORITY, 90)
        break_here()
    end
end
jb.rotate_glottis = function() -- line 29
    local local1 = { }
    glottis:stop_chore(glottis_flip_ears, "glottis.cos")
    glottis:play_chore_looping(gl_fastwalk_swivel_left, "gl_fastwalk.cos")
    repeat
        local1 = glottis:getrot()
        local1.y = local1.y + PerSecond(50)
        if local1.y > 180 then
            local1.y = 180
        end
        glottis:setrot(local1)
        break_here()
    until local1.y == 180
    glottis:stop_chore(gl_fastwalk_swivel_left, "gl_fastwalk.cos")
    glottis:head_look_at_manny()
    glottis:fade_in_chore(glottis_home_pose, "glottis.cos", 500)
end
jb.dose_glottis = function() -- line 48
    local local1
    meche:set_collision_mode(COLLISION_OFF)
    START_CUT_SCENE()
    stop_script(xb.glottis_look_meche)
    if system.currentSet == jb then
        xb:switch_to_set()
        manny:put_in_set(xb)
        glottis:setrot(0, 180, 0)
        manny:setpos(28.775101, -14.0599, 1)
        manny:setrot(0, 358.76279, 0)
    else
        local1 = start_script(jb.rotate_glottis)
        manny:walkto(28.775101, -14.0599, 1, 0, 358.76279, 0)
        manny:wait_for_actor()
        wait_for_script(local1)
        glottis:head_look_at_manny()
    end
    glottis:say_line("/jbgl001/")
    wait_for_message()
    if lm.bottle.full then
        glottis:fade_out_chore(glottis_home_pose, "glottis.cos", 500)
        manny:stop_chore(msb_activate_bottle, "msb.cos")
        manny:stop_chore(msb_hold, "msb.cos")
        manny:push_costume("msb_shooter.cos")
        glottis:pop_costume()
        glottis:push_costume("gl_shooter.cos")
        glottis.nauseated = TRUE
        manny:say_line("/jbma002/")
        wait_for_message()
        glottis:head_look_at(nil)
        glottis:stop_chore(glottis_home_pose, "glottis.cos")
        manny:play_chore(msb_shooter_give_bottle)
        glottis:push_chore(gl_shooter_get_bottle)
        glottis:push_chore()
        manny:say_line("/jbma003/")
        wait_for_message()
        manny:say_line("/jbma004/")
        wait_for_message()
        lm.bottle:put_in_limbo()
        glottis:play_chore(gl_shooter_drink)
        glottis:say_line("/jbgl005/")
        wait_for_message()
        glottis:wait_for_chore()
        glottis:push_chore(gl_shooter_give_back)
        glottis:push_chore()
        glottis:push_chore(gl_shooter_wait)
        glottis:push_chore()
        manny:stop_chore(msb_shooter_give_bottle)
        manny:play_chore(msb_shooter_get_bottle, "msb_shooter.cos")
        manny:print_costumes()
        manny:push_chore()
        manny:push_chore(msb_shooter_wait)
        manny:push_chore()
        glottis:say_line("/jbgl007/")
        wait_for_message()
        glottis:say_line("/jbgl008/")
        wait_for_message()
        glottis:say_line("/jbgl009/")
        wait_for_message()
        glottis:say_line("/jbgl010/")
        wait_for_message()
        glottis:say_line("/jbgl011/")
        xb:current_setup(xb_newcu)
        glottis:play_chore(gl_shooter_grab)
        manny:play_chore(msb_shooter_grabbed)
        glottis:wait_for_chore()
        glottis:stop_chore(gl_shooter_grab)
        manny:stop_chore(msb_shooter_grabbed)
        glottis:play_chore_looping(gl_shooter_shake)
        start_sfx("glShake.imu")
        manny:play_chore_looping(msb_shooter_shaken)
        wait_for_message()
        manny:say_line("/jbma012/")
        wait_for_message()
        glottis:set_chore_looping(gl_shooter_shake, FALSE)
        manny:set_chore_looping(msb_shooter_shaken, FALSE)
        glottis:wait_for_chore()
        glottis:stop_chore(gl_shooter_shake)
        manny:stop_chore(msb_shooter_shaken)
        stop_sound("glShake.imu")
        system:lock_display()
        glottis:complete_chore(gl_shooter_lookup)
        glottis:wait_for_chore()
        system:unlock_display()
        xb:current_setup(xb_docws)
        manny:ignore_boxes()
        manny:setpos(28.7237, -13.925, 1.1018)
        manny:play_chore(msb_shooter_putdown)
        break_here()
        sleep_for(220)
        break_here()
        music_state:set_sequence(seqLumbagoLemo)
        glottis:play_chore(gl_shooter_prep_run)
        manny:wait_for_chore()
        glottis:wait_for_chore()
        manny:stop_chore(msb_shooter_putdown)
        glottis:stop_chore(gl_shooter_prep_run)
        manny:setpos(27.902641, -13.554483, 1)
        manny:setrot(0, 270, 0)
        manny:follow_boxes()
        manny:pop_costume()
        glottis:say_line("/jbgl013/")
        glottis:wait_for_chore()
        glottis:play_chore(gl_shooter_run_out)
        glottis:wait_for_chore(gl_shooter_run_out)
        glottis:set_visibility(FALSE)
        glottis:pop_costume()
        wait_for_message()
        meche:set_collision_mode(COLLISION_SPHERE)
        manny:head_look_at(meche)
        meche:say_line("/jbmc015/")
        wait_for_message()
        manny:say_line("/jbma016/")
        wait_for_message()
        IrisDown(355, 245, 1000)
        manny.is_holding = nil
        lm.bottle:free()
        manny:stop_chore(msb_hold, "msb.cos")
        glottis:pop_costume()
        sleep_for(1500)
        glottis:set_visibility(TRUE)
        glottis:play_chore_looping(glottis_flip_ears, "glottis.cos")
        IrisUp(215, 280, 1000)
        start_sfx("glNausea.wav")
        glottis:say_line("/jbgl017/")
        wait_for_message()
        glottis:say_line("/jbgl018/")
        wait_for_message()
        meche:say_line("/jbmc019/")
        xb.glottis_obj.obj_x = 28.8643
        xb.glottis_obj.obj_y = -13.7211
        xb.glottis_obj.obj_z = 1.8377399
        xb.glottis_obj.interest_actor:setpos({ x = 28.8643, y = -13.7211, z = 1.8377399 })
        xb.glottis_obj:make_touchable()
        xb.glottis_obj.interest_actor:put_in_set(xb)
        glottis:pop_costume()
        start_script(jb.glottis_nauseated_reminder)
    else
        manny:say_line("/jbma020/")
        wait_for_message()
        glottis:say_line("/jbgl021/")
    end
    END_CUT_SCENE()
end
jb.see_trap = function() -- line 229
    START_CUT_SCENE()
    manny:say_line("/jbma022/")
    wait_for_message()
    glottis:say_line("/jbgl023/")
    wait_for_message()
    sleep_for(1000)
    manny:head_look_at(jb.glottis_obj)
    sleep_for(500)
    glottis:say_line("/jbgl024/")
    wait_for_message()
    manny:head_look_at(nil)
    manny:twist_head_gesture()
    END_CUT_SCENE()
end
jb.set_up_actors = function(arg1) -- line 245
    glottis:default()
    glottis:put_in_set(jb)
    glottis:setpos(0.785915, -2.64663, 0.1)
    glottis:setrot(0, 377.007, 0)
    glottis:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(glottis.hActor, 0.5)
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(chepito.hActor, 0.45)
    SetActorCollisionScale(manny.hActor, 0.35)
    glottis:head_look_at(nil)
end
jb.enter = function(arg1) -- line 265
    NewObjectState(jb_garin, OBJSTATE_UNDERLAY, "jb_jello.bm")
    jb.bone_wagon:set_object_state("jb_jello.cos")
    if jb.frozen then
        jb.bone_wagon:play_chore(2)
        box_off("dominos")
        box_on("stop_box")
    else
        if jb.poured then
            jb.bone_wagon:play_chore(1)
        else
            jb.bone_wagon:play_chore(0)
        end
        box_off("stop_box")
    end
    if jb.poured and not jb.frozen then
        manny.footsteps = footsteps.jello
    end
    if glottis.nauseated and not jb.poured then
        start_script(jb.glottis_nauseated_reminder)
    end
    jb:set_up_actors()
end
jb.exit = function(arg1) -- line 298
    stop_script(jb.glottis_nauseated_reminder)
    glottis:free()
end
jb.bone_wagon = Object:create(jb, "/jbtx025/Bone Wagon", 0.47191101, 2.2590899, 1.036, { range = 1.5 })
jb.bone_wagon.use_pnt_x = 0.653099
jb.bone_wagon.use_pnt_y = 0.39972201
jb.bone_wagon.use_pnt_z = 0
jb.bone_wagon.use_rot_x = 0
jb.bone_wagon.use_rot_y = 18.1998
jb.bone_wagon.use_rot_z = 0
jb.bone_wagon.lookAt = function(arg1) -- line 316
    soft_script()
    manny:say_line("/jbma026/")
    wait_for_message()
    glottis:say_line("/jbgl027/")
    wait_for_message()
    glottis:say_line("/jbgl028/")
end
jb.bone_wagon.pickUp = function(arg1) -- line 325
    manny:say_line("/jbma029/")
end
jb.bone_wagon.use = function(arg1) -- line 329
    if jb.frozen then
        manny:say_line("/jbma030/")
    elseif jb.poured then
        manny:say_line("/jbma031/")
    else
        manny:say_line("/jbma032/")
    end
end
jb.glottis_obj = Object:create(jb, "/jbtx033/Glottis", 0.86613202, -1.86167, 0.94, { range = 1.2 })
jb.glottis_obj.use_pnt_x = 0.56613201
jb.glottis_obj.use_pnt_y = -1.62167
jb.glottis_obj.use_pnt_z = 0.1
jb.glottis_obj.use_rot_x = 0
jb.glottis_obj.use_rot_y = -494.08899
jb.glottis_obj.use_rot_z = 0
jb.glottis_obj.lookAt = function(arg1) -- line 349
    if glottis.nauseated then
        if jb.poured then
            soft_script()
            manny:say_line("/jbma034/")
            wait_for_message()
            glottis:say_line("/jbgl035/")
        else
            manny:say_line("/jbma036/")
        end
    else
        manny:say_line("/jbma037/")
    end
end
jb.glottis_obj.pickUp = function(arg1) -- line 364
    system.default_response("not now")
end
jb.glottis_obj.use = function(arg1) -- line 368
    if jb.poured then
        if jb.frozen then
            manny:say_line("/jbma038/")
        else
            manny:say_line("/jbma039/")
            wait_for_message()
            glottis:say_line("/jbgl040/")
        end
    elseif glottis.nauseated then
        if system.currentSet == jb then
            xb:come_out_door(xb.jb_door)
        end
        jb.poured = TRUE
        stop_script(jb.glottis_nauseated_reminder)
        stop_script(xb.glottis_look_meche)
        START_CUT_SCENE()
        meche:set_collision_mode(COLLISION_OFF)
        manny:walkto(28.978, -14.1141, 0.999412, 0, -3.28925, 0)
        manny:say_line("/jbma041/")
        wait_for_message()
        music_state:set_state(stateKS)
        glottis:stop_chore(glottis_flip_ears, "glottis.cos")
        glottis:push_costume("gl_puke.cos")
        glottis:play_chore(0)
        glottis:say_line("/jbgl045/")
        glottis:wait_for_message()
        start_sfx("glPuke3.wav")
        glottis:wait_for_chore()
        start_sfx("glPuke4.wav")
        xb:current_setup(xb_newcu)
        start_sfx("glPuke2.wav")
        glottis:setrot(0, 90, 0)
        glottis:play_chore(1)
        wait_for_message()
        glottis:say_line("/jbgl042/")
        start_sfx("glPuke1.wav")
        wait_for_message()
        xb.jello:play_chore(0)
        glottis:say_line("/jbgl043/")
        start_sfx("glPuke3.wav")
        wait_for_message()
        start_sfx("glPuke1.wav")
        wait_for_sound("glPuke1.wav")
        glottis:say_line("/jbgl044/")
        start_sfx("glPuke2.wav")
        wait_for_message()
        glottis:wait_for_chore()
        xb:current_setup(xb_docws)
        glottis:setrot(0, 90, 0)
        glottis:setrot(0, 90, 0)
        xb.glottis_obj.obj_x = 28.029
        xb.glottis_obj.obj_y = -13.0451
        xb.glottis_obj.obj_z = 1.66
        xb.glottis_obj.interest_actor:setpos(28.029, -13.0451, 1.66)
        glottis:pop_costume()
        glottis:play_chore_looping(glottis_flip_ears, "glottis.cos")
        wait_for_message()
        manny:say_line("/jbma048/")
        glottis:head_look_at_manny()
        wait_for_message()
        glottis:say_line("/jbgl049/")
        glottis:wait_for_message()
        music_state:set_sequence(seqBreathMint)
        music_state:update()
        glottis:head_look_at(nil)
        meche:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(meche.hActor, 0.35)
        END_CUT_SCENE()
    else
        manny:say_line("/jbma050/")
        wait_for_message()
        glottis:say_line("/jbgl051/")
    end
end
jb.glottis_obj.use_bottle = function(arg1) -- line 447
    start_script(jb.dose_glottis)
end
jb.glottis_obj.use_note = function(arg1) -- line 451
    tg.note:scare_response()
end
jb.glottis_obj.use_nitro = function(arg1) -- line 455
    manny:say_line("/jbma052/")
end
jb.domino_ramp = Object:create(jb, "/jbtx053/dominos", 0.745911, 2.47809, 0.296, { range = 0.5 })
jb.domino_ramp.use_pnt_x = 0.98916101
jb.domino_ramp.use_pnt_y = 2.67907
jb.domino_ramp.use_pnt_z = 0
jb.domino_ramp.use_rot_x = 0
jb.domino_ramp.use_rot_y = 126.727
jb.domino_ramp.use_rot_z = 0
jb.domino_ramp.lookAt = function(arg1) -- line 468
    manny:say_line("/jbma054/")
end
jb.domino_ramp.pickUp = function(arg1) -- line 472
    manny:say_line("/jbma055/")
end
jb.domino_ramp.use = jb.domino_ramp.pickUp
jb.domino_trigger = Object:create(jb, "", 0, 0, 0, { range = 0 })
jb.domino_trigger.walkOut = function(arg1) -- line 479
    if jb.poured then
        jb.bone_wagon:use()
    else
        manny:say_line("/jbma065/")
    end
end
jb.dominos = Object:create(jb, "/jbtx056/dominos", 1.04419, 0.349545, -0.0099999905, { range = 1.9 })
jb.dominos.use_pnt_x = 0.80419397
jb.dominos.use_pnt_y = -1.20046
jb.dominos.use_pnt_z = 0.1
jb.dominos.use_rot_x = 0
jb.dominos.use_rot_y = 10.9633
jb.dominos.use_rot_z = 0
jb.dominos.lookAt = function(arg1) -- line 496
    if jb.poured then
        if jb.frozen then
            manny:say_line("/jbma057/")
            wait_for_message()
            manny:say_line("/jbma058/")
            wait_for_message()
            glottis:say_line("/jbgl059/")
        else
            manny:say_line("/jbma060/")
            wait_for_message()
            glottis:say_line("/jbgl061/")
            wait_for_message()
            glottis:say_line("/jbgl062/")
        end
    else
        manny:say_line("/jbma063/")
    end
end
jb.dominos.pickUp = function(arg1) -- line 516
    manny:say_line("/jbma064/")
end
jb.dominos.use = function(arg1) -- line 521
    if jb.poured then
        if jb.frozen then
            manny:say_line("/jbma066/")
        else
            manny:say_line("/jbma067/")
        end
    else
        arg1:walkOut()
    end
end
jb.dominos.use_nitro = function(arg1) -- line 533
    if jb.poured then
        START_CUT_SCENE()
        jb.frozen = TRUE
        cur_puzzle_state[49] = TRUE
        box_off("domino_trigger")
        box_on("stop_box")
        manny:walkto_object(arg1)
        manny:wait_for_actor()
        manny:push_costume("msb_pour_nitro.cos")
        manny:play_chore(0)
        manny:wait_for_chore()
        manny:play_chore(1)
        sleep_for(500)
        jb.bone_wagon:play_chore(0)
        start_sfx("jbNitPor.wav")
        StartMovie("jb.snm", nil, 0, 240)
        wait_for_movie()
        jb.bone_wagon:play_chore(2)
        manny:wait_for_chore()
        manny:play_chore(2)
        manny:wait_for_chore()
        manny:pop_costume()
        put_away_held_item()
        glottis:say_line("/jbgl068/")
        wait_for_message()
        glottis:say_line("/jbgl069/")
        wait_for_message()
        manny:say_line("/jbma070/")
        END_CUT_SCENE()
    else
        manny:say_line("/jbma071/")
    end
end
jb.plunger = Object:create(jb, "/jbtx072/plunger", 0.35891101, 2.5240901, -0.90399998, { range = 0.60000002 })
jb.plunger.use_pnt_x = 0.379758
jb.plunger.use_pnt_y = 2.6993799
jb.plunger.use_pnt_z = 0
jb.plunger.use_rot_x = 0
jb.plunger.use_rot_y = 170.683
jb.plunger.use_rot_z = 0
jb.plunger.lookAt = function(arg1) -- line 578
    manny:say_line("/jbma073/")
end
jb.plunger.pickUp = function(arg1) -- line 582
    jb.domino_ramp:pickUp()
end
jb.plunger.use = function(arg1) -- line 586
    manny:say_line("/jbma074/")
    wait_for_message()
    manny:say_line("/jbma075/")
end
jb.dynamite = Object:create(jb, "/jbtx076/dynamite", -0.079089001, 2.5630901, 0.38, { range = 0.80000001 })
jb.dynamite.use_pnt_x = 0.045685198
jb.dynamite.use_pnt_y = 2.71242
jb.dynamite.use_pnt_z = 0
jb.dynamite.use_rot_x = 0
jb.dynamite.use_rot_y = 166.71201
jb.dynamite.use_rot_z = 0
jb.dynamite.lookAt = function(arg1) -- line 600
    manny:say_line("/jbma077/")
end
jb.dynamite.pickUp = function(arg1) -- line 604
    START_CUT_SCENE()
    manny:walkto(0.292617, 2.89696, 0.05, 0, 139.748, 0)
    manny:say_line("/jbma078/")
    music_state:set_sequence(seqJelloSuspense)
    wait_for_message()
    manny:play_chore(msb_reach_low, "msb.cos")
    sleep_for(500)
    start_sfx("jbDefuse.wav")
    sleep_for(500)
    start_script(cut_scene.vivamaro, cut_scene)
    END_CUT_SCENE()
end
jb.dynamite.use = jb.dynamite.pickUp
jb.xb_door = Object:create(jb, "/jbtx079/door", 0.25442499, -1.8533, 0.50999999, { range = 0.89999998 })
jb.xb_door.use_pnt_x = 0.66442502
jb.xb_door.use_pnt_y = -1.5033
jb.xb_door.use_pnt_z = 0.1
jb.xb_door.use_rot_x = 0
jb.xb_door.use_rot_y = -200.77901
jb.xb_door.use_rot_z = 0
jb.xb_door.out_pnt_x = 0.20763899
jb.xb_door.out_pnt_y = -1.8844
jb.xb_door.out_pnt_z = 0.1
jb.xb_door.out_rot_x = 0
jb.xb_door.out_rot_y = -231.24699
jb.xb_door.out_rot_z = 0
jb.xb_door:make_untouchable()
jb.xb_door.walkOut = function(arg1) -- line 642
    xb:come_out_door(xb.jb_door)
end
jb.xb_door.lookAt = function(arg1) -- line 646
    manny:say_line("/jbma080/")
end
key_key = 0
CheckFirstTime("kh.lua")
kh = Set:create("kh.set", "Kitty Hallway", { kh_estha = 0, kh_estha1 = 0, kh_estha2 = 0, kh_sansp = 1 })
kh.camerachange = function(arg1, arg2, arg3) -- line 19
    if arg3 == kh_sansp then
        music_state:set_state(stateKH_SANS)
    else
        music_state:set_state(stateKH)
    end
end
kh.enter = function(arg1) -- line 28
    start_script(tb.off_screen_kittys)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -2, 1.2, 3)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, -0.4, -1.7, 2)
    SetActorShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow2")
end
kh.exit = function(arg1) -- line 45
    KillActorShadows(manny.hActor)
    stop_script(tb.off_screen_kittys)
end
kh.sanspoof = Object:create(kh, "/khtx014/stuffed cat", -1.80769, 1.11782, 1.4299999, { range = 2 })
kh.sanspoof.use_pnt_x = -1.50769
kh.sanspoof.use_pnt_y = 0.0278158
kh.sanspoof.use_pnt_z = 0
kh.sanspoof.use_rot_x = 0
kh.sanspoof.use_rot_y = -2.5418601
kh.sanspoof.use_rot_z = 0
kh.sanspoof.lookAt = function(arg1) -- line 60
    manny:say_line("/khma002/")
end
kh.sanspoof.pickUp = function(arg1) -- line 64
    system.default_response("dont need")
end
kh.sanspoof.use = function(arg1) -- line 68
    manny:say_line("/khma003/")
end
kh.plaque = Object:create(kh, "/khtx015/plaque", -1.53769, 0.277816, 0.46000001, { range = 0.60000002 })
kh.plaque.use_pnt_x = -1.50769
kh.plaque.use_pnt_y = 0.0278158
kh.plaque.use_pnt_z = 0
kh.plaque.use_rot_x = 0
kh.plaque.use_rot_y = -2.5418601
kh.plaque.use_rot_z = 0
kh.plaque.lookAt = function(arg1) -- line 81
    START_CUT_SCENE()
    kh:current_setup(kh_sansp)
    music_state:set_state(stateKH_SANS)
    manny:say_line("/khma005/")
    wait_for_message()
    manny:say_line("/khma006/")
    wait_for_message()
    manny:say_line("/khma007/")
    wait_for_message()
    manny:say_line("/khma008/")
    wait_for_message()
    manny:say_line("/khma009/")
    wait_for_message()
    manny:say_line("/khma016/")
    manny:wait_for_message()
    kh:current_setup(kh_estha)
    music_state:set_state(stateKH)
    END_CUT_SCENE()
end
kh.plaque.pickUp = function(arg1) -- line 104
    system.default_response("attached")
end
kh.plaque.use = kh.plaque.lookAt
kh.stable_door1 = Object:create(kh, "/khtx010/door", 0, 0, 0, { range = 0 })
kh.stable_door1.lookAt = function(arg1) -- line 118
    manny:say_line("/khma011/")
end
kh.stable_door1.walkOut = function(arg1) -- line 122
    system.default_response("locked")
end
kh.ks_door = Object:create(kh, "door", -3.6500001, 0.062084101, 0, { range = 0 })
kh.ks_door.use_pnt_x = -0.484523
kh.ks_door.use_pnt_y = -1.12301
kh.ks_door.use_pnt_z = 0
kh.ks_door.use_rot_x = 0
kh.ks_door.use_rot_y = 181.105
kh.ks_door.use_rot_z = 0
kh.ks_door.out_pnt_x = -0.47855401
kh.ks_door.out_pnt_y = -1.4325
kh.ks_door.out_pnt_z = 0
kh.ks_door.out_rot_x = 0
kh.ks_door.out_rot_y = 181.105
kh.ks_door.out_rot_z = 0
kh.ks_box = kh.ks_door
kh.ks_door.lookAt = function(arg1) -- line 145
    manny:say_line("/khma012/")
end
kh.ks_door.walkOut = function(arg1) -- line 149
    ks:come_out_door(ks.kh_door)
end
kh.ts_door = Object:create(kh, "door", 0.125, -0.125, 0, { range = 0 })
kh.ts_door.use_pnt_x = -3.6500001
kh.ts_door.use_pnt_y = 0.062084101
kh.ts_door.use_pnt_z = 0
kh.ts_door.use_rot_x = 0
kh.ts_door.use_rot_y = -270.923
kh.ts_door.use_rot_z = 0
kh.ts_door.out_pnt_x = -3.6500001
kh.ts_door.out_pnt_y = 0.062084101
kh.ts_door.out_pnt_z = 0
kh.ts_door.out_rot_x = 0
kh.ts_door.out_rot_y = -270.923
kh.ts_door.out_rot_z = 0
kh.ts_box = kh.ts_door
kh.ts_door.lookAt = function(arg1) -- line 170
    manny:say_line("/khma013/")
end
kh.ts_door.walkOut = function(arg1) -- line 173
    ts:come_out_door(ts.kh_door)
end
ks_can_open = 0
ks_can_set_open = 1
CheckFirstTime("ks.lua")
ks = Set:create("ks.set", "kitty stable", { ks_intws = 0, ks_overhead = 1 })
dofile("mc_litter.lua")
ks.opener_actor = Actor:create(nil, nil, nil, "opener")
ks.opener_actor.default = function(arg1) -- line 16
    arg1:set_costume("ks_opener.cos")
    arg1:put_in_set(ks)
    arg1:play_chore(0)
    arg1:setpos(0.283674, 1.404, 0.365)
    arg1:setrot(0, 270, 0)
end
ks.opener_actor.spin = function(arg1) -- line 24
    local local1 = { x = -0.282998, y = 0, z = 0 }
    local local2 = { x = 0.44025901, y = 1.55282, z = 0.36000001 }
    local local3
    local local4
    local4 = 360
    while local4 > 0 do
        arg1:setrot(0, local4, 0)
        local3 = RotateVector(local1, { x = 0, y = local4, z = 0 })
        arg1:setpos(local2.x + local3.x, local2.y + local3.y, local2.z)
        local4 = local4 - 2
        break_here()
    end
    local4 = 0
    arg1:setrot(0, local4, 0)
    local3 = RotateVector(local1, { x = 0, y = local4, z = 0 })
    arg1:setpos(local2.x + local3.x, local2.y + local3.y, local2.z)
end
ks.far_box_point = { x = -0.87086898, y = 0.68475401, z = 0.2282 }
ks.near_box_point = { x = -0.57376897, y = -0.64934599, z = 0.2282 }
ks.proximity = function(arg1, arg2, arg3, arg4) -- line 50
    local local1, local2, local3
    local local4, local5, local6
    local local7
    local local8
    if not arg3 then
        if not arg1 then
            PrintDebug("No valid actor in proximity calculation.\n")
            return nil
        end
        if type(arg1) == "table" then
            arg1 = arg1.hActor
        end
        if type(arg2) == "table" then
            arg2 = arg2.hActor
        end
        if not arg2 then
            arg2 = system.currentActor.hActor
        end
        local4, local5, local6 = GetActorPos(arg2)
    else
        local4 = arg2
        local5 = arg3
        local6 = arg4
    end
    if type(arg1) == "table" then
        local7 = arg1:getpos()
        local1, local2, z1 = local7.x, local7.y, local7.z
    else
        local1, local2, z1 = GetActorPos(arg1)
    end
    local8 = sqrt((local1 - local4) ^ 2 + (local2 - local5) ^ 2 + (z1 - local6) ^ 2)
    return local8
end
ks.smell = function(arg1) -- line 93
    START_CUT_SCENE()
    ks.smelled = TRUE
    manny:twist_head_gesture()
    manny:say_line("/ksma001/")
    wait_for_message()
    manny:say_line("/ksma002/")
    if sl.detector.in_catbox then
        manny:wait_for_message()
        sleep_for(1500)
    end
    END_CUT_SCENE()
end
ks.say_eyw = function(arg1) -- line 107
    START_CUT_SCENE()
    ks.repulsed = TRUE
    manny:wait_for_actor()
    manny:wait_for_message()
    manny:head_look_at(ks.sky)
    manny:say_line("/ksma003/")
    wait_for_message()
    manny:head_look_at(ks.litter3)
    manny:say_line("/ksma004/")
    manny:wait_for_message()
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
ks.scythe_detector_monitor = function(arg1) -- line 123
    local local1, local2
    if sl.detector.in_catbox then
        while TRUE do
            if manny.is_holding == mo.scythe then
                local1 = proximity(manny.hActor, 0.0016740001, -0.072999999, 0)
                local2 = 127 - local1 * 100
                if local2 > 80 then
                    local2 = 80
                elseif local2 < 0 then
                    local2 = 10
                end
                if not sound_playing("mdSand.IMU") and local2 > 0 then
                    start_sfx("mdSand.IMU", IM_HIGH_PRIORITY, local2)
                elseif local2 == 0 then
                    stop_sound("mdSand.IMU")
                else
                    set_vol("mdSand.IMU", local2)
                end
            elseif sound_playing("mdSand.IMU") then
                stop_sound("mdSand.IMU")
            end
            break_here()
        end
    end
end
ks.use_scythe = function(arg1) -- line 155
    local local1
    local local2 = manny:find_sector_name("temp_treasure")
    if sl.detector.in_catbox then
        if sl.detector.retrieved then
            manny:say_line("/ksma014/")
        else
            START_CUT_SCENE()
            if local2 then
                manny:walk_and_face(0.053943299, -0.175, 0, 0, 188.138, 0)
            else
                if ks.proximity(manny, ks.far_box_point.x, ks.far_box_point.y, ks.far_box_point.z) < ks.proximity(manny, ks.near_box_point.x, ks.near_box_point.y, ks.near_box_point.z) then
                    local1 = ks.far_box_point
                else
                    local1 = ks.near_box_point
                end
                manny:turn_toward_entity(local1.x, local1.y, local1.z)
            end
            manny:wait_for_actor()
            break_here()
            manny:stop_chore(nil, "mc.cos")
            manny:set_costume(nil)
            manny:set_costume("mc_litter.cos")
            manny:run_chore(mc_litter_scan_in, "mc_litter.cos")
            manny:stop_chore(mc_litter_scan_in, "mc_litter.cos")
            manny:play_chore_looping(mc_litter_scan_loop, "mc_litter.cos")
            if local2 then
                stop_script(ks.scythe_detector_monitor)
                break_here()
                if not sound_playing("mdSand.IMU") then
                    start_sfx("mdSand.IMU")
                end
                set_vol("mdSand.IMU", 127)
                sleep_for(600)
                manny:say_line("/ksma015/")
                wait_for_message()
            else
                sleep_for(3000)
            end
            manny:set_chore_looping(mc_litter_scan_loop, FALSE, "mc_litter.cos")
            manny:wait_for_chore(mc_litter_scan_loop, "mc_litter.cos")
            manny:stop_chore(mc_litter_scan_loop, "mc_litter.cos")
            manny:run_chore(mc_litter_scan_out, "mc_litter.cos")
            manny:stop_chore(mc_litter_scan_out, "mc_litter.cos")
            if not local2 then
                manny:default()
                manny.is_holding = mo.scythe
                manny:play_chore(mc_hold_scythe, "mc.cos")
            else
                sl.detector.retrieved = TRUE
                sl.detector.in_catbox = FALSE
                if not sound_playing("mdSand.IMU") then
                    start_sfx("mdSand.IMU")
                end
                manny:play_chore(mc_litter_digout_detector, "mc_litter.cos")
                sleep_for(3000)
                stop_sound("mdSand.IMU")
                start_sfx("mdBeep.IMU")
                manny:wait_for_chore(mc_litter_digout_detector, "mc_litter.cos")
                manny:stop_chore()
                music_state:set_sequence(seqFindDetector)
                if not sl.detector.actor then
                    sl.detector.actor = Actor:create()
                end
                sl.detector.actor:set_costume(nil)
                sl.detector.actor:set_costume("mc_litter.cos")
                sl.detector.actor:put_in_set(ks)
                sl.detector.actor:set_visibility(TRUE)
                sl.detector.actor:play_chore(mc_litter_detector_only, "mc_litter.cos")
                sl.detector.actor:setpos(0.053943299, -0.175, 0)
                sl.detector.actor:setrot(0, 188.138, 0)
                stop_sound("mdBeep.IMU")
                manny:default()
                manny.is_holding = mo.scythe
                manny:play_chore(mc_hold_scythe, "mc.cos")
                mo.scythe:put_away()
                manny:head_look_at_point({ x = -0.43777201, y = -0.218685, z = 0.020099999 })
                manny:walk_and_face(-0.28027201, -0.166685, 0, 0, 153.159, 0)
                manny:play_chore(mc_reach_low, "mc.cos")
                sleep_for(300)
                manny:blend(mc_activate_detector, mc_reach_low, 500)
                sl.detector.actor:free()
                sleep_for(500)
                manny:generic_pickup(sl.detector)
                manny:say_line("/ksma016/")
                manny:wait_for_chore(mc_reach_low, "mc.cos")
                manny:stop_chore(mc_reach_low, "mc.cos")
            end
            END_CUT_SCENE()
            if local2 then
                cur_puzzle_state[27] = TRUE
            end
        end
    else
        manny:say_line("/ksma017/")
    end
end
ks.open_can = function(arg1) -- line 263
    START_CUT_SCENE()
    manny:play_chore(mc_give_hrpass, "mc.cos")
    manny:wait_for_chore(mc_give_hrpass, "mc.cos")
    manny:stop_chore(mc_activate_opener, "mc.cos")
    manny:stop_chore(mc_hold, "mc.cos")
    manny:stop_chore(mc_give_hrpass, "mc.cos")
    manny:play_chore(mc_hrpass_rtrn2base, "mc.cos")
    ks:add_object_state(ks_intws, "ks_can.bm", nil, OBJSTATE_UNDERLAY)
    ks.cat_food:set_object_state("ks_can.cos")
    start_sfx("hkCskOp1.wav")
    wait_for_sound("hkCskOp1.wav")
    start_sfx("hkCskOp2.WAV")
    ks.opener_actor:default()
    start_script(ks.opener_actor.spin, ks.opener_actor)
    sleep_for(1000)
    start_sfx("hkCskOp2.WAV")
    sleep_for(1350)
    ks.cat_food:play_chore(0)
    wait_for_script(ks.opener_actor.spin)
    manny:stop_chore(mc_hrpass_rtrn2base, "mc.cos")
    manny:play_chore(mc_give_hrpass, "mc.cos")
    sleep_for(250)
    start_sfx("ksGetOp.wav")
    manny:wait_for_chore(mc_give_hrpass, "mc.cos")
    ks.opener_actor:play_chore(1)
    manny:stop_chore(mc_give_hrpass, "mc.cos")
    manny:play_chore(mc_activate_opener, "mc.cos")
    manny:play_chore(mc_hrpass_rtrn2base, "mc.cos")
    manny:blend(mc_hold, mc_hrpass_rtrn2base, 150, "mc.cos", "mc.cos")
    manny.hold_chore = mc_activate_opener
    sleep_for(150)
    manny:stop_chore(mc_hrpass_rtrn2base, "mc.cos")
    END_CUT_SCENE()
end
ks.footstep_monitor = function(arg1) -- line 309
    while TRUE do
        if manny:find_sector_name("metal_box") then
            if manny.footsteps ~= footsteps.metal then
                manny.footsteps = footsteps.metal
            end
        elseif manny:find_sector_name("concrete_box") then
            if manny.footsteps ~= footsteps.concrete then
                manny.footsteps = footsteps.concrete
            end
        end
        break_here()
    end
end
ks.enter = function(arg1) -- line 324
    single_start_script(ks.scythe_detector_monitor, ks)
    if ks.cat_food.opened then
        ks:add_object_state(ks_intws, "ks_can.bm", nil, OBJSTATE_UNDERLAY)
        ks.cat_food:set_object_state("ks_can.cos")
        ks.cat_food:play_chore(1)
    end
    start_script(tb.off_screen_kittys)
    start_script(ks.footstep_monitor, ks)
    if sl.detector.in_catbox then
        LoadCostume("mc_litter.cos")
    end
    if ks.opener.touchable then
        ks.opener_actor:default()
    end
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 6000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
    AddShadowPlane(manny.hActor, "shadow4")
    AddShadowPlane(manny.hActor, "shadow5")
    AddShadowPlane(manny.hActor, "shadow6")
    AddShadowPlane(manny.hActor, "shadow7")
end
ks.exit = function(arg1) -- line 358
    stop_script(ks.scythe_detector_monitor)
    stop_sound("mdSand.IMU")
    stop_sound("mdBeep.IMU")
    stop_script(tb.off_screen_kittys)
    stop_script(ks.footstep_monitor)
    ks.opener_actor:free()
    KillActorShadows(manny.hActor)
end
ks.sky = Object:create(ks, "/kstx005/sky", -0.59832603, 0.85008001, 3.5999999, { range = 0 })
ks.sky.touchable = FALSE
ks.litter1 = Object:create(ks, "/kstx006/litter", -0.69832599, 0.85008001, -0.1, { range = 0.60000002 })
ks.litter1.use_pnt_x = -0.478434
ks.litter1.use_pnt_y = 1.37518
ks.litter1.use_pnt_z = 0
ks.litter1.use_rot_x = 0
ks.litter1.use_rot_y = -173.452
ks.litter1.use_rot_z = 0
ks.litter1.lookAt = function(arg1) -- line 387
    if not ks.litter1.seen then
        ks.litter1.seen = TRUE
        manny:say_line("/ksma007/")
        wait_for_message()
    end
    manny:say_line("/ksma008/")
end
ks.litter1.pickUp = function(arg1) -- line 396
    START_CUT_SCENE()
    manny:say_line("/ksma009/")
    wait_for_message()
    manny:say_line("/ksma010/")
    wait_for_message()
    manny:head_look_at(ks.sky)
    manny:say_line("/ksma011/")
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
ks.litter1.use = function(arg1) -- line 408
    if not ks.litter1.tried then
        ks.litter1.tried = TRUE
        manny:say_line("/ksma012/")
    else
        manny:say_line("/ksma013/")
    end
end
ks.litter1.use_scythe = function(arg1) -- line 417
    ks:use_scythe()
end
ks.litter1.use_detector = function(arg1) -- line 421
    sl.detector:use()
end
ks.litter2 = Object:create(ks, "/kstx018/litter", -0.098325998, -0.64991999, -0.1, { range = 0.60000002 })
ks.litter2.use_pnt_x = 0.121652
ks.litter2.use_pnt_y = -0.00296139
ks.litter2.use_pnt_z = 0
ks.litter2.use_rot_x = 0
ks.litter2.use_rot_y = -156.511
ks.litter2.use_rot_z = 0
ks.litter2.parent = ks.litter1
ks.litter3 = Object:create(ks, "/kstx019/litter", 0.80167401, -0.16992, -0.22, { range = 0.60000002 })
ks.litter3.use_pnt_x = 0.121652
ks.litter3.use_pnt_y = -0.00296139
ks.litter3.use_pnt_z = 0
ks.litter3.use_rot_x = 0
ks.litter3.use_rot_y = -156.511
ks.litter3.use_rot_z = 0
ks.litter3.parent = ks.litter1
ks.cat_food = Object:create(ks, "/kstx022/big can", 0.64767402, 1.585, 0.34200001, { range = 0.80000001 })
ks.cat_food.use_pnt_x = -0.035240699
ks.cat_food.use_pnt_y = 1.5549001
ks.cat_food.use_pnt_z = 0
ks.cat_food.use_rot_x = 0
ks.cat_food.use_rot_y = 285.60699
ks.cat_food.use_rot_z = 0
ks.cat_food.lookAt = function(arg1) -- line 491
    manny:say_line("/ksma023/")
end
ks.cat_food.pickUp = function(arg1) -- line 495
    system.default_response("hernia")
end
ks.cat_food.use = function(arg1) -- line 499
    if not arg1.opened then
        manny:say_line("/ksma024/")
    else
        manny:say_line("/ksma025/")
    end
end
ks.cat_food.use_opener = function(arg1) -- line 507
    if arg1.opened then
        manny:say_line("/ksma026/")
    elseif manny:walkto_object(arg1) then
        arg1.opened = TRUE
        ks:open_can()
        manny:say_line("/ksma027/")
    end
end
ks.cat_food.use_detector = function(arg1) -- line 516
    sl.detector:use()
end
ks.opener = Object:create(ks, "/kstx028/opener", 0.226364, 1.54373, 0.34200001, { range = 0.60000002 })
ks.opener.use_pnt_x = -0.035240699
ks.opener.use_pnt_y = 1.5549001
ks.opener.use_pnt_z = 0
ks.opener.use_rot_x = 0
ks.opener.use_rot_y = 285.60699
ks.opener.use_rot_z = 0
ks.opener.wav = "getMetl.wav"
ks.opener.lookAt = function(arg1) -- line 530
    arg1.seen = TRUE
    manny:say_line("/ksma029/")
end
ks.opener.pickUp = function(arg1) -- line 535
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:play_chore(mc_give_hrpass, "mc.cos")
        manny:wait_for_chore(mc_give_hrpass, "mc.cos")
        start_sfx("ksGetOp.wav")
        manny:generic_pickup(ks.opener)
        ks.opener_actor:play_chore(1)
        manny:stop_chore(mc_give_hrpass, "mc.cos")
        manny:play_chore(mc_hrpass_rtrn2base, "mc.cos")
        sleep_for(100)
        manny:fade_out_chore(mc_hrpass_rtrn2base, "mc.cos", 500)
        if not ks.opener.seen then
            ks.opener:lookAt()
        end
        END_CUT_SCENE()
    end
end
ks.opener.use = function(arg1) -- line 554
    if arg1.owner ~= manny then
        arg1:pickUp()
    else
        START_CUT_SCENE()
        look_at_item_in_hand(TRUE)
        start_sfx("hkCskOp2.WAV")
        wait_for_sound("hkCskOp2.WAV")
        manny:head_look_at(nil)
        END_CUT_SCENE()
    end
end
ks.opener.default_response = function(arg1) -- line 567
    manny:say_line("/ksma030/")
end
ks.kh_door = Object:create(ks, "/kstx031/door", -0.39832601, 2.35008, 0.44, { range = 0.60000002 })
ks.kh_door.use_pnt_x = -0.40721899
ks.kh_door.use_pnt_y = 1.90771
ks.kh_door.use_pnt_z = 0
ks.kh_door.use_rot_x = 0
ks.kh_door.use_rot_y = -719.79199
ks.kh_door.use_rot_z = 0
ks.kh_door.out_pnt_x = -0.40870199
ks.kh_door.out_pnt_y = 2.3161099
ks.kh_door.out_pnt_z = 0
ks.kh_door.out_rot_x = 0
ks.kh_door.out_rot_y = -719.79199
ks.kh_door.out_rot_z = 0
ks.kh_door.walkOut = function(arg1) -- line 592
    kh:come_out_door(kh.ks_door)
end
ks.kh_door.lookAt = function(arg1) -- line 596
    manny:say_line("/ksma032/")
end
ks.kh_door.comeOut = function(arg1) -- line 600
    Object.come_out_door(arg1)
    if not ks.smelled then
        ks:smell()
    end
    if sl.detector.in_catbox then
        if not ks.repulsed then
            ks:say_eyw()
        end
    end
end
ks_opener_show = 0
ks_opener_hide = 1
lb_bw_drive_in = 0
lb_bw_drive_out = 1
lb_bw_here = 2
lb_bw_gone = 3
CheckFirstTime("lb.lua")
lb = Set:create("lb.set", "Lobby for Beaver Room", { lb_modws = 0, lb_ovrhd = 1 })
dofile("lb_bw.lua")
dofile("bonewagon_gl.lua")
lb.rock_actor = { }
lb.rock_actor.parent = Actor
lb.rock_actor.rocks = { }
lb.rock_actor.rocks[1] = { x = 0.307026, y = 3.31776, z = -0.214144, scale = 1.9 }
lb.rock_actor.rocks[2] = { x = -0.157974, y = 1.75476, z = -0.435144, scale = 1.9 }
lb.rock_actor.rocks[3] = { x = 0.0640259, y = -0.00324261, z = -0.190144, scale = 1.9 }
lb.rock_actor.rocks[4] = { x = 0.0370259, y = -1.06724, z = -0.0631438, scale = 1.7 }
lb.rock_actor.rocks[5] = { x = -0.3547, y = -1.73734, z = -0.0367978, scale = 2 }
lb.rock_actor.rocks[6] = { x = 0.41549, y = -1.62212, z = 0.1158, scale = 2 }
lb.rock_actor.default = function(arg1, arg2) -- line 27
    local local1
    if not arg1.rocks[arg2].actor then
        local1 = Actor:create(nil, nil, nil, "rock")
    else
        local1 = arg1.rocks[arg2].actor
    end
    local1:set_costume("x_spot.cos")
    local1:set_visibility(FALSE)
    local1:set_collision_mode(COLLISION_SPHERE, arg1.rocks[arg2].scale)
    local1:put_in_set(lb)
    local1:setpos(arg1.rocks[arg2].x, arg1.rocks[arg2].y, arg1.rocks[arg2].z)
    arg1.rocks[arg2].actor = local1
end
lb.rock_actor.default_all = function(arg1) -- line 44
    local local1, local2
    local1, local2 = next(arg1.rocks, nil)
    while local1 do
        arg1:default(local1)
        local1, local2 = next(arg1.rocks, local1)
    end
end
lb.rock_actor.free_all = function(arg1) -- line 53
    local local1, local2
    local1, local2 = next(arg1.rocks, nil)
    while local1 do
        if local2.actor then
            local2.actor:free()
        end
        local1, local2 = next(arg1.rocks, local1)
    end
end
lb.enable_bw_boxes = function(arg1, arg2) -- line 66
    local local1
    local1 = 1
    while local1 <= 7 do
        MakeSectorActive("bw_box" .. local1, arg2)
        local1 = local1 + 1
    end
    local1 = 1
    while local1 <= 5 do
        MakeSectorActive("no_bw_box" .. local1, not arg2)
        local1 = local1 + 1
    end
end
lb.glottis_drive_in_anim = function(arg1) -- line 82
    glottis:set_costume(nil)
    glottis:set_costume("gl_drive_up.cos")
    glottis:put_in_set(lb)
    glottis:set_visibility(TRUE)
    glottis:set_collision_mode(COLLISION_OFF)
    glottis:ignore_boxes()
    glottis:setpos(1.97028, 4.15063, 0)
    glottis:setrot(0, 93.8626, 0)
    start_sfx("bwDown02.WAV")
    fade_sfx("bwDown02.WAV", 500)
    start_sfx("bwTire01.WAV")
    glottis:play_chore(0)
    lb.bone_wagon:play_chore(lb_bw_drive_in, "lb_bw.cos")
    lb.bone_wagon:wait_for_chore(lb_bw_drive_in)
    sleep_for(300)
    glottis:stop_chore(0)
    lb:init_glottis()
end
lb.init_glottis = function(arg1) -- line 103
    glottis:set_costume(nil)
    glottis:set_costume("bonewagon_gl.cos")
    glottis:set_collision_mode(COLLISION_OFF)
    glottis:set_visibility(TRUE)
    glottis:set_mumble_chore(bonewagon_gl_gl_mumble)
    glottis:set_talk_chore(1, bonewagon_gl_stop_talk)
    glottis:set_talk_chore(2, bonewagon_gl_a)
    glottis:set_talk_chore(3, bonewagon_gl_c)
    glottis:set_talk_chore(4, bonewagon_gl_e)
    glottis:set_talk_chore(5, bonewagon_gl_f)
    glottis:set_talk_chore(6, bonewagon_gl_l)
    glottis:set_talk_chore(7, bonewagon_gl_m)
    glottis:set_talk_chore(8, bonewagon_gl_o)
    glottis:set_talk_chore(9, bonewagon_gl_t)
    glottis:set_talk_chore(10, bonewagon_gl_u)
    glottis:play_chore(bonewagon_gl_hide_bw, "bonewagon_gl.cos")
    glottis:put_in_set(lb)
    glottis:ignore_boxes()
    glottis:setpos(2.29732, 4.15139, 0.0027831)
    glottis:setrot(0, 90, 0)
    glottis:play_chore(bonewagon_gl_drive, "bonewagon_gl.cos")
    single_start_script(sg.glottis_roars, sg, glottis)
end
lb.drive_in = function(arg1) -- line 129
    bonewagon:put_in_set(nil)
    if not mod_solved then
        START_CUT_SCENE()
        StartMovie("lb_bw1.snm")
        wait_for_movie()
        lb:glottis_drive_in_anim()
        if not lb.felt_bumpy then
            lb.felt_bumpy = TRUE
            glottis:stop_chore(bonewagon_gl_drive, "bonewagon_gl.cos")
            glottis:play_chore(bonewagon_gl_gl_2hands_out, "bonewagon_gl.cos")
            glottis:say_line("/lbgl001/")
            glottis:wait_for_message()
            glottis:play_chore(bonewagon_gl_gl_stop_hands_out, "bonewagon_gl.cos")
            glottis:say_line("/lbgl022/")
            glottis:wait_for_message()
            glottis:play_chore(bonewagon_gl_drive, "bonewagon_gl.cos")
        end
        END_CUT_SCENE()
        lb:leave_BW()
    elseif not lb.got_key then
        START_CUT_SCENE()
        StartMovie("lb_bw1.snm")
        wait_for_movie()
        lb:glottis_drive_in_anim()
        glottis:say_line("/lbgl003/")
        wait_for_message()
        END_CUT_SCENE()
        lb:leave_BW()
    else
        START_CUT_SCENE()
        StartMovie("lb_bw1.snm")
        wait_for_movie()
        RunFullscreenMovie("lb.snm")
        END_CUT_SCENE()
        bv:drive_in()
    end
end
lb.drive_out = function(arg1) -- line 174
    START_CUT_SCENE()
    glottis:set_costume(nil)
    glottis:set_costume("gl_drive_up.cos")
    glottis:put_in_set(lb)
    glottis:setpos(1.97028, 4.15063, 0)
    glottis:setrot(0, 93.8626, 0)
    glottis:play_chore(1)
    sleep_for(200)
    start_sfx("bwStart.WAV", IM_HIGH_PRIORITY)
    sleep_for(300)
    start_sfx("bwUp05.WAV", IM_HIGH_PRIORITY)
    sleep_for(200)
    lb.bone_wagon:play_chore(lb_bw_drive_out, "lb_bw.cos")
    lb.bone_wagon:wait_for_chore(lb_bw_drive_out)
    glottis:wait_for_chore(1)
    END_CUT_SCENE()
    if mod_solved and lb.got_key then
        manny:set_selected()
        manny:set_visibility(TRUE)
        RunFullscreenMovie("lb.snm")
        bv:drive_in()
    else
        na:switch_to_set()
        bonewagon:put_in_set(na)
        bonewagon:follow_boxes()
        bonewagon:setpos(2.37537, -3.2269, 0.5)
        bonewagon:setrot(0, 247.545, 0)
        bonewagon:set_selected()
    end
end
lb.leave_BW = function(arg1) -- line 207
    stop_script(bonewagon.gas)
    stop_script(bonewagon.reverse)
    stop_script(bonewagon.left)
    stop_script(bonewagon.right)
    stop_script(bonewagon.monitor_turns)
    manny.is_driving = FALSE
    bonewagon.current_set = lb
    system.buttonHandler = SampleButtonHandler
    lb.bone_wagon:make_touchable()
    manny:put_in_set(system.currentSet)
    manny:set_visibility(TRUE)
    manny:set_selected()
    manny:ignore_boxes()
    manny:setpos(4.62181, 3.04604, 0.0662619)
    manny:setrot(0, 240, 0)
    manny:push_costume("ma_climb_bw.cos")
    SetActorFrustrumCull(manny.hActor, FALSE)
    manny:play_chore(ma_climb_bw_get_off_bw, "ma_climb_bw.cos")
    manny:wait_for_chore(ma_climb_bw_get_off_bw, "ma_climb_bw.cos")
    manny:pop_costume()
    manny:follow_boxes()
    SetActorFrustrumCull(manny.hActor, TRUE)
    manny:setpos(3.6732, 2.81382, 0.0666561)
    manny:setrot(0, 176.872, 0)
    manny:walkto(1.30964, 3.37437, -0.175334, 0, 82.1938, 0)
    inventory_disabled = FALSE
end
lb.get_in_BW = function(arg1) -- line 241
    stop_script(glottis.talk_randomly_from_weighted_table)
    START_CUT_SCENE()
    manny:head_look_at(nil)
    manny:walkto_object(lb.bone_wagon)
    manny:setrot(0, 264.4, 0)
    manny:push_costume("ma_climb_bw.cos")
    start_sfx("bwMaClmb.WAV")
    manny:play_chore(ma_climb_bw_get_on_bw, "ma_climb_bw.cos")
    manny:wait_for_chore(ma_climb_bw_get_on_bw, "ma_climb_bw.cos")
    manny:pop_costume()
    manny:put_in_set(nil)
    END_CUT_SCENE()
    lb.bone_wagon:make_untouchable()
    bonewagon.current_set = nil
    manny.is_driving = TRUE
    manny:set_visibility(FALSE)
    system.buttonHandler = bone_wagon_button_handler
    start_script(bonewagon.monitor_turns, bonewagon)
end
lb.enter = function(arg1) -- line 272
    if not lb.got_key then
        lb.key:show()
    else
        lb.key:hide()
    end
    if manny.is_driving or lb.bone_wagon.touchable then
        lb:add_object_state(lb_modws, "lb_bw.bm", "lb_bw.zbm", OBJSTATE_STATE)
        lb.bone_wagon:set_object_state("lb_bw.cos")
        lb:enable_bw_boxes(TRUE)
    else
        lb:enable_bw_boxes(FALSE)
    end
    if manny.is_driving then
        lb.bone_wagon:make_untouchable()
        start_script(lb.drive_in, lb)
    elseif lb.bone_wagon.touchable then
        lb.bone_wagon:play_chore(lb_bw_here, "lb_bw.cos")
        lb:init_glottis()
    end
    manny:set_collision_mode(COLLISION_SPHERE, 0.4)
    glottis:set_collision_mode(COLLISION_OFF)
    lb.rock_actor:default_all()
    lb:add_ambient_sfx({ "frstCrt1.wav", "frstCrt2.wav", "frstCrt3.wav", "frstCrt4.wav" }, { min_delay = 8000, max_delay = 20000 })
end
lb.exit = function(arg1) -- line 304
    manny:set_collision_mode(COLLISION_OFF)
    lb.rock_actor:free_all()
    glottis:free()
    lb.key_actor:free()
    stop_script(sg.glottis_roars)
    glottis:shut_up()
    bonewagon:shut_up()
end
lb.bone_wagon = Object:create(lb, "/lbtx004/Bone Wagon", 2.13448, 4.0596199, 0.290719, { range = 1.5 })
lb.bone_wagon.use_pnt_x = 3.6728101
lb.bone_wagon.use_pnt_y = 2.80704
lb.bone_wagon.use_pnt_z = 0.066261902
lb.bone_wagon.use_rot_x = 0
lb.bone_wagon.use_rot_y = 13.4301
lb.bone_wagon.use_rot_z = 0
lb.bone_wagon.touchable = FALSE
lb.bone_wagon.lookAt = function(arg1) -- line 332
    manny:say_line("/lbma005/")
end
lb.bone_wagon.use = function(arg1) -- line 336
    START_CUT_SCENE()
    lb:get_in_BW()
    lb:drive_out()
    END_CUT_SCENE()
end
lb.sign = Object:create(lb, "/lbtx006/sign", -0.76020002, 4.1336002, 0.89999998, { range = 1.5 })
lb.sign.use_pnt_x = -0.186588
lb.sign.use_pnt_y = 3.5676601
lb.sign.use_pnt_z = -0.29107299
lb.sign.use_rot_x = 0
lb.sign.use_rot_y = 47.726299
lb.sign.use_rot_z = 0
lb.sign.lookAt = function(arg1) -- line 352
    START_CUT_SCENE()
    if not lb.sign.seen then
        lb.sign.seen = TRUE
        manny:say_line("/lbma007/")
        wait_for_message()
    end
    manny:say_line("/lbma008/")
    wait_for_message()
    manny:say_line("/lbma009/")
    wait_for_message()
    manny:say_line("/lbma010/")
    wait_for_message()
    manny:say_line("/lbma011/")
    wait_for_message()
    manny:say_line("/lbma012/")
    wait_for_message()
    manny:say_line("/lbma013/")
    END_CUT_SCENE()
end
lb.sign.use = function(arg1) -- line 373
    if lb.got_key then
        manny:say_line("/lbma014/")
    else
        if not lb.sign.seen then
            START_CUT_SCENE()
            arg1:lookAt()
            wait_for_message()
            END_CUT_SCENE()
        end
        lb.got_key = TRUE
        START_CUT_SCENE()
        MakeSectorActive("get_key_box1", TRUE)
        MakeSectorActive("get_key_box2", TRUE)
        manny:walkto(-0.486298, 3.81497, -0.3, 0, 22.8147, 0)
        manny:wait_for_actor()
        manny:push_costume("ma_action_sign.cos")
        start_sfx("keyRatl.IMU", IM_HIGH_PRIORITY, 90)
        manny:play_chore(ma_action_sign_start_lift, "ma_action_sign.cos")
        manny:wait_for_chore(ma_action_sign_start_lift, "ma_action_sign.cos")
        start_script(lb.sign.rattle_key, lb.sign)
        manny:play_chore_looping(ma_action_sign_loop_lift, "ma_action_sign.cos")
        sleep_for(2000)
        fade_sfx("keyRatl.imu", 400)
        lb.sign:drop_key()
        manny:set_chore_looping(ma_action_sign_loop_lift, FALSE, "ma_action_sign.cos")
        manny:wait_for_chore(ma_action_sign_loop_lift, "ma_action_sign.cos")
        manny:run_chore(ma_action_sign_end_lift, "ma_action_sign.cos")
        manny:stop_chore(ma_action_sign_end_lift, "ma_action_sign.cos")
        manny:pop_costume()
        manny:backup(500)
        manny:head_look_at_point(-0.575574, 3.86573, -0.300025)
        sleep_for(1000)
        manny:say_line("/lbma015/")
        manny:walkto(-0.486298, 3.81497, -0.3, 0, 22.8147, 0)
        manny:wait_for_actor()
        manny:play_chore(ma_reach_low, "ma.cos")
        sleep_for(1000)
        manny:generic_pickup(lb.key)
        manny:wait_for_chore(ma_reach_low, "ma.cos")
        manny:stop_chore(ma_reach_low, "ma.cos")
        manny:walkto_object(arg1)
        MakeSectorActive("get_key_box1", FALSE)
        MakeSectorActive("get_key_box2", FALSE)
        END_CUT_SCENE()
    end
end
lb.sign.pickUp = lb.sign.use
lb.sign.rattle_key = function(arg1) -- line 423
    local local1 = 2
    local local2, local3
    while system.currentSet == lb do
        local2 = rndint(270 - local1, 270 + local1)
        local3 = rndint(0 - local1, local1)
        lb.key_actor:setrot(local2, local3, 0)
        break_here()
        if local1 < 20 then
            local1 = local1 + 1
        end
    end
end
lb.sign.drop_key = function(arg1) -- line 438
    local local1, local2
    local local3 = 0.0099999998
    stop_script(lb.sign.rattle_key)
    local2 = manny:getpos()
    local1 = lb.key_actor:getpos()
    while local1.z > local2.z do
        local1.z = local1.z - local3
        lb.key_actor:setpos(local1.x, local1.y, local1.z)
        local3 = local3 + 0.0099999998
        break_here()
    end
    start_sfx("keyDrop.wav")
    lb.key:hide()
end
lb.key = Object:create(lb, "/lbtx016/key", -0.498319, 4.5485702, 0.56169403, { range = 0 })
lb.key.lookAt = function(arg1) -- line 459
    manny:say_line("/lbma017/")
end
lb.key.use = function(arg1) -- line 463
    manny:say_line("/lbma018/")
end
lb.key.default_response = function(arg1) -- line 467
    manny:say_line("/lbma019/")
end
lb.key.show = function(arg1) -- line 471
    if not lb.key_actor then
        lb.key_actor = Actor:create(nil, nil, nil, "key")
    end
    lb.key_actor:set_costume("key.cos")
    lb.key_actor:set_visibility(TRUE)
    lb.key_actor:put_in_set(lb)
    lb.key_actor:setpos(-0.586667, 5.20806, 1.39971)
    lb.key_actor:setrot(270, 0, 0)
    SetActorScale(lb.key_actor.hActor, 2)
end
lb.key.hide = function(arg1) -- line 483
    lb.key_actor:set_visibility(FALSE)
    lb.key_actor:put_in_set(nil)
end
lb.bd_door = Object:create(lb, "/lbtx020/door", -2.1602001, -8.6664, 1.9, { range = 0.5 })
lb.bd_box = lb.bd_door
lb.bd_door.use_pnt_x = 0.1023
lb.bd_door.use_pnt_y = -2.49984
lb.bd_door.use_pnt_z = -0.105641
lb.bd_door.use_rot_x = 0
lb.bd_door.use_rot_y = 157.991
lb.bd_door.use_rot_z = 0
lb.bd_door.out_pnt_x = -0.015922099
lb.bd_door.out_pnt_y = -5.6293201
lb.bd_door.out_pnt_z = -0.59090799
lb.bd_door.out_rot_x = 0
lb.bd_door.out_rot_y = 184.998
lb.bd_door.out_rot_z = 0
lb.bd_door.walkOut = function(arg1) -- line 512
    bv:come_out_door(bv.sg_door)
end
lb.na_door = Object:create(lb, "/lbtx021/door", 12.6398, -8.6664, 1.9, { range = 0.5 })
lb.sg_box = lb.na_door
lb.na_door.use_pnt_x = 11.78
lb.na_door.use_pnt_y = -8.6630001
lb.na_door.use_pnt_z = 0.2
lb.na_door.use_rot_x = 0
lb.na_door.use_rot_y = -473.85001
lb.na_door.use_rot_z = 0
lb.na_door.out_pnt_x = 12.864
lb.na_door.out_pnt_y = -8.9449997
lb.na_door.out_pnt_z = 0.2
lb.na_door.out_rot_x = 0
lb.na_door.out_rot_y = -456.97501
lb.na_door.out_rot_z = 0
lb.na_door.walkOut = function(arg1) -- line 536
    if not manny.is_driving then
        na:come_out_door(na.trapdoor)
    else
        START_CUT_SCENE()
        na:switch_to_set()
        na:current_setup(na_intha)
        bonewagon:put_in_set(na)
        bonewagon:stop_movement_scripts()
        bonewagon:setpos(0.0607441, -2.06767, 0.5)
        bonewagon:setrot(0, 206.292, 0)
        bonewagon:driveto(1.47095, -3.18422, 0.5)
        END_CUT_SCENE()
    end
end
lb.lb_cheat1 = { }
lb.lb_cheat1.use_pnt_x = 7.2045999
lb.lb_cheat1.use_pnt_y = -4.1036401
lb.lb_cheat1.use_pnt_z = -0.50999898
lb.lb_cheat1.use_rot_x = 0
lb.lb_cheat1.use_rot_y = 191.978
lb.lb_cheat1.use_rot_z = 0
lb.lb_cheat1.walkOut = function(arg1) -- line 562
    manny:setpos(lb.lb_cheat2.use_pnt_x, lb.lb_cheat2.use_pnt_y, lb.lb_cheat2.use_pnt_z)
    manny:setrot(lb.lb_cheat2.use_rot_x, lb.lb_cheat2.use_rot_y + 180, lb.lb_cheat2.use_rot_z)
end
lb.lb_cheat2 = { }
lb.lb_cheat2.use_pnt_x = 10.5435
lb.lb_cheat2.use_pnt_y = -8.7032404
lb.lb_cheat2.use_pnt_z = -0.74350899
lb.lb_cheat2.use_rot_x = 0
lb.lb_cheat2.use_rot_y = 97.036102
lb.lb_cheat2.use_rot_z = 0
lb.lb_cheat2.walkOut = function(arg1) -- line 577
    manny:setpos(lb.lb_cheat1.use_pnt_x, lb.lb_cheat1.use_pnt_y, lb.lb_cheat1.use_pnt_z)
    manny:setrot(lb.lb_cheat1.use_rot_x, lb.lb_cheat1.use_rot_y + 180, lb.lb_cheat1.use_rot_z)
end
le_copals_windows_closed = 0
le_copals_windows_open = 1
ledge_rope_coil_rope = 0
ledge_rope_drop_rope = 1
ledge_rope_pickup_rope = 2
ledge_rope_shimmy_rope = 3
ledge_rope_throw_rope = 4
ledge_rope_hook_rope = 5
ledge_rope_rope_coiled_hold = 6
ledge_rope_rope_hang_hold = 7
ledge_rope_pickup_rope_coral = 8
ledge_rope_show_coral = 9
ledge_rope_hide_coral = 10
ledge_rope_rope_up_hold = 11
CheckFirstTime("le.lua")
le = Set:create("le.set", "Ledge", { le_alloh = 0, le_rufla = 1, le_ladws = 2, le_overhd = 3 })
le.camera_adjusts = { 20, 10, 25 }
dofile("ma_ladder_generic.lua")
dofile("ma_rope.lua")
dofile("manny_scales_rope.lua")
dofile("ledge_rope.lua")
dofile("ma_enter_office.lua")
rope_looker = Actor:create()
le.NUMBER_OF_PIGEONS = 5
MANNY_TOLERANCE = 0.5
MANNY_LANDING_TOLERANCE = 1
le.pigeons_obj = { }
le.choose_start_pnts = function() -- line 33
    local local1
    repeat
        local1 = pick_from_nonweighted_table(le.pigeon_homes)
    until not local1.used
    local1.used = TRUE
    return local1.pos.x, local1.pos.y, local1.pos.z, local1.face
end
le.init_pigeons = function() -- line 43
    local local1 = 0
    local local2, local3, local4, local5
    repeat
        local1 = local1 + 1
        if not pigeons[local1] then
            pigeons[local1] = Actor:create(nil, nil, nil, "pigeon" .. local1)
        end
        pigeons[local1].start_pnt = { }
        pigeons[local1].orbit_pnt = { }
        pigeons.fly_direction = nil
        pigeons[local1].pigeon_number = local1
        local2, local3, local4, local5 = le.choose_start_pnts()
        pigeons[local1].start_pnt.x = local2
        pigeons[local1].start_pnt.y = local3
        pigeons[local1].start_pnt.z = local4
        pigeons[local1].fly_direction = local5
        if not le.pigeons_obj[local1] then
            le.pigeons_obj[local1] = Object:create(le, "pigeon_obj" .. local1, pigeons[local1].start_pnt.x, pigeons[local1].start_pnt.y, pigeons[local1].start_pnt.z, { range = 0.80000001 })
            le.pigeons_obj[local1].parent = le.master_pigeon_obj
        else
            le.pigeons_obj[local1].obj_x = pigeons[local1].start_pnt.x
            le.pigeons_obj[local1].obj_y = pigeons[local1].start_pnt.y
            le.pigeons_obj[local1].obj_z = pigeons[local1].start_pnt.z
        end
        pigeons[local1].costume_marker_handler = bird_sound_monitor
        pigeons[local1]:set_costume("pigeon_idles.cos")
        pigeons[local1]:set_colormap("pigeons.cmp")
        pigeons[local1]:set_walk_rate(0.80000001)
        pigeons[local1]:set_turn_rate(120)
        pigeons[local1]:ignore_boxes()
        pigeons[local1]:put_in_set(le)
        pigeons[local1]:setpos(local2, local3, local4)
        start_script(le.pigeon_brain, pigeons[local1])
    until local1 == le.NUMBER_OF_PIGEONS
end
le.point_and_fly_away = function(arg1) -- line 90
    local local1
    local local2
    local local3 = { }
    local local4 = TRUE
    local local5 = { }
    local local6 = { }
    local local7
    local local8
    local local9 = FALSE
    local local10
    local1 = arg1.orbit_pnt.z
    local2 = start_script(bird_climb, arg1, local1, 0.75, pigeon_idles_scared_takeoff)
    while find_script(local2) do
        if not TurnActorTo(arg1.hActor, arg1.orbit_pnt.x, arg1.orbit_pnt.y, arg1.orbit_pnt.z) then
            arg1:walk_forward()
        else
            TurnActorTo(arg1.hActor, arg1.orbit_pnt.x, arg1.orbit_pnt.y, arg1.orbit_pnt.z)
        end
        break_here()
    end
    repeat
        repeat
            local6 = manny:getpos()
            local3 = sqrt((local6.x - arg1.start_pnt.x) ^ 2 + (local6.y - arg1.start_pnt.y) ^ 2 + (local6.z - arg1.start_pnt.z) ^ 2)
            if not arg1:is_choring(pigeon_idles_fly_cycle) then
                arg1:play_chore(pigeon_idles_fly_cycle)
            end
            arg1:walk_forward()
            TurnActorTo(arg1.hActor, arg1.orbit_pnt.x, arg1.orbit_pnt.y, arg1.orbit_pnt.z)
            break_here()
        until local3 >= MANNY_LANDING_TOLERANCE
        repeat
            local6 = manny:getpos()
            local3 = sqrt((local6.x - arg1.start_pnt.x) ^ 2 + (local6.y - arg1.start_pnt.y) ^ 2 + (local6.z - arg1.start_pnt.z) ^ 2)
            local5 = arg1:getpos()
            local8 = sqrt((local5.x - arg1.start_pnt.x) ^ 2 + (local5.y - arg1.start_pnt.y) ^ 2)
            if not arg1:is_choring(pigeon_idles_glide) then
                arg1:play_chore(pigeon_idles_glide)
            end
            arg1:walk_forward()
            TurnActorTo(arg1.hActor, arg1.start_pnt.x, arg1.start_pnt.y, arg1.start_pnt.z)
            break_here()
        until local3 <= MANNY_LANDING_TOLERANCE or local8 < 1
        repeat
            local6 = manny:getpos()
            local3 = sqrt((local6.x - arg1.start_pnt.x) ^ 2 + (local6.y - arg1.start_pnt.y) ^ 2 + (local6.z - arg1.start_pnt.z) ^ 2)
            if not TurnActorTo(arg1.hActor, arg1.start_pnt.x, arg1.start_pnt.y, arg1.start_pnt.z) then
                PointActorAt(arg1.hActor, arg1.start_pnt.x, arg1.start_pnt.y, arg1.start_pnt.z)
            end
            local8 = sqrt((local5.x - arg1.start_pnt.x) ^ 2 + (local5.y - arg1.start_pnt.y) ^ 2)
            local7 = tan(15) * local8
            local7 = local7 + arg1.start_pnt.z
            local10 = GetActorWalkRate(arg1.hActor)
            if local10 >= local8 then
                if not local9 then
                    local9 = TRUE
                    arg1:play_chore(pigeon_idles_landing)
                end
            end
            if PerSecond(local10) > local8 then
                arg1:set_walk_rate(local8)
            end
            arg1:walk_forward()
            local5 = arg1:getpos()
            if local5.z > local7 then
                arg1:setpos(local5.x, local5.y, local7)
            end
            break_here()
        until local3 <= MANNY_LANDING_TOLERANCE or local8 < 0.039999999
        arg1:set_walk_rate(0.80000001)
        local6 = manny:getpos()
        local3 = sqrt((local6.x - arg1.start_pnt.x) ^ 2 + (local6.y - arg1.start_pnt.y) ^ 2 + (local6.z - arg1.start_pnt.z) ^ 2)
        if local3 > MANNY_LANDING_TOLERANCE then
            local4 = FALSE
        end
    until not local4
    arg1:setpos(arg1.start_pnt.x, arg1.start_pnt.y, arg1.start_pnt.z)
    arg1:play_chore(pigeon_idles_standing)
end
le.fly_away = function(arg1) -- line 187
    local local1
    if arg1.fly_direction == "x" then
        arg1.orbit_pnt.x = arg1.start_pnt.x + rnd(2, 4)
        arg1.orbit_pnt.y = arg1.start_pnt.y
    else
        arg1.orbit_pnt.x = arg1.start_pnt.x
        arg1.orbit_pnt.y = arg1.start_pnt.y - rnd(2, 4)
    end
    arg1.orbit_pnt.z = arg1.start_pnt.z + 0.28
    local1 = start_script(le.point_and_fly_away, arg1)
    wait_for_script(local1)
end
le.pigeon_brain = function(arg1) -- line 207
    local local1 = proximity(arg1, manny)
    break_here()
    while 1 do
        local1 = proximity(arg1, manny)
        if local1 < MANNY_TOLERANCE then
            le.pigeons_obj[arg1.pigeon_number]:make_untouchable()
            le.fly_away(arg1)
        else
            le.pigeons_obj[arg1.pigeon_number]:make_touchable()
            sleep_for(rnd(250, 750))
            if rnd(3) then
                arg1:play_chore(pigeon_idles_pecking)
                while arg1:is_choring(pigeon_idles_pecking) and local1 > MANNY_TOLERANCE do
                    local1 = proximity(arg1, manny)
                    break_here()
                end
            else
                arg1:play_chore(pigeon_idles_jump_for_turn)
                if rnd() then
                    arg1:turn_right(90)
                else
                    arg1:turn_left(90)
                end
                while arg1:is_choring(pigeon_idles_jump_for_turn) and local1 > MANNY_TOLERANCE do
                    local1 = proximity(arg1, manny)
                    break_here()
                end
            end
        end
        break_here()
    end
end
le.activate_rope_boxes = function(arg1) -- line 254
    local local1, local2
    if le.rope_up.touchable then
        local1 = FALSE
    else
        local1 = TRUE
    end
    if le.rope_is_coiled then
        local2 = TRUE
    else
        local2 = FALSE
    end
    MakeSectorActive("coilgone1", not local2)
    MakeSectorActive("coilgone2", not local2)
    MakeSectorActive("ropegone1", local1)
    MakeSectorActive("ropegone2", local1)
end
le.init_ropes = function(arg1) -- line 278
    tie_rope:default()
    tie_rope:set_costume("manny_scales_rope.cos")
    tie_rope:put_in_set(system.currentSet)
    tie_rope:setpos(0.410085, 1.26691, 0.14)
    tie_rope:setrot(0, 15.2617, 0)
    tie_rope:play_chore(manny_scales_rope_show, "manny_scales_rope.cos")
    tie_rope:stop_chore(manny_scales_rope_show)
    ledge_rope:default()
    ledge_rope:put_in_set(system.currentSet)
    ledge_rope:setpos(0.15408, 1.38179, 0)
    ledge_rope:setrot(0, -8.044, 0)
    if le.rope_is_coiled then
        ledge_rope:play_chore(ledge_rope_rope_coiled_hold)
    elseif le.rope_up.touchable then
        ledge_rope:setrot(0, -55.7798, 0)
        ledge_rope:set_softimage_pos(1.59861, 0, -15.9998)
        ledge_rope:play_chore(ledge_rope_rope_up_hold)
    else
        ledge_rope:play_chore(ledge_rope_rope_hang_hold)
    end
    le:activate_rope_boxes()
    if le.grappling_hook.touchable or le.rope_up.touchable then
        ledge_rope:play_chore(ledge_rope_show_coral)
    else
        ledge_rope:play_chore(ledge_rope_hide_coral)
    end
end
le.rotate_manny_right = function(arg1) -- line 310
    local local1
    while get_generic_control_state("TURN_RIGHT") do
        local1 = manny:get_positive_rot()
        if local1.y > le.MAX_ROPE_ROT or local1.y < le.MIN_ROPE_ROT + 10 then
            TurnActor(manny.hActor, -1)
        end
        break_here()
    end
end
le.rotate_manny_left = function(arg1) -- line 322
    local local1
    while get_generic_control_state("TURN_LEFT") do
        local1 = manny:get_positive_rot()
        if local1.y < le.MIN_ROPE_ROT or local1.y > le.MAX_ROPE_ROT - 10 then
            TurnActor(manny.hActor, 1)
        end
        break_here()
    end
end
ledge_rope_button_handler = function(arg1, arg2, arg3) -- line 334
    if cutSceneLevel <= 0 then
        if control_map.TURN_LEFT[arg1] then
        elseif control_map.TURN_RIGHT[arg1] then
        elseif control_map.LOOK_AT[arg1] and arg2 then
            single_start_script(le.examine_holding_rope, le)
        elseif control_map.USE[arg1] and arg2 then
            single_start_script(le.manny_throw_rope, le)
        elseif control_map.PICK_UP[arg1] and arg2 then
            single_start_script(le.manny_drop_rope, le)
        elseif control_map.INVENTORY[arg1] and arg2 then
            if inventory_disabled then
                system.default_response("not now")
            elseif Inventory.num_items == 1 and mo.scythe.owner ~= manny then
                manny:say_line("/syma091/")
            else
                single_start_script(le.manny_rope_inventory)
            end
        else
            CommonButtonHandler(arg1, arg2, arg3)
        end
    end
end
le.examine_holding_rope = function(arg1) -- line 375
    START_CUT_SCENE()
    manny:head_look_at(le.ladder_to_roof)
    le.ladder_to_roof:lookAt()
    wait_for_message()
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
le.manny_pick_up_rope = function(arg1) -- line 399
    if not le.manny_holding_rope then
        START_CUT_SCENE()
        manny:clear_hands()
        if not le.rope_is_coiled then
            manny:push_costume("ma_rope.cos")
            manny:play_chore(ma_rope_coil_rope, "ma_rope.cos")
            ledge_rope:play_chore(ledge_rope_coil_rope)
            sleep_for(250)
            start_sfx("coilRope.wav")
            manny:wait_for_chore()
            le.rope_is_coiled = TRUE
        else
            manny:push_costume("ma_rope.cos")
            manny:play_chore(ma_rope_pickup_rope, "ma_rope.cos")
            ledge_rope:play_chore(ledge_rope_pickup_rope)
            sleep_for(500)
            start_sfx("getRope.wav")
            manny:wait_for_chore()
        end
        END_CUT_SCENE()
        enable_head_control(FALSE)
        system.buttonHandler = ledge_rope_button_handler
        le.manny_holding_rope = TRUE
    end
end
le.manny_drop_rope = function(arg1) -- line 432
    if le.manny_holding_rope then
        START_CUT_SCENE()
        manny:play_chore(ma_rope_drop_rope, "ma_rope.cos")
        ledge_rope:play_chore(ledge_rope_drop_rope)
        sleep_for(250)
        start_sfx("getRope.wav")
        manny:wait_for_chore()
        manny:pop_costume()
        END_CUT_SCENE()
        le.manny_holding_rope = FALSE
        le:activate_rope_boxes()
        system.buttonHandler = SampleButtonHandler
        enable_head_control(TRUE)
    end
end
le.manny_rope_inventory = function(arg1) -- line 454
    START_CUT_SCENE()
    start_script(le.manny_drop_rope, le)
    wait_for_script(le.manny_drop_rope)
    END_CUT_SCENE()
    start_script(open_inventory)
end
le.manny_throw_rope = function(arg1) -- line 468
    local local1 = FALSE
    local local2, local3, local4
    if le.manny_holding_rope then
        if le.grappling_hook.touchable then
            local1 = TRUE
            cur_puzzle_state[8] = TRUE
        else
            local1 = FALSE
        end
        START_CUT_SCENE()
        if local1 then
            set_override(le.override_throw_hook, le)
            le:current_setup(le_ladws)
            manny:play_chore(ma_rope_hook_rope, "ma_rope.cos")
            ledge_rope:play_chore(ledge_rope_hook_rope)
            while manny:is_choring(ma_rope_hook_rope) do
                local2, local3, local4 = GetActorNodeLocation(ledge_rope.hActor, 18)
                manny:head_look_at_point(local2, local3, local4)
                break_here()
            end
            manny:pop_costume()
            le.grappling_hook:make_untouchable()
            le.rope_up:make_touchable()
            le:current_setup(le_alloh)
        else
            set_override(le.override_throw_miss, le)
            manny:play_chore(ma_rope_throw_rope, "ma_rope.cos")
            ledge_rope:play_chore(ledge_rope_throw_rope)
            while manny:is_choring(ma_rope_throw_rope) do
                local2, local3, local4 = GetActorNodeLocation(ledge_rope.hActor, 18)
                manny:head_look_at_point(local2, local3, local4)
                break_here()
            end
            manny:pop_costume()
            manny:head_look_at(nil)
        end
        END_CUT_SCENE()
        le.manny_holding_rope = FALSE
        le.rope_is_coiled = FALSE
        le:activate_rope_boxes()
        system.buttonHandler = SampleButtonHandler
        enable_head_control(TRUE)
    end
end
le.override_throw_hook = function(arg1) -- line 519
    kill_override()
    le.manny_holding_rope = FALSE
    le.rope_is_coiled = FALSE
    le:activate_rope_boxes()
    system.buttonHandler = SampleButtonHandler
    enable_head_control(TRUE)
    le.grappling_hook:make_untouchable()
    le.rope_up:make_touchable()
    le:current_setup(le_alloh)
    le:init_ropes()
end
le.override_throw_miss = function(arg1) -- line 535
    kill_override()
    le.manny_holding_rope = FALSE
    le.rope_is_coiled = FALSE
    le:activate_rope_boxes()
    system.buttonHandler = SampleButtonHandler
    enable_head_control(TRUE)
    le:init_ropes()
end
le.tie_coral = function(arg1) -- line 548
    START_CUT_SCENE()
    set_override(le.tie_coral_override, le)
    if not le.rope_is_coiled then
        manny:walkto_object(le.loose_end)
        put_away_held_item()
        le:manny_pick_up_rope()
        le:manny_drop_rope()
        manny.is_holding = dom.coral
        start_script(close_inventory)
        wait_for_script(close_inventory)
    end
    le.loose_end:make_untouchable()
    PutActorInSet(le.grappling_hook.interest_actor.hActor, le.hSet)
    enable_head_control(FALSE)
    manny:walkto(0.222428, 1.38618, 0)
    while manny:is_moving() do
        break_here()
    end
    manny:turn_toward_entity(0.0924284, 1.59618, 0)
    manny:stop_chore(ms_activate_coral, "ms.cos")
    manny.is_holding = nil
    manny.hold_chore = nil
    manny:stop_chore(ms_hold, "ms.cos")
    manny:push_costume("ma_rope.cos")
    manny:head_look_at_point(0.115, 1.5223, 0)
    manny:play_chore(ma_rope_tie_coral, "ma_rope.cos")
    sleep_for(1000)
    ledge_rope:play_chore(ledge_rope_show_coral)
    manny:wait_for_chore()
    manny:pop_costume()
    manny:head_look_at(le.grappling_hook)
    dom.coral:put_in_limbo()
    le.grappling_hook:lookAt()
    le.grappling_hook:make_touchable()
    END_CUT_SCENE()
    enable_head_control(TRUE)
end
le.tie_coral_override = function(arg1) -- line 594
    kill_override()
    if manny:get_costume() == "ma_rope.cos" then
        manny:pop_costume()
    end
    manny:stop_chore(ms_hold_coral, "ms.cos")
    dom.coral:put_in_limbo()
    manny:setpos(0.222428, 1.38618, 0)
    le.grappling_hook:make_touchable()
    le.loose_end:make_untouchable()
    le.rope_is_coiled = TRUE
    le.manny_holding_rope = FALSE
    manny:head_look_at(le.grappling_hook)
    le:init_ropes()
    enable_head_control(TRUE)
end
le.enter = function(arg1) -- line 618
    local local1 = 1
    LoadCostume("ma_rope.cos")
    LoadCostume("manny_scales.cos")
    LoadCostume("manny_scales_rope.cos")
    LoadCostume("ledge_rope.cos")
    LoadCostume("ma_enter_office.cos")
    preload_sfx("coilRope.wav")
    preload_sfx("getRope.wav")
    manny.footsteps = footsteps.marble
    le.init_homes()
    le.init_pigeons()
    if reaped_bruno then
        if not le.dom_warning.missed_dom then
            box_on("doms_trigger")
        end
        if reaped_meche then
            MakeSectorActive("doms_win_box", TRUE)
            NewObjectState(le_rufla, OBJSTATE_UNDERLAY, "le_open_window_do.bm")
            le.dom_door:set_object_state("le_open_doms_window.cos")
            if le.dom_door:is_open() then
                le.dom_door.interest_actor:complete_chore(0)
            end
        else
            MakeSectorActive("doms_win_box", FALSE)
        end
        le.co_door:close()
        le.co_door:lock()
        le.co_door.use_pnt_x = 0.149452
        le.co_door.use_pnt_y = 0.660429
        le.co_door.use_pnt_z = 0
        le.co_door.use_rot_x = 0
        le.co_door.use_rot_y = 94.720596
        le.co_door.use_rot_z = 0
        le.co_door.out_pnt_x = 0.149452
        le.co_door.out_pnt_y = 0.660429
        le.co_door.out_pnt_z = 0
        le.co_door.out_rot_x = 0
        le.co_door.out_rot_y = 94.720596
        le.co_door.out_rot_z = 0
        NewObjectState(le_rufla, OBJSTATE_UNDERLAY, "le_cl_.bm")
        NewObjectState(le_alloh, OBJSTATE_UNDERLAY, "le_open_window_co_oh.bm")
        NewObjectState(le_ladws, OBJSTATE_UNDERLAY, "le_open_window_co.bm")
        le.copals_drapes:set_object_state("le_copals_windows.cos")
        le.copals_drapes.interest_actor:play_chore(0)
    else
        le.co_door:open()
        le.co_door:unlock()
        MakeSectorActive("doms_trigger", FALSE)
    end
    SetShadowColor(15, 15, 15)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, -1000, 1000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 0, -1000, 1000)
    SetActorShadowPlane(manny.hActor, "shadow20")
    AddShadowPlane(manny.hActor, "shadow20")
    AddShadowPlane(manny.hActor, "shadow21")
    le:init_ropes()
end
le.exit = function() -- line 696
    local local1 = 1
    stop_script(le.point_and_fly_away)
    stop_script(le.fly_away)
    stop_script(le.pigeon_brain)
    stop_script(bird_climb)
    le.dom_door:free_object_state()
    le.copals_drapes:free_object_state()
    ledge_rope:free()
    tie_rope:free()
    KillActorShadows(manny.hActor)
    repeat
        local1 = local1 + 1
        pigeons[local1]:free()
    until local1 == le.NUMBER_OF_PIGEONS
end
le.rope_down = Object:create(le, "/letx001/hanging rope", 0.45500001, 1.1210001, 0, { range = 0.60000002 })
le.rope_down.use_pnt_x = 0.237
le.rope_down.use_pnt_y = 1.28
le.rope_down.use_pnt_z = 0
le.rope_down.use_rot_x = 0
le.rope_down.use_rot_y = -100.824
le.rope_down.use_rot_z = 0
le.rope_down.lookAt = function(arg1) -- line 731
    START_CUT_SCENE()
    manny:say_line("/lema002/")
    wait_for_message()
    END_CUT_SCENE()
    manny:say_line("/lema003/")
end
le.rope_down.use = function(arg1) -- line 740
    START_CUT_SCENE()
    enable_head_control(FALSE)
    MakeSectorActive("ropegone1", TRUE)
    MakeSectorActive("ropegone2", TRUE)
    manny:walkto(0.37544, 1.32678, -0.05066, 0, 10.3132, 0)
    manny:wait_for_actor()
    manny:clear_hands()
    manny:head_look_at(nil)
    manny:push_costume("manny_scales.cos")
    manny:play_chore(manny_scales_climb_down, "manny_scales.cos")
    manny:wait_for_chore()
    manny:stop_chore(manny_scales_climb_down, "manny_scales.cos")
    manny:pop_costume()
    END_CUT_SCENE()
    al.rope:climbDown()
end
le.rope_down.climbUp = function(arg1) -- line 761
    le:switch_to_set()
    manny:put_at_object(arg1)
end
le.loose_end = Object:create(le, "/letx004/loose end of rope", 0.245, 1.497, 0.050000001, { range = 0.60000002 })
le.loose_end.use_pnt_x = 0.15408
le.loose_end.use_pnt_y = 1.38179
le.loose_end.use_pnt_z = 0
le.loose_end.use_rot_x = 0
le.loose_end.use_rot_y = -8.0439997
le.loose_end.use_rot_z = 0
le.loose_end.lookAt = function(arg1) -- line 776
    START_CUT_SCENE()
    manny:say_line("/lema005/")
    wait_for_message()
    manny:say_line("/lema006/")
    END_CUT_SCENE()
end
le.loose_end.use = function(arg1) -- line 785
    if manny:walkto_object(arg1) then
        le:manny_pick_up_rope()
    end
end
le.loose_end.pickUp = le.loose_end.use
le.loose_end.use_coral = function(arg1) -- line 794
    start_script(le.tie_coral, le)
end
le.grappling_hook = Object:create(le, "/letx007/grappling hook", 0.1269, 1.541, 0, { range = 0.5 })
le.grappling_hook.use_pnt_x = 0.15408
le.grappling_hook.use_pnt_y = 1.38179
le.grappling_hook.use_pnt_z = 0
le.grappling_hook.use_rot_x = 0
le.grappling_hook.use_rot_y = -8.0439997
le.grappling_hook.use_rot_z = 0
le.grappling_hook.touchable = FALSE
le.grappling_hook.lookAt = function(arg1) -- line 809
    manny:say_line("/lema008/")
end
le.grappling_hook.use = function(arg1) -- line 813
    if manny:walkto_object(arg1) then
        le:manny_pick_up_rope()
    end
end
le.grappling_hook.pickUp = le.grappling_hook.use
le.rope_up = Object:create(le, "/letx009/rope to ledge", 0.26300001, 1.88034, 0.5, { range = 0.80000001 })
le.rope_up.use_pnt_x = 0.15000001
le.rope_up.use_pnt_y = 1.59998
le.rope_up.use_pnt_z = 0
le.rope_up.use_rot_x = 0
le.rope_up.use_rot_y = -55.7798
le.rope_up.use_rot_z = 0
le.rope_up.touchable = FALSE
le.rope_up.lookAt = function(arg1) -- line 831
    manny:say_line("/lema010/")
end
le.rope_up.use = function(arg1) -- line 835
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:clear_hands()
        ledge_rope:setrot(0, -55.7798, 0)
        ledge_rope:set_softimage_pos(1.59861, 0, -15.9998)
        ledge_rope:play_chore(ledge_rope_shimmy_rope)
        manny:push_costume("ma_rope.cos")
        manny:play_chore(ma_rope_shimmy_rope, "ma_rope.cos")
        manny:wait_for_chore()
        manny:setpos(le.rope_up_top.use_pnt_x, le.rope_up_top.use_pnt_y, le.rope_up_top.use_pnt_z)
        manny:setrot(0, 0, 0)
        manny:stop_chore(ma_rope_shimmy_rope, "ma_rope.cos")
        manny:pop_costume()
        END_CUT_SCENE()
    end
end
le.rope_up.pickUp = le.rope_up.use
le.rope_up_top = Object:create(le, "/letx011/rope to ledge", 0.13, 2.346, 1.202, { range = 0.5 })
le.rope_up_top.use_pnt_x = -0.055
le.rope_up_top.use_pnt_y = 2.3610001
le.rope_up_top.use_pnt_z = 1.202
le.rope_up_top.use_rot_x = 0
le.rope_up_top.use_rot_y = -551.88
le.rope_up_top.use_rot_z = 0
le.rope_up_top.lookAt = function(arg1) -- line 865
    manny:say_line("/lema012/")
end
le.rope_up_top.use = function(arg1) -- line 869
    system.currentActor:setpos(le.rope_up.use_pnt_x, le.rope_up.use_pnt_y, le.rope_up.use_pnt_z)
end
le.rope_up_top.pickUp = le.rope_up_top.use
le.ladder_to_roof = Ladder:create(le, "/letx013/", -1.23036, 3.71891, 1.83, { range = 1.8 })
le.le_ladderup_box = le.ladder_to_roof
le.le_ladderdn_box = le.ladder_to_roof
le.ladder_to_roof.base.use_pnt_x = -1.161
le.ladder_to_roof.base.use_pnt_y = 3.6470001
le.ladder_to_roof.base.use_pnt_z = 1.202
le.ladder_to_roof.base.use_rot_x = 0
le.ladder_to_roof.base.use_rot_y = 83.063904
le.ladder_to_roof.base.use_rot_z = 0
le.ladder_to_roof.base.out_pnt_x = -0.89999998
le.ladder_to_roof.base.out_pnt_y = 3.6800001
le.ladder_to_roof.base.out_pnt_z = 1.202
le.ladder_to_roof.base.out_rot_x = 0
le.ladder_to_roof.base.out_rot_y = 261.35101
le.ladder_to_roof.base.out_rot_z = 0
le.ladder_to_roof.top.use_pnt_x = -1.795
le.ladder_to_roof.top.use_pnt_y = 3.6110001
le.ladder_to_roof.top.use_pnt_z = 4.2119999
le.ladder_to_roof.top.use_rot_x = 0
le.ladder_to_roof.top.use_rot_y = -82.809998
le.ladder_to_roof.top.use_rot_z = 0
le.ladder_to_roof.minz = 1.202
le.ladder_to_roof.maxz = 2.5
le.ladder_to_roof.base.box = "le_ladderup_box"
le.ladder_to_roof.top.box = "le_ladderdn_box"
le.ladder_to_roof.lookAt = function(arg1) -- line 913
    manny:say_line("/lema014/")
end
le.ladder_to_roof.walkOut = function(arg1, arg2) -- line 917
    if arg2 == arg1.top.box then
        le.cut_to_rf_trigger:walkOut()
    end
end
le.cut_to_rf_trigger = { }
le.le_cuttorf_box = le.cut_to_rf_trigger
le.cut_to_rf_trigger.walkOut = function(arg1) -- line 927
    manny:stop_climb_ladder()
    rf:switch_to_set()
    rf:current_setup(rf_rufha)
    manny.save_cos_depth = GetActorCostumeDepth(manny.hActor)
    START_CUT_SCENE()
    set_override(le.override_cut_to_rf, le)
    manny:clear_hands()
    manny:put_in_set(rf)
    manny:setpos(-2.025, 3.78, 3.72)
    manny:setrot(0, 97.5285, 0)
    manny:push_costume("manny_scales.cos")
    manny:play_chore(manny_scales_jump_to_co, "manny_scales.cos")
    sleep_for(800)
    start_sfx("mannyJmp.WAV")
    manny:wait_for_chore()
    manny:pop_costume()
    manny:walkto(-4.08258, 5.16606, 3.72)
    while manny:is_moving() do
        break_here()
    end
    END_CUT_SCENE()
    if not rf.seen_eggs then
        rf.seen_eggs = TRUE
        start_script(rf.show_eggs)
    end
end
le.override_cut_to_rf = function(arg1, arg2) -- line 961
    while GetActorCostumeDepth(manny.hActor) > manny.save_cos_depth do
        manny:pop_costume()
    end
    if arg2 then
        kill_override()
        while GetActorCostumeDepth(manny.hActor) > manny.save_cos_depth do
            manny:pop_costume()
        end
        manny:put_in_set(rf)
        manny:setpos(-4.08258, 5.16606, 3.72)
        manny:setrot(0, 77.006, 0)
        rf:current_setup(rf_rufha)
    end
end
le.master_pigeon_obj = Object:create(le, "master pigeon", 0, 0, 0, { range = 0 })
le.master_pigeon_obj.lookAt = function(arg1) -- line 980
    rf.pigeons1:use()
end
le.master_pigeon_obj.pickUp = function(arg1) -- line 984
    rf.pigeons1:pickUp()
end
le.master_pigeon_obj.use = function(arg1) -- line 988
    rf.pigeons1:pickUp()
end
le.copals_drapes = Object:create(le, "", 0, 0, 0, { range = 0 })
le.dom_door = Object:create(le, "/letx015/window", -3.2379999, 0.667, 0.44, { range = 1.2 })
le.dom_door.use_pnt_x = -3.38642
le.dom_door.use_pnt_y = -0.13642
le.dom_door.use_pnt_z = 0
le.dom_door.use_rot_x = 0
le.dom_door.use_rot_y = 0.032897901
le.dom_door.use_rot_z = 0
le.dom_door.lookAt = function(arg1) -- line 1013
    if reaped_bruno and not reaped_meche then
        manny:say_line("/lema016/")
    else
        manny:say_line("/lema017/")
    end
end
le.dom_door.use = function(arg1) -- line 1021
    local local1
    if not reaped_bruno then
        if arg1.tried_opening then
            manny:say_line("/lema018/")
        elseif manny:walkto_object(arg1) then
            START_CUT_SCENE()
            manny:clear_hands()
            manny:push_costume("ma_enter_office.cos")
            manny:play_chore(ma_enter_office_start_try_window, "ma_enter_office.cos")
            manny:wait_for_chore(ma_enter_office_start_try_window, "ma_enter_office.cos")
            manny:say_line("/lema018/")
            manny:wait_for_message()
            manny:play_chore(ma_enter_office_end_try_window, "ma_enter_office.cos")
            manny:say_line("/lema019/")
            manny:wait_for_message()
            manny:wait_for_chore(ma_enter_office_end_try_window, "ma_enter_office.cos")
            manny:pop_costume()
            END_CUT_SCENE()
        end
    elseif not reaped_meche then
        manny:say_line("/lema020/")
    elseif manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:clear_hands()
        manny:push_costume("ma_enter_office.cos")
        if not le.dom_door:is_open() then
            manny:play_chore(ma_enter_office_open_window, "ma_enter_office.cos")
            sleep_for(550)
            start_sfx("windowdo.wav")
            sleep_for(225)
            le.dom_door.interest_actor:play_chore(0)
            le.dom_door.interest_actor:wait_for_chore()
            manny:wait_for_chore()
        end
        manny:play_chore(ma_enter_office_step_in_do, "ma_enter_office.cos")
        sleep_for(300)
        start_sfx("maGrbWnd.WAV")
        manny:wait_for_chore()
        manny:stop_chore(ma_enter_office_step_in_do, "ma_enter_office.cos")
        le.dom_door:open()
        dom.window:open()
        manny:pop_costume()
        manny:follow_boxes()
        dom:switch_to_set()
        manny:play_sound_at("rugfall.wav")
        manny:put_in_set(dom)
        manny:setpos(1.1554199, 2.58599, 0)
        manny:setrot(0, 170.25101, 0)
        END_CUT_SCENE()
    end
end
le.dom_warning = Object:create(le, "/letx021/trigger", 0, 0, 0, { range = 0 })
le.doms_trigger = le.dom_warning
le.dom_warning.walkOut = function(arg1) -- line 1081
    if reaped_bruno then
        if reaped_meche then
            if not le.dom_warning.missed_dom then
                le.dom_warning.missed_dom = TRUE
                manny:say_line("/lema022/")
            end
        else
            manny:say_line("/lema023/")
        end
    end
end
le.co_door = Object:create(le, "/letx024/window", -0.093000002, 0.5923, 0.41, { range = 0.62539101 })
le.le_co_box = le.co_door
le.co_door.passage = { "co_psg" }
le.co_door.use_pnt_x = 0.103421
le.co_door.use_pnt_y = 0.67330498
le.co_door.use_pnt_z = 0
le.co_door.use_rot_x = 0
le.co_door.use_rot_y = 92.932098
le.co_door.use_rot_z = 0
le.co_door.out_pnt_x = 0.103421
le.co_door.out_pnt_y = 0.67330498
le.co_door.out_pnt_z = 0
le.co_door.out_rot_x = 0
le.co_door.out_rot_y = 92.932098
le.co_door.out_rot_z = 0
le.co_door.lookAt = function(arg1) -- line 1114
    if reaped_meche then
        manny:say_line("/lema025/")
    elseif reaped_bruno then
        manny:say_line("/lema027/")
    else
        manny:say_line("/lema026/")
    end
end
le.co_door.walkOut = function(arg1) -- line 1126
    if not reaped_meche and not reaped_bruno then
        le:jump_into_co()
    else
        arg1:lookAt()
    end
end
le.co_door.use = le.co_door.walkOut
le.jump_into_co = function(arg1) -- line 1136
    START_CUT_SCENE()
    cameraman_disabled = TRUE
    manny:walkto_object(le.co_door)
    manny:clear_hands()
    manny:push_costume("ma_enter_office.cos")
    manny:play_chore(ma_enter_office_step_in_do, "ma_enter_office.cos")
    sleep_for(300)
    start_sfx("maGrbWnd.WAV")
    sleep_for(700)
    manny:stop_chore(ma_enter_office_step_in_do, "ma_enter_office.cos")
    manny:pop_costume()
    manny:put_in_set(co)
    co:switch_to_set()
    manny:setpos(0.950364, 2.9558, 0)
    manny:setrot(0, 190.196, 0)
    co:current_setup(1)
    manny:push_costume("manny_scales.cos")
    manny:play_chore(manny_scales_jump_to_co, "manny_scales.cos")
    sleep_for(800)
    start_sfx("maJmpCpt.WAV")
    manny:wait_for_chore()
    manny:pop_costume()
    cameraman_disabled = FALSE
    END_CUT_SCENE()
end
le.co_door2 = Object:create(le, "/letx024/window", -0.978432, -0.0309864, 0.50999999, { range = 0.60000002 })
le.co_door2.use_pnt_x = -0.978432
le.co_door2.use_pnt_y = -0.210986
le.co_door2.use_pnt_z = 0
le.co_door2.use_rot_x = 0
le.co_door2.use_rot_y = 2.4669299
le.co_door2.use_rot_z = 0
le.co_door2.lookAt = le.co_door.lookAt
le.co_door3 = Object:create(le, "/letx024/window", -1.83843, -0.0309864, 0.50999999, { range = 0.60000002 })
le.co_door3.use_pnt_x = -1.77988
le.co_door3.use_pnt_y = -0.226787
le.co_door3.use_pnt_z = 0
le.co_door3.use_rot_x = 0
le.co_door3.use_rot_y = 15.9242
le.co_door3.use_rot_z = 0
le.co_door3.lookAt = le.co_door.lookAt
le_open_doms_window_open_window = 0
lever_to_be = 0
CheckFirstTime("lm.lua")
dofile("ve_talks_to_ma.lua")
lm = Set:create("lm.set", "Limbo Dock", { lm_top = 0, lm_velws = 1, lm_gngms = 2, lm_nolim = 3 })
velasco.face_manny = function(arg1) -- line 14
    if find_script(velasco.face_bottle) then
        wait_for_script(velasco.face_bottle)
    end
    velasco:run_chore(ve_talks_to_ma_stop_tinker, "ve_talks_to_ma.cos")
    velasco:stop_chore(ve_talks_to_ma_tinker, "ve_talks_to_ma.cos")
    velasco:run_chore(ve_talks_to_ma_turn_around, "ve_talks_to_ma.cos")
    velasco:stop_chore(ve_talks_to_ma_turn_around, "ve_talks_to_ma.cos")
    velasco:play_chore(ve_talks_to_ma_face_manny, "ve_talks_to_ma.cos")
    velasco.facing_manny = TRUE
end
velasco.face_bottle = function(arg1) -- line 27
    if find_script(velasco.face_manny) then
        wait_for_script(velasco.face_manny)
    end
    velasco.facing_manny = FALSE
    stop_script(velasco.stop_special_talk)
    velasco:stop_chore(ve_talks_to_ma_talk_idle, "ve_talks_to_ma.cos")
    velasco:stop_chore(ve_talks_to_ma_talk2, "ve_talks_to_ma.cos")
    velasco:head_look_at(nil)
    velasco:run_chore(ve_talks_to_ma_back_and_tinker, "ve_talks_to_ma.cos")
    velasco:play_chore_looping(ve_talks_to_ma_tinker, "ve_talks_to_ma.cos")
end
velasco.stop_special_talk = function(arg1, arg2) -- line 41
    velasco:wait_for_message()
    wait_for_script(velasco.face_bottle)
    wait_for_script(velasco.face_manny)
    velasco:set_chore_looping(arg2, FALSE, "ve_talks_to_ma.cos")
    velasco:stop_chore(arg2, "ve_talks_to_ma.cos")
    if velasco.facing_manny then
        velasco:play_chore(ve_talks_to_ma_face_manny, "ve_talks_to_ma.cos")
    end
end
velasco.say_line = function(arg1, arg2) -- line 54
    local local1
    PrintDebug("in velasco say line.\n")
    if velasco:get_costume() == "ve_talks_to_ma.cos" and velasco.facing_manny then
        local1 = pick_one_of({ ve_talks_to_ma_talk_idle, ve_talks_to_ma_talk2 })
        velasco:play_chore_looping(local1, "ve_talks_to_ma.cos")
        arg1.parent.say_line(velasco, arg2)
        single_start_script(velasco.stop_special_talk, velasco, local1)
    else
        arg1.parent.say_line(velasco, arg2)
    end
end
lm.reunion = function() -- line 68
    local local1 = velasco:getpos()
    START_CUT_SCENE()
    velasco:follow_boxes()
    lm.velasco_gone = TRUE
    manny:walkto(-0.35399899, -2.6442599, 0.015, 0, -113, 0)
    sleep_for(400)
    local1.z = local1.z + 0.44999999
    manny:head_look_at_point(local1)
    velasco:say_line("/lmve146/")
    velasco:head_look_at_manny()
    velasco:set_chore_looping(velasco_idles_rocking, FALSE)
    velasco:wait_for_chore()
    velasco:push_chore(velasco_idles_down_from_toes)
    velasco:push_chore()
    wait_for_message()
    manny:wait_for_actor()
    velasco:play_chore(velasco_stand, "velasco.cos")
    velasco:say_line("/lmve147/")
    velasco:wait_for_chore()
    wait_for_message()
    manny:say_line("/lmma148/")
    velasco:push_chore(velasco_idles_up_on_toes)
    velasco:push_chore()
    velasco:push_chore(velasco_idles_rocking, TRUE)
    wait_for_message()
    manny:say_line("/lmma149/")
    wait_for_message()
    velasco:say_line("/lmve150/")
    velasco:head_look_at(nil)
    velasco:set_chore_looping(velasco_idles_rocking, FALSE)
    wait_for_message()
    velasco:say_line("/lmve151/")
    velasco:wait_for_chore()
    velasco:play_chore(velasco_idles_down_from_toes)
    velasco:wait_for_chore()
    velasco:pop_costume()
    velasco:play_chore(velasco_stand)
    wait_for_message()
    velasco:say_line("/lmve152/")
    velasco:head_look_at_manny()
    wait_for_message()
    manny:say_line("/lmma153/")
    wait_for_message()
    velasco:say_line("/lmve154/")
    velasco:head_look_at(nil)
    velasco:set_walk_chore(velasco_walk)
    wait_for_message()
    velasco:say_line("/lmve155/")
    wait_for_message()
    velasco:walkto(-1.08558, -1.75564, 0.015)
    manny:say_line("/lmma156/")
    wait_for_message()
    velasco:say_line("/lmve157/")
    wait_for_message()
    velasco:say_line("/lmve158/")
    wait_for_message()
    sleep_for(500)
    manny:head_look_at(nil)
    manny:tilt_head_gesture()
    manny:say_line("/lmma159/")
    velasco:free()
    END_CUT_SCENE()
end
lm.check_status = function(arg1) -- line 135
    local local1 = made_vacancy
    local local2 = hh.union_card.owner == manny
    local local3 = dd.strike_on
    START_CUT_SCENE()
    IrisDown(0, 0, 1)
    manny:setpos(-0.0231068, -2.6798899, 0.0099999998)
    manny:setrot(0, -120, 0)
    velasco:stop_chore(ve_talks_to_ma_tinker)
    velasco:play_chore(ve_talks_to_ma_face_manny, "ve_talks_to_ma.cos")
    velasco.facing_manny = TRUE
    IrisUp(320, 200, 1000)
    break_here()
    if local1 and not lm.checked_off_vacancy then
        lm.checked_off_vacancy = TRUE
        manny:say_line("/lmma077/")
        wait_for_message()
        velasco:say_line("/lmve078/")
        wait_for_message()
        velasco:say_line("/lmve079/")
        wait_for_message()
        manny:say_line("/lmma080/")
        wait_for_message()
        velasco:say_line("/lmve081/")
        wait_for_message()
    end
    if local3 and not lm.checked_off_tools then
        lm.checked_off_tools = TRUE
        velasco:say_line("/lmve082/")
        wait_for_message()
        manny:say_line("/lmma083/")
        wait_for_message()
        manny:say_line("/lmma084/")
        wait_for_message()
        velasco:say_line("/lmve085/")
        wait_for_message()
    end
    if local2 and not lm.checked_off_card then
        lm.checked_off_card = TRUE
        velasco:say_line("/lmve086/")
        wait_for_message()
        shrinkBoxesEnabled = FALSE
        open_inventory(TRUE, TRUE)
        manny.is_holding = hh.union_card
        close_inventory()
        velasco:say_line("/lmve087/")
        wait_for_message()
        velasco:say_line("/lmve088/")
        wait_for_message()
        velasco:say_line("/lmve089/")
        open_inventory(TRUE, TRUE)
        manny.is_holding = nil
        close_inventory()
        if GlobalShrinkEnabled then
            shrinkBoxesEnabled = TRUE
        end
    end
    wait_for_message()
    END_CUT_SCENE()
    lm:talk_progress(local1, local2, local3)
end
lm.talk_progress = function(arg1, arg2, arg3, arg4) -- line 203
    START_CUT_SCENE()
    if arg2 and arg3 and arg4 then
        lm.talked_readiness = TRUE
        velasco:say_line("/lmve090/")
        wait_for_message()
        velasco:say_line("/lmve091/")
        wait_for_message()
        manny:say_line("/lmma092/")
        wait_for_message()
        manny:say_line("/lmma093/")
        wait_for_message()
        velasco:say_line("/lmve094/")
        wait_for_message()
    else
        if lm.talked_naranja and not arg2 then
            velasco:say_line("/lmve095/")
            wait_for_message()
            if si.naranja_out then
                velasco:say_line("/lmve096/")
            else
                velasco:say_line("/lmve097/")
            end
            wait_for_message()
            manny:say_line("/lmma098/")
            wait_for_message()
            velasco:say_line("/lmve099/")
            wait_for_message()
        end
        if lm.talked_union and not arg3 then
            velasco:say_line("/lmve100/")
            wait_for_message()
            manny:say_line("/lmma101/")
            wait_for_message()
            velasco:say_line("/lmve102/")
        end
        if lm.talked_tools and not arg4 then
            velasco:say_line("/lmve103/")
            wait_for_message()
            manny:say_line("/lmma104/")
            wait_for_message()
            velasco:say_line("/lmve105/")
        end
    end
    wait_for_message()
    start_script(velasco.face_bottle)
    velasco:say_line("/lmve106/")
    wait_for_message()
    manny:say_line("/lmma107/")
    END_CUT_SCENE()
end
lm.set_up_actors = function(arg1) -- line 257
    if lm.bottle.owner ~= manny then
        if not ship_bottle_actor then
            ship_bottle_actor = Actor:create(nil, nil, nil, "bottle")
        end
        ship_bottle_actor:set_costume("ship_bottle.cos")
        ship_bottle_actor:put_in_set(lm)
        ship_bottle_actor:setpos(0.379959, -3.12955, 0.2457)
        ship_bottle_actor:setrot(89, 270, 0)
    end
    if not lm.velasco_gone then
        velasco:default()
        velasco:put_in_set(lm)
        velasco:ignore_boxes()
        velasco:setpos(0.40248, -2.88345, 0.02539)
        velasco:setrot(0, 160, 0)
        if in_year_four then
            velasco:setpos(0.285, -2.8725, 0.015)
            velasco:setrot(0, 102, 0)
            velasco:push_costume("velasco_idles.cos")
            velasco:play_chore_looping(velasco_idles_rocking)
        else
            velasco:push_costume("ve_talks_to_ma.cos")
            velasco:play_chore_looping(ve_talks_to_ma_tinker, "ve_talks_to_ma.cos")
        end
        velasco.footsteps = footsteps.creak
    end
end
lm.enter = function(arg1) -- line 292
    lm:current_setup(lm_gngms)
    if not in_year_four then
        lm.water.hObjectState = lm:add_object_state(lm_gngms, "lm_water1.bm", nil, OBJSTATE_UNDERLAY)
    else
        lm.water.hObjectState = lm:add_object_state(lm_nolim, "lm_water1.bm", nil, OBJSTATE_UNDERLAY)
    end
    lm.water:set_object_state("lm_water.cos")
    lm.water:play_chore_looping(0)
    if not find_script(cut_scene.idcorpse) then
        lm:set_up_actors()
        if not in_year_four then
            box_on("lm_gngms")
            box_off("lm_nolim")
            if lm.talked_naranja then
                if ve2 then
                    ve2[180].off = FALSE
                end
            end
            if made_vacancy and not lm.checked_off_vacancy or (dd.strike_on and not lm.checked_off_tools) or (hh.union_card.owner == manny and not lm.checked_off_card) then
                start_script(lm.check_status)
            end
        else
            box_off("lm_gngms")
            box_on("lm_nolim")
            lm.limbo:make_untouchable()
            lm.velasco_obj:make_untouchable()
            lm.bottle.range = 0.7
        end
    end
    start_loop_sfx("waterlap.IMU")
    set_vol("waterlap.IMU", 50)
    start_script(foghorn_sfx)
    lm:add_ambient_sfx(harbor_ambience_list, harbor_ambience_parm_list)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 100, 400, 6000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(velasco.hActor, 0)
    SetActorShadowPoint(velasco.hActor, 100, 400, 6000)
    SetActorShadowPlane(velasco.hActor, "shadow1")
    AddShadowPlane(velasco.hActor, "shadow1")
end
lm.exit = function(arg1) -- line 345
    stop_script(foghorn_sfx)
    fade_sfx("waterlap.IMU")
    sleep_for(1000)
    stop_sound("waterlap.IMU")
    if not find_script(cut_scene.idcorpse) then
        velasco:free()
    end
    ship_bottle_actor:free()
    KillActorShadows(manny.hActor)
    KillActorShadows(velasco.hActor)
end
lm.water = Object:create(lm, "", 0, 0, 0, { range = 0 })
lm.spooky_zone = { }
lm.spooky_zone.walkOut = function(arg1) -- line 371
    sleep_for(1000)
    manny:say_line("/lmma108/")
end
lm.velasco_obj = Object:create(lm, "/lmtx109/Velasco", 0.468817, -3.0226099, 0.43000001, { range = 0.89999998 })
lm.velasco_obj.use_pnt_x = 0.063828997
lm.velasco_obj.use_pnt_y = -2.7193301
lm.velasco_obj.use_pnt_z = 0.015
lm.velasco_obj.use_rot_x = 0
lm.velasco_obj.use_rot_y = -157.371
lm.velasco_obj.use_rot_z = 0
lm.velasco_obj.lookAt = function(arg1) -- line 385
    START_CUT_SCENE()
    manny:say_line("/lmma110/")
    wait_for_message()
    velasco:say_line("/lmve111/")
    END_CUT_SCENE()
end
lm.velasco_obj.pickUp = function(arg1) -- line 393
    soft_script()
    manny:say_line("/lmma112/")
    wait_for_message()
    velasco:say_line("/lmve113/")
end
lm.velasco_obj.use = function(arg1) -- line 400
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    END_CUT_SCENE()
    Dialog:run("ve2", "dlg_vel2.lua")
end
lm.velasco_obj.use_union_card = function(arg1) -- line 407
    soft_script()
    velasco:say_line("/lmve114/")
end
lm.bottle = Object:create(lm, "/lmtx115/bottle", 0.528817, -3.0726099, 0.27000001, { range = 0.60000002 })
lm.bottle.use_pnt_x = 0.187002
lm.bottle.use_pnt_y = -3.1379499
lm.bottle.use_pnt_z = 0.015
lm.bottle.use_rot_x = 0
lm.bottle.use_rot_y = -55.056801
lm.bottle.use_rot_z = 0
lm.bottle.wav = "getBotl.wav"
lm.bottle.lookAt = function(arg1) -- line 421
    if not in_year_four then
        START_CUT_SCENE()
        manny:say_line("/lmma116/")
        wait_for_message()
        velasco:say_line("/lmve117/")
        END_CUT_SCENE()
    elseif lm.bottle.full then
        manny:say_line("/lmma160/")
    else
        manny:say_line("/lmma161/")
    end
end
lm.bottle.pickUp = function(arg1) -- line 437
    if not in_year_four then
        manny:say_line("/lmma118/")
        wait_for_message()
        velasco:say_line("/lmve119/")
    elseif tim_was_wrong then
        manny:say_line("/lmma165/")
    else
        manny:say_line("/lmma162/")
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        manny:play_chore(ms_reach_med, manny.base_costume)
        sleep_for(400)
        start_sfx("lmGetBot.wav")
        sleep_for(404)
        ship_bottle_actor:free()
        lm.bottle:get()
        manny.hold_chore = msb_activate_empty_bottle
        manny:play_chore_looping(manny.hold_chore, manny.base_costume)
        manny:play_chore_looping(ms_hold, manny.base_costume)
        manny.is_holding = arg1
        manny:wait_for_chore()
        END_CUT_SCENE()
    end
end
lm.bottle.use = function(arg1) -- line 464
    if in_year_four then
        if arg1.owner == manny then
            manny:say_line("/lmma163/")
        else
            arg1:pickUp()
        end
    else
        START_CUT_SCENE()
        manny:say_line("/lmma120/")
        wait_for_message()
        velasco:say_line("/lmve121/")
        wait_for_message()
        velasco:say_line("/lmve122/")
        END_CUT_SCENE()
    end
end
lm.gate = Object:create(lm, "/lmtx123/gate", 0.32881701, -0.87260598, 0.47, { range = 0.80000001 })
lm.gate.use_pnt_x = 0.305531
lm.gate.use_pnt_y = -1.30925
lm.gate.use_pnt_z = 0.015
lm.gate.use_rot_x = 0
lm.gate.use_rot_y = 1814.23
lm.gate.use_rot_z = 0
lm.gate.lookAt = function(arg1) -- line 490
    START_CUT_SCENE()
    system.default_response("locked")
    if not in_year_four then
        wait_for_message()
        velasco:say_line("/lmve124/")
    end
    END_CUT_SCENE()
end
lm.gate.use = lm.gate.lookAt
lm.limbo = Object:create(lm, "/lmtx125/limbo", 1.42882, -1.2726099, 1.28, { range = 1.8 })
lm.limbo.use_pnt_x = 0.289051
lm.limbo.use_pnt_y = -1.61446
lm.limbo.use_pnt_z = 0.015
lm.limbo.use_rot_x = 0
lm.limbo.use_rot_y = 1752.96
lm.limbo.use_rot_z = 0
lm.limbo.lookAt = function(arg1) -- line 510
    manny:say_line("/lmma126/")
end
lm.limbo.pickUp = function(arg1) -- line 514
    manny:say_line("/lmma127/")
end
lm.limbo.use = function(arg1) -- line 518
    START_CUT_SCENE()
    manny:say_line("/lmma128/")
    wait_for_message()
    manny:head_look_at_point(manny:getpos())
    manny:say_line("/lmma129/")
    wait_for_message()
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
lm.moon = Object:create(lm, "/lmtx130/moon", -1.27118, 1.12739, 1.6799999, { range = 2.6199999 })
lm.moon.use_pnt_x = -0.243466
lm.moon.use_pnt_y = -0.610349
lm.moon.use_pnt_z = 0.015
lm.moon.use_rot_x = 0
lm.moon.use_rot_y = 1818.49
lm.moon.use_rot_z = 0
lm.moon.immediate = TRUE
lm.moon.lookAt = function(arg1) -- line 539
    START_CUT_SCENE()
    if not in_year_four then
        velasco:set_speech_mode(MODE_BACKGROUND)
    end
    if lm.read_poem and not in_year_four then
        manny:say_line("/lmma131/")
        manny:wait_for_message()
        sleep_for(500)
    end
    music_state:set_state(stateLM_POEM)
    manny:say_line("/lmma132/")
    if lm.read_poem and not in_year_four then
        velasco:say_line("/lmve133/")
    end
    manny:wait_for_message()
    manny:say_line("/lmma134/")
    if lm.read_poem and not in_year_four then
        velasco:say_line("/lmve135/")
    end
    manny:wait_for_message()
    manny:say_line("/lmma136/")
    if lm.read_poem and not in_year_four then
        velasco:say_line("/lmve137/")
    end
    manny:wait_for_message()
    manny:say_line("/lmma138/")
    if not in_year_four then
        velasco:say_line("/lmve139/")
    end
    manny:wait_for_message()
    manny:say_line("/lmma140/")
    if not in_year_four then
        velasco:say_line("/lmve141/")
    end
    manny:wait_for_message()
    manny:say_line("/lmma142/")
    if not in_year_four then
        velasco:say_line("/lmve143/")
    end
    wait_for_message()
    music_state:set_state(stateLM)
    if lm.read_poem and not in_year_four then
        velasco:head_look_at(nil)
    end
    if in_year_four then
        manny:say_line("/lmma164/")
    end
    if not in_year_four then
        velasco:set_speech_mode(MODE_NORMAL)
    end
    lm.read_poem = TRUE
    END_CUT_SCENE()
end
lm.moon.use = function(arg1) -- line 603
    manny:say_line("/lmma144/")
end
lm.moon.pickUp = lm.moon.use
lm.hb_door = Object:create(lm, "/lmtx145/gangplank", -1.01118, -1.88261, 0.46000001, { range = 0.60000002 })
lm.hb_door.use_pnt_x = -0.59510797
lm.hb_door.use_pnt_y = -1.8489
lm.hb_door.use_pnt_z = 0.015
lm.hb_door.use_rot_x = 0
lm.hb_door.use_rot_y = 1553.39
lm.hb_door.use_rot_z = 0
lm.hb_door.out_pnt_x = -0.83130503
lm.hb_door.out_pnt_y = -1.87475
lm.hb_door.out_pnt_z = 0.015
lm.hb_door.out_rot_x = 0
lm.hb_door.out_rot_y = 1529.89
lm.hb_door.out_rot_z = 0
lm.hb_door.walkOut = function(arg1) -- line 629
    hb:come_out_door(hb.lm_door)
end
lm.hb_door:make_untouchable()
lm_water_wateriness = 0
CheckFirstTime("_local.lua")
system.language = "EN"
system.locale = "EN_USA"
HOTKEY_EXAMINE = EKEY
HOTKEY_PICKUP = PKEY
HOTKEY_USE = UKEY
HOTKEY_INVENTORY = IKEY
ALTHOTKEY_EXAMINE = SKEY
ALTHOTKEY_PICKUP = AKEY
ALTHOTKEY_USE = WKEY
ALTHOTKEY_INVENTORY = DKEY
HOTKEY_MOVEMENT_MODE = MKEY
HOTKEY_TEXT_MODE = TKEY
HOTKEY_JOYSTICK_MODE = JKEY
HOTKEY_BRIGHTNESS = BKEY
HOTKEY_EXIT = XKEY
HOTKEY_QUIT = QKEY
lo_elev_open = 0
lo_elev_close = 1
CheckFirstTime("lo.lua")
dofile("br_talk_idles.lua")
lo = Set:create("lo.set", "lobby", { lo_tubws = 0, lo_tubws1 = 0, lo_pckws = 1, lo_elews = 2, lo_ovrhd = 3 })
lo.shrinkable = 0.022
lo.examine_statuary = function(arg1, arg2) -- line 15
    soft_script()
    if not arg2.is_pres and not arg2.is_nobody then
        if not lo.seen_statue then
            lo.seen_statue = TRUE
            arg2.is_pres = TRUE
        else
            arg2.is_nobody = TRUE
        end
    end
    if arg2.is_pres then
        manny:say_line("/loma017/")
        wait_for_message()
        manny:say_line("/loma018/")
        wait_for_message()
        manny:say_line("/gtcma13/")
    else
        manny:say_line("/loma020/")
        wait_for_message()
        manny:say_line("/loma021/")
        wait_for_message()
        manny:say_line("/loma022/")
    end
end
lo.meet_brennis = function(arg1) -- line 41
    START_CUT_SCENE()
    brennis.opened_tube_room = TRUE
    brennis:put_in_set(lo)
    brennis:set_costume("brennis_fix_idle.cos")
    brennis:set_mumble_chore(brennis_fix_idle_mumble)
    brennis:set_talk_chore(1, brennis_fix_idle_stop_talk)
    brennis:set_talk_chore(2, brennis_fix_idle_a)
    brennis:set_talk_chore(3, brennis_fix_idle_c)
    brennis:set_talk_chore(4, brennis_fix_idle_e)
    brennis:set_talk_chore(5, brennis_fix_idle_f)
    brennis:set_talk_chore(6, brennis_fix_idle_l)
    brennis:set_talk_chore(7, brennis_fix_idle_m)
    brennis:set_talk_chore(8, brennis_fix_idle_o)
    brennis:set_talk_chore(9, brennis_fix_idle_t)
    brennis:set_talk_chore(10, brennis_fix_idle_u)
    brennis:setpos(-0.997259, -1.46296, 0.00104892)
    brennis:setrot(0, 283.243, 0)
    brennis:say_line("/lobs001/")
    manny:walkto(-0.00263746, -1.56528, 0, 0, 182.298, 0)
    manny:wait_for_actor()
    lo:current_setup(lo_tubws)
    manny:head_look_at_point(-0.772703, -2.58918, 0.431)
    brennis:play_chore(brennis_fix_idle_walk, "brennis_fix_idle.cos")
    brennis:wait_for_message()
    brennis:stop_chore(brennis_fix_idle_walk, "brennis_fix_idle.cos")
    lo:current_setup(lo_elews)
    manny:head_look_at_point(-0.0757035, -2.13618, 0.62)
    brennis:setpos(-0.236814, -2.42412, 0)
    brennis:setrot(0, 275.074, 0)
    brennis:push_costume("br_talk_idles.cos")
    brennis:say_line("/lobs002/")
    brennis:play_chore(br_talk_idles_idle2talk, "br_talk_idles.cos")
    brennis:wait_for_message()
    brennis:say_line("/lobs003/")
    brennis:wait_for_chore(br_talk_idles_idle2talk, "br_talk_idles.cos")
    brennis:play_chore(br_talk_idles_talk1, "br_talk_idles.cos")
    sleep_for(50)
    manny:backup(250)
    manny:clear_hands()
    brennis:wait_for_message()
    manny:hand_gesture(TRUE)
    manny:tilt_head_gesture(TRUE)
    brennis:say_line("/lobs004/")
    brennis:wait_for_chore(br_talk_idles_talk1, "br_talk_idles.cos")
    brennis:play_chore(br_talk_idles_talk2, "br_talk_idles.cos")
    brennis:wait_for_chore(br_talk_idles_talk2, "br_talk_idles.cos")
    brennis:play_chore(br_talk_idles_talk3, "br_talk_idles.cos")
    brennis:wait_for_message()
    manny:head_forward_gesture()
    manny:say_line("/loma005/")
    manny:wait_for_message()
    brennis:wait_for_chore(br_talk_idles_talk3, "br_talk_idles.cos")
    brennis:say_line("/lobs006/")
    brennis:play_chore(br_talk_idles_talk4, "br_talk_idles.cos")
    brennis:wait_for_chore(br_talk_idles_talk4, "br_talk_idles.cos")
    brennis:wait_for_message()
    manny:twist_head_gesture()
    manny:say_line("/loma007/")
    manny:wait_for_message()
    brennis:say_line("/lobs008/")
    brennis:play_chore(br_talk_idles_walkout, "br_talk_idles.cos")
    brennis:wait_for_chore(br_talk_idles_walkout, "br_talk_idles.cos")
    brennis:wait_for_message()
    lo:current_setup(lo_pckws)
    brennis:pop_costume()
    brennis:setpos(-0.445773, -2.37887, 0)
    brennis:setrot(0, 340.591, 0)
    manny:set_look_rate(120)
    manny:head_look_at_point(0.852075, -2.12674, 0.4725)
    brennis:play_chore(brennis_fix_idle_walk, "brennis_fix_idle.cos")
    sleep_for(1700)
    brennis:stop_chore(brennis_fix_idle_walk)
    brennis:put_in_set(nil)
    brennis:free()
    lo:current_setup(lo_elews)
    sleep_for(200)
    manny:set_look_rate(200)
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
lo.enter = function(arg1) -- line 138
    lo:add_object_state(lo_elews, "lo_elevopen.bm", "lo_elevopen.zbm")
    lo.ha_door:set_object_state("lo_elev.cos")
    lo:add_object_state(lo_elews, "lo_door_to_os_comp.bm")
    lo:add_object_state(lo_elews, "lo_door_to_os_bottom.bm")
    lo:add_object_state(lo_elews, "lo_door_to_os_top.bm")
    lo.os_door:set_object_state("lo_os_door.cos")
    MakeSectorActive("elev_1", FALSE)
    MakeSectorActive("elev_2", FALSE)
    if reaped_bruno then
        lo:add_object_state(lo_pckws, "lo_door_to_pk.bm", "lo_door_to_pk.zbm")
        lo.pk_door:set_object_state("lo_pk_door.cos")
        lo.pk_door:play_chore(0)
        lo:add_object_state(lo_tubws, "lo_door_to_tu.bm", "lo_door_to_tu.zbm")
        lo.tu_door:set_object_state("lo_tu_door.cos")
        lo.tu_door:play_chore(0)
        MakeSectorActive("pk_off", FALSE)
        MakeSectorActive("tu_off", FALSE)
        lo.pk_door:unlock()
        lo.pk_door:open(TRUE)
        lo.tu_door:unlock()
        lo.tu_door:open(TRUE)
    else
        lo.pk_door:close(TRUE)
        lo.pk_door:lock()
        lo.tu_door:close(TRUE)
        lo.tu_door:lock()
    end
    SetShadowColor(20, 15, 15)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0.0528794, -1.63393, 12.0612)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
end
lo.exit = function() -- line 184
    KillActorShadows(manny.hActor)
end
lo.train_poster = Object:create(lo, "/lotx023/poster", -1.71795, -1.20274, 0.77999997, { range = 1.5 })
lo.train_poster.use_pnt_x = -1.61795
lo.train_poster.use_pnt_y = -1.62274
lo.train_poster.use_pnt_z = 0
lo.train_poster.use_rot_x = 0
lo.train_poster.use_rot_y = 3.86446
lo.train_poster.use_rot_z = 0
lo.train_poster.lookAt = function(arg1) -- line 201
    soft_script()
    manny:say_line("/loma024/")
    wait_for_message()
    manny:say_line("/loma025/")
end
lo.train_poster.pickUp = function(arg1) -- line 208
    system.default_response("think")
end
lo.train_poster.use = lo.train_poster.lookAt
lo.left_statue = Object:create(lo, "/lotx026/statue", -1.835, -2.6519201, 0.83999997, { range = 1 })
lo.left_statue.use_pnt_x = -1.625
lo.left_statue.use_pnt_y = -2.49192
lo.left_statue.use_pnt_z = 0
lo.left_statue.use_rot_x = 0
lo.left_statue.use_rot_y = -233.967
lo.left_statue.use_rot_z = 0
lo.left_statue.is_pres = FALSE
lo.left_statue.is_nobody = FALSE
lo.left_statue.lookAt = function(arg1) -- line 225
    lo:examine_statuary(lo.left_statue)
end
lo.left_statue.pickUp = function(arg1) -- line 229
    system.default_response("right")
end
lo.left_statue.use = function(arg1) -- line 233
    manny:say_line("/loma027/")
end
lo.right_statue = Object:create(lo, "/lotx028/statue", 1.88481, -2.59693, 0.94, { range = 1 })
lo.right_statue.use_pnt_x = 1.6648099
lo.right_statue.use_pnt_y = -2.4369299
lo.right_statue.use_pnt_z = 0
lo.right_statue.use_rot_x = 0
lo.right_statue.use_rot_y = 269.14099
lo.right_statue.use_rot_z = 0
lo.right_statue.is_pres = FALSE
lo.right_statue.is_nobody = FALSE
lo.right_statue.lookAt = function(arg1) -- line 248
    lo:examine_statuary(lo.right_statue)
end
lo.right_statue.pickUp = function(arg1) -- line 252
    system.default_response("right")
end
lo.right_statue.use = function(arg1) -- line 256
    manny:say_line("/loma029/")
end
lo.ship_poster = Object:create(lo, "/lotx030/poster", 1.6538, -1.1900001, 0.76999998, { range = 1 })
lo.ship_poster.use_pnt_x = 1.6938
lo.ship_poster.use_pnt_y = -1.4400001
lo.ship_poster.use_pnt_z = 0
lo.ship_poster.use_rot_x = 0
lo.ship_poster.use_rot_y = 359.70401
lo.ship_poster.use_rot_z = 0
lo.ship_poster.lookAt = function(arg1) -- line 268
    soft_script()
    manny:say_line("/loma031/")
    wait_for_message()
    manny:say_line("/loma032/")
end
lo.ship_poster.pickUp = function(arg1) -- line 275
    system.default_response("right")
end
lo.ship_poster.use = lo.ship_poster.lookAt
lo.directory = Object:create(lo, "/lotx033/directory", -0.82372701, -2.0003099, 0.56, { range = 1 })
lo.directory.use_pnt_x = -1.05
lo.directory.use_pnt_y = -2.25
lo.directory.use_pnt_z = 0
lo.directory.use_rot_x = 0
lo.directory.use_rot_y = 322.435
lo.directory.use_rot_z = 0
lo.directory.lookAt = function(arg1) -- line 290
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:say_line("/loma034/")
        wait_for_message()
        manny:say_line("/loma035/")
        END_CUT_SCENE()
    end
end
lo.directory.pickUp = function(arg1) -- line 300
    if manny:walkto_object(arg1) then
        system.default_response("attached")
    end
end
lo.directory.use = lo.directory.lookAt
lo.tu_door = Object:create(lo, "/lotx009/door", -2.07604, -1.79489, 0.47999999, { range = 0.80000001 })
lo.lo_tu_box = lo.tu_door
lo.tu_door.passage = { "tu_pass1", "tu_pass2", "tu_pass3", "tu_pass4" }
lo.tu_door.use_pnt_x = -1.862
lo.tu_door.use_pnt_y = -1.904
lo.tu_door.use_pnt_z = 0
lo.tu_door.use_rot_x = 0
lo.tu_door.use_rot_y = 85.015701
lo.tu_door.use_rot_z = 0
lo.tu_door.out_pnt_x = -2.3150001
lo.tu_door.out_pnt_y = -1.86
lo.tu_door.out_pnt_z = 0
lo.tu_door.out_rot_x = 0
lo.tu_door.out_rot_y = 85.015701
lo.tu_door.out_rot_z = 0
lo.tu_door.lookAt = function(arg1) -- line 333
    manny:say_line("/loma010/")
end
lo.tu_door.walkOut = function(arg1) -- line 337
    tu:come_out_door(tu.lo_door)
end
lo.elev_trigger = { }
lo.elev_trigger.walkOut = function(arg1) -- line 346
    lo.ha_door:open()
    while manny:find_sector_name("elev_trigger") and not manny:find_sector_name("lo_ha_box") do
        break_here()
    end
    if manny:find_sector_name("lo_ha_box") then
        lo.ha_door:walkOut()
    else
        lo.ha_door:close()
    end
end
lo.elev_walk_out = function(arg1) -- line 359
    START_CUT_SCENE()
    lo:current_setup(lo_elews)
    MakeSectorActive("lo_ha_box", FALSE)
    lo.ha_door:open()
    manny:walkto(lo.ha_door.use_pnt_x, lo.ha_door.use_pnt_y, lo.ha_door.use_pnt_z)
    manny:wait_for_actor()
    lo.ha_door:close()
    MakeSectorActive("lo_ha_box", TRUE)
    END_CUT_SCENE()
end
lo.ha_door = Object:create(lo, "/lotx011/elevator", 0.46806601, -0.68151999, 0.47999999, { range = 0.80000001 })
lo.lo_ha_box = lo.ha_door
lo.ha_door.passage = { "elev_1", "elev_2" }
lo.ha_door.use_pnt_x = 0.018274
lo.ha_door.use_pnt_y = -0.63093299
lo.ha_door.use_pnt_z = 0
lo.ha_door.use_rot_x = 0
lo.ha_door.use_rot_y = 273.75
lo.ha_door.use_rot_z = 0
lo.ha_door.out_pnt_x = 0.77249801
lo.ha_door.out_pnt_y = -0.72679502
lo.ha_door.out_pnt_z = 0
lo.ha_door.out_rot_x = 0
lo.ha_door.out_rot_y = 260.30099
lo.ha_door.out_rot_z = 0
lo.ha_door.lookAt = function(arg1) -- line 393
    manny:say_line("/loma012/")
end
lo.ha_door.use = function(arg1) -- line 397
    START_CUT_SCENE()
    if not arg1:is_open() then
        arg1:open()
    end
    arg1:walkOut()
    END_CUT_SCENE()
end
lo.ha_door.walkOut = function(arg1) -- line 406
    START_CUT_SCENE()
    manny:clear_hands()
    box_off("lo_ha_box")
    manny:walkto(lo.ha_door.out_pnt_x, lo.ha_door.out_pnt_y, lo.ha_door.out_pnt_z, lo.ha_door.out_rot_x, lo.ha_door.out_rot_y + 180, lo.ha_door.out_rot_z)
    lo.ha_door:close()
    box_on("lo_ha_box")
    ha:switch_to_set()
    manny:put_in_set(ha)
    manny:setpos(ha.lo_door.out_pnt_x, ha.lo_door.out_pnt_y, ha.lo_door.out_pnt_z)
    manny:setrot(ha.lo_door.out_rot_x, ha.lo_door.out_rot_y + 180, ha.lo_door.out_rot_z)
    ha.lo_door:open()
    manny:walkto(ha.lo_door.use_pnt_x, ha.lo_door.use_pnt_y, ha.lo_door.use_pnt_z)
    manny:wait_for_actor()
    ha.lo_door:close()
    END_CUT_SCENE()
end
lo.ha_door.open = function(arg1) -- line 425
    if not arg1:is_open() then
        arg1:wait_for_chore(1)
        arg1:play_chore(0)
        arg1:wait_for_chore()
        Object.open(arg1)
    end
    return TRUE
end
lo.ha_door.close = function(arg1) -- line 436
    if arg1:is_open() then
        Object.close(arg1)
        arg1:wait_for_chore(0)
        arg1:play_chore(1)
        arg1:wait_for_chore()
    end
    return TRUE
end
lo.pk_door = Object:create(lo, "/lotx013/door", 2.07671, -1.81213, 0.5, { range = 0.80000001 })
lo.lo_pk_box = lo.pk_door
lo.pk_door.passage = { "pk_pass1", "pk_pass2", "pk_pass3" }
lo.pk_door.use_pnt_x = 1.908
lo.pk_door.use_pnt_y = -1.8940001
lo.pk_door.use_pnt_z = 0
lo.pk_door.use_rot_x = 0
lo.pk_door.use_rot_y = 984.28497
lo.pk_door.use_rot_z = 0
lo.pk_door.out_pnt_x = 2.1800001
lo.pk_door.out_pnt_y = -1.858
lo.pk_door.out_pnt_z = 0
lo.pk_door.out_rot_x = 0
lo.pk_door.out_rot_y = 1020.33
lo.pk_door.out_rot_z = 0
lo.pk_door.lookAt = function(arg1) -- line 468
    manny:say_line("/loma014/")
end
lo.pk_door.walkOut = function(arg1) -- line 472
    pk:come_out_door(pk.lo_door)
end
lo.os_door = Object:create(lo, "/lotx015/door", -0.0119341, -3.7815199, 0.54000002, { range = 0.69999999 })
lo.os_door.use_pnt_x = -0.075821199
lo.os_door.use_pnt_y = -3.44048
lo.os_door.use_pnt_z = 0
lo.os_door.use_rot_x = 0
lo.os_door.use_rot_y = 224.946
lo.os_door.use_rot_z = 0
lo.os_door.out_pnt_x = -0.140606
lo.os_door.out_pnt_y = -3.675
lo.os_door.out_pnt_z = 0
lo.os_door.out_rot_x = 0
lo.os_door.out_rot_y = 16.7577
lo.os_door.out_rot_z = 0
lo.os_door.lookAt = function(arg1) -- line 494
    manny:say_line("/loma016/")
end
lo.os_door.use = function(arg1) -- line 498
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:clear_hands()
    manny:play_chore(ms_reach_med, "ms.cos")
    sleep_for(500)
    arg1:play_chore(0)
    arg1:wait_for_chore()
    manny:wait_for_chore(ms_reach_med, "ms.cos")
    manny:stop_chore(ms_reach_med, "ms.cos")
    os:switch_to_set()
    manny:put_in_set(os)
    manny:setpos(os.lo_door.out_pnt_x, os.lo_door.out_pnt_y, os.lo_door.out_pnt_z)
    manny:setrot(os.lo_door.out_rot_x, os.lo_door.out_rot_y + 180, os.lo_door.out_rot_z)
    manny:walkto(os.lo_door.use_pnt_x, os.lo_door.use_pnt_y, os.lo_door.use_pnt_z)
    manny:wait_for_actor()
    os.lo_door:play_chore(1)
    os.lo_door.interest_actor:wait_for_chore(1)
    END_CUT_SCENE()
end
lo.brennis_trigger = { }
lo.brennis_trigger.walkOut = function(arg1) -- line 524
    if reaped_bruno and not brennis.opened_tube_room then
        lo:meet_brennis()
    end
end
lo_os_door_open = 0
lo_os_door_close = 1
lo_pk_door_open = 0
lo_pk_door_close = 1
lo_sna_nk_ol_enter = 0
lo_sna_mumble = 1
lo_sna_c = 2
lo_sna_f = 3
lo_sna_m = 4
lo_sna_e = 5
lo_sna_u = 6
lo_sna_l = 7
lo_sna_stop_talk = 8
lo_sna_intro = 9
lo_sna_snalo02a = 10
lo_sna_snalo02b = 11
lo_sna_snalo04 = 12
lo_sna_snalo06 = 13
lo_sna_run = 14
lo_sna_flash_run = 15
lo_sna_t = 16
lo_sna_a = 17
lo_sna_o = 18
lo_tu_door_open = 0
lr_hand_woman_normal = 0
lr_hand_woman_scared = 1
lr_hand_woman_Chore2 = 2
lr_head_woman_normal = 0
lr_head_woman_scared = 1
lr_head_woman_clear = 2
CheckFirstTime("lr.lua")
lr = Set:create("lr.set", "Diner", { lr_dinws = 0 })
lr.look_count = 0
lr.scare_count = 0
dofile("bruno_cocoon.lua")
dofile("bruno_skel.lua")
dofile("md.lua")
lr.walk_in = function(arg1) -- line 17
    START_CUT_SCENE()
    EngineDisplay(FALSE)
    lr:switch_to_set()
    manny:put_in_set(lr)
    manny:setpos(1.327, 0.576, 0)
    manny:setrot(0, 327.105, 0)
    break_here()
    EngineDisplay(TRUE)
    start_script(manny.walk_and_face, manny, 0.868998, 0.733956, 0, 0, 142.288, 0)
    manny:setrot(0, 127.17, 0)
    END_CUT_SCENE()
    manny:say_line("/lrma002/")
    lr.lr_return_box = lr.door
end
lr.lookAt_citizen = function() -- line 40
    lr.look_count = lr.look_count + 1
    if lr.look_count == 1 then
        manny:say_line("/lrma003/")
    elseif lr.look_count == 2 then
        manny:say_line("/lrma004/")
    elseif lr.look_count == 3 then
        manny:say_line("/lrma005/")
    else
        manny:say_line("/lrma006/")
    end
end
lr.scare_citizen = function(arg1) -- line 54
    lr.scare_count = lr.scare_count + 1
    arg1:play_chore(LR_SCARED)
    start_sfx("tbd.wav")
    wait_for_sound("tbd.wav")
    if lr.scare_count == 1 then
        manny:say_line("/lrma007/")
    elseif lr.scare_count == 2 then
        manny:say_line("/lrma008/")
    elseif lr.scare_count == 3 then
        manny:say_line("/lrma009/")
    elseif lr.scare_count == 4 then
        manny:say_line("/lrma010/")
    elseif lr.scare_count == 5 then
        manny:say_line("/lrma011/")
    elseif lr.scare_count == 6 then
        START_CUT_SCENE()
        manny:say_line("/lrma012/")
        wait_for_message()
        manny:say_line("/lrma013/")
        END_CUT_SCENE()
    else
        manny:say_line("/lrma014/")
    end
    manny:wait_for_message()
    arg1:play_chore(LR_NORMAL)
end
LR_NORMAL = 0
LR_SCARED = 1
LR_CLEAR = 2
lr.bruno_squeak = function() -- line 87
    local local1
    while system.currentSet == lr do
        local1 = pick_one_of({ "brWiggl1.wav", "brWiggl2.wav", "brWiggl3.wav", "brWiggl4.wav" })
        start_sfx(local1)
        lr.cocoon:play_chore(bruno_cocoon_wiggle)
        wait_for_sound(local1)
        lr.cocoon:wait_for_chore()
        sleep_for(rnd(1000, 4000))
    end
end
lr.enter = function(arg1) -- line 99
    inventory_disabled = TRUE
    bruno = Actor:create(nil, nil, nil, "/lrtx001/")
    bruno:set_talk_color(Blue)
    bruno:put_in_set(lr)
    bruno:set_costume("bruno_skel.cos")
    bruno:set_mumble_chore(bruno_skel_mumble)
    bruno:set_talk_chore(1, bruno_skel_stop_talk)
    bruno:set_talk_chore(2, bruno_skel_a)
    bruno:set_talk_chore(3, bruno_skel_c)
    bruno:set_talk_chore(4, bruno_skel_e)
    bruno:set_talk_chore(5, bruno_skel_f)
    bruno:set_talk_chore(6, bruno_skel_l)
    bruno:set_talk_chore(7, bruno_skel_m)
    bruno:set_talk_chore(8, bruno_skel_o)
    bruno:set_talk_chore(9, bruno_skel_t)
    bruno:set_talk_chore(10, bruno_skel_u)
    bruno:setpos(0.416993, -0.0956955, -0.043)
    bruno:setrot(0, 210, 0)
    bruno:set_visibility(FALSE)
    NewObjectState(lr_dinws, 3, "lr_man.bm")
    NewObjectState(lr_dinws, 3, "lr_women.bm")
    NewObjectState(lr_dinws, 3, "lr_women2.bm")
    lr.big_head_lady:set_object_state("lr_head_woman.cos")
    lr.big_hand_lady:set_object_state("lr_hand_woman.cos")
    lr.cop:set_object_state("lr_man.cos")
    lr.big_head_lady:play_chore(LR_NORMAL)
    lr.big_hand_lady:play_chore(LR_NORMAL)
    lr.cop:play_chore(LR_NORMAL)
    NewObjectState(lr_dinws, 3, "lr_cocoon_states.bm", "lr_cocoon_states.zbm", 1)
    lr.cocoon:set_object_state("bruno_cocoon.cos")
    preload_sfx("brWiggl1.wav")
    preload_sfx("brWiggl2.wav")
    preload_sfx("brWiggl3.wav")
    preload_sfx("brWiggl4.wav")
    start_script(lr.bruno_squeak)
    manny.idles_allowed = FALSE
    stop_script(manny.idle_timer)
    stop_script(manny.idle)
end
lr.exit = function(arg1) -- line 149
    bruno:free()
    lr.cocoon:free_object_state()
    lr.big_head_lady:free_object_state()
    lr.big_hand_lady:free_object_state()
    lr.cop:free_object_state()
    manny:default("suit")
    inventory_disabled = FALSE
    manny.idles_allowed = TRUE
end
lr.cocoon = Object:create(lr, "/lrtx015/body", 0.272156, -0.027146799, 0, { range = 0.5 })
lr.cocoon.use_pnt_x = 0.025
lr.cocoon.use_pnt_y = 0.0089999996
lr.cocoon.use_pnt_z = 0
lr.cocoon.use_rot_x = 0
lr.cocoon.use_rot_y = 578.34003
lr.cocoon.use_rot_z = 0
lr.cocoon.lookAt = function(arg1) -- line 170
    START_CUT_SCENE()
    manny:say_line("/lrma016/")
    wait_for_message()
    manny:say_line("/lrma017/")
    END_CUT_SCENE()
end
lr.cocoon.pickUp = function(arg1) -- line 178
    START_CUT_SCENE()
    manny:say_line("/lrma018/")
    wait_for_message()
    manny:say_line("/lrma019/")
    END_CUT_SCENE()
end
lr.cocoon.use = function(arg1) -- line 186
    manny:say_line("/lrma020/")
end
lr.cocoon.use_scythe = function(arg1) -- line 190
    cur_puzzle_state[3] = TRUE
    START_CUT_SCENE()
    stop_script(lr.bruno_squeak)
    manny:walkto(0.614666, 0.365, 0, 0, 129.859, 0)
    manny:wait_for_actor()
    lr.cocoon:wait_for_chore()
    manny:set_rest_chore(nil)
    manny:stop_chore(md_hold_scythe, "md.cos")
    manny:push_costume("ma_reap_bruno.cos")
    manny:play_chore(0)
    sleep_for(1072)
    lr.cocoon.interest_actor:stop_chore(bruno_cocoon_wiggle)
    lr.cocoon.interest_actor:play_chore(bruno_cocoon_burst)
    music_state:set_sequence(seqReapBruno)
    bruno:setpos(0.416993, -0.0956955, -0.043)
    bruno:setrot(0, 210, 0)
    bruno:set_visibility(TRUE)
    bruno:play_chore(bruno_skel_reaped)
    manny:wait_for_chore(0)
    manny:pop_costume()
    manny:set_rest_chore(md_rest, "md.cos")
    manny:play_chore(md_hold_scythe, "md.cos")
    mo.scythe:put_away()
    bruno:wait_for_chore(bruno_skel_reaped)
    bruno:say_line("/lrbr021/")
    bruno:wait_for_message()
    END_CUT_SCENE()
    start_script(cut_scene.brunopk, cut_scene)
end
lr.big_head_lady = Object:create(lr, "/lrtx022/woman", -0.63784403, 0.15285499, 0.74000001, { range = 0.80000001 })
lr.big_head_lady.use_pnt_x = -0.491
lr.big_head_lady.use_pnt_y = 0.14
lr.big_head_lady.use_pnt_z = 0
lr.big_head_lady.use_rot_x = 0
lr.big_head_lady.use_rot_y = 1144.8
lr.big_head_lady.use_rot_z = 0
lr.big_head_lady.lookAt = function(arg1) -- line 231
    lr.lookAt_citizen()
end
lr.big_head_lady.pickUp = function(arg1) -- line 235
    manny:say_line("/lrma023/")
end
lr.big_head_lady.use_scythe = lr.big_head_lady.pickUp
lr.big_head_lady.use = function(arg1) -- line 241
    lr.scare_citizen(arg1)
end
lr.cop = Object:create(lr, "/lrtx024/police officer", 0.32222101, 1.89385, 0.62, { range = 1.5 })
lr.cop.use_pnt_x = 0.391
lr.cop.use_pnt_y = 0.49599999
lr.cop.use_pnt_z = 0
lr.cop.use_rot_x = 0
lr.cop.use_rot_y = 1082.97
lr.cop.use_rot_z = 0
lr.cop.parent = lr.big_head_lady
lr.big_hand_lady = Object:create(lr, "/lrtx025/woman", -0.33777899, 2.93385, 0.62, { range = 3 })
lr.big_hand_lady.use_pnt_x = -0.032000002
lr.big_hand_lady.use_pnt_y = 0.38600001
lr.big_hand_lady.use_pnt_z = 0
lr.big_hand_lady.use_rot_x = 0
lr.big_hand_lady.use_rot_y = 1445.99
lr.big_hand_lady.use_rot_z = 0
lr.big_hand_lady.parent = lr.big_head_lady
lr.food = Object:create(lr, "/lrtx026/food", -0.33784401, -0.58714497, 0.41999999, { range = 0.75 })
lr.food.use_pnt_x = -0.45500001
lr.food.use_pnt_y = -0.17200001
lr.food.use_pnt_z = 0
lr.food.use_rot_x = 0
lr.food.use_rot_y = 1626.76
lr.food.use_rot_z = 0
lr.food.lookAt = function(arg1) -- line 280
    manny:say_line("/lrma027/")
end
lr.food.pickUp = function(arg1) -- line 284
    manny:say_line("/lrma028/")
end
lr.food.use = function(arg1) -- line 288
    START_CUT_SCENE()
    manny:say_line("/lrma029/")
    wait_for_message()
    manny:say_line("/lrma030/")
    END_CUT_SCENE()
end
lr.brown_cow = Object:create(lr, "/lrtx031/milkshake", 0.41215599, -0.84714502, 0.36000001, { range = 0.69999999 })
lr.brown_cow.use_pnt_x = 0.45899999
lr.brown_cow.use_pnt_y = -0.43799999
lr.brown_cow.use_pnt_z = 0
lr.brown_cow.use_rot_x = 0
lr.brown_cow.use_rot_y = 1263.74
lr.brown_cow.use_rot_z = 0
lr.brown_cow.lookAt = function(arg1) -- line 306
    manny:say_line("/lrma032/")
end
lr.brown_cow.pickUp = function(arg1) -- line 310
    manny:say_line("/lrma033/")
end
lr.brown_cow.use = function(arg1) -- line 314
    START_CUT_SCENE()
    manny:say_line("/lrma034/")
    wait_for_message()
    manny:say_line("/lrma035/")
    END_CUT_SCENE()
end
lr.door = Object:create(lr, "/lrtx036/door", 0, 0, 0, { range = 0 })
lr.door.walkOut = function(arg1) -- line 326
    if reaped_bruno then
        start_script(cut_scene.brunopk)
    else
        START_CUT_SCENE()
        manny:say_line("/lrma037/")
        manny:walkto(0.750573, 0.274314, 0, 0, 114, 0)
        manny:wait_for_message()
        manny:say_line("/lrma038/")
        END_CUT_SCENE()
    end
end
lr_man_normal = 0
lr_man_scared = 1
lr_man_clear = 2
CheckFirstTime("lu.lua")
lu = Set:create("lu.set", "lamancha sub", { lu_subla = 0, lu_ovrhd = 1 })
dofile("do_fight.lua")
manny.punches = { "/luma001/", "/luma002/", "/luma003/", "/luma004/", "/luma005/", "/luma006/", "/luma007/" }
manny.punched = { "/luma008/", "/luma009/", "/luma010/", "/luma011/", "/luma012/", "/luma013/", "/luma014/" }
domino.punches = { "/ludo015/", "/ludo016/", "/ludo017/", "/ludo018/", "/ludo019/", "/ludo020/", "/ludo021/" }
domino.punched = { "/ludo022/", "/ludo023/", "/ludo024/", "/ludo025/", "/ludo026/", "/ludo027/", "/ludo028/" }
lu.m_taunt_count = 1
lu.d_taunt_count = 1
lu.manny_taunts = function() -- line 53
    if lu.m_taunt_count == 1 then
        manny:say_line("/luma029/")
        wait_for_message()
        domino:say_line("/ludo030/")
        wait_for_message()
        domino:say_line("/ludo031/")
    elseif lu.m_taunt_count == 2 then
        manny:say_line("/luma032/")
    elseif lu.m_taunt_count == 3 then
        manny:say_line("/luma033/")
        wait_for_message()
        domino:say_line("/ludo034/")
    end
    lu.m_taunt_count = lu.m_taunt_count + 1
end
lu.domino_taunts = function() -- line 70
    if lu.d_taunt_count == 1 then
        domino:say_line("/ludo035/")
    elseif lu.d_taunt_count == 2 then
        domino:say_line("/ludo036/")
    elseif lu.d_taunt_count == 3 then
        domino:say_line("/ludo037/")
    elseif lu.d_taunt_count == 4 then
        domino:say_line("/ludo038/")
    elseif lu.d_taunt_count == 5 then
        domino:say_line("/ludo039/")
    elseif lu.d_taunt_count == 6 then
        domino:say_line("/ludo040/")
    elseif lu.d_taunt_count == 7 then
        domino:say_line("/ludo041/")
    elseif lu.d_taunt_count == 8 then
        domino:say_line("/ludo042/")
    elseif lu.d_taunt_count == 9 then
        domino:say_line("/ludo043/")
        wait_for_message()
        domino:say_line("/ludo044/")
    end
    lu.d_taunt_count = lu.d_taunt_count + 1
end
lu.scythe_fight_setup = function() -- line 96
    manny:put_in_set(lu)
    manny:setpos(-3.50621, 0.108134, 0.9)
    manny:setrot(0, -825.286, 0)
    domino:default()
    domino:put_in_set(lu)
    domino:set_costume("do_fight.cos")
    domino:set_mumble_chore(do_fight_mumble)
    domino:set_talk_chore(1, do_fight_stop_talk)
    domino:set_talk_chore(2, do_fight_a)
    domino:set_talk_chore(3, do_fight_c)
    domino:set_talk_chore(4, do_fight_e)
    domino:set_talk_chore(5, do_fight_f)
    domino:set_talk_chore(6, do_fight_l)
    domino:set_talk_chore(7, do_fight_m)
    domino:set_talk_chore(8, do_fight_o)
    domino:set_talk_chore(9, do_fight_t)
    domino:set_talk_chore(10, do_fight_u)
    domino:setpos(-2.19931, 0.096934, 0.44)
    domino:setrot(0, -622.289, 0)
    domino:set_head(8, 8, 8, 150, 28, 70)
    domino:set_speech_mode(MODE_BACKGROUND)
    start_script(lu.monitor_attack_box)
    start_script(lu.dom_look)
    domino:complete_chore(do_fight_rest)
    start_sfx("lu.imu", IM_HIGH_PRIORITY)
    set_vol("lu.imu", 5)
end
lu.dom_look = function() -- line 125
    while 1 do
        domino:head_look_at_manny()
        break_here()
    end
end
lu.monitor_attack_box = function() -- line 132
    local local1
    while 1 do
        if manny:find_sector_name("auto_attack") and manny.is_holding == mo.scythe and lu.manny_fighting == FALSE then
            local1 = start_script(lu.domino_obj.use_scythe, lu.domino_object)
            wait_for_script(local1)
        end
        break_here()
    end
end
lu.octoblink = function() -- line 146
    local local1
    while not hit_octoeye do
        lu.eye:stop_chore(2)
        lu.eye:play_chore(1)
        lu.eye:wait_for_chore()
        lu.eye:play_chore_looping(2)
        local1 = rndint(10, 20)
        repeat
            sleep_for(500)
            if hit_octoeye then
                local1 = 0
            else
                local1 = local1 - 1
            end
        until local1 <= 0
        break_here()
    end
end
lu.enter = function(arg1) -- line 174
    NewObjectState(lu_subla, OBJSTATE_UNDERLAY, "lu_octoeye.bm", nil, TRUE)
    lu.eye:set_object_state("lu_octoeye.cos")
    start_script(lu.octoblink)
    lu.scythe_fight_setup()
    play_movie_looping("lu.snm")
end
lu.exit = function(arg1) -- line 184
    domino:free()
    stop_script(lu.dom_look)
    stop_script(lu.monitor_attack_box)
    stop_sound("lu.imu")
end
lu.eye = Object:create(lu, "/lutx045/octopus", -4.6593499, -0.33352101, 1.1059, { range = 3 })
lu.eye.use_pnt_x = -3.8549399
lu.eye.use_pnt_y = -0.167321
lu.eye.use_pnt_z = 0.44
lu.eye.use_rot_x = 0
lu.eye.use_rot_y = -249.49001
lu.eye.use_rot_z = 0
lu.eye.lookAt = function(arg1) -- line 204
    manny:say_line("/luma046/")
end
lu.eye.pickUp = function(arg1) -- line 208
    manny:say_line("/luma047/")
end
lu.eye.use = function(arg1) -- line 212
    manny:say_line("/luma048/")
    wait_for_message()
    manny:say_line("/luma049/")
end
lu.eye.use_scythe = function(arg1) -- line 218
    START_CUT_SCENE()
    hit_octoeye = TRUE
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:push_costume("mn_fight.cos")
    stop_script(lu.octoblink)
    manny:stop_chore(ms_hold_scythe, "mn2.cos")
    manny:play_chore(2)
    sleep_for(900)
    arg1:stop_chore(2)
    arg1:play_chore(0)
    sleep_for(804)
    END_CUT_SCENE()
    start_script(cut_scene.bloodeye)
end
lu.domino_obj = Object:create(lu, "/lutx050/Domino", -2.2876401, 0.117294, 0.98400003, { range = 2.5999999 })
lu.domino_obj.use_pnt_x = -2.7048099
lu.domino_obj.use_pnt_y = 0.195134
lu.domino_obj.use_pnt_z = 0.44
lu.domino_obj.use_rot_x = 0
lu.domino_obj.use_rot_y = -105.245
lu.domino_obj.use_rot_z = 0
lu.domino_obj.lookAt = function(arg1) -- line 243
    soft_script()
    manny:say_line("/luma051/")
    wait_for_message()
    manny:say_line("/luma052/")
end
lu.domino_obj.pickUp = function(arg1) -- line 250
    manny:say_line("/luma053/")
end
lu.domino_obj.use = function(arg1) -- line 254
    manny:say_line("/luma054/")
end
lu.domino_obj.use_scythe = function(arg1) -- line 258
    local local1 = { x = 0, y = -0.51190001, z = 0 }
    local local2 = { x = -0.090999998, y = -0.19599999, z = 0 }
    local local3 = { }
    local local4, local5
    lu.manny_fighting = TRUE
    START_CUT_SCENE()
    MakeSectorActive("auto_attack", FALSE)
    manny:walkto_object(lu.domino_obj)
    manny:wait_for_actor()
    manny:push_costume("mn_fight.cos")
    manny:stop_chore(ms_hold_scythe, "mn2.cos")
    if rnd() then
        domino:say_line(pick_one_of(domino.punches))
        manny:say_line(pick_one_of(manny.punched))
        domino:stop_chore(do_fight_rest)
        domino:play_chore(0)
        manny:play_chore(1)
        manny:wait_for_chore()
        local3 = manny:getrot()
        local5 = RotateVector(local1, local3)
        local4 = manny:getpos()
        local5.x = local5.x + local4.x
        local5.y = local5.y + local4.y
        local5.z = local5.z + local4.z
        manny:setpos(local5.x, local5.y, local5.z)
        manny:pop_costume()
        manny:play_chore_looping(ms_hold_scythe, "mn2.cos")
        domino:wait_for_chore()
        domino:complete_chore(do_fight_rest)
    else
        domino:stop_chore(do_fight_rest)
        domino:play_chore(1)
        manny:play_chore(0)
        sleep_for(400)
        manny:say_line(pick_one_of(manny.punches))
        sleep_for(737)
        domino:say_line(pick_one_of(domino.punches))
        sleep_for(150)
        manny:say_line(pick_one_of(manny.punched))
        sleep_for(650)
        manny:say_line(pick_one_of(manny.punched))
        manny:wait_for_chore()
        local3 = manny:getrot()
        local5 = RotateVector(local2, local3)
        local4 = manny:getpos()
        local5.x = local5.x + local4.x
        local5.y = local5.y + local4.y
        local5.z = local5.z + local4.z
        manny:setpos(local5.x, local5.y, local5.z)
        manny:setrot(local3.x, local3.y - 30, local3.z)
        manny:pop_costume()
        manny:play_chore_looping(ms_hold_scythe, "mn2.cos")
        domino:wait_for_chore()
        domino:complete_chore(do_fight_rest)
    end
    if lu.d_taunt_count < 15 then
        sleep_for(500)
        lu.domino_taunts()
        wait_for_message()
    end
    if lu.m_taunt_count < 4 then
        lu.manny_taunts()
        wait_for_message()
    end
    MakeSectorActive("auto_attack", TRUE)
    END_CUT_SCENE()
    lu.manny_fighting = FALSE
end
lu_octoeye_Chore0 = 0
lu_octoeye_Chore1 = 1
lu_octoeye_Chore2 = 2
lupe_coat_give_note = 0
lupe_coat_give_coat = 1
lupe_coat_get_lengua = 2
lupe_coat_get_coat = 3
lupe_coat_hold_coat = 4
lupe_coat_mumble = 5
lupe_coat_c = 6
lupe_coat_m = 7
lupe_coat_f = 8
lupe_coat_e = 9
lupe_coat_l = 10
lupe_coat_u = 11
lupe_coat_a = 12
lupe_coat_o = 13
lupe_coat_stop_talk = 14
lupe_coat_t = 15
lupe_idles_leans_back = 0
lupe_idles_forward_shake_hands = 1
lupe_idles_clapping = 2
lupe_idles_main_pose = 3
lupe_idles_head_return_pose = 4
lupe_idles_head_right = 5
lupe_idles_forward_to_talk = 6
lupe_idles_karate = 7
lupe_idles_jumps_greeting = 8
lupe_idles_behind_desk = 9
lupe_idles_jump_back = 10
lupe_idles_end_keys = 11
lupe_idles_fade_to_main = 12
CheckFirstTime("lw.lua")
lw = Set:create("lw.set", "lsa sewer", { lw_bwnws = 0, lw_ovrhd = 1 })
dofile("bonewagon_gl.lua")
dofile("glottis_bonewagon.lua")
hole_count = 0
hole_table = { }
lw.alligator_roar = function() -- line 18
    local local1
    local1 = pick_one_of({ "lwAlRoar.wav", "lwAlRoar.wav", "alDstGrl.wav", "alRoar1.wav", "alRoar3.wav", "alSnort.wav" })
    start_sfx(local1)
    sleep_for(1000)
end
lw.vivamaro_fix = function() -- line 26
    IrisDown(320, 200, 0)
    lw:switch_to_set()
    salvador:default()
    salvador:put_in_set(lw)
    salvador:follow_boxes()
    salvador:set_walk_rate(0.5)
    salvador:set_walk_chore(sv_in_hq_walk)
    salvador:set_collision_mode(COLLISIONS_OFF)
    salvador:set_visibility(TRUE)
    olivia:default()
    olivia:put_in_set(lw)
    olivia:follow_boxes()
    olivia:set_collision_mode(COLLISIONS_OFF)
    olivia:set_visibility(TRUE)
    salvador:setpos(-1.65021, -1.53545, 0)
    salvador:setrot(0, 168.524, 0)
    olivia:setpos(-1.84472, -1.11754, 0)
    olivia:setrot(0, 170.49, 0)
    IrisUp(320, 200, 1000)
    olivia.head_script = start_script(olivia.head_follow_mesh, olivia, salvador, 6)
    start_script(salvador.walk_and_face, salvador, -1.76454, -2.09958, 0, 0, 98.7965, 0)
    start_script(olivia.walkto, olivia, -2.57605, -3.81668, 0)
    salvador:wait_for_actor()
    start_script(salvador.head_follow_mesh, salvador, olivia, 6)
    sleep_for(2000)
    stop_script(olivia.head_script)
    olivia:head_look_at(nil, 120)
    sleep_for(2000)
    salvador:walkto(-2.57605, -3.81668, 0)
    salvador:wait_for_actor()
    stop_script(salvador.head_follow_mesh)
    salvador:free()
    olivia:free()
    stop_script(sg.glottis_roars)
    glottis:wait_for_message()
    glottis:run_chore(bonewagon_gl_tovrm_lft, "bonewagon_gl.cos")
    glottis:play_chore(bonewagon_gl_squint, "bonewagon_gl.cos")
    sleep_for(2000)
end
lw.shout_hole = function(arg1) -- line 77
    local local1
    soft_script()
    if at.seen_albinizod then
        manny:say_line("/lwma001/")
        manny:wait_for_message()
        if at.pinched_albinizod then
            manny:say_line("/lwma002/")
            manny:wait_for_message()
            lw.alligator_roar()
        else
            manny:say_line("/lwma003/")
            manny:wait_for_message()
            lw.alligator_roar()
            manny:say_line("/lwma004/")
        end
    else
        if hole_table[arg1] then
            local1 = hole_table[arg1]
            PrintDebug("pre-existing hole" .. arg1.name .. "\n")
        else
            hole_count = hole_count + 1
            local1 = hole_count
            hole_table[arg1] = hole_count
            PrintDebug("Assinging " .. tostring(hole_count) .. " to " .. arg1.name .. "\n")
        end
        if local1 == 1 then
            manny:say_line("/lwma005/")
            manny:wait_for_message()
            lw.alligator_roar()
            manny:say_line("/lwma006/")
        elseif local1 == 2 then
            manny:say_line("/lwma007/")
            manny:wait_for_message()
            lw.alligator_roar()
            manny:say_line("/lwma008/")
        elseif local1 == 3 then
            manny:say_line("/lwma009/")
            manny:wait_for_message()
            lw.alligator_roar()
            manny:say_line("/lwma010/")
        elseif local1 == 4 then
            manny:say_line("/lwma011/")
            manny:wait_for_message()
            lw.alligator_roar()
            manny:say_line("/lwma012/")
        elseif local1 == 5 then
            manny:say_line("/rfma029/")
            manny:wait_for_message()
            lw.alligator_roar()
            manny:say_line("/lwma013/")
        elseif local1 == 6 then
            manny:say_line("/lwma014/")
            manny:wait_for_message()
            lw.alligator_roar()
            manny:say_line("/lwma015/")
            manny:wait_for_message()
            lw.alligator_roar()
            manny:say_line("/lwma016/")
        elseif local1 == 7 then
            manny:say_line("/lwma017/")
            manny:wait_for_message()
            lw.alligator_roar()
        else
            manny:say_line("/lwma018/")
            manny:wait_for_message()
            lw.alligator_roar()
        end
    end
end
lw.set_up_actors = function(arg1) -- line 152
    if not bowlsley_in_hiding then
        glottis:set_costume("bonewagon_gl.cos")
        glottis:set_visibility(TRUE)
        glottis:ignore_boxes()
        glottis:set_collision_mode(COLLISIONS_OFF)
        glottis:put_in_set(lw)
        glottis:setpos(-0.830143, -3.34146, 0)
        glottis:setrot(0, -1036.7, 0)
        glottis:set_mumble_chore(bonewagon_gl_gl_mumble)
        glottis:set_talk_chore(1, bonewagon_gl_stop_talk)
        glottis:set_talk_chore(2, bonewagon_gl_a)
        glottis:set_talk_chore(3, bonewagon_gl_c)
        glottis:set_talk_chore(4, bonewagon_gl_e)
        glottis:set_talk_chore(5, bonewagon_gl_f)
        glottis:set_talk_chore(6, bonewagon_gl_l)
        glottis:set_talk_chore(7, bonewagon_gl_m)
        glottis:set_talk_chore(8, bonewagon_gl_o)
        glottis:set_talk_chore(9, bonewagon_gl_t)
        glottis:set_talk_chore(10, bonewagon_gl_u)
        glottis:set_head(3, 4, 4, 165, 35, 80)
        glottis:play_chore(bonewagon_gl_hide_bw, "bonewagon_gl.cos")
        glottis:play_chore(bonewagon_gl_vrm2drv)
        single_start_script(sg.glottis_roars, sg, glottis)
        NewObjectState(lw_bwnws, OBJSTATE_STATE, "lw_bw.bm", "lw_bw.zbm")
        lw.bone_wagon:set_object_state("lw_bw.cos")
        lw.bone_wagon:play_chore(0)
    else
        lw.bone_wagon:make_untouchable()
    end
end
lw.enter = function(arg1) -- line 193
    lw:set_up_actors()
    start_script(sewer_drip)
    SetShadowColor(5, 5, 5)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -2, -0.5, 3.4)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(olivia.hActor, 0)
    SetActorShadowPoint(olivia.hActor, -2, -0.5, 3.4)
    SetActorShadowPlane(olivia.hActor, "shadow1")
    AddShadowPlane(olivia.hActor, "shadow1")
    SetActiveShadow(salvador.hActor, 0)
    SetActorShadowPoint(salvador.hActor, -2, -0.5, 3.4)
    SetActorShadowPlane(salvador.hActor, "shadow1")
    AddShadowPlane(salvador.hActor, "shadow1")
end
lw.exit = function(arg1) -- line 216
    stop_script(sg.glottis_roars)
    glottis:free()
    stop_script(sewer_drip)
    KillActorShadows(manny.hActor)
    KillActorShadows(olivia.hActor)
    KillActorShadows(salvador.hActor)
end
lw.hole = Object:create(lw, "/lwtx019/hole", -0.0230342, -0.178213, 0.37, { range = 0.80000001 })
lw.hole.use_pnt_x = -0.48280901
lw.hole.use_pnt_y = -0.43814
lw.hole.use_pnt_z = 0
lw.hole.use_rot_x = 0
lw.hole.use_rot_y = -72.097397
lw.hole.use_rot_z = 0
lw.hole.use = function(arg1) -- line 239
    start_script(lw.shout_hole, arg1)
end
lw.hole.lookAt = lw.hole.use
lw.bone_wagon = Object:create(lw, "", -1.28654, -2.9547801, 0.49399999, { range = 1.5 })
lw.bone_wagon.use_pnt_x = -1.86954
lw.bone_wagon.use_pnt_y = -2.2897799
lw.bone_wagon.use_pnt_z = 0
lw.bone_wagon.use_rot_x = 0
lw.bone_wagon.use_rot_y = 221.283
lw.bone_wagon.use_rot_z = 0
lw.bone_wagon.lookAt = function(arg1) -- line 255
    manny:say_line("/lbma005/")
end
lw.bone_wagon.use = function(arg1) -- line 259
    system.default_response("not now")
end
lw.sh_door = Object:create(lw, "/lwtx021/door", -1.7446001, -0.74928099, 0.58999997, { range = 0 })
lw.sh_door.use_pnt_x = -2.27809
lw.sh_door.use_pnt_y = -2.52914
lw.sh_door.use_pnt_z = 0
lw.sh_door.use_rot_x = 0
lw.sh_door.use_rot_y = 151.797
lw.sh_door.use_rot_z = 0
lw.sh_door.out_pnt_x = -2.9173701
lw.sh_door.out_pnt_y = -3.4418099
lw.sh_door.out_pnt_z = 0
lw.sh_door.out_rot_x = 0
lw.sh_door.out_rot_y = 158.724
lw.sh_door.out_rot_z = 0
lw.sh_box = lw.sh_door
lw.sh_door:make_untouchable()
lw.sh_door.walkOut = function(arg1) -- line 288
    sh:come_out_door(sh.lw_door)
end
lw.nq_door = Object:create(lw, "/lwtx021/ladder", -1.7446001, -0.74928099, 0.58999997, { range = 0.60000002 })
lw.nq_door.use_pnt_x = -1.6046
lw.nq_door.use_pnt_y = -0.87928098
lw.nq_door.use_pnt_z = 0
lw.nq_door.use_rot_x = 0
lw.nq_door.use_rot_y = -7911.6699
lw.nq_door.use_rot_z = 0
lw.nq_door.out_pnt_x = -1.6205699
lw.nq_door.out_pnt_y = -0.77024299
lw.nq_door.out_pnt_z = 0
lw.nq_door.out_rot_x = 0
lw.nq_door.out_rot_y = -7911.6699
lw.nq_door.out_rot_z = 0
lw.nq_door.lookAt = function(arg1) -- line 309
    manny:say_line("/lwma022/")
end
lw.nq_door.walkOut = function(arg1) -- line 313
    nq:come_out_door(nq.lw_door)
end
lx_door_Chore0 = 0
lx_door_Chore1 = 1
lx_door_Chore2 = 2
CheckFirstTime("lx.lua")
lx = Set:create("lx.set", "lighthouse exterior", { lx_dokla = 0, lx_extoh = 1, lx_extoh1 = 1, lx_oh = 2 })
lx.cheat_boxes = { lite_tele_box = 0, cheat_box_1 = 1 }
foghorn_table = { "foghorn1.wav", "foghorn2.wav", "foghorn3.wav", "foghorn4.wav" }
foghorn_sfx = function() -- line 16
    local local1
    while 1 do
        sleep_for(rndint(15000, 30000))
        if cutSceneLevel <= 0 then
            local1 = pick_from_nonweighted_table(foghorn_table, TRUE)
            start_sfx(local1, IM_LOW_PRIORITY)
            if system.currentSet == lx then
                if lx:current_setup() == lx_extoh then
                    set_vol(local1, 127)
                else
                    set_vol(local1, 90)
                end
            elseif system.currentSet == dd then
                set_vol(local1, 45)
            elseif system.currentSet == hb then
                set_vol(local1, 40)
            elseif system.currentSet == xb then
                set_vol(local1, 30)
            elseif system.currentSet == se then
                set_vol(local1, 30)
            elseif system.currentSet == sd then
                set_vol(local1, 30)
            elseif system.currentSet == lm then
                set_vol(local1, 25)
            elseif system.currentSet == cb then
                set_vol(local1, 25)
            elseif system.currentSet == bp then
                set_vol(local1, 25)
            elseif system.currentSet == ev then
                set_vol(local1, 25)
            elseif system.currentSet == ce then
                set_vol(local1, 25)
            elseif system.currentSet == cl then
                set_vol(local1, 25)
            elseif system.currentSet == bb then
                set_vol(local1, 25)
            end
        end
    end
end
lx.lola_wispers = function(arg1) -- line 61
    lola:say_line("/lxlo001/")
    lola:say_line("/lxlo002/")
    lola:say_line("/lxlo003/")
end
lx.reunion = function() -- line 68
    lx.got_sign = TRUE
    START_CUT_SCENE()
    break_here()
    manny:walkto(0.24467, 1.068, 3.03)
    manny:wait_for_actor()
    manny:say_line("/lxma011/")
    manny:twist_head_gesture()
    END_CUT_SCENE()
end
lx.find_lola = function() -- line 81
    cut_scene.loladies()
end
lx.teleport = function(arg1) -- line 104
    while 1 do
        if manny:find_sector_name("teleport2") then
            system:lock_display()
            manny:setpos(0.00395541, -4.73361, 0)
            manny:setrot(0, 0, 0)
            break_here()
            system:unlock_display()
        elseif manny:find_sector_name("teleport1") then
            system:lock_display()
            manny:setpos(-5.35422, -12.5758, 0)
            manny:setrot(0, -226, 0)
            break_here()
            system:unlock_display()
        end
        break_here()
    end
end
lx.enter = function(arg1) -- line 129
    if in_year_four then
        lx.lighthouse_door.opened = TRUE
    end
    if lx.lighthouse_door:is_open() then
        MakeSectorActive("doorpass", TRUE)
        NewObjectState(lx_dokla, OBJSTATE_UNDERLAY, "lx_ws_door_open.bm", nil, TRUE)
        lx.lighthouse_door:set_object_state("lx_door.cos")
        lx.lighthouse_door:play_chore(2)
    else
        MakeSectorActive("doorpass", FALSE)
        NewObjectState(lx_extoh, OBJSTATE_UNDERLAY, "lx_door.bm")
        NewObjectState(lx_dokla, OBJSTATE_UNDERLAY, "lx_ws_door_closed.bm", nil, TRUE)
        lx.lighthouse_door:set_object_state("lx_door.cos")
        lx.lighthouse_door:play_chore(1)
    end
    start_script(foghorn_sfx)
    start_script(lx.teleport)
    lx:add_ambient_sfx(harbor_ambience_list, harbor_ambience_parm_list)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 2000, 4000, 6000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 0.1, 0, 5)
    SetActorShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow2")
    lx:camerachange(nil, lx:current_setup())
end
lx.camerachange = function(arg1, arg2, arg3) -- line 167
    StopMovie()
    if arg3 == lx_dokla then
        StartMovie("lxws.snm", TRUE)
    elseif arg3 == lx_extoh then
        StartMovie("lxtop.snm", TRUE)
    end
end
lx.exit = function() -- line 176
    StopMovie()
    stop_sound("liteHse.imu")
    stop_script(foghorn_sfx)
    stop_script(lx.teleport)
    KillActorShadows(manny.hActor)
end
lx.update_music_state = function(arg1) -- line 186
    if not in_year_four then
        if bi.seen_kiss then
            return stateLX_LOLA
        else
            return stateLX
        end
    else
        return stateLX
    end
end
lx.lengua = Object:create(lx, "/lxtx004/card", 0, 0, 0, { range = 0 })
lx.lengua.string_name = "lengua"
lx.lengua.wav = "getcard.wav"
lx.lengua.lookAt = function(arg1) -- line 209
    manny:say_line("/lxma005/")
end
lx.lengua.use = function(arg1) -- line 213
    system.default_response("with what")
end
lx.dd_door = Object:create(lx, "/lxtx006/pier", -12.2134, -14.3022, 0.20999999, { range = 0.60000002 })
lx.dd_door.use_pnt_x = -11.1334
lx.dd_door.use_pnt_y = -14.7522
lx.dd_door.use_pnt_z = 0
lx.dd_door.use_rot_x = 0
lx.dd_door.use_rot_y = -282.90701
lx.dd_door.use_rot_z = 0
lx.dd_door.out_pnt_x = -11.72
lx.dd_door.out_pnt_y = -14.615
lx.dd_door.out_pnt_z = 0
lx.dd_door.out_rot_x = 0
lx.dd_door.out_rot_y = -296.54999
lx.dd_door.out_rot_z = 0
lx.dd_box = lx.dd_door
lx.dd_door.walkOut = function(arg1) -- line 240
    dd:come_out_door(dd.lx_door)
end
lx.li_door = Object:create(lx, "/lxtx007/door", 0.221931, -1.14171, 0, { range = 0 })
lx.li_door.use_pnt_x = 0.0332647
lx.li_door.use_pnt_y = -1.52806
lx.li_door.use_pnt_z = 0
lx.li_door.use_rot_x = 0
lx.li_door.use_rot_y = -1074.97
lx.li_door.use_rot_z = 0
lx.li_door.out_pnt_x = 0.0305064
lx.li_door.out_pnt_y = -0.97834802
lx.li_door.out_pnt_z = 0
lx.li_door.out_rot_x = 0
lx.li_door.out_rot_y = -1087.45
lx.li_door.out_rot_z = 0
lx.li_door:make_untouchable()
lx.lite_bottom_box = lx.li_door
lx.li_door.walkOut = function(arg1) -- line 263
    lx.lighthouse_door:walkOut()
end
lx.lighthouse_door = Object:create(lx, "/lxtx008/door", 0.0039862199, -1.12906, 0.484, { range = 0.89999998 })
lx.lighthouse_door.use_pnt_x = 0.019986199
lx.lighthouse_door.use_pnt_y = -1.37506
lx.lighthouse_door.use_pnt_z = 0.029999999
lx.lighthouse_door.use_rot_x = 0
lx.lighthouse_door.use_rot_y = 9.3845901
lx.lighthouse_door.use_rot_z = 0
lx.lighthouse_door.out_pnt_x = 0.049580399
lx.lighthouse_door.out_pnt_y = -1.0998
lx.lighthouse_door.out_pnt_z = 0
lx.lighthouse_door.out_rot_x = 0
lx.lighthouse_door.out_rot_y = 360.09601
lx.lighthouse_door.out_rot_z = 0
lx.lighthouse_door.walkOut = function(arg1) -- line 293
    START_CUT_SCENE()
    manny:clear_hands()
    manny:walkto(arg1, TRUE)
    sleep_for(2000)
    END_CUT_SCENE()
    if in_year_four then
        lx:come_out_door(lx.top)
        if not lx.got_sign then
            start_script(lx.reunion)
        end
    elseif not lx.seen_lola then
        lx.seen_lola = TRUE
        start_script(lx.find_lola)
    else
        lx:come_out_door(lx.top)
    end
end
lx.lighthouse_door:lock()
lx.lighthouse_door.passage = { "doorpass" }
lx.lighthouse_door.lookAt = function(arg1) -- line 319
    if lx.lighthouse_door:is_open() then
        manny:say_line("/lxma009/")
    else
        system.default_response("locked")
    end
end
lx.lighthouse_door.use = function(arg1) -- line 327
    if arg1:is_open() then
        arg1:close()
    else
        arg1:open()
    end
end
lx.lighthouse_door.use_key = function(arg1, arg2) -- line 335
    arg1:unlock()
    arg1:open()
    arg1:make_untouchable()
    arg1:play_chore(0)
    put_away_held_item()
    sl.key:free()
    MakeSectorActive("doorpass", TRUE)
    NewObjectState(lx_dokla, OBJSTATE_UNDERLAY, "lx_ws_door_open.bm", nil, TRUE)
    lx.lighthouse_door:set_object_state("lx_door.cos")
    lx.lighthouse_door:play_chore(2)
end
lx.top = Object:create(lx, "/lxtx010/door", -0.85957599, 0.55007499, 3.03, { range = 0 })
lx.top.use_pnt_x = -0.189576
lx.top.use_pnt_y = 1.16008
lx.top.use_pnt_z = 3.03
lx.top.use_rot_x = 0
lx.top.use_rot_y = -592.54401
lx.top.use_rot_z = 0
lx.top.out_pnt_x = -0.72061801
lx.top.out_pnt_y = 0.56794697
lx.top.out_pnt_z = 3.03
lx.top.out_rot_x = 0
lx.top.out_rot_y = -570.74597
lx.top.out_rot_z = 0
lx.light_top_box = lx.top
lx.top.walkOut = function(arg1) -- line 365
    START_CUT_SCENE()
    manny:walkto(arg1, TRUE)
    manny:set_visibility(FALSE)
    sleep_for(2000)
    END_CUT_SCENE()
    manny:set_visibility(TRUE)
    lx:come_out_door(lx.li_door)
end
ly_bath_door_open = 0
ly_bath_door_close = 1
ly_bath_door_set_open = 2
ly_bath_door_set_closed = 3
ly_cc_sheet_here = 0
ly_cc_sheet_protest = 1
ly_cc_sheet_gone = 2
ly_elevator_open = 0
ly_elevator_close = 1
ly_elevator_set_open = 2
ly_elevator_set_closed = 3
ly_keno_keno1 = 0
ly_keno_keno2 = 1
ly_keno_keno3 = 2
ly_keno_keno4 = 3
ly_keno_keno5 = 4
ly_keno_keno6 = 5
ly_keno_keno7 = 6
ly_keno_keno8 = 7
ly_keno_keno9 = 8
ly_keno_keno10 = 9
ly_keno_keno11 = 10
ly_keno_keno12 = 11
ly_keno_keno13 = 12
ly_keno_keno14 = 13
ly_keno_keno15 = 14
ly_keno_keno16 = 15
ly_keno_keno17 = 16
ly_keno_keno18 = 17
ly_keno_keno19 = 18
ly_keno_keno20 = 19
ly_keno_keno21 = 20
ly_keno_keno22 = 21
ly_keno_keno23 = 22
ly_keno_keno24 = 23
ly_keno_keno25 = 24
ly_keno_keno26 = 25
ly_keno_keno27 = 26
ly_keno_keno28 = 27
ly_keno_keno29 = 28
ly_keno_keno30 = 29
ly_keno_keno31 = 30
ly_keno_keno32 = 31
ly_keno_all_off = 32
CheckFirstTime("ly.lua")
dofile("br_idles.lua")
dofile("cc_taplook.lua")
dofile("cc_play_slot.lua")
dofile("meche_seduction.lua")
dofile("cc_seduction.lua")
dofile("unicycle_man.lua")
dofile("ly_slot_door.lua")
dofile("msb_msb_sheet.lua")
dofile("meche_ruba.lua")
dofile("cc_toga.lua")
dofile("mi_with_cc_toga.lua")
dofile("ly_cc_sheet.lua")
ly = Set:create("ly.set", "le mans lobby", { ly_top = 0, ly_intha = 1, ly_intha1 = 1, ly_intha2 = 1, ly_intha3 = 1, ly_intha4 = 1, ly_intha5 = 1, ly_intha6 = 1, ly_intha7 = 1, ly_sltha = 2, ly_chaws = 3, ly_elems = 4, ly_kenla = 5, ly_lavha = 6 })
ly.unicycle_roll_min_vol = 5
ly.unicycle_roll_max_vol = 20
slot_wheel = { parent = Actor }
slot_wheel.pitch = { }
slot_wheel.pitch[1] = { 30, 105, 175, 280 }
slot_wheel.pitch[2] = { 140, 210, 315 }
slot_wheel.pitch[3] = { 65, 245 }
slot_wheel.pitch[4] = { 350 }
slot_wheel.create = function(arg1) -- line 42
    local local1
    local local2
    local1 = Actor:create(nil, nil, nil, "slot wheel")
    local1.parent = arg1
    local2 = rndint(1, 4)
    local1.cur_pitch = arg1.pitch[local2][1]
    local1.slot = FALSE
    return local1
end
slot_wheel.default = function(arg1) -- line 55
    arg1:set_costume("ly_slotwheel.cos")
    arg1:put_in_set(ly)
    arg1:setrot(arg1.cur_pitch, 270, 90)
end
slot_wheel.spin = function(arg1) -- line 61
    local local1
    local local2
    local local3
    local local4 = { "ly_wlsp1.WAV", "ly_wlsp2.WAV", "ly_wlsp3.WAV" }
    local2 = arg1:get_positive_rot()
    local1 = 10
    arg1.slot = nil
    while arg1.slot == nil do
        arg1:setrot(arg1.cur_pitch, local2.y, local2.z)
        arg1.cur_pitch = arg1.cur_pitch - local1
        if arg1.cur_pitch < 0 then
            arg1.cur_pitch = arg1.cur_pitch + 360
        end
        if arg1.cur_pitch > 360 then
            arg1.cur_pitch = arg1.cur_pitch - 360
        end
        if local1 < 60 then
            local1 = local1 + 1
        end
        break_here()
    end
    local3 = FALSE
    while not local3 do
        if local1 > 5 then
            local1 = local1 - 1
        end
        arg1.cur_pitch = arg1.cur_pitch + local1
        if arg1.cur_pitch < 0 then
            arg1.cur_pitch = arg1.cur_pitch + 360
        end
        if arg1.cur_pitch > 360 then
            arg1.cur_pitch = arg1.cur_pitch - 360
        end
        arg1:setrot(arg1.cur_pitch, local2.y, local2.z)
        if arg1:check_match() then
            local3 = TRUE
        else
            break_here()
        end
    end
    arg1:play_sound_at(pick_one_of(local4, TRUE))
end
slot_wheel.scramble_to_win = function(arg1) -- line 107
    local local1
    local local2, local3
    arg1.slot = 4
    local2 = arg1:get_positive_rot()
    if rnd(5) then
        local1 = 5
    else
        local1 = -5
    end
    local3 = FALSE
    arg1.cur_pitch = local2.x
    while not local3 do
        arg1.cur_pitch = arg1.cur_pitch + local1
        if arg1.cur_pitch < 0 then
            arg1.cur_pitch = arg1.cur_pitch + 360
        end
        if arg1.cur_pitch > 360 then
            arg1.cur_pitch = arg1.cur_pitch - 360
        end
        arg1:setrot(arg1.cur_pitch, local2.y, local2.z)
        if arg1:check_match() then
            local3 = TRUE
        else
            break_here()
        end
    end
end
slot_wheel.check_match = function(arg1) -- line 137
    local local1, local2
    local local3
    local3 = FALSE
    local1, local2 = next(arg1.pitch[arg1.slot], nil)
    while local1 and not local3 do
        if abs(local2 - arg1.cur_pitch) < 5 then
            local3 = TRUE
        end
        local1, local2 = next(arg1.pitch[arg1.slot], local1)
    end
    return local3
end
slot_machine = { }
slot_machine.create = function(arg1) -- line 156
    local local1
    local1 = { }
    local1.parent = arg1
    local1.actors = { }
    local1.pos = { }
    local1.rot = nil
    local1.spinning = FALSE
    return local1
end
slot_machine.create_wheels = function(arg1) -- line 169
    local local1
    if not arg1.actors then
        arg1.actors = { }
    end
    local1 = 1
    while local1 <= 3 do
        if not arg1.actors[local1] then
            arg1.actors[local1] = slot_wheel:create()
        end
        local1 = local1 + 1
    end
end
slot_machine.free = function(arg1) -- line 185
    if arg1.actors then
        if arg1.actors[1] then
            arg1.actors[1]:free()
        end
        if arg1.actors[2] then
            arg1.actors[2]:free()
        end
        if arg1.actors[3] then
            arg1.actors[3]:free()
        end
    end
    arg1.actors = nil
end
slot_machine.default = function(arg1) -- line 200
    local local1
    arg1:create_wheels()
    local1 = 1
    while local1 <= 3 do
        arg1.actors[local1]:default()
        arg1.actors[local1]:setpos(arg1.pos[local1].x, arg1.pos[local1].y, arg1.pos[local1].z)
        if arg1.rot then
            arg1.actors[local1]:setrot(arg1.rot.x, arg1.rot.y, arg1.rot.z)
        end
        local1 = local1 + 1
    end
end
slot_machine.spin = function(arg1) -- line 216
    arg1.spin_scripts = { }
    arg1.spinning = TRUE
    arg1.wheel_sound = arg1.actors[1]:play_sound_at("ly_wheel.IMU", 10, 80)
    arg1.spin_scripts[1] = start_script(arg1.actors[1].spin, arg1.actors[1])
    break_here()
    arg1.spin_scripts[2] = start_script(arg1.actors[2].spin, arg1.actors[2])
    break_here()
    arg1.spin_scripts[3] = start_script(arg1.actors[3].spin, arg1.actors[3])
end
slot_machine.scramble_to_win = function(arg1) -- line 229
    local local1, local2, local3
    local1 = start_script(arg1.actors[1].scramble_to_win, arg1.actors[1])
    local2 = start_script(arg1.actors[2].scramble_to_win, arg1.actors[2])
    local3 = start_script(arg1.actors[3].scramble_to_win, arg1.actors[3])
    wait_for_script(local1)
    wait_for_script(local2)
    wait_for_script(local3)
end
slot_machine.stop = function(arg1, arg2) -- line 239
    local local1
    local local2
    if arg1.spinning then
        local1 = FALSE
        local2 = { }
        repeat
            local2[1] = rndint(1, 4)
            local2[2] = rndint(1, 4)
            local2[3] = rndint(1, 4)
            if not arg2 then
                if local2[1] == local2[2] and local2[2] == local2[3] then
                    local1 = FALSE
                else
                    local1 = TRUE
                end
            elseif local2[1] == local2[2] and local2[2] == local2[3] then
                local1 = TRUE
            else
                local1 = FALSE
            end
            if not local1 then
                break_here()
            end
        until local1
        arg1.actors[1].slot = local2[1]
        if arg1.spin_scripts[1] then
            wait_for_script(arg1.spin_scripts[1])
        end
        sleep_for(100)
        arg1.actors[2].slot = local2[2]
        if arg1.spin_scripts[2] then
            wait_for_script(arg1.spin_scripts[2])
        end
        sleep_for(100)
        arg1.actors[3].slot = local2[3]
        if arg1.spin_scripts[3] then
            wait_for_script(arg1.spin_scripts[3])
        end
    end
    arg1.spinning = FALSE
    stop_sound("ly_wheel.IMU")
    arg1.spin_scripts = nil
end
slot_machine.freeze = function(arg1) -- line 295
    arg1.actors[1]:freeze()
    arg1.actors[2]:freeze()
    arg1.actors[3]:freeze()
end
slot_machine.thaw = function(arg1, arg2) -- line 301
    arg1.actors[1]:thaw(arg2)
    arg1.actors[2]:thaw(arg2)
    arg1.actors[3]:thaw(arg2)
end
ly.slot_handle = { }
ly.slot_handle.parent = Actor
ly.slot_handle.create = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7) -- line 312
    local local1
    local1 = Actor:create(nil, nil, nil, "handle")
    local1.parent = ly.slot_handle
    if arg2 then
        local1.pos = { }
        local1.pos.x = arg2
        local1.pos.y = arg3
        local1.pos.z = arg4
    end
    if arg5 then
        local1.rot = { }
        local1.rot.x = arg5
        local1.rot.y = arg6
        local1.rot.z = arg7
    end
    return local1
end
ly.slot_handle.default = function(arg1) -- line 333
    arg1:put_in_set(ly)
    arg1:set_costume("ly_slothandle.cos")
    arg1:play_chore(1)
    if arg1.pos then
        arg1:setpos(arg1.pos.x, arg1.pos.y, arg1.pos.z)
    end
    if arg1.rot then
        arg1:setrot(arg1.rot.x, arg1.rot.y, arg1.rot.z)
    end
end
ly.slot_handle.init = function(arg1) -- line 345
    if not arg1[1] then
        arg1[1] = ly.slot_handle:create(0.63847, 0.401519, 0.006, 0, 0, 0)
    end
    if not arg1[2] then
        arg1[2] = ly.slot_handle:create(1.05447, 0.401519, 0.006, 0, 0, 0)
    end
    if not arg1[3] then
        arg1[3] = ly.slot_handle:create(1.82115, -0.135567, 0.015, 0, 270, 0)
    end
    if not arg1[4] then
        arg1[4] = ly.slot_handle:create(1.82285, -0.541493, 0.013, 0, 270, 0)
    end
    arg1[1]:default()
    arg1[2]:default()
    arg1[3]:default()
    arg1[4]:default()
    arg1[4]:set_visibility(FALSE)
    arg1[1]:freeze()
    arg1[2]:freeze()
end
ly.slot_handle.free = function(arg1) -- line 369
    if arg1[1] then
        arg1[1]:free()
    end
    if arg1[2] then
        arg1[2]:free()
    end
    if arg1[3] then
        arg1[3]:free()
    end
end
charlies_slot = slot_machine:create()
charlies_slot.pos[1] = { x = 2.1475301, y = -0.416738, z = 0.44400001 }
charlies_slot.pos[2] = { x = 2.1475301, y = -0.492737, z = 0.44400001 }
charlies_slot.pos[3] = { x = 2.1475301, y = -0.569736, z = 0.44400001 }
mannys_slot = slot_machine:create()
mannys_slot.pos[1] = { x = 2.1358399, y = -0.0144972, z = 0.44499999 }
mannys_slot.pos[2] = { x = 2.1358399, y = -0.0924972, z = 0.44499999 }
mannys_slot.pos[3] = { x = 2.1358399, y = -0.169497, z = 0.44499999 }
ly.keno_actor = Actor:create(nil, nil, nil, "keno board")
ly.keno_actor.current_number = nil
ly.keno_actor.current_game = nil
ly.keno_actor.game_index = 1
ly.keno_actor.game_paused = FALSE
ly.keno_actor.default = function(arg1) -- line 417
    arg1:set_costume("ly_keno.cos")
    arg1:put_in_set(ly)
    arg1:setpos(-0.0558433, -0.0978411, 2.801)
    arg1:set_visibility(TRUE)
end
ly.keno_actor.game = function(arg1) -- line 424
    while TRUE do
        arg1:clear_game()
        while arg1.game_index < 10 do
            if not arg1.game_paused then
                arg1:choose_number()
            end
            sleep_for(15000)
        end
        break_here()
    end
end
ly.keno_actor.clear_game = function(arg1) -- line 437
    arg1.current_game = { }
    arg1.game_index = 0
    arg1.current_number = nil
    arg1:complete_chore(32)
end
ly.keno_actor.choose_number = function(arg1) -- line 444
    local local1, local2
    local2 = TRUE
    while local2 do
        local1 = rndint(1, 32)
        if not arg1:find_number(local1) then
            local2 = FALSE
        else
            break_here()
        end
    end
    arg1.game_index = arg1.game_index + 1
    arg1.current_game[arg1.game_index] = local1
    arg1.current_number = local1
    arg1:complete_chore(local1 - 1)
    arg1:play_sound_at("ly_keno.wav", 10, 70)
end
ly.keno_actor.find_number = function(arg1, arg2) -- line 463
    local local1, local2
    local2 = FALSE
    local1 = 1
    while local1 <= arg1.game_index and not local2 do
        if arg1.current_game[local1] == arg2 then
            local2 = TRUE
        end
        local1 = local1 + 1
    end
    return local2
end
unicycle_man.point = { }
unicycle_man.point[0] = { }
unicycle_man.point[0].pos = { x = 0.89800102, y = 0.39131901, z = 0 }
unicycle_man.point[0].rot = { x = 0, y = 0, z = 0 }
unicycle_man.point[1] = { }
unicycle_man.point[1].pos = { x = 0.49000099, y = 0.394319, z = 0 }
unicycle_man.point[1].rot = { x = 0, y = 0, z = 0 }
unicycle_man.point.mid = { }
unicycle_man.point["mid"].pos = { x = 0.74000102, y = 0.090319097, z = 0 }
unicycle_man.point["mid"].rot = { x = 0, y = 0, z = 0 }
unicycle_man.point.charlie = { }
unicycle_man.point["charlie"].pos = { x = 1.84929, y = -0.39064199, z = 0 }
unicycle_man.point["charlie"].rot = { x = 0, y = 270.01999, z = 0 }
unicycle_man.cur_point = 0
unicycle_man.save_pos = function(arg1) -- line 499
    arg1.current_pos = arg1:getpos()
    arg1.current_rot = arg1:getrot()
end
unicycle_man.restore_pos = function(arg1) -- line 504
    local local1
    if arg1.current_pos then
        arg1:setpos(arg1.current_pos.x, arg1.current_pos.y, arg1.current_pos.z)
        arg1:setrot(arg1.current_rot.x, arg1.current_rot.y, arg1.current_rot.z)
    else
        local1 = arg1.point[arg1.cur_point]
        arg1:setpos(local1.pos.x, local1.pos.y, local1.pos.z)
        arg1:setrot(local1.rot.x, local1.rot.y, local1.rot.z)
    end
end
unicycle_man.cycle_to = function(arg1, arg2, arg3) -- line 517
    local local1
    local1 = GetActorYawToPoint(arg1.hActor, arg1.point.mid.pos)
    local1 = local1 + 180
    arg1:set_turn_rate(120)
    if not sound_playing("um_roll.IMU") then
        arg1:play_sound_at("um_roll.IMU", ly.unicycle_roll_min_vol, ly.unicycle_roll_max_vol)
    end
    arg1:setrot(0, local1, 0, TRUE)
    arg1:stop_chore(unicycle_man_idles)
    arg1:play_chore_looping(unicycle_man_roll)
    arg1:set_walk_rate(-0.30000001)
    while proximity(arg1.hActor, arg1.point.mid.pos.x, arg1.point.mid.pos.y, arg1.point.mid.pos.z) > 0.1 do
        WalkActorForward(arg1.hActor)
        break_here()
    end
    local1 = GetActorYawToPoint(arg1.hActor, arg2)
    arg1:stop_chore(unicycle_man_roll)
    arg1:play_chore_looping(unicycle_man_idles)
    arg1:setrot(0, local1, 0, TRUE)
    arg1:wait_for_actor()
    arg1:stop_chore(unicycle_man_idles)
    arg1:play_chore_looping(unicycle_man_roll)
    arg1:set_walk_rate(0.30000001)
    while proximity(arg1.hActor, arg2.x, arg2.y, arg2.z) > 0.1 do
        WalkActorForward(arg1.hActor)
        break_here()
    end
    arg1:setpos(arg2.x, arg2.y, arg2.z)
    arg1:stop_chore(unicycle_man_roll)
    stop_sound("um_roll.IMU")
    arg1:play_chore_looping(unicycle_man_idles)
    arg1:setrot(arg3.x, arg3.y, arg3.z, TRUE)
end
unicycle_man.cycle_straight_to = function(arg1, arg2, arg3) -- line 564
    local local1
    local1 = GetActorYawToPoint(arg1.hActor, arg2)
    arg1:set_turn_rate(120)
    arg1:stop_chore(unicycle_man_idles)
    if not sound_playing("um_roll.IMU") then
        arg1:play_sound_at("um_roll.IMU", ly.unicycle_roll_min_vol, ly.unicycle_roll_max_vol)
    end
    arg1:play_chore_looping(unicycle_man_roll)
    arg1:set_walk_rate(0.30000001)
    arg1:setrot(0, local1, 0, TRUE)
    while proximity(arg1.hActor, arg2.x, arg2.y, arg2.z) > 0.1 do
        WalkActorForward(arg1.hActor)
        break_here()
    end
    arg1:setpos(arg2.x, arg2.y, arg2.z)
    arg1:stop_chore(unicycle_man_roll)
    stop_sound("um_roll.IMU")
    arg1:play_chore_looping(unicycle_man_idles)
    arg1:setrot(arg3.x, arg3.y, arg3.z, TRUE)
end
unicycle_man.turn_to_manny = function(arg1) -- line 591
    local local1, local2
    local2 = manny:getpos()
    if not sound_playing("um_roll.IMU") then
        arg1:play_sound_at("um_roll.IMU", ly.unicycle_roll_min_vol, ly.unicycle_roll_max_vol)
    end
    local1 = GetActorYawToPoint(arg1.hActor, local2)
    arg1:setrot(0, local1, 0, TRUE)
    arg1:wait_for_actor()
    stop_sound("um_roll.IMU")
end
ly.agent_talk_count = 0
ly.talk_to_agent = function(arg1) -- line 610
    local local1 = TRUE
    local local2 = FALSE
    local local3, local4
    START_CUT_SCENE()
    start_script(ly.unicycle_stop_idles, ly)
    manny:set_collision_mode(COLLISION_OFF)
    ly.agent_talk_count = ly.agent_talk_count + 1
    if ly.agent_talk_count == 1 then
        ly.met_agent = TRUE
        manny:say_line("/lyma066/")
        manny:wait_for_message()
        unicycle_man:say_line("/lyum067/")
        unicycle_man:wait_for_message()
        wait_for_script(ly.unicycle_stop_idles)
        unicycle_man:turn_to_manny()
        ly:track_unicycle_man()
        manny:head_look_at(ly.unicycle_man)
        unicycle_man:say_line("/lyum068/")
        unicycle_man:wait_for_message()
        local3 = unicycle_man:getpos()
        local4 = GetActorYawToPoint(manny.hActor, local3)
        manny:setrot(0, local4, 0, TRUE)
        manny:tilt_head_gesture(TRUE)
        manny:point_gesture(TRUE)
        manny:say_line("/lyma069/")
        manny:wait_for_message()
        unicycle_man:say_line("/lyum070/")
        unicycle_man:wait_for_message()
        unicycle_man:say_line("/lyum071/")
        unicycle_man:wait_for_message()
    elseif ly.agent_talk_count == 2 then
        manny:say_line("/lyma072/")
        manny:wait_for_message()
        wait_for_script(ly.unicycle_stop_idles)
        unicycle_man:turn_to_manny()
        ly:track_unicycle_man()
        manny:head_look_at(ly.unicycle_man)
        local3 = unicycle_man:getpos()
        local4 = GetActorYawToPoint(manny.hActor, local3)
        manny:setrot(0, local4, 0, TRUE)
        unicycle_man:say_line("/lyum073/")
        unicycle_man:wait_for_message()
        unicycle_man:say_line("/lyum074/")
        unicycle_man:wait_for_message()
        manny:say_line("/lyma075/")
    elseif ly.meche_talk_count < 2 then
        manny:say_line("/lyma076/")
        manny:wait_for_message()
        wait_for_script(ly.unicycle_stop_idles)
        local3 = unicycle_man:getpos()
        local4 = GetActorYawToPoint(manny.hActor, local3)
        manny:setrot(0, local4, 0, TRUE)
        ly:track_unicycle_man()
        manny:head_look_at(ly.unicycle_man)
        unicycle_man:turn_to_manny()
        unicycle_man:say_line("/lyum077/")
        unicycle_man:wait_for_message()
        unicycle_man:say_line("/lyum078/")
        unicycle_man:wait_for_message()
        local2 = TRUE
    elseif not ly.charlie_on_floor then
        manny:say_line("/lyma079/")
        manny:wait_for_message()
        wait_for_script(ly.unicycle_stop_idles)
        ly:track_unicycle_man()
        manny:head_look_at(ly.unicycle_man)
        unicycle_man:turn_to_manny()
        unicycle_man:say_line("/lyum080/")
        unicycle_man:wait_for_message()
        unicycle_man:say_line("/lyum081/")
        unicycle_man:wait_for_message()
    else
        local1 = FALSE
        start_script(ly.charlies_jackpot)
    end
    END_CUT_SCENE()
    manny:set_collision_mode(COLLISION_OFF)
    if local1 then
        start_script(ly.unicycle_idles, ly, local2)
    end
end
ly.unicycle_idles = function(arg1, arg2) -- line 708
    local local1, local2
    unicycle_man.in_machine = FALSE
    unicycle_man.rolling = FALSE
    while TRUE do
        break_here()
        ly:track_unicycle_man()
        if not arg2 then
            local1 = unicycle_man.cur_point + 1
            if not unicycle_man.point[local1] then
                local1 = 0
            end
            unicycle_man.cur_point = local1
            unicycle_man.rolling = TRUE
            start_script(unicycle_man.cycle_to, unicycle_man, unicycle_man.point[local1].pos, unicycle_man.point[local1].rot)
            while find_script(unicycle_man.cycle_to) do
                break_here()
                ly:track_unicycle_man()
            end
            unicycle_man.rolling = FALSE
            sleep_for(10000)
        else
            local1 = unicycle_man.cur_point
            unicycle_man:setrot(unicycle_man.point[local1].rot.x, unicycle_man.point[local1].rot.y, unicycle_man.point[local1].rot.z, TRUE)
            unicycle_man:wait_for_actor()
        end
        unicycle_man:set_chore_looping(unicycle_man_idles, FALSE)
        unicycle_man:wait_for_chore(unicycle_man_idles)
        unicycle_man.in_machine = TRUE
        unicycle_man:run_chore(unicycle_man_crawl_slot)
        start_script(ly.unicycle_slot_sfx)
        sleep_for(rndint(6000, 9000))
        unicycle_man:play_sound_at("ly_pyoff.IMU", 80, 110)
        unicycle_man:run_chore(unicycle_man_out_slot)
        fade_sfx("ly_pyoff.IMU", 200)
        unicycle_man:play_chore_looping(unicycle_man_idles)
        unicycle_man.in_machine = FALSE
        sleep_for(10000)
    end
end
ly.unicycle_stop_idles = function(arg1) -- line 762
    stop_sound("ly_pyoff.IMU")
    stop_script(ly.unicycle_idles)
    if unicycle_man.rolling then
        while find_script(unicycle_man.cycle_to) do
            break_here()
            ly:track_unicycle_man()
        end
        unicycle_man.rolling = FALSE
    elseif unicycle_man.in_machine then
        if unicycle_man:is_choring(unicycle_man_crawl_slot) then
            unicycle_man:wait_for_chore(unicycle_man_crawl_slot)
            unicycle_man:run_chore(unicycle_man_out_slot)
        elseif unicycle_man:is_choring(unicycle_man_out_slot) then
            unicycle_man:wait_for_chore(unicycle_man_out_slot)
        else
            unicycle_man:run_chore(unicycle_man_out_slot)
        end
    end
    unicycle_man:play_chore_looping(unicycle_man_idles)
end
ly.track_unicycle_man = function(arg1) -- line 788
    local local1
    local1 = unicycle_man:getpos()
    ly.unicycle_man.obj_x = local1.x
    ly.unicycle_man.obj_y = local1.y
    ly.unicycle_man.obj_z = local1.z + 0.40000001
    ly.unicycle_man.interest_actor:put_in_set(ly)
    ly.unicycle_man.interest_actor:setpos(ly.unicycle_man.obj_x, ly.unicycle_man.obj_y, ly.unicycle_man.obj_z)
    if hot_object == ly.unicycle_man then
        system.currentActor:head_look_at(ly.unicycle_man)
    end
end
ly.unicycle_slot_sfx = function(arg1) -- line 802
    local local1 = { "um_swit1.wav", "um_swit2.wav", "um_swit3.wav" }
    sleep_for(rndint(1000, 2000))
    unicycle_man:play_sound_at(pick_one_of(local1, TRUE), 100, 127)
    sleep_for(rndint(1000, 2000))
    unicycle_man:play_sound_at(pick_one_of(local1, TRUE), 100, 127)
    sleep_for(rndint(1000, 2000))
    unicycle_man:play_sound_at(pick_one_of(local1, TRUE), 100, 127)
end
ly.brennis_idle_table = Idle:create("br_idles")
idt = ly.brennis_idle_table
idt:add_state("rest", { rest = 0.97000003, looks = 0.0099999998, moves_head = 0.0099999998, scrtch_chst = 0.0099999998 })
idt:add_state("looks", { rest = 1 })
idt:add_state("moves_head", { rest = 1 })
idt:add_state("scrtch_chst", { rest = 1 })
ly.brennis_talk_count = 0
ly.brennis_stop_idle = function(arg1) -- line 830
    stop_script(brennis.ly_idle_script)
    brennis.ly_idle_script = nil
    brennis:wait_for_chore()
    brennis:play_chore(br_idles_rest)
end
ly.brennis_start_idle = function(arg1) -- line 837
    brennis:stop_chore()
    brennis.ly_idle_script = start_script(brennis.new_run_idle, brennis, "rest", ly.brennis_idle_table, "br_idles.cos")
end
ly.talk_clothes_with_brennis = function(arg1) -- line 842
    START_CUT_SCENE()
    ly.brennis_talk_count = ly.brennis_talk_count + 1
    start_script(ly.brennis_stop_idle, ly)
    if ly.brennis_talk_count == 1 then
        ly:current_setup(ly_kenla)
        sleep_for(1500)
        manny:tilt_head_gesture()
        manny:say_line("/lyma012/")
        manny:wait_for_message()
        ly:current_setup(ly_elems)
        brennis:play_chore(br_idles_bar_door, "br_idles.cos")
        brennis:say_line("/lybs013/")
        brennis:wait_for_message()
        brennis:say_line("/lybs014/")
    elseif ly.brennis_talk_count == 2 then
        ly:current_setup(ly_kenla)
        manny:shrug_gesture()
        manny:say_line("/lyma015/")
        manny:wait_for_message()
        ly:current_setup(ly_elems)
        brennis:play_chore(br_idles_scrtch_chst, "br_idles.cos")
        brennis:say_line("/lybs016/")
        brennis:wait_for_message()
        ly:current_setup(ly_kenla)
        manny:say_line("/lyma017/")
        manny:wait_for_message()
        ly:current_setup(ly_elems)
        brennis:say_line("/lybs018/")
    elseif ly.brennis_talk_count == 3 then
        ly:current_setup(ly_kenla)
        manny:hand_gesture()
        manny:say_line("/lyma019/")
        manny:wait_for_message()
        ly:current_setup(ly_elems)
        brennis:say_line("/lybs020/")
        brennis:wait_for_message()
        brennis:say_line("/lybs021/")
        brennis:wait_for_message()
        brennis:say_line("/lybs022/")
        brennis:wait_for_message()
    elseif ly.brennis_talk_count == 4 then
        ly:current_setup(ly_kenla)
        manny:hand_gesture()
        manny:say_line("/lyma023/")
        manny:wait_for_message()
        manny:tilt_head_gesture()
        manny:say_line("/lyma024/")
        manny:wait_for_message()
        ly:current_setup(ly_elems)
        brennis:play_chore(br_idles_bar_door, "br_idles.cos")
        brennis:say_line("/lybs025/")
        brennis:wait_for_message()
        brennis:say_line("/lybs026/")
        brennis:wait_for_chore(br_idles_bar_door, "br_idles.cos")
    elseif ly.brennis_talk_count == 5 then
        ly:current_setup(ly_kenla)
        manny:point_gesture()
        manny:say_line("/lyma027/")
        manny:wait_for_message()
        ly:current_setup(ly_elems)
        brennis:say_line("/lybs028/")
        brennis:wait_for_message()
        brennis:say_line("/lybs029/")
        brennis:wait_for_message()
        brennis:say_line("/lybs030/")
        brennis:wait_for_message()
        ly:current_setup(ly_kenla)
        manny:say_line("/lyma031/")
        manny:wait_for_message()
        ly:current_setup(ly_elems)
        brennis:say_line("/lybs032/")
    else
        ly:current_setup(ly_kenla)
        manny:twist_head_gesture()
        manny:say_line("/lyma033/")
        manny:wait_for_message()
        ly:current_setup(ly_elems)
        brennis:say_line("/lybs034/")
    end
    END_CUT_SCENE()
    brennis:wait_for_chore()
    ly:brennis_start_idle()
end
ly.meche_talk_count = 0
ly.gun_control = function() -- line 947
    while TRUE do
        break_here()
        if manny.is_holding == fi.gun and system.currentSet == ly then
            START_CUT_SCENE()
            wait_for_script(open_inventory)
            wait_for_script(close_inventory)
            manny:clear_hands()
            manny:say_line("/lyma003/")
            manny:wait_for_message()
            manny:say_line("/lyma004/")
            END_CUT_SCENE()
        end
    end
end
ly.playslots = function(arg1, arg2) -- line 963
    START_CUT_SCENE()
    manny:walkto(1.8283, -0.263458, 0, 0, 292.582, 0)
    manny:wait_for_actor()
    manny:head_look_at(nil)
    ly.slot_handle[3]:thaw(TRUE)
    mannys_slot:thaw(TRUE)
    ly.slot_handle[3]:play_chore(0)
    sleep_for(50)
    manny:play_chore(msb_reach_cabinet, manny.base_costume)
    sleep_for(500)
    mannys_slot:spin()
    sleep_for(500)
    manny:head_look_at(ly.slot1)
    if not ly.played then
        ly.played = TRUE
        manny:say_line("/lyma006/")
        wait_for_message()
        manny:say_line("/lyma007/")
        wait_for_message()
    end
    manny:wait_for_chore(msb_reach_cabinet, manny.base_costume)
    manny:stop_chore(msb_reach_cabinet, manny.base_costume)
    manny:head_look_at(ly.slot1)
    ly.slot_handle[3]:wait_for_chore(0)
    ly.slot_handle[3]:freeze()
    if rnd() then
        mannys_slot:stop(FALSE)
        if not ly.lost then
            ly.lost = TRUE
            manny:say_line("/lyma008/")
        end
    else
        mannys_slot:stop(TRUE)
        manny:say_line("/lyma009/")
        if not ly.won then
            ly.won = TRUE
            manny:wait_for_message()
            manny:head_look_at_point(1.89026, -0.0954438, 0)
            manny:say_line("/lyma010/")
            manny:wait_for_message()
            manny:say_line("/lyma011/")
        end
    end
    END_CUT_SCENE()
    manny:head_look_at(nil)
    mannys_slot:freeze()
end
ly.talk_clothes_with_meche = function(arg1) -- line 1019
    START_CUT_SCENE()
    if ly.charlie_on_floor then
        meche:say_line("/lymc005/")
    else
        ly.meche_talk_count = ly.meche_talk_count + 1
        if ly.meche_talk_count == 1 then
            single_start_script(ly.seduce_charlie, ly)
            manny:say_line("/lyma035/")
            manny:wait_for_message()
            meche:say_line("/lymc036/")
        elseif ly.meche_talk_count == 2 then
            manny:walkto_object(ly.meche_obj)
            manny:wait_for_actor()
            if find_script(ly.seduce_charlie) and ly.meche_obj.touchable then
                stop_script(ly.seduce_charlie)
            end
            manny:say_line("/lyma037/")
            manny:wait_for_message()
            while not ly.meche_obj.touchable do
                break_here()
            end
            meche:say_line("/lymc038/")
            meche:wait_for_message()
            meche:say_line("/lymc039/")
            meche:wait_for_message()
            meche:say_line("/lymc040/")
            ly:manny_take_sheet_from_meche()
        elseif ly.meche_talk_count == 3 then
            manny:say_line("/lyma041/")
            manny:wait_for_message()
            meche:say_line("/lymc042/")
            meche:wait_for_message()
            meche:say_line("/lymc043/")
            if manny.is_holding ~= ly.sheet then
                ly:manny_take_sheet_from_meche()
            end
            meche:wait_for_message()
            manny:say_line("/lyma044/")
        else
            manny:say_line("/lyma045/")
            manny:wait_for_message()
            meche:say_line("/lymc046/")
            if manny.is_holding ~= ly.sheet then
                ly:manny_take_sheet_from_meche()
            end
        end
    end
    END_CUT_SCENE()
end
ly.manny_take_sheet_from_meche = function(arg1) -- line 1071
    manny:walkto_object(ly.meche_obj)
    manny:wait_for_actor()
    if meche:is_choring(meche_seduction_mec_sed_ch, FALSE, "meche_seduction.cos") then
        meche:wait_for_chore(meche_seduction_mec_sed_ch, "meche_seduction.cos")
    end
    stop_script(ly.seduce_charlie)
    stop_script(ly.meche_idles)
    meche:stop_chore(meche_seduction_mec_sed_ch, "meche_seduction.cos")
    meche:play_chore(0, "mi_msb_sheet.cos")
    manny:push_costume("msb_msb_sheet.cos")
    manny:setrot(0, 231.446, 0)
    manny:play_chore(msb_msb_sheet_pass_sheet, "msb_msb_sheet.cos")
    ly.sheet:get()
    manny.is_holding = ly.sheet
    meche:wait_for_chore(0, "mi_msb_sheet.cos")
    meche:stop_chore(0, "mi_msb_sheet.cos")
    meche:play_chore(meche_ruba_hands_down_hold, "meche_ruba.cos")
    manny:wait_for_chore(msb_msb_sheet_pass_sheet, "msb_msb_sheet.cos")
    manny:stop_chore(msb_msb_sheet_pass_sheet, "msb_msb_sheet.cos")
    manny:run_chore(msb_msb_sheet_to_hold_pos, "msb_msb_sheet.cos")
    manny:stop_chore(msb_msb_sheet_to_hold_pos, "msb_msb_sheet.cos")
    manny:run_chore(msb_msb_sheet_hold_sheet, "msb_msb_sheet.cos")
    meche.holding_sheet = FALSE
    inventory_disabled = TRUE
    ly.ready_to_seduce = FALSE
    single_start_script(ly.meche_idles)
end
ly.talk_toga_with_charlie = function(arg1) -- line 1101
    START_CUT_SCENE()
    stop_script(ly.charlie_idles)
    manny:walkto_object(ly.charlie_obj)
    if ly.meche_talk_count < 3 then
        manny:say_line("/lyma047/")
        charlie:wait_for_chore(cc_play_slot_play_slots, "cc_play_slot.cos")
        if find_script(ly.seduce_charlie) then
            while ly.ready_to_seduce do
                break_here()
            end
        end
        manny:wait_for_message()
        charlie:stop_chore(cc_play_slot_play_slots, "cc_play_slot.cos")
        charlie:push_costume("cc_taplook.cos")
        charlie:run_chore(cc_taplook_turn2mn, "cc_taplook.cos")
        charlie:say_line("/lycc048/")
        charlie:run_chore(cc_taplook_turn2slots, "cc_taplook.cos")
    else
        manny:say_line("/lyma049/")
        charlie:wait_for_chore(cc_play_slot_play_slots, "cc_play_slot.cos")
        if find_script(ly.seduce_charlie) then
            while ly.ready_to_seduce do
                break_here()
            end
        end
        manny:wait_for_message()
        charlie:stop_chore(cc_play_slot_play_slots, "cc_play_slot.cos")
        charlie:push_costume("cc_taplook.cos")
        charlie:run_chore(cc_taplook_turn2mn, "cc_taplook.cos")
        charlie:say_line("/lycc050/")
        charlie:wait_for_message()
        charlie:play_chore(cc_taplook_turn2slots, "cc_taplook.cos")
        charlie:say_line("/lycc051/")
        charlie:wait_for_chore(cc_taplook_turn2slots, "cc_taplook.cos")
    end
    if not find_script(charlies_slot.stop) then
        charlies_slot:stop()
    else
        wait_for_script(charlies_slot.stop)
    end
    charlie:stop_chore(cc_taplook_turn2slots, "cc_taplook.cos")
    charlie:pop_costume()
    start_script(ly.charlie_idles, ly)
    END_CUT_SCENE()
end
ly.throw_sheet = function(arg1) -- line 1149
    START_CUT_SCENE()
    stop_script(ly.charlie_idles)
    charlie:stop_chore(cc_play_slot_play_slots, "cc_play_slot.cos")
    stop_script(charlies_slot.stop)
    stop_sound("ly_wheel.IMU")
    stop_script(slot_wheel.spin)
    if not ly.sheet_on_floor.has_object_states then
        ly:add_object_state(ly_sltha, "ly_cc_sheet.bm", "ly_cc_sheet.zbm", OBJSTATE_STATE, TRUE)
        ly.sheet_on_floor:set_object_state("ly_cc_sheet.cos")
        ly.sheet_on_floor.interest_actor:put_in_set(ly)
    end
    ly.sheet:free()
    ly.charlie_on_floor = TRUE
    ly.charlie_obj:make_untouchable()
    box_off("charlie_box")
    box_off("mannys_slot")
    manny.is_holding = nil
    manny:stop_chore(msb_msb_sheet_hold_sheet, "msb_msb_sheet.cos")
    inventory_disabled = FALSE
    manny:pop_costume()
    manny:setpos(1.50568, -0.210109, 0)
    manny:setrot(0, 176.891, 0)
    charlie:stop_chore(cc_play_slot_play_slots, "cc_play_slot.cos")
    charlie:set_visibility(FALSE)
    ly.sheet_on_floor:play_chore(ly_cc_sheet_here)
    stop_sound("um_roll.IMU")
    StartFullscreenMovie("ly_sheet_toss.snm")
    sleep_for(500)
    start_sfx("cc_shtts.WAV")
    ly.slot_handle[4]:set_visibility(TRUE)
    sleep_for(1000)
    if not ly.sheeted then
        ly.sheeted = TRUE
        charlie:say_line("/lycc052/")
    else
        charlie:say_line("/lycc053/")
    end
    sleep_for(4600)
    start_sfx("ccsheet1.wav")
    sleep_for(1250)
    start_sfx("cc_falls.wav")
    charlie:wait_for_message()
    charlie:say_line("/lycc054/")
    charlie:wait_for_message()
    ly.sheet_on_floor:play_chore(ly_cc_sheet_protest)
    wait_for_movie()
    if not unicycle_man.in_machine then
        if not unicycle_man.rolling then
        elseif not sound_playing("um_roll.IMU") then
            unicycle_man:play_sound_at("um_roll.IMU", ly.unicycle_roll_min_vol, ly.unicycle_roll_max_vol)
        end
    end
    start_script(ly.charlie_struggle)
    start_script(ly.charlie_get_up_timer)
    END_CUT_SCENE()
end
ly.charlie_struggle = function(arg1) -- line 1226
    local local1
    local local2 = { "/lycc055/", "/lycc056/", "/lycc057/", "/lycc058/", "/lycc059/", "/lycc060/", "/lycc061/", "/lycc062/", "/lycc063/" }
    while TRUE do
        sleep_for(2000)
        ly.sheet_on_floor:play_chore(ly_cc_sheet_protest)
        local1 = pick_one_of({ "ccsheet1.wav", "ccsheet2.wav", "ccsheet3.wav", "ccsheet4.wav", "ccsheet5.wav", "ccsheet6.wav" })
        start_sfx(local1, IM_HIGH_PRIORITY, 100)
        charlie:say_line(pick_one_of(local2, TRUE), { background = TRUE, skip_log = TRUE, volume = 80 })
        charlie:wait_for_message()
    end
end
ly.charlie_get_up_timer = function(arg1) -- line 1248
    sleep_for(25000)
    stop_script(ly.charlie_struggle)
    while cutSceneLevel > 0 do
        break_here()
    end
    START_CUT_SCENE()
    ly.charlie_on_floor = FALSE
    ly.charlie_obj:make_touchable()
    box_on("charlie_box")
    box_on("mannys_slot")
    stop_sound("um_roll.IMU")
    StartFullscreenMovie("ly_getup.snm")
    charlie:set_visibility(TRUE)
    ly.slot_handle[4]:set_visibility(FALSE)
    stop_script(ly.meche_idles)
    charlie:push_costume("cc_seduction.cos")
    charlie:play_chore(cc_seduction_sed_by_mec, "cc_seduction.cos")
    meche:stop_chore(nil, "meche_ruba.cos")
    meche:play_chore(meche_seduction_rest_pos, "meche_seduction.cos")
    meche.holding_sheet = TRUE
    sleep_for(2000)
    start_sfx("ccsheet1.wav")
    sleep_for(2500)
    start_sfx("cc_shtof.WAV")
    charlie:say_line("/lycc064/", { volume = 90 })
    wait_for_movie()
    ly.sheet_on_floor.interest_actor:put_in_set(ly)
    ly.sheet_on_floor.interest_actor:stop_chore()
    ly.sheet_on_floor:complete_chore(ly_cc_sheet_gone)
    ForceRefresh()
    if not unicycle_man.in_machine then
        if not unicycle_man.rolling then
        elseif not sound_playing("um_roll.IMU") then
            unicycle_man:play_sound_at("um_roll.IMU", ly.unicycle_roll_min_vol, ly.unicycle_roll_max_vol)
        end
    end
    charlie:wait_for_message()
    charlie:say_line("/lycc065/")
    charlie:wait_for_message()
    charlie:wait_for_chore(cc_seduction_sed_by_mec, "cc_seduction.cos")
    charlie:pop_costume()
    END_CUT_SCENE()
    start_script(ly.charlie_idles, ly)
    start_script(ly.meche_idles, ly)
end
ly.charlies_jackpot = function(arg1) -- line 1310
    local local1
    local local2
    local local3, local4
    stop_script(ly.charlie_get_up_timer)
    stop_script(ly.charlie_idles)
    stop_script(ly.meche_idles)
    START_CUT_SCENE()
    start_script(ly.unicycle_stop_idles, ly)
    if not find_script(charlies_slot.stop) then
        start_script(charlies_slot.stop, charlies_slot, FALSE)
    end
    ly:add_object_state(ly_chaws, "ly_slot_door.bm", "ly_slot_door.zbm", OBJSTATE_STATE)
    ly.charlie_obj:set_object_state("ly_slot_door.cos")
    ly.charlie_obj.interest_actor:set_visibility(TRUE)
    ly.charlie_obj.interest_actor:put_in_set(ly)
    manny:walkto(0.60399699, -0.122419, 0, 0, 324.94, 0)
    manny:say_line("/lyma082/")
    manny:wait_for_message()
    wait_for_script(ly.unicycle_stop_idles)
    unicycle_man:turn_to_manny()
    local1 = GetActorYawToPoint(manny.hActor, unicycle_man.point["charlie"].pos)
    manny:setrot(0, local1, 0, TRUE)
    manny:point_gesture()
    manny:say_line("/lyma083/")
    manny:wait_for_message()
    start_script(unicycle_man.cycle_straight_to, unicycle_man, unicycle_man.point["charlie"].pos, unicycle_man.point["charlie"].rot)
    unicycle_man:say_line("/lyum084/")
    unicycle_man:wait_for_message()
    wait_for_script(unicycle_man.cycle_straight_to)
    unicycle_man:wait_for_actor()
    unicycle_man:setpos(1.90781, -0.36290601, 0)
    unicycle_man:setrot(0, 270, 0)
    ly:current_setup(ly_chaws)
    meche:set_visibility(FALSE)
    unicycle_man:set_chore_looping(unicycle_man_idles, FALSE)
    unicycle_man:wait_for_chore(unicycle_man_idles)
    unicycle_man:play_chore(unicycle_man_crawl_slot)
    stop_sound("um_roll.IMU")
    sleep_for(3500)
    ly.charlie_obj:run_chore(ly_slot_door_open)
    sleep_for(3300)
    unicycle_man:play_chore(unicycle_man_hide_body)
    unicycle_man:wait_for_chore(unicycle_man_crawl_slot)
    start_script(ly.unicycle_slot_sfx)
    ly.charlie_obj:run_chore(ly_slot_door_close)
    sleep_for(1000)
    charlies_slot:scramble_to_win()
    local3 = Actor:create(nil, nil, nil, "Money")
    local3:set_costume("coin_pile.cos")
    local3:put_in_set(ly)
    local3:setpos(1.99385, -0.48749301, 0.16)
    local3:setrot(0, 0, 0)
    local4 = 0.1
    start_sfx("ly_pyoff.IMU")
    while local4 <= 1 do
        SetActorScale(local3.hActor, local4)
        break_here()
        local4 = local4 + 0.050000001
    end
    fade_sfx("ly_pyoff.IMU", 1000)
    sleep_for(2500)
    ly.charlie_obj:run_chore(ly_slot_door_open)
    unicycle_man:play_chore(unicycle_man_out_slot_no_grab)
    sleep_for(500)
    unicycle_man:play_chore(unicycle_man_show_body)
    sleep_for(4000)
    ly.charlie_obj:play_chore(ly_slot_door_close)
    unicycle_man:wait_for_chore(unicycle_man_out_slot_no_grab)
    ly:current_setup(ly_sltha)
    meche:set_visibility(TRUE)
    start_script(unicycle_man.cycle_straight_to, unicycle_man, unicycle_man.point[0].pos, unicycle_man.point[0].rot)
    sleep_for(3000)
    stop_script(ly.charlie_struggle)
    ly.sheet_on_floor.interest_actor:put_in_set(ly)
    ly.sheet_on_floor.interest_actor:stop_chore()
    stop_script(unicycle_man.cycle_straight_to)
    stop_sound("um_roll.IMU")
    StartFullscreenMovie("ly_win.snm")
    sleep_for(3000)
    start_sfx("cc_shtof.WAV")
    wait_for_movie()
    ly:current_setup(ly_sltha)
    unicycle_man:setpos(unicycle_man.point[0].pos.x, unicycle_man.point[0].pos.y, unicycle_man.point[0].pos.z)
    unicycle_man:setrot(unicycle_man.point[0].rot.x, unicycle_man.point[0].rot.y, unicycle_man.point[0].rot.z)
    unicycle_man:stop_chore(unicycle_man_roll)
    unicycle_man:play_chore_looping(unicycle_man_idles)
    charlie:stop_chore(nil, "cc_play_slot.cos")
    charlie:play_chore(cc_play_slot_hide_handle, "cc_play_slot.cos")
    charlie:push_costume("cc_seduction.cos")
    charlie:setpos(1.49489, -0.50857699, -0.119)
    charlie:setrot(0, 260, 0)
    charlie:set_visibility(TRUE)
    meche:setpos(1.44189, -0.845577, 0)
    meche:setrot(0, 330, 0)
    meche:stop_chore(nil, "meche_ruba.cos")
    meche:stop_chore(nil, "meche_seduction.cos")
    meche:stop_chore(nil, "mi_msb_sheet.cos")
    meche:play_chore(meche_seduction_rest_pos, "meche_seduction.cos")
    meche:set_visibility(TRUE)
    charlie:play_chore(cc_seduction_take_money, "cc_seduction.cos")
    ly.sheet_on_floor.interest_actor:stop_chore()
    ly.sheet_on_floor:complete_chore(ly_cc_sheet_gone)
    ForceRefresh()
    charlie:say_line("/lycc085/")
    sleep_for(3200)
    while local4 >= 0.1 and charlie:is_speaking() do
        local4 = local4 - 0.1
        SetActorScale(local3.hActor, local4)
        break_here()
    end
    charlie:wait_for_message()
    meche:say_line("/lymc086/")
    while local4 >= 0.1 and charlie:is_speaking() do
        local4 = local4 - 0.1
        SetActorScale(local3.hActor, local4)
        break_here()
    end
    local3:free()
    local3 = nil
    charlie:wait_for_chore(cc_seduction_take_money, "cc_seduction.cos")
    box_on("charlie_box")
    box_on("mannys_slot")
    box_on("meche_box")
    music_state:set_sequence(seqChowchillaBye)
    IrisDown(450, 320, 1000)
    sleep_for(1500)
    ly:current_setup(ly_lavha)
    unicycle_man:free()
    stop_sound("um_roll.IMU")
    manny:setpos(2.22596, 3.59653, 0.89999998)
    manny:setrot(0, 102.462, 0)
    manny:set_collision_mode(COLLISION_OFF)
    meche:set_costume(nil)
    meche:set_costume("meche_ruba.cos")
    meche:set_mumble_chore(meche_ruba_mumble)
    meche:set_talk_chore(1, meche_ruba_stop_talk)
    meche:set_talk_chore(2, meche_ruba_a)
    meche:set_talk_chore(3, meche_ruba_c)
    meche:set_talk_chore(4, meche_ruba_e)
    meche:set_talk_chore(5, meche_ruba_f)
    meche:set_talk_chore(6, meche_ruba_l)
    meche:set_talk_chore(7, meche_ruba_m)
    meche:set_talk_chore(8, meche_ruba_o)
    meche:set_talk_chore(9, meche_ruba_t)
    meche:set_talk_chore(10, meche_ruba_u)
    meche:push_costume("mi_with_cc_toga.cos")
    meche:set_collision_mode(COLLISION_OFF)
    meche:setpos(2.03021, 3.5079, 0.90061998)
    meche:setrot(0, 306.86899, 0)
    meche:play_chore(meche_ruba_xarm_hold, "meche_ruba.cos")
    charlie:set_costume(nil)
    charlie:set_costume("cc_toga.cos")
    charlie:set_mumble_chore(cc_toga_mumble)
    charlie:set_talk_chore(1, cc_toga_stop_talk)
    charlie:set_talk_chore(2, cc_toga_a)
    charlie:set_talk_chore(3, cc_toga_c)
    charlie:set_talk_chore(4, cc_toga_e)
    charlie:set_talk_chore(5, cc_toga_f)
    charlie:set_talk_chore(6, cc_toga_l)
    charlie:set_talk_chore(7, cc_toga_m)
    charlie:set_talk_chore(8, cc_toga_o)
    charlie:set_talk_chore(9, cc_toga_t)
    charlie:set_talk_chore(10, cc_toga_u)
    charlie:set_collision_mode(COLLISION_OFF)
    charlie:set_walk_chore(cc_toga_walk)
    charlie:set_walk_rate(0.25)
    charlie:set_head(7, 8, 9, 120, 80, 80)
    charlie:set_look_rate(100)
    ly.mens_room:open()
    charlie:setpos(1.89022, 4.5444798, 0.89999998)
    charlie:setrot(0, 180.181, 0)
    charlie:follow_boxes()
    charlie.footsteps = footsteps.marble
    if not ly.mens_room.has_object_states then
        ly:add_object_state(ly_lavha, "ly_bath.bm", "ly_bath.zbm", OBJSTATE_STATE)
        ly.mens_room:set_object_state("ly_bath_door.cos")
    end
    IrisUp(125, 325, 1000)
    sleep_for(500)
    manny:head_look_at(nil)
    meche:head_look_at(nil)
    manny:head_forward_gesture()
    manny:say_line("/lyma087/")
    manny:wait_for_message()
    manny:twist_head_gesture()
    manny:say_line("/lyma088/")
    manny:wait_for_message()
    meche:play_chore(meche_ruba_drop_hands, "meche_ruba.cos")
    meche:say_line("/lymc089/")
    meche:wait_for_message()
    meche:wait_for_chore(meche_ruba_drop_hands, "meche_ruba.cos")
    ly.mens_room:play_chore(0)
    start_sfx("ly_batho.WAV")
    manny:head_look_at_point(1.94195, 3.9626, 1.302)
    charlie:walkto(1.95579, 3.78863, 0.89999998)
    sleep_for(500)
    start_script(manny.backup, manny, 1000)
    while charlie:is_moving() do
        if not charlie:find_sector_name("bath_psg") then
            charlie.footsteps = footsteps.rug
        end
        break_here()
    end
    charlie.footsteps = footsteps.rug
    ly.mens_room:play_chore(1)
    start_sfx("ly_bathc.WAV")
    ly.mens_room:close()
    charlie:say_line("/lycc090/", { x = 160, y = 30 })
    meche:stop_chore(meche_ruba_xarm_hold, "meche_ruba.cos")
    meche:stop_chore(meche_ruba_drop_hands, "meche_ruba.cos")
    mi_with_cc_done_turning = FALSE
    meche:play_chore(mi_with_cc_toga_to_cc_toga, "mi_with_cc_toga.cos")
    sleep_for(1000)
    charlie:head_look_at(meche)
    sleep_for(2400)
    charlie:head_look_at(nil)
    charlie:setrot(0, 100, 0, TRUE)
    charlie:fade_in_chore(cc_toga_take_meche, "cc_toga.cos", 500)
    charlie:wait_for_chore(cc_toga_take_meche, "cc_toga.cos")
    charlie:play_chore(cc_toga_hold_meche, "cc_toga.cos")
    while mi_with_cc_done_turning < 1 do
        break_here()
    end
    while meche:is_choring(mi_with_cc_toga_to_cc_toga, FALSE, "mi_with_cc_toga.cos") do
        WalkActorForward(charlie.hActor)
        break_here()
    end
    meche:wait_for_chore(mi_with_cc_toga_to_cc_toga, "mi_with_cc_toga.cos")
    manny:head_look_at(nil)
    END_CUT_SCENE()
    ly.charlie_on_floor = FALSE
    ly.sheet_on_floor:make_untouchable()
    ly.charlie_obj:make_untouchable()
    ly.meche_obj:make_untouchable()
    ly.unicycle_man:make_untouchable()
    ly.charlie_gone = TRUE
    music_state:update()
    cur_puzzle_state[56] = TRUE
    charlie:free()
    meche:free()
end
ly.charlie_idles = function(arg1) -- line 1596
    while system.currentSet == ly do
        ly.ready_to_seduce = FALSE
        charlie:play_chore(cc_play_slot_play_slots, "cc_play_slot.cos")
        sleep_for(1000)
        charlies_slot:spin()
        charlie:wait_for_chore(cc_play_slot_play_slots, "cc_play_slot.cos")
        charlies_slot:stop(FALSE)
        if find_script(ly.seduce_charlie) then
            ly.ready_to_seduce = TRUE
            while ly.ready_to_seduce do
                break_here()
            end
        end
        break_here()
    end
end
ly.meche_idles = function(arg1) -- line 1614
    local local1 = FALSE
    while system.currentSet == ly do
        if meche.holding_sheet then
            if rnd(8) and not find_script(ly.seduce_charlie) then
                if cutSceneLevel <= 0 then
                    start_script(ly.seduce_charlie, ly)
                    wait_for_script(ly.seduce_charlie)
                end
            end
        elseif rnd(5) then
            if local1 then
                meche:run_chore(meche_ruba_drop_hands, "meche_ruba.cos")
                local1 = FALSE
                sleep_for(rndint(1000, 5000))
            else
                meche:run_chore(meche_ruba_xarms, "meche_ruba.cos")
                local1 = TRUE
                sleep_for(rndint(5000, 10000))
            end
        end
        break_here()
    end
end
ly.seduce_charlie = function(arg1) -- line 1642
    while not ly.ready_to_seduce do
        break_here()
    end
    ly.meche_obj:make_untouchable()
    charlie:set_collision_mode(COLLISION_SPHERE, 0.8)
    meche:play_chore(meche_seduction_mec_sed_ch, "meche_seduction.cos")
    sleep_for(1000)
    charlie:push_costume("cc_seduction.cos")
    charlie:fade_in_chore(cc_seduction_sed_by_mec, "cc_seduction.cos", 500)
    sleep_for(6000)
    ly.meche_obj:make_touchable()
    charlie:set_collision_mode(COLLISION_OFF)
    charlie:wait_for_chore(cc_seduction_sed_by_mec, "cc_seduction.cos")
    charlie:pop_costume()
    ly.ready_to_seduce = FALSE
    meche:wait_for_chore(meche_seduction_mec_sed_ch, "meche_seduction.cos")
    meche:stop_chore(meche_seduction_mec_sed_ch, "meche_seduction.cos")
    meche:play_chore(meche_seduction_rest_pos, "meche_seduction.cos")
end
ly.set_up_actors = function(arg1) -- line 1665
    ly.keno_actor:default()
    ly.slot_handle:init()
    charlies_slot:default()
    mannys_slot:default()
    mannys_slot:freeze()
    brennis:put_in_set(ly)
    brennis:default()
    brennis:push_costume("br_idles.cos")
    brennis:setpos(-0.0427321, 4.02445, 0.9)
    brennis:setrot(0, -2343.65, 0)
    ly:brennis_start_idle()
    if not ly.charlie_gone then
        charlie:set_costume(nil)
        charlie:set_costume("ccharlie.cos")
        charlie:set_mumble_chore(ccharlie_mumble)
        charlie:set_talk_chore(1, ccharlie_no_talk)
        charlie:set_talk_chore(2, ccharlie_a)
        charlie:set_talk_chore(3, ccharlie_c)
        charlie:set_talk_chore(4, ccharlie_e)
        charlie:set_talk_chore(5, ccharlie_f)
        charlie:set_talk_chore(6, ccharlie_l)
        charlie:set_talk_chore(7, ccharlie_m)
        charlie:set_talk_chore(8, ccharlie_o)
        charlie:set_talk_chore(9, ccharlie_t)
        charlie:set_talk_chore(10, ccharlie_u)
        charlie:push_costume("cc_play_slot.cos")
        charlie:put_in_set(ly)
        charlie:ignore_boxes()
        charlie:setpos(1.83869, -0.508564, 0.014)
        charlie:setrot(0, 260, 0)
        start_script(ly.charlie_idles, ly)
        meche:set_costume(nil)
        meche:set_costume("meche_ruba.cos")
        meche:set_mumble_chore(meche_ruba_mumble)
        meche:set_talk_chore(1, meche_ruba_stop_talk)
        meche:set_talk_chore(2, meche_ruba_a)
        meche:set_talk_chore(3, meche_ruba_c)
        meche:set_talk_chore(4, meche_ruba_e)
        meche:set_talk_chore(5, meche_ruba_f)
        meche:set_talk_chore(6, meche_ruba_l)
        meche:set_talk_chore(7, meche_ruba_m)
        meche:set_talk_chore(8, meche_ruba_o)
        meche:set_talk_chore(9, meche_ruba_t)
        meche:set_talk_chore(10, meche_ruba_u)
        meche:put_in_set(ly)
        meche:ignore_boxes()
        meche:setpos(1.4388, -0.679984, 0)
        meche:setrot(0, 313.314, 0)
        meche:push_costume("meche_seduction.cos")
        meche:push_costume("mi_msb_sheet.cos")
        meche:play_chore(meche_seduction_rest_pos, "meche_seduction.cos")
        meche.holding_sheet = TRUE
        start_script(ly.meche_idles, ly)
        unicycle_man:default()
        unicycle_man:put_in_set(ly)
        unicycle_man:restore_pos()
        start_script(ly.unicycle_idles, ly)
    else
        charlie:free()
        meche:free()
        unicycle_man:free()
    end
end
ly.set_up_object_states = function(arg1) -- line 1737
    ly:add_object_state(ly_kenla, "ly_keno_1.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_2.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_3.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_4.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_5.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_6.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_7.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_8.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_9.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_10.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_11.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_12.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_13.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_14.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_15.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_16.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_17.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_18.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_19.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_20.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_21.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_22.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_23.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_24.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_25.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_26.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_27.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_28.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_29.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_30.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_31.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_kenla, "ly_keno_32.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_4.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_5.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_6.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_7.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_8.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_9.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_10.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_11.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_12.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_13.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_14.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_15.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_16.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_17.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_18.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_19.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_20.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_21.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_22.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_23.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_24.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_25.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_26.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_27.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_28.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_29.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_30.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_31.bm", nil, OBJSTATE_UNDERLAY)
    ly:add_object_state(ly_intha, "ly_keno_t_32.bm", nil, OBJSTATE_UNDERLAY)
end
ly.cameraman = function(arg1) -- line 1804
    local local1, local2
    local local3
    cameraman_watching_set = arg1
    if cameraman_disabled == FALSE and arg1:current_setup() ~= arg1.setups.overhead and cutSceneLevel <= 0 then
        local1, cameraman_box_name, local2 = system.currentActor:find_sector_type(CAMERA)
        if cameraman_box_name then
            local3 = getglobal(cameraman_box_name)
            if local3 ~= nil and ly:current_setup() ~= local3 then
                ly:current_setup(local3)
            end
        elseif ly:current_setup() ~= "ly_intha" then
            ly:current_setup(ly_intha)
        end
    end
end
ly.manny_collisions = function(arg1) -- line 1826
    while system.currentSet == ly do
        if manny:find_sector_name("slot_box") or manny:find_sector_name("mannys_slot") or manny:find_sector_name("charlie_box") or manny:find_sector_name("meche_box") then
            manny:set_collision_mode(COLLISION_SPHERE, 0.35)
        else
            manny:set_collision_mode(COLLISION_OFF)
        end
        break_here()
    end
end
ly.update_music_state = function(arg1) -- line 1843
    if ly.charlie_gone then
        return stateLY_BREN
    else
        return stateLY
    end
end
ly.enter = function(arg1) -- line 1852
    ly:set_up_object_states()
    ly:set_up_actors()
    start_script(ly.gun_control)
    start_script(ly.keno_actor.game, ly.keno_actor)
    start_script(ly.manny_collisions, ly)
    ly:add_ambient_sfx({ "lyAmb1.wav", "lyAmb2.wav", "lyAmb3.wav", "lyAmb4.wav" }, { min_volume = 40, max_volume = 127, min_delay = 6000, max_delay = 10000 })
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, -4, 4)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
end
ly.exit = function(arg1) -- line 1872
    stop_script(ly.manny_collisions)
    manny:set_collision_mode(COLLISION_OFF)
    stop_script(slot_wheel.spin)
    stop_script(ly.unicycle_idles)
    stop_script(ly.unicycle_slot_sfx)
    stop_script(ly.keno_actor.game)
    ly.keno_actor:free()
    charlies_slot:free()
    mannys_slot:free()
    stop_script(ly.charlie_idles)
    charlie:free()
    meche:free()
    if brennis.ly_idle_script then
        stop_script(brennis.ly_idle_script)
        brennis.ly_idle_script = nil
    end
    brennis:free()
    unicycle_man:save_pos()
    unicycle_man:free()
    stop_script(ly.gun_control)
    stop_script(ly.charlie_struggle)
    stop_script(ly.charlie_get_up_timer)
    ly.sheet_on_floor.interest_actor:set_costume(nil)
    ly.sheet_on_floor.has_object_states = FALSE
    ly.mens_room.interest_actor:set_costume(nil)
    ly.mens_room.has_object_states = FALSE
    ly.service_door.interest_actor:set_costume(nil)
    ly.service_door.has_object_states = FALSE
    stop_sound("um_roll.IMU")
    stop_sound("ly_pyoff.IMU")
    stop_sound("ly_wheel.IMU")
    KillActorShadows(manny.hActor)
end
ly.sheet = Object:create(ly, "/lytx091/sheet", 0, 0, 0, { range = 0 })
ly.sheet.use = function(arg1) -- line 1928
    manny:say_line("/lyma092/")
end
ly.sheet.lookAt = function(arg1) -- line 1932
    manny:say_line("/lyma093/")
end
ly.sheet.default_response = ly.sheet.use
ly.brennis_obj = Object:create(ly, "/lytx094/elevator demon", -0.048044398, 3.9284, 1.51, { range = 0.80000001 })
ly.brennis_obj.use_pnt_x = -0.12957799
ly.brennis_obj.use_pnt_y = 3.47597
ly.brennis_obj.use_pnt_z = 0.89999998
ly.brennis_obj.use_rot_x = 0
ly.brennis_obj.use_rot_y = 349.754
ly.brennis_obj.use_rot_z = 0
ly.brennis_obj.person = TRUE
ly.brennis_obj.demon = TRUE
ly.brennis_obj.lookAt = function(arg1) -- line 1951
    manny:say_line("/lyma095/")
end
ly.brennis_obj.pickUp = function(arg1) -- line 1955
    system.default_response("right")
end
ly.brennis_obj.use = function(arg1) -- line 1959
    if not manny.fancy then
        if manny:walkto_object(arg1) then
            start_script(ly.talk_clothes_with_brennis)
        end
    elseif fi.gun.owner ~= manny then
        manny:turn_left(180)
        manny:say_line("/lyma096/")
    else
        Dialog:run("br2", "dlg_brennis2.lua")
    end
end
ly.brennis_obj.use_sheet = function(arg1) -- line 1974
    START_CUT_SCENE()
    manny:say_line("/lyma097/")
    wait_for_message()
    brennis:say_line("/lybs098/")
    END_CUT_SCENE()
end
ly.statue = Object:create(ly, "/lytx099/statue", 3.34677, -2.6134701, 2.5899999, { range = 1.6 })
ly.statue.use_pnt_x = 3.34677
ly.statue.use_pnt_y = -1.78347
ly.statue.use_pnt_z = 0.44999999
ly.statue.use_rot_x = 0
ly.statue.use_rot_y = 922.95398
ly.statue.use_rot_z = 0
ly.statue.lookAt = function(arg1) -- line 1992
    manny:say_line("/lyma100/")
end
ly.statue.pickUp = function(arg1) -- line 1996
    system.default_response("right")
end
ly.statue.use = function(arg1) -- line 2000
    manny:say_line("/lyma101/")
end
ly.statue.use_sheet = function(arg1) -- line 2004
    manny:say_line("/lyma102/")
end
ly.charlie_obj = Object:create(ly, "/lytx103/Chowchilla Charlie", 1.82118, -0.51648003, 0.37200001, { range = 0.60000002 })
ly.charlie_obj.use_pnt_x = 1.61446
ly.charlie_obj.use_pnt_y = -0.26686499
ly.charlie_obj.use_pnt_z = 0
ly.charlie_obj.use_rot_x = 0
ly.charlie_obj.use_rot_y = 220.021
ly.charlie_obj.use_rot_z = 0
ly.charlie_obj.person = TRUE
ly.charlie_obj.lookAt = function(arg1) -- line 2019
    if not arg1.seen then
        START_CUT_SCENE()
        arg1.seen = TRUE
        manny:say_line("/lyma104/")
        manny:wait_for_message()
        manny:say_line("/lyma105/")
        END_CUT_SCENE()
    else
        manny:say_line("/lyma106/")
    end
end
ly.charlie_obj.pickUp = function(arg1) -- line 2032
    manny:say_line("/lyma107/")
end
ly.charlie_obj.use = function(arg1) -- line 2036
    start_script(ly.talk_toga_with_charlie)
end
ly.charlie_obj.use_sheet = function(arg1) -- line 2040
    start_script(ly.throw_sheet)
end
ly.meche_obj = Object:create(ly, "/lytx108/Meche", 1.52403, -0.63770503, 0.47499999, { range = 0.80000001 })
ly.meche_obj.use_pnt_x = 1.65277
ly.meche_obj.use_pnt_y = -0.32719201
ly.meche_obj.use_pnt_z = 0
ly.meche_obj.use_rot_x = 0
ly.meche_obj.use_rot_y = 153.737
ly.meche_obj.use_rot_z = 0
ly.meche_obj.person = TRUE
ly.meche_obj.lookAt = function(arg1) -- line 2055
    manny:say_line("/lyma109/")
end
ly.meche_obj.pickUp = function(arg1) -- line 2059
    system.default_response("not now")
end
ly.meche_obj.use = function(arg1) -- line 2063
    start_script(ly.talk_clothes_with_meche)
end
ly.meche_obj.use_sheet = function(arg1) -- line 2067
    if ly.meche_talk_count < 4 then
        arg1:use()
    else
        manny:say_line("/lyma110/")
        manny:wait_for_message()
        meche:say_line("/lymc111/")
    end
end
ly.slot1 = Object:create(ly, "/lytx112/slot machine", 1.98998, -0.113677, 0.47, { range = 0.60000002 })
ly.slot1.use_pnt_x = 1.63983
ly.slot1.use_pnt_y = -0.272295
ly.slot1.use_pnt_z = 0
ly.slot1.use_rot_x = 0
ly.slot1.use_rot_y = 280.24301
ly.slot1.use_rot_z = 0
ly.slot1.lookAt = function(arg1) -- line 2087
    manny:say_line("/lyma113/")
end
ly.slot1.pickUp = function(arg1) -- line 2091
    system.default_response("portable")
end
ly.slot1.use = function(arg1) -- line 2095
    if manny:find_sector_name("mannys_slot") then
        start_script(ly.playslots, ly, arg1)
    elseif manny:walkto_object(arg1) then
        start_script(ly.playslots, ly, arg1)
    end
end
ly.slot1.use_sheet = function(arg1) -- line 2103
    manny:say_line("/lyma114/")
end
ly.sheet_on_floor = Object:create(ly, "/lytx115/sheet", 1.7376, -0.488377, 0, { range = 0.60000002 })
ly.sheet_on_floor.use_pnt_x = 1.5376
ly.sheet_on_floor.use_pnt_y = -0.62837702
ly.sheet_on_floor.use_pnt_z = 0
ly.sheet_on_floor.use_rot_x = 0
ly.sheet_on_floor.use_rot_y = -33.944099
ly.sheet_on_floor.use_rot_z = 0
ly.sheet_on_floor:make_untouchable()
ly.sheet_on_floor.lookAt = function(arg1) -- line 2118
    manny:say_line("/lyma116/")
end
ly.sheet_on_floor.pickUp = function(arg1) -- line 2122
    arg1:make_untouchable()
    ly.sheet:hold()
end
ly.sheet_on_floor.use = ly.sheet_on_floor.pickUp
ly.unicycle_man = Object:create(ly, "/lytx117/gambler", 1.05716, 0.50252402, 0.40000001, { range = 0.80000001 })
ly.unicycle_man.use_pnt_x = 1.2671601
ly.unicycle_man.use_pnt_y = 0.25252399
ly.unicycle_man.use_pnt_z = 0
ly.unicycle_man.use_rot_x = 0
ly.unicycle_man.use_rot_y = 1495.33
ly.unicycle_man.use_rot_z = 0
ly.unicycle_man.person = TRUE
ly.unicycle_man.lookAt = function(arg1) -- line 2140
    if not ly.met_agent then
        manny:say_line("/lyma118/")
    else
        manny:say_line("/lyma119/")
    end
end
ly.unicycle_man.pickUp = function(arg1) -- line 2148
    system.default_response("think")
end
ly.unicycle_man.use = function(arg1) -- line 2152
    start_script(ly.talk_to_agent)
end
ly.mens_room = Object:create(ly, "/lytx120/door", 2.03262, 4.2983999, 1.39, { range = 0.5 })
ly.mens_room.use_pnt_x = 1.9454401
ly.mens_room.use_pnt_y = 3.98
ly.mens_room.use_pnt_z = 0.89999998
ly.mens_room.use_rot_x = 0
ly.mens_room.use_rot_y = 14.326
ly.mens_room.use_rot_z = 0
ly.mens_room.out_pnt_x = 1.76959
ly.mens_room.out_pnt_y = 4.6870298
ly.mens_room.out_pnt_z = 0.89999998
ly.mens_room.out_rot_x = 0
ly.mens_room.out_rot_y = 4.1866498
ly.mens_room.out_rot_z = 0
ly.mens_room.passage = { "bath_psg" }
ly.mens_room.lookAt = function(arg1) -- line 2175
    manny:say_line("/lyma121/")
end
ly.mens_room.walkOut = function(arg1) -- line 2179
    START_CUT_SCENE()
    if manny.is_holding == ly.sheet then
        system.default_response("no")
        manny:walkto(1.96305, 3.77355, 0.9, 0, 184.876, 0)
        manny:wait_for_message()
        ly.sheet:use()
    elseif not manny.fancy then
        if not ly.mens_room.has_object_states then
            ly:add_object_state(ly_lavha, "ly_bath.bm", "ly_bath.zbm", OBJSTATE_STATE)
            ly.mens_room:set_object_state("ly_bath_door.cos")
        end
        if not ly.charlie_gone then
            if not ly.peed then
                ly.peed = TRUE
                arg1:open_door_and_enter()
                manny:say_line("/lyma122/")
                manny:wait_for_message()
                manny:say_line("/lyma123/")
            else
                manny:say_line("/lyma124/")
            end
        else
            manny.fancy = TRUE
            arg1:open_door_and_enter()
            manny:shrug_gesture()
            manny:say_line("/lyma125/")
        end
    else
        manny:say_line("/lyma126/")
    end
    END_CUT_SCENE()
end
ly.mens_room.open_door_and_enter = function(arg1) -- line 2216
    manny:walkto(arg1.use_pnt_x, arg1.use_pnt_y, arg1.use_pnt_z, arg1.use_rot_x, arg1.use_rot_y, arg1.use_rot_z)
    manny:play_chore(msb_hand_on_obj, manny.base_costume)
    sleep_for(200)
    arg1:play_chore(0)
    start_sfx("ly_batho.WAV")
    arg1:open()
    manny:wait_for_chore(msb_hand_on_obj, manny.base_costume)
    manny:stop_chore(msb_hand_on_obj, manny.base_costume)
    manny:play_chore(msb_hand_off_obj, manny.base_costume)
    manny:walkto(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
    manny:wait_for_actor()
    arg1:play_chore(1)
    start_sfx("ly_bathc.WAV")
    manny:wait_for_chore(msb_hand_off_obj, manny.base_costume)
    manny:stop_chore(msb_hand_off_obj, manny.base_costume)
    if manny.fancy then
        sleep_for(3000)
        manny:default("thunder")
    else
        sleep_for(4000)
        start_sfx("ly_urinl.WAV")
    end
    arg1:play_chore(0)
    start_sfx("ly_batho.WAV")
    arg1:wait_for_chore(0)
    manny:setrot(arg1.out_rot_x, arg1.out_rot_y + 180, arg1.out_rot_z)
    manny:walkto(1.96305, 3.77355, 0.9, 0, 184.876, 0)
    manny:wait_for_actor()
    arg1:play_chore(1)
    start_sfx("ly_bathc.WAV")
    arg1:close()
end
ly.service_door = Object:create(ly, "/lytx120/door", 2.5296299, 4.0496202, 1.339, { range = 0.5 })
ly.service_door.use_pnt_x = 2.5390899
ly.service_door.use_pnt_y = 3.6882501
ly.service_door.use_pnt_z = 0.89999998
ly.service_door.use_rot_x = 0
ly.service_door.use_rot_y = 358.625
ly.service_door.use_rot_z = 0
ly.service_door.out_pnt_x = 2.53511
ly.service_door.out_pnt_y = 4.48
ly.service_door.out_pnt_z = 0.89999998
ly.service_door.out_rot_x = 0
ly.service_door.out_rot_y = 359.58701
ly.service_door.out_rot_z = 0
ly.service_door.touchable = FALSE
ly.service_door.passage = { "service_psg" }
ly.service_door.walkOut = function(arg1) -- line 2271
    START_CUT_SCENE()
    if manny.is_holding == ly.sheet then
        system.default_response("no")
        manny:walkto(arg1.use_pnt_x, arg1.use_pnt_y, arg1.use_pnt_z, arg1.use_rot_x, arg1.use_rot_y + 180, arg1.use_rot_z)
        manny:wait_for_message()
        ly.sheet:use()
    else
        if not ly.service_door.has_object_states then
            ly:add_object_state(ly_lavha, "ly_service.bm", "ly_service.zbm", OBJSTATE_STATE)
            ly.service_door:set_object_state("ly_service_door.cos")
        end
        manny:walkto(2.56884, 3.85944, 0.9, 0, 16.9137, 0)
        manny:wait_for_actor()
        manny:play_chore(msb_reach_med, manny.base_costume)
        sleep_for(250)
        start_script(manny.backup, manny, 350)
        sleep_for(250)
        arg1:play_chore(0)
        arg1:wait_for_chore(0)
        arg1:open()
        manny:walkto(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
        sleep_for(1000)
        arg1:play_chore(1)
        arg1:close()
    end
    END_CUT_SCENE()
    if manny.is_holding ~= ly.sheet then
        te:come_out_door(te.ly_door)
    end
end
ly.service_door.comeOut = function(arg1) -- line 2304
    START_CUT_SCENE()
    ly:switch_to_set()
    ly:current_setup(ly_lavha)
    if not ly.service_door.has_object_states then
        ly:add_object_state(ly_lavha, "ly_service.bm", "ly_service.zbm", OBJSTATE_STATE)
        ly.service_door:set_object_state("ly_service_door.cos")
    end
    arg1:open()
    manny:put_in_set(ly)
    manny:setpos(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
    manny:setrot(arg1.out_rot_x, arg1.out_rot_y + 180, arg1.out_rot_z)
    if not manny.fancy then
        manny:play_chore(msb_hand_off_obj, manny.base_costume)
    else
        manny:play_chore(mcc_thunder_hand_off_obj, "mcc_thunder.cos")
    end
    arg1:play_chore(0)
    arg1:wait_for_chore(0)
    if not manny.fancy then
        manny:wait_for_chore(msb_hand_off_obj, manny.base_costume)
        manny:stop_chore(msb_hand_off_obj, manny.base_costume)
    else
        manny:wait_for_chore(mcc_thunder_hand_off_obj, manny.base_costume)
        manny:stop_chore(mcc_thunder_hand_off_obj, manny.base_costume)
    end
    manny:walkto(arg1.use_pnt_x, arg1.use_pnt_y, arg1.use_pnt_z)
    manny:wait_for_actor()
    arg1:run_chore(1)
    arg1:close()
    END_CUT_SCENE()
end
ly.sh_door = Object:create(ly, "/lytx002/door", -0.098697402, -3.63239, 0.83999997, { range = 0.60000002 })
ly.sh_door.use_pnt_x = -0.098411702
ly.sh_door.use_pnt_y = -3.13359
ly.sh_door.use_pnt_z = 0.44999999
ly.sh_door.use_rot_x = 0
ly.sh_door.use_rot_y = 179.772
ly.sh_door.use_rot_z = 0
ly.sh_door.out_pnt_x = -0.097895198
ly.sh_door.out_pnt_y = -3.425
ly.sh_door.out_pnt_z = 0.44999999
ly.sh_door.out_rot_x = 0
ly.sh_door.out_rot_y = 179.772
ly.sh_door.out_rot_z = 0
ly.sh_door.touchable = FALSE
ly.sh_box = ly.sh_door
ly.sh_door.walkOut = function(arg1) -- line 2364
    START_CUT_SCENE()
    ResetMarioControls()
    manny:say_line("/doma165/")
    manny:walkto(-0.100971, -3.23397, 0.45, 0, 6.21033, 0)
    END_CUT_SCENE()
end
ly_service_door_open = 0
ly_service_door_close = 1
ly_service_door_set_open = 2
ly_service_door_set_closed = 3
ly_slot_door_open = 0
ly_slot_door_close = 1
ly_slot_door_set_open = 2
ly_slot_door_set_closed = 3
ly_slothandle_pull_handle = 0
ly_slothandle_show = 1
ly_slotwheel_show = 0
CheckFirstTime("lz.lua")
lz = Set:create("lz.set", "lola zapata", { lz_top = 0, lz_intha = 1, lz_dorcu = 2 })
lz.call_count = 0
lz.call_down_pipe = function(arg1) -- line 14
    lz.call_count = lz.call_count + 1
    system_prefs:set_voice_effect("Basic Reverb")
    break_here()
    if lz.call_count == 1 then
        manny:say_line("/lzma001/")
        wait_for_message()
        sleep_for(1000)
        system_prefs:set_voice_effect("OFF")
        manny:say_line("/lzma002/")
    elseif lz.call_count == 2 then
        manny:say_line("/lzma003/")
    elseif lz.call_count == 3 then
        manny:say_line("/lzma004/")
    elseif lz.call_count == 4 then
        manny:say_line("/lzma005/")
    elseif lz.call_count == 5 then
        manny:say_line("/lzma006/")
    elseif lz.call_count == 6 then
        manny:say_line("/lzma007/")
    elseif lz.call_count == 7 then
        manny:say_line("/lzma008/")
    else
        manny:say_line("/lzma009/")
    end
    manny:wait_for_message()
    system_prefs:set_voice_effect("OFF")
end
lz.enter = function(arg1) -- line 69
    lz:current_setup(lz_intha)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -1000, -800, 1000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, -1000, -800, 1000)
    SetActorShadowPlane(manny.hActor, "shadow_slant")
    AddShadowPlane(manny.hActor, "shadow_slant")
    AddShadowPlane(manny.hActor, "shadow_slant1")
end
lz.camerachange = function(arg1, arg2, arg3) -- line 90
    if arg3 == lz_intha then
        StartMovie("lz.snm", TRUE, 0, 170)
    else
        StopMovie()
    end
end
lz.exit = function(arg1) -- line 98
    StopMovie()
    KillActorShadows(manny.hActor)
end
lz.port_pipe = Object:create(lz, "vent", 5.13587, 3.31918, 2.76, { range = 0.89999998 })
lz.port_pipe.use_pnt_x = 5.0358701
lz.port_pipe.use_pnt_y = 2.9891801
lz.port_pipe.use_pnt_z = 2.23
lz.port_pipe.use_rot_x = 0
lz.port_pipe.use_rot_y = 2502.5801
lz.port_pipe.use_rot_z = 0
lz.port_pipe.lookAt = function(arg1) -- line 118
    manny:say_line("/lzma010/")
end
lz.port_pipe.pickUp = function(arg1) -- line 122
    system.default_response("attached")
end
lz.port_pipe.use = function(arg1) -- line 126
    if manny:walkto(arg1) then
        lz:call_down_pipe()
    end
end
lz.starboard_pipe1 = Object:create(lz, "vent", 1.77544, 3.3091099, 2.77, { range = 0.89999998 })
lz.starboard_pipe1.use_pnt_x = 1.77544
lz.starboard_pipe1.use_pnt_y = 2.8891101
lz.starboard_pipe1.use_pnt_z = 2.23
lz.starboard_pipe1.use_rot_x = 0
lz.starboard_pipe1.use_rot_y = 2886.77
lz.starboard_pipe1.use_rot_z = 0
lz.starboard_pipe1.parent = lz.port_pipe
lz.starboard_pipe2 = Object:create(lz, "vent", 1.8003401, 5.5474801, 2.8399999, { range = 0.89999998 })
lz.starboard_pipe2.use_pnt_x = 1.66034
lz.starboard_pipe2.use_pnt_y = 5.2174802
lz.starboard_pipe2.use_pnt_z = 2.23
lz.starboard_pipe2.use_rot_x = 0
lz.starboard_pipe2.use_rot_y = 2890.72
lz.starboard_pipe2.use_rot_z = 0
lz.starboard_pipe2.parent = lz.port_pipe
lz.cleat1 = Object:create(lz, "cleat", 1.64306, 0.26737201, 2.6500001, { range = 1 })
lz.cleat1.use_pnt_x = 2.08306
lz.cleat1.use_pnt_y = -0.36262801
lz.cleat1.use_pnt_z = 2.23
lz.cleat1.use_rot_x = 0
lz.cleat1.use_rot_y = 2641.4199
lz.cleat1.use_rot_z = 0
lz.cleat1.lookAt = function(arg1) -- line 163
    soft_script()
    manny:say_line("/lzma011/")
    wait_for_message()
    manny:say_line("/lzma012/")
    wait_for_message()
    manny:say_line("/lzma013/")
end
lz.cleat1.use = function(arg1) -- line 172
    manny:say_line("/lzma014/")
end
lz.cleat1.pickUp = lz.cleat1.use
lz.cleat2 = Object:create(lz, "cleat", 1.96306, -1.1926301, 2.51, { range = 1 })
lz.cleat2.use_pnt_x = 2.08306
lz.cleat2.use_pnt_y = -0.36262801
lz.cleat2.use_pnt_z = 2.23
lz.cleat2.use_rot_x = 0
lz.cleat2.use_rot_y = 2641.4199
lz.cleat2.use_rot_z = 0
lz.cleat2.parent = lz.cleat1
lz.il_door = Object:create(lz, "door", 2.7634599, 6.99156, 3.6600001, { range = 0 })
lz.il_door.use_pnt_x = 2.7634599
lz.il_door.use_pnt_y = 6.99156
lz.il_door.use_pnt_z = 3.6600001
lz.il_door.use_rot_x = 0
lz.il_door.use_rot_y = -84.268204
lz.il_door.use_rot_z = 0
lz.il_door.out_pnt_x = 2.7634599
lz.il_door.out_pnt_y = 6.99156
lz.il_door.out_pnt_z = 3.6600001
lz.il_door.out_rot_x = 0
lz.il_door.out_rot_y = -84.268204
lz.il_door.out_rot_z = 0
lz.il_box = lz.il_door
lz.il_door.walkOut = function(arg1) -- line 209
    il:come_out_door(il.lz_door)
end
ma_act_in_wc_climb_in = 0
ma_act_in_wc_climb_out = 1
ma_act_in_wc_hit_lever = 2
ma_act_in_wc_cask_out = 3
ma_action_sign_lift_sign = 0
ma_action_sign_plant_sign = 1
ma_action_sign_try_to_lift = 2
ma_action_sign_start_lift = 3
ma_action_sign_end_lift = 4
ma_action_sign_loop_lift = 5
ma_card_punch_hit_puncher = 0
ma_card_punch_card_punch = 1
ma_card_punch_hold = 2
ma_card_punch_card_rest = 3
ma_card_punch_act_card = 4
ma_card_punch_hide_card = 5
ma_card_punch_act_hole_card = 6
ma_charmer_start_charm = 0
ma_charmer_hand_to_chin = 1
ma_charmer_gesture = 2
ma_charmer_yap_cycle = 3
ma_charmer_hand_to_chin2 = 4
ma_charmer_head_nod_loop = 5
ma_charmer_back_to_idle = 6
ma_charmer_searched = 7
ma_charmer_srch_ca_shrg = 8
ma_check_coat_recieve = 0
ma_check_coat_coat_search = 1
ma_check_coat_coat_putaway = 2
ma_check_coat_2nd_search = 3
ma_check_coat_unfold_coat = 4
ma_check_coat_give_coat = 5
ma_climb_bw_hold_on_bw = 0
ma_climb_bw_get_off_bw = 1
ma_climb_bw_get_on_bw = 2
ma_climb_conveyor_climb = 0
ma_climb_conveyor_jump = 1
ma_crumble_bread_takeout_bread = 0
ma_crumble_bread_crumble_bread = 1
ma_crumble_bread_hold_bread = 2
ma_drink_drink = 0
ma_enter_office_open_window = 0
ma_enter_office_step_in_do = 1
ma_enter_office_start_try_window = 2
ma_enter_office_end_try_window = 3
ma_enter_sc_enter_sc = 0
ma_exit_office_exit_office = 0
ma_extinguisher_takeout_extinguisher = 0
ma_extinguisher_use_extinguisher = 1
ma_fill_bondo_fill_mp_done = 0
ma_fill_bondo_hold_mp = 1
ma_fill_bondo_put_filled_mp_mouth = 2
ma_fill_bondo_wear_mp = 3
ma_fill_bondo_wear_turn = 4
ma_fill_bondo_takeoff_mp = 5
ma_fill_bondo_fill_mp = 6
ma_grab_deck_ma_grab_deck = 0
ma_grab_mop_grab_mop = 0
ma_IDPHOTO_terry_free = 0
ma_IDPHOTO_nick_fold = 1
ma_IDPHOTO_almost = 2
ma_IDPHOTO_manny_punch = 3
ma_IDPHOTO_punch2 = 4
ma_IDPHOTO_manny_talk2 = 5
ma_IDPHOTO_manny_talk1 = 6
ma_IDPHOTO_nick_leave = 7
ma_IDPHOTO_p39_end = 8
ma_jump_stump_jump_stump = 0
ma_knock_on_door_knock = 0
ma_ladder_generic_climb1 = 0
ma_ladder_generic_climb2 = 1
ma_ladder_generic_climb_down1 = 2
ma_ladder_generic_climb_down2 = 3
ma_ladder_generic_jump_off = 4
ma_startwalk = 0
ma_stopwalk = 1
ma_walk = 2
ma_talk = 3
ma_stop_talk = 4
ma_run = 5
ma_start_run = 6
ma_stop_run = 7
ma_rest = 8
ma_turn_right = 9
ma_walk_upstairs = 10
ma_walk_downstairs = 11
ma_putback_small = 12
ma_putback_done = 13
ma_takeout_get = 14
ma_takeout_big = 15
ma_back_off = 16
ma_step_fwd = 17
ma_hand_on_obj = 18
ma_hand_off_obj = 19
ma_use_obj = 20
ma_takeout_empty = 21
ma_swivel_lf = 22
ma_swivel_rt = 23
ma_a = 24
ma_c = 25
ma_e = 26
ma_l = 27
ma_f = 28
ma_m = 29
ma_o = 30
ma_u = 31
ma_no_talk = 32
ma_mumble = 33
ma_reach_high = 34
ma_reach_med = 35
ma_takeout_small = 36
ma_hold = 37
ma_hold_scythe = 38
ma_putback_big = 39
ma_reach_low = 40
ma_activate_heart_beat = 41
ma_hold_sign = 42
ma_activate_bone = 43
ma_activate_extinguisher = 44
ma_hide_heart = 45
ma_give_logbook = 46
ma_logbook_exit = 47
ma_deactivate_logbook = 48
ma_activate_key = 49
ma_activate_memo = 50
ma_activate_photo = 51
ma_read_note = 52
ma_activate_logbook = 53
ma_t = 54
ma_takeout_gethold = 55
manny_box_first_hit = 0
manny_box_second_hit = 1
manny_box_third_hit = 2
manny_box_stop_all = 3
manny_charmer_charm = 0
manny_cut_cask_open_cask = 0
manny_cut_cask_cask_out = 1
manny_cut_cask_into_cask = 2
manny_foam_fill_left_fill = 0
manny_foam_fill_right_fill = 1
manny_gestures_head_tilt = 0
manny_gestures_head_nod = 1
manny_gestures_head_twist = 2
manny_gestures_shrug = 3
manny_gestures_hand_gesture = 4
manny_gestures_pointing = 5
manny_gestures_head_forward = 6
manny_idles_scratch = 0
manny_idles_smoke1 = 1
manny_idles_smoke_hold = 2
manny_idles_smoke_loop = 3
manny_idles_smoke_flick = 4
manny_idles_smoke_no_flick = 5
manny_idles_smoke_stomp = 6
manny_jail_to_type = 0
manny_jail_type_loop = 1
manny_jail_type_to_home = 2
manny_jail_get_note = 3
manny_lunge_gesture = 0
manny_lunge_wait = 1
manny_lunge_lunge = 2
manny_lunge_sit = 3
manny_lunge_lunge2 = 4
manny_open_cig_case_open_case = 0
manny_open_cig_case_close_case = 1
manny_open_cig_case_hands_up = 2
manny_open_cig_case_hands_down = 3
manny_scales_pull_ledge = 0
manny_scales_jump_to_co = 1
manny_scales_climb_down = 2
manny_scales_climbing = 3
manny_scales_rope_pull_ledge = 0
manny_scales_rope_show = 1
manny_scales_rope_hide = 2
manny_smoke_SmokeEm = 0
manny_wave_wave = 0
manny_wave_wave_eggs = 1
ma_note_type_to_type = 0
ma_note_type_type_loop = 1
ma_note_type_type_to_home = 2
ma_note_type_get_note = 3
ma_open_door_open_door = 0
ma_open_door_close_door = 1
ma_open_drwr_open_drwr = 0
ma_open_drwr_close_drwr = 1
ma_operate_bolt_lock_bolt = 0
ma_operate_bolt_unlock_bolt = 1
ma_photopass_to_counter = 0
ma_photopass_counter_hold = 1
ma_photopass_take_envelope = 2
ma_photopass_look_photo = 3
ma_photopass_look_photo_hold = 4
ma_photopass_return_photo = 5
ma_photopass_give_stub = 6
ma_photopass_photo_switch = 7
ma_photopass_from_cntr = 8
ma_photopass_return_env = 9
ma_pull_heart_pull_heart = 0
ma_pull_heart_pull_bone = 1
ma_reachin_drwr_put_back = 0
ma_reachin_drwr_reach_in_grab = 1
ma_reachin_drwr_grab_coral = 2
ma_reap_bruno_reap_bruno = 0
ma_rope_coil_rope = 0
ma_rope_drop_rope = 1
ma_rope_pickup_rope = 2
ma_rope_shimmy_rope = 3
ma_rope_throw_rope = 4
ma_rope_hook_rope = 5
ma_rope_tie_coral = 6
ma_save_gl_save_glottis = 0
ma_scythe_takeout_scythe = 0
ma_scythe_putaway_scythe = 1
ma_scythe_putaway_scythe_get = 2
ma_scythe_web_cut_web = 0
ma_scythe_web_hook_n_fling = 1
ma_scythe_web_second_step_snap = 2
ma_scythe_web_heart_beat = 3
ma_shakecycle_stand_shiver_getup = 0
ma_shakecycle_stand_shiver_cycle = 1
ma_shakecycle_stand_bendup_shake = 2
ma_squirt_chem_left_shoot = 0
ma_squirt_chem_right_shoot = 1
ma_stuff_balloon_stuff_balloon = 0
ma_stuff_balloon_stuff_balloon2 = 1
ma_stuff_balloon_stuff_bread_model = 2
ma_swats_foam_ma_swats_foam = 0
ma_takeout_card_takeout_card_deck = 0
ma_takeout_card_hold_card = 1
ma_takeout_card_putaway_deck = 2
ma_takeout_card_takeout_deck = 3
ma_takeout_card_hold_deck = 4
ma_takeout_card_hold_card_deck = 5
ma_throw_bone_bone_throw = 0
ma_throw_bone_hold_bone = 1
ma_throw_bone_throw_in_tar = 2
ma_throw_bone_takeout_bone = 3
ma_throw_bone_putback_bone = 4
ma_tube_action_handle_shake = 0
ma_tube_action_lose_card = 1
ma_tube_action_card_bust = 2
ma_tube_action_canister_stop = 3
ma_tube_action_card_hold = 4
ma_tube_action_canister_hold = 5
ma_tube_action_canister_letgo = 6
ma_tube_action_open_tube = 7
ma_up_rope_climb_up = 0
ma_up_rope_drop_off = 1
ma_use_baster_use_baster = 0
ma_use_baster_hold_empty_baster = 1
ma_use_baster_putback_baster = 2
ma_use_baster_takeout_empty_baster = 3
ma_use_baster_kitchen_baster = 4
ma_use_baster_hold_full_baster = 5
ma_use_baster_putback_full_baster = 6
ma_use_baster_takeout_full_baster = 7
ma_use_baster_use_baster_full = 8
ma_use_extin_ma_use_ext = 0
ma_use_extin_ready = 1
ma_use_extin_fire = 2
ma_use_extin_drop = 3
ma_use_lever_idle = 0
ma_use_lever_lever_up = 1
ma_use_lever_lever_down = 2
ma_use_wb_lift_wb = 0
ma_use_wb_hold_wb = 1
ma_use_wb_drop_wb = 2
ma_use_wb_start_walk = 3
ma_use_wb_walk = 4
ma_use_wb_stop_walk = 5
ma_use_wb_walk_back = 6
ma_ve_carry_ma_carry = 0
ma_ve_carry_drop_ma = 1
ma_ve_carry_walk = 2
ma_warm_hands_up_on_toes = 0
ma_warm_hands_tilt_up = 1
ma_warm_hands_tilt_left = 2
ma_warm_hands_tilt_hold = 3
ma_warm_hands_standing = 4
ma_wheel_stuck_hands_on_wheel = 0
ma_wheel_stuck_turn_stuck_wheel = 1
ma_wheel_stuck_hands_off_wheel = 2
ma_wheel_stuck_hand_on_tu = 3
ma_wheel_stuck_hand_off_tu = 4
ma_wheel_stuck_turn_tu = 5
maximino_idles_look_right = 0
maximino_idles_hold_right = 1
maximino_idles_right_forward = 2
maximino_idles_look_left = 3
maximino_idles_hold_left = 4
maximino_idles_left_forward = 5
maximino_idles_forward_hold = 6
maximino_idles_to_smoke = 7
maximino_idles_dunno = 8
maximino_idles_smoke = 9
maximino_idles_smoke_done = 10
maximino_idles_a = 11
maximino_idles_c = 12
maximino_idles_e = 13
maximino_idles_l = 14
maximino_idles_f = 15
maximino_idles_m = 16
maximino_idles_o = 17
maximino_idles_u = 18
maximino_idles_no_talk = 19
maximino_idles_mumble = 20
maximino_idles_restpos1 = 21
maximino_idles_shift_weight = 22
maximino_idles_restpos2 = 23
maximino_idles_bk_to_restpos1 = 24
maximino_idles_cig_gesture = 25
maximino_idles_shake_head = 26
maximino_idles_db_arm_gesture = 27
maximino_idles_laugh = 28
maximino_idles_t = 29
max_walk_walk = 0
mc_booth_idles_scootch = 0
mc_booth_idles_sit_pose = 1
mc_booth_idles_line189 = 2
mc_booth_idles_line189_hold = 3
mc_booth_idles_line190 = 4
mc_booth_idles_line190_hold = 5
mc_booth_idles_get_printer = 6
mc_booth_idles_hold_printer = 7
mc_booth_idles_miss_pass = 8
mc_booth_idles_take_pass = 9
mc_booth_idles_line246 = 10
mc_booth_idles_hold_pass = 11
mc_booth_idles_nod = 12
mc_booth_idles_nod_loop = 13
mc_booth_idles_printer_only = 14
mc_booth_idles_out = 15
mc_booth_idles_outro = 16
mc_bridge_pull_level = 0
mc_cask_cask_scythe = 0
mcc_bone_trail_start_walk = 0
mcc_bone_trail_walk_grind = 1
mcc_bone_trail_end_walk = 2
mcc_bone_trail_grind_hold = 3
mcc_bone_trail_sqz_grinder_flks = 4
mcc_bone_trail_sqz_grinder_no_flks = 5
mcc_coffee_get_coffee = 0
mcc_coffee_coffee_on_burner = 1
mcc_coffee_coffee_pause = 2
mcc_coffee_2coffee_pour = 3
mcc_coffee_pour_on_boyz = 4
mcc_coffee_stop_pour = 5
mcc_coffee_pour_coffee = 6
mcc_coffee_start_pour_on_boyz = 7
mcc_coffee_stop_pour_on_boyz = 8
mcc_coffee_pot_to_burner = 9
mcc_inv_nitro_in = 0
mcc_inv_nitro_out = 1
mcc_inv_mt_hand_in = 2
mcc_inv_mt_hand_out = 3
mcc_inv_grinder_in = 4
mcc_inv_grinder_out = 5
mcc_inv_mug_in = 6
mcc_inv_mug_out = 7
mcc_inv_hand_in = 8
mcc_inv_hand_out = 9
mcc_inv_sproutella_in = 10
mcc_inv_sproutella_out = 11
mcc_inv_gun_in = 12
mcc_inv_gun_out = 13
mcc_inv_rag_in = 14
mcc_inv_rag_out = 15
mcc_inv_oily_rag_in = 16
mcc_inv_oily_rag_out = 17
mcc_inv_coffeepot_in = 18
mcc_inv_coffeepot_out = 19
mcc_inv_lsa_photo_out = 20
mcc_inv_lsa_photo_in = 21
mcc_inv_remote_in = 22
mcc_inv_remote_out = 23
mcc_inv_bottle_in = 24
mcc_inv_bottle_out = 25
mcc_inv_note_in = 26
mcc_inv_note_out = 27
mcc_inv_grinder_full_in = 28
mcc_inv_grinder_full_out = 29
mcc_inv_scythe_in = 30
mcc_inv_scythe_out = 31
mcc_inv_empty_bottle_in = 32
mcc_inv_empty_bottle_out = 33
mcc_jump_off_sit = 0
mcc_jump_off_stand_up = 1
mcc_jump_off_stand = 2
mcc_jump_off_turn = 3
mcc_jump_off_turn_hold = 4
mcc_jump_off_jump_off = 5
mcc_knock_on_door_knock = 0
mcc_ladder_generic_climb1 = 0
mcc_ladder_generic_climb2 = 1
mcc_ladder_generic_climb_down1 = 2
mcc_ladder_generic_climb_down2 = 3
mcc_ladder_generic_jump_off = 4
mcc_ladder_generic_mount_ladder = 5
mcc_startwalk = 0
mcc_stopwalk = 1
mcc_walk = 2
mcc_talk = 3
mcc_stop_talk = 4
mcc_run = 5
mcc_start_run = 6
mcc_stop_run = 7
mcc_rest = 8
mcc_turn_right = 9
mcc_walk_upstairs = 10
mcc_walk_downstairs = 11
mcc_putback_small = 12
mcc_putback_done = 13
mcc_takeout_get = 14
mcc_takeout_big = 15
mcc_back_off = 16
mcc_step_fwd = 17
mcc_hand_on_obj = 18
mcc_hand_off_obj = 19
mcc_use_obj = 20
mcc_takeout_empty = 21
mcc_swivel_lf = 22
mcc_swivel_rt = 23
mcc_a = 24
mcc_c = 25
mcc_e = 26
mcc_l = 27
mcc_f = 28
mcc_m = 29
mcc_o = 30
mcc_u = 31
mcc_no_talk = 32
mcc_mumble = 33
mcc_reach_high = 34
mcc_reach_med = 35
mcc_takeout_small = 36
mcc_hold = 37
mcc_hold_scythe = 38
mcc_putback_big = 39
mcc_reach_low = 40
mcc_reach_cabinet = 41
mcc_give = 42
mcc_give_hold = 43
mcc_give_exit = 44
mcc_activate_hand = 45
mcc_activate_mug = 46
mcc_activate_sproutella = 47
mcc_activate_nitro = 48
mcc_activate_rag = 49
mcc_activate_grinder = 50
mcc_activate_oily_rag = 51
mcc_activate_bottle = 52
mcc_lf_hand_on_obj = 53
mcc_lf_hand_off_obj = 54
mcc_activate_coffeepot = 55
mcc_activate_lsa_photo = 56
mcc_use_grinder = 57
mcc_activate_grinder_empty = 58
mcc_activate_grinder_full = 59
mcc_react_standback = 0
mcc_react_ring_bell = 1
mcc_react_get_gun = 2
mcc_react_get_can = 3
mcc_react_hold_can = 4
mcc_react_hold_gun = 5
mcc_scythe_takeout_scythe = 0
mcc_scythe_putaway_scythe = 1
mcc_scythe_putaway_scythe_get = 2
mcc_th_bone_trail_start_walk = 0
mcc_th_bone_trail_walk_grind = 1
mcc_th_bone_trail_end_walk = 2
mcc_th_bone_trail_grind_hold = 3
mcc_th_bone_trail_sqz_grinder_flks = 4
mcc_th_bone_trail_sqz_grinder_no_flks = 5
mcc_theater_exit_th = 0
mcc_theater_enter_th = 1
mcc_thunder_gestures_head_tilt = 0
mcc_thunder_gestures_head_nod = 1
mcc_thunder_gestures_head_twist = 2
mcc_thunder_gestures_shrug = 3
mcc_thunder_gestures_hand_gesture = 4
mcc_thunder_gestures_pointing = 5
mcc_thunder_gestures_head_forward = 6
mcc_thunder_startwalk = 0
mcc_thunder_stopwalk = 1
mcc_thunder_walk = 2
mcc_thunder_talk = 3
mcc_thunder_stop_talk = 4
mcc_thunder_run = 5
mcc_thunder_start_run = 6
mcc_thunder_stop_run = 7
mcc_thunder_rest = 8
mcc_thunder_turn_right = 9
mcc_thunder_walk_upstairs = 10
mcc_thunder_walk_downstairs = 11
mcc_thunder_putback_small = 12
mcc_thunder_putback_done = 13
mcc_thunder_takeout_get = 14
mcc_thunder_takeout_big = 15
mcc_thunder_back_off = 16
mcc_thunder_step_fwd = 17
mcc_thunder_hand_on_obj = 18
mcc_thunder_hand_off_obj = 19
mcc_thunder_use_obj = 20
mcc_thunder_takeout_empty = 21
mcc_thunder_swivel_lf = 22
mcc_thunder_swivel_rt = 23
mcc_thunder_a = 24
mcc_thunder_c = 25
mcc_thunder_e = 26
mcc_thunder_l = 27
mcc_thunder_f = 28
mcc_thunder_m = 29
mcc_thunder_o = 30
mcc_thunder_u = 31
mcc_thunder_no_talk = 32
mcc_thunder_mumble = 33
mcc_thunder_reach_high = 34
mcc_thunder_reach_med = 35
mcc_thunder_takeout_small = 36
mcc_thunder_hold = 37
mcc_thunder_hold_scythe = 38
mcc_thunder_putback_big = 39
mcc_thunder_reach_low = 40
mcc_thunder_reach_cabinet = 41
mcc_thunder_give = 42
mcc_thunder_give_hold = 43
mcc_thunder_give_exit = 44
mcc_thunder_activate_hand = 45
mcc_thunder_activate_mug = 46
mcc_thunder_activate_sproutella = 47
mcc_thunder_activate_nitro = 48
mcc_thunder_activate_rag = 49
mcc_thunder_activate_grinder = 50
mcc_thunder_activate_oily_rag = 51
mcc_thunder_activate_bottle = 52
mcc_thunder_lf_hand_on_obj = 53
mcc_thunder_lf_hand_off_obj = 54
mcc_thunder_activate_coffeepot = 55
mcc_thunder_activate_lsa_photo = 56
mcc_thunder_use_grinder = 57
mcc_thunder_activate_grinder_empty = 58
mcc_thunder_activate_grinder_full = 59
mcc_thunder_activate_gun = 60
mcc_thunder_hold_grinder = 61
mcc_thunder_activate_thunder = 62
mcc_thunder_activate_note = 63
mcc_thunder_hold_note = 64
mcc_thunder_takeout_grinder_empty = 65
mcc_thunder_takeout_grinder_full = 66
mcc_thunder_end_crouch = 67
mcc_thunder_salute = 68
mcc_thunder_return_grinder = 69
mcc_thunder_take_grinder_hand = 70
mcc_thunder_take_grinder_no_hand = 71
mcc_thunder_activate_remote = 72
mcc_thunder_takeout_gethold = 73
mcc_thunder_hide_goddamn_hand = 74
mcc_thunder_open_door_open_door = 0
mcc_thunder_wait_idles_scratch = 0
mcc_thunder_wait_idles_smoke1 = 1
mcc_thunder_wait_idles_smoke_hold = 2
mcc_thunder_wait_idles_smoke_loop = 3
mcc_thunder_wait_idles_smoke_flick = 4
mcc_thunder_wait_idles_smoke_no_flick = 5
mcc_thunder_wait_idles_smoke_stomp = 6
mccthund_jump_off_sit = 0
mccthund_jump_off_stand_up = 1
mccthund_jump_off_stand = 2
mccthund_jump_off_turn = 3
mccthund_jump_off_turn_hold = 4
mccthund_jump_off_jump_off = 5
mccthund_ladder_generic_climb1 = 0
mccthund_ladder_generic_climb2 = 1
mccthund_ladder_generic_climb_down1 = 2
mccthund_ladder_generic_climb_down2 = 3
mccthund_ladder_generic_jump_off = 4
mccthund_ladder_generic_mount_ladder = 5
mccthund_ladder_generic_unmount_ladder = 6
mccthund_ladder_generic_post_mount = 7
mccthund_react_standback = 0
mccthund_react_ring_bell = 1
mccthund_react_get_gun = 2
mccthund_react_get_can = 3
mccthund_react_hold_can = 4
mccthund_react_hold_gun = 5
mc_dogtags_toss_right = 0
mc_dogtags_toss_left = 1
mc_drink_drink = 0
mc_fishout_key_hold_key = 0
mc_fishout_key_lookat_key = 1
mc_fishout_key_lookat_key_hold = 2
mc_fishout_key_key_idle = 3
mc_fishout_key_key_basket_start = 4
mc_fishout_key_key_basket_end = 5
mc_fishout_key_fishout_key = 6
mc_gestures_head_tilt = 0
mc_gestures_head_nod = 1
mc_gestures_head_twist = 2
mc_gestures_shrug = 3
mc_gestures_hand_gesture = 4
mc_gestures_pointing = 5
mc_gestures_head_forward = 6
mc_GETCARD_walk_out = 0
mc_GETCARD_hands_up = 1
mc_GETCARD_bargain_line = 2
mc_GETCARD_chuck = 3
mc_GETCARD_goons = 4
mc_GETCARD_hands_up2 = 5
mc_GETCARD_boss = 6
mc_GETCARD_card = 7
mc_GETCARD_get_card = 8
mc_GETCARD_dues = 9
mc_hand_gesture_Chore0 = 0
mc_in_si_open_frg = 0
mc_in_si_open_crspr = 1
mc_in_si_close_crspr = 2
mc_in_si_use_gnrtr = 3
mc_in_si_grab_phone = 4
mc_in_si_hold_phone = 5
mc_in_si_hang_phone = 6
mc_knock_on_door_knock = 0
mc_ladder_generic_climb1 = 0
mc_ladder_generic_climb2 = 1
mc_ladder_generic_climb_down1 = 2
mc_ladder_generic_climb_down2 = 3
mc_ladder_generic_jump_off = 4
mc_ladder_generic_loop = 5
mc_litter_digout_detector = 0
mc_litter_swipe = 1
mc_litter_scythe_idle = 2
mc_litter_scan_in = 3
mc_litter_scan_loop = 4
mc_litter_scan_out = 5
mc_litter_detector_only = 6
mc_startwalk = 0
mc_stopwalk = 1
mc_walk = 2
mc_talk = 3
mc_stop_talk = 4
mc_run = 5
mc_start_run = 6
mc_stop_run = 7
mc_rest = 8
mc_turn_right = 9
mc_walk_upstairs = 10
mc_walk_downstairs = 11
mc_putback_small = 12
mc_putback_done = 13
mc_takeout_get = 14
mc_takeout_big = 15
mc_back_off = 16
mc_step_fwd = 17
mc_hand_on_obj = 18
mc_hand_off_obj = 19
mc_use_obj = 20
mc_takeout_empty = 21
mc_swivel_lf = 22
mc_swivel_rt = 23
mc_a = 24
mc_c = 25
mc_e = 26
mc_l = 27
mc_f = 28
mc_m = 29
mc_o = 30
mc_u = 31
mc_no_talk = 32
mc_mumble = 33
mc_reach_high = 34
mc_reach_med = 35
mc_takeout_small = 36
mc_hold = 37
mc_hold_scythe = 38
mc_putback_big = 39
mc_reach_low = 40
mc_reach_cabinet = 41
mc_belch = 42
mc_activate_detector = 43
mc_activate_turkey_baster = 44
mc_activate_dog_tags = 45
mc_activate_letters = 46
mc_activate_key = 47
mc_activate_cigcase = 48
mc_scythe_swipe = 49
mc_activate_liqueur = 50
mc_activate_printer = 51
mc_activate_opener = 52
mc_give_book = 53
mc_give_book_from_hold = 54
mc_stop_give_book = 55
mc_hold_hrpass = 56
mc_give_hrpass = 57
mc_hold_out_hrpass = 58
mc_hrpass_rtrn2base = 59
mc_activate_book = 60
mc_pickup_book = 61
mc_activate_pass = 62
mc_activate_blackmail = 63
mc_activate_ticket = 64
mc_activate_photofinish = 65
mc_activate_lengua = 66
mc_activate_union_card = 67
mc_activate_sal_note = 68
mc_activate_full_baster = 69
mc_activate_jacket_old = 70
mc_activate_paper = 71
mc_read_note = 72
mc_get_case = 73
mc_activate_suitcase = 74
mc_activate_jacket = 75
mc_fold_coat = 76
mc_give_item = 77
mc_t = 78
mc_toss_stub = 79
mc_hold_coat = 80
mc_takeout_gethold = 81
mc_open_door_ma_open_door = 0
mc_open_door_ma_close_door = 1
mc_pantry_scythe_block = 0
mc_pantry_close_pantry = 1
mc_pantry_open_pantry = 2
mc_pantry_scythe_end = 3
mc_pantry_scythe_unblock = 4
mc_railslide_idle = 0
mc_railslide_on_rail = 1
mc_railslide_sllide = 2
mc_railslide_off_rail = 3
mc_scythe_takeout_scythe = 0
mc_scythe_putaway_scythe = 1
mc_scythe_putaway_scythe_get = 2
mc_sna_nk_ol_enter = 0
mc_sna_snama01a = 1
mc_sna_snama01b = 2
mc_sna_snama01c = 3
mc_sna_snama03a = 4
mc_sna_snama03b = 5
mc_sna_snama03c = 6
mc_sna_snama03d = 7
mc_sna_snama05 = 8
mc_suitcase_open = 0
mc_suitcase_close = 1
mc_suitcase_grab_case = 2
mc_suitcase_suitcase_only = 3
mc_tap_head_tap_head = 0
mc_telescope_lookat_scope = 0
mc_telescope_look_hold = 1
mc_telescope_look_done = 2
mc_wait_idles_scratch = 0
mc_wait_idles_smoke1 = 1
mc_wait_idles_smoke_hold = 2
mc_wait_idles_smoke_loop = 3
mc_wait_idles_smoke_flick = 4
mc_wait_idles_smoke_no_flick = 5
mc_wait_idles_smoke_stomp = 6
mc_wave_wave = 0
md_dying_flail = 0
md_dying_nitro = 1
md_dying_yank = 2
md_dying_takeout = 3
md_dying_putback = 4
md_dying_rest = 5
md_gestures_head_tilt = 0
md_gestures_head_nod = 1
md_gestures_head_twist = 2
md_gestures_shrug = 3
md_gestures_hand_gesture = 4
md_gestures_pointing = 5
md_gestures_head_forward = 6
md_green_door_open_door = 0
md_green_door_hide_gun = 1
md_green_door_show_gun = 2
md_green_door_touch_knob = 3
md_gun_open_trunk = 0
md_gun_shoot_gun = 1
md_hold_tix_hold_ticket = 0
md_hold_tix_ticket_only = 1
md_inv_grinder_in = 0
md_inv_grinder_out = 1
md_inv_gun_in = 2
md_inv_gun_out = 3
md_inv_key_in = 4
md_inv_key_out = 5
md_inv_sproutella_in = 6
md_inv_sproutella_out = 7
md_inv_nitro_in = 8
md_inv_nitro_out = 9
md_inv_ticket_in = 10
md_inv_ticket_out = 11
md_inv_tix_in = 12
md_inv_tix_out = 13
md_inv_empty_hand_in = 14
md_inv_empty_hand_out = 15
md_inv_scythe_in = 16
md_inv_scythe_out = 17
md_inv_grinder_no_hand_in = 18
md_inv_grinder_no_hand_out = 19
md_start_walk = 0
md_stop_walk = 1
md_walk = 2
md_talk = 3
md_stop_talk = 4
md_run = 5
md_start_run = 6
md_stop_run = 7
md_rest = 8
md_turn_right = 9
md_walk_upstairs = 10
md_walk_downstairs = 11
md_putback_small = 12
md_putback_done = 13
md_takeout_get = 14
md_takeout_big = 15
md_back_off = 16
md_step_fwd = 17
md_hand_on_obj = 18
md_hand_off_obj = 19
md_use_obj = 20
md_takeout_empty = 21
md_swivel_lf = 22
md_swivel_rt = 23
md_a = 24
md_c = 25
md_e = 26
md_l = 27
md_f = 28
md_m = 29
md_o = 30
md_u = 31
md_no_talk = 32
md_mumble = 33
md_reach_high = 34
md_reach_med = 35
md_takeout_small = 36
md_hold = 37
md_hold_scythe = 38
md_putback_big = 39
md_reach_low = 40
md_takeout_scythe = 41
md_putback_scythe = 42
md_rest_scythe = 43
md_hold_gun = 44
md_hold_grinder = 45
md_use_grinder = 46
md_activate_grinder_full = 47
md_activate_sproutella = 48
md_activate_nitro = 49
md_activate_ticket = 50
md_activate_key = 51
md_activate_scythe = 52
md_activate_gun = 53
md_activate_tix_nowig = 54
md_activate_grinder_empty = 55
md_t = 56
md_takeout_scythe_get = 57
md_activate_folded_scythe = 58
md_out_car_getout_car = 0
md_out_car_close_door = 1
md_search_sal_search = 0
md_search_sal_hold_key = 1
md_shooting_quick_shot = 0
md_shooting_duck = 1
md_shooting_pose = 2
md_shooting_pose_down = 3
md_sproutella_sproutella = 0
md_sproutella_jump_down = 1
md_sproutella_climb_up = 2
me_backdoor_open = 0
me_backdoor_closed = 1
me_backdoor_opening = 2
me_backdoor_closing = 3
me_brakeson_brakes_on = 0
me_brakeson_brakes_off = 1
mechanic_idles_mumble = 0
mechanic_idles_c = 1
mechanic_idles_a = 2
mechanic_idles_e = 3
mechanic_idles_u = 4
mechanic_idles_m = 5
mechanic_idles_o = 6
mechanic_idles_f = 7
mechanic_idles_l = 8
mechanic_idles_stop_talk = 9
mechanic_idles_tip_toes = 10
mechanic_idles_scratch_butt = 11
mechanic_idles_right2base = 12
mechanic_idles_pvt_right = 13
mechanic_idles_pivot_left = 14
mechanic_idles_pivot_left_hold = 15
mechanic_idles_next2gl = 16
mechanic_idles_lk_right = 17
mechanic_idles_lk_left2base = 18
mechanic_idles_lk_left_hold = 19
mechanic_idles_lk_left = 20
mechanic_idles_hold_chin = 21
mechanic_idles_wrench_gond = 22
mechanic_idles_twist_wrench = 23
mechanic_idles_inspect_work = 24
mechanic_idles_akimbo = 25
mechanic_idles_dunno2base = 26
mechanic_idles_dunno_hold = 27
mechanic_idles_chin2base = 28
mechanic_idles_base = 29
mechanic_idles_to_lk_right = 30
mechanic_idles_to_hold_chin = 31
mechanic_idles_to_dunno = 32
mechanic_idles_t = 33
CheckFirstTime("meche_idle_table.lua")
meche.idle_table = Idle:create("meche_sit")
idt = meche.idle_table
idt:add_state("purse_squeeze", { base = 0.15, purse_squeeze = 0.36, scoot_out = 0.1, look_around = 0.02, to_chin = 0, tap_fingers = 0.3, tilt_head_in = 0, look_down_in = 0.05, lean_fwd = 0, nod = 0, adj_skirt = 0.02 })
idt:add_state("scoot_out", { hold_out = 0.5, head_tap_in = 0.25, scoot_in = 0.25 })
idt:add_state("head_tap_in", { head_tap_loop = 1 })
idt:add_state("head_tap_loop", { head_tap_loop = 0.5, head_tap_out = 0.5 })
idt:add_state("scoot_in", { base = 0.1, purse_squeeze = 0.3, scoot_out = 0.1, look_around = 0.05, to_chin = 0, tap_fingers = 0.35, tilt_head_in = 0, look_down_in = 0.05, lean_fwd = 0, nod = 0, adj_skirt = 0.05 })
idt:add_state("base", { base = 0.2, purse_squeeze = 0.1, scoot_out = 0.05, look_around = 0.05, to_chin = 0, tap_fingers = 0.5, tilt_head_in = 0, look_down_in = 0.05, lean_fwd = 0, nod = 0, adj_skirt = 0.05 })
idt:add_state("to_chin", { chin_hold = 1, to_gesture_1 = 0, in_gesture_2 = 0, hand_down = 0 })
idt:add_state("chin_hold", { chin_hold = 1, to_gesture_1 = 0, in_gesture_2 = 1, hand_down = 1 })
idt:add_state("to_gesture_1", { gesture_1_hold = 1, out_gesture_1 = 1 })
idt:add_state("gesture_1_hold", { gesture_1_hold = 1, out_gesture_1 = 1 })
idt:add_state("out_gesture_1", { chin_hold = 0, to_gesture_1 = 1, in_gesture_2 = 1, hand_down = 1 })
idt:add_state("in_gesture_2", { gesture_2_hold = 1, out_gesture_2 = 1 })
idt:add_state("gesture_2_hold", { gesture_2_hold = 1, out_gesture_2 = 1 })
idt:add_state("hand_down", { base = 1, purse_squeeze = 1, scoot_out = 1, look_around = 1, to_chin = 0, tap_fingers = 1, tilt_head_in = 0, look_down_in = 1, lean_fwd = 0, nod = 0, adj_skirt = 0 })
idt:add_state("tap_fingers", { base = 0.28, purse_squeeze = 0.18, scoot_out = 0.05, look_around = 0.05, to_chin = 0, tap_fingers = 0.4, tilt_head_in = 0, look_down_in = 0.02, lean_fwd = 0, nod = 0, adj_skirt = 0.02 })
idt:add_state("tild_head_in", { tilt_head_hold = 0, tilt_head_out = 0 })
idt:add_state("tilt_head_hold", { tilt_head_hold = 1, tilt_head_out = 1 })
idt:add_state("tilt_head_out", { base = 1, purse_squeeze = 1, scoot_out = 1, look_around = 1, to_chin = 0, tap_fingers = 1, tilt_head_in = 0, look_down_in = 1, lean_fwd = 0, nod = 0, adj_skirt = 1 })
idt:add_state("look_down_in", { look_down_hold = 0.5, look_tilt_in = 0.5 })
idt:add_state("look_down_hold", { look_down_hold = 0.8, look_tilt_in = 0.2 })
idt:add_state("look_tilt_in", { look_tilt_hold = 0.8, look_to_base = 0.2 })
idt:add_state("look_tilt_hold", { look_tilt_hold = 0.7, look_to_base = 0.3 })
idt:add_state("look_to_base", { base = 1, purse_squeeze = 0, scoot_out = 0, look_around = 0, to_chin = 0, tap_fingers = 0, tilt_head_in = 0, look_down_in = 0, lean_fwd = 0, nod = 0, adj_skirt = 0 })
idt:add_state("lean_fwd", { lean_fwd_hold = 1, lean_rt = 1 })
idt:add_state("lean_fwd_hold", { lean_fwd_hold = 1, lean_rt = 1 })
idt:add_state("lean_rt", { lean_rt_hold = 0.9, lean_to_base = 0.1 })
idt:add_state("lean_rt_hold", { lean_rt_hold = 0.9, lean_to_base = 0.1 })
idt:add_state("lean_to_base", { base = 1, purse_squeeze = 0, scoot_out = 0, look_around = 0, to_chin = 0, tap_fingers = 0, tilt_head_in = 0, look_down_in = 0, lean_fwd = 0, nod = 0, adj_skirt = 0 })
idt:add_state("nod", { base = 1, purse_squeeze = 1, scoot_out = 1, look_around = 1, to_chin = 0, tap_fingers = 1, tilt_head_in = 0, look_down_in = 1, lean_fwd = 0, nod = 0, adj_skirt = 1 })
idt:add_state("adj_skirt", { base = 1, purse_squeeze = 0, scoot_out = 0, look_around = 0, to_chin = 0, tap_fingers = 0, tilt_head_in = 0, look_down_in = 0, lean_fwd = 0, nod = 0, adj_skirt = 0 })
idt:add_state("head_tap_out", { hold_out = 0.2, head_tap_in = 0, scoot_in = 0.8 })
idt:add_state("look_around", { base = 1, purse_squeeze = 0, scoot_out = 0, look_around = 0, to_chin = 0, tap_fingers = 0, tilt_head_in = 0, look_down_in = 0, lean_fwd = 0, nod = 0, adj_skirt = 0 })
idt:add_state("hold_out", { hold_out = 0.7, head_tap_in = 0.2, scoot_in = 0.1 })
idt:add_state("out_gesture_2", { chin_hold = 0, to_gesture_1 = 1, in_gesture_2 = 1, hand_down = 1 })
meche_in_vi_slide = 0
meche_in_vi_walk = 1
meche_in_vi_drop_hands = 2
meche_in_vi_xarm_hold = 3
meche_in_vi_tilt_to_xarm = 4
meche_in_vi_tilt_left_hold = 5
meche_in_vi_look_left = 6
meche_in_vi_look_up_hold = 7
meche_in_vi_look_left_hold = 8
meche_in_vi_look_right_hold = 9
meche_in_vi_xarms = 10
meche_in_vi_hands_down_hold = 11
meche_in_vi_tilt_left = 12
meche_in_vi_look_up = 13
meche_in_vi_look_right = 14
meche_in_vi_mumble = 15
meche_in_vi_stop_talk = 16
meche_in_vi_c = 17
meche_in_vi_m = 18
meche_in_vi_f = 19
meche_in_vi_e = 20
meche_in_vi_u = 21
meche_in_vi_l = 22
meche_in_vi_a = 23
meche_in_vi_o = 24
meche_in_vi_t = 25
meche_island_ash_gest1 = 0
meche_island_ash_drag = 1
meche_island_ash_flick = 2
meche_island_ash_file = 3
meche_island_ash_gest2 = 4
meche_island_ash_stckng = 5
meche_island_2talk = 6
meche_island_talk_gest = 7
meche_island_gest2talk = 8
meche_island_talk2base = 9
meche_island_toss_stckng = 10
meche_island_mumble = 11
meche_island_stop_talk = 12
meche_island_c = 13
meche_island_m = 14
meche_island_f = 15
meche_island_e = 16
meche_island_u = 17
meche_island_l = 18
meche_island_a = 19
meche_island_o = 20
meche_island_t = 21
meche_on_dock_up_to_dock = 0
meche_ruba_walk = 0
meche_ruba_drop_hands = 1
meche_ruba_xarm_hold = 2
meche_ruba_tilt_to_xarm = 3
meche_ruba_tilt_left_hold = 4
meche_ruba_look_left = 5
meche_ruba_look_up_hold = 6
meche_ruba_look_left_hold = 7
meche_ruba_look_right_hold = 8
meche_ruba_xarms = 9
meche_ruba_hands_down_hold = 10
meche_ruba_tilt_left = 11
meche_ruba_look_up = 12
meche_ruba_look_right = 13
meche_ruba_mumble = 14
meche_ruba_stop_talk = 15
meche_ruba_c = 16
meche_ruba_m = 17
meche_ruba_f = 18
meche_ruba_e = 19
meche_ruba_u = 20
meche_ruba_l = 21
meche_ruba_a = 22
meche_ruba_o = 23
meche_ruba_t = 24
meche_seduction_rest_pos = 0
meche_seduction_sed_to_rest = 1
meche_seduction_sed_by_meche = 2
meche_seduction_mec_sed_ch = 3
meche_sit_purse_squeeze = 0
meche_sit_scoot_out = 1
meche_sit_head_tap_in = 2
meche_sit_head_tap_loop = 3
meche_sit_scoot_in = 4
meche_sit_base = 5
meche_sit_to_chin = 6
meche_sit_chin_hold = 7
meche_sit_to_gesture_1 = 8
meche_sit_gesture_1_hold = 9
meche_sit_out_gesture_1 = 10
meche_sit_in_gesture_2 = 11
meche_sit_gesture_2_hold = 12
meche_sit_hand_down = 13
meche_sit_tap_fingers = 14
meche_sit_tilt_head_in = 15
meche_sit_tilt_head_hold = 16
meche_sit_tilt_head_out = 17
meche_sit_look_down_in = 18
meche_sit_look_down_hold = 19
meche_sit_look_tilt_in = 20
meche_sit_look_tilt_hold = 21
meche_sit_look_to_base = 22
meche_sit_lean_fwd = 23
meche_sit_lean_fwd_hold = 24
meche_sit_lean_rt = 25
meche_sit_lean_rt_hold = 26
meche_sit_lean_to_base = 27
meche_sit_nod = 28
meche_sit_adj_skirt = 29
meche_sit_head_tap_out = 30
meche_sit_look_around = 31
meche_sit_hold_out = 32
meche_sit_out_gesture_2 = 33
meche_sit_mumble = 34
meche_sit_no_talk = 35
meche_sit_c = 36
meche_sit_m = 37
meche_sit_f = 38
meche_sit_e = 39
meche_sit_u = 40
meche_sit_l = 41
meche_sit_a = 42
meche_sit_o = 43
meche_sit_t = 44
meche_snow_walk = 0
meche_snow_drop_hands = 1
meche_snow_xarm_hold = 2
meche_snow_tilt_to_xarm = 3
meche_snow_tilt_left_hold = 4
meche_snow_look_left = 5
meche_snow_look_up_hold = 6
meche_snow_look_left_hold = 7
meche_snow_look_right_hold = 8
meche_snow_xarms = 9
meche_snow_hands_down_hold = 10
meche_snow_tilt_left = 11
meche_snow_look_up = 12
meche_snow_look_right = 13
meche_snow_mumble = 14
meche_snow_stop_talk = 15
meche_snow_c = 16
meche_snow_m = 17
meche_snow_f = 18
meche_snow_e = 19
meche_snow_u = 20
meche_snow_l = 21
meche_snow_a = 22
meche_snow_o = 23
meche_snow_t = 24
meche_snow_stand = 25
meche_w_gl_soothe_1hand = 0
meche_w_gl_soothe_both_hands = 1
meche_w_gl_base = 2
meche_w_gl_gl_talks = 3
meche_w_gl_mumble = 4
meche_w_gl_stop_talk = 5
meche_w_gl_c = 6
meche_w_gl_m = 7
meche_w_gl_f = 8
meche_w_gl_e = 9
meche_w_gl_u = 10
meche_w_gl_l = 11
meche_w_gl_a = 12
meche_w_gl_o = 13
meche_w_gl_t = 14
me_darts_be_the_dart_dave = 0
me_door_flowers_here = 0
me_frontdoor_open = 0
me_frontdoor_closed = 1
me_frontdoor_opening = 2
me_frontdoor_closing = 3
CheckFirstTime("me.lua")
me = Set:create("me.set", "meadow exterior", { me_carla = 0, me_carla2 = 0, me_carla3 = 0, me_carla4 = 0, me_carla5 = 0, me_carla6 = 0, me_carla7 = 0, me_pmpws = 1, me_pmpws2 = 1, me_pmpws3 = 1, me_pmpws4 = 1, me_pmpws5 = 1, me_pmpws6 = 1, me_shtgh = 2, me_shtgh2 = 2, me_rerws = 3, me_ovrhd = 4, me_rerha = 5, me_rerha2 = 5, me_rerha3 = 5, me_rerha4 = 5, me_salcu = 6, me_olvms = 7, me_sptcu = 8, me_dorcu = 9 })
me.cheat_boxes = { cheat1 = 0 }
dofile("ol_gun.lua")
dofile("ol_suitcase.lua")
dofile("ol_dies.lua")
dofile("md_search_sal.lua")
dofile("md_gun.lua")
dofile("md_shooting.lua")
dofile("md_green_door.lua")
dofile("me_backdoor.lua")
dofile("me_frontdoor.lua")
dofile("md_hold_tix.lua")
dofile("he_greenhouse.lua")
dofile("me_trunk.lua")
dofile("shootout.lua")
me.olivia_talk_count = 0
me.flower_point = { x = 18.3018, y = -21.0012, z = -7.61071 }
me.olivia_hector_point = { x = 16.213, y = -19.2214, z = -7.18187 }
me.suitcase_point1 = { x = 18.8761, y = -19.781, z = -7.67824 }
me.suitcase_point2 = { x = 18.9601, y = -19.946, z = -7.67824 }
me.ol_run_point = { x = 17.3648, y = -20.7248, z = -7.22155 }
me.sal_music = FALSE
me.shootout_music = FALSE
me.end_music = FALSE
me.greenhouse_approach_music = FALSE
me.water_pump_vol = 20
me.water_pump_pan = 20
me.olivia_searching = function() -- line 60
    me.heard_olivia_search = TRUE
    olivia:say_line("/meol013/")
    wait_for_message()
    olivia:say_line("/meol014/")
    sleep_for(2000)
    olivia:say_line("/meol015/")
end
olivia.meadow_default = function(arg1) -- line 70
    olivia:free()
    olivia:set_costume("olivia_talks.cos")
    olivia:set_mumble_chore(olivia_talks_mumble)
    olivia:set_talk_chore(1, olivia_talks_stop_talk)
    olivia:set_talk_chore(2, olivia_talks_a)
    olivia:set_talk_chore(3, olivia_talks_c)
    olivia:set_talk_chore(4, olivia_talks_e)
    olivia:set_talk_chore(5, olivia_talks_f)
    olivia:set_talk_chore(6, olivia_talks_l)
    olivia:set_talk_chore(7, olivia_talks_m)
    olivia:set_talk_chore(8, olivia_talks_o)
    olivia:set_talk_chore(9, olivia_talks_t)
    olivia:set_talk_chore(10, olivia_talks_u)
    olivia:push_costume("ol_gun.cos")
    olivia:ignore_boxes()
    olivia:set_head(5, 6, 7, 165, 28, 80)
    olivia:set_look_rate(110)
    olivia:set_visibility(TRUE)
end
me.pester_olivia = function() -- line 91
    START_CUT_SCENE()
    me.olivia_talk_count = me.olivia_talk_count + 1
    manny:stop_walk()
    start_script(manny.turn_toward_entity, manny, me.olivia_obj)
    manny:head_look_at(me.olivia_obj)
    olivia:play_chore(ol_gun_threaten, "ol_gun.cos")
    if me.olivia_talk_count == 1 then
        wait_for_message()
        olivia:say_line("/meol006/")
        wait_for_message()
        manny:say_line("/mema007/")
        wait_for_message()
        olivia:say_line("/meol008/")
        wait_for_message()
        olivia:say_line("/meol009/")
    elseif me.olivia_talk_count == 2 then
        olivia:say_line("/meol010/")
    elseif me.olivia_talk_count == 3 then
        olivia:say_line("/meol011/")
    else
        olivia:say_line("/meol012/")
    end
    olivia:wait_for_message()
    manny:head_look_at(nil)
    stop_script(manny.turn_toward_entity)
    manny:walk_and_face(15.0038, -19.01, -7.97882, 0, 67.2536, 0)
    END_CUT_SCENE()
end
me.olivia_search_idles = function() -- line 122
    while 1 do
        olivia:play_chore(ol_suitcase_suitcase, "ol_suitcase.cos")
        if rnd() then
            sleep_for(2000 * random())
            olivia:play_chore(ol_suitcase_suitcase_hold, "ol_suitcase.cos")
            olivia:fade_out_chore(ol_suitcase_suitcase, "ol_suitcase.cos", 500)
        else
            olivia:wait_for_chore(ol_suitcase_suitcase, "ol_suitcase.cos")
        end
        repeat
            olivia:head_look_at_point(me.suitcase_point1)
            sleep_for(1000 + 3000 * random())
            olivia:head_look_at_point(me.suitcase_point2)
            sleep_for(1000 + 3000 * random())
        until rnd()
        olivia:head_look_at(nil)
    end
end
me.ol_scoot_in = function(arg1) -- line 150
    local local1
    repeat
        olivia:offsetBy(0, 0.050000001, 0)
        break_here()
        local1 = olivia:getpos()
    until local1.y >= -19.4884
end
me.ol_scoot_out = function(arg1) -- line 161
    local local1
    stop_script(me.ol_scoot_in)
    manny:play_chore_looping(md_back_off, "md.cos")
    manny:ignore_boxes()
    repeat
        local1 = 0 - PerSecond(0.30000001)
        olivia:offsetBy(0, local1, 0)
        manny:offsetBy(0, local1, 0)
        break_here()
        ol_pos = olivia:getpos()
    until ol_pos.y <= -19.700001
end
me.salvador_goodbye = function(arg1) -- line 182
    salvador.sprouted = TRUE
    START_CUT_SCENE()
    set_override(me.salvador_goodbye_override)
    olivia:set_visibility(TRUE)
    stop_script(me.olivia_search_idles)
    manny:wait_for_message()
    salvador:play_chore(ol_dies_sal_eyes_open, "ol_dies.cos")
    sleep_for(500)
    salvador:say_line("/hisa001/")
    manny:walk_and_face(17.6867, -19.4394, -7.84747, 0, 340.695, 0)
    wait_for_message()
    salvador:say_line("/hisa002/")
    wait_for_message()
    salvador:say_line("/hisa003/")
    wait_for_message()
    manny:say_line("/hima004/")
    manny:nod_head_gesture()
    wait_for_message()
    salvador:say_line("/hisa005/")
    wait_for_message()
    salvador:say_line("/hisa006/")
    wait_for_message()
    salvador:say_line("/hisa007/")
    wait_for_message()
    manny:say_line("/hima008/")
    manny:tilt_head_gesture()
    manny:hand_gesture()
    sleep_for(500)
    music_state:set_state(stateEND)
    olivia:meadow_default()
    olivia:pop_costume()
    olivia:push_costume("ol_dies.cos")
    olivia:put_in_set(me)
    olivia:setpos(16.8976, -19.5694, -7.787)
    olivia:setrot(0, 160.021, 0)
    olivia:play_chore(ol_dies_stickup_manny, "ol_dies.cos")
    start_script(me.ol_scoot_in)
    manny:wait_for_message()
    olivia:say_line("/hiol009/")
    wait_for_script(me.ol_scoot_in)
    start_script(me.ol_scoot_out)
    olivia:wait_for_message()
    salvador:say_line("/hisa010/")
    salvador:wait_for_message()
    wait_for_script(me.ol_scoot_out)
    system:lock_display()
    olivia:setpos(16.9006, -19.8874, -7.689)
    olivia:setrot(0, 191.438, 0)
    manny:put_in_set(nil)
    me:current_setup(me_olvms)
    olivia:play_chore(ol_dies_push_ma_out, "ol_dies.cos")
    system:unlock_display()
    olivia:wait_for_chore(ol_dies_push_ma_out, "ol_dies.cos")
    olivia:say_line("/hiol011/")
    olivia:run_chore(ol_dies_get_sal_head, "ol_dies.cos")
    olivia:play_chore(ol_dies_obtained_head, "ol_dies.cos")
    olivia:wait_for_message()
    olivia:wait_for_chore(ol_dies_obtained_head, "ol_dies.cos")
    sleep_for(500)
    olivia:say_line("/hiol012/")
    system:lock_display()
    me:current_setup(me_sptcu)
    olivia:setpos(16.8196, -20.1124, -7.602)
    olivia:setrot(0, 204.316, 0)
    olivia:play_chore(ol_dies_talk2sal, "ol_dies.cos")
    system:unlock_display()
    sleep_for(500)
    olivia:run_chore(ol_dies_prespit, "ol_dies.cos")
    olivia:wait_for_message()
    salvador:ignore_boxes()
    salvador:setpos(16.8196, -20.1124, -7.602)
    salvador:setrot(0, 204.316, 0)
    salvador:play_chore(ol_dies_sal_talk_hold2, "ol_dies.cos")
    olivia:play_chore(ol_dies_talk_hold2, "ol_dies.cos")
    salvador:say_line("/hisa013/")
    music_state:set_sequence(seqSalvadorDeath)
    me.sal_music = FALSE
    music_state:update(system.currentSet)
    salvador:wait_for_message()
    salvador:say_line("/hisa014/")
    salvador:wait_for_message()
    salvador:set_visibility(FALSE)
    salvador:set_speech_mode(MODE_BACKGROUND)
    salvador:say_line("/hisa013b/")
    olivia:play_chore(ol_dies_spit, "ol_dies.cos")
    sleep_for(500)
    olivia:say_line("/hiol015/")
    salvador:say_line("/hisa016/")
    olivia:wait_for_chore(ol_dies_spit, "ol_dies.cos")
    olivia:play_chore(ol_dies_run, "ol_dies.cos")
    start_sfx("zw_trail.wav")
    manny:put_in_set(me)
    manny:setpos(17.6851, -20.1075, -7.80871)
    manny:setrot(0, 42.4447, 0)
    manny:default()
    manny:follow_boxes()
    manny:head_look_at_point(me.ol_run_point)
    manny:set_walk_rate(0.5)
    start_script(manny.walk_and_face, manny, 17.3648, -19.7388, -7.84155, 0, 175.622, 0)
    sleep_for(2000)
    start_sfx("salSprt.wav")
    me.salvador_obj:onGround()
    manny:head_look_at(me.salvador_obj)
    sleep_for(500)
    olivia:wait_for_message()
    olivia:say_line("/hiol017/")
    sleep_for(1000)
    system:lock_display()
    me:current_setup(me_carla)
    olivia:setpos(17.0536, -20.7594, -7.798)
    olivia:setrot(0, 226.5, 0)
    me.salflowers:here()
    me.suitcase:setUp()
    system:unlock_display()
    olivia:play_chore(ol_dies_run, "ol_dies.cos")
    olivia:wait_for_chore(ol_dies_run, "ol_dies.cos")
    olivia:wait_for_message()
    END_CUT_SCENE()
    me.setup_part3()
end
me.salvador_goodbye_override = function() -- line 326
    kill_override()
    salvador.sprouted = TRUE
    stop_script(me.olivia_search_idles)
    stop_script(me.ol_scoot_in)
    stop_script(me.ol_scoot_out)
    me:setup_part3()
    manny:default()
    manny:setpos(17.3648, -19.7388, -7.84155)
    manny:setrot(0, 175.622, 0)
    me:current_setup(me_carla)
    system:unlock_display()
end
Atest = function() -- line 340
    local local1, local2, local3, local4
    if not me.sals_body.act then
        me.sals_body:setup()
    end
    while 1 do
        local1 = manny:get_positive_yaw_to_point({ x = me.sals_body.obj_x, y = me.sals_body.obj_y, z = me.sals_body.obj_z })
        local4 = manny:get_positive_rot()
        local3 = local4.y
        local2 = abs(local1 - local3)
        if local2 > 180 then
            local2 = 360 - local2
        end
        ExpireText()
        print_temporary("gpytp:" .. local1 .. ", posrot: " .. local3 .. ", diff: " .. local2)
        break_here()
    end
end
Xangle_to_obj = function(arg1) -- line 362
    local local1, local2, local3, local4
    local1 = manny:get_positive_yaw_to_point({ x = arg1.obj_x, y = arg1.obj_y, z = arg1.obj_z })
    local4 = manny:get_positive_rot()
    local3 = local4.y
    local2 = abs(local1 - local3)
    if local2 > 180 then
        local2 = 360 - local2
    end
    return local2
end
me.sal_detector = function() -- line 376
    local local1, local2
    while 1 do
        if object_proximity(me.salvador_obj) < 0.89999998 then
            if abs(Xangle_to_obj(me.salvador_obj)) < 90 then
                me.ticket:activated(me.salvador_obj)
                if not me.detected_head then
                    me.detected_head = TRUE
                    me.ticket:lookAt(me.salvador_obj)
                end
            else
                me.ticket:dormant()
            end
        else
            local1 = object_proximity(me.sals_body)
            if local1 < 3 then
                if GetAngleBetweenActors(manny.hActor, me.sals_body.interest_actor.hActor) < 35 then
                    if local1 < 0.5 then
                        start_script(me.tix_fly_to_body)
                    else
                        me.ticket:activated(me.sals_body)
                    end
                    if not me.detected_body then
                        me.detected_body = TRUE
                        me.ticket:lookAt()
                    end
                else
                    me.ticket:dormant()
                end
            else
                me.ticket:dormant()
            end
        end
        break_here()
    end
end
me.tix_fly_to_body = function() -- line 427
    local local1, local2, local3 = GetActorNodeLocation(manny.hActor, 12)
    local local4
    local local5 = manny:getpos()
    stop_script(me.sal_detector)
    START_CUT_SCENE()
    me.ticket:put_in_limbo()
    me.ticket.active = FALSE
    fade_sfx("tixvibe.imu")
    me.ticket:dormant(TRUE)
    if not sals_ticket then
        sals_ticket = Actor:create()
    end
    sals_ticket:ignore_boxes()
    sals_ticket:set_costume("tix.cos")
    sals_ticket:put_in_set(me)
    sals_ticket:setpos(local1, local2, local3)
    sals_ticket:setrot(manny:getrot())
    sals_ticket:play_chore_looping(0)
    manny:stop_chore(md_activate_ticket, "md.cos")
    manny:stop_chore(md_activate_tix_nowig, "md.cos")
    repeat
        break_here()
        sals_ticket:offsetBy(0, 0, -0.050000001)
        local4 = sals_ticket:getpos()
        manny:head_look_at(sals_ticket)
    until local4.z <= local5.z
    manny:stop_chore(md_hand_on_obj, "md.cos")
    manny:stop_chore(md_hold, "md.cos")
    sals_ticket:follow_boxes()
    sals_ticket:set_walk_rate(0.40000001)
    start_script(sals_ticket.walkto, sals_ticket, me.sals_body.obj_x, me.sals_body.obj_y, me.sals_body.obj_z)
    while find_script(sals_ticket.walkto) do
        manny:head_look_at(sals_ticket)
        break_here()
    end
    sals_ticket:wait_for_actor()
    sals_ticket:ignore_boxes()
    sals_ticket:offsetBy(0, 0, 0.050000001)
    manny:head_look_at(sals_ticket)
    END_CUT_SCENE()
    me:cut_flowers()
end
me.cut_flowers = function(arg1) -- line 480
    START_CUT_SCENE()
    manny:walkto_object(me.sals_body)
    manny:wait_for_actor()
    manny:set_rest_chore(nil)
    manny:run_chore(md_takeout_scythe, "md.cos")
    stop_sound("tixvibe.imu")
    start_script(cut_scene.cut_flowers)
    me.sals_body:setup()
    wait_for_script(cut_scene.cut_flowers)
    manny:stop_chore(md_takeout_scythe, "md.cos")
    manny:run_chore(md_putback_scythe, "md.cos")
    manny:stop_chore(md_putback_scythe, "md.cos")
    manny:set_rest_chore(md_rest, "md.cos")
    END_CUT_SCENE()
end
me.search_salvador = function(arg1) -- line 500
    START_CUT_SCENE()
    salvador.searched = TRUE
    manny:push_costume("md_search_sal.cos")
    manny:run_chore(md_search_sal_search, "md_search_sal.cos")
    manny:stop_chore(md_search_sal_search, "md_search_sal.cos")
    manny:pop_costume()
    manny:generic_pickup(me.key)
    me.key:lookAt()
    END_CUT_SCENE()
    me.car:setup()
end
me.kill_hector = function() -- line 520
    me.hector_dying = TRUE
    cur_puzzle_state[60] = TRUE
    hector.dying = TRUE
    me.shootout_music = TRUE
    music_state:update()
    START_CUT_SCENE()
    manny:wait_for_actor()
    start_script(me.manny_shoot)
    sleep_for(200)
    manny:set_visibility(FALSE)
    StartMovie("me_tank.snm")
    sleep_for(100)
    start_sfx("me_gun.wav", nil, 100)
    sleep_for(200)
    start_sfx("me_gun.wav", nil, 127)
    sleep_for(300)
    start_sfx("me_gun.wav", nil, 80)
    sleep_for(200)
    start_sfx("me_gun.wav", nil, 127)
    while sound_playing("me_gun.wav") do
        break_here()
    end
    wait_for_movie()
    me.darts:play_chore(0)
    manny:set_visibility(TRUE)
    music_state:update()
    start_sfx("me_tank3.wav", IM_HIGH_PRIORITY, 127)
    set_pan("me_tank3.wav", 0)
    fade_pan_sfx("me_tank3.wav", 7000, 80)
    fade_sfx("me_tank3.wav", 7000, 50)
    sleep_for(1000)
    manny:head_look_at_point({ x = -3.55053, y = -15.6068, z = -5.94586 }, 40)
    sleep_for(1000)
    manny:head_look_at_point({ x = -3.50753, y = -13.8818, z = -5.94186 }, 40)
    sleep_for(3000)
    manny:head_look_at_point({ x = -3.91453, y = -8.2748, z = -2.72986 }, 40)
    sleep_for(3000)
    wait_for_sound("me_tank3.wav")
    set_vol("mePump.imu", 0)
    start_script(cut_scene.hecgetit)
    me.gun:put_away()
    manny:head_look_at(me.greenhouse)
    wait_for_script(cut_scene.hecgetit)
    set_vol("mePump.imu", me.water_pump_vol)
    me.end_music = TRUE
    music_state:update()
    hector:say_line("/mehe040/", { volume = 25 })
    wait_for_message()
    sleep_for(750)
    hector:say_line("/mehe041/", { volume = 25 })
    wait_for_message()
    manny:turn_toward_entity(me.greenhouse)
    stop_script(hector.run_around_nervously)
    start_script(hector.part_1_idle)
    END_CUT_SCENE()
    hector:say_line("/mehe042/", { volume = 25 })
    wait_for_message()
    if not manny:is_moving() then
        manny:twist_head_gesture()
    end
    manny:say_line("/tuma048/")
    manny:head_look_at(nil)
end
me.blow_hector_up = function() -- line 611
    START_CUT_SCENE("no head")
    stop_script(hector.run_around_nervously)
    stop_script(hector.part_1_idle)
    cameraman_disabled = TRUE
    me:current_setup(me_dorcu)
    manny:put_at_object(me.door)
    manny:push_costume("md_green_door.cos")
    manny:push_costume("md_green_door.cos")
    if manny.is_holding ~= me.gun then
        manny:run_chore(md_take_out_get, "md.cos")
        manny:stop_chore(md_take_out_get, "md.cos")
        manny:complete_chore(md_activate_gun, "md.cos")
        manny:run_chore(md_takeout_big, "md.cos")
        manny.is_holding = he.gun
    end
    manny:complete_chore(md_green_door_show_gun, "md_green_door.cos")
    manny:set_time_scale(0.2)
    manny:play_chore(md_green_door_open_door, "md_green_door.cos")
    sleep_for(2000)
    me:current_setup(me_shtgh)
    manny:play_chore(md_green_door_open_door, "md_green_door.cos")
    sleep_for(3000)
    me:current_setup(me_dorcu)
    manny:set_time_scale(1)
    fade_sfx("scaryMus.imu", 700, 0)
    play_movie("me_splat.snm", 135, 30)
    wait_for_movie()
    PreRender(FALSE, FALSE)
    stop_script(TrackManny)
    manny:free()
    hector:free()
    start_script(cut_scene.hecdie, cut_scene)
    wait_for_script(cut_scene.hecdie)
    wait_for_movie()
    start_script(cut_scene.byebye, cut_scene)
    END_CUT_SCENE()
end
hector.part_1_idle = function() -- line 650
    hector:meadow_default()
    hector:put_in_set(me)
    hector:follow_boxes()
    hector:setpos(-2.65024, 0.658079, 0.266058)
    hector:setrot(0, 72.3787, 0)
    hector:complete_chore(he_greenhouse_hide_gun, "he_greenhouse.cos")
    while 1 do
        hector:setrot(0, 65 + 14 * random(), 0, TRUE)
        hector:fade_in_chore(he_greenhouse_shoot_to_aim, "he_greenhouse.cos")
        sleep_for(1000 + 3000 * random())
        hector:setrot(0, 65 + 14 * random(), 0, TRUE)
        hector:fade_out_chore(he_greenhouse_shoot_to_aim, "he_greenhouse.cos")
        sleep_for(1000 + 3000 * random())
        hector:setrot(0, 65 + 14 * random(), 0, TRUE)
        hector:fade_in_chore(he_greenhouse_aim_pos, "he_greenhouse.cos")
        sleep_for(1000 + 3000 * random())
        hector:setrot(0, 65 + 14 * random(), 0, TRUE)
        hector:fade_out_chore(he_greenhouse_aim_pos, "he_greenhouse.cos", 2000)
        sleep_for(1000 + 3000 * random())
    end
end
me.meadow_setup = function() -- line 679
    me.seen_intro = TRUE
    START_CUT_SCENE()
    mo.scythe:free()
    me.greenhouse_approach_music = TRUE
    music_state:update()
    box_off("return_trigger")
    cameraman_disabled = TRUE
    LoadCostume("md.cos")
    LoadCostume("ol_gun.cos")
    LoadCostume("md_out_car.cos")
    me:switch_to_set()
    me:current_setup(me_carla)
    olivia:free()
    manny:put_in_set(nil)
    IrisDown(447, 333, 0)
    me.brakeson:complete_chore(0)
    IrisUp(447, 333, 750)
    start_sfx("me_idlof.wav", nil, 0)
    set_pan("me_idlof.wav", 80)
    fade_sfx("me_idlof.wav", 500, 127)
    sleep_for(2000)
    me.brakeson:complete_chore(1)
    sleep_for(1000)
    set_override(me.meadow_setup_override)
    olivia:meadow_default()
    olivia:setpos(16.9008, -19.0563, -7.83171)
    olivia:setrot(0, 76.592, 0)
    olivia:put_in_set(me)
    manny:ignore_boxes()
    if manny:get_costume() ~= "md_out_car.cos" then
        manny:push_costume("md_out_car.cos")
    end
    manny:setpos(17.3898, -19.8948, -7.73594)
    manny:setrot(0, 121.281, 0)
    manny:set_rest_chore(nil)
    olivia:play_chore(ol_gun_exit_car, "ol_gun.cos")
    sleep_for(2000)
    start_script(me.meadow_setup_lines)
    sleep_for(3000)
    manny:put_in_set(me)
    manny:play_chore(0)
    sleep_for(3000)
    manny:wait_for_chore(0)
    manny:default()
    manny:setpos(17.5089, -19.8846, -7.82701)
    manny:setrot(0, 114.323, 0)
    me:current_setup(me_olvms)
    cameraman_disabled = TRUE
    manny:say_line("/mema003/")
    sleep_for(1500)
    manny:setrot(0, 163.216, 0, TRUE)
    manny:wait_for_message()
    olivia:say_line("/meol004/")
    sleep_for(1000)
    manny:walkto(17.2124, -20.0749, -7.84546)
    manny:wait_for_actor()
    manny:walkto(16.5468, -19.9913, -7.90947)
    manny:wait_for_actor()
    manny:setpos(15.7866, -19.4642, -8.01275)
    manny:setrot(0, 59.4728, 0)
    me:current_setup(me_carla)
    me.backdoor:play_chore(me_backdoor_closing)
    manny:walkto(14.8248, -18.9458, -8.11348)
    olivia:play_chore(ol_gun_gesture, "ol_gun.cos")
    olivia:wait_for_message()
    manny:head_look_at(me.olivia_obj)
    olivia:say_line("/meol005/")
    olivia:wait_for_message()
    me:current_setup(me_carla)
    manny:default()
    manny:head_look_at(nil)
    olivia:head_look_at(nil)
    stop_script(manny.walk_and_face)
    manny:setpos(15.0038, -19.01, -8.09936)
    manny:setrot(0, 277.84, 0, TRUE)
    box_on("return_trigger")
    cameraman_disabled = FALSE
    END_CUT_SCENE()
end
hector.meadow_default = function(arg1) -- line 775
    hector:free()
    hector:set_costume("he_praise.cos")
    hector:set_mumble_chore(he_praise_mumble)
    hector:set_talk_chore(1, he_praise_stop_talk)
    hector:set_talk_chore(2, he_praise_a)
    hector:set_talk_chore(3, he_praise_c)
    hector:set_talk_chore(4, he_praise_e)
    hector:set_talk_chore(5, he_praise_f)
    hector:set_talk_chore(6, he_praise_l)
    hector:set_talk_chore(7, he_praise_m)
    hector:set_talk_chore(8, he_praise_o)
    hector:set_talk_chore(9, he_praise_t)
    hector:set_talk_chore(10, he_praise_u)
    hector:push_costume("he_greenhouse.cos")
    hector:set_walk_chore(he_greenhouse_run_cycle, "he_greenhouse.cos")
    hector:set_head(5, 6, 7, 165, 28, 80)
    hector:set_walk_rate(1.5)
    hector:set_turn_rate(360)
    hector:set_rest_chore(he_greenhouse_crouch_rest, "he_greenhouse.cos")
end
me.meadow_setup_override = function() -- line 797
    stop_script(me.meadow_setup_lines)
    kill_override()
    me:switch_to_set()
    me:current_setup(me_carla)
    olivia:meadow_default()
    olivia:setpos(16.9008, -19.0563, -7.83171)
    olivia:setrot(0, 76.592, 0)
    olivia:put_in_set(me)
    olivia:play_chore(ol_gun_defpose, "ol_gun.cos")
    olivia:head_look_at(nil)
    single_start_script(hector.part_1_idle)
    me.brakeson:complete_chore(1)
    manny:default()
    manny:setpos(15.0038, -19.01, -7.97882)
    manny:setrot(0, 67.2536, 0)
    manny:head_look_at(nil)
    me.backdoor:complete_chore(me_backdoor_closed)
    me.frontdoor:complete_chore(me_frontdoor_closed)
    box_on("return_trigger")
    box_off("me_salcu")
    cameraman_disabled = FALSE
    system:unlock_display()
end
me.meadow_setup_lines = function() -- line 822
    olivia:say_line("/meol001/")
    wait_for_message()
    olivia:say_line("/meol002/")
end
me.setup_part2 = function() -- line 828
    single_start_script(hector.part_1_idle)
    manny.healed = TRUE
    me.backdoor:play_chore(me_backdoor_open)
    olivia:meadow_default()
    olivia:push_costume("ol_suitcase.cos")
    olivia:setpos(18.5508, -19.8835, -7.81814)
    olivia:setrot(0, 288.887, 0)
    olivia:put_in_set(me)
    me.olivia_obj:behindCar()
    salvador:free()
    salvador:set_costume("ol_dies.cos")
    salvador:set_mumble_chore(ol_dies_mumble)
    salvador:set_talk_chore(1, ol_dies_no_talk)
    salvador:set_talk_chore(2, ol_dies_a)
    salvador:set_talk_chore(3, ol_dies_c)
    salvador:set_talk_chore(4, ol_dies_e)
    salvador:set_talk_chore(5, ol_dies_f)
    salvador:set_talk_chore(6, ol_dies_l)
    salvador:set_talk_chore(7, ol_dies_m)
    salvador:set_talk_chore(8, ol_dies_o)
    salvador:set_talk_chore(9, ol_dies_t)
    salvador:set_talk_chore(10, ol_dies_u)
    salvador:complete_chore(ol_dies_just_head, "ol_dies.cos")
    salvador:ignore_boxes()
    salvador:setpos(16.988, -19.828, -7.74)
    salvador:setrot(0, 190.282, 0)
    salvador:complete_chore(ol_dies_sal_eyes_closed, "ol_dies.cos")
    salvador:put_in_set(me)
    me.salvador_obj:make_touchable()
    box_off("ol_car1")
    box_off("ol_car2")
    box_off("ol_car3")
    box_off("ol_car4")
    box_off("ol_car5")
    box_off("ol_car6")
    box_off("ol_car65")
    box_off("ol_car7")
    box_off("ol_car8")
    box_off("ol_car9")
    box_off("ol_car10")
    box_off("ol_car11")
    box_off("ol_car12")
    box_off("ol_car13")
    box_off("suitcase1")
    box_off("suitcase2")
    box_off("backdoor_box")
    box_off("return_trigger")
    box_on("me_salcu")
    if not me.door_flowers.hObjectState then
        me.door_flowers.hObjectState = me:add_object_state(me_carla, "me_door_flowers.bm", "me_door_flowers.zbm", OBJSTATE_STATE, TRUE)
        me.door_flowers:set_object_state("me_door_flowers.cos")
    end
    start_script(me.olivia_search_idles)
end
me.salcu_setup = function(arg1) -- line 894
    manny:setpos(17.6867, -19.4394, -7.84747)
    me.sal_music = TRUE
    music_state:update(system.currentSet)
end
me.setup_part3 = function() -- line 902
    if me.gun.owner == manny then
        me.setup_shootout()
    end
    if me.shootout_begun then
        stop_script(hector.part_1_idle)
    else
        single_start_script(hector.part_1_idle)
    end
    stop_script(me.olivia_search_idles)
    olivia:free()
    me.olivia_obj:make_untouchable()
    manny.healed = TRUE
    salvador.sprouted = TRUE
    box_off("return_trigger")
    me.backdoor:complete_chore(me_backdoor_open)
    box_off("backdoor_box")
    if me.ticket_free and not me.plucked_ticket then
        me.salflowers:haveTicket()
    else
        me.salflowers:noTicket()
    end
    salvador:free()
    me.salvador_obj:onGround()
    if not me.scy then
        me.scy = Actor:create()
    end
    me.scy:set_costume("scythe_folded.cos")
    me.scy:put_in_set(me)
    me.scy:ignore_boxes()
    me.scy:set_visibility(TRUE)
    me.scy:setpos(18.6811, -19.8932, -7.73316)
    me.scy:setrot(80, 180, 120)
    me.suitcase:setUp()
    me.car:setup()
    box_on("ol_car1")
    box_on("ol_car2")
    box_on("ol_car3")
    box_on("ol_car4")
    box_on("ol_car5")
    box_on("ol_car6")
    box_on("ol_car65")
    box_on("ol_car7")
    box_on("ol_car8")
    box_on("ol_car9")
    box_on("ol_car10")
    box_on("ol_car11")
    box_on("ol_car12")
    box_on("ol_car13")
    box_on("me_salcu")
    box_off("suitcase1")
    box_off("suitcase2")
    box_off("me_salcu")
    me.salflowers:here()
end
me.update_meadow_states = function() -- line 967
    if manny.healed then
        if salvador.sprouted then
            me.setup_part3()
        else
            me.setup_part2()
        end
    else
        me.meadow_setup_override()
    end
end
me.pm = function() -- line 979
    me:current_setup(me_carla)
    manny:setpos(15.0038, -19.01, -7.97882)
    manny:setrot(0, 67.2536, 0)
end
me.update_music_state = function(arg1) -- line 990
    if me.end_music then
        return stateEND
    elseif me.shootout_music then
        return stateSHOOT
    elseif me.greenhouse_approach_music then
        return stateGE
    elseif me.sal_music then
        return stateHI
    else
        return stateME
    end
end
me.enter = function(arg1) -- line 1004
    box_off("return_trigger")
    if salvador.sprouted then
        me.olivia_obj:make_untouchable()
        me.suitcase:make_touchable()
    end
    me.backdoor.hObjectState = me:add_object_state(me_carla, "me_backdoor.bm", "me_backdoor.zbm", OBJSTATE_STATE, FALSE)
    me.backdoor:set_object_state("me_backdoor.cos")
    me.salflowers.hObjectState = me:add_object_state(me_carla, "me_salflowers.bm", "me_salflowers.zbm", OBJSTATE_STATE, TRUE)
    me.salflowers:set_object_state("me_salflowers.cos")
    me.brakeson.hObjectState = me:add_object_state(me_carla, "me_brakeson.bm", nil, OBJSTATE_STATE, FALSE)
    me.brakeson:set_object_state("me_brakeson.cos")
    me.frontdoor.hObjectState = me:add_object_state(me_carla, "me_frontdoor.bm", nil, OBJSTATE_STATE, FALSE)
    me.frontdoor:set_object_state("me_frontdoor.cos")
    me.update_meadow_states()
    if me:current_setup() == me_pmpws then
        start_sfx("mePump.imu", IM_HIGH_PRIORITY, me.water_pump_vol)
        set_pan("mePump.imu", me.water_pump_pan)
    end
    start_script(me.get_nitro, me)
    SetShadowColor(10, 10, 18)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 16.7109, -18.3754, -5.18197)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 16.7109, -18.3754, -5.18197)
    SetActorShadowPlane(manny.hActor, "shadow20")
    AddShadowPlane(manny.hActor, "shadow20")
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, 16.7109, -18.3754, -5.18197)
    SetActorShadowPlane(manny.hActor, "shadow21")
    AddShadowPlane(manny.hActor, "shadow21")
end
me.get_nitro = function(arg1) -- line 1054
    break_here()
    si.nitrogen:get()
end
me.exit = function(arg1) -- line 1059
    if sound_playing("mePump.imu") then
        stop_sound("mePump.imu")
    end
    if sound_playing("scaryMus.imu") then
        stop_sound("scaryMus.imu")
    end
    KillActorShadows(manny.hActor)
    stop_script(me.olivia_search_idles)
end
me.camerachange = function(arg1, arg2, arg3) -- line 1073
    if arg3 == me_salcu and cutSceneLevel == 0 and not salvador.sprouted and manny.healed then
        me:salcu_setup()
    end
    if arg3 == me_shtgh then
        hector:set_visibility(TRUE)
    else
        hector:set_visibility(FALSE)
    end
    if me.sals_body.touchable then
        if arg3 == me_rerha then
            me.sals_body.act:set_visibility(TRUE)
        else
            me.sals_body.act:set_visibility(FALSE)
        end
    end
    if arg3 == me_carla and hector.dying then
        manny:say_line("/mema055/I can't leave until I know Hector is finished.")
    end
    if arg3 == me_pmpws then
        start_sfx("mePump.imu", IM_HIGH_PRIORITY, me.water_pump_vol)
        set_pan("mePump.imu", me.water_pump_pan)
    elseif sound_playing("mePump.imu") then
        fade_sfx("mePump.imu")
    end
    if arg3 == me_dorcu and me.hector_dying then
        start_sfx("scaryMus.imu")
    end
    music_state:update()
end
me.door_flowers = Object:create(me, "", 0, 0, 0, { range = 0 })
me.door_flowers:make_untouchable()
me.door_flowers.here = function(arg1) -- line 1124
    if not me.door_flowers.hObjectState then
        me.door_flowers.hObjectState = me:add_object_state(me_carla, "me_door_flowers.bm", "me_door_flowers.zbm", OBJSTATE_STATE, TRUE)
        me.door_flowers:set_object_state("me_door_flowers.cos")
    end
    SendObjectToFront(me.door_flowers.hObjectState)
    me.door_flowers:complete_chore(0)
    ForceRefresh()
end
me.darts = Object:create(me, "", 0, 0, 0, { range = 0 })
me.darts:make_untouchable()
me.backdoor = Object:create(me, "", 0, 0, 0, { range = 0 })
me.brakeson = Object:create(me, "", 0, 0, 0, { range = 0 })
me.frontdoor = Object:create(me, "", 0, 0, 0, { range = 0 })
me.salflowers = Object:create(me, "", 0, 0, 0, { range = 0 })
me.salflowers.here = function(arg1) -- line 1143
    arg1:complete_chore(0)
    box_off("flower_box1")
    box_off("flower_box2")
    box_off("flower_box3")
    box_off("flower_box4")
    break_here()
    me.door_flowers:here()
end
me.salflowers.haveTicket = function(arg1) -- line 1153
    if not sals_ticket then
        sals_ticket = Actor:create()
    end
    sals_ticket:set_costume("tix.cos")
    sals_ticket:put_in_set(me)
    sals_ticket:ignore_boxes()
    sals_ticket:set_visibility(TRUE)
    sals_ticket:setpos(17.1435, -19.8446, -7.74288)
    sals_ticket:setrot(0, 0, 0)
    sals_ticket:play_chore_looping(0, "tix.cos")
end
me.salflowers.noTicket = function(arg1) -- line 1171
    if not sals_ticket then
        sals_ticket = Actor:create()
    end
    sals_ticket:free()
end
me.leave_cu = { }
me.leave_cu.walkOut = function(arg1) -- line 1177
    me:current_setup(me_carla)
    manny:setpos(17.376, -20.0511, -7.8316)
end
me.return_trigger = { }
me.return_trigger.walkOut = function(arg1) -- line 1185
    if not manny.shot then
        start_script(me.pester_olivia)
    elseif not salvador.sprouted then
        start_script(me.setup_part2)
    elseif hi.ticket.owner == manny then
        start_script(me.ticket_radar)
    end
end
me.key = Object:create(me, "/metx043/trunk key", 0, 0, 0, { range = 0 })
me.key.string_name = "key"
me.key.wav = "getmekey.wav"
me.key.lookAt = function(arg1) -- line 1199
    manny:say_line("/mema044/")
end
me.key.use = function(arg1) -- line 1203
    manny:say_line("/mema045/")
end
me.key.default_response = me.key.use
me.gun = Object:create(me, "/metx046/gun", 0, 0, 0, { range = 0 })
me.gun.wav = "fi_grbgn.wav"
me.gun.lookAt = function(arg1) -- line 1211
    manny:say_line("/fima074/")
end
me.gun.use = function(arg1) -- line 1215
    if me:current_setup() == me_rerha then
        system.default_response("not here")
    elseif me:current_setup() == me_shtgh then
        single_start_script(me.shootout)
    else
        START_CUT_SCENE()
        manny:push_costume("md_shooting.cos")
        manny:stop_chore(md_activate_gun, "md.cos")
        manny:stop_chore(md_hold, "md.cos")
        manny:run_chore(md_shooting_pose, "md_shooting.cos")
        manny:say_line("/fima070/")
        manny:wait_for_message()
        manny:blend(md_shooting_pose_down, md_shooting_pose, 750, "md_shooting.cos")
        manny:say_line("/atma011/")
        start_script(manny.blend, manny, md_activate_gun, md_shooting_pose_down, 500, "md.cos", "md_shooting.cos")
        sleep_for(200)
        manny:play_chore(md_hold, "md.cos")
        manny:pop_costume()
        END_CUT_SCENE()
    end
end
me.gun.default_response = function(arg1) -- line 1239
    manny:say_line("/fima071/")
end
me.gun.get = function(arg1) -- line 1243
    me.setup_shootout()
    Object.get(me.gun)
end
me.suitcase = Object:create(me, "/metx047/suitcase", 18.7031, -19.8342, -7.7641602, { range = 0.60000002 })
me.suitcase.use_pnt_x = 18.479099
me.suitcase.use_pnt_y = -19.8132
me.suitcase.use_pnt_z = -7.8141599
me.suitcase.use_rot_x = 0
me.suitcase.use_rot_y = 262.80801
me.suitcase.use_rot_z = 0
me.suitcase:make_untouchable()
me.suitcase.setUp = function(arg1) -- line 1269
    if not arg1.act then
        arg1.act = Actor:create()
    end
    arg1.act:set_costume("ol_suitcase.cos")
    arg1.act:put_in_set(me)
    arg1.act:setpos(18.5508, -19.8835, -7.81814)
    arg1.act:setrot(0, 288.887, 0)
    arg1.act:play_chore(ol_suitcase_suitcase_closed)
    arg1:make_touchable()
end
me.suitcase.lookAt = function(arg1) -- line 1279
    manny:say_line("/mema048/")
end
me.suitcase.pickUp = function(arg1) -- line 1283
    manny:say_line("/mema049/")
end
me.suitcase.open = function(arg1) -- line 1287
    arg1.act:play_chore(ol_suitcase_suitcase_open, "ol_suitcase.cos")
end
me.suitcase.use = function(arg1) -- line 1291
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        if not me.ticket_free then
            me.ticket_free = TRUE
            LoadCostume("tix_hop.cos")
            manny:walkto(arg1)
            manny:wait_for_actor()
            manny:play_chore(md_reach_low, "md.cos")
            sleep_for(1000)
            arg1:open()
            manny:wait_for_chore(md_reach_low, "md.cos")
            manny:stop_chore(md_reach_low, "md.cos", 500)
            manny:say_line("/lyma009/")
            wait_for_message()
            manny:say_line("/mnma043/")
            manny:play_chore(md_reach_low, "md.cos")
            sleep_for(1000)
            start_script(me.ticket.hop_out_of_suitcase)
            manny:complete_chore(md_activate_folded_scythe, "md.cos")
            me.scy:free()
            sleep_for(1000)
            manny:wait_for_chore(md_reach_low, "md.cos")
            manny:stop_chore(md_reach_low, "md.cos")
            manny:head_look_at(me.salvador_obj)
            manny:turn_toward_entity(me.salvador_obj)
            wait_for_script(me.ticket.hop_out_of_suitcase)
            manny:say_line("/mema050/")
            manny:fade_in_chore(md_putback_small, "md.cos", 750)
            sleep_for(750)
            manny:stop_chore(md_activate_folded_scythe, "md.cos")
            manny:wait_for_chore(md_putback_small, "md.cos")
            manny:stop_chore(md_putback_small, "md.cos")
            manny:run_chore(md_takeout_empty, "md.cos")
            manny:fade_out_chore(md_takeout_empty, "md.cos")
            mo.scythe:get()
            wait_for_message()
            manny:stop_chore()
        else
            manny:twist_head_gesture()
            manny:say_line("/mema051/")
        end
        END_CUT_SCENE()
    end
end
me.olivia_obj = Object:create(me, "/metx052/Olivia", 16.499001, -19.1306, -7.3317099, { range = 0.80000001 })
me.olivia_obj.use_pnt_x = 15.7885
me.olivia_obj.use_pnt_y = -19.087601
me.olivia_obj.use_pnt_z = -7.7867098
me.olivia_obj.use_rot_x = 0
me.olivia_obj.use_rot_y = -54.771801
me.olivia_obj.use_rot_z = 0
me.olivia_obj.behindCar = function(arg1) -- line 1352
    me.olivia_obj.obj_x = 18.8026
    me.olivia_obj.obj_y = -20.2137
    me.olivia_obj.obj_z = -7.77
    me.olivia_obj.use_pnt_x = 18.0926
    me.olivia_obj.use_pnt_y = -20.2137
    me.olivia_obj.use_pnt_z = -7.77
    me.olivia_obj.use_rot_x = 0
    me.olivia_obj.use_rot_y = 264.264
    me.olivia_obj.use_rot_z = 0
    arg1:update_look_point()
end
me.olivia_obj.lookAt = function(arg1) -- line 1365
    manny:twist_head_gesture()
end
me.olivia_obj.pickUp = me.olivia_obj.lookAt
me.olivia_obj.use = me.olivia_obj.lookAt
me.car = Object:create(me, "/metx053/car", 18.214199, -19.6425, -7.36904, { range = 0.60000002 })
me.car.use_pnt_x = 18.4792
me.car.use_pnt_y = -19.8685
me.car.use_pnt_z = -7.81704
me.car.use_rot_x = 0
me.car.use_rot_y = 60.502602
me.car.use_rot_z = 0
me.car.lookAt = function(arg1) -- line 1379
    manny:say_line("/mema054/")
end
me.car.setup = function(arg1) -- line 1383
    if salvador.searched and not arg1.hObjectState then
        arg1.hObjectState = me:add_object_state(me_carla, "me_trunk.bm", nil, OBJSTATE_STATE, FALSE)
        arg1:set_object_state("me_trunk.cos")
    end
end
me.car.test = function(arg1) -- line 1390
    me.setup_part3()
    me.pm()
    salvador.searched = TRUE
    me.car:setup()
    me.gun:free()
    manny:generic_pickup(me.key)
    me.car:play_chore(me_trunk_closed)
end
me.car.use = function(arg1) -- line 1400
    if me.key.owner == manny then
        arg1:use_key()
    else
        START_CUT_SCENE()
        manny:walkto(arg1)
        manny:wait_for_actor()
        manny:run_chore(md_reach_med, "md.cos")
        manny:stop_chore(md_reach_med, "md.cos")
        END_CUT_SCENE()
        system.default_response("locked")
    end
end
me.car.use_key = function(arg1) -- line 1415
    if me.gun.owner == manny then
        manny:say_line("/fima074/")
    elseif manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:wait_for_actor()
        manny:stop_chore(nil, "md.cos")
        manny:play_chore(md_reach_med, "md.cos")
        sleep_for(300)
        start_sfx("me_keyin.wav")
        sleep_for(750)
        start_sfx("me_kytrn.wav")
        sleep_for(100)
        me.car:play_chore(me_trunk_open)
        sleep_for(750)
        manny:wait_for_chore(md_reach_med, "md.cos")
        manny:stop_chore(md_reach_med, "md.cos")
        manny:say_line("/mema056/")
        sleep_for(2000)
        manny:run_chore(md_use_obj)
        manny:stop_chore(md_use_obj)
        manny:play_chore(md_reach_high, "md.cos")
        sleep_for(1000)
        me.car:play_chore(me_trunk_close)
        manny:wait_for_chore(md_reach_high, "md.cos")
        manny:stop_chore(md_reach_high, "md.cos")
        me.key:put_in_limbo()
        manny.is_holding = nil
        manny:generic_pickup(me.gun)
        manny:turn_left(150)
        manny:head_look_at(nil)
        sleep_for(500)
        me.gun:use()
        END_CUT_SCENE()
        me.setup_shootout()
    end
end
me.car.pickUp = function(arg1) -- line 1454
    system.default_response("tow")
end
me.greenhouse = Object:create(me, "/metx057/greenhouse", -0.130422, -0.047307599, 2.8800001, { range = 10 })
me.greenhouse.use_pnt_x = 4.7495799
me.greenhouse.use_pnt_y = -3.86731
me.greenhouse.use_pnt_z = -2
me.greenhouse.use_rot_x = 0
me.greenhouse.use_rot_y = 398.32401
me.greenhouse.use_rot_z = 0
me.greenhouse.lookAt = function(arg1) -- line 1467
    if hector.dying then
        me.door:lookAt()
    elseif not me.shootout_begun then
        manny:say_line("/mema058/")
    else
        manny:say_line("/mema059/")
    end
end
me.greenhouse.use = function(arg1) -- line 1479
    me.door:use()
end
me.greenhouse.use_gun = function(arg1) -- line 1483
    me.gun:use()
end
me.door = Object:create(me, "/metx060/door", -0.025450001, -1.9213001, 0.49643999, { range = 0.60000002 })
me.door.use_pnt_x = -0.025450001
me.door.use_pnt_y = -2.2802999
me.door.use_pnt_z = -0.0022370601
me.door.use_rot_x = 0
me.door.use_rot_y = 326.013
me.door.use_rot_z = 0
me.door.lookAt = function(arg1) -- line 1496
    if not hector.dying then
        manny:say_line("/mema061/")
    else
        manny:say_line("/mema062/")
    end
end
me.door.use = function(arg1) -- line 1504
    if me.hector_dying == TRUE then
        if manny:walkto_object(arg1) then
            start_script(me.blow_hector_up)
        end
    elseif not manny.shot then
        if manny:walkto_object(arg1) then
            START_CUT_SCENE()
            me:current_setup(me_dorcu)
            manny:push_costume("md_green_door.cos")
            if manny.is_holding == me.gun then
                manny:complete_chore(md_green_door_show_gun, "md_green_door.cos")
            else
                manny:complete_chore(md_green_door_hide_gun, "md_green_door.cos")
            end
            manny:run_chore(md_green_door_touch_knob, "md_green_door.cos")
            END_CUT_SCENE()
            stop_script(hector.part_1_idle)
            me.greenhouse_approach_music = FALSE
            start_script(cut_scene.greenhse)
        end
    else
        soft_script()
        if me.gun.owner ~= manny then
            manny:say_line("/mema063/")
        else
            manny:say_line("/mema064/")
            wait_for_message()
            manny:say_line("/mema065/")
        end
    end
end
me.door.use_gun = me.door.use
me.tanks = Object:create(me, "/metx066/tanks", -3.50053, -15.7738, -5.7848601, { range = 1.2 })
me.tanks.use_pnt_x = -3.01353
me.tanks.use_pnt_y = -15.3618
me.tanks.use_pnt_z = -6.4458599
me.tanks.use_rot_x = 0
me.tanks.use_rot_y = 111.67
me.tanks.use_rot_z = 0
me.tanks.lookAt = function(arg1) -- line 1551
    soft_script()
    manny:say_line("/mema067/")
    wait_for_message()
    manny:say_line("/mema068/")
end
me.tanks.pickUp = function(arg1) -- line 1558
    system.default_response("right")
end
me.tanks.use = function(arg1) -- line 1562
    manny:say_line("/mema069/")
end
me.tanks.use_gun = function(arg1) -- line 1566
    if me.hector_dying then
        system.default_response("already")
    elseif manny:walkto(arg1) then
        start_script(me.kill_hector)
    end
end
me.salvador_obj = Object:create(me, "/hitx018/Salvador's head", 17.8153, -19.1085, -7.50105, { range = 0.89999998 })
me.salvador_obj.use_pnt_x = 17.6513
me.salvador_obj.use_pnt_y = -19.4725
me.salvador_obj.use_pnt_z = -7.7960501
me.salvador_obj.use_rot_x = 0
me.salvador_obj.use_rot_y = -25.660601
me.salvador_obj.use_rot_z = 0
me.salvador_obj.onGround = function(arg1) -- line 1585
    me.salvador_obj.obj_x = 17.0943
    me.salvador_obj.obj_y = -19.7879
    me.salvador_obj.obj_z = -7.85808
    me.salvador_obj.use_pnt_x = 17.2323
    me.salvador_obj.use_pnt_y = -19.8669
    me.salvador_obj.use_pnt_z = -7.85808
    me.salvador_obj.use_rot_x = 0
    me.salvador_obj.use_rot_y = 778.924
    me.salvador_obj.use_rot_z = 0
    arg1:update_look_point()
end
me.salvador_obj.lookAt = function(arg1) -- line 1599
    if me.ticket_free and not me.plucked_ticket then
        manny:say_line("/hima019/")
    else
        manny:say_line("/hima020/")
        if not salvador.sprouted then
            arg1:wakeUp()
        end
    end
end
me.salvador_obj.wakeUp = function(arg1) -- line 1610
    if not salvador.sprouted then
        START_CUT_SCENE()
        wait_for_message()
        END_CUT_SCENE()
        single_start_script(me.salvador_goodbye)
    end
end
me.salvador_obj.pickUp = function(arg1) -- line 1619
    if me.ticket_free and not me.plucked_ticket then
        START_CUT_SCENE()
        manny:walkto(arg1)
        manny:wait_for_actor()
        manny:play_chore(md_reach_low, "md.cos")
        me.salflowers:noTicket()
        me.plucked_ticket = TRUE
        me.ticket.active = TRUE
        manny:generic_pickup(me.ticket)
        manny:wait_for_chore(md_reach_low, "md.cos")
        manny:stop_chore(md_reach_low, "md.cos")
        me.ticket:dormant()
        manny:setrot(0, 1.07562, 0)
        manny:backup(750)
        start_script(me.sal_detector)
        END_CUT_SCENE()
    elseif salvador.sprouted then
        manny:say_line("/rema065/")
    else
        manny:say_line("/hima021/")
        arg1:wakeUp()
    end
end
me.salvador_obj.use = function(arg1) -- line 1646
    if salvador.sprouted then
        arg1:pickUp()
    else
        START_CUT_SCENE()
        manny:say_line("/lwma014/")
        manny:wait_for_message()
        END_CUT_SCENE()
        single_start_script(me.salvador_goodbye)
    end
end
me.sals_body = Object:create(me, "/metx099/Salvador's body", -0.69341803, 2.9798601, -0.47968701, { range = 0.60000002 })
me.sals_body.use_pnt_x = -0.55507398
me.sals_body.use_pnt_y = 2.74944
me.sals_body.use_pnt_z = -0.413986
me.sals_body.use_rot_x = 0
me.sals_body.use_rot_y = 28.913
me.sals_body.use_rot_z = 0
me.sals_body.touchable = FALSE
me.sals_body.setup = function(arg1) -- line 1674
    if sals_ticket then
        sals_ticket:free()
    end
    if not arg1.act then
        arg1.act = Actor:create()
    end
    arg1.act:put_in_set(me)
    arg1.act:setpos(arg1.use_pnt_x, arg1.use_pnt_y, arg1.use_pnt_z - 0.09)
    arg1.act:setrot(0, 0, 0)
    arg1.act:set_costume("sal_dead.cos")
    arg1.act:play_chore(0)
    arg1:make_touchable()
end
me.sals_body.lookAt = function(arg1) -- line 1685
    if salvador.searched then
        arg1:use()
    else
        manny:say_line("/sgma053/")
    end
end
me.sals_body.pickUp = function(arg1) -- line 1693
    manny:say_line("/rema065/")
end
me.sals_body.use = function(arg1) -- line 1697
    if salvador.searched then
        manny:say_line("/sima098/")
    elseif manny:walkto_object(arg1) then
        me:search_salvador()
    end
end
me.ticket = Object:create(me, "/hitx022/Double-N ticket", 0, 0, 0, { range = 0 })
me.ticket.wav = "getCard.wav"
me.ticket.string_name = "ticket"
me.ticket.lookAt = function(arg1) -- line 1713
    if arg1.owner == manny then
        if arg1.active then
            if arg1.activator == me.salvador_obj then
                manny:say_line("/hima019/")
            else
                manny:say_line("/hima024/")
            end
        else
            manny:say_line("/hima025/")
        end
    else
        manny:say_line("/hima023/")
    end
end
me.ticket.use = me.ticket.lookAt
me.ticket.hop_out_of_suitcase = function(arg1) -- line 1731
    if not sals_ticket then
        sals_ticket = Actor:create()
    end
    sals_ticket:set_costume("tix_hop.cos")
    sals_ticket:setpos(18.6235, -20.0066, -7.61188)
    sals_ticket:setrot(351.075, 182.103, 103.151)
    sals_ticket:put_in_set(me)
    sals_ticket:play_chore(0)
    sals_ticket:wait_for_chore(0)
    me.salflowers:haveTicket()
end
me.ticket.activated = function(arg1, arg2) -- line 1742
    arg1.activator = arg2
    if not arg1.active or arg1.to_update then
        arg1.active = TRUE
        arg1.to_update = FALSE
        manny:stop_chore(md_hold, "md.cos")
        manny:stop_chore(md_activate_tix_nowig, "md.cos")
        manny:play_chore_looping(md_activate_ticket, "md.cos")
        manny:play_chore(md_hand_on_obj, "md.cos")
        start_script(me.ticket.sound_monitor, me.ticket)
    end
end
me.ticket.sound_monitor = function(arg1) -- line 1755
    local local1, local2, local3
    single_start_sfx("tixvibe.imu", nil, 0)
    PrintDebug("starting sfx!\n")
    fade_sfx("tixvibe.imu", 500, 60)
    while 1 do
        local1 = object_proximity(me.salvador_obj)
        local2 = object_proximity(me.sals_body)
        if local1 > local2 then
            local1 = local2
        end
        if local1 < 1 then
            local1 = 1
        end
        local3 = 4 * 35 / local1
        if local3 > 64 then
            local3 = 64
        end
        if local3 < 5 then
            local3 = 5
        end
        set_vol("tixvibe.imu", local3)
        break_here()
    end
end
me.ticket.dormant = function(arg1) -- line 1777
    arg1.activator = nil
    if arg1.active or arg1.to_update then
        arg1.active = FALSE
        arg1.to_update = FALSE
        stop_script(me.ticket.sound_monitor)
        PrintDebug("stopping sfx!\n")
        fade_sfx("tixvibe.imu")
        manny:stop_chore(md_hand_on_obj, "md.cos")
        manny:stop_chore(md_activate_ticket, "md.cos")
        manny:play_chore_looping(md_hold, "md.cos")
        manny:play_chore_looping(md_activate_tix_nowig, "md.cos")
    end
end
me.ticket.takeout_flag = function(arg1) -- line 1792
    PrintDebug("starting sal_detector!\n")
    single_start_script(me.sal_detector)
    wait_for_script(close_inventory)
    arg1.to_update = TRUE
end
me.ticket.putback_flag = function(arg1) -- line 1799
    PrintDebug("stopping sal_detector!\n")
    stop_script(me.sal_detector)
    stop_script(me.ticket.sound_monitor)
    fade_sfx("tixvibe.imu")
    manny:stop_chore(md_activate_tix_nowig, "md.cos")
    manny:stop_chore(md_hand_on_obj, "md.cos")
    manny:play_chore_looping(md_activate_ticket, "md.cos")
end
membrillo_mumble = 0
membrillo_o = 1
membrillo_a = 2
membrillo_m = 3
membrillo_f = 4
membrillo_u = 5
membrillo_e = 6
membrillo_l = 7
membrillo_stop_talk = 8
membrillo_start_walk = 9
membrillo_walk = 10
membrillo_end_walk = 11
membrillo_take_detector = 12
membrillo_stop_take_detector = 13
membrillo_rest_to_work = 14
membrillo_rest_with_tool = 15
membrillo_work_start = 16
membrillo_work_start_to_end = 17
membrillo_work_end = 18
membrillo_wk_to_lk_tool = 19
membrillo_look_tool = 20
membrillo_lk_tool_to_wkst = 21
membrillo_wkst_to_rest = 22
membrillo_rest_to_lkma = 23
membrillo_lookat_manny = 24
membrillo_lkma_to_rest = 25
membrillo_wkend_to_wkst = 26
membrillo_wkend_to_rest = 27
membrillo_lktl_to_rest = 28
membrillo_swivel_rt = 29
membrillo_swivel_lf = 30
membrillo_show_tool = 31
membrillo_hide_tool = 32
membrillo_c = 33
membrillo_t = 34
membrillo_talk_to_ve_end = 0
membrillo_talk_to_ve_middle = 1
membrillo_talk_to_ve_start = 2
mem_detect_scan = 0
mem_detect_detect = 1
mem_detect_pickup_dogtags = 2
mem_idles_start_walk = 0
mem_idles_walk = 1
mem_idles_end_walk = 2
mem_idles_search1 = 3
mem_idles_search2 = 4
mem_idles_turn_back = 5
mem_idles_turn_back_hold = 6
mem_idles_return_to_idle = 7
mem_idles_rest = 8
mem_idles_search_loop = 9
mem_idles_mumble = 10
mem_idles_o = 11
mem_idles_a = 12
mem_idles_m = 13
mem_idles_f = 14
mem_idles_u = 15
mem_idles_e = 16
mem_idles_l = 17
mem_idles_stop_talk = 18
me_salflowers_here = 0
me_salflowers_gone = 1
me_trunk_open = 0
me_trunk_close = 1
me_trunk_opened = 2
me_trunk_closed = 3
me_windows_1 = 0
me_windows_2 = 1
me_windows_3 = 2
me_windows_4 = 3
me_windows_5 = 4
me_windows_6 = 5
me_windows_7 = 6
me_windows_8 = 7
me_windows_9 = 8
me_windows_10 = 9
me_windows_11 = 10
me_windows_12 = 11
me_windows_13 = 12
me_windows_14 = 13
me_windows_15 = 14
me_windows_16 = 15
me_windows_17 = 16
me_windows_18 = 17
me_windows_19 = 18
me_windows_20 = 19
me_windows_21 = 20
me_windows_22 = 21
me_windows_23 = 22
me_windows_24 = 23
me_windows_25 = 24
me_windows_26 = 25
me_windows_27 = 26
me_windows_28 = 27
me_windows_29 = 28
me_windows_30 = 29
me_windows_31 = 30
me_windows_32 = 31
me_windows_33 = 32
me_windows_34 = 33
me_windows_35 = 34
me_windows_36 = 35
me_windows_37 = 36
me_windows_38 = 37
me_windows_39 = 38
me_windows_clear_all = 39
CheckFirstTime("mf.lua")
mf = Set:create("mf.set", "Meadow Flowers", { mf_medoh = 0, mf_ovrhd = 1 })
dofile("md_dying.lua")
mf.look_right_point = { x = -0.03975, y = -0.1272, z = 0.456 }
mf.look_left_point = { x = 0.18425, y = -0.1272, z = 0.456 }
mf.look_heart_point = { x = 0.12225, y = -0.2462, z = 0.279 }
mf.look_hand_point = { x = -0.02475, y = -0.3622, z = 0.242 }
mf.roll_head = function() -- line 24
    local local1 = ceil(random() * 2)
    local local2 = 1
    repeat
        manny:head_look_at_point(mf.look_right_point)
        sleep_for(1000 + random() * 1000)
        manny:head_look_at_point(mf.look_left_point)
        sleep_for(1000 + random() * 1000)
        local2 = local2 + 1
    until local2 > local1
    manny:head_look_at(nil)
end
mf.look_at_nitro = function(arg1) -- line 37
    manny:head_look_at_point(mf.look_hand_point)
    manny:say_line("/mfma002/")
    manny:wait_for_message()
    manny:head_look_at(nil)
end
mf.use_grinder = function(arg1) -- line 44
    manny:head_look_at_point(mf.look_hand_point)
    manny:say_line("/mfma003/")
    manny:wait_for_message()
    manny:head_look_at(nil)
end
mf.setup_suffering = function() -- line 51
    manny.dying = TRUE
    manny.shot = TRUE
    mf:switch_to_set()
    manny:put_in_set(mf)
    mo.scythe:free()
    th.grinder:free()
    si.nitrogen:free()
    th.grinder:get()
    si.nitrogen:get()
    th.grinder.has_bone = FALSE
    manny:default()
    manny:ignore_boxes()
    manny:push_costume("md_dying.cos")
    manny:set_softimage_pos(0.7925, 0, 6.212)
    manny:setrot(0, 184.514, 0)
    manny:set_head(3, 4, 5, 165, 45, 80)
    system.buttonHandler = dead_button_handler
    manny:stop_chore()
    manny:play_chore(md_dying_rest, "md_dying.cos")
    start_script(mf.background_moans)
end
mf.moans = { "/mfma004/", "/mfma005/", "/mfma006/", "/mfma007/", "/mfma008/", "/mfma009/" }
mf.background_moans = function() -- line 89
    while 1 do
        sleep_for(6000 + 2000 * random())
        manny:wait_for_message()
        single_start_script(mf.roll_head)
        manny:say_line(pick_one_of(mf.moans, TRUE))
        manny:wait_for_message()
    end
end
mf.continuous_moans = function() -- line 99
    while 1 do
        manny:say_line(pick_one_of(mf.moans, TRUE))
        manny:wait_for_message()
        sleep_for(500)
    end
end
mf.flail_around = function() -- line 107
    stop_script(mf.background_moans)
    single_start_script(mf.continuous_moans)
    manny:run_chore(md_dying_flail, "md_dying.cos")
    stop_script(mf.continuous_moans)
    start_script(mf.background_moans)
end
mf.freeze_heart = function() -- line 115
    START_CUT_SCENE()
    manny:head_look_at(nil)
    stop_script(mf.background_moans)
    stop_script(mf.roll_head)
    stop_script(mf.flail_around)
    stop_script(mf.continuous_moans)
    manny:stop_chore(md_activate_nitro, "md.cos")
    manny:play_chore(md_dying_nitro, "md_dying.cos")
    sleep_for(1500)
    manny:say_line("/mfma010/")
    manny:wait_for_message()
    sleep_for(500)
    manny:say_line("/mfma011/")
    wait_for_message()
    manny:run_chore(md_dying_yank, "md_dying.cos")
    manny:say_line("/mfma012/")
    manny:wait_for_message()
    sleep_for(1000)
    me:switch_to_set()
    manny.is_holding = FALSE
    manny:default()
    manny.healed = TRUE
    manny.dying = FALSE
    manny:put_in_set(me)
    manny:follow_boxes()
    manny:setpos(4.08184, -12.6856, -7.39215)
    manny:setrot(0, 145.507, 0)
    system.buttonHandler = SampleButtonHandler
    single_start_script(WalkManny)
    start_script(me.setup_part2)
    me:current_setup(me_carla)
    manny:head_look_at(nil)
    manny:walkto(5.14629, -14.151, -8.11214)
    manny:wait_for_actor()
    start_script(me.olivia_searching)
    END_CUT_SCENE()
end
dead_button_handler = function(arg1, arg2, arg3) -- line 156
    if cutSceneLevel <= 0 then
        shiftKeyDown = GetControlState(LSHIFTKEY) or GetControlState(RSHIFTKEY)
        controlKeyDown = GetControlState(LCONTROLKEY) or GetControlState(RCONTROLKEY)
        altKeyDown = GetControlState(LALTKEY) or GetControlState(RALTKEY)
        bsKeyDown = GetControlState(BSKEY)
        stopKeyDown(arg1, arg2)
        anyModifierDown = shiftKeyDown or controlKeyDown or altKeyDown or bsKeyDown
        stop_script(mf.continuous_moans)
        if arg1 == KEY1 and arg2 or (arg1 == KEY2 and arg2) or (arg1 == KEY3 and arg2) or (arg1 == KEY4 and arg2) or (arg1 == KEY5 and arg2) or (arg1 == KEY6 and arg2) or (arg1 == KEY7 and arg2) or (arg1 == KEY8 and arg2) or (arg1 == KEY9 and arg2) or (arg1 == EQUALSKEY and arg2) or (arg1 == MINUSKEY and arg2) then
            start_script(inventory_hot_key_pressed, arg1)
        elseif control_map.MOVE_FORWARD[arg1] or control_map.MOVE_BACKWARD[arg1] or control_map.TURN_LEFT[arg1] or control_map.TURN_RIGHT[arg1] or control_map.MOVE_SOUTH[arg1] or control_map.MOVE_NORTH[arg1] or control_map.MOVE_EAST[arg1] or control_map.MOVE_WEST[arg1] or control_map.MOVE_NORTHWEST[arg1] or control_map.MOVE_NORTHEAST[arg1] or control_map.MOVE_SOUTHWEST[arg1] or control_map.MOVE_SOUTHEAST[arg1] and arg2 and not anyModifierDown then
            single_start_script(mf.flail_around)
        elseif control_map.PICK_UP[arg1] and arg2 and not anyModifierDown then
            if system.currentActor.is_holding then
                PrintDebug("putting away held item")
                start_script(dead_open_inventory, TRUE)
            else
                single_start_script(mf.wound.use, mf.wound)
            end
        elseif control_map.LOOK_AT[arg1] and arg2 and not anyModifierDown then
            if manny.is_holding then
                single_start_script(manny.is_holding.lookAt, manny.is_holding)
            else
                single_start_script(mf.wound.lookAt, mf.wound)
            end
        elseif control_map.USE[arg1] and arg2 and not anyModifierDown then
            if system.currentActor.is_holding then
                single_start_script(manny.is_holding.use, manny.is_holding)
            else
                single_start_script(mf.wound.use, mf.wound)
            end
        elseif control_map.INVENTORY[arg1] and arg2 and not anyModifierDown then
            start_script(dead_open_inventory)
        else
            CommonButtonHandler(arg1, arg2, arg3)
        end
    end
end
mf.enter = function(arg1) -- line 225
    arg1:current_setup(mf_medoh)
end
mf.exit = function(arg1) -- line 229
    stop_script(mf.background_moans)
    stop_script(mf.continuous_moans)
    stop_script(mf.roll_head)
end
mf.wound = Object:create(mf, "/mftx013/wound", 0.065250002, -0.15620001, 0.20100001, { range = 0.60000002 })
mf.wound.use_pnt_x = -0.128648
mf.wound.use_pnt_y = -0.023381701
mf.wound.use_pnt_z = -0.31999999
mf.wound.use_rot_x = 0
mf.wound.use_rot_y = -145.369
mf.wound.use_rot_z = 0
mf.wound:make_untouchable()
mf.wound.lookAt = function(arg1) -- line 251
    START_CUT_SCENE()
    manny:head_look_at_point(mf.look_heart_point)
    manny:say_line("/mfma014/")
    wait_for_message()
    manny:head_look_at(nil)
    manny:say_line("/mfma015/")
    END_CUT_SCENE()
end
mf.wound.use = function(arg1) -- line 261
    START_CUT_SCENE()
    manny:say_line("/mfma016/")
    manny:head_look_at_point(mf.look_heart_point)
    sleep_for(2000)
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
mf.wound.use_nitro = function(arg1) -- line 270
    start_script(mf.freeze_heart)
end
mf.wound.use_scythe = function(arg1) -- line 274
    mf:use_scythe()
end
CheckFirstTime("mg.lua")
mg = Set:create("mg.set", "morgue", { mg_morws = 0, mg_tblms = 1, mg_ovrhd = 2 })
mg.shrinkable = 0.01
mg.search_volume = 30
dofile("membrillo.lua")
dofile("mem_detect.lua")
dofile("mc_dogtags.lua")
membrillo.default = function(arg1) -- line 20
    membrillo:set_costume(nil)
    membrillo:set_costume("membrillo.cos")
    membrillo:set_colormap("membrill.cmp")
    membrillo:set_walk_rate(0.12)
    membrillo:set_turn_rate(20)
    membrillo:set_mumble_chore(membrillo_mumble)
    membrillo:set_talk_chore(1, membrillo_stop_talk)
    membrillo:set_talk_chore(2, membrillo_a)
    membrillo:set_talk_chore(3, membrillo_c)
    membrillo:set_talk_chore(4, membrillo_e)
    membrillo:set_talk_chore(5, membrillo_f)
    membrillo:set_talk_chore(6, membrillo_l)
    membrillo:set_talk_chore(7, membrillo_m)
    membrillo:set_talk_chore(8, membrillo_o)
    membrillo:set_talk_chore(9, membrillo_t)
    membrillo:set_talk_chore(10, membrillo_u)
    membrillo:set_turn_chores(-1, -1)
    membrillo:set_walk_chore(-1)
    membrillo:play_chore(membrillo_stop_talk)
    membrillo:follow_boxes()
    membrillo.stop_searching = FALSE
    membrillo.stop_walking = FALSE
    if membrillo.detecting then
        membrillo:complete_chore(membrillo_hide_tool, "membrillo.cos")
        membrillo:push_costume("mem_detect.cos")
    else
        membrillo:complete_chore(membrillo_show_tool, "membrillo.cos")
    end
end
membrillo.walkto_corpse = function(arg1, arg2) -- line 53
    local local1, local2
    if not arg1.detecting then
        local2 = rndint(0, 2)
        local2 = arg2.mem_pnt[local2]
        arg1:set_turn_chores(-1, -1)
        arg1:set_walk_chore(-1)
        local1 = GetActorYawToPoint(arg1.hActor, local2.x, local2.y, local2.z)
        arg1:blend(membrillo_swivel_lf, membrillo_wkend_to_rest, 500)
        arg1:setrot(0, local1, 0, TRUE)
        while arg1:is_turning() do
            break_here()
        end
        arg1.examining = nil
        arg1:blend(membrillo_walk, membrillo_swivel_lf, 1000)
        arg1:walkto(local2.x, local2.y, local2.z)
        arg1:wait_for_actor()
        mg.membrillo_obj:follow_actor()
        if not arg1.stop_walking then
            arg1:blend(membrillo_swivel_lf, membrillo_walk, 500)
            arg1:setrot(local2.pitch, local2.yaw, local2.roll, TRUE)
            while arg1:is_turning() do
                break_here()
            end
        end
        arg1:wait_for_chore(membrillo_swivel_lf, "membrillo.cos")
        arg1:stop_chore(membrillo_swivel_lf, "membrillo.cos")
        mg.membrillo_obj:follow_actor()
        arg1.examining = arg2
    else
        local2 = arg2.mem_pnt[0]
        arg1:turn_to_rot(local2.pitch, local2.yaw, local2.roll)
        mg.membrillo_obj:follow_actor()
        arg1.examining = arg2
    end
end
membrillo.turn_to_rot = function(arg1, arg2, arg3, arg4) -- line 93
    arg1:fade_in_chore(membrillo_swivel_lf, "membrillo.cos", 2000)
    arg1:setrot(arg2, arg3, arg4, TRUE)
    arg1:wait_for_actor()
    arg1:fade_out_chore(membrillo_swivel_lf, "membrillo.cos", 500)
    sleep_for(500)
end
membrillo.search_corpse = function(arg1) -- line 101
    if arg1:is_choring(membrillo_lookat_manny, FALSE, "membrillo.cos") then
        arg1:stop_chore(membrillo_lookat_manny, "membrillo.cos")
        arg1:run_chore(membrillo_lkma_to_rest, "membrillo.cos")
    end
    arg1:stop_chore(membrillo_lkma_to_rest, "membrillo.cos")
    if not arg1.detecting then
        arg1:run_chore(membrillo_rest_to_work, "membrillo.cos")
        sleep_for(500)
        arg1:stop_chore(membrillo_rest_to_work, "membrillo.cos")
        start_sfx("plntSrch.IMU", IM_HIGH_PRIORITY, mg.search_volume)
        arg1:run_chore(membrillo_work_start_to_end, "membrillo.cos")
        arg1:stop_chore(membrillo_work_start_to_end, "membrillo.cos")
        fade_sfx("plntSrch.IMU", 300)
        if rnd(8) and not arg1.stop_searching then
            arg1:run_chore(membrillo_wk_to_lk_tool, "membrillo.cos")
            sleep_for(rndint(1000, 2000))
            arg1:stop_chore(membrillo_wk_to_lk_tool, "membrillo.cos")
            arg1:run_chore(membrillo_lk_tool_to_wkst, "membrillo.cos")
            arg1:stop_chore(membrillo_lk_tool_to_wkst, "membrillo.cos")
            arg1:run_chore(membrillo_work_start_to_end, "membrillo.cos")
            arg1:stop_chore(membrillo_work_start_to_end, "membrillo.cos")
        end
        arg1:run_chore(membrillo_wkend_to_rest, "membrillo.cos")
        arg1:stop_chore(membrillo_wkend_to_rest, "membrillo.cos")
    else
        arg1:run_chore(mem_detect_scan, "mem_detect.cos")
    end
end
mg.membrillo_idle = function(arg1) -- line 132
    while system.currentSet == mg and not membrillo.stop_searching do
        if not membrillo.stop_searching then
            if membrillo.examining.tagged == 0 or not membrillo.detecting then
                membrillo:search_corpse()
            else
                membrillo.stop_searching = TRUE
                start_script(mg.find_tags, mg)
            end
        end
        if not membrillo.stop_searching then
            if not membrillo.stop_walking then
                membrillo:walkto_corpse(mg.corpse_1)
            end
            if not membrillo.stop_searching then
                if membrillo.examining.tagged == 0 or not membrillo.detecting then
                    membrillo:search_corpse()
                else
                    membrillo.stop_searching = TRUE
                    start_script(mg.find_tags)
                end
            end
        end
        if not membrillo.stop_walking and not membrillo.stop_searching then
            membrillo:walkto_corpse(mg.corpse_2)
        end
    end
end
mg.membrillo_stop_idle = function(arg1, arg2) -- line 164
    if find_script(mg.membrillo_idle) then
        membrillo.stop_searching = TRUE
        while find_script(mg.membrillo_idle) do
            break_here()
        end
        if arg2 then
            membrillo:turn_to_rot(0, 10, 0)
        end
    end
end
mg.membrillo_stop_at_corpse_2 = function(arg1) -- line 176
    if not membrillo.detecting then
        membrillo.stop_walking = TRUE
        if find_script(membrillo.walkto_corpse) then
            wait_for_script(membrillo.walkto_corpse)
        end
        if membrillo.examining ~= mg.corpse_2 then
            stop_script(mg.membrillo_idle)
            if find_script(membrillo.search_corpse) then
                wait_for_script(membrillo.search_corpse)
            end
            membrillo:walkto_corpse(mg.corpse_2)
        end
        membrillo:setrot(0, 124, 0, TRUE)
        while membrillo:is_turning() do
            break_here()
        end
    end
    membrillo.facing_manny = FALSE
    start_script(mg.membrillo_face_manny, mg)
end
mg.membrillo_face_manny = function(arg1) -- line 199
    local local1, local2
    if not membrillo.facing_manny then
        if find_script(mg.membrillo_idle) then
            membrillo.stop_searching = TRUE
            while find_script(mg.membrillo_idle) do
                break_here()
            end
        end
        if membrillo.detecting or membrillo.examining ~= mg.corpse_2 then
            local2 = manny:getpos()
            local1 = GetActorYawToPoint(membrillo.hActor, local2)
            membrillo:turn_to_rot(0, local1, 0)
        else
            membrillo:run_chore(membrillo_rest_to_lkma, "membrillo.cos")
            membrillo:stop_chore(membrillo_rest_to_lkma, "membrillo.cos")
            membrillo:play_chore_looping(membrillo_lookat_manny, "membrillo.cos")
        end
        membrillo.facing_manny = TRUE
    end
end
mg.membrillo_stop_face_manny = function(arg1) -- line 222
    if membrillo.facing_manny then
        if membrillo:is_choring(membrillo_lookat_manny, FALSE, "membrillo.cos") then
            membrillo:stop_chore(membrillo_lookat_manny, "membrillo.cos")
            membrillo:run_chore(membrillo_lkma_to_rest, "membrillo.cos")
        end
        membrillo.stop_walking = FALSE
        membrillo.stop_searching = FALSE
        membrillo.facing_manny = FALSE
        start_script(mg.membrillo_idle, mg)
    end
end
mg.find_tags = function() -- line 235
    START_CUT_SCENE("no head")
    manny:head_look_at(mg.membrillo_obj)
    membrillo:wait_for_chore(mem_detect_scan, "mem_detect.cos")
    membrillo:play_chore(mem_detect_scan, "mem_detect.cos")
    sleep_for(300)
    start_sfx("mdBeep.IMU")
    sleep_for(1200)
    stop_sound("mdBeep.IMU")
    membrillo:stop_chore(mem_detect_scan, "mem_detect.cos")
    membrillo:run_chore(mem_detect_pickup_dogtags, "mem_detect.cos")
    manny:say_line("/mgma043/")
    manny:wait_for_message()
    END_CUT_SCENE()
    start_script(cut_scene.idcorpse, cut_scene)
end
mg.set_up_actors = function(arg1) -- line 255
    local local1
    membrillo.examining = mg.corpse_2
    local1 = membrillo.examining.mem_pnt[0]
    membrillo:default()
    membrillo:put_in_set(mg)
    membrillo:setpos(local1.x, local1.y, local1.z)
    membrillo:setrot(local1.pitch, local1.yaw, local1.roll)
    if not membrillo.detecting then
        membrillo:complete_chore(membrillo_show_tool, "membrillo.cos")
    else
        membrillo:complete_chore(membrillo_hide_tool, "membrillo.cos")
    end
    if mg.met_membrillo then
        start_script(mg.membrillo_idle)
    else
        membrillo:play_chore(membrillo_work_start_to_end, "membrillo.cos")
    end
end
mg.intro = function(arg1) -- line 277
    mg.met_membrillo = TRUE
    START_CUT_SCENE("no head")
    set_override(mg.skip_intro, mg)
    start_sfx("plntSrch.IMU", IM_HIGH_PRIORITY, 10)
    manny:head_look_at(mg.membrillo_obj)
    manny:wait_for_actor()
    manny:say_line("/mgma044/")
    membrillo:wait_for_chore(membrillo_work_start_to_end, "membrillo.cos")
    membrillo:stop_chore(membrillo_work_start_to_end, "membrillo.cos")
    fade_sfx("plntSrch.IMU", 200)
    membrillo:play_chore(membrillo_wkst_to_rest, "membrillo.cos")
    membrillo:wait_for_chore(membrillo_wkst_to_rest, "membrillo.cos")
    membrillo:stop_chore(membrillo_wkst_to_rest, "membrillo.cos")
    membrillo:play_chore(membrillo_rest_to_lkma, "membrillo.cos")
    manny:wait_for_message()
    membrillo:say_line("/mgme045/")
    membrillo:wait_for_chore(membrillo_rest_to_lkma, "membrillo.cos")
    membrillo:stop_chore(membrillo_rest_to_lkma, "membrillo.cos")
    membrillo:play_chore_looping(membrillo_lookat_manny, "membrillo.cos")
    membrillo:wait_for_message()
    membrillo:say_line("/mgme046/")
    membrillo:wait_for_message()
    membrillo:say_line("/mgme047/")
    membrillo:stop_chore(membrillo_lookat_manny, "membrillo.cos")
    membrillo:run_chore(membrillo_lkma_to_rest, "membrillo.cos")
    membrillo:stop_chore(membrillo_lkma_to_rest, "membrillo.cos")
    END_CUT_SCENE()
    hot_object = nil
    manny:head_look_at(nil)
    membrillo.examining = mg.corpse_2
    start_script(mg.membrillo_idle)
end
mg.skip_intro = function(arg1) -- line 311
    kill_override()
    membrillo:setpos(mg.corpse_2.mem_pnt[0].x, mg.corpse_2.mem_pnt[0].y, mg.corpse_2.mem_pnt[0].z)
    membrillo:setrot(mg.corpse_2.mem_pnt[0].pitch, mg.corpse_2.mem_pnt[0].yaw, mg.corpse_2.mem_pnt[0].roll)
    membrillo:stop_chore(membrillo_work_start_to_end, "membrillo.cos")
    membrillo:stop_chore(membrillo_lookat_manny, "membrillo.cos")
    membrillo:stop_chore(membrillo_lkma_to_rest, "membrillo.cos")
    membrillo.examining = mg.corpse_2
    start_script(mg.membrillo_idle)
end
mg.enter = function(arg1) -- line 331
    if not find_script(cut_scene.idcorpse) then
        mg:set_up_actors()
        if system.lastSet == pc and not mg.met_membrillo then
            start_script(mg.intro, mg)
        end
    end
    SetShadowColor(10, 10, 10)
    SetActiveShadow(membrillo.hActor, 0)
    SetActorShadowPoint(membrillo.hActor, 0, 0, 1.4)
    SetActorShadowPlane(membrillo.hActor, "shadow1")
    AddShadowPlane(membrillo.hActor, "shadow1")
end
mg.exit = function(arg1) -- line 348
    if not find_script(cut_scene.idcorpse) then
        stop_script(mg.membrillo_obj.follow_actor)
        membrillo:free()
    end
    stop_sound("plntSrch.IMU")
    KillActorShadows(membrillo.hActor)
end
mg.corpse_1 = Object:create(mg, "/mgtx048/corpse 1", 0.406636, 0.059806, 0.69999999, { range = 0.60000002 })
mg.corpse_1.use_pnt_x = 0.075628698
mg.corpse_1.use_pnt_y = 0.450905
mg.corpse_1.use_pnt_z = 0.46214801
mg.corpse_1.use_rot_x = 0
mg.corpse_1.use_rot_y = -1249.99
mg.corpse_1.use_rot_z = 0
mg.corpse_1.mem_pnt = { }
mg.corpse_1.mem_pnt[0] = { x = 0.0260686, y = -0.50379997, z = 0.55000001, pitch = 0, yaw = 260.03601, roll = 0 }
mg.corpse_1.mem_pnt[1] = { x = 0.036243599, y = -0.098999999, z = 0.55000001, pitch = 0, yaw = 260.03601, roll = 0 }
mg.corpse_1.mem_pnt[2] = { x = 0.072743602, y = -0.0154999, z = 0.55000001, pitch = 0, yaw = 260.03601, roll = 0 }
mg.corpse_1.lookat_leaf_pt = { x = 0.30793899, y = -0.50279999, z = 0.94700003 }
mg.corpse_1.tagged = 0
mg.corpse_1.lookAt = function(arg1) -- line 382
    if not mg.corpse_1.seen then
        mg.corpse_1.seen = TRUE
        START_CUT_SCENE("no head")
        manny:head_look_at(mg.membrillo_obj)
        manny:say_line("/mgma049/")
        wait_for_message()
        membrillo:say_line("/mgme050/")
        wait_for_message()
        membrillo:say_line("/mgme051/")
        wait_for_message()
        manny:say_line("/mgma052/")
        wait_for_message()
        manny:say_line("/mgma053/")
        END_CUT_SCENE()
    else
        START_CUT_SCENE("no head")
        manny:head_look_at(arg1)
        manny:say_line("/mgma054/")
        wait_for_message()
        membrillo:say_line("/mgme055/")
        sleep_for(250)
        manny:head_look_at(mg.membrillo_obj)
        wait_for_message()
        manny:twist_head_gesture()
        manny:say_line("/mgma056/")
        END_CUT_SCENE()
    end
end
mg.corpse_1.pickUp = function(arg1) -- line 412
    manny:say_line("/mgma057/")
end
mg.corpse_1.use = function(arg1) -- line 416
    manny:say_line("/mgma058/")
end
mg.corpse_1.use_dog_tags = function(arg1) -- line 420
    PrintDebug("use_dog_tags with " .. arg1.name .. "\n")
    if membrillo.examining == arg1 then
        system.default_response("hes watching")
    else
        arg1.tagged = 1
        cur_puzzle_state[25] = TRUE
        START_CUT_SCENE()
        if arg1 == mg.corpse_1 then
            manny:walk_and_face(0.0400002, 0.26, 0.55, 0, 203.209, 0)
            manny:push_costume("mc_dogtags.cos")
            manny:stop_chore(mc_hold, "mc.cos")
            manny:stop_chore(mc_activate_dogtags, "mc.cos")
            manny:head_look_at(nil)
            manny:play_chore(mc_dogtags_toss_left, "mc_dogtags.cos")
            manny:wait_for_chore(mc_dogtags_toss_left, "mc_dogtags.cos")
        else
            manny:walk_and_face(0.0400002, 0.26, 0.55, 0, 143.636, 0)
            manny:push_costume("mc_dogtags.cos")
            manny:stop_chore(mc_hold, "mc.cos")
            manny:stop_chore(mc_activate_dogtags, "mc.cos")
            manny:head_look_at(nil)
            manny:play_chore(mc_dogtags_toss_right, "mc_dogtags.cos")
            manny:wait_for_chore(mc_dogtags_toss_right, "mc_dogtags.cos")
        end
        manny:pop_costume()
        manny.is_holding = nil
        si.dog_tags:put_in_limbo()
        END_CUT_SCENE()
        if not membrillo.detecting then
            START_CUT_SCENE("no head")
            manny:head_look_at(mg.membrillo_obj)
            manny:say_line("/mgma059/")
            wait_for_message()
            membrillo:say_line("/mgme060/")
            wait_for_message()
            membrillo:say_line("/mgme061/")
            END_CUT_SCENE()
        end
    end
end
mg.corpse_2 = Object:create(mg, "/mgtx062/corpse 2", -0.233364, 0.019805999, 0.69999999, { range = 0.60000002 })
mg.corpse_2.use_pnt_x = 0.075628698
mg.corpse_2.use_pnt_y = 0.450905
mg.corpse_2.use_pnt_z = 0.46214801
mg.corpse_2.use_rot_x = 0
mg.corpse_2.use_rot_y = -1249.99
mg.corpse_2.use_rot_z = 0
mg.corpse_2.mem_pnt = { }
mg.corpse_2.mem_pnt[0] = { x = -0.031099999, y = -0.19490001, z = 0.55000001, pitch = 0, yaw = 124.176, roll = 0 }
mg.corpse_2.mem_pnt[1] = { x = -0.0266564, y = -0.34259999, z = 0.55000001, pitch = 0, yaw = 124.182, roll = 0 }
mg.corpse_2.mem_pnt[2] = { x = 0.0052435598, y = -0.24339999, z = 0.55000001, pitch = 0, yaw = 124.182, roll = 0 }
mg.corpse_2.lookat_leaf_pt = { x = -0.30636099, y = -0.1833, z = 0.90600002 }
mg.corpse_2.parent = mg.corpse_1
mg.corpse_2.tagged = 0
mg.membrillo_obj = Object:create(mg, "/mgtx063/Coroner", 0.066636004, 0.019805999, 0.89999998, { range = 1.2 })
mg.membrillo_obj.use_pnt_x = -0.0161709
mg.membrillo_obj.use_pnt_y = 0.260189
mg.membrillo_obj.use_pnt_z = 0.55000001
mg.membrillo_obj.use_rot_x = 0
mg.membrillo_obj.use_rot_y = 187.688
mg.membrillo_obj.use_rot_z = 0
mg.membrillo_obj.lookAt = function(arg1) -- line 490
    manny:say_line("/mgma064/")
end
mg.membrillo_obj.use = function(arg1) -- line 494
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    END_CUT_SCENE()
    Dialog:run("mb1", "dlg_membrillo.lua")
end
mg.membrillo_obj.use_detector = function(arg1) -- line 501
    local local1, local2
    START_CUT_SCENE("no head")
    local2 = membrillo.examining
    membrillo.stop_searching = TRUE
    membrillo.stop_walking = TRUE
    manny:walkto_object(arg1)
    manny:say_line("/mgma065/")
    manny:head_look_at(mg.membrillo_obj)
    mg:membrillo_stop_idle(TRUE)
    manny:wait_for_message()
    membrillo:say_line("/mgme066/")
    membrillo:turn_to_rot(0, 10, 0)
    membrillo:play_chore(membrillo_start_walk)
    membrillo:walkto(0.00762909, -0.019210899, 0.55000001)
    membrillo:wait_for_chore(membrillo_start_walk)
    membrillo:play_chore_looping(membrillo_walk)
    while membrillo:is_moving() do
        break_here()
    end
    membrillo:setrot(0, 30, 0, TRUE)
    membrillo:stop_chore(membrillo_walk)
    membrillo:run_chore(membrillo_end_walk)
    membrillo:stop_chore(membrillo_end_walk, "membrillo.cos")
    membrillo:run_chore(membrillo_take_detector)
    membrillo:wait_for_message()
    membrillo:stop_chore(membrillo_take_detector, "membrillo.cos")
    mg:current_setup(mg_morws)
    sl.detector:put_in_limbo()
    manny:stop_chore(mc_hold, "mc.cos")
    manny:stop_chore(mc_activate_detector, "mc.cos")
    manny.is_holding = nil
    membrillo.detecting = TRUE
    membrillo.examining = mg.corpse_2
    membrillo:setpos(mg.corpse_2.mem_pnt[0].x, mg.corpse_2.mem_pnt[0].y, mg.corpse_2.mem_pnt[0].z)
    membrillo:setrot(mg.corpse_2.mem_pnt[0].pitch, mg.corpse_2.mem_pnt[0].yaw, mg.corpse_2.mem_pnt[0].roll)
    membrillo:push_costume("mem_detect.cos")
    membrillo:play_chore(mem_detect_scan, "mem_detect.cos")
    membrillo:say_line("/mgme067/")
    membrillo:wait_for_message()
    membrillo:say_line("/mgme068/")
    membrillo:wait_for_message()
    mg:current_setup(mg_tblms)
    arg1:force_lookat()
    membrillo:play_chore(mem_detect_scan, "mem_detect.cos")
    manny:say_line("/mgma069/")
    membrillo:wait_for_chore(mem_detect_scan, "mem_detect.cos")
    manny:wait_for_message()
    membrillo:turn_to_rot(0, 10, 0)
    local1 = membrillo:getpos()
    manny:head_look_at_point(local1.x, local1.y, local1.z + 0.2)
    sleep_for(1000)
    manny:head_look_at(mg.membrillo_obj)
    manny:say_line("/mgma070/")
    manny:wait_for_message()
    membrillo:turn_to_rot(mg.corpse_2.mem_pnt[0].pitch, mg.corpse_2.mem_pnt[0].yaw, mg.corpse_2.mem_pnt[0].roll)
    END_CUT_SCENE()
    membrillo.stop_searching = FALSE
    membrillo.stop_walking = FALSE
    start_script(mg.membrillo_idle)
end
mg.membrillo_obj.follow_actor = function(arg1) -- line 574
    local local1, local2, local3
    local1, local2, local3 = GetActorNodeLocation(membrillo.hActor, 40)
    arg1.obj_x = local1
    arg1.obj_y = local2
    arg1.obj_z = local3
    arg1.interest_actor:put_in_set(mg)
    arg1.interest_actor:setpos(arg1.obj_x, arg1.obj_y, arg1.obj_z)
    if hot_object == mg.membrillo_obj then
        system.currentActor:head_look_at(arg1)
    end
end
mg.membrillo_obj.force_lookat = function(arg1) -- line 590
    local local1, local2, local3
    local1, local2, local3 = GetActorNodeLocation(membrillo.hActor, 40)
    manny:head_look_at_point(local1, local2, local3)
end
mg.open_vault_1 = Object:create(mg, "/mgtx071/slab", 1.3095, -1.0041, 0.66000003, { range = 0.70999998 })
mg.open_vault_1.use_pnt_x = 1.18475
mg.open_vault_1.use_pnt_y = -0.94498003
mg.open_vault_1.use_pnt_z = 0.2
mg.open_vault_1.use_rot_x = 0
mg.open_vault_1.use_rot_y = -1194.45
mg.open_vault_1.use_rot_z = 0
mg.open_vault_1.lookAt = function(arg1) -- line 605
    soft_script()
    system.default_response("empty")
    wait_for_message()
    membrillo:say_line("/mgme072/")
end
mg.open_vault_1.use = function(arg1) -- line 612
    soft_script()
    manny:head_look_at(mg.membrillo_obj)
    manny:say_line("/mgma073/")
    wait_for_message()
    membrillo:say_line("/mgme074/")
end
mg.open_vault_2 = Object:create(mg, "/mgtx075/slab", -0.89050001, -1.3041, 0.66000003, { range = 0.70999998 })
mg.open_vault_2.use_pnt_x = -0.80896801
mg.open_vault_2.use_pnt_y = -1.23271
mg.open_vault_2.use_pnt_z = 0.2
mg.open_vault_2.use_rot_x = 0
mg.open_vault_2.use_rot_y = -1297.46
mg.open_vault_2.use_rot_z = 0
mg.open_vault_2.parent = mg.open_vault_1
mg.pc_door = Object:create(mg, "/mgtx076/door", -0.043364, 2.26981, 0.63, { range = 0.60000002 })
mg.pc_door.use_pnt_x = 0.0135086
mg.pc_door.use_pnt_y = 1.66761
mg.pc_door.use_pnt_z = 0.2
mg.pc_door.use_rot_x = 0
mg.pc_door.use_rot_y = -718.51202
mg.pc_door.use_rot_z = 0
mg.pc_door.out_pnt_x = 0.0061704698
mg.pc_door.out_pnt_y = 1.95
mg.pc_door.out_pnt_z = 0.2
mg.pc_door.out_rot_x = 0
mg.pc_door.out_rot_y = -718.51202
mg.pc_door.out_rot_z = 0
mg.pc_box = mg.pc_door
mg.pc_door.walkOut = function(arg1) -- line 654
    pc:come_out_door(pc.mg_door)
end
mi_msb_sheet_pass_sheet = 0
miner_idles_cm1_pick_cycle = 0
miner_idles_cm1_rest2talk = 1
miner_idles_cm1_talk2rest = 2
miner_idles_cm2_axe_cycle = 3
miner_idles_cm2_rest2talk = 4
miner_idles_cm2_talk2rest = 5
miner_idles_cm3_hammer_cycle = 6
miner_idles_cm4_chisel_cycle = 7
miner_idles_cm4_rest2talk = 8
miner_idles_cm4_talk2rest = 9
mi_throw_sheet_throw_sheet = 0
mi_throw_sheet_walk_off = 1
mi_with_cc_toga_walk = 0
mi_with_cc_toga_to_cc_toga = 1
mi_with_cc_toga_hold_cc_toga = 2
mk_drawer_close = 0
mk_drawer_set_open = 1
mk_drawer_set_closed = 2
mk_drawer_open = 3
CheckFirstTime("mk.lua")
dofile("mug_hook.lua")
dofile("msb_rag_cup.lua")
dofile("mm_extinguish.lua")
dofile("mug_rack.lua")
dofile("mk_drawer.lua")
dofile("msb_open_drawer.lua")
mk = Set:create("mk.set", "mechanics kitchen", { mk_intws = 0, mk_ovrhd = 1 })
mk.shrinkable = 0.03
mk.fire_actor = Actor:create(nil, nil, nil, "toaster fire")
mk.fire_actor.default = function(arg1) -- line 45
    arg1:set_costume("toaster_fire.cos")
    arg1:put_in_set(mk)
    arg1:setpos(0.265, -0.015, 0.3)
    arg1:setrot(0, 33.2316, 0)
end
mk.fire_actor.start = function(arg1) -- line 52
    local local1 = 0.5
    local local2 = 0.0099999998
    arg1:default()
    arg1:play_chore_looping(0)
    while local1 < 1 do
        SetActorScale(arg1.hActor, local1)
        break_here()
        local1 = local1 + local2
        local2 = local2 + 0.02
    end
    SetActorScale(arg1.hActor, 1)
end
mk.fire_actor.stop = function(arg1) -- line 67
    local local1 = 1
    local local2 = 0.0099999998
    while local1 > 0.5 do
        SetActorScale(arg1.hActor, local1)
        break_here()
        local1 = local1 - local2
        local2 = local2 + 0.02
    end
    arg1:stop_chore(0)
    arg1:play_chore(1)
    arg1:put_in_set(nil)
end
mk.mug_actor = Actor:create(nil, nil, nil, "mug")
mk.mug_actor.default = function(arg1) -- line 85
    arg1:set_costume("mug_hook.cos")
    arg1:put_in_set(mk)
    arg1:setpos(0.48191, 0.00755, 0.39793)
    arg1:setrot(0, 180, 0)
    arg1:show(FALSE)
end
mk.mug_actor.show = function(arg1, arg2) -- line 93
    if arg2 then
        arg1:complete_chore(mug_hook_mug_hold)
    else
        arg1:complete_chore(mug_hook_mug_hide)
    end
end
mk.mug_actor.hook = function(arg1) -- line 101
    arg1:play_chore(mug_hook_mug_hooked)
    arg1:wait_for_chore(mug_hook_mug_hooked)
    arg1:play_chore(mug_hook_mug_hold)
end
mk.mug_rack_actor = Actor:create(nil, nil, nil, "mug rack")
mk.mug_rack_actor.default = function(arg1) -- line 110
    arg1:set_costume("mug_rack.cos")
    arg1:put_in_set(mk)
    arg1:setpos(0.493555, 0.00638961, 0.3067)
    arg1:setrot(0, 180, 0)
    if mk.mug_rack.is_upright then
        arg1:play_chore(mug_rack_upright)
    else
        arg1:play_chore(mug_rack_down)
    end
end
mk.toast = function(arg1, arg2) -- line 124
    if manny:walkto_object(mk.toaster) then
        START_CUT_SCENE()
        manny:clear_hands()
        manny:play_chore(msb_hand_on_obj, "msb.cos")
        sleep_for(500)
        start_sfx("mkTostDn.wav")
        manny:wait_for_chore(msb_hand_on_obj, "msb.cos")
        manny:play_chore(msb_hand_off_obj, "msb.cos")
        manny:wait_for_chore(msb_hand_off_obj, "msb.cos")
        if arg2 then
            manny.is_holding = arg2
            shrinkBoxesEnabled = FALSE
            close_inventory(FALSE)
            manny:walkto(0.38545, -0.30193, 0, 0, 69.8924, 0)
            manny:wait_for_actor()
            manny:stop_chore(msb_hold, "msb.cos")
            manny:push_costume("msb_rag_cup.cos")
            manny:play_chore(msb_rag_cup_stuff_rag, "msb_rag_cup.cos")
            sleep_for(1000)
            start_sfx("mkRagStf.WAV")
            sleep_for(900)
            manny:stop_chore(msb_activate_rag, "msb.cos")
            manny:stop_chore(msb_activate_oily_rag, "msb.cos")
            manny:wait_for_chore(msb_rag_cup_stuff_rag, "msb_rag_cup.cos")
            if arg2 == mk.rag then
                manny:setpos(0.458224, -0.348155, 0)
                manny:setrot(0, 69.8924, 0)
                manny:pop_costume()
                sleep_for(2000)
                start_sfx("mkTostUp.wav")
                wait_for_sound("mkTostUp.wav")
                manny:walkto(0.38545, -0.30193, 0, 0, 69.8924, 0)
                manny:wait_for_actor()
                manny:push_costume("msb_rag_cup.cos")
                manny:play_chore(msb_rag_cup_take_rag, "msb_rag_cup.cos")
                sleep_for(1800)
                manny:play_chore(msb_activate_rag, "msb.cos")
                manny:wait_for_chore(msb_rag_cup_take_rag, "msb_rag_cup.cos")
                manny:pop_costume()
                manny:play_chore(msb_hold, "msb.cos")
                manny:say_line("/mkma027/")
            else
                arg2:free()
                manny:head_look_at(nil)
                manny:play_chore(msb_rag_cup_watch_tstr_fire, "msb_rag_cup.cos")
                sleep_for(2000)
                mk:put_out_fire()
            end
        else
            sleep_for(1000)
            start_sfx("mkTostUp.wav")
        end
        END_CUT_SCENE()
    end
end
mk.put_out_fire = function(arg1) -- line 183
    cur_puzzle_state[47] = TRUE
    START_CUT_SCENE()
    start_sfx("mkFire.WAV")
    start_sfx("brFire.IMU", IM_HIGH_PRIORITY, 0)
    fade_sfx("brFire.IMU", 2500, 127)
    mk.fire_actor:start()
    sleep_for(1000)
    mechanic1:default()
    mechanic1:push_costume("mm_extinguish.cos")
    mechanic1:put_in_set(mk)
    mechanic1:setpos(1.14691, -0.64678, 0)
    mechanic1:setrot(0, 90, 0)
    mechanic1:play_chore(mm_extinguish_extinguish, "mm_extinguish.cos")
    manny:play_chore(msb_rag_cup_watch_mech_run, "msb_rag_cup.cos")
    sleep_for(2000)
    start_sfx("extingsh.IMU")
    if mk.mug_rack.has_mug then
        mechanic2:default()
        mechanic2:push_costume("mm_extinguish.cos")
        mechanic2:put_in_set(mk)
        mechanic2:setpos(1.56366, -0.124631, 0)
        mechanic2:setrot(0, 120, 0)
        mechanic2:play_chore(mm_extinguish_run_in, "mm_extinguish.cos")
    end
    sleep_for(1500)
    fade_sfx("brFire.IMU", 500, 0)
    mk.fire_actor:stop()
    fade_sfx("extingsh.IMU", 500, 0)
    mechanic1:wait_for_chore(mm_extinguish_extinguish, "mm_extinguish.cos")
    manny:play_chore(msb_rag_cup_watch_mechanic, "msb_rag_cup.cos")
    END_CUT_SCENE()
    if mk.mug_rack.has_mug then
        cur_puzzle_state[48] = TRUE
        START_CUT_SCENE()
        start_sfx("mugRattl.WAV")
        sleep_for(500)
        start_sfx("mugJet.IMU")
        mk.mug_actor:play_chore(mug_hook_mug_rocket)
        mk.mug_rack:play_chore(0)
        manny:play_chore(msb_rag_cup_dodge_cup, "msb_rag_cup.cos")
        mechanic1:play_chore(mm_extinguish_watch_cup, "mm_extinguish.cos")
        sleep_for(2000)
        fade_pan_sfx("mugJet.IMU", 3000, 127)
        sleep_for(2000)
        fade_sfx("mugJet.IMU", 1000, 0)
        mechanic1:wait_for_chore(mm_extinguish_watch_cup, "mm_extinguish.cos")
        mechanic1:play_chore(mm_extinguish_2point, "mm_extinguish.cos")
        mk.mug_actor:wait_for_chore(mug_hook_mug_rocket)
        mk.mug_actor:show(FALSE)
        mechanic1:say_line("/mkm1028/")
        mechanic1:wait_for_chore(mm_extinguish_2point, "mm_extinguish.cos")
        manny:wait_for_chore(msb_rag_cup_dodge_cup, "msb_rag_cup.cos")
        manny:play_chore(msb_rag_cup_2lk_mm_point, "msb_rag_cup.cos")
        mechanic1:play_chore(mm_extinguish_point2cup, "mm_extinguish.cos")
        mechanic1:wait_for_message()
        mechanic2:say_line("/mkm2029/")
        mechanic2:wait_for_message()
        mechanic1:play_chore(mm_extinguish_stop_point, "mm_extinguish.cos")
        mechanic1:set_speech_mode(MODE_BACKGROUND)
        music_state:set_sequence(seqSproutAha)
        mechanic1:say_line("/mkm1030/")
        mechanic2:say_line("/mkm2031/")
        mechanic2:wait_for_message()
        mechanic1:say_line("/mkm1032/")
        mechanic1:wait_for_message()
        manny:play_chore(msb_rag_cup_comment, "msb_rag_cup.cos")
        manny:say_line("/mkma033/")
        manny:wait_for_message()
        manny:setpos(0.458224, -0.348155, 0)
        manny:setrot(0, 69.8924, 0)
        manny:pop_costume()
        END_CUT_SCENE()
        start_script(cut_scene.coffrock)
    else
        START_CUT_SCENE()
        start_sfx("mkSmoldr.WAV")
        mechanic1:say_line("/mkm1034/")
        mechanic1:play_chore(mm_extinguish_2bitch, "mm_extinguish.cos")
        mechanic1:wait_for_chore(mm_extinguish_2bitch, "mm_extinguish.cos")
        mechanic1:play_chore_looping(mm_extinguish_bitch_manny, "mm_extinguish.cos")
        mechanic1:wait_for_message()
        mechanic1:set_chore_looping(mm_extinguish_bitch_manny, FALSE, "mm_extinguish.cos")
        mechanic1:wait_for_chore(mm_extinguish_bitch_manny, "mm_extinguish.cos")
        manny:say_line("/mkma035/")
        manny:wait_for_message()
        mechanic1:play_chore(mm_extinguish_leave_mk, "mm_extinguish.cos")
        mechanic1:say_line("/mkm1036/")
        mechanic1:wait_for_chore(mm_extinguish_leave_mk, "mm_extinguish.cos")
        mechanic1:wait_for_message()
        mechanic1:put_in_set(nil)
        manny:setpos(0.458224, -0.348155, 0)
        manny:setrot(0, 69.8924, 0)
        manny:pop_costume()
        END_CUT_SCENE()
    end
end
mayan_mechanic.costume_marker_handler = function(arg1, arg2) -- line 289
    if arg2 == Actor.MARKER_LEFT_RUN then
        arg1:play_footstep_sfx(pick_one_of({ "fsDemRL1.WAV", "fsDemRL2.WAV" }), 60, 90)
    elseif arg2 == Actor.MARKER_RIGHT_RUN then
        arg1:play_footstep_sfx(pick_one_of({ "fsDemRR1.WAV", "fsDemRR2.WAV" }), 60, 90)
    end
end
mk.enter = function(arg1) -- line 303
    mk:add_object_state(mk_intws, "mk_drawer.bm", nil, OBJSTATE_UNDERLAY)
    mk:add_object_state(mk_intws, "mk_rocket.bm", nil, OBJSTATE_UNDERLAY)
    mk.mug_rack_actor:default()
    mk.mug_rack:set_object_state("mk_rocket_flash.cos")
    mk.mug_actor:default()
    if mk.mug_rack.has_mug then
        mk.mug_actor:show(TRUE)
    else
        mk.mug_actor:show(FALSE)
    end
    mk.drawers:set_object_state("mk_drawer.cos")
    if mk.drawers:is_open() then
        mk.drawers:play_chore(mk_drawer_set_open)
    else
        mk.drawers:play_chore(mk_drawer_set_closed)
    end
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 1000, 4000, 6000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
end
mk.exit = function(arg1) -- line 332
    KillActorShadows(manny.hActor)
end
mk.rag = Object:create(mk, "/mktx037/rag", 0, 0, 0, { range = 0 })
mk.rag.wav = "getrag.wav"
mk.rag.lookAt = function(arg1) -- line 343
    manny:say_line("/mkma038/")
end
mk.rag.use = function(arg1) -- line 347
    START_CUT_SCENE()
    look_at_item_in_hand(TRUE)
    manny:say_line("/mkma039/")
    manny:wait_for_message()
    manny:set_talk_chore(1, msb_stop_talk)
    manny:set_talk_chore(2, msb_stop_talk)
    manny:set_talk_chore(3, msb_c)
    manny:set_talk_chore(4, msb_stop_talk)
    manny:set_talk_chore(5, msb_stop_talk)
    manny:set_talk_chore(6, msb_stop_talk)
    manny:set_talk_chore(7, msb_stop_talk)
    manny:set_talk_chore(8, msb_stop_talk)
    manny:set_talk_chore(9, msb_c)
    manny:set_talk_chore(10, msb_stop_talk)
    break_here()
    manny:head_look_at(nil)
    manny:play_chore(msb_use_obj, "msb.cos")
    manny:say_line("/mkma040/")
    manny:wait_for_chore(msb_use_obj, "msb.cos")
    manny:wait_for_message()
    manny:set_talk_chore(1, msb_stop_talk)
    manny:set_talk_chore(2, msb_a)
    manny:set_talk_chore(3, msb_c)
    manny:set_talk_chore(4, msb_e)
    manny:set_talk_chore(5, msb_f)
    manny:set_talk_chore(6, msb_l)
    manny:set_talk_chore(7, msb_m)
    manny:set_talk_chore(8, msb_o)
    manny:set_talk_chore(9, msb_t)
    manny:set_talk_chore(10, msb_u)
    END_CUT_SCENE()
end
mk.rag.default_response = function(arg1) -- line 385
    manny:say_line("/mkma041/")
end
mk.drawers = Object:create(mk, "/mktx001/drawers", 0.56939101, -0.110329, 0.206, { range = 0.60000002 })
mk.drawers.use_pnt_x = 0.47756699
mk.drawers.use_pnt_y = -0.34999999
mk.drawers.use_pnt_z = 0
mk.drawers.use_rot_x = 0
mk.drawers.use_rot_y = 3.3110001
mk.drawers.use_rot_z = 0
mk.drawers.open = function(arg1) -- line 397
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:push_costume("msb_open_drawer.cos")
        manny:play_chore(msb_open_drawer_open_drawer, "msb_open_drawer.cos")
        sleep_for(1000)
        mk.drawers:play_chore(mk_drawer_open)
        manny:wait_for_chore(msb_open_drawer_open_drawer, "msb_open_drawer.cos")
        manny:pop_costume()
        END_CUT_SCENE()
        arg1.opened = TRUE
        arg1:lookAt()
    end
end
mk.drawers.use = function(arg1) -- line 412
    if arg1:is_open() then
        if mk.rag.owner == manny or my.oily_rag.owner == manny then
            manny:say_line("/mkma002/")
        elseif manny:walkto_object(arg1) then
            START_CUT_SCENE()
            manny:play_chore(msb_reach_med, "msb.cos")
            sleep_for(1000)
            manny:stop_chore(msb_reach_med, "msb.cos")
            start_sfx("getRag.WAV")
            manny:generic_pickup(mk.rag)
            manny:say_line("/mkma003/")
            END_CUT_SCENE()
        end
    else
        arg1:open()
    end
end
mk.drawers.pickUp = mk.drawers.use
mk.drawers.lookAt = function(arg1) -- line 435
    if arg1:is_open() then
        arg1.seen = TRUE
        hot_object = arg1
        manny:head_look_at(arg1)
        manny.been_gazin = 0
        manny:say_line("/mkma004/")
    else
        system.default_response("closed")
    end
end
mk.toaster = Object:create(mk, "/mktx005/toaster", 0.258459, 0.0088414699, 0.38999999, { range = 0.60000002 })
mk.toaster.use_pnt_x = 0.31466401
mk.toaster.use_pnt_y = -0.30548301
mk.toaster.use_pnt_z = 0
mk.toaster.use_rot_x = 0
mk.toaster.use_rot_y = 27.4863
mk.toaster.use_rot_z = 0
mk.toaster.lookAt = function(arg1) -- line 456
    soft_script()
    manny:say_line("/mkma042/")
    manny:wait_for_message()
    manny:say_line("/mkma043/")
end
mk.toaster.pickUp = function(arg1) -- line 463
    manny:say_line("/mkma007/")
end
mk.toaster.use = function(arg1) -- line 467
    mk:toast(nil)
end
mk.toaster.use_rag = function(arg1) -- line 471
    mk:toast(mk.rag)
end
mk.toaster.use_oily_rag = function(arg1) -- line 475
    mk:toast(my.oily_rag)
end
mk.mug_rack = Object:create(mk, "/mktx008/mug rack", 0.480102, -0.0308, 0.42179999, { range = 0.60000002 })
mk.mug_rack.use_pnt_x = 0.46845999
mk.mug_rack.use_pnt_y = -0.34437001
mk.mug_rack.use_pnt_z = 0
mk.mug_rack.use_rot_x = 0
mk.mug_rack.use_rot_y = 69.892403
mk.mug_rack.use_rot_z = 0
mk.mug_rack.is_upright = TRUE
mk.mug_rack.lookAt = function(arg1) -- line 489
    if mk.mug_rack.has_mug then
        manny:say_line("/mkma009/")
    else
        manny:say_line("/mkma010/")
    end
end
mk.mug_rack.use = function(arg1) -- line 497
    if td.mug.owner == manny then
        manny:pull_out_item(td.mug)
        arg1:use_mug()
    else
        manny:say_line("/mkma011/")
    end
end
mk.mug_rack.pickUp = function(arg1) -- line 506
    if arg1.has_mug then
        if manny:walkto_object(arg1) then
            START_CUT_SCENE()
            manny:push_costume("msb_rag_cup.cos")
            manny:play_chore(msb_rag_cup_unhook_cup, "msb_rag_cup.cos")
            sleep_for(667)
            mk.mug_actor:show(FALSE)
            start_sfx("mkMugOff.WAV")
            manny:wait_for_chore(msb_rag_cup_unhook_cup, "msb_rag_cup.cos")
            manny:generic_pickup(td.mug)
            manny:pop_costume()
            manny.been_gazin = 0
            hot_object = arg1
            END_CUT_SCENE()
            arg1.has_mug = FALSE
        end
    elseif td.mug.owner == manny then
        manny:say_line("/mkma012/")
        manny:wait_for_message()
        manny:say_line("/mkma013/")
    else
        manny:say_line("/mkma014/")
        manny:wait_for_message()
        manny:say_line("/mkma015/")
    end
end
mk.mug_rack.use_mug = function(arg1) -- line 537
    if manny:walkto_object(arg1) then
        arg1.has_mug = TRUE
        td.mug:free()
        START_CUT_SCENE()
        manny:head_look_at(nil)
        manny:push_costume("msb_rag_cup.cos")
        manny:stop_chore(msb_hold, "msb.cos")
        manny:stop_chore(msb_activate_mug, "msb.cos")
        manny:play_chore(msb_rag_cup_hook_cup, "msb_rag_cup.cos")
        start_script(mk.mug_actor.hook, mk.mug_actor)
        sleep_for(800)
        start_sfx("mkMugOn.WAV")
        manny:wait_for_chore(msb_rag_cup_hook_cup, "msb_rag_cup.cos")
        manny:setpos(0.50266, -0.35277, 0)
        manny:setrot(0, 85.6874, 0)
        manny:pop_costume()
        manny:say_line("/mkma044/")
        hot_object = arg1
        manny.been_gazin = 0
        END_CUT_SCENE()
    end
end
mk.fridge = Object:create(mk, "/mktx020/fridge", -0.324067, -0.76779997, 0.41999999, { range = 0.60000002 })
mk.fridge.use_pnt_x = -0.17406701
mk.fridge.use_pnt_y = -0.72780001
mk.fridge.use_pnt_z = 0
mk.fridge.use_rot_x = 0
mk.fridge.use_rot_y = 454.25201
mk.fridge.use_rot_z = 0
mk.fridge.lookAt = function(arg1) -- line 572
    START_CUT_SCENE()
    manny:say_line("/mkma021/")
    manny:wait_for_message()
    manny:say_line("/mkma022/")
    manny:wait_for_message()
    END_CUT_SCENE()
    soft_script()
    manny:say_line("/mkma023/")
    manny:wait_for_message()
    manny:say_line("/mkma024/")
end
mk.fridge.pickUp = function(arg1) -- line 585
    manny:say_line("/mkma025/")
end
mk.fridge.use = function(arg1) -- line 589
    if not arg1.seen then
        arg1:lookAt()
    else
        manny:say_line("/mkma045/")
    end
end
mk.my_door = Object:create(mk, "/mktx026/door", 0.949265, -0.54975599, 0.41, { range = 0.60000002 })
mk.my_door.use_pnt_x = 0.66926497
mk.my_door.use_pnt_y = -0.54975599
mk.my_door.use_pnt_z = 0
mk.my_door.use_rot_x = 0
mk.my_door.use_rot_y = -436.202
mk.my_door.use_rot_z = 0
mk.my_door.out_pnt_x = 0.85000002
mk.my_door.out_pnt_y = -0.50536299
mk.my_door.out_pnt_z = 0
mk.my_door.out_rot_x = 0
mk.my_door.out_rot_y = -436.202
mk.my_door.out_rot_z = 0
mk.my_door.touchable = FALSE
mk.my_box = mk.my_door
mk.my_door.walkOut = function(arg1) -- line 620
    my:come_out_door(my.mk_door)
end
mk_rocket_flash_flash = 0
mm_extinguish_watch_cup = 0
mm_extinguish_point2cup = 1
mm_extinguish_leave_mk = 2
mm_extinguish_stop_point = 3
mm_extinguish_extinguish = 4
mm_extinguish_dialog = 5
mm_extinguish_bitch_manny = 6
mm_extinguish_2point = 7
mm_extinguish_2bitch = 8
mm_extinguish_run_in = 9
mm_get_nitro_open_cabinet = 0
mm_get_nitro_search = 1
mm_get_nitro_get_nitro = 2
mm_ladder_jump_off = 0
mn2_ladder_jump_jump_down = 0
mn2_ladder_jump_jump_up = 1
mn2_startwalk = 0
mn2_stopwalk = 1
mn2_walk = 2
mn2_talk = 3
mn2_stop_talk = 4
mn2_run = 5
mn2_start_run = 6
mn2_stop_run = 7
mn2_rest = 8
mn2_turn_right = 9
mn2_walk_upstairs = 10
mn2_walk_downstairs = 11
mn2_putback_small = 12
mn2_putback_done = 13
mn2_takeout_get = 14
mn2_takeout_big = 15
mn2_back_off = 16
mn2_step_fwd = 17
mn2_hand_on_obj = 18
mn2_hand_off_obj = 19
mn2_use_obj = 20
mn2_takeout_empty = 21
mn2_swivel_lf = 22
mn2_swivel_rt = 23
mn2_a = 24
mn2_c = 25
mn2_e = 26
mn2_l = 27
mn2_f = 28
mn2_m = 29
mn2_o = 30
mn2_u = 31
mn2_no_talk = 32
mn2_mumble = 33
mn2_reach_high = 34
mn2_reach_med = 35
mn2_takeout_small = 36
mn2_hold = 37
mn2_hold_scythe = 38
mn2_putback_big = 39
mn2_reach_low = 40
mn2_give = 41
mn2_give_hold = 42
mn2_give_exit = 43
mn2_hold_new = 44
mn2_takeout_new = 45
mn2_putback_new = 46
mn2_activate_hammer = 47
mn2_activate_stockings = 48
mn2_safe_spin = 49
mn2_bend_get_scythe = 50
mn2_activate_gun = 51
mn2_activate_chisel = 52
mn2_takeout_big_new = 53
mn2_putback_big_new = 54
mn2_pull_lever = 55
mn2_lft_on_obj = 56
mn2_lft_off = 57
mn2_hat_on = 58
mn2_hat_off = 59
mn2_read_note = 60
mn2_takeout_chisel = 61
mn2_putaway_chisel = 62
mn2_putaway_gun = 63
mn2_t = 64
mn2_use_ashtray = 65
mn2_takeout_gethold = 66
mn_anchor_rip_look_left_behind = 0
mn_anchor_rip_follow_rip_right = 1
mn_anchor_rip_step_back = 2
mn_chisel_prepare_chisel = 0
mn_chisel_use_chisel = 1
mn_chisel_back_to_hold = 2
mn_chisel_hold_chisel = 3
mn_chisel_start_cut = 4
mn_chisel_cut = 5
mn_chisel_turn_to_look = 6
mn_chisel_turn_around = 7
mn_chisel_turn_around_hold = 8
mn_chisel_look_at_hold = 9
mn_conveyor_drift = 0
mn_conveyor_crawl = 1
mn_conveyor_start_current = 2
mn_conveyor_loop_current = 3
mn_conveyor_end_current = 4
mn_conveyor_fade_to_drift = 5
mn_ctc_react_right = 0
mn_ctc_react_left = 1
mn_ctc_grabs_ct = 2
mn_ctc_hold_ct = 3
mn_ctc_ct_struggle = 4
mn_ctc_pull_ct_lft = 5
mn_ctc_handoff_ct = 6
mn_ct_react_right = 0
mn_ct_react_left = 1
mn_ct_grabs_ct = 2
mn_ct_hold_ct = 3
mn_ct_ct_struggle = 4
mn_ct_pull_ct_lft = 5
mn_ct_handoff_ct = 6
mn_ctm_react_right = 0
mn_ctm_react_left = 1
mn_ctm_grabs_ct = 2
mn_ctm_hold_ct = 3
mn_ctm_ct_struggle = 4
mn_ctm_pull_ct_lft = 5
mn_ctm_handoff_ct = 6
mn_current_start_current = 0
mn_current_loop_current = 1
mn_current_end_current = 2
mn_fight_fight_across = 0
mn_fight_fight_push = 1
mn_fight_smash_eye = 2
mn_gestures_head_tilt = 0
mn_gestures_head_nod = 1
mn_gestures_head_twist = 2
mn_gestures_shrug = 3
mn_gestures_hand_gesture = 4
mn_gestures_pointing = 5
mn_gestures_head_forward = 6
mn_ham_react_idle = 0
mn_ham_react_hit_react = 1
mn_hit_desk_pound_desk = 0
mn_HITMAN_hitman = 0
mn_HITMAN_Chore1 = 1
mn_hook_anchors_hook_anchor = 0
mn_hook_anchors_hook_rev = 1
mn_inv_empty_in = 0
mn_inv_empty_out = 1
mn_inv_hammer_in = 2
mn_inv_hammer_out = 3
mn_inv_chisel_in = 4
mn_inv_chisel_out = 5
mn_inv_gun_in = 6
mn_inv_gun_out = 7
mn_inv_stockings_in = 8
mn_inv_stockings_out = 9
mn_inv_scythe_in = 10
mn_inv_scythe_out = 11
mn_jump_sub_jump_sub = 0
mn_ladder_generic_climb1 = 0
mn_ladder_generic_climb2 = 1
mn_ladder_generic_climb_down1 = 2
mn_ladder_generic_climb_down2 = 3
mn_ladder_generic_jump_off = 4
mn_ladder_generic_mount = 5
mn_ladder_generic_hat_on = 6
mn_levers_hands_on_levers = 0
mn_levers_both_up = 1
mn_levers_neutral1 = 2
mn_levers_both_down = 3
mn_levers_neutral2 = 4
mn_levers_left_up = 5
mn_levers_neutral3 = 6
mn_levers_right_up = 7
mn_levers_neutral4 = 8
mn_levers_back_to_idle = 9
mn_levers_levers_only = 10
mn_levers_both_up_hold = 11
mn_levers_both_down_hold = 12
mn_levers_neutral_hold = 13
mn_levers_lf_up_hold = 14
mn_levers_rt_up_hold = 15
mn_levers_hat_on = 16
mn_lift_ax_lift_ax = 0
mn_lift_ax_hold_ax = 1
mn_lift_ax_drag_ax = 2
mn_lift_ax_ax_only = 3
mn_lift_ax_pickup_ax = 4
mn_lift_ax_lower_ax = 5
mn_open_door_open_door = 0
mn_open_safe_hand_on_wheel = 0
mn_open_safe_turn_left = 1
mn_open_safe_turn_right = 2
mn_open_safe_done_turn = 3
mn_open_safe_drill_prep = 4
mn_open_safe_drill = 5
mn_open_safe_drill_done = 6
mn_open_safe_hold_wheel = 7
mn_open_safe_inch_left = 8
mn_open_safe_inch_right = 9
mn_scythe_door_scythe_in_door = 0
mn_scythe_door_scythe_out_door = 1
mn_scythe_door_scythe_hold_in_door = 2
mn_scythe_door_hide_scythe_null = 3
mn_scythe_door_to_scythe_short = 4
mn_scythe_door_stop_scythe_short = 5
mn_scythe_takeout_scythe = 0
mn_scythe_putaway_scythe = 1
mn_scythe_putaway_scythe_get = 2
mn_scythe_hat_on = 3
mn_scythe_sprinkler_swipe_sprinkler = 0
mn_sea_scare_sea_scare = 0
mn_suitcase_open = 0
mn_suitcase_close = 1
mn_suitcase_grab_case = 2
mn_suitcase_suitcase_only = 3
mn_taplook_tap_shoulder = 0
mn_wait_idles_scratch = 0
mn_wait_idles_smoke1 = 1
mn_wait_idles_smoke_hold = 2
mn_wait_idles_smoke_loop = 3
mn_wait_idles_smoke_flick = 4
mn_wait_idles_smoke_no_flick = 5
mn_wait_idles_smoke_stomp = 6
mn_wakeup_wake_up = 0
mn_wakeup_sleep = 1
mo_computer_scroll = 0
mo_computer_static = 1
mo_ha_door_open = 0
mo_ha_door_closed = 1
mo_tube_balloon_open_waiting = 0
mo_tube_balloon_open = 1
mo_tube_balloon_close = 2
mo_tube_open_w_can = 0
mo_tube_open_wo_can = 1
mo_tube_close_wo_can = 2
mo_tube_close_w_can = 3
mo_tube_close_can_exit = 4
mo_tube_closed = 5
mo_tube_open = 6
mo_tube_set_open_w_can = 7
mo_tube_set_open_wo_can = 8
mo_tube_set_closed_w_can = 9
mo_tube_set_closed_wo_can = 10
mouthpiece_box_first_hit = 0
mouthpiece_box_second_hit = 1
mouthpiece_box_third_hit = 2
mouthpiece_box_stop_all = 3
mouthpiece_box_sitting = 4
msb_bone_trail_start_walk = 0
msb_bone_trail_walk_grind = 1
msb_bone_trail_end_walk = 2
msb_bone_trail_grind_hold = 3
msb_bone_trail_sqz_grinder_flks = 4
msb_bone_trail_sqz_grinder_no_flks = 5
msb_bone_trail_grinder_taken_no_hand = 6
msb_bone_trail_grinder_taken_hand = 7
msb_bone_trail_grinder_returned = 8
msb_bone_trail_grinder_mount_hand = 9
msb_bone_trail_grinder_mount_no_hand = 10
msb_bone_trail_grinder_mount_hand = 11
msb_coffee_get_coffee = 0
msb_coffee_coffee_on_burner = 1
msb_coffee_coffee_pause = 2
msb_coffee_2coffee_pour = 3
msb_coffee_pour_on_boyz = 4
msb_coffee_stop_pour = 5
msb_coffee_pour_coffee = 6
msb_coffee_start_pour_on_boyz = 7
msb_coffee_stop_pour_on_boyz = 8
msb_coffee_pot_to_burner = 9
msb_coffin_open_coffin = 0
msb_coffin_open = 1
msb_coffin_bruno = 2
msb_coffin_you = 3
msb_coffin_magazine = 4
msb_coffin_mug = 5
msb_coffin_phooey = 6
msb_coffin_2hold_mug = 7
msb_comfort_gl_comfort_gl = 0
msb_enter_sc_enter_sc = 0
msb_in_si_open_frg = 0
msb_in_si_open_crspr = 1
msb_in_si_close_crspr = 2
msb_in_si_use_gnrtr = 3
msb_in_si_grab_phone = 4
msb_in_si_hold_phone = 5
msb_in_si_hang_phone = 6
msb_inv_nitro_in = 0
msb_inv_nitro_out = 1
msb_inv_mt_hand_in = 2
msb_inv_mt_hand_out = 3
msb_inv_grinder_in = 4
msb_inv_grinder_out = 5
msb_inv_mug_in = 6
msb_inv_mug_out = 7
msb_inv_hand_in = 8
msb_inv_hand_out = 9
msb_inv_sproutella_in = 10
msb_inv_sproutella_out = 11
msb_inv_gun_in = 12
msb_inv_gun_out = 13
msb_inv_rag_in = 14
msb_inv_rag_out = 15
msb_inv_oily_rag_in = 16
msb_inv_oily_rag_out = 17
msb_inv_coffeepot_in = 18
msb_inv_coffeepot_out = 19
msb_inv_lsa_photo_out = 20
msb_inv_lsa_photo_in = 21
msb_inv_remote_in = 22
msb_inv_remote_out = 23
msb_inv_bottle_in = 24
msb_inv_bottle_out = 25
msb_inv_note_in = 26
msb_inv_note_out = 27
msb_inv_grinder_full_in = 28
msb_inv_grinder_full_out = 29
msb_inv_scythe_in = 30
msb_inv_scythe_out = 31
msb_inv_empty_bottle_in = 32
msb_inv_empty_bottle_out = 33
msb_jump_off_sit = 0
msb_jump_off_stand_up = 1
msb_jump_off_stand = 2
msb_jump_off_turn = 3
msb_jump_off_turn_hold = 4
msb_jump_off_jump_off = 5
msb_knock_on_door_knock = 0
msb_ladder_generic_climb1 = 0
msb_ladder_generic_climb2 = 1
msb_ladder_generic_climb_down1 = 2
msb_ladder_generic_climb_down2 = 3
msb_ladder_generic_jump_off = 4
msb_ladder_generic_mount_ladder = 5
msb_ladder_generic_unmount_ladder = 6
msb_ladder_generic_post_mount = 7
msb_startwalk = 0
msb_stopwalk = 1
msb_walk = 2
msb_talk = 3
msb_stop_talk = 4
msb_run = 5
msb_start_run = 6
msb_stop_run = 7
msb_rest = 8
msb_turn_right = 9
msb_walk_upstairs = 10
msb_walk_downstairs = 11
msb_putback_small = 12
msb_putback_done = 13
msb_takeout_get = 14
msb_takeout_big = 15
msb_back_off = 16
msb_step_fwd = 17
msb_hand_on_obj = 18
msb_hand_off_obj = 19
msb_use_obj = 20
msb_takeout_empty = 21
msb_swivel_lf = 22
msb_swivel_rt = 23
msb_a = 24
msb_c = 25
msb_e = 26
msb_l = 27
msb_f = 28
msb_m = 29
msb_o = 30
msb_u = 31
msb_no_talk = 32
msb_mumble = 33
msb_reach_high = 34
msb_reach_med = 35
msb_takeout_small = 36
msb_hold = 37
msb_hold_scythe = 38
msb_putback_big = 39
msb_reach_low = 40
msb_reach_cabinet = 41
msb_give = 42
msb_give_hold = 43
msb_give_exit = 44
msb_activate_hand = 45
msb_activate_sproutella = 46
msb_activate_nitro = 47
msb_activate_rag = 48
msb_bleh = 49
msb_activate_oily_rag = 50
msb_activate_bottle = 51
msb_lf_hand_on_obj = 52
msb_lf_hand_off_obj = 53
msb_activate_coffeepot = 54
msb_activate_lsa_photo = 55
msb_use_grinder = 56
msb_activate_grinder_empty = 57
msb_activate_grinder_full = 58
msb_thunder_activate = 59
msb_thunder_mumble = 60
msb_thunder_no_talk = 61
msb_thunder_a = 62
msb_thunder_c = 63
msb_thunder_e = 64
msb_thunder_l = 65
msb_thunder_f = 66
msb_thunder_m = 67
msb_thunder_o = 68
msb_thunder_u = 69
msb_activate_mug = 70
msb_activate_remote = 71
msb_activate_note = 72
msb_hold_grinder = 73
msb_activate_gun = 74
msb_putaway_gun = 75
msb_end_crouch = 76
msb_hat_on = 77
msb_hat_off = 78
msb_t = 79
msb_hold_note = 80
msb_salute = 81
msb_take_grinder_no_hand = 82
msb_take_grinder_hand = 83
msb_return_grinder = 84
msb_activate_empty_bottle = 85
msb_takeout_gethold = 86
msb_msb_sheet_pass_sheet = 0
msb_msb_sheet_throw_sheet = 1
msb_msb_sheet_to_hold_pos = 2
msb_msb_sheet_hold_sheet = 3
msb_open_door_ma_open_door = 0
msb_open_door_ma_close_door = 1
msb_open_drawer_open_drawer = 0
msb_open_drawer_close_drawer = 1
msb_pour_nitro_2pour_nitro = 0
msb_pour_nitro_pour_nitro = 1
msb_pour_nitro_stop_pour = 2
msb_rag_cup_watch_tstr_fire = 0
msb_rag_cup_watch_mechanic = 1
msb_rag_cup_watch_mech_run = 2
msb_rag_cup_stuff_rag = 3
msb_rag_cup_lk_mm_point = 4
msb_rag_cup_hook_cup = 5
msb_rag_cup_dodge_cup = 6
msb_rag_cup_comment = 7
msb_rag_cup_2lk_mm_point = 8
msb_rag_cup_take_rag = 9
msb_rag_cup_unhook_cup = 10
msb_react_standback = 0
msb_react_ring_bell = 1
msb_react_get_gun = 2
msb_react_get_can = 3
msb_react_hold_can = 4
msb_react_hold_gun = 5
msb_scythe_takeout_scythe = 0
msb_scythe_putaway_scythe = 1
msb_scythe_putaway_scythe_get = 2
msb_shooter_get_bottle = 0
msb_shooter_give_bottle = 1
msb_shooter_wait = 2
msb_shooter_grabbed = 3
msb_shooter_shaken = 4
msb_shooter_putdown = 5
msb_shooter_stand = 6
msb_shooter_watch_gl = 7
msb_shooter_air_out = 8
msb_snowblow_turn_switch = 0
msb_snowblow_put_hand = 1
msb_snowblow_pull_chain = 2
msb_snowblow_chain_only = 3
msb_th_bone_trail_start_walk = 0
msb_th_bone_trail_walk_grind = 1
msb_th_bone_trail_end_walk = 2
msb_th_bone_trail_grind_hold = 3
msb_th_bone_trail_sqz_grinder_flks = 4
msb_th_bone_trail_sqz_grinder_no_flks = 5
msb_theater_exit_th = 0
msb_theater_enter_th = 1
msb_thunder_gestures_head_tilt = 0
msb_thunder_gestures_head_nod = 1
msb_thunder_gestures_head_twist = 2
msb_thunder_gestures_shrug = 3
msb_thunder_gestures_hand_gesture = 4
msb_thunder_gestures_pointing = 5
msb_thunder_gestures_head_forward = 6
msb_thunder_startwalk = 0
msb_thunder_stopwalk = 1
msb_thunder_walk = 2
msb_thunder_talk = 3
msb_thunder_stop_talk = 4
msb_thunder_run = 5
msb_thunder_start_run = 6
msb_thunder_stop_run = 7
msb_thunder_rest = 8
msb_thunder_turn_right = 9
msb_thunder_walk_upstairs = 10
msb_thunder_walk_downstairs = 11
msb_thunder_putback_small = 12
msb_thunder_putback_done = 13
msb_thunder_takeout_get = 14
msb_thunder_takeout_big = 15
msb_thunder_back_off = 16
msb_thunder_step_fwd = 17
msb_thunder_hand_on_obj = 18
msb_thunder_hand_off_obj = 19
msb_thunder_use_obj = 20
msb_thunder_takeout_empty = 21
msb_thunder_swivel_lf = 22
msb_thunder_swivel_rt = 23
msb_thunder_a = 24
msb_thunder_c = 25
msb_thunder_e = 26
msb_thunder_l = 27
msb_thunder_f = 28
msb_thunder_m = 29
msb_thunder_o = 30
msb_thunder_u = 31
msb_thunder_no_talk = 32
msb_thunder_mumble = 33
msb_thunder_reach_high = 34
msb_thunder_reach_med = 35
msb_thunder_takeout_small = 36
msb_thunder_hold = 37
msb_thunder_hold_scythe = 38
msb_thunder_putback_big = 39
msb_thunder_reach_low = 40
msb_thunder_reach_cabinet = 41
msb_thunder_give = 42
msb_thunder_give_hold = 43
msb_thunder_give_exit = 44
msb_thunder_activate_hand = 45
msb_thunder_activate_mug = 46
msb_thunder_activate_spcan = 47
msb_thunder_activate_nitro = 48
msb_thunder_activate_rag = 49
msb_thunder_activate_grinder = 50
msb_thunder_activate_oily_rag = 51
msb_thunder_activate_bottle = 52
msb_thunder_lf_hand_on_obj = 53
msb_thunder_lf_hand_off_obj = 54
msb_thunder_activate_coffeepot = 55
msb_thunder_activate_lsa_photo = 56
msb_thunder_use_grinder = 57
msb_thunder_use_empty_grinder = 58
msb_thunder_use_boneless_grinder = 59
msb_thunder_t = 60
msb_thunder_scythe_takeout_scythe = 0
msb_thunder_scythe_putaway_scythe = 1
msb_thunder_scythe_putaway_scythe_get = 2
msb_thunder_wait_idles_scratch = 0
msb_thunder_wait_idles_smoke1 = 1
msb_thunder_wait_idles_smoke_hold = 2
msb_thunder_wait_idles_smoke_loop = 3
msb_thunder_wait_idles_smoke_flick = 4
msb_thunder_wait_idles_smoke_no_flick = 5
msb_thunder_wait_idles_smoke_stomp = 6
msbthund_jump_off_sit = 0
msbthund_jump_off_stand_up = 1
msbthund_jump_off_stand = 2
msbthund_jump_off_turn = 3
msbthund_jump_off_turn_hold = 4
msbthund_jump_off_jump_off = 5
msbthund_ladder_generic_climb1 = 0
msbthund_ladder_generic_climb2 = 1
msbthund_ladder_generic_climb_down1 = 2
msbthund_ladder_generic_climb_down2 = 3
msbthund_ladder_generic_jump_off = 4
msbthund_ladder_generic_mount_ladder = 5
msbthund_react_standback = 0
msbthund_react_ring_bell = 1
msbthund_react_get_gun = 2
msbthund_react_get_can = 3
msbthund_react_hold_can = 4
msbthund_react_hold_gun = 5
msb_wait_idles_scratch = 0
msb_wait_idles_smoke1 = 1
msb_wait_idles_smoke_hold = 2
msb_wait_idles_smoke_loop = 3
msb_wait_idles_smoke_flick = 4
msb_wait_idles_smoke_no_flick = 5
msb_wait_idles_smoke_stomp = 6
ms_card_hold_card = 0
ms_card_hold_deck = 1
ms_card_takeout_deck = 2
ms_card_putback_deck = 3
ms_card_takeout_card = 4
ms_card_putback_card = 5
ms_knock_on_door_knock = 0
ms_ladder_generic_climb1 = 0
ms_ladder_generic_climb2 = 1
ms_ladder_generic_climb_down1 = 2
ms_ladder_generic_climb_down2 = 3
ms_ladder_generic_jump_off = 4
ms_startwalk = 0
ms_stopwalk = 1
ms_walk = 2
ms_talk = 3
ms_stop_talk = 4
ms_run = 5
ms_start_run = 6
ms_stop_run = 7
ms_rest = 8
ms_turn_right = 9
ms_walk_upstairs = 10
ms_walk_downstairs = 11
ms_putback_small = 12
ms_putback_done = 13
ms_takeout_get = 14
ms_takeout_big = 15
ms_back_off = 16
ms_step_fwd = 17
ms_hand_on_obj = 18
ms_hand_off_obj = 19
ms_use_obj = 20
ms_takeout_empty = 21
ms_swivel_lf = 22
ms_swivel_rt = 23
ms_a = 24
ms_c = 25
ms_e = 26
ms_l = 27
ms_f = 28
ms_m = 29
ms_o = 30
ms_u = 31
ms_no_talk = 32
ms_mumble = 33
ms_reach_high = 34
ms_reach_med = 35
ms_takeout_small = 36
ms_hold = 37
ms_hold_scythe = 38
ms_putback_big = 39
ms_reach_low = 40
ms_activate_extinguisher = 41
ms_hold_card = 42
ms_hold_deck = 43
ms_takeout_deck = 44
ms_putback_deck = 45
ms_takeout_card = 46
ms_putback_card = 47
ms_activate_cat_balloon = 48
ms_activate_dingo_balloon = 49
ms_activate_frost_balloon = 50
ms_activate_eggs = 51
ms_activate_mouthpiece = 52
ms_activate_mt_balloon = 53
ms_activate_full_balloon = 54
ms_activate_cards = 55
ms_activate_work_order = 56
ms_activate_coral = 57
ms_activate_bread = 58
ms_swipe = 59
ms_activate_hole_card = 60
ms_activate_card = 61
ms_activate_memo = 62
ms_read_note = 63
ms_act_filled_balloon = 64
ms_pb_filled_balloon = 65
ms_putback_bread = 66
ms_activate_full_balloon2 = 67
ms_t = 68
ms_pb_filled_balloon2 = 69
ms_just_show_work_order = 70
ms_takeout_gethold = 71
CheckFirstTime("mt.lua")
mt = Set:create("mt.set", "mayan train station", { mt_diaha = 0, mt_diaha2 = 0, mt_diaha3 = 0, mt_diats = 1, mt_gltcu = 2, mt_gltrv = 3, mt_gltrv2 = 3, mt_ovrhd = 4 })
mt.chepito_here = TRUE
mt.chepito_sun = { x = 0.0288381, y = 1.63639, z = 0.25 }
mt.far_walk_vol = 15
mt.med_walk_vol = 30
mt.near_walk_vol = 80
mt.march_chepito = function() -- line 20
    chepito:setpos(0.289326, 1.45675, 0.25)
    chepito:setrot(0, 180, 0)
    SetActorReflection(chepito.hActor, 90)
    while 1 do
        WalkActorForward(chepito.hActor)
        break_here()
    end
end
mt.bye_chepito = function() -- line 33
    mt.chepito_here = FALSE
    mt.chepito_obj:make_untouchable()
    mt.fountain:make_touchable()
    START_CUT_SCENE("no head")
    set_override(mt.bye_chepito_override)
    manny:say_line("/mtma001/")
    manny:hand_gesture()
    start_script(manny.head_follow_mesh, manny, chepito, 7)
    wait_for_message()
    chepito:say_line("/mtch002/")
    sleep_for(1000)
    mt:current_setup(mt_diats)
    start_script(manny.walk_and_face, manny, -0.491129, 0.488721, 0.25, 0, 319.714, 0)
    wait_for_message()
    chepito:say_line("/mtch003/")
    wait_for_message()
    manny:say_line("/mtma004/")
    manny:wait_for_actor()
    manny:shrug_gesture()
    wait_for_message()
    chepito:say_line("/mtch005/")
    wait_for_message()
    chepito:say_line("/mtch006/")
    wait_for_message()
    stop_script(mt.march_chepito)
    box_on("font_fill")
    start_script(chepito.walk_and_face, chepito, -0.0607934, 1.24531, 0.265, 0, 271.449, 0)
    chepito:say_line("/mtch007/")
    chepito:wait_for_actor()
    start_sfx("mtChepCl.wav", nil, 70)
    fade_sfx("mtChepWk.IMU", 500, 0)
    chepito:push_costume("ct_step_out.cos")
    chepito:run_chore(0, "ct_step_out.cos")
    chepito:pop_costume()
    chepito:setpos(-0.00179346, 0.773308, 0.255)
    chepito:setrot(0, 185.921, 0)
    chepito.costume_marker_handler = chepito.mt_footstep_handler
    box_off("font_fill")
    chepito:follow_boxes()
    start_script(chepito.walk_and_face, chepito, -0.725158, 1.07797, 0.25, 0, 225.501, 0)
    chepito:wait_for_message()
    manny:say_line("/mtma008/")
    wait_for_message()
    chepito:say_line("/mtch009/")
    wait_for_message()
    chepito:wait_for_actor()
    chepito:play_chore(chepito_2conv, "chepito.cos")
    chepito:say_line("/mtch010/")
    sleep_for(2000)
    chepito:run_chore(chepito_2base, "chepito.cos")
    chepito:stop_chore(chepito_2base, "chepito.cos")
    start_script(chepito.walk_and_face, chepito, -4.17773, 4.63688, 0, 0, 36.6931, 0)
    manny:turn_toward_entity(mt.tunnel_trigger)
    chepito:wait_for_message()
    sleep_for(1000)
    start_script(mt.chepito_sing)
    chepito:wait_for_actor()
    system_prefs:set_voice_effect("Basic Reverb")
    mt:current_setup(mt_gltcu)
    start_script(mt.chepito_down_tunnel)
    sleep_for(4000)
    stop_script(mt.chepito_sing)
    repeat
        break_here()
    until chepito.fade_cue
    chepito:wait_for_message()
    END_CUT_SCENE()
    system_prefs:set_voice_effect("OFF")
    mt.mural:stop_chore(0)
    mt.mural:play_chore(1)
    mt:current_setup(mt_diats)
    manny:setrot(0, 44.0814, 0)
    stop_script(manny.head_follow_mesh)
    manny:head_look_at(nil)
    stop_script(mt.chepito_down_tunnel)
    chepito:put_in_set(nil)
    music_state:update(system.currentSet)
end
mt.bye_chepito_override = function() -- line 119
    kill_override()
    mt.mural:stop_chore(0)
    mt.mural:play_chore(1)
    system_prefs:set_voice_effect("OFF")
    mt:current_setup(mt_diats)
    stop_script(manny.head_follow_mesh)
    manny:head_look_at(nil)
    manny:setpos(-0.491129, 0.488721, 0.25)
    manny:setrot(0, 44.0814, 0)
    stop_script(mt.march_chepito)
    box_off("font_fill")
    stop_script(mt.chepito_down_tunnel)
    chepito:put_in_set(nil)
    stop_script(mt.chepito_sing)
    mt:force_camerachange()
end
mt.chepito_down_tunnel = function() -- line 137
    chepito:default()
    chepito:put_in_set(mt)
    chepito:ignore_boxes()
    chepito:setpos(-4.75543, 5.55237, 0)
    chepito:setrot(0, 33.6737, 0)
    chepito:set_turn_rate(15)
    repeat
        TurnActorTo(chepito.hActor, -6.47461, 5.98099, 0)
        WalkActorForward(chepito.hActor)
        break_here()
    until proximity(chepito.hActor, -6.47461, 5.98099, 0) < 0.1
    while 1 do
        TurnActorTo(chepito.hActor, -11.7088, 6.41531, 0)
        WalkActorForward(chepito.hActor)
        break_here()
    end
end
chepito.mt_footstep_handler = function(arg1, arg2) -- line 159
    if arg2 == Actor.MARKER_LEFT_WALK then
        arg1:play_sound_at("fsChpl1.WAV", 0, 60)
    else
        arg1:play_sound_at("fsChpr1.WAV", 0, 60)
    end
end
mt.set_up_actors = function() -- line 167
    box_off("font_fill")
    if mt.chepito_here then
        chepito:default()
        chepito:set_walk_rate(0.35)
        chepito:follow_boxes()
        chepito:put_in_set(mt)
        chepito:setpos(-0.145178, 1.63608, 0.2)
        chepito:setrot(0, 510.423, 0)
        mt.mural:play_chore_looping(0)
        LoadCostume("ct_step_out.cos")
        start_script(mt.march_chepito)
        mt.chepito_obj:make_touchable()
        start_sfx("mtChepWk.IMU", IM_HIGH_PRIORITY, mt.far_walk_vol)
    else
        chepito:put_in_set(nil)
        mt.chepito_obj:make_untouchable()
        mt.mural:play_chore(1)
    end
end
mt.update_music_state = function(arg1) -- line 193
    if mt.chepito_here then
        return stateMT_CHEPITO
    else
        return stateMT
    end
end
mt.enter = function(arg1) -- line 202
    NewObjectState(mt_diaha, OBJSTATE_UNDERLAY, "mt_0_water.bm")
    NewObjectState(mt_diats, OBJSTATE_UNDERLAY, "mt_1_water.bm")
    mt.mural:set_object_state("mt_water.cos")
    box_off("font_fill")
    mt.set_up_actors()
    SetShadowColor(20, 20, 20)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 6000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
    AddShadowPlane(manny.hActor, "shadow10")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 0, 0, 6000)
    SetActorShadowPlane(manny.hActor, "shadow20")
    AddShadowPlane(manny.hActor, "shadow20")
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, 0, 0, 6000)
    SetActorShadowPlane(manny.hActor, "shadow41")
    AddShadowPlane(manny.hActor, "shadow41")
    AddShadowPlane(manny.hActor, "shadow42")
    SetActiveShadow(chepito.hActor, 0)
    SetActorShadowPoint(chepito.hActor, 0, 0, 6000)
    SetActorShadowPlane(chepito.hActor, "shadow1")
    AddShadowPlane(chepito.hActor, "shadow1")
    AddShadowPlane(chepito.hActor, "shadow2")
    AddShadowPlane(chepito.hActor, "shadow3")
    AddShadowPlane(chepito.hActor, "shadow10")
    SetActiveShadow(chepito.hActor, 1)
    SetActorShadowPoint(chepito.hActor, 0, 0, 6000)
    SetActorShadowPlane(chepito.hActor, "shadow20")
    AddShadowPlane(chepito.hActor, "shadow20")
    SetActiveShadow(chepito.hActor, 2)
    SetActorShadowPoint(chepito.hActor, 0, 0, 6000)
    SetActorShadowPlane(chepito.hActor, "shadow41")
    AddShadowPlane(chepito.hActor, "shadow41")
    AddShadowPlane(chepito.hActor, "shadow42")
end
mt.exit = function(arg1) -- line 251
    stop_script(mt.march_chepito)
    chepito:free()
    fade_sfx("mtChepWk.IMU")
    KillActorShadows(manny.hActor)
    KillActorShadows(chepito.hActor)
end
mt.camerachange = function(arg1, arg2, arg3) -- line 260
    if mt.chepito_here then
        if arg3 == mt_gltrv then
            set_vol("mtChepWk.IMU", mt.far_walk_vol)
        elseif arg3 == mt_gltcu then
            set_vol("mtChepWk.IMU", mt.med_walk_vol)
        elseif arg3 == mt_diaha then
            set_vol("mtChepWk.IMU", mt.med_walk_vol)
        elseif arg3 == mt_diats then
            set_vol("mtChepWk.IMU", mt.near_walk_vol)
        end
    end
end
mt.chepito_obj = Object:create(mt, "/mttx011/Chepito", 0.033523701, 1.4510601, 0.57999998, { range = 1 })
mt.chepito_obj.use_pnt_x = -0.50647599
mt.chepito_obj.use_pnt_y = 0.98106098
mt.chepito_obj.use_pnt_z = 0.25
mt.chepito_obj.use_rot_x = 0
mt.chepito_obj.use_rot_y = 640.36401
mt.chepito_obj.use_rot_z = 0
mt.chepito_obj.lookAt = function(arg1) -- line 290
    manny:say_line("/mtma012/")
end
mt.chepito_obj.pickUp = function(arg1) -- line 294
    manny:say_line("/mtma013/")
end
mt.chepito_obj.use = function(arg1) -- line 298
    start_script(mt.bye_chepito)
end
mt.chepito_obj.use_note = function(arg1) -- line 302
    START_CUT_SCENE()
    manny:say_line("/mtma014/")
    wait_for_message()
    chepito:say_line("/mtch015/")
    wait_for_message()
    tg.note:lookAt()
    wait_for_message()
    chepito:say_line("/mtch016/")
    wait_for_message()
    chepito:say_line("/mtch017/")
    END_CUT_SCENE()
end
mt.fountain = Object:create(mt, "/mttx032/fountain", 0.033523701, 1.4510601, 0.57999998, { range = 0.89999998 })
mt.fountain.use_pnt_x = -0.50647599
mt.fountain.use_pnt_y = 0.98106098
mt.fountain.use_pnt_z = 0.25
mt.fountain.use_rot_x = 0
mt.fountain.use_rot_y = 640.36401
mt.fountain.use_rot_z = 0
mt.fountain:make_untouchable()
mt.fountain.lookAt = function(arg1) -- line 328
    soft_script()
    manny:say_line("/mtma033/")
    wait_for_message()
    manny:say_line("/mtma034/")
end
mt.fountain.use = function(arg1) -- line 335
    soft_script()
    manny:say_line("/mtma035/")
    wait_for_message()
    manny:say_line("/mtma036/")
end
mt.mural = Object:create(mt, "/mttx018/mural", -1.19041, 8.97614, 1.33, { range = 4.6900001 })
mt.mural.use_pnt_x = -1.47041
mt.mural.use_pnt_y = 4.7161398
mt.mural.use_pnt_z = 0
mt.mural.use_rot_x = 0
mt.mural.use_rot_y = 707.99902
mt.mural.use_rot_z = 0
mt.mural.lookAt = function(arg1) -- line 351
    manny:say_line("/mtma019/")
    wait_for_message()
    manny:say_line("/mtma020/")
end
mt.mural.pickUp = function(arg1) -- line 357
    manny:say_line("/mtma021/")
end
mt.mural.use = function(arg1) -- line 361
    manny:say_line("/mtma022/")
end
mt.tunnel_trigger = Object:create(mt, "/mttx023/tunnel", -10.8212, 6.8014002, 0.97399998, { range = 4.5900002 })
mt.tunnel_trigger.use_pnt_x = -8.2421904
mt.tunnel_trigger.use_pnt_y = 6.7714
mt.tunnel_trigger.use_pnt_z = 0
mt.tunnel_trigger.use_rot_x = 0
mt.tunnel_trigger.use_rot_y = -278.73099
mt.tunnel_trigger.use_rot_z = 0
mt.tunnel_trigger.lookAt = function(arg1) -- line 375
    manny:say_line("/mtma024/")
    wait_for_message()
    manny:say_line("/mtma025/")
end
mt.tunnel_trigger.use = function(arg1) -- line 381
    if not arg1.tried then
        arg1.tried = TRUE
        START_CUT_SCENE()
        manny:say_line("/mtma026/")
        wait_for_message()
        manny:say_line("/mtma027/")
        wait_for_message()
        manny:say_line("/mtma028/")
        wait_for_message()
        END_CUT_SCENE()
    end
    manny:say_line("/mtma029/")
end
mt.tunnel_trigger.walkOut = mt.tunnel_trigger.use
mt.tg_door = Object:create(mt, "/mttx030/doorway", 4.1970701, 4.1256499, 0.46000001, { range = 0.60000002 })
mt.tg_door.use_pnt_x = 3.84707
mt.tg_door.use_pnt_y = 4.1256499
mt.tg_door.use_pnt_z = 0
mt.tg_door.use_rot_x = 0
mt.tg_door.use_rot_y = 631.23297
mt.tg_door.use_rot_z = 0
mt.tg_door.out_pnt_x = 4.0831399
mt.tg_door.out_pnt_y = 4.3487802
mt.tg_door.out_pnt_z = 0
mt.tg_door.out_rot_x = 0
mt.tg_door.out_rot_y = -78.290298
mt.tg_door.out_rot_z = 0
mt.tg_door.walkOut = function(arg1) -- line 417
    tg:come_out_door(tg.mt_door)
end
mt.tg_door.lookAt = function(arg1) -- line 421
    manny:say_line("/mtma031/")
end
mt.chepito_sing = function(arg1) -- line 426
    chepito.fade_cue = FALSE
    wait_for_message()
    chepito:say_line("/such100/")
    chepito:wait_for_message()
    chepito:say_line("/such101/")
    chepito:wait_for_message()
    chepito:say_line("/such102/")
    chepito:wait_for_message()
    chepito:say_line("/such103/")
    chepito:wait_for_message()
    chepito:say_line("/such104/")
    chepito:wait_for_message()
    chepito:say_line("/such105/")
    chepito.fade_cue = TRUE
    chepito:wait_for_message()
    chepito:say_line("/such107/")
    chepito:wait_for_message()
    chepito:say_line("/such108/")
    chepito:wait_for_message()
    chepito:say_line("/such109/")
    chepito:wait_for_message()
    chepito:say_line("/such110/")
    chepito:wait_for_message()
    chepito:say_line("/such111/")
    chepito:wait_for_message()
    chepito:say_line("/such112/")
    chepito:wait_for_message()
    chepito:say_line("/such113/")
    chepito:wait_for_message()
    chepito:say_line("/such121/")
    chepito:wait_for_message()
    chepito:say_line("/such122/")
    chepito:wait_for_message()
    chepito:say_line("/such123/")
    chepito:wait_for_message()
    chepito:say_line("/such125/")
    chepito:wait_for_message()
    chepito:say_line("/such126/")
    chepito:wait_for_message()
    chepito:say_line("/such127/")
    chepito:wait_for_message()
    chepito:say_line("/such114/")
    chepito:wait_for_message()
    chepito:say_line("/such116/")
    chepito:wait_for_message()
    chepito:say_line("/such117/")
    chepito:wait_for_message()
    chepito:say_line("/such118/")
    chepito:wait_for_message()
    chepito:say_line("/such120/")
end
mt_water_Chore0 = 0
mt_water_gone = 1
mug_hook_mug_hooked = 0
mug_hook_mug_hold = 1
mug_hook_mug_hide = 2
mug_hook_mug_rocket = 3
mug_rack_upright = 0
mug_rack_rocket_shake = 1
mug_rack_down = 2
STATE_NULL = 1000
stateNoChange = 1999
stateMO = 1001
stateHA_INTLS = 1002
stateHA_REVLS = 1003
stateHA_ELVOS = 1004
stateHA_MNYCU = 1005
stateHA_EVACU = 1006
stateHA_EVAWS = 1007
stateDO = 1008
stateCO = 1009
stateLE = 1010
stateRF = 1011
stateTU = 1020
stateTU_BRENNIS = 1021
stateLO = 1022
statePK = 1023
stateGA = 1030
stateGS = 1031
stateGS_JAIL = 1032
stateAL = 1040
stateFE = 1041
stateST = 1042
stateOS = 1043
stateRP = 1044
stateHQ = 1050
stateLR = 1060
stateSM = 1070
stateSG = 1071
stateNA = 1072
stateNA_SOLVED = 1073
stateOO_BONE = 1074
stateSP_ENTLA = 1075
stateSP_WEBWS = 1076
stateTR_PMPWS = 1077
stateTR_ESTHA = 1078
stateTR_SOLVED = 1079
stateLB = 1080
stateBD = 1081
stateBD_SOLVED = 1082
stateBV = 1083
stateFC = 1084
stateRE = 1085
stateRI = 1086
stateCB = 1100
stateCF = 1101
stateCF_INTRCM = 1102
stateCC = 1103
stateCC_LUPE = 1104
stateCI = 1105
stateCI_NOODLE = 1106
stateCI_WIDHA = 1190
stateCI_BARWS = 1191
stateCI_EMPTY = 1107
stateCN = 1108
stateCE = 1109
stateCL = 1110
stateCN_QUIET = 1111
stateCI_SONG = 1112
stateEV = 1120
stateBW = 1121
stateBE = 1122
stateBI = 1123
stateBI_POE = 1124
stateBK = 1125
stateHB = 1126
stateLM = 1127
stateLM_TALK = 1128
stateLM_POEM = 1129
stateDD = 1130
stateDD_STRIKE = 1131
stateLX = 1132
stateLX_LOLA = 1133
statePC = 1140
statePI = 1141
statePI_MALLOY = 1142
stateMG = 1143
stateBP = 1144
stateBB = 1145
stateGT = 1146
stateSL = 1147
stateSL_TALK = 1148
stateSL_BOMB = 1149
stateTB = 1150
stateTW = 1151
stateTS = 1152
stateTX = 1153
stateKH = 1154
stateKH_SANS = 1155
stateKS = 1156
stateHH = 1160
stateHL = 1161
stateHL_GLOT = 1162
stateMX = 1163
stateHK = 1164
stateHP = 1165
stateHE = 1166
stateDE = 1167
stateDH = 1168
stateWC = 1169
stateXB = 1170
stateSD = 1171
stateSE = 1172
stateSI = 1173
stateSI_SLEEP = 1174
stateNT = 1180
statePF = 1181
stateLZ = 1201
stateIL = 1202
stateEI = 1203
stateDP = 1204
stateOP = 1205
stateSU = 1210
statePS = 1211
stateMN = 1220
stateMN_CHEPITO = 1221
stateEA = 1222
stateFH = 1223
stateFO = 1224
stateVD = 1230
stateVO = 1231
stateVI = 1232
stateAR = 1233
stateAR_SCARY = 1234
stateAR_PENSV = 1235
stateDR = 1236
stateCY = 1240
stateCW = 1241
stateCV = 1242
stateAC = 1243
stateGH = 1244
stateEW = 1245
stateEW_LATER = 1246
stateCU = 1247
stateBU = 1250
stateBL = 1251
stateBL_BOAT = 1252
stateLU = 1253
stateCUV_LATER = 1254
stateTG = 1301
stateBS = 1302
stateTD = 1303
stateMT_CHEPITO = 1306
stateMT = 1304
stateMY = 1305
stateMK = 1307
stateHB_YR4 = 1308
stateBE_YR4 = 1309
stateJB = 1310
stateXB_YEAR4 = 1311
stateBI_CLBYR4 = 1312
stateBI_KITYR4 = 1313
stateBK_YR4 = 1314
stateHN = 1318
stateFVID = 1319
stateNQ = 1320
stateLW = 1321
stateSH = 1322
stateZW = 1323
stateAT = 1324
stateAT_TRAP = 1334
stateFP = 1325
stateFI = 1326
stateFI_OK = 1327
stateTE = 1328
stateTH = 1329
stateLY = 1330
stateLY_CHOW = 1331
stateLY_BREN = 1333
stateHF = 1332
stateNL = 1340
stateMF = 1350
stateME = 1351
stateHI = 1352
stateGE = 1353
stateSHOOT = 1355
stateEND = 1354
stateOPEN_CRED = 1400
stateEND_CRED = 1401
stateMenu = 1500
SEQ_NULL = 2000
seqClimbRope = 2001
seqGlottisOK = 2010
seqReapBruno = 2020
seqLedgepeckers = 2030
seqGlottisHeart = 2050
seqSlingshotBone = 2055
seqGlottTreeFall = 2060
seqBeaverFly = 2070
seqBeaverSink = 2071
seqMeetVelasco = 2080
seqCelsoPhoto = 2090
seqGlottSingBone = 2140
seqMannySingMeche = 2141
seqFindDetector = 2155
seqGlottDrinkWine = 2156
seqGlottNoWine = 2157
seqRaoulAppears = 2161
seqRaoulKO = 2162
seqRaoulDissed = 2163
seqFakeTix = 2165
seqBefriendCommies = 2180
seqNickPunchout = 2186
seqYr3Iris = 2200
seqHitMen = 2210
seqOpenVault = 2230
seqDeadTix = 2235
seqSprinkler = 2240
seqCraneTrack = 2250
seqCraneFall = 2255
seqYr4Iris = 2300
seqPopBrunoCasket = 2301
seqRocketIdea = 2310
seqJelloSuspense = 2320
seqLumbagoLemo = 2325
seqBreathMint = 2327
seqPigeonFly = 2330
seqCoffeeOnBoys = 2340
seqSproutAha = 2350
seqChowchillaBye = 2360
seqSalvadorDeath = 2370
seqEndCredits = 2399
CheckFirstTime("_music.lua")
dofile("muscript.lua")
FIRST_YEAR1_STATE = 1001
FIRST_YEAR2_STATE = 1100
FIRST_YEAR3_STATE = 1201
FIRST_YEAR4_STATE = 1301
music_state = { }
music_state.current_bundle = nil
music_state.cur_state = STATE_NULL
music_state.set_year = function(arg1, arg2) -- line 31
end
music_state.update = function(arg1, arg2) -- line 60
    local local1
    local local2
    local local3, local4
    if not arg2 then
        arg2 = system.currentSet
    end
    local1 = arg2.setFile
    local3 = arg2:update_music_state()
    if not local3 then
        local2 = strfind(local1, ".set")
        if local2 then
            local1 = strsub(local1, 1, local2 - 1)
        end
        local4 = "state" .. strupper(local1)
        local3 = getglobal(local4)
        if local3 then
            PrintDebug("(music_state:update) Setting music state to '" .. local4 .. "' (" .. local3 .. ")\n")
        else
            PrintDebug("(music_state:update) Music state '" .. local4 .. "' doesn't exist!\n")
        end
    end
    arg1:set_state(local3)
end
music_state.set_sequence = function(arg1, arg2) -- line 100
    if arg2 then
        ImSetSequence(arg2)
    end
end
music_state.set_state = function(arg1, arg2) -- line 112
    if arg2 then
        if arg2 >= FIRST_YEAR1_STATE and arg2 < FIRST_YEAR2_STATE then
            arg1:set_year(1)
        elseif arg2 >= FIRST_YEAR2_STATE and arg2 < FIRST_YEAR3_STATE then
            arg1:set_year(2)
        elseif arg2 >= FIRST_YEAR3_STATE and arg2 < FIRST_YEAR4_STATE then
            arg1:set_year(3)
        elseif arg2 >= FIRST_YEAR4_STATE then
            arg1:set_year(4)
        end
        arg1.cur_state = arg2
        ImSetState(arg2)
    end
end
music_state.pause = function(arg1) -- line 134
    if not arg1.paused then
        arg1.paused = TRUE
        arg1.prev_state = arg1.cur_state
        ImSetState(STATE_NULL)
        arg1.original_sound_fx_vol = ReadRegistryValue("SfxVolume")
        if arg1.original_sound_fx_vol == nil then
            arg1.original_sound_fx_vol = 127
        end
        ImSetSfxVol(0)
    end
end
music_state.unpause = function(arg1) -- line 151
    if arg1.paused then
        arg1.paused = FALSE
        if arg1.original_sound_fx_vol then
            ImSetSfxVol(arg1.original_sound_fx_vol)
        else
            ImSetSfxVol(127)
        end
        if arg1.prev_state ~= nil and arg1.prev_state ~= STATE_NULL then
            ImSetState(arg1.prev_state)
            arg1.prev_state = nil
        end
    end
end
CheckFirstTime("mx.lua")
mx = Set:create("mx.set", "maximinos office", { mx_ofcws = 0, mx_ofcws1 = 0, mx_ofcws2 = 0, mx_diarv = 1, mx_manny = 1, mx_maxcu = 2, mx_max = 2, mx_ovrhd = 3 })
mx.shrinkable = 0.015
dofile("dlg_maximino.lua")
dofile("maximino_idles.lua")
dofile("max_walk.lua")
mx.set_up_actors = function(arg1) -- line 18
    if not maximino then
        maximino = Actor:create(nil, nil, nil, "Maximino")
    end
    maximino:set_costume("maximino_idles.cos")
    maximino:put_in_set(mx)
    maximino:setpos(0, -0.75, 0.2)
    maximino.stop_idle = FALSE
    maximino:set_mumble_chore(maximino_idles_mumble)
    maximino:set_talk_chore(1, maximino_idles_no_talk)
    maximino:set_talk_chore(2, maximino_idles_a)
    maximino:set_talk_chore(3, maximino_idles_c)
    maximino:set_talk_chore(4, maximino_idles_e)
    maximino:set_talk_chore(5, maximino_idles_f)
    maximino:set_talk_chore(6, maximino_idles_l)
    maximino:set_talk_chore(7, maximino_idles_m)
    maximino:set_talk_chore(8, maximino_idles_o)
    maximino:set_talk_chore(9, maximino_idles_t)
    maximino:set_talk_chore(10, maximino_idles_u)
    maximino:set_turn_rate(120)
    maximino:follow_boxes()
    maximino:setrot(0, 180, 0)
    start_script(mx.maximino_idles)
    start_sfx("DorOfOp.WAV", nil, 60)
end
mx.maximino_idles = function(arg1) -- line 44
    local local1
    local local2
    local local3 = maximino:getrot()
    maximino.stop_idle = FALSE
    if arg1 then
        maximino:push_costume("max_walk.cos")
        maximino:play_chore_looping(max_walk_walk)
        maximino:setrot(0, 180, 0, TRUE)
        maximino:wait_for_actor()
        maximino:stop_chore(max_walk_walk)
        maximino:pop_costume()
    end
    while not maximino.stop_idle do
        local2 = rndint(2)
        if local2 == 0 then
            maximino:play_chore(maximino_idles_look_left)
            maximino:wait_for_chore(maximino_idles_look_left)
            maximino:stop_chore(maximino_idles_look_left)
            maximino:play_chore_looping(maximino_idles_hold_left)
            local1 = rndint(8)
            repeat
                sleep_for(500)
                local1 = local1 - 1
            until local1 <= 0 or maximino.stop_idle
            maximino:stop_chore(maximino_idles_hold_left)
            maximino:play_chore(maximino_idles_left_forward)
            maximino:wait_for_chore(maximino_idles_left_forward)
        elseif local2 == 1 then
            maximino:play_chore(maximino_idles_look_right)
            maximino:wait_for_chore(maximino_idles_look_right)
            maximino:stop_chore(maximino_idles_look_right)
            maximino:play_chore_looping(maximino_idles_hold_right)
            local1 = rndint(8)
            repeat
                sleep_for(500)
                local1 = local1 - 1
            until local1 <= 0 or maximino.stop_idle
            maximino:stop_chore(maximino_idles_hold_right)
            maximino:play_chore(maximino_idles_right_forward)
            maximino:wait_for_chore(maximino_idles_right_forward)
        else
            maximino:play_chore(maximino_idles_to_smoke)
            maximino:wait_for_chore(maximino_idles_to_smoke)
            maximino:stop_chore(maximino_idles_to_smoke)
            maximino:play_chore_looping(maximino_idles_smoke)
            local1 = rndint(8)
            repeat
                sleep_for(500)
                local1 = local1 - 1
            until local1 <= 0 or maximino.stop_idle
            maximino:stop_chore(maximino_idles_smoke)
            maximino:play_chore(maximino_idles_smoke_done)
            maximino:wait_for_chore(maximino_idles_smoke_done)
        end
        local1 = rndint(8)
        repeat
            sleep_for(500)
            local1 = local1 - 1
        until local1 <= 0 or maximino.stop_idle
        maximino:stop_chore(maximino_idles_right_forward)
        maximino:stop_chore(maximino_idles_left_forward)
    end
    maximino:push_costume("max_walk.cos")
    maximino:play_chore_looping(max_walk_walk)
    maximino:setrot(0, 380, 0, TRUE)
    maximino:wait_for_actor()
    maximino:stop_chore(max_walk_walk)
    maximino:pop_costume()
    maximino:play_chore(maximino_idles_forward_hold)
end
mx.footstep_monitor = function(arg1) -- line 123
    while system.currentSet == mx do
        if manny:find_sector_name("carpet_box") then
            if manny.footsteps ~= footsteps.rug then
                manny.footsteps = footsteps.rug
            end
        elseif manny:find_sector_name("marble_box") then
            if manny.footsteps ~= footsteps.marble then
                manny.footsteps = footsteps.marble
            end
        end
        break_here()
    end
end
mx.enter = function(arg1) -- line 138
    start_script(mx.footstep_monitor, mx)
    mx:set_up_actors()
end
mx.exit = function(arg1) -- line 143
    stop_script(mx.footstep_monitor)
    maximino:free()
    stop_script(mx.maximino_idles)
end
mx.intro_trigger = { }
mx.intro_trigger.walkOut = function(arg1) -- line 155
    START_CUT_SCENE()
    MakeSectorActive("intro_trigger", FALSE)
    mx.met_max = TRUE
    maximino.stop_idle = TRUE
    manny:walkto(-0.176439, 0.512355, 0.2, 0, -158.102, 0)
    manny:say_line("/mxma052/")
    wait_for_message()
    mx:current_setup(mx_maxcu)
    sleep_for(300)
    maximino:say_line("/mxmx053/")
    maximino:wait_for_message()
    maximino:say_line("/mxmx054/")
    maximino:wait_for_message()
    wait_for_script(mx.maximino_idles)
    manny:say_line("/mxma055/")
    maximino:play_chore(maximino_idles_to_smoke)
    maximino:wait_for_chore(maximino_idles_to_smoke)
    maximino:stop_chore(maximino_idles_to_smoke)
    maximino:play_chore(maximino_idles_smoke_done)
    maximino:wait_for_chore(maximino_idles_smoke_done)
    manny:wait_for_message()
    maximino:say_line("/mxmx056/")
    maximino:play_chore(maximino_idles_cig_gesture)
    maximino:wait_for_message()
    maximino:say_line("/mxmx057/")
    maximino:wait_for_chore()
    maximino:wait_for_message()
    END_CUT_SCENE()
    Dialog:run("mx1", "dlg_maximino.lua")
end
mx.trophies1 = Object:create(mx, "/mxtx058/trophies", -1.245, 1.55, 0.55000001, { range = 0.80000001 })
mx.trophies1.use_pnt_x = -0.82483399
mx.trophies1.use_pnt_y = 1.29995
mx.trophies1.use_pnt_z = 0.2
mx.trophies1.use_rot_x = 0
mx.trophies1.use_rot_y = -982.16699
mx.trophies1.use_rot_z = 0
mx.trophies1.lookAt = function(arg1) -- line 196
    if not mx.trophies1.seen then
        mx.trophies1.seen = TRUE
        START_CUT_SCENE()
        manny:say_line("/mxma059/")
        wait_for_message()
        time_to_look = FALSE
        manny:head_look_at(mx.max_obj)
        maximino:say_line("/mxmx072/")
        wait_for_message()
        END_CUT_SCENE()
        if not mx.met_max then
            mx.intro_trigger:walkOut()
        end
        time_to_look = TRUE
    else
        manny:say_line("/mxma061/")
    end
end
mx.trophies1.pickUp = function(arg1) -- line 217
    manny:say_line("/mxma062/")
    mx.trophies1.know_max()
end
mx.trophies1.know_max = function(arg1) -- line 222
    START_CUT_SCENE()
    wait_for_message()
    time_to_look = FALSE
    manny:head_look_at(mx.max_obj)
    maximino:say_line("/mxmx063/")
    wait_for_message()
    END_CUT_SCENE()
    if not mx.met_max then
        mx.intro_trigger:walkOut()
    end
    time_to_look = TRUE
end
mx.trophies1.use = mx.trophies1.pickUp
mx.silver_cup = Object:create(mx, "/mxtx064/silver cup", -1.325, 1.58, 0.97000003, { range = 1 })
mx.silver_cup.use_pnt_x = -0.82483399
mx.silver_cup.use_pnt_y = 1.29995
mx.silver_cup.use_pnt_z = 0.2
mx.silver_cup.use_rot_x = 0
mx.silver_cup.use_rot_y = -982.16699
mx.silver_cup.use_rot_z = 0
mx.silver_cup.parent = mx.trophies1
mx.gold_cups = Object:create(mx, "/mxtx065/gold cups", -1.325, 1.58, 1.27, { range = 1.3 })
mx.gold_cups.use_pnt_x = -0.82483399
mx.gold_cups.use_pnt_y = 1.29995
mx.gold_cups.use_pnt_z = 0.2
mx.gold_cups.use_rot_x = 0
mx.gold_cups.use_rot_y = -982.16699
mx.gold_cups.use_rot_z = 0
mx.gold_cups.parent = mx.trophies1
mx.gold_cat = Object:create(mx, "/mxtx066/statue", -1.115, 0.99000001, 1.08, { range = 1.1 })
mx.gold_cat.use_pnt_x = -0.82483399
mx.gold_cat.use_pnt_y = 1.29995
mx.gold_cat.use_pnt_z = 0.2
mx.gold_cat.use_rot_x = 0
mx.gold_cat.use_rot_y = -935.56097
mx.gold_cat.use_rot_z = 0
mx.gold_cat.lookAt = function(arg1) -- line 266
    manny:say_line("/mxma067/")
    if not mx.met_max then
        mx.trophies1.know_max()
    end
end
mx.gold_cat.pickUp = mx.trophies1.pickUp
mx.gold_cat.use = mx.trophies1.pickUp
mx.max_obj = Object:create(mx, "/mxtx068/Maximino", 0.138988, -0.42385501, 0.700001, { range = 1.2 })
mx.max_obj.use_pnt_x = -0.29101199
mx.max_obj.use_pnt_y = 0.146145
mx.max_obj.use_pnt_z = 0.2
mx.max_obj.use_rot_x = 0
mx.max_obj.use_rot_y = -1199.86
mx.max_obj.use_rot_z = 0
mx.max_obj.lookAt = function(arg1) -- line 285
    manny:say_line("/mxma069/")
end
mx.max_obj.use = function(arg1) -- line 289
    if hl.glottis_gambling and not mx1[90].said then
        mx1[90].off = FALSE
        mx1.talked_out = FALSE
    end
    if not mx1.talked_out then
        maximino.stop_idle = TRUE
        START_CUT_SCENE()
        manny:walkto(-0.176439, 0.512355, 0.2, 0, -158.102, 0)
        END_CUT_SCENE()
    end
    Dialog:run("mx1", "dlg_maximino.lua")
end
mx.max_obj.use_blackmail = function(arg1) -- line 303
    START_CUT_SCENE()
    manny:say_line("/hlma176/")
    manny:twist_head_gesture()
    manny:wait_for_message()
    manny:walkto(arg1)
    sleep_for(500)
    manny:walkto(-0.0844607, 0.390257, 0.2, 0, 5.6355, 0)
    manny:wait_for_actor()
    manny:say_line("/moma034/")
    manny:clear_hands()
    END_CUT_SCENE()
end
mx.hl_door = Object:create(mx, "/mxtx070/door", -0.0068274802, 2.6709199, 0.44999999, { range = 0.60000002 })
mx.hl_door.use_pnt_x = -0.0068274802
mx.hl_door.use_pnt_y = 2.4509201
mx.hl_door.use_pnt_z = 0
mx.hl_door.use_rot_x = 0
mx.hl_door.use_rot_y = 0.56473798
mx.hl_door.use_rot_z = 0
mx.hl_door.out_pnt_x = -0.0082965503
mx.hl_door.out_pnt_y = 2.5999999
mx.hl_door.out_pnt_z = 0
mx.hl_door.out_rot_x = 0
mx.hl_door.out_rot_y = 0.56473798
mx.hl_door.out_rot_z = 0
mx.hl_box = mx.hl_door
mx.hl_door.lookAt = function(arg1) -- line 339
    manny:say_line("/mxma071/")
end
mx.hl_door.walkOut = function(arg1) -- line 343
    start_sfx("DorOfOp.WAV", nil, 60)
    hl:come_out_door(hl.mx_door)
end
my_blueprints_show = 0
my_blueprints_hide = 1
td = { }
td.mug = { parent = Object }
CheckFirstTime("my.lua")
dofile("gl_pass_out.lua")
dofile("meche_w_gl.lua")
my = Set:create("my.set", "mayan workshop", { my_top = 0, my_glofg = 1 })
my.meche_w_glottis_table = Idle:create("meche_w_gl")
idt = my.meche_w_glottis_table
idt:add_state("base", { base = 0.6, soothe_1hand = 0.4 })
idt:add_state("soothe_1hand", { base = 0.6, soothe_1hand = 0.4 })
my.mechanics_turned = FALSE
my.worship_idle_table = Idle:create("mechanic_idles")
idt = my.worship_idle_table
idt:add_state("base", { base = 0.8, to_hold_chin = 0.1, tip_toes = 0.05, scratch_butt = 0.05 })
idt:add_state("to_hold_chin", { hold_chin = 1 })
idt:add_state("hold_chin", { hold_chin = 0.8, chin2base = 0.2 })
idt:add_state("chin2base", { base = 1 })
idt:add_state("tip_toes", { base = 1 })
idt:add_state("scratch_butt", { base = 1 })
my.work_idle_table = Idle:create("mechanic_idles")
idt = my.work_idle_table
idt:add_state("wrench_gond", { wrench_gond = 0.6, twist_wrench = 0.2, inspect_work = 0.1, akimbo = 0.1 })
idt:add_state("twist_wrench", { wrench_gond = 0.5, twist_wrench = 0.3, inspect_work = 0.1, akimbo = 0.1 })
idt:add_state("inspect_work", { wrench_gond = 0.6, twist_wrench = 0.2, inspect_work = 0.1, akimbo = 0.1 })
idt:add_state("akimbo", { wrench_gond = 0.6, twist_wrench = 0.2, inspect_work = 0.1, akimbo = 0.1 })
my.mechanics_work_idles = function(arg1) -- line 85
    local local1 = { "myTool1.WAV", "myTool2.WAV", "myTool3.WAV", "myTool4.WAV", "dd_hms.WAV", "tinker3.WAV" }
    local local2
    while system.currentSet == my do
        if mechanic3:is_choring(mechanic_idles_wrench_gond) then
            local2 = pick_one_of(local1, TRUE)
            start_sfx(local2, IM_MED_PRIORITY, 70)
            set_pan(local2, 30)
            mechanic3:wait_for_chore(mechanic_idles_wrench_gond)
        elseif mechanic3:is_choring(mechanic_idles_twist_wrench) then
            local2 = pick_one_of(local1, TRUE)
            start_sfx(local2, IM_MED_PRIORITY, 70)
            set_pan(local2, 30)
            mechanic3:wait_for_chore(mechanic_idles_twist_wrench)
        end
        break_here()
    end
end
my.mechanics_kill_idles = function(arg1, arg2) -- line 105
    local local1, local2, local3
    if arg2 == 1 then
        local1 = mechanic1
    elseif arg2 == 2 then
        local1 = mechanic2
    elseif arg2 == nil then
        local2 = start_script(my.mechanics_kill_idles, my, 1)
        local3 = start_script(my.mechanics_kill_idles, my, 2)
        while find_script(local2) or find_script(local3) do
            break_here()
        end
    end
    if arg2 ~= nil and local1 ~= nil then
        if local1.worship_idle_script then
            stop_script(local1.worship_idle_script)
        end
        if local1:is_choring(mechanic_idles_to_hold_chin) then
            local1:run_chore(mechanic_idles_chin2base)
        elseif local1:is_choring(mechanic_idles_hold_chin) then
            local1:run_chore(mechanic_idles_chin2base)
        elseif local1:is_choring(mechanic_idles_chin2base) or local1:is_choring(mechanic_idles_tip_toes) or local1:is_choring(mechanic_idles_scratch_butt) then
            local1:wait_for_chore()
        end
        local1:play_chore(mechanic_idles_base)
    end
end
my.mechanics_face_manny = function(arg1, arg2) -- line 137
    if not glottis.fainted and not my.mechanics_turned then
        my:mechanics_kill_idles(arg2)
        if not arg2 then
            mechanic1:stop_chore(mechanic_idles_base)
            mechanic2:stop_chore(mechanic_idles_base)
            mechanic1:play_chore(mechanic_idles_lk_left)
            mechanic2:play_chore(mechanic_idles_to_lk_right)
            mechanic1:wait_for_chore(mechanic_idles_lk_left)
            mechanic2:wait_for_chore(mechanic_idles_to_lk_right)
            mechanic1:play_chore(mechanic_idles_lk_left_hold)
            mechanic2:play_chore(mechanic_idles_lk_right)
        elseif arg2 == 1 then
            mechanic1:stop_chore(mechanic_idles_base)
            mechanic1:play_chore(mechanic_idles_lk_left)
            mechanic1:wait_for_chore(mechanic_idles_lk_left)
            mechanic1:play_chore(mechanic_idles_lk_left_hold)
        elseif arg2 == 2 then
            mechanic2:stop_chore(mehcanic_idles_base)
            mechanic2:play_chore(mechanic_idles_to_lk_right)
            mechanic2:wait_for_chore(mechanic_idles_to_lk_right)
            mechanic2:play_chore(mechanic_idles_lk_right)
        end
        my.mechanics_turned = TRUE
    end
end
my.mechanics_stop_face_manny = function(arg1, arg2) -- line 165
    if find_script(my.mechanics_face_manny) then
        wait_for_script(my.mechanics_face_manny)
    end
    if my.mechanics_turned then
        if not arg2 then
            mechanic1:stop_chore(mechanic_idles_lk_left_hold)
            mechanic1:play_chore(mechanic_idles_lk_left2base)
            mechanic2:stop_chore(mechanic_idles_lk_right)
            mechanic2:play_chore(mechanic_idles_right2base)
            mechanic1:wait_for_chore(mechanic_idles_lk_left2base)
            mechanic2:wait_for_chore(mechanic_idles_right2base)
            mechanic1:play_chore(mechanic_idles_base)
            mechanic2:play_chore(mehcanic_idles_base)
            mechanic1.worship_idle_script = start_script(mechanic1.new_run_idle, mechanic1, "base", my.worship_idle_table, "mechanic_idles.cos")
            mechanic2.worship_idle_script = start_script(mechanic2.new_run_idle, mechanic2, "base", my.worship_idle_table, "mechanic_idles.cos")
        elseif arg2 == 1 then
            mechanic1:stop_chore(mechanic_idles_lk_left_hold)
            mechanic1:play_chore(mechanic_idles_lk_left2base)
            mechanic1:wait_for_chore(mechanic_idles_lk_left2base)
            mechanic1:play_chore(mechanic_idles_base)
            mechanic1.worship_idle_script = start_script(mechanic1.new_run_idle, mechanic1, "base", my.worship_idle_table, "mechanic_idles.cos")
        elseif arg2 == 2 then
            mechanic2:stop_chore(mechanic_idles_lk_right)
            mechanic2:play_chore(mechanic_idles_right2base)
            mechanic2:wait_for_chore(mechanic_idles_right2base)
            mechanic2:play_chore(mehcanic_idles_base)
            mechanic2.worship_idle_script = start_script(mechanic2.new_run_idle, mechanic2, "base", my.worship_idle_table, "mechanic_idles.cos")
        end
        my.mechanics_turned = FALSE
    end
end
my.intro = function(arg1) -- line 199
    start_script(my.mechanics_kill_idles, my)
    my.seen_intro = TRUE
    START_CUT_SCENE()
    manny:set_collision_mode(COLLISION_OFF)
    glottis:set_collision_mode(COLLISION_OFF)
    meche:set_collision_mode(COLLISION_OFF)
    my:cameraman()
    break_here()
    glottis:say_line("/mygl052/", { background = TRUE })
    sleep_for(2000)
    mechanic1:say_line("/mym1050/", { background = TRUE })
    mechanic2:say_line("/mym2051/", { background = TRUE })
    manny:head_look_at(my.glottis_obj)
    glottis:wait_for_message()
    mechanic1:wait_for_message()
    mechanic2:wait_for_message()
    start_script(manny.walkto_object, manny, my.glottis_obj)
    mechanic1:say_line("/mym1050/", { background = TRUE, skip_log = TRUE })
    mechanic2:say_line("/mym2051/", { background = TRUE, skip_log = TRUE })
    mechanic1:wait_for_message()
    mechanic2:wait_for_message()
    wait_for_script(manny.walkto_object)
    manny:say_line("/myma053/")
    manny:wait_for_message()
    mechanic1:say_line("/mym1054/")
    mechanic1:wait_for_message()
    mechanic1:say_line("/mym1055/", { background = TRUE })
    sleep_for(400)
    mechanic2:say_line("/mym2056/", { background = TRUE })
    mechanic2:wait_for_message()
    manny:tilt_head_gesture()
    manny:say_line("/myma057/")
    manny:wait_for_message()
    my:mechanics_face_manny()
    mechanic1:say_line("/mym1058/")
    mechanic1:wait_for_message()
    manny:shrug_gesture()
    manny:say_line("/myma059/")
    manny:wait_for_message()
    mechanic1:say_line("/mym1060/", { background = TRUE })
    sleep_for(200)
    mechanic2:say_line("/mym2061/", { background = TRUE })
    manny:head_look_at(my.mechanic)
    mechanic2:wait_for_message()
    start_script(my.mechanics_stop_face_manny)
    mechanic1:say_line("/mym1062/")
    mechanic1:wait_for_message()
    manny:head_look_at(my.glottis_obj)
    manny:say_line("/myma063/")
    manny.knows_glottis_is_dying = TRUE
    END_CUT_SCENE()
end
my.set_up_actors = function(arg1) -- line 271
    mechanic1:default()
    mechanic1:put_in_set(my)
    mechanic1.saylineTable.x = 400
    mechanic1.saylineTable.y = 90
    if not glottis.fainted then
        mechanic1:setpos(0.868497, 1.14373, 0.8)
        mechanic1:setrot(0, 30, 0)
    else
        mechanic1:setpos(-0.60037, 2.04926, 0.8)
        mechanic1:setrot(0, 350, 0)
    end
    mechanic1:play_chore(mechanic_idles_base)
    mechanic1.worship_idle_script = start_script(mechanic1.new_run_idle, mechanic1, "base", my.worship_idle_table, "mechanic_idles.cos")
    mechanic2:default()
    mechanic2:put_in_set(my)
    mechanic2.saylineTable.x = 300
    mechanic2.saylineTable.y = 60
    if not glottis.fainted then
        mechanic2:setpos(-0.312695, 1.32205, 0.8)
        mechanic2:setrot(0, 300, 0)
    else
        mechanic2:setpos(-0.11137, 2.32426, 0.8)
        mechanic2:setrot(0, 10, 0)
    end
    mechanic2:play_chore(mechanic_idles_base)
    mechanic2.worship_idle_script = start_script(mechanic2.new_run_idle, mechanic2, "base", my.worship_idle_table, "mechanic_idles.cos")
    mechanic3:default()
    mechanic3:put_in_set(my)
    mechanic3:setpos(-1.23306, 1.48797, 0.8)
    mechanic3:setrot(0, 90, 0)
    start_script(mechanic3.new_run_idle, mechanic3, "wrench_gond", my.work_idle_table, "mechanic_idles.cos")
    start_script(my.mechanics_work_idles, my)
    manny:set_collision_mode(COLLISION_OFF)
    glottis:set_collision_mode(COLLISION_OFF)
    meche:set_collision_mode(COLLISION_OFF)
    glottis:default("sailor")
    glottis:put_in_set(my)
    glottis:setpos(0.684882, 1.21894, 0.8267)
    glottis:setrot(0, 199.944, 0)
    glottis:push_costume("gl_pass_out.cos")
    glottis:play_chore(gl_pass_out_passed_out, "gl_pass_out.cos")
    if seen_hell_train then
        meche:set_costume(nil)
        meche:set_costume("meche_w_gl.cos")
        meche:put_in_set(my)
        meche:set_mumble_chore(meche_w_gl_mumble)
        meche:set_talk_chore(1, meche_w_gl_stop_talk)
        meche:set_talk_chore(2, meche_w_gl_a)
        meche:set_talk_chore(3, meche_w_gl_c)
        meche:set_talk_chore(4, meche_w_gl_e)
        meche:set_talk_chore(5, meche_w_gl_f)
        meche:set_talk_chore(6, meche_w_gl_l)
        meche:set_talk_chore(7, meche_w_gl_m)
        meche:set_talk_chore(8, meche_w_gl_o)
        meche:set_talk_chore(9, meche_w_gl_t)
        meche:set_talk_chore(10, meche_w_gl_u)
        meche:ignore_boxes()
        meche:set_collision_mode(COLLISION_OFF)
        meche:setpos(-0.324862, 1.73889, 0.8)
        meche:setrot(0, 228.57, 0)
        meche.w_glottis_idle = start_script(meche.new_run_idle, meche, "base", my.meche_w_glottis_table, "meche_w_gl.cos")
        my.meche_obj:make_touchable()
    else
        my.meche_obj:make_untouchable()
    end
end
my.set_up_mechanic_objects = function(arg1) -- line 348
    if glottis.fainted then
        my.mechanic.use_pnt_x = -0.527928
        my.mechanic.use_pnt_y = 1.47087
        my.mechanic.use_pnt_z = 0.8
        my.mechanic.use_rot_x = 0
        my.mechanic.use_rot_y = 350
        my.mechanic.use_rot_z = 0
        my.mechanic.obj_x = -0.580636
        my.mechanic.obj_y = 2.10709
        my.mechanic.obj_z = 1.091
        my.mechanic2.use_pnt_x = -0.527928
        my.mechanic2.use_pnt_y = 1.47087
        my.mechanic2.use_pnt_z = 0.8
        my.mechanic.use_rot_x = 0
        my.mechanic.use_rot_y = 350
        my.mechanic.use_rot_z = 0
        my.mechanic2.obj_x = -0.134636
        my.mechanic2.obj_y = 2.35909
        my.mechanic2.obj_z = 1.101
    end
    my.mechanic:make_touchable()
    my.mechanic2:make_touchable()
end
my.hide_kitchen = function(arg1) -- line 382
    local local1
    while 1 do
        if manny:find_sector_name("upper_box") then
            local1 = FALSE
        else
            local1 = TRUE
        end
        if local1 ~= my.mk_door.touchable then
            if local1 then
                my.mk_door:make_touchable()
            else
                my.mk_door:make_untouchable()
            end
        end
        break_here()
    end
end
my.enter = function(arg1) -- line 402
    manny:set_collision_mode(COLLISION_OFF)
    glottis:set_collision_mode(COLLISION_OFF)
    meche:set_collision_mode(COLLISION_OFF)
    my:current_setup(my_glofg)
    start_script(my.set_up_actors, my)
    my:add_object_state(my_glofg, "my_blueprints.bm", nil, OBJSTATE_UNDERLAY)
    my.blueprints:set_object_state("my_blueprints.cos")
    if glottis.fainted then
        my.blueprints:make_touchable()
        my.blueprints:play_chore(0)
    else
        my.blueprints:make_untouchable()
    end
    my:set_up_mechanic_objects()
    start_script(my.hide_kitchen, my)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 6000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
end
my.exit = function(arg1) -- line 430
    stop_script(my.mechanics_work_idles)
    stop_script(my.hide_kitchen)
    mechanic1:free()
    mechanic2:free()
    mechanic3:free()
    glottis:free()
    KillActorShadows(manny.hActor)
end
my.gondola = Object:create(my, "/mytx003/gondola", -1.57847, 1.24098, 1.2499, { range = 1 })
my.gondola.use_pnt_x = -0.97988999
my.gondola.use_pnt_y = 0.98924202
my.gondola.use_pnt_z = 0.80000001
my.gondola.use_rot_x = 0
my.gondola.use_rot_y = 86.627098
my.gondola.use_rot_z = 0
my.gondola.lookAt = function(arg1) -- line 456
    if not arg1.seen then
        arg1.seen = TRUE
        START_CUT_SCENE()
        manny:hand_gesture()
        manny:say_line("/myma004/")
        wait_for_message()
        manny:twist_head_gesture()
        manny:say_line("/myma005/")
        END_CUT_SCENE()
    else
        manny:say_line("/myma005/")
    end
end
my.gondola.pickUp = function(arg1) -- line 471
    START_CUT_SCENE()
    manny:twist_head_gesture()
    manny:say_line("/myma006/")
    END_CUT_SCENE()
end
my.gondola.use = function(arg1) -- line 478
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:head_look_at(my.mechanic2)
        manny:setrot(0, 275, 0, TRUE)
        manny:say_line("/myma007/")
        manny:wait_for_message()
        my:mechanics_face_manny()
        mechanic1:say_line("/mym1008/")
        mechanic1:wait_for_message()
        mechanic2:say_line("/mym2009/")
        mechanic2:wait_for_message()
        start_script(my.mechanics_stop_face_manny, my)
        manny:head_look_at(nil)
        END_CUT_SCENE()
    end
end
my.gondola.use_rag = function(arg1) -- line 496
    manny:say_line("/myma010/")
end
my.gondola.use_oily_rag = function(arg1) -- line 500
    manny:say_line("/myma011/")
end
my.glottis_obj = Object:create(my, "/mytx012/Glottis", 0.289318, 1.81618, 1.2539001, { range = 1 })
my.glottis_obj.use_pnt_x = -0.0096349996
my.glottis_obj.use_pnt_y = 1.05509
my.glottis_obj.use_pnt_z = 0.80000001
my.glottis_obj.use_rot_x = 0
my.glottis_obj.use_rot_y = 325.07001
my.glottis_obj.use_rot_z = 0
my.glottis_obj.lookAt = function(arg1) -- line 512
    manny:twist_head_gesture()
    manny:say_line("/myma064/")
end
my.glottis_obj.pickUp = function(arg1) -- line 517
    manny:head_look_at(my.mechanic)
    manny:say_line("/myma014/")
end
my.glottis_obj.use_scythe = function(arg1) -- line 522
    manny:say_line("/myma065/")
end
my.glottis_obj.use_rag = function(arg1) -- line 526
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:head_look_at(my.mechanic)
        manny:say_line("/myma016/")
        manny:wait_for_message()
        start_script(my.mechanics_face_manny, my)
        mechanic1:say_line("/mym1017/")
        mechanic1:wait_for_message()
        mechanic2:say_line("/mym2018/")
        mechanic2:wait_for_message()
        manny:head_look_at(nil)
        manny:say_line("/myma019/")
        start_script(my.mechanics_stop_face_manny, my)
        END_CUT_SCENE()
    end
end
my.glottis_obj.use_mug = function(arg1) -- line 544
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        if glottis.fainted then
            manny:say_line("/myma133/")
        else
            glottis:play_chore(gl_pass_out_talk_out, "gl_pass_out.cos")
            sleep_for(500)
            glottis:say_line("/mygl134/")
            glottis:wait_for_message()
            glottis:wait_for_chore(gl_pass_out_talk_out, "gl_pass_out.cos")
            glottis:play_chore(gl_pass_out_passed_out, "gl_pass_out.cos")
        end
        END_CUT_SCENE()
    end
end
my.glottis_obj.use_oily_rag = function(arg1) -- line 563
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:say_line("/myma020/")
        wait_for_message()
        glottis:play_chore(gl_pass_out_talk_out, "gl_pass_out.cos")
        sleep_for(500)
        glottis:say_line("/mygl021/")
        glottis:wait_for_message()
        glottis:say_line("/mygl022/")
        glottis:wait_for_message()
        glottis:say_line("/mygl023/")
        glottis:wait_for_message()
        glottis:wait_for_chore(gl_pass_out_talk_out, "gl_pass_out.cos")
        glottis:play_chore(gl_pass_out_passed_out, "gl_pass_out.cos")
        END_CUT_SCENE()
    end
end
my.glottis_obj.use_note = function(arg1) -- line 584
    tg.note:scare_response()
end
my.glottis_obj.use = function(arg1) -- line 588
    if manny:walkto_object(arg1) then
        Dialog:run("gl3", "dlg_glot3.lua")
    end
end
my.mechanic = Object:create(my, "/mytx024/mechanic", 0.90907401, 1.2058901, 1.0159, { range = 0.69999999 })
my.mechanic.use_pnt_x = my.glottis_obj.use_pnt_x
my.mechanic.use_pnt_y = my.glottis_obj.use_pnt_y
my.mechanic.use_pnt_z = my.glottis_obj.use_pnt_z
my.mechanic.use_rot_x = 0
my.mechanic.use_rot_y = 259.65302
my.mechanic.use_rot_z = 0
my.mechanic.lookAt = function(arg1) -- line 603
    manny:say_line("/myma025/")
end
my.mechanic.pickUp = function(arg1) -- line 607
    manny:say_line("/myma026/")
end
my.mechanic.use = function(arg1) -- line 611
    if manny:walkto_object(arg1) then
        manny:head_look_at(arg1)
        Dialog:run("mm1", "dlg_mechanics.lua")
    end
end
my.mechanic.use_rag = function(arg1) -- line 618
    my.glottis_obj:use_rag()
end
my.mechanic.use_mug = function(arg1) -- line 622
    if manny:walkto_object(arg1) then
        if glottis.fainted then
            if not my.mechanics.shown_mug then
                my.mechanics.shown_mug = TRUE
                START_CUT_SCENE()
                manny:say_line("/myma066/")
                manny:wait_for_message()
                start_script(my.mechanics_face_manny, my, 1)
                mechanic1:say_line("/mym1067/")
                mechanic1:wait_for_message()
                mechanic2:say_line("/mym2068/")
                start_script(my.mechanics_stop_face_manny, my, 1)
                END_CUT_SCENE()
            else
                START_CUT_SCENE()
                manny:say_line("/myma069/")
                manny:wait_for_message()
                my:mechanics_face_manny()
                mechanic1:say_line("/mym1070/")
                mechanic1:wait_for_message()
                mechanic2:say_line("/mym2071/")
                mechanic2:wait_for_message()
                mechanic1:say_line("/mym1072/")
                mechanic1:wait_for_message()
                start_script(my.mechanics_stop_face_manny, my)
                END_CUT_SCENE()
            end
        else
            mechanic1:say_line("/mym1135/")
        end
    end
end
my.mechanic.use_note = function(arg1) -- line 657
    tg.note:scare_response()
end
my.mechanic.use_oily_rag = function(arg1) -- line 661
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        start_script(my.mechanics_face_manny, my)
        mechanic1:say_line("/mym1027/")
        mechanic1:wait_for_message()
        mechanic2:say_line("/mym2028/")
        start_script(my.mechanics_stop_face_manny, my)
        END_CUT_SCENE()
    end
end
my.mechanic2 = Object:create(my, "/mytx024/mechanic", -0.201547, 1.32197, 1.0571001, { range = 0.69999999 })
my.mechanic2.use_pnt_x = my.glottis_obj.use_pnt_x
my.mechanic2.use_pnt_y = my.glottis_obj.use_pnt_y
my.mechanic2.use_pnt_z = my.glottis_obj.use_pnt_z
my.mechanic2.use_rot_x = 0
my.mechanic2.use_rot_y = 23.421301
my.mechanic2.use_rot_z = 0
my.mechanic2.lookAt = my.mechanic.lookAt
my.mechanic2.pickUp = my.mechanic.pickUp
my.mechanic2.use = my.mechanic.use
my.mechanic2.use_rag = my.mechanic.use_rag
my.mechanic2.use_mug = my.mechanic.use_mug
my.mechanic2.use_note = my.mechanic.use_note
my.mechanic2.use_oily_rag = my.mechanic.use_oily_rag
my.drawers = Object:create(my, "/mytx029/drawers", -1.5660599, 1.20272, 0.25839999, { range = 0.60000002 })
my.drawers.use_pnt_x = -1.73005
my.drawers.use_pnt_y = 1.10267
my.drawers.use_pnt_z = 0
my.drawers.use_rot_x = 0
my.drawers.use_rot_y = 14.4633
my.drawers.use_rot_z = 0
my.drawers.lookAt = function(arg1) -- line 705
    manny:say_line("/myma030/")
end
my.drawers.use = function(arg1) -- line 709
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:play_chore(msb_give, "msb.cos")
        manny:wait_for_chore(msb_give, "msb.cos")
        sleep_for(250)
        start_sfx("gaTools.WAV")
        wait_for_sound("gaTools.WAV")
        sleep_for(250)
        manny:stop_chore(msb_give, "msb.cos")
        manny:play_chore(msb_give_exit, "msb.cos")
        manny:wait_for_chore(msb_give_exit, "msb.cos")
        manny:stop_chore(msb_give_exit, "msb.cos")
        manny:say_line("/myma031/")
        END_CUT_SCENE()
    end
end
my.drawers.use_rag = function(arg1) -- line 727
    manny:say_line("/myma032/")
end
my.drawers.use_oily_rag = function(arg1) -- line 731
    manny:say_line("/myma033/")
end
my.oil_drum = Object:create(my, "/mytx034/oil drum", -1.49058, 0.21397001, 0.20999999, { range = 0.60000002 })
my.oil_drum.use_pnt_x = -1.71724
my.oil_drum.use_pnt_y = 0.0111995
my.oil_drum.use_pnt_z = 0
my.oil_drum.use_rot_x = 0
my.oil_drum.use_rot_y = 328.16699
my.oil_drum.use_rot_z = 0
my.oil_drum.lookAt = function(arg1) -- line 743
    manny:say_line("/myma035/")
end
my.oil_drum.pickUp = function(arg1) -- line 747
    manny:say_line("/myma036/")
end
my.oil_drum.use = function(arg1) -- line 751
    if my.talked_fuel then
        if manny:walkto_object(arg1) then
            START_CUT_SCENE()
            manny:head_look_at(my.mechanic)
            manny:say_line("/myma037/")
            manny:wait_for_message()
            start_script(my.mechanics_face_manny, my, 1)
            mechanic1:say_line("/mym1038/")
            mechanic1wait_for_message()
            mechanic2:say_line("/mym2039/")
            start_script(my.mechanics_stop_face_manny, my, 1)
            END_CUT_SCENE()
        end
    else
        manny:say_line("/myma040/")
    end
end
my.oil_drum.use_rag = function(arg1) -- line 770
    if manny:walkto_object(arg1) then
        mk.rag:free()
        my.oily_rag:get()
        START_CUT_SCENE()
        manny:stop_chore(msb_hold, "msb.cos")
        manny:push_costume("msb_rag_cup.cos")
        manny:play_chore(msb_rag_cup_take_rag, "msb_rag_cup.cos")
        sleep_for(1000)
        start_sfx("myRagDip.WAV")
        manny:wait_for_chore(msb_rag_cup_take_rag, "msb_rag_cup.cos")
        manny:stop_chore(msb_rag_cup_take_rag, "msb_rag_cup.cos")
        manny:play_chore(msb_hold, "msb.cos")
        manny:play_chore(msb_activate_oily_rag, "msb.cos")
        manny:pop_costume()
        manny:say_line("/myma041/")
        END_CUT_SCENE()
        manny.is_holding = my.oily_rag
    end
end
my.oily_rag = Object:create(my, "/mytx042/oily rag", 0, 0, 0, { range = 0 })
my.oily_rag.string_name = "oily_rag"
my.oily_rag.wav = "getrag.wav"
my.oily_rag.lookAt = function(arg1) -- line 796
    manny:say_line("/myma043/")
end
my.oily_rag.use = function(arg1) -- line 800
    START_CUT_SCENE()
    look_at_item_in_hand(TRUE)
    manny:say_line("/myma044/")
    manny:wait_for_message()
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
my.oily_rag.default_response = function(arg1) -- line 809
    manny:say_line("/myma045/")
end
my.meche_obj = Object:create(my, "/mytx136/Meche", -0.34484699, 1.68527, 1.2071, { range = 0.60000002 })
my.meche_obj.use_pnt_x = -0.63064498
my.meche_obj.use_pnt_y = 1.54602
my.meche_obj.use_pnt_z = 0.80000001
my.meche_obj.use_rot_x = 0
my.meche_obj.use_rot_y = 291.53601
my.meche_obj.use_rot_z = 0
my.meche_obj.lookAt = function(arg1) -- line 822
    manny:say_line("/myma137/")
end
my.meche_obj.pickUp = function(arg1) -- line 826
    system.default_response("not now")
end
my.meche_obj.use = function(arg1) -- line 830
    START_CUT_SCENE()
    manny:hand_gesture()
    manny:say_line("/myma138/")
    manny:wait_for_message()
    meche:say_line("/mymc139/")
    END_CUT_SCENE()
end
my.meche_obj.use_scythe = function(arg1) -- line 839
    system.default_response("already")
end
my.meche_obj.use_note = function(arg1) -- line 843
    tg.note:scare_response()
end
my.meche_obj.use_rag = function(arg1) -- line 847
    meche:say_line("/mymc140/")
end
my.meche_obj.use_oily_rag = function(arg1) -- line 851
    meche:say_line("/mymc141/")
end
my.blueprints = Object:create(my, "/mytx142/blueprints", -0.230636, 2.5320899, 1.528, { range = 1.5 })
my.blueprints.use_pnt_x = -0.58096302
my.blueprints.use_pnt_y = 1.6
my.blueprints.use_pnt_z = 0.80000001
my.blueprints.use_rot_x = 0
my.blueprints.use_rot_y = 325.14099
my.blueprints.use_rot_z = 0
my.blueprints.lookAt = function(arg1) -- line 864
    manny:say_line("/myma143/")
    manny:wait_for_message()
    manny:say_line("/myma144/")
end
my.blueprints.pickUp = function(arg1) -- line 870
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:hand_gesture()
        manny:say_line("/myma145/")
        manny:wait_for_message()
        mechanic1:say_line("/mym1146/")
        mechanic1:wait_for_message()
        mechanic2:say_line("/mym2147/")
        END_CUT_SCENE()
    end
end
my.blueprints.use = my.blueprints.lookAt
my.mk_door = Object:create(my, "/mytx046/door", -0.75014102, 0.197624, 0.46000001, { range = 0.69999999 })
my.mk_door.use_pnt_x = -0.72014099
my.mk_door.use_pnt_y = -0.112376
my.mk_door.use_pnt_z = 0
my.mk_door.use_rot_x = 0
my.mk_door.use_rot_y = -742.88702
my.mk_door.use_rot_z = 0
my.mk_door.out_pnt_x = -0.67506498
my.mk_door.out_pnt_y = 0.050000001
my.mk_door.out_pnt_z = 0
my.mk_door.out_rot_x = 0
my.mk_door.out_rot_y = -750.41699
my.mk_door.out_rot_z = 0
my.mk_door.walkOut = function(arg1) -- line 904
    mk:come_out_door(mk.my_door)
end
my.mk_door.lookAt = function(arg1) -- line 908
    manny:say_line("/myma047/")
end
my.bs_door = Object:create(my, "/mytx048/outside", 1.9549201, 0.415411, 1.21, { range = 1.3 })
my.bs_door.use_pnt_x = 1.17048
my.bs_door.use_pnt_y = 0.48182699
my.bs_door.use_pnt_z = 0.80000001
my.bs_door.use_rot_x = 0
my.bs_door.use_rot_y = 260.271
my.bs_door.use_rot_z = 0
my.bs_door.out_pnt_x = 1.56278
my.bs_door.out_pnt_y = 0.41471499
my.bs_door.out_pnt_z = 0.80000001
my.bs_door.out_rot_x = 0
my.bs_door.out_rot_y = 260.271
my.bs_door.out_rot_z = 0
my.bs_door.walkOut = function(arg1) -- line 929
    bs:come_out_door(bs.my_door)
end
my.bs_door.lookAt = function(arg1) -- line 933
    manny:say_line("/myma049/")
end
my.bs_door.comeOut = function(arg1) -- line 937
    if not my.seen_intro then
        manny:setpos(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
        manny:setrot(arg1.out_rot_x, arg1.out_rot_y + 180, arg1.out_rot_z)
        start_script(my.intro)
    else
        Object.come_out_door(arg1)
    end
end
CheckFirstTime("na.lua")
dofile("na_trapdoor.lua")
na = Set:create("na.set", "navigation room", { na_top = 0, na_intha = 1, na_intws = 2, na_mancu = 3 })
na.bw_out_points = { }
na.bw_out_points[0] = { pos = { x = 3.15329, y = -0.641857, z = 0.5 }, rot = { x = 0, y = 18.6574, z = 0 } }
na.bw_out_points[1] = { pos = { x = -0.222127, y = 3.55086, z = 0.5 }, rot = { x = 0, y = 227.602, z = 0 } }
na.bw_out_points[2] = { pos = { x = -2.89712, y = 3.16993, z = 0.5 }, rot = { x = 0, y = 339.683, z = 0 } }
na.bw_out_points[3] = { pos = { x = 5.22106, y = -1.634, z = 0.5 }, rot = { x = 0, y = 188.897, z = 0 } }
na.bw_out_points[4] = { pos = { x = 0.770985, y = -3.77095, z = 0.5 }, rot = { x = 0, y = 92.7718, z = 0 } }
na.bw_out_points[5] = { pos = { x = 3.32583, y = -1.69583, z = 0.5 }, rot = { x = 0, y = 137.086, z = 0 } }
na.SIGNPOST_SOLVED_DISTANCE = 0.6
na.check_for_nav_solved = function(arg1, arg2) -- line 26
    local local1
    local local2, local3, local4, local5
    local local6
    if not arg2 then
        local1 = proximity(signpost.hActor, na.rubacava_point.x, na.rubacava_point.y, na.rubacava_point.z)
    else
        local1 = sqrt((arg2.x - na.rubacava_point.x) ^ 2 + (arg2.y - na.rubacava_point.y) ^ 2 + (arg2.z - na.rubacava_point.z) ^ 2)
    end
    if local1 <= na.SIGNPOST_SOLVED_DISTANCE then
        START_CUT_SCENE()
        set_override(na.skip_check_nav_solved, na)
        start_sfx("quake.IMU")
        set_pan("quake.IMU", 20)
        sleep_for(500)
        local2 = manny:getpos()
        local3 = manny:get_positive_rot()
        local4 = { x = -1, y = 0.5, z = 0 }
        local4 = RotateVector(local4, local3)
        local4.x = local4.x + local2.x
        local4.y = local4.y + local2.y
        local4.z = local2.z + 0.30000001
        manny:head_look_at_point(local4.x, local4.y, local4.z)
        sleep_for(2000)
        local5 = start_sfx("quake.IMU")
        set_pan(local5, 100)
        local4 = { x = 1, y = 0.5, z = 0 }
        local4 = RotateVector(local4, local3)
        local4.x = local4.x + local2.x
        local4.y = local4.y + local2.y
        local4.z = local2.z + 0.30000001
        manny:head_look_at_point(local4.x, local4.y, local4.z)
        sleep_for(2000)
        local4 = { x = 0, y = -3, z = 0 }
        local4 = RotateVector(local4, local3)
        local4.x = local4.x + local2.x
        local4.y = local4.y + local2.y
        local4.z = local2.z
        manny:setrot(local3.x, local3.y + 180, local3.z, TRUE)
        manny:runto(local4.x, local4.y, local4.z)
        local6 = 0
        while local6 < 2000 and manny:is_moving() do
            break_here()
            local6 = local6 + system.frameTime
        end
        fade_sfx(local5, 3000, 0)
        fade_sfx("quake.IMU", 3000, 0)
        na:current_setup(na_intha)
        RunFullscreenMovie("dooropen.snm")
        END_CUT_SCENE()
        manny:set_run(FALSE)
        na:solve_nav()
        return TRUE
    else
        return FALSE
    end
end
na.skip_check_nav_solved = function(arg1) -- line 93
    kill_override()
    manny:set_run(FALSE)
    stop_sound("quake.IMU")
    na:current_setup(na_intha)
    manny:head_look_at(nil)
    na:solve_nav()
end
na.solve_nav = function(arg1) -- line 102
    cur_puzzle_state[13] = TRUE
    na.trapdoor:make_touchable()
    signpost.current_set = nil
    signpost:free()
    sg.signpost:make_untouchable()
    na.signpost:make_untouchable()
    na.trapdoor:play_chore(na_trapdoor_show, "na_trapdoor.cos")
    bonewagon:set_visibility(TRUE)
    bonewagon:set_collision_mode(COLLISION_BOX, 1)
    if bonewagon.current_set == na then
        bonewagon:setpos(3.60411, -0.419015, 0.5)
        bonewagon:setrot(0, 159.729, 0)
        bonewagon.current_pos = { x = 3.60411, y = -0.419015, z = 0.5 }
        bonewagon.current_rot = { x = 0, y = 159.729, z = 0 }
        sg:park_BW_obj()
    end
    na:activate_trapdoor_boxes(TRUE)
    na.trapdoor:play_chore(na_trapdoor_show, "na_trapdoor.cos")
    manny:put_at_object(na.trapdoor)
    nav_solved = TRUE
    music_state:set_state(stateNA_SOLVED)
    START_CUT_SCENE()
    manny:say_line("/sgma053/")
    manny:wait_for_message()
    END_CUT_SCENE()
end
na.activate_trapdoor_boxes = function(arg1, arg2) -- line 136
    local local1, local2
    MakeSectorActive("na_lb_box", arg2)
    local2 = 1
    while local2 <= 11 do
        local1 = "trap_box" .. local2
        MakeSectorActive(local1, arg2)
        local2 = local2 + 1
    end
    MakeSectorActive("notrap_box", not arg2)
    single_start_script(na.footstep_monitor, na)
end
na.rubacava_point = nil
na.choose_random_sign_point = function(arg1) -- line 154
    local local1
    if arg1.rubacava_point == nil then
        local1 = { }
        local1.x = -1.2223099
        local1.y = -0.205108
        local1.z = 0.5
        arg1.rubacava_point = local1
    end
end
na.tilt_bonewagon = function(arg1) -- line 172
    local local1
    while not bonewagon:find_sector_name("trap_box9") do
        break_here()
    end
    while bonewagon:find_sector_name("trap_box9") do
        local1 = proximity(bonewagon.hActor, -0.161172, -1.64503, 0.5) * -30
        if local1 > 0 then
            local1 = 0
        elseif local1 < -30 then
            local1 = -30
        end
        SetActorPitch(bonewagon.hActor, local1)
        break_here()
    end
end
na.footstep_monitor = function(arg1) -- line 190
    while TRUE do
        if manny:find_sector_name("trap_box9") or manny:find_sector_name("trap_box11") then
            manny.footsteps = footsteps.metal
        else
            manny.footsteps = footsteps.dirt
        end
        break_here()
    end
end
na.examine_signpost = function(arg1) -- line 201
    local local1, local2
    local local3, local4, local5
    local local6
    START_CUT_SCENE()
    local1 = { }
    local1.pos = signpost:getpos()
    local1.rot = signpost:getrot()
    local2 = { }
    local2.pos = manny:getpos()
    local2.rot = manny:getrot()
    local6 = na:current_setup()
    na:current_setup(na_mancu)
    signpost:setpos(4.0353198, -1.21448, 0.5)
    local3 = 3.8364899 + (local2.pos.x - local1.pos.x)
    local4 = -1.23856 + (local2.pos.y - local1.pos.y)
    local5 = 0.5
    manny:ignore_boxes()
    manny:setpos(local3, local4, local5)
    if bonewagon.current_set == system.currentSet then
        bonewagon:set_visibility(FALSE)
        bonewagon:set_collision_mode(COLLISION_OFF)
    end
    manny:head_look_at_point({ 4.0353198, -1.21448, 1 })
    if not na.nav_points.happened then
        manny:say_line("/nama003/")
    else
        manny:say_line("/nama004/")
    end
    manny:wait_for_message()
    sleep_for(1000)
    na:current_setup(local6)
    signpost:setpos(local1.pos.x, local1.pos.y, local1.pos.z)
    manny:follow_boxes()
    manny:setpos(local2.pos.x, local2.pos.y, local2.pos.z)
    manny:head_look_at(na.signpost)
    if bonewagon.current_set == system.currentSet then
        bonewagon:set_visibility(TRUE)
        bonewagon:set_collision_mode(COLLISION_BOX, 1)
    end
    END_CUT_SCENE()
end
na.enter = function(arg1) -- line 255
    manny:set_collision_mode(COLLISION_SPHERE, 0.4)
    na:choose_random_sign_point()
    na:add_object_state(na_intha, "na_trapdoor.bm", "na_trapdoor.zbm", OBJSTATE_STATE)
    na.trapdoor:set_object_state("na_trapdoor.cos")
    if nav_solved then
        na:activate_trapdoor_boxes(TRUE)
        na.trapdoor:play_chore(na_trapdoor_show, "na_trapdoor.cos")
        start_script(na.tilt_bonewagon, na)
    else
        na:activate_trapdoor_boxes(FALSE)
        na.trapdoor:play_chore(na_trapdoor_hide, "na_trapdoor.cos")
    end
    if bonewagon.current_set == arg1 then
        bonewagon:put_in_set(arg1)
        bonewagon:setpos(bonewagon.current_pos.x, bonewagon.current_pos.y, bonewagon.current_pos.z)
        bonewagon:setrot(bonewagon.current_rot.x, bonewagon.current_rot.y, bonewagon.current_rot.z)
        if not manny.is_driving then
            single_start_script(sg.glottis_roars, sg, bonewagon)
        end
    end
    if signpost.current_set == arg1 then
        signpost:put_in_set(arg1)
        signpost:setpos(signpost.current_pos.x, signpost.current_pos.y, signpost.current_pos.z)
        signpost:setrot(signpost.current_rot.x, signpost.current_rot.y, signpost.current_rot.z)
    end
    if manny.is_driving then
        single_start_sfx("bwIdle.IMU", IM_HIGH_PRIORITY, 0)
        fade_sfx("bwIdle.IMU", 1000, 127)
    end
    na:add_ambient_sfx({ "frstCrt1.wav", "frstCrt2.wav", "frstCrt3.wav", "frstCrt4.wav" }, { min_delay = 8000, max_delay = 20000 })
end
na.exit = function(arg1) -- line 297
    stop_script(na.footstep_monitor)
    manny:set_collision_mode(COLLISION_OFF)
    stop_script(sg.glottis_roars)
    glottis:shut_up()
    bonewagon:shut_up()
    stop_script(na.tilt_bonewagon)
    stop_script(bonewagon.cruise_sounds)
    stop_sound("bwIdle.IMU")
end
na.update_music_state = function(arg1) -- line 311
    if manny.is_driving then
        return stateOO_BONE
    elseif nav_solved then
        return stateNA_SOLVED
    else
        return stateNA
    end
end
na.signpost = Object:create(na, "/natx002/sign post", 0, 0, 0, { range = 1.5 })
na.signpost.use_pnt_x = 0
na.signpost.use_pnt_y = 0
na.signpost.use_pnt_z = 0
na.signpost.use_rot_x = 0
na.signpost.use_rot_y = 0
na.signpost.use_rot_z = 0
na.signpost:make_untouchable()
na.signpost.lookAt = function(arg1) -- line 336
    na:examine_signpost()
end
na.signpost.pickUp = function(arg1) -- line 340
    START_CUT_SCENE()
    signpost:set_collision_mode(COLLISION_OFF)
    manny:walkto_object(arg1)
    signpost:pick_up()
    sg.signpost:get()
    manny.is_holding = sg.signpost
    arg1:make_untouchable()
    if system.object_names_showing then
        system.currentSet:make_objects_visible()
        system.currentSet:update_object_names()
    end
    END_CUT_SCENE()
end
na.signpost.use = na.signpost.pickUp
na.all_paths = Object:create(na, "/natx005/dark passage", 0, 0, 0, { range = 0 })
na.all_paths.lookAt = function(arg1) -- line 362
    manny:say_line("/nama006/")
end
na.trapdoor = Object:create(na, "/natx007/opening", -1.8434, -1.82987, 0.51999998, { range = 2 })
na.trapdoor.use_pnt_x = -0.208358
na.trapdoor.use_pnt_y = -1.88557
na.trapdoor.use_pnt_z = 0.5
na.trapdoor.use_rot_x = 0
na.trapdoor.use_rot_y = 0
na.trapdoor.use_rot_z = 0
na.trapdoor.out_pnt_x = -0.209998
na.trapdoor.out_pnt_y = 1.02899
na.trapdoor.out_pnt_z = -0.86926502
na.trapdoor.out_rot_x = 0
na.trapdoor.out_rot_y = 0
na.trapdoor.out_rot_z = 0
na.trapdoor:make_untouchable()
na.trapdoor.make_touchable = function(arg1) -- line 385
    Object.make_touchable(arg1)
    if system.object_names_showing then
        na:update_object_names()
    end
end
na.trapdoor.lookAt = function(arg1) -- line 392
    manny:say_line("/nama008/")
end
na.trapdoor.use = function(arg1) -- line 396
    if not manny.is_driving then
        START_CUT_SCENE()
        manny:walkto(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
        lb:come_out_door(lb.na_door)
        END_CUT_SCENE()
    else
        na.glotdriv_trigr:walkOut()
    end
end
na.trapdoor.walkOut = na.trapdoor.use
na.na_lb_box = na.trapdoor
na.glotdriv_trigr = { name = "glotdriv_trigger" }
na.glotdriv_trigr.walkOut = function(arg1) -- line 413
    if manny.is_driving and na.trapdoor.touchable then
        START_CUT_SCENE()
        RunFullscreenMovie("glotdriv.snm")
        bonewagon:put_in_set(nil)
        lb:switch_to_set()
        lb:current_setup(lb_modws)
        END_CUT_SCENE()
    end
end
na.bone_wagon = Object:create(na, "/natx009/Bone Wagon", 0.97060001, -1.1162, 1.2, { range = 2.5 })
na.bone_wagon.use_pnt_x = 0.64422601
na.bone_wagon.use_pnt_y = -1.13239
na.bone_wagon.use_pnt_z = 0.5
na.bone_wagon.use_rot_x = 0
na.bone_wagon.use_rot_y = 645.83502
na.bone_wagon.use_rot_z = 0
na.bone_wagon:make_untouchable()
na.bone_wagon.lookAt = function(arg1) -- line 437
    sg.bone_wagon:lookAt()
end
na.bone_wagon.pickUp = function(arg1) -- line 441
    sg.bone_wagon:pickUp()
end
na.bone_wagon.use = function(arg1) -- line 445
    sg:get_in_BW()
end
na.bone_wagon.use_scythe = function(arg1) -- line 449
    sg.bone_wagon:use_scythe()
end
na.bone_wagon.use_bone = function(arg1) -- line 453
    sg.bone_wagon:use_bone()
end
na.sg_door = Object:create(na, "/natx010/door", 7.43084, -6.4731998, 0, { range = 0.5 })
na.sg_box = na.sg_door
na.sg_door.use_pnt_x = 6.3092499
na.sg_door.use_pnt_y = -5.1433201
na.sg_door.use_pnt_z = 0.5
na.sg_door.use_rot_x = 0
na.sg_door.use_rot_y = 253
na.sg_door.use_rot_z = 0
na.sg_door.out_pnt_x = 7.43084
na.sg_door.out_pnt_y = -6.4731998
na.sg_door.out_pnt_z = 0.5
na.sg_door.out_rot_x = 0
na.sg_door.out_rot_y = -484.245
na.sg_door.out_rot_z = 0
na.sg_door.walkOut = function(arg1) -- line 481
    sg:come_out_door(sg.na_door)
end
na.nav_points = { }
na.nav_points.last_index = nil
na.nav_points.walkOut = function(arg1) -- line 495
    local local1, local2
    START_CUT_SCENE()
    if system.currentActor == manny and get_generic_control_state("RUN") then
        system.currentActor:runto(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
    elseif system.currentActor == bonewagon then
        bonewagon:stop_movement_scripts()
        bonewagon:set_walk_rate(bonewagon.max_walk_rate)
        fade_sfx("bwIdle.IMU", 1000, 0)
        bonewagon:walkto(arg1.bonewagon_out_pnt_x, arg1.bonewagon_out_pnt_y, arg1.bonewagon_out_pnt_z)
    end
    system.currentActor:wait_for_actor()
    if system.currentActor == manny then
        manny:set_run(FALSE)
    end
    local2 = nil
    while local2 == nil do
        local1 = rndint(1, 12)
        if local1 ~= arg1.index and local1 ~= na.nav_points.last_index then
            if na.nav_points:away_from_signpost(local1) then
                local2 = na.nav_points[local1]
                na.nav_points.last_index = local1
            end
        end
        break_here()
    end
    PrintDebug("out_door = " .. local1 .. "\n")
    if system.currentActor == manny then
        system.currentActor:setpos(local2.out_pnt_x, local2.out_pnt_y, local2.out_pnt_z)
        system.currentActor:runto(local2.use_pnt_x, local2.use_pnt_y, local2.use_pnt_z, local2.use_rot_x, local2.use_rot_y + 180, local2.use_rot_z)
        system.currentActor:wait_for_actor()
    elseif system.currentActor == bonewagon then
        bonewagon:stop_movement_scripts()
        single_start_sfx("bwIdle.IMU", IM_HIGH_PRIORITY, 0)
        fade_sfx("bwIdle.IMU", 1000, bonewagon.max_volume)
        system.currentActor:setpos(local2.bonewagon_out_pnt_x, local2.bonewagon_out_pnt_y, local2.bonewagon_out_pnt_z)
        system.currentActor:setrot(local2.bonewagon_out_rot_x, local2.bonewagon_out_rot_y + 180, local2.bonewagon_out_rot_z)
        bonewagon:driveto(local2.use_pnt_x, local2.use_pnt_y, local2.use_pnt_z)
    end
    if not na.nav_points.happened then
        na.nav_points.happened = TRUE
        manny:say_line("/nama001/")
    end
    END_CUT_SCENE()
    if get_generic_control_state("MOVE_FORWARD") then
        if manny.is_driving then
            single_start_script(bonewagon.gas, bonewagon)
        end
    end
end
na.nav_points.away_from_signpost = function(arg1, arg2) -- line 555
    if signpost.current_set ~= na then
        return TRUE
    elseif proximity(signpost.hActor, arg1[arg2].bonewagon_out_pnt_x, arg1[arg2].bonewagon_out_pnt_y, arg1[arg2].bonewagon_out_pnt_z) < 10 then
        return FALSE
    else
        return TRUE
    end
end
na.nav_points[1] = { opened = TRUE, immediate = TRUE, index = 1 }
na.nav_points[1].use_pnt_x = -1.6622699
na.nav_points[1].use_pnt_y = -4.6346402
na.nav_points[1].use_pnt_z = 0.5
na.nav_points[1].use_rot_x = 0
na.nav_points[1].use_rot_y = 146.248
na.nav_points[1].use_rot_z = 0
na.nav_points[1].out_pnt_x = -2.39167
na.nav_points[1].out_pnt_y = -5.4372802
na.nav_points[1].out_pnt_z = 0.5
na.nav_points[1].out_rot_x = 0
na.nav_points[1].out_rot_y = 135.17999
na.nav_points[1].out_rot_z = 0
na.nav_points[1].walkOut = na.nav_points.walkOut
na.nav_points[2] = { opened = TRUE, immediate = TRUE, index = 2 }
na.nav_points[2].use_pnt_x = -4.4720802
na.nav_points[2].use_pnt_y = -1.91714
na.nav_points[2].use_pnt_z = 0.5
na.nav_points[2].use_rot_x = 0
na.nav_points[2].use_rot_y = 133.786
na.nav_points[2].use_rot_z = 0
na.nav_points[2].out_pnt_x = -5.3769598
na.nav_points[2].out_pnt_y = -2.87236
na.nav_points[2].out_pnt_z = 0.5
na.nav_points[2].out_rot_x = 0
na.nav_points[2].out_rot_y = 497.70999
na.nav_points[2].out_rot_z = 0
na.nav_points[2].walkOut = na.nav_points.walkOut
na.nav_points[3] = { opened = TRUE, immediate = TRUE, index = 3 }
na.nav_points[3].use_pnt_x = -6.11096
na.nav_points[3].use_pnt_y = 1.9079601
na.nav_points[3].use_pnt_z = 0.5
na.nav_points[3].use_rot_x = 0
na.nav_points[3].use_rot_y = 122.553
na.nav_points[3].use_rot_z = 0
na.nav_points[3].out_pnt_x = -7.6507502
na.nav_points[3].out_pnt_y = 0.749448
na.nav_points[3].out_pnt_z = 0.5
na.nav_points[3].out_rot_x = 0
na.nav_points[3].out_rot_y = 490.267
na.nav_points[3].out_rot_z = 0
na.nav_points[3].walkOut = na.nav_points.walkOut
na.nav_points[4] = { opened = TRUE, immediate = TRUE, index = 4 }
na.nav_points[4].use_pnt_x = -4.50388
na.nav_points[4].use_pnt_y = 3.57882
na.nav_points[4].use_pnt_z = 0.5
na.nav_points[4].use_rot_x = 0
na.nav_points[4].use_rot_y = 771.30798
na.nav_points[4].use_rot_z = 0
na.nav_points[4].out_pnt_x = -7.9057798
na.nav_points[4].out_pnt_y = 5.7978601
na.nav_points[4].out_pnt_z = 0.5
na.nav_points[4].out_rot_x = 0
na.nav_points[4].out_rot_y = 771.30798
na.nav_points[4].out_rot_z = 0
na.nav_points[4].walkOut = na.nav_points.walkOut
na.nav_points[5] = { opened = TRUE, immediate = TRUE, index = 5 }
na.nav_points[5].use_pnt_x = -4.7105999
na.nav_points[5].use_pnt_y = 6.0127501
na.nav_points[5].use_pnt_z = 0.5
na.nav_points[5].use_rot_x = 0
na.nav_points[5].use_rot_y = 715.633
na.nav_points[5].use_rot_z = 0
na.nav_points[5].out_pnt_x = -4.6799002
na.nav_points[5].out_pnt_y = 9.6187496
na.nav_points[5].out_pnt_z = 0.5
na.nav_points[5].out_rot_x = 0
na.nav_points[5].out_rot_y = 715.633
na.nav_points[5].out_rot_z = 0
na.nav_points[5].walkOut = na.nav_points.walkOut
na.nav_points[6] = { opened = TRUE, immediate = TRUE, index = 6 }
na.nav_points[6].use_pnt_x = -1.34286
na.nav_points[6].use_pnt_y = 6.7671599
na.nav_points[6].use_pnt_z = 0.5
na.nav_points[6].use_rot_x = 0
na.nav_points[6].use_rot_y = 718.26202
na.nav_points[6].use_rot_z = 0
na.nav_points[6].out_pnt_x = -1.0425
na.nav_points[6].out_pnt_y = 10.6854
na.nav_points[6].out_pnt_z = 0.5
na.nav_points[6].out_rot_x = 0
na.nav_points[6].out_rot_y = 718.26202
na.nav_points[6].out_rot_z = 0
na.nav_points[6].walkOut = na.nav_points.walkOut
na.nav_points[7] = { opened = TRUE, immediate = TRUE, index = 7 }
na.nav_points[7].use_pnt_x = 2.0485799
na.nav_points[7].use_pnt_y = 8.4344902
na.nav_points[7].use_pnt_z = 0.5
na.nav_points[7].use_rot_x = 0
na.nav_points[7].use_rot_y = 691.46698
na.nav_points[7].use_rot_z = 0
na.nav_points[7].out_pnt_x = 3.0051601
na.nav_points[7].out_pnt_y = 10.2608
na.nav_points[7].out_pnt_z = 0.5
na.nav_points[7].out_rot_x = 0
na.nav_points[7].out_rot_y = 701.25702
na.nav_points[7].out_rot_z = 0
na.nav_points[7].walkOut = na.nav_points.walkOut
na.nav_points[8] = { opened = TRUE, immediate = TRUE, index = 8 }
na.nav_points[8].use_pnt_x = 4.70544
na.nav_points[8].use_pnt_y = 5.39078
na.nav_points[8].use_pnt_z = 0.5
na.nav_points[8].use_rot_x = 0
na.nav_points[8].use_rot_y = 1047.17
na.nav_points[8].use_rot_z = 0
na.nav_points[8].out_pnt_x = 6.5631399
na.nav_points[8].out_pnt_y = 8.34795
na.nav_points[8].out_pnt_z = 0.5
na.nav_points[8].out_rot_x = 0
na.nav_points[8].out_rot_y = 1047.17
na.nav_points[8].out_rot_z = 0
na.nav_points[8].walkOut = na.nav_points.walkOut
na.nav_points[9] = { opened = TRUE, immediate = TRUE, index = 9 }
na.nav_points[9].use_pnt_x = 7.8786502
na.nav_points[9].use_pnt_y = 3.7764101
na.nav_points[9].use_pnt_z = 0.5
na.nav_points[9].use_rot_x = 0
na.nav_points[9].use_rot_y = 1365.0601
na.nav_points[9].use_rot_z = 0
na.nav_points[9].out_pnt_x = 9.7726297
na.nav_points[9].out_pnt_y = 4.4060798
na.nav_points[9].out_pnt_z = 0.5
na.nav_points[9].out_rot_x = 0
na.nav_points[9].out_rot_y = 1376.39
na.nav_points[9].out_rot_z = 0
na.nav_points[9].walkOut = na.nav_points.walkOut
na.nav_points[10] = { opened = TRUE, immediate = TRUE, index = 10 }
na.nav_points[10].use_pnt_x = 8.5132399
na.nav_points[10].use_pnt_y = 0.23104601
na.nav_points[10].use_pnt_z = 0.5
na.nav_points[10].use_rot_x = 0
na.nav_points[10].use_rot_y = 1717.15
na.nav_points[10].use_rot_z = 0
na.nav_points[10].out_pnt_x = 10.8235
na.nav_points[10].out_pnt_y = 0.91224998
na.nav_points[10].out_pnt_z = 0.5
na.nav_points[10].out_rot_x = 0
na.nav_points[10].out_rot_y = 1733.52
na.nav_points[10].out_rot_z = 0
na.nav_points[10].walkOut = na.nav_points.walkOut
na.nav_points[11] = { opened = TRUE, immediate = TRUE, index = 11 }
na.nav_points[11].use_pnt_x = 8.0326595
na.nav_points[11].use_pnt_y = -2.3932199
na.nav_points[11].use_pnt_z = 0.5
na.nav_points[11].use_rot_x = 0
na.nav_points[11].use_rot_y = 2065.75
na.nav_points[11].use_rot_z = 0
na.nav_points[11].out_pnt_x = 10.7659
na.nav_points[11].out_pnt_y = -2.5953
na.nav_points[11].out_pnt_z = 0.5
na.nav_points[11].out_rot_x = 0
na.nav_points[11].out_rot_y = 2065.75
na.nav_points[11].out_rot_z = 0
na.nav_points[11].walkOut = na.nav_points.walkOut
na.nav_points[12] = { opened = TRUE, immediate = TRUE, index = 12 }
na.nav_points[12].use_pnt_x = 1.89314
na.nav_points[12].use_pnt_y = -6.4507098
na.nav_points[12].use_pnt_z = 0.5
na.nav_points[12].use_rot_x = 0
na.nav_points[12].use_rot_y = 165.52
na.nav_points[12].use_rot_z = 0
na.nav_points[12].out_pnt_x = 1.55873
na.nav_points[12].out_pnt_y = -7.7474899
na.nav_points[12].out_pnt_z = 0.5
na.nav_points[12].out_rot_x = 0
na.nav_points[12].out_rot_y = 165.52
na.nav_points[12].out_rot_z = 0
na.nav_points[12].walkOut = na.nav_points.walkOut
na.nav_points[1].bonewagon_out_pnt_x = -4.7062402
na.nav_points[1].bonewagon_out_pnt_y = -7.51126
na.nav_points[1].bonewagon_out_pnt_z = 0.5
na.nav_points[1].bonewagon_out_rot_x = 0
na.nav_points[1].bonewagon_out_rot_y = 139.108
na.nav_points[1].bonewagon_out_rot_z = 0
na.nav_points[2].bonewagon_out_pnt_x = -7.99891
na.nav_points[2].bonewagon_out_pnt_y = -4.9516501
na.nav_points[2].bonewagon_out_pnt_z = 0.5
na.nav_points[2].bonewagon_out_rot_x = 0
na.nav_points[2].bonewagon_out_rot_y = 136.179
na.nav_points[2].bonewagon_out_rot_z = 0
na.nav_points[3].bonewagon_out_pnt_x = -10.0029
na.nav_points[3].bonewagon_out_pnt_y = -1.71706
na.nav_points[3].bonewagon_out_pnt_z = 0.5
na.nav_points[3].bonewagon_out_rot_x = 0
na.nav_points[3].bonewagon_out_rot_y = 130.61099
na.nav_points[3].bonewagon_out_rot_z = 0
na.nav_points[4].bonewagon_out_pnt_x = -11.9683
na.nav_points[4].bonewagon_out_pnt_y = 7.9263301
na.nav_points[4].bonewagon_out_pnt_z = 0.5
na.nav_points[4].bonewagon_out_rot_x = 0
na.nav_points[4].bonewagon_out_rot_y = 57.449501
na.nav_points[4].bonewagon_out_rot_z = 0
na.nav_points[5].bonewagon_out_pnt_x = -4.9099998
na.nav_points[5].bonewagon_out_pnt_y = 18.455
na.nav_points[5].bonewagon_out_pnt_z = 0.5
na.nav_points[5].bonewagon_out_rot_x = 0
na.nav_points[5].bonewagon_out_rot_y = -40.159
na.nav_points[5].bonewagon_out_rot_z = 0
na.nav_points[6].bonewagon_out_pnt_x = -0.40590999
na.nav_points[6].bonewagon_out_pnt_y = 18.074301
na.nav_points[6].bonewagon_out_pnt_z = 0.5
na.nav_points[6].bonewagon_out_rot_x = 0
na.nav_points[6].bonewagon_out_rot_y = 357.64999
na.nav_points[6].bonewagon_out_rot_z = 0
na.nav_points[7].bonewagon_out_pnt_x = 5.2837901
na.nav_points[7].bonewagon_out_pnt_y = 17.2509
na.nav_points[7].bonewagon_out_pnt_z = 0.5
na.nav_points[7].bonewagon_out_rot_x = 0
na.nav_points[7].bonewagon_out_rot_y = 698.73297
na.nav_points[7].bonewagon_out_rot_z = 0
na.nav_points[8].bonewagon_out_pnt_x = 10.8676
na.nav_points[8].bonewagon_out_pnt_y = 15.5262
na.nav_points[8].bonewagon_out_pnt_z = 0.5
na.nav_points[8].bonewagon_out_rot_x = 0
na.nav_points[8].bonewagon_out_rot_y = 1410.5
na.nav_points[8].bonewagon_out_rot_z = 0
na.nav_points[9].bonewagon_out_pnt_x = 16.0665
na.nav_points[9].bonewagon_out_pnt_y = 7.8298802
na.nav_points[9].bonewagon_out_pnt_z = 0.5
na.nav_points[9].bonewagon_out_rot_x = 0
na.nav_points[9].bonewagon_out_rot_y = 1737.46
na.nav_points[9].bonewagon_out_rot_z = 0
na.nav_points[10].bonewagon_out_pnt_x = 16.580601
na.nav_points[10].bonewagon_out_pnt_y = 0.45177901
na.nav_points[10].bonewagon_out_pnt_z = 0.5
na.nav_points[10].bonewagon_out_rot_x = 0
na.nav_points[10].bonewagon_out_rot_y = 2072.22
na.nav_points[10].bonewagon_out_rot_z = 0
na.nav_points[11].bonewagon_out_pnt_x = 15.2199
na.nav_points[11].bonewagon_out_pnt_y = -3.3735099
na.nav_points[11].bonewagon_out_pnt_z = 0.5
na.nav_points[11].bonewagon_out_rot_x = 0
na.nav_points[11].bonewagon_out_rot_y = 2407.49
na.nav_points[11].bonewagon_out_rot_z = 0
na.nav_points[12].bonewagon_out_pnt_x = -0.120106
na.nav_points[12].bonewagon_out_pnt_y = -11.213
na.nav_points[12].bonewagon_out_pnt_z = 0.5
na.nav_points[12].bonewagon_out_rot_x = 0
na.nav_points[12].bonewagon_out_rot_y = 151.653
na.nav_points[12].bonewagon_out_rot_z = 0
na.path1 = na.nav_points[1]
na.path2 = na.nav_points[2]
na.path3 = na.nav_points[3]
na.path4 = na.nav_points[4]
na.path5 = na.nav_points[5]
na.path6 = na.nav_points[6]
na.path7 = na.nav_points[7]
na.path8 = na.nav_points[8]
na.path9 = na.nav_points[9]
na.path10 = na.nav_points[10]
na.path11 = na.nav_points[11]
na.path12 = na.nav_points[12]
na.writenavpoint = function(arg1, arg2) -- line 855
    local local1
    local local2, local3
    local1 = InputDialog("Nav points", "Index:")
    local1 = tonumber(local1)
    if na.nav_points[local1] == nil then
        na.nav_points[local1] = { }
    end
    local2 = manny:getpos()
    local3 = manny:getrot()
    if arg2 then
        na.nav_points[local1].use_pos = local2
        na.nav_points[local1].use_rot = local3
    else
        na.nav_points[local1].out_pos = local2
        na.nav_points[local1].out_rot = local3
    end
    PrintDebug("Got nav " .. local1 .. "\n")
    writeto("navpoints.txt")
    local1 = 0
    while local1 < 12 do
        if na.nav_points[local1] then
            write("na.nav_points[" .. local1 .. "] = {}\n")
            if na.nav_points[local1].use_pos then
                write("na.nav_points[" .. local1 .. "].use_pnt_x = " .. na.nav_points[local1].use_pos.x .. "\n")
                write("na.nav_points[" .. local1 .. "].use_pnt_y = " .. na.nav_points[local1].use_pos.y .. "\n")
                write("na.nav_points[" .. local1 .. "].use_pnt_z = " .. na.nav_points[local1].use_pos.z .. "\n")
            end
            if na.nav_points[local1].use_rot then
                write("na.nav_points[" .. local1 .. "].use_rot_x = " .. na.nav_points[local1].use_rot.x .. "\n")
                write("na.nav_points[" .. local1 .. "].use_rot_y = " .. na.nav_points[local1].use_rot.y .. "\n")
                write("na.nav_points[" .. local1 .. "].use_rot_z = " .. na.nav_points[local1].use_rot.z .. "\n")
            end
            if na.nav_points[local1].out_pos then
                write("na.nav_points[" .. local1 .. "].out_pnt_x = " .. na.nav_points[local1].out_pos.x .. "\n")
                write("na.nav_points[" .. local1 .. "].out_pnt_y = " .. na.nav_points[local1].out_pos.y .. "\n")
                write("na.nav_points[" .. local1 .. "].out_pnt_z = " .. na.nav_points[local1].out_pos.z .. "\n")
            end
            if na.nav_points[local1].out_rot then
                write("na.nav_points[" .. local1 .. "].out_rot_x = " .. na.nav_points[local1].out_rot.x .. "\n")
                write("na.nav_points[" .. local1 .. "].out_rot_y = " .. na.nav_points[local1].out_rot.y .. "\n")
                write("na.nav_points[" .. local1 .. "].out_rot_z = " .. na.nav_points[local1].out_rot.z .. "\n")
            end
        end
        local1 = local1 + 1
    end
    writeto()
end
NavButtonHandler = function(arg1, arg2, arg3) -- line 909
    if arg1 == UKEY and arg2 then
        na:writenavpoint(TRUE)
    elseif arg1 == OKEY and arg2 then
        na:writenavpoint(FALSE)
    else
        SampleButtonHandler(arg1, arg2, arg3)
    end
end
na_on_cot_on_cot = 0
na_on_cot_cot_still = 1
naranja_pain_drink = 0
naranja_watch_toto = 1
naranja_arm_drilled = 2
naranja_arm_no_drill = 3
naranja_got_booze = 4
naranja_drink_booze = 5
naranja_stop_drink = 6
naranja_look_up = 7
naranja_look_around = 8
naranja_pain_to_drink = 9
naranja_to_grab_bz = 10
naranja_from_pain_drink = 11
naranja_bz_down = 12
naranja_mumble = 13
naranja_stop_talk = 14
naranja_c = 15
naranja_m = 16
naranja_f = 17
naranja_e = 18
naranja_u = 19
naranja_l = 20
naranja_a = 21
naranja_aa = 22
naranja_o = 23
naranja_passout = 24
naranja_t = 25
na_trapdoor_show = 0
na_trapdoor_hide = 1
nick_idles_smoke = 0
nick_idles_kckbk_hld = 1
nick_idles_tap_loop = 2
nick_idles_dropkey = 3
nick_idles_2pprwrk = 4
nick_idles_pprwrk_base = 5
nick_idles_pprwrk_smoke = 6
nick_idles_pprwrk_smk_hld1 = 7
nick_idles_pprwrk_2smk_hld2 = 8
nick_idles_pprwrk_smk_hld2 = 9
nick_idles_pprwrk_smk2base = 10
nick_idles_nod = 11
nick_idles_lkma = 12
nick_idles_lkma_hld = 13
nick_idles_lkma_nod_lp = 14
nick_idles_lkma_2pprwrk = 15
nick_idles_pprwrk2kckbk = 16
nick_idles_kckbk_nod = 17
nick_idles_stnd_walk = 18
nick_idles_mumble = 19
nick_idles_no_talk = 20
nick_idles_c = 21
nick_idles_m = 22
nick_idles_f = 23
nick_idles_e = 24
nick_idles_u = 25
nick_idles_l = 26
nick_idles_a = 27
nick_idles_o = 28
nick_idles_t = 29
nick_walk_walk = 0
nk_sna_mumble = 0
nk_sna_stop_talk = 1
nk_sna_c = 2
nk_sna_m = 3
nk_sna_f = 4
nk_sna_e = 5
nk_sna_u = 6
nk_sna_l = 7
nk_sna_a = 8
nk_sna_o = 9
nk_sna_intro = 10
nk_sna_snavi07a = 11
nk_sna_snavi07b = 12
nk_sna_snavi09 = 13
nk_sna_lookup = 14
nk_sna_snavi10 = 15
nk_sna_snavi11 = 16
nk_sna_look_ol = 17
nk_sna_hlvi170 = 18
nk_sna_kiss = 19
nk_sna_run = 20
nk_sna_t = 21
CheckFirstTime("nl.lua")
dofile("md_sproutella.lua")
nl = Set:create("nl.set", "Neon Ledge", { nl_hndws = 0, nl_legla = 1, nl_neoha = 2, nl_neoha2 = 2, nl_ovrhd = 3, nl_fallen = 4 })
nl.jump_off_ledge = function(arg1) -- line 14
    local local1, local2
    START_CUT_SCENE()
    ResetMarioControls()
    local1 = manny:getpos()
    manny:walkto(local1.x, 1.5984499, 4.1100001, 0, 0, 0)
    manny:wait_for_actor()
    manny:clear_hands()
    manny:set_costume(nil)
    manny:set_rest_chore(-1)
    manny:set_costume("md_sproutella.cos")
    manny:play_chore(md_sproutella_jump_down, "md_sproutella.cos")
    manny:wait_for_chore(md_sproutella_jump_down, "md_sproutella.cos")
    manny:default("reaper")
    manny:setpos(local1.x, 1.84796, 3.71)
    manny:setrot(0, 0, 0)
    local2 = 0
    while manny:find_sector_type(HOT) or local2 < 500 do
        manny:walk_forward()
        break_here()
        local2 = local2 + system.frameTime
    end
    END_CUT_SCENE()
end
nl.jump_on_ledge = function(arg1) -- line 39
    local local1, local2
    START_CUT_SCENE()
    ResetMarioControls()
    local1 = manny:getpos()
    manny:walkto(local1.x, 1.84796, 3.71, 0, 180, 0)
    manny:wait_for_actor()
    manny:clear_hands()
    manny:set_costume(nil)
    manny:set_rest_chore(-1)
    manny:set_costume("md_sproutella.cos")
    manny:play_chore(md_sproutella_climb_up, "md_sproutella.cos")
    manny:wait_for_chore(md_sproutella_climb_up, "md_sproutella.cos")
    manny:default("reaper")
    manny:setpos(local1.x, 1.5984499, 4.1100001)
    manny:setrot(0, 180, 0)
    local2 = 0
    while manny:find_sector_type(HOT) or local2 < 500 do
        manny:walk_forward()
        break_here()
        local2 = local2 + system.frameTime
    end
    END_CUT_SCENE()
end
nl.drop_lady = function(arg1) -- line 65
    nl.sign_down = TRUE
    nl.gargoyle:make_untouchable()
    nl.arm:make_untouchable()
    nl.window1:make_untouchable()
    cur_puzzle_state[59] = TRUE
    START_CUT_SCENE()
    nl:current_setup(nl_legla)
    RunFullscreenMovie("neonlady.snm")
    nl:current_setup(nl_fallen)
    music_state:update()
    manny.is_holding = nil
    manny:stop_chore(md_hold, "md.cos")
    manny:stop_chore(md_activate_sproutella, "md.cos")
    manny:setpos(-4.26557, 3.24848, 3.71)
    manny:setrot(0, 185.693, 0)
    manny:head_look_at_point(-4.26557, 0.993478, 6.25)
    sleep_for(2000)
    manny:say_line("/nlma001/")
    manny:wait_for_message()
    END_CUT_SCENE()
end
nl.cowabunga = function(arg1) -- line 91
    START_CUT_SCENE()
    manny:walkto_object(nl.sign_ladder)
    manny:wait_for_actor()
    StartFullscreenMovie("legslide.snm")
    sleep_for(200)
    manny:say_line("/nlma002/")
    wait_for_movie()
    END_CUT_SCENE()
    stop_sound("fluorLp.IMU")
    start_script(cut_scene.eldepot)
end
nl.enter = function(arg1) -- line 111
    sh.remote:free()
    nq.photo:free()
    start_sfx("fluorLp.IMU", IM_MED_PRIORITY, 7)
    set_vol("fluorLp.IMU", 7)
end
nl.exit = function(arg1) -- line 120
    stop_sound("fluorLp.IMU")
end
nl.camerachange = function(arg1, arg2, arg3) -- line 124
    if nl.sign_down and (arg3 == nl_neoha or arg3 == nl_hndws) then
        arg1:current_setup(nl_fallen)
    end
    if not find_script(cut_scene.eldepot) then
        if arg3 == nl_hndws then
            set_vol("fluorLp.IMU", 20)
        else
            set_vol("fluorLp.IMU", 7)
        end
    end
end
nl.ledge_to_roof = { }
nl.ledge_to_roof.walkOut = function(arg1) -- line 146
    ResetMarioControls()
    manny:setpos(-1.90523, 3.43174, 3.71)
    manny:setrot(0, -298.134, 0)
    manny:walkto(-2.6969, 3.85474, 3.71)
    if not nl.talked_pigeons then
        nl.talked_pigeons = TRUE
        soft_script()
        manny:wait_for_actor()
        manny:say_line("/nlma003/")
        wait_for_message()
        manny:say_line("/nlma004/")
    end
end
nl.roof_to_ledge = { }
nl.roof_to_ledge.walkOut = function(arg1) -- line 166
    if not nl.sign_down then
        ResetMarioControls()
        manny:setpos(0.113097, 1.31475, -0.02)
        manny:setrot(0, -430.209, 0)
        manny:walkto(0.127614, 1.11551, -0.02)
    end
end
nl.retreat = { }
nl.retreat.walkOut = function(arg1) -- line 179
    ResetMarioControls()
    manny:walkto(-4.42962, 0.328149, -0.02)
    manny:say_line("/nlma005/")
end
nl.gargoyle = Object:create(nl, "/nltx006/gargoyle", -8.2358103, 1.04679, 4.0900002, { range = 1 })
nl.gargoyle.use_pnt_x = -8.2952805
nl.gargoyle.use_pnt_y = 1.46986
nl.gargoyle.use_pnt_z = 4.1100001
nl.gargoyle.use_rot_x = 0
nl.gargoyle.use_rot_y = 180.963
nl.gargoyle.use_rot_z = 0
nl.gargoyle.lookAt = function(arg1) -- line 194
    manny:say_line("/nlma007/")
end
nl.gargoyle.use = function(arg1) -- line 198
    manny:say_line("/nlma008/")
end
nl.gargoyle.pickUp = nl.gargoyle.use
nl.gargoyle.use_grinder = function(arg1) -- line 204
    if not arg1.boned then
        if manny:walkto_object(arg1) then
            arg1.boned = TRUE
            START_CUT_SCENE()
            th.grinder:use()
            manny:stop_chore(md_activate_grinder_full, "md.cos")
            manny:play_chore(md_activate_grinder_empty, "md.cos")
            manny:say_line("/nlma009/")
            manny:clear_hands()
            th.grinder.has_bone = FALSE
            END_CUT_SCENE()
        end
    else
        th.grinder:use()
    end
end
nl.gargoyle.use_sproutella = function(arg1) -- line 222
    if not arg1.boned then
        manny:say_line("/nlma010/")
    else
        if manny:walkto_object(arg1) then
            START_CUT_SCENE()
            music_state:set_state(STATE_NULL)
            manny:set_costume(nil)
            manny:set_costume("md_sproutella.cos")
            manny:play_chore(md_sproutella_sproutella, "md_sproutella.cos")
            sleep_for(4000)
            play_movie("nl_crush.snm", 272, 0)
            wait_for_movie()
            manny:wait_for_chore(md_sproutella_sproutella, "md_sproutella.cos")
            manny:stop_chore(md_sproutella_sproutella, "md_sproutella.cos")
            manny.is_holding = nil
            manny.hold_chore = nil
            manny:default("reaper")
            END_CUT_SCENE()
        end
        start_script(nl.drop_lady)
    end
end
nl.arm = Object:create(nl, "/nltx011/arm", -7.2958102, 0.43678999, 4.8099999, { range = 1.9 })
nl.arm.use_pnt_x = -8.0358105
nl.arm.use_pnt_y = 1.50679
nl.arm.use_pnt_z = 3.71
nl.arm.use_rot_x = 0
nl.arm.use_rot_y = -171.75999
nl.arm.use_rot_z = 0
nl.arm.lookAt = function(arg1) -- line 256
    manny:say_line("/nlma012/")
end
nl.arm.use = function(arg1) -- line 260
    manny:say_line("/nlma013/")
end
nl.sign_ladder = Object:create(nl, "/nltx014/ladder", -3.45877, 3.1797099, 4.71, { range = 1.1 })
nl.sign_ladder.use_pnt_x = -3.6687701
nl.sign_ladder.use_pnt_y = 3.1597099
nl.sign_ladder.use_pnt_z = 3.71
nl.sign_ladder.use_rot_x = 0
nl.sign_ladder.use_rot_y = -85.556503
nl.sign_ladder.use_rot_z = 0
nl.sign_ladder.lookAt = function(arg1) -- line 272
    system.default_response("ladder")
end
nl.sign_ladder.use = function(arg1) -- line 275
    if not nl.sign_down then
        START_CUT_SCENE()
        ResetMarioControls()
        manny:ignore_boxes()
        manny:setpos(-2.6008, 1.93349, 10.6008)
        manny:setrot(0, 229.159, 0)
        nl:current_setup(nl_legla)
        SetAmbientLight(1)
        sleep_for(300)
        manny:say_line("/nlma015/")
        wait_for_message()
        manny:say_line("/nlma016/")
        wait_for_message()
        SetAmbientLight(0)
        nl:current_setup(nl_hdnws)
        manny:setpos(-3.69755, 3.17402, 3.71)
        manny:setrot(0, 108.567, 0)
        manny:follow_boxes()
        END_CUT_SCENE()
        nl:current_setup(nl_hndws)
    else
        start_script(nl.cowabunga)
    end
end
nl.window1 = Object:create(nl, "/nltx017/window", -0.132181, 0.529369, 0.43000001, { range = 0.60000002 })
nl.window1.use_pnt_x = 0.157819
nl.window1.use_pnt_y = 0.56936902
nl.window1.use_pnt_z = -0.02
nl.window1.use_rot_x = 0
nl.window1.use_rot_y = 66.351501
nl.window1.use_rot_z = 0
nl.window1.lookAt = function(arg1) -- line 311
    manny:say_line("/nlma018/")
end
nl.window1.use = function(arg1) -- line 315
    manny:say_line("/nlma019/")
end
nl.sign = Object:create(nl, "/nltx020/sign", -4.2684898, 2.27632, 9.79, { range = 0.60000002 })
nl.sign.use_pnt_x = -4.8284898
nl.sign.use_pnt_y = 4.9663301
nl.sign.use_pnt_z = 3.71
nl.sign.use_rot_x = 0
nl.sign.use_rot_y = 169.44901
nl.sign.use_rot_z = 0
nl.sign.lookAt = function(arg1) -- line 327
    if not nl.sign_down then
        manny:say_line("/nlma021/")
    else
        manny:say_line("/nlma022/")
    end
end
nl.sign.pickUp = function(arg1) -- line 335
    system.default_response("bolted")
end
nl.sign.use = function(arg1) -- line 339
    start_script(Sentence, "use", nl.sign_ladder)
end
nl.climbup_box = { name = "climb up" }
nl.climbup_box.walkOut = function(arg1) -- line 351
    if not nl.sign_down then
        nl:jump_on_ledge()
    end
end
nl.climbdown_box = { name = "climb down" }
nl.climbdown_box.walkOut = function(arg1) -- line 358
    nl:jump_off_ledge()
end
nq_body_Chore0 = 0
nq_body_gone = 1
CheckFirstTime("nq.lua")
nq = Set:create("nq.set", "New Headquarters", { nq_intha = 0, nq_ovrhd = 1 })
dofile("ev_stand_idles.lua")
dofile("nq_tape.lua")
dofile("meche_ruba.lua")
dofile("meche_snow.lua")
nq.the_plan = function() -- line 17
    local local1 = { }
    START_CUT_SCENE()
    meche.footsteps = footsteps.concrete
    meche_idle_ok = FALSE
    manny:walkto_object(nq.meche_obj)
    manny:head_look_at(nil)
    eva:head_follow_mesh(meche, 6, TRUE)
    manny:say_line("/nqma031/")
    wait_for_message()
    manny:say_line("/nqma032/")
    wait_for_message()
    manny:say_line("/nqma033/")
    wait_for_message()
    meche:say_line("/nqmc034/")
    wait_for_message()
    stop_script(meche.head_follow_mesh)
    eva:say_line("/nqev035/")
    meche:head_follow_mesh(eva, 6, TRUE)
    wait_for_message()
    meche:head_look_at(nil)
    eva:head_look_at(nil)
    MakeSectorActive("meche_box", FALSE)
    meche:follow_boxes()
    meche:set_collision_mode(COLLISION_OFF)
    meche:head_look_at_manny()
    start_script(meche.walkto, meche, nq.lw_door, TRUE)
    sleep_for(1000)
    meche:say_line("/nqmc036/")
    meche:wait_for_actor()
    meche:free()
    eva:say_line("/nqev037/")
    manny:head_look_at(nil)
    local1 = eva:getpos()
    while TurnActorTo(manny.hActor, local1.x, local1.y, local1.z) do
        break_here()
    end
    eva:say_line("/nqev037/")
    wait_for_message()
    manny:say_line("/nqma038/")
    wait_for_message()
    manny:say_line("/nqma039/")
    wait_for_message()
    END_CUT_SCENE()
    nq.meche_obj:make_untouchable()
end
nq.bowlsley_cam = function() -- line 65
    if not bowlsley_in_hiding then
        if not nq.pigeon.en_route then
            START_CUT_SCENE("no head")
            system:lock_display()
            StartMovie("cam_cyc.snm", TRUE)
            manny:set_visibility(FALSE)
            meche:set_visibility(FALSE)
            eva:set_visibility(FALSE)
            if not little_manny.dead then
                little_manny:set_visibility(FALSE)
            end
            if not nq.picked_up_arm then
                arm_actor:set_visibility(FALSE)
            end
            nq.remains:play_chore(1)
            nq.tape_recorder:play_chore(nq_tape_gone)
            system:unlock_display()
            music_state:set_state(stateFVID)
            if not nq.seen_bowlsley then
                nq.seen_bowlsley = TRUE
                wait_for_message()
                sleep_for(1000)
                manny:say_line("/nqma040/")
                manny:wait_for_message()
                eva:say_line("/nqev041/")
                eva:wait_for_message()
                eva:say_line("/nqev042/")
                eva:wait_for_message()
                eva:say_line("/nqev043/")
                eva:wait_for_message()
                eva:say_line("/nqev044/")
                eva:wait_for_message()
                eva:say_line("/nqev045/")
                eva:wait_for_message()
                manny:say_line("/nqma046/")
                eva:wait_for_message()
                manny:say_line("/nqma047/")
                manny:wait_for_message()
                eva:say_line("/nqev048/")
                eva:wait_for_message()
                eva:say_line("/nqev049/")
                eva:wait_for_message()
                manny:say_line("/nqma050/")
                nq:restore_from_movie()
            else
                set_override(nq.esc_from_camera)
                sleep_for(1000)
                manny:say_line("/nqma051/")
                system.buttonHandler = camera_button_handler
            end
            END_CUT_SCENE()
        else
            cur_puzzle_state[52] = TRUE
            nq.pigeon.en_route = FALSE
            start_script(cut_scene.eatbird)
        end
    else
        nq.say_nothing_but()
    end
end
nq.esc_from_camera = function() -- line 149
    system.buttonHandler = SampleButtonHandler
    start_script(nq.restore_from_movie)
end
camera_button_handler = function(arg1, arg2, arg3) -- line 154
    if not CommonButtonHandler(arg1, arg2, arg3) then
        if arg2 then
            nq.esc_from_camera()
        end
    end
end
nq.restore_from_movie = function(arg1) -- line 162
    system:lock_display()
    StopMovie()
    break_here()
    ForceRefresh()
    manny:set_visibility(TRUE)
    meche:set_visibility(TRUE)
    eva:set_visibility(TRUE)
    if not little_manny.dead then
        little_manny:set_visibility(TRUE)
    end
    if not nq.picked_up_arm then
        arm_actor:set_visibility(TRUE)
    end
    nq.remains:play_chore(0)
    sleep_for(250)
    music_state:update()
    system:unlock_display()
end
nq.say_nothing_but = function() -- line 185
    manny:say_line("/nqma052/")
end
nq.dead_cam = function(arg1) -- line 190
    if not nq.seen_dead_cam then
        nq.seen_dead_cam = TRUE
        if not arg1.seen then
            arg1.seen = TRUE
            manny:say_line("/nqma053/")
            wait_for_message()
            manny:say_line("/nqma054/")
        else
            nq.say_nothing_but()
        end
    elseif not arg1.seen then
        arg1.seen = TRUE
        manny:say_line("/nqma055/")
        wait_for_message()
        manny:say_line("/nqma056/")
    else
        nq.say_nothing_but()
    end
end
nq.eva_idles = function(arg1) -- line 213
    local local1
    eva:play_chore(ev_stand_idle_stand_idle)
    while 1 do
        if not eva.stop_idle then
            local1 = rndint(1, 3)
            eva:play_chore(local1)
            eva:wait_for_chore()
            eva:wait_here(rnd(1, 3))
        end
        break_here()
    end
end
nq.idle_little_manny = function() -- line 227
    nq.pigeon_ilde_ok = TRUE
    while 1 do
        if nq.pigeon_ilde_ok then
            if rnd() then
                little_manny:play_chore(pigeon_idles_stopwalk_cycle)
            else
                little_manny:play_chore(pigeon_idles_head_turns)
            end
            if rnd() then
                little_manny:play_sound_at("pigeon3.wav")
            else
                little_manny:play_sound_at("wings4.wav")
            end
            little_manny:wait_for_chore()
            sleep_for(rnd(3000, 6000))
        else
            break_here()
        end
    end
end
nq.meche_arm_idle = function() -- line 249
    meche:play_chore(meche_in_vi_xarms)
    meche:wait_for_chore()
    meche_idle_ok = TRUE
    while meche_idle_ok do
        meche:play_chore(meche_ruba_drop_hands)
        meche:wait_for_chore()
        vi.meche_hold(5, 9)
        meche:play_chore(meche_ruba_xarms)
        meche:wait_for_chore()
        vi.meche_hold(5, 9)
    end
    meche:play_chore(meche_ruba_drop_hands)
    meche:wait_for_chore()
end
nq.set_up_actors = function(arg1) -- line 268
    eva:set_costume("ev_stand_idles.cos")
    eva:put_in_set(nq)
    eva:ignore_boxes()
    eva:set_mumble_chore(ev_stand_idles_mumble)
    eva:set_talk_chore(1, ev_stand_idles_stop_talk)
    eva:set_talk_chore(2, ev_stand_idles_a)
    eva:set_talk_chore(3, ev_stand_idles_c)
    eva:set_talk_chore(4, ev_stand_idles_e)
    eva:set_talk_chore(5, ev_stand_idles_f)
    eva:set_talk_chore(6, ev_stand_idles_l)
    eva:set_talk_chore(7, ev_stand_idles_m)
    eva:set_talk_chore(8, ev_stand_idles_o)
    eva:set_talk_chore(9, ev_stand_idles_t)
    eva:set_talk_chore(10, ev_stand_idles_u)
    eva:setpos(-0.3296, -0.00454, 0)
    eva:setrot(0, -99.1731, 0)
    eva:set_head(3, 4, 5, 165, 28, 80)
    eva:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(eva.hActor, 0.3)
    start_script(nq.eva_idles)
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(manny.hActor, 0.35)
    if not little_manny then
        little_manny = Actor:create(nil, nil, nil, "little manny")
    end
    if not little_manny.dead then
        little_manny:follow_boxes()
        little_manny:set_costume("pigeon_idles.cos")
        little_manny:set_colormap("pigeons.cmp")
        little_manny:put_in_set(nq)
        little_manny:ignore_boxes()
        little_manny:setpos(-0.342759, 0.825031, 0.522623)
        little_manny:setrot(0, 188, 0)
        start_script(nq.idle_little_manny)
    end
    if nq.meche_obj.touchable then
        box_on("meche_box")
        meche:set_costume(nil)
        meche:set_costume("meche_snow.cos")
        meche:set_mumble_chore(meche_snow_mumble, "meche_snow.cos")
        meche:set_talk_chore(1, meche_snow_stop_talk)
        meche:set_talk_chore(2, meche_snow_a)
        meche:set_talk_chore(3, meche_snow_c)
        meche:set_talk_chore(4, meche_snow_e)
        meche:set_talk_chore(5, meche_snow_f)
        meche:set_talk_chore(6, meche_snow_l)
        meche:set_talk_chore(7, meche_snow_m)
        meche:set_talk_chore(8, meche_snow_o)
        meche:set_talk_chore(9, meche_snow_t)
        meche:set_talk_chore(10, meche_snow_u)
        meche:set_head(5, 5, 5, 165, 28, 80)
        meche:set_walk_chore(meche_snow_walk, "meche_snow.cos")
        meche:set_look_rate(200)
        meche:put_in_set(nq)
        meche:ignore_boxes()
        meche:setpos(0.9, 1, 0)
        meche:setrot(0, -204, 0)
        meche:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(meche.hActor, 0.5)
        start_script(nq.meche_arm_idle)
        start_script(meche.head_follow_mesh, meche, manny, 5)
    else
        MakeSectorActive("meche_box", FALSE)
    end
    if not arm_actor then
        arm_actor = Actor:create(nil, nil, nil, "arm")
    end
    if not nq.picked_up_arm then
        arm_actor:set_costume("arm_actor.cos")
        arm_actor:put_in_set(nq)
        arm_actor:setpos({ x = 0.742541, y = -0.0746845, z = -0.007 })
        arm_actor:setrot(0, 90, 89)
        arm_actor:play_chore_looping(0)
    end
end
radio_table = { "radio1.wav", "radio2.wav", "radio3.wav", "cpuBeep1.wav", "cpuBeep2.wav", "cpuBeep3.wav", "cpuArrow.wav", "compBeep.wav", "intrCom.wav", "typeCr.wav" }
nq.radio_sfx = function(arg1) -- line 350
    local local1
    while 1 do
        sleep_for(15000)
        if not find_script(cut_scene.eatbird) then
            local1 = pick_from_nonweighted_table(radio_table, TRUE)
            start_sfx(local1, 32)
        end
    end
end
nq.enter = function(arg1) -- line 368
    nq:set_up_actors()
    NewObjectState(nq_intha, OBJSTATE_UNDERLAY, "nq_sprout.bm")
    nq.remains:set_object_state("nq_body.cos")
    nq.remains:play_chore(0)
    nq.tape_recorder.hObjectState = nq:add_object_state(nq_intah, "nq_tape.bm", nil, OBJSTATE_UNDERLAY, FALSE)
    nq.tape_recorder:set_object_state("nq_tape.cos")
    start_script(nq.radio_sfx)
    SetShadowColor(6, 6, 6)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 10)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(meche.hActor, 0)
    SetActorShadowPoint(meche.hActor, 0, 0, 10)
    SetActorShadowPlane(meche.hActor, "shadow1")
    AddShadowPlane(meche.hActor, "shadow1")
    SetActiveShadow(eva.hActor, 0)
    SetActorShadowPoint(eva.hActor, 0, 0, 10)
    SetActorShadowPlane(eva.hActor, "shadow1")
    AddShadowPlane(eva.hActor, "shadow1")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 0, 0, 10)
    SetActorShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow2")
    SetActiveShadow(meche.hActor, 1)
    SetActorShadowPoint(meche.hActor, 0, 0, 10)
    SetActorShadowPlane(meche.hActor, "shadow2")
    AddShadowPlane(meche.hActor, "shadow2")
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, 0, 0, 10)
    SetActorShadowPlane(manny.hActor, "shadow3")
    AddShadowPlane(manny.hActor, "shadow3")
    SetActiveShadow(meche.hActor, 2)
    SetActorShadowPoint(meche.hActor, 0, 0, 10)
    SetActorShadowPlane(meche.hActor, "shadow3")
    AddShadowPlane(meche.hActor, "shadow3")
end
nq.exit = function(arg1) -- line 421
    eva:free()
    stop_script(nq.radio_sfx)
    stop_script(nq.eva_idles)
    little_manny:free()
    stop_script(nq.idle_little_manny)
    manny:set_collision_mode(COLLISION_OFF)
    KillActorShadows(manny.hActor)
    KillActorShadows(meche.hActor)
    KillActorShadows(eva.hActor)
end
nq.meche_obj = Object:create(nq, "Meche", 0.91113698, 0.984411, 0.51099998, { range = 0.89999998 })
nq.meche_obj.use_pnt_x = 0.72313702
nq.meche_obj.use_pnt_y = 0.739411
nq.meche_obj.use_pnt_z = 0
nq.meche_obj.use_rot_x = 0
nq.meche_obj.use_rot_y = -1843.97
nq.meche_obj.use_rot_z = 0
nq.meche_obj.lookAt = function(arg1) -- line 457
    manny:say_line("/nqma058/")
end
nq.meche_obj.pickUp = function(arg1) -- line 461
    system.default_response("not now")
end
nq.meche_obj.use = function(arg1) -- line 465
    start_script(nq.the_plan)
end
nq.meche_obj.use_hand = function(arg1) -- line 469
    START_CUT_SCENE()
    manny:walkto(0.693852, 0.844436, -0.00303789, 0, 318.127, 0)
    manny:wait_for_actor()
    manny:wait_for_actor()
    manny:play_chore(msb_use_obj, manny.base_costume)
    manny:say_line("/lrma008/")
    manny:wait_for_message()
    meche:say_line("/nqmc059/")
    manny:wait_for_chore(msb_use_obj, manny.base_costume)
    manny:stop_chore(msb_use_obj, manny.base_costume)
    END_CUT_SCENE()
end
nq.meche_obj.use_lsa_photo = function(arg1) -- line 483
    meche:say_line("/nqmc060/")
end
nq.monitor1 = Object:create(nq, "/nqtx001/monitor", -0.59216201, 0.28474399, 0.47, { range = 0.60000002 })
nq.monitor1.use_pnt_x = -0.48111799
nq.monitor1.use_pnt_y = 0.28467101
nq.monitor1.use_pnt_z = 0
nq.monitor1.use_rot_x = 0
nq.monitor1.use_rot_y = -2793.6799
nq.monitor1.use_rot_z = 0
nq.monitor1.lookAt = function(arg1) -- line 496
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    start_script(nq.bowlsley_cam)
    END_CUT_SCENE()
end
nq.monitor1.pickUp = function(arg1) -- line 504
    system.default_response("attached")
end
nq.monitor1.use = nq.monitor1.lookAt
nq.monitor2 = Object:create(nq, "/nqtx008/monitor", -0.80216199, -0.045256399, 0.5, { range = 0.60000002 })
nq.monitor2.use_pnt_x = -0.63804001
nq.monitor2.use_pnt_y = -0.048541501
nq.monitor2.use_pnt_z = 0
nq.monitor2.use_rot_x = 0
nq.monitor2.use_rot_y = -2782.29
nq.monitor2.use_rot_z = 0
nq.monitor2.pickUp = function(arg1) -- line 518
    system.default_response("attached")
end
nq.monitor2.use = function(arg1) -- line 522
    start_script(nq.dead_cam, arg1)
end
nq.monitor2.lookAt = nq.monitor2.use
nq.monitor3 = Object:create(nq, "/nqtx009/monitor", -0.78216201, 0.55474401, 0.5, { range = 0.64999998 })
nq.monitor3.use_pnt_x = -0.56171501
nq.monitor3.use_pnt_y = 0.425107
nq.monitor3.use_pnt_z = 0
nq.monitor3.use_rot_x = 0
nq.monitor3.use_rot_y = -2813.8701
nq.monitor3.use_rot_z = 0
nq.monitor3.lookAt = function(arg1) -- line 536
    start_script(nq.dead_cam, arg1)
end
nq.monitor3.pickUp = function(arg1) -- line 540
    system.default_response("attached")
end
nq.monitor3.use = nq.monitor3.lookAt
nq.pigeon = Object:create(nq, "/nqtx010/pigeon", -0.33384299, 0.79816997, 0.61000001, { range = 0.85000002 })
nq.pigeon.use_pnt_x = -0.252049
nq.pigeon.use_pnt_y = 0.51655197
nq.pigeon.use_pnt_z = 0
nq.pigeon.use_rot_x = 0
nq.pigeon.use_rot_y = 6.4552002
nq.pigeon.use_rot_z = 0
nq.pigeon.lookAt = function(arg1) -- line 556
    if not arg1.noted then
        if arg1.bit then
            manny:say_line("/nqma014/")
        else
            manny:say_line("/nqma011/")
        end
    else
        manny:say_line("/nqma061/")
    end
end
nq.pigeon.pickUp = function(arg1) -- line 568
    if nq.pigeon.bit then
        system.default_response("got some")
    elseif manny:walkto_object(arg1) then
        START_CUT_SCENE()
        nq.pigeon.bit = TRUE
        nq.pigeon_ilde_ok = FALSE
        manny:say_line("/nqma012/")
        manny:wait_for_actor()
        manny:wait_for_message()
        manny:play_chore(msb_reach_high, manny.base_costume)
        sleep_for(1000)
        little_manny:play_chore(pigeon_idles_pecking)
        start_sfx("nqChomp.wav")
        wait_for_sound("nqChomp.wav")
        manny:say_line("/nqma013/")
        wait_for_message()
        manny:say_line("/nqma014/")
        manny:wait_for_chore()
        nq.pigeon_ilde_ok = TRUE
        END_CUT_SCENE()
    end
end
nq.pigeon.use = nq.pigeon.pickUp
nq.pigeon.use_note = function(arg1) -- line 596
    arg1.noted = TRUE
    START_CUT_SCENE()
    nq.pigeon_ilde_ok = FALSE
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:say_line("/nqma015/")
    wait_for_message()
    manny.is_holding = nil
    manny:stop_chore(msb_hold, manny.base_costume)
    if manny.fancy then
        manny:stop_chore(mcc_thunder_hold_note, manny.base_costume)
        manny:play_chore(mcc_thunder_activate_note, manny.base_costume)
    else
        manny:stop_chore(msb_hold_note, manny.base_costume)
        manny:play_chore(msb_activate_note, manny.base_costume)
    end
    manny:play_chore(msb_reach_high, manny.base_costume)
    manny:say_line("/nqma016/")
    sleep_for(1000)
    if manny.fancy then
        manny:stop_chore(mcc_thunder_activate_note, manny.base_costume)
    else
        manny:stop_chore(msb_activate_note, manny.base_costume)
    end
    start_sfx("tgPullNt.wav")
    manny:wait_for_chore()
    tg.note:free()
    nq.pigeon_ilde_ok = TRUE
    END_CUT_SCENE()
end
nq.pigeon_fly_sfx = function(arg1) -- line 629
    local local1
    while 1 do
        local1 = pick_one_of({ "wings1.wav", "wings2.wav", "wings3.wav", "wings4.wav", "wings5.wav", "wings6.wav", "wings7.wav", "wings8.wav" })
        start_sfx(local1)
        while sound_playing(local1) do
            break_here()
        end
    end
end
nq.pigeon.use_lsa_photo = function(arg1) -- line 642
    if not arg1.noted then
        manny:say_line("/nqma017/")
    else
        START_CUT_SCENE()
        stop_script(nq.idle_little_manny)
        little_manny.dead = TRUE
        arg1:make_untouchable()
        manny:walkto_object(arg1)
        manny:wait_for_actor()
        manny:say_line("/jbma078/")
        manny:play_chore(msb_reach_high, manny.base_costume)
        manny:wait_for_chore()
        manny:wait_for_message()
        nq.pigeon.en_route = TRUE
        music_state:set_sequence(seqPigeonFly)
        start_script(nq.pigeon_fly_sfx)
        little_manny:play_chore(pigeon_idles_short_takeoff)
        manny:play_chore(msb_reach_low, manny.base_costume)
        little_manny:wait_for_chore()
        little_manny:play_chore_looping(pigeon_idles_fly_cycle)
        manny:say_line("/nqma062/")
        little_manny:set_turn_rate(55)
        while TurnActorTo(little_manny.hActor, 0.518063, 1.62193, 0.522623) do
            little_manny:walk_forward()
            break_here()
        end
        manny:wait_for_chore()
        manny:stop_chore(msb_reach_low, manny.base_costume)
        repeat
            TurnActorTo(little_manny.hActor, -1.17, 2.12, 0.522623)
            little_manny:walk_forward()
            break_here()
        until little_manny:find_sector_name("little_manny")
        stop_script(nq.pigeon_fly_sfx)
        little_manny:free()
        nq.monitor1:lookAt()
        END_CUT_SCENE()
        manny:clear_hands()
    end
end
nq.pigeon.use_hand = function(arg1) -- line 688
    START_CUT_SCENE()
    manny:say_line("/nqma063/")
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:wait_for_message()
    manny:stop_chore(msb_hold, manny.base_costume)
    manny:play_chore(msb_reach_high, manny.base_costume)
    sleep_for(1000)
    manny:say_line("/nqma064/")
    manny:wait_for_chore()
    manny:stop_chore(msb_reach_high, manny.base_costume)
    manny:play_chore_looping(msb_hold, manny.base_costume)
    END_CUT_SCENE()
end
nq.wastebasket = Object:create(nq, "/nqtx018/wastebasket", 0.216911, 0.86986101, 0.26499999, { range = 0.55000001 })
nq.wastebasket.use_pnt_x = 0.264595
nq.wastebasket.use_pnt_y = 0.71353102
nq.wastebasket.use_pnt_z = 0
nq.wastebasket.use_rot_x = 0
nq.wastebasket.use_rot_y = -317.17899
nq.wastebasket.use_rot_z = 0
nq.wastebasket.lookAt = function(arg1) -- line 713
    if not arg1.searched then
        START_CUT_SCENE("no head")
        manny:head_look_at(arg1)
        manny:walkto(arg1)
        manny:wait_for_actor()
        manny:play_chore(msb_reach_med, manny.base_costume)
        sleep_for(300)
        start_sfx("nqGarbCn.wav")
        sleep_for(450)
        manny:blend(msb_hold, msb_reach_med, 1000, manny.base_costume)
        manny:wait_for_chore()
        arg1.searched = TRUE
        nq.photo:get()
        manny:head_look_at(nil)
        manny.is_holding = nq.photo
        if manny.fancy then
            manny:play_chore_looping(mcc_thunder_activate_lsa_photo, manny.base_costume)
            manny.hold_chore = mcc_thunder_activate_lsa_photo
        else
            manny:play_chore_looping(msb_activate_lsa_photo, "msb.cos")
            manny.hold_chore = msb_activate_lsa_photo
        end
        manny:play_chore_looping(msb_hold, manny.base_costume)
        wait_for_sound("nqGarbCn.wav")
        manny:say_line("/nqma021/")
        manny:setrot(0, 81.2567, 0, TRUE)
        manny:wait_for_actor()
        look_at_item_in_hand(TRUE)
        manny:wait_for_message()
        END_CUT_SCENE()
    else
        manny:say_line("/nqma019/")
    end
end
nq.wastebasket.use = nq.wastebasket.lookAt
nq.wastebasket.searched = FALSE
nq.wastebasket.pickUp = function(arg1) -- line 753
    arg1:lookAt()
end
nq.wastebasket.use_note = function(arg1) -- line 757
    manny:say_line("/nqma065/")
end
nq.wastebasket.use_hand = function(arg1) -- line 761
    manny:say_line("/nqma066/")
end
nq.wastebasket.use_lsa_photo = function(arg1) -- line 765
    if little_manny.dead then
        manny:walkto(arg1)
        manny:say_line("/nqma067/")
        manny:wait_for_actor()
        manny:play_chore(msb_reach_med, manny.base_costume)
        manny:stop_chore(msb_hold, manny.base_costume)
        sleep_for(750)
        manny:stop_chore(manny.hold_chore, manny.base_costume)
        nq.photo:put_in_limbo()
        manny:wait_for_chore()
        manny.is_holding = nil
    else
        manny:say_line("/nqma068/")
    end
end
nq.photo = Object:create(nq, "/nqtx020/lsa_photo", 0, 0, 0, { range = 0 })
nq.photo.wav = "getCard.wav"
nq.photo.lookAt = function(arg1) -- line 786
    manny:say_line("/nqma021/")
end
nq.photo.use = nq.photo.lookAt
nq.photo.default_response = function(arg1) -- line 792
    manny:say_line("/nqma069/")
end
nq.radio = Object:create(nq, "/nqtx022/radio", 0.12, 0.210196, 0.33000001, { range = 0.60000002 })
nq.radio.use_pnt_x = 0.320077
nq.radio.use_pnt_y = 0.25619501
nq.radio.use_pnt_z = 0
nq.radio.use_rot_x = 0
nq.radio.use_rot_y = -3127.02
nq.radio.use_rot_z = 0
nq.radio.lookAt = function(arg1) -- line 804
    manny:say_line("/nqma023/")
end
nq.radio.pickUp = function(arg1) -- line 808
    system.default_response("martialed")
end
nq.radio.use = function(arg1) -- line 812
    if not arg1.tried then
        arg1.tried = TRUE
        manny:say_line("/nqma070/")
        wait_for_message()
        manny:say_line("/nqma024/")
        wait_for_message()
        salvador:say_line("/nqsa025/")
        wait_for_message()
        manny:say_line("/nqma026/")
        wait_for_message()
        olivia:say_line("/nqol027/")
    else
        manny:say_line("/nqma028/")
        wait_for_message()
        manny:say_line("/nqma029/")
    end
end
nq.memo = Object:create(nq, "/nqtx071/memo", 0.079999998, -0.28003299, 0.36000001, { range = 0.60000002 })
nq.memo.use_pnt_x = 0.28
nq.memo.use_pnt_y = -0.210033
nq.memo.use_pnt_z = 0
nq.memo.use_rot_x = 0
nq.memo.use_rot_y = 829.59497
nq.memo.use_rot_z = 0
nq.memo.lookAt = function(arg1) -- line 839
    manny:say_line("/nqma072/")
    wait_for_message()
    manny:say_line("/nqma073/")
    wait_for_message()
    manny:say_line("/nqma074/")
end
nq.memo.pickUp = function(arg1) -- line 847
    system.default_response("nah")
end
nq.memo.use = nq.memo.lookAt
nq.remains = Object:create(nq, "/nqtx075/remains", 0.628353, -0.083236001, 0, { range = 0.60000002 })
nq.remains.use_pnt_x = 0.72854501
nq.remains.use_pnt_y = -0.23227701
nq.remains.use_pnt_z = 0
nq.remains.use_rot_x = 0
nq.remains.use_rot_y = -325.54999
nq.remains.use_rot_z = 0
nq.remains.lookAt = function(arg1) -- line 862
    manny:say_line("/nqma076/")
end
nq.remains.pickUp = function(arg1) -- line 866
    START_CUT_SCENE()
    if not nq.picked_up_arm then
        nq.picked_up_arm = TRUE
        preload_sfx("nqArmRip.wav")
        manny:walkto_object(arg1)
        manny:wait_for_actor()
        manny:play_chore(msb_reach_low, manny.base_costume)
        sleep_for(1000)
        start_sfx("nqArmRip.wav")
        arm_actor:free()
        nq.picked_up_arm = TRUE
        nq.arm:get()
        manny:stop_chore(msb_reach_low, manny.base_costume)
        if manny.fancy then
            manny:play_chore_looping(mcc_thunder_activate_hand, manny.base_costume)
        else
            manny:play_chore_looping(msb_activate_hand, "msb.cos")
        end
        manny:play_chore_looping(msb_hold, manny.base_costume)
        manny:wait_for_chore(msb_reach_low, manny.base_costume)
        manny.is_holding = nq.arm
        manny.hold_chore = msb_activate_hand
        manny:say_line("/nqma077/")
    else
        manny:say_line("/nqma078/")
    end
    END_CUT_SCENE()
end
nq.remains.use_hand = function(arg1) -- line 899
    nq.wastebasket:use_hand()
end
nq.remains.use = nq.remains.pickUp
nq.arm = Object:create(nq, "/nqtx079/arm", 0, 0, 0, { range = 0 })
nq.arm.string_name = "hand"
nq.arm.wav = "getBone.wav"
nq.arm.lookAt = function(arg1) -- line 910
    manny:say_line("/nqma080/")
end
nq.arm.use = function(arg1) -- line 914
    START_CUT_SCENE()
    manny:say_line("/nqma081/")
    if manny.fancy then
        manny:stop_chore(mcc_thunder_activate_hand, manny.base_costume)
        manny:stop_chore(mcc_thunder_hold, manny.base_costume)
        manny:run_chore(mcc_thunder_salute, manny.base_costume)
        manny:stop_chore(mcc_thunder_salute, manny.base_costume)
        manny:play_chore(mcc_thunder_activate_hand, manny.base_costume)
        manny:play_chore_looping(mcc_thunder_hold, manny.base_costume)
    else
        manny:stop_chore(msb_activate_hand, manny.base_costume)
        manny:stop_chore(msb_hold, manny.base_costume)
        manny:run_chore(msb_salute, manny.base_costume)
        manny:stop_chore(msb_salute, manny.base_costume)
        manny:play_chore(msb_activate_hand, manny.base_costume)
        manny:play_chore_looping(msb_hold, manny.base_costume)
    end
    END_CUT_SCENE()
end
nq.arm.default_response = function(arg1) -- line 935
    manny:say_line("/nqma082/")
end
nq.tape_recorder = Object:create(nq, "/nqtx083/tape recorder", -0.76247901, -0.049222901, 0.30000001, { range = 0.60000002 })
nq.tape_recorder.use_pnt_x = -0.53847998
nq.tape_recorder.use_pnt_y = -0.025222899
nq.tape_recorder.use_pnt_z = 0
nq.tape_recorder.use_rot_x = 0
nq.tape_recorder.use_rot_y = 93.250999
nq.tape_recorder.use_rot_z = 0
nq.tape_recorder.lookAt = function(arg1) -- line 949
    manny:say_line("/nqma084/")
end
nq.tape_recorder.pickUp = function(arg1) -- line 953
    system.default_response("attached")
end
nq.tape_recorder.use = function(arg1) -- line 957
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:play_chore(msb_hand_on_obj, manny.base_costume)
        manny:wait_for_chore()
        start_sfx("nqTapeOn.imu", 64)
        ImSetVoiceEffect("Intercom Filter")
        arg1:play_chore_looping(nq_tape_play)
        manny:play_chore(msb_hand_off_obj, manny.base_costume)
        sleep_for(500)
        bowlsley:say_line("/nqbl085/")
        sleep_for(2000)
        manny:twist_head_gesture()
        wait_for_message()
        hector:say_line("/nqhe086/")
        wait_for_message()
        hector:say_line("/nqhe087/")
        wait_for_message()
        bowlsley:say_line("/nqbl088/")
        manny:play_chore(msb_hand_on_obj, manny.base_costume)
        manny:wait_for_chore()
        arg1:stop_chore(nq_tape_play)
        arg1:play_chore(nq_take_stop)
        stop_sound("nqTapeOn.imu", 64)
        start_sfx("nqTapeOf.wav", 64)
        manny:play_chore(msb_hand_off_obj, manny.base_costume)
        manny:wait_for_chore()
        bowlsley:wait_for_message()
        ImSetVoiceEffect("OFF")
        END_CUT_SCENE()
    end
end
nq.eva_obj = Object:create(nq, "/nqtx089/Eva", -0.23578, -0.0184035, 0.42789999, { range = 0.60000002 })
nq.eva_obj.use_pnt_x = -0.52827197
nq.eva_obj.use_pnt_y = -0.22375099
nq.eva_obj.use_pnt_z = 0
nq.eva_obj.use_rot_x = 0
nq.eva_obj.use_rot_y = -56.860802
nq.eva_obj.use_rot_z = 0
nq.eva_obj.lookAt = function(arg1) -- line 1000
    manny:say_line("/nqma090/")
    wait_for_message()
    eva:say_line("/nqev091/")
end
nq.eva_obj.pickUp = function(arg1) -- line 1006
    if nq.meche_obj.touchable then
        manny:say_line("/nqma092/")
    else
        manny:say_line("/moma032/")
    end
end
nq.eva_obj.use = function(arg1) -- line 1015
    START_CUT_SCENE()
    manny:say_line("/nqma093/")
    wait_for_message()
    eva:say_line("/nqev094/")
    wait_for_message()
    eva:say_line("/nqev095/")
    END_CUT_SCENE()
end
nq.eva_obj.use_lsa_photo = function(arg1) -- line 1025
    eva:say_line("/nqev096/")
end
nq.eva_obj.use_hand = function(arg1) -- line 1029
    START_CUT_SCENE()
    manny:walkto(-0.448578, -0.172294, 0, 0, 325.747, 0)
    manny:wait_for_actor()
    manny:say_line("/lrma008/")
    manny:use_default()
    END_CUT_SCENE()
    eva:say_line("/nqev097/")
end
nq.lw_door = Object:create(nq, "/nqtx030/exit", 0.97356099, 2.04339, 0.40000001, { range = 0.89999998 })
nq.lw_door.use_pnt_x = 0.68856102
nq.lw_door.use_pnt_y = 2.1083901
nq.lw_door.use_pnt_z = -0.050000001
nq.lw_door.use_rot_x = 0
nq.lw_door.use_rot_y = -74.121902
nq.lw_door.use_rot_z = 0
nq.lw_door.out_pnt_x = 0.93735403
nq.lw_door.out_pnt_y = 2.14853
nq.lw_door.out_pnt_z = -0.050000001
nq.lw_door.out_rot_x = 0
nq.lw_door.out_rot_y = -88.498001
nq.lw_door.out_rot_z = 0
nq.lw_door:make_untouchable()
nq.lw_door.walkOut = function(arg1) -- line 1075
    if nq.meche_obj.touchable then
        nq.the_plan()
    else
        lw:come_out_door(lw.nq_door)
    end
end
nq_tape_play = 0
nq_tape_stop = 1
nq_tape_gone = 2
nr_bottle_activate = 0
nr_bottle_deactivate = 1
nv_IDPHOTO_terry_free = 0
nv_IDPHOTO_nick_fold = 1
nv_IDPHOTO_manny_punch = 2
nv_IDPHOTO_nick_up = 3
nv_IDPHOTO_nick_leave1 = 4
nv_IDPHOTO_nick_leave2 = 5
nv_IDPHOTO_nick_leave3 = 6
octo_eye_open = 0
octo_eye_blink = 1
ol_dies_stickup_manny = 0
ol_dies_grab_manny = 1
ol_dies_pre_get_head_hold = 2
ol_dies_get_sal_head = 3
ol_dies_talk2sal = 4
ol_dies_talk_hold1 = 5
ol_dies_prespit = 6
ol_dies_talk_hold2 = 7
ol_dies_spit = 8
ol_dies_push_ma_out = 9
ol_dies_obtained_head = 10
ol_dies_ma_talk_sal = 11
ol_dies_mumble = 12
ol_dies_m = 13
ol_dies_c = 14
ol_dies_f = 15
ol_dies_l = 16
ol_dies_u = 17
ol_dies_e = 18
ol_dies_o = 19
ol_dies_a = 20
ol_dies_no_talk = 21
ol_dies_run = 22
ol_dies_just_head = 23
ol_dies_sal_eyes_open = 24
ol_dies_sal_eyes_closed = 25
ol_dies_sal_talk_hold2 = 26
ol_dies_t = 27
ol_gun_exit_car = 0
ol_gun_gesture = 1
ol_gun_defpose = 2
ol_gun_threaten = 3
ol_gun_test = 4
olivia_idles_rest = 0
olivia_idles_rest_to_book = 1
olivia_idles_book = 2
olivia_idles_book_to_book_dn = 3
olivia_idles_book_dn = 4
olivia_idles_book_dn_up = 5
olivia_idles_look_book = 6
olivia_idles_smoke_to_book = 7
olivia_idles_book_pos = 8
olivia_idles_book_to_rest = 9
olivia_idles_rest_pos = 10
olivia_idles_rest_gest = 11
olivia_idles_gest = 12
olivia_idles_gest_to_smoke = 13
olivia_idles_smoke = 14
olivia_idles_smoke_to_rest = 15
olivia_idles_rest_hold = 16
olivia_idles_walk = 17
olivia_idles_walk_dns_book = 18
olivia_idles_walk_ups_book = 19
olivia_idles_fade_to_gest = 20
CheckFirstTime("olivia_scripts.lua")
olivia.poetry_idle_table = Idle:create("olivia_idles")
idt = olivia.poetry_idle_table
idt:add_state("rest", { rest_to_book = 0.8, rest = 0.2 })
idt:add_state("rest_to_book", { book = 1 })
idt:add_state("book", { book_to_book_dn = 0.2, book = 0.8 })
idt:add_state("book_to_book_dn", { book_dn = 1 })
idt:add_state("book_dn", { book_dn_up = 0.1, book_dn = 0.9 })
idt:add_state("book_dn_up", { look_book = 1 })
idt:add_state("look_book", { look_book = 0.8, smoke_to_book = 0.2 })
idt:add_state("smoke_to_book", { book_pos = 1 })
idt:add_state("book_pos", { book_to_rest = 0.1, book_pos = 0.9 })
idt:add_state("book_to_rest", { rest_pos = 1 })
idt:add_state("rest_pos", { rest_gest = 0.3, rest_pos = 0.7 })
idt:add_state("rest_gest", { gest = 1 })
idt:add_state("gest", { gest_to_smoke = 0.3, gest = 0.7 })
idt:add_state("gest_to_smoke", { smoke = 1 })
idt:add_state("smoke", { smoke_to_rest = 1 })
idt:add_state("smoke_to_rest", { rest_hold = 1 })
idt:add_state("rest_hold", { rest = 0.33, rest_hold = 0.34, rest_pos = 0.33 })
olivia.standing_idle_table = Idle:create("olivia_idles")
idt = olivia.standing_idle_table
idt:add_state("rest_pos", { rest_gest = 0.01, rest_pos = 0.09 })
idt:add_state("rest_gest", { gest = 1 })
idt:add_state("gest", { gest_to_smoke = 0.5, gest = 0.5 })
idt:add_state("gest_to_smoke", { smoke = 1 })
idt:add_state("smoke", { smoke_to_rest = 1 })
idt:add_state("smoke_to_rest", { rest_pos = 1 })
olivia.dialog_idle_table = Idle:create("olivia_idles")
idt = olivia.dialog_idle_table
idt:add_state("rest", { rest_to_book = 0.1, rest = 0.9 })
idt:add_state("rest_to_book", { book = 1 })
idt:add_state("book", { book_to_book_dn = 0.2, book = 0.8 })
idt:add_state("book_to_book_dn", { book_dn = 1 })
idt:add_state("book_dn", { book_dn_up = 0.8, book_dn = 0.2 })
idt:add_state("book_dn_up", { look_book = 1 })
idt:add_state("look_book", { look_book = 0.2, smoke_to_book = 0.8 })
idt:add_state("smoke_to_book", { book_pos = 1 })
idt:add_state("book_pos", { book_to_rest = 0.8, book_pos = 0.2 })
idt:add_state("book_to_rest", { rest_pos = 1 })
idt:add_state("rest_pos", { rest_gest = 0.6, rest_pos = 0.4 })
idt:add_state("rest_gest", { gest = 1 })
idt:add_state("gest", { gest_to_smoke = 1, gest = 0 })
idt:add_state("gest_to_smoke", { smoke = 1 })
idt:add_state("smoke", { smoke_to_rest = 1 })
idt:add_state("smoke_to_rest", { rest_hold = 1 })
idt:add_state("rest_hold", { rest = 0.6, rest_hold = 0.2, rest_pos = 0.2 })
olivia_talks_mumble = 0
olivia_talks_stop_talk = 1
olivia_talks_c = 2
olivia_talks_m = 3
olivia_talks_f = 4
olivia_talks_e = 5
olivia_talks_u = 6
olivia_talks_l = 7
olivia_talks_a = 8
olivia_talks_o = 9
olivia_talks_t = 10
ol_sna_mumble = 0
ol_sna_stop_talk = 1
ol_sna_c = 2
ol_sna_m = 3
ol_sna_f = 4
ol_sna_e = 5
ol_sna_u = 6
ol_sna_l = 7
ol_sna_a = 8
ol_sna_o = 9
ol_sna_intro = 10
ol_sna_snaol08a = 11
ol_sna_snaol08b = 12
ol_sna_snaol08c = 13
ol_sna_up = 14
ol_sna_look_nk = 15
ol_sna_smoke = 16
ol_sna_turn = 17
ol_sna_kiss = 18
ol_sna_stand_up = 19
ol_sna_t = 20
ol_suitcase_suitcase = 0
ol_suitcase_suitcase_hold = 1
ol_suitcase_suitcase_open = 2
ol_suitcase_suitcase_close = 3
ol_suitcase_suitcase_closed = 4
CheckFirstTime("op.lua")
op = Set:create("op.set", "ocean porthole", { op_top = 0, op_extms = 1 })
op.position_manny = function() -- line 13
    if find_script(op.anchor_cutscene) then
        manny:setpos(0.0189584, 0, 15, 0)
        manny:setrot(0, -184.433, 0)
    else
        START_CUT_SCENE()
        break_here()
        break_here()
        manny:walkto(op.anchor)
        manny:wait_for_actor()
        END_CUT_SCENE()
    end
end
op.anchor_cutscene = function(arg1, arg2) -- line 27
    local local1 = { }
    local local2 = 0
    local local3 = FALSE
    if system.currentSet == ei then
        op:switch_to_set()
        bSwitchRooms = TRUE
    end
    if arg2 == "lower" then
        start_sfx("anchup.wav")
        repeat
            local1 = port_anchor:getpos()
            local2 = local2 + 0.1
            local1.z = local1.z - PerSecond(local2)
            if local1.z < -0.86390001 then
                local1.z = -0.86390001
            end
            port_anchor:setpos(local1.x, local1.y, local1.z)
            break_here()
        until local1.z == -0.86390001
        start_sfx("anchspls.wav")
    else
        start_sfx("anchup.wav")
        repeat
            local1 = port_anchor:getpos()
            local2 = local2 + 0.1
            local1.z = local1.z + PerSecond(local2)
            if local1.z > 0.76789999 then
                local1.z = 0.76789999
            end
            port_anchor:setpos(local1.x, local1.y, local1.z)
            break_here()
        until local1.z == 0.76789999
    end
    if bSwitchRooms then
        ei:switch_to_set()
    end
end
op.end_result = function(arg1) -- line 67
    op:switch_to_set_soft()
    port_anchor:put_in_set(op)
    port_hook:put_in_set(op)
    NewObjectState(op_extms, OBJSTATE_STATE, "op_torn.bm")
    op.anchor:set_object_state("op_torn.cos")
    op.anchor:play_chore(0)
    port_anchor:setpos(0.100058, -0.3298, 0.6692)
    port_anchor:setrot(0, 90, 0)
    port_hook:setrot(0, 90, 0)
    star_anchor:stop_chore()
    star_anchor:setpos(0.0467813, -0.6282, -0.8429)
    star_anchor:setrot(0, 0, 0)
    port_anchor:play_chore_looping(anchors_upr_sway)
    port_hook:play_chore_looping(anchors_lower_sway)
    sleep_for(3000)
    op:return_to_set()
end
op.switch_to_set_soft = function(arg1) -- line 90
    system.lastSet = system.currentSet
    LockSet(system.currentSet.setFile)
    inventory_save_set = system.currentSet
    arg1:CommonEnter()
    MakeCurrentSet(arg1.setFile)
    arg1:enter()
    system.currentSet = op
    if system.ambientLight then
        SetAmbientLight(system.ambientLight)
    end
    inventory_save_handler = system.buttonHandler
end
op.return_to_set = function(arg1) -- line 105
    op:exit()
    system.currentSet = inventory_save_set
    UnLockSet(inventory_save_set.setFile)
    MakeCurrentSet(inventory_save_set.setFile)
    system.buttonHandler = inventory_save_handler
end
op.enter = function(arg1) -- line 120
    local local1
    MakeSectorActive("op_wall", FALSE)
    op:current_setup(op_extms)
    force_port_anchor_update = TRUE
    if ei.ship_ripped then
        NewObjectState(op_extms, OBJSTATE_STATE, "op_torn.bm", "op_torn.zbm")
        op.anchor:set_object_state("op_torn.cos")
        op.anchor:play_chore(0)
    end
    start_script(op.position_manny)
    SetActorClipActive(manny.hActor, TRUE)
    SetActorClipPlane(manny.hActor, 0, 1, 0.02, 0.0122126, 0.016807901, 0)
    port_anchor:put_in_set(op)
    port_hook:put_in_set(op)
    if ei.pa.state == "straight" or ei.pa.state == "out" or ei.pa.state == "up" or ei.pa.state == "under" then
        start_sfx("dpCreak.imu", IM_HIGH_PRIORITY, 90)
    end
end
op.exit = function(arg1) -- line 145
    KillTextObject(op.hText)
    SetActorClipActive(manny.hActor, FALSE)
    stop_sound("dpCreak.imu")
end
op.anchor = Object:create(op, "anchor", -0.201042, -0.44999999, 0.58999997, { range = 0.94999999 })
op.anchor.use_pnt_x = 0.018958399
op.anchor.use_pnt_y = 0.15000001
op.anchor.use_pnt_z = 0
op.anchor.use_rot_x = 0
op.anchor.use_rot_y = -184.433
op.anchor.use_rot_z = 0
op.anchor.lookAt = function(arg1) -- line 164
    if ei.ship_ripped then
        manny:say_line("/eima009/")
    elseif ei.pa.state == "up" then
        if ei.anchors_hooked then
            start_script(ei.anchor_talk, "locked")
        else
            start_script(ei.anchor_talk, "up")
        end
    else
        start_script(ei.anchor_talk, "down")
    end
end
op.anchor.pickUp = function(arg1) -- line 180
    system.default_response("reach")
end
op.anchor.use = op.anchor.pickUp
op.anchor.use_scythe = function(arg1) -- line 185
    local local1 = { }
    local local2 = { }
    local local3 = 0
    if ei.ship_ripped then
        manny:say_line("/eima009/")
    else
        START_CUT_SCENE()
        if ei.pa.state == "up" then
            if ei.anchors_hooked then
                ei.sa.state = "portholed"
                hooked_porthole = op.anchor
                local1 = manny:getpos()
                local2 = manny:getrot()
                MakeSectorActive("op_wall", TRUE)
                manny:walkto(0.018958399, 0.15000001, 0, 0, 175.56799, 0)
                manny:wait_for_actor()
                SetActorClipActive(manny.hActor, FALSE)
                stop_script(monitor_port_anchor_state)
                stop_script(monitor_star_anchor_state)
                port_anchor:set_chore_looping(anchors_upr_sway, FALSE)
                port_hook:set_chore_looping(anchors_lower_sway, FALSE)
                port_anchor:wait_for_chore()
                port_hook:wait_for_chore()
                manny:push_costume("mn_hook_anchors.cos")
                manny:stop_chore(mn2_hold_scythe, "mn2.cos")
                manny:play_chore(0)
                port_anchor:stop_chore(anchors_upr_sway)
                port_hook:stop_chore(anchors_lower_sway)
                port_anchor:play_chore(anchors_upr_hooked)
                port_hook:play_chore(anchors_lower_hooked)
                manny:wait_for_chore()
                manny:pop_costume()
                manny:play_chore_looping(mn2_hold_scythe, "mn2.cos")
                start_script(show_hooked_anchor, port_anchor)
                start_script(ei.anchor_talk, "there")
                manny:walkto(local1.x, local1.y, local1.z, local2.x, local2.y, local2.z)
                manny:wait_for_actor()
                SetActorClipActive(manny.hActor, TRUE)
                MakeSectorActive("op_wall", FALSE)
            else
                MakeSectorActive("op_wall", TRUE)
                manny:walkto(0.000928819, 0.219815, 0, 0, 210.44299, 0)
                manny:wait_for_actor()
                manny:head_look_at(manny)
                manny:play_chore(mn2_lft_on_obj, "mn2.cos")
                manny:wait_for_chore()
                start_sfx("anchup.wav")
                repeat
                    local1 = port_anchor:getpos()
                    local3 = local3 + 0.1
                    local1.z = local1.z - PerSecond(local3)
                    if local1.z < 0.30000001 then
                        local1.z = 0.30000001
                    end
                    port_anchor:setpos(local1.x, local1.y, local1.z)
                    break_here()
                until local1.z == 0.30000001
                stop_sound("anchup.wav")
                manny:play_chore(mn2_lft_off, "mn2.cos")
                manny:wait_for_chore()
                manny:walkto(0.018958399, 0.15000001, 0, 0, 175.56799, 0)
                manny:wait_for_actor()
                SetActorClipActive(manny.hActor, FALSE)
                manny:push_costume("mn_hook_anchors.cos")
                manny:stop_chore(mn2_hold_scythe, "mn2.cos")
                manny:play_chore(1)
                manny:wait_for_chore()
                manny:pop_costume()
                manny:play_chore_looping(mn2_hold_scythe, "mn2.cos")
                manny:walkto(0.000928819, 0.219815, 0, 0, 210.44299, 0)
                MakeSectorActive("op_wall", FALSE)
                SetActorClipActive(manny.hActor, TRUE)
                manny:wait_for_actor()
                manny:head_look_at(manny)
                manny:play_chore(mn2_lft_on_obj, "mn2.cos")
                manny:wait_for_chore()
                start_sfx("anchup.wav")
                local3 = 0
                repeat
                    local1 = port_anchor:getpos()
                    local3 = local3 + 0.1
                    local1.z = local1.z + PerSecond(local3)
                    if local1.z > 0.76789999 then
                        local1.z = 0.76789999
                    end
                    port_anchor:setpos(local1.x, local1.y, local1.z)
                    break_here()
                until local1.z == 0.76789999
                stop_sound("anchup.wav")
                manny:play_chore(mn2_lft_off, "mn2.cos")
                manny:wait_for_chore()
                system.default_response("frustrated")
            end
        else
            start_script(ei.anchor_talk, "easier")
        end
        manny:wait_for_message()
        mo.scythe:put_away()
        END_CUT_SCENE()
    end
end
clipplane_button_handler = function(arg1, arg2, arg3) -- line 306
    if arg1 == NUMPAD4KEY and arg2 then
        start_script(rotate_clip, arg1)
    elseif arg1 == NUMPAD6KEY and arg2 then
        start_script(rotate_clip, arg1)
    elseif arg1 == NUMPAD8KEY and arg2 then
        start_script(rotate_clip, arg1)
    elseif arg1 == NUMPAD2KEY and arg2 then
        start_script(rotate_clip, arg1)
    elseif arg1 == NUMPAD7KEY and arg2 then
        start_script(rotate_clip, arg1)
    elseif arg1 == NUMPAD3KEY and arg2 then
        start_script(rotate_clip, arg1)
    else
        SampleButtonHandler(arg1, arg2, arg3)
    end
end
rotate_clip = function(arg1) -- line 324
    while GetControlState(arg1) do
        if arg1 == NUMPAD4KEY then
            clipplane.x = clipplane.x - 2
        elseif arg1 == NUMPAD6KEY then
            clipplane.x = clipplane.x + 2
        elseif arg1 == NUMPAD2KEY then
            clipplane.y = clipplane.y + 2
        elseif arg1 == NUMPAD8KEY then
            clipplane.y = clipplane.y - 2
        elseif arg1 == NUMPAD7KEY then
            clipplane.z = clipplane.z - 2
        elseif arg1 == NUMPAD3KEY then
            clipplane.z = clipplane.z + 2
        end
        break_here()
    end
end
testclip = function() -- line 343
    local local1 = { }
    local local2 = { }
    if spotfinder == nil or not spotfinder.active then
        toggle_spotfinder()
    end
    SetActorClipActive(manny.hActor, TRUE)
    while TRUE do
        local1 = spotfinder:getpos()
        local1 = normalize_vector(local1)
        break_here()
    end
end
op.ei_door = Object:create(op, "door", 0.247621, 0.77042902, 0.54000002, { range = 0 })
op.ei_door.use_pnt_x = 0.247621
op.ei_door.use_pnt_y = 0.36042899
op.ei_door.use_pnt_z = 0
op.ei_door.use_rot_x = 0
op.ei_door.use_rot_y = -356.49799
op.ei_door.use_rot_z = 0
op.ei_door.out_pnt_x = 0.25003099
op.ei_door.out_pnt_y = 0.67497098
op.ei_door.out_pnt_z = 0
op.ei_door.out_rot_x = 0
op.ei_door.out_rot_y = -350.01999
op.ei_door.out_rot_z = 0
op.ei_box = op.ei_door
op.ei_door.walkOut = function(arg1) -- line 414
    ei:come_out_door(ei.op_door)
end
os_lo_door_open = 0
os_lo_door_close = 1
CheckFirstTime("os.lua")
os = Set:create("os.set", "office steps", { os_stpha = 0, os_top = 1 })
os.camera_adjusts = { 330 }
os.enter = function(arg1) -- line 19
    start_sfx("traffic1.imu")
    set_vol("traffic1.imu", 40)
    manny.footsteps = footsteps.concrete
    NewObjectState(os_stpha, 3, "os_door_to_lo_comp.bm")
    os.lo_door:set_object_state("os_lo_door.cos")
    if reaped_meche then
        os.lo_door:make_touchable()
        os.lo_door.use_pnt_x = -0.0604761
        os.lo_door.use_pnt_y = 0.507589
        os.lo_door.use_pnt_z = 0.01
        MakeSectorActive("lo_box1", FALSE)
        os.lo_door.interest_actor:complete_chore(1)
    end
    SetShadowColor(45, 40, 40)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 3000, -4000, 4000.5)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
    AddShadowPlane(manny.hActor, "shadow7")
    AddShadowPlane(manny.hActor, "shadow9")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 3000, -4000, 4000.5)
    SetActorShadowPlane(manny.hActor, "shadow4")
    AddShadowPlane(manny.hActor, "shadow4")
    SetActorShadowValid(manny.hActor, -1)
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, 3000, -4000, 4000.5)
    SetActorShadowPlane(manny.hActor, "shadow6")
    AddShadowPlane(manny.hActor, "shadow5")
    AddShadowPlane(manny.hActor, "shadow6")
    AddShadowPlane(manny.hActor, "sideshadow3")
    AddShadowPlane(manny.hActor, "sideshadow14")
    SetActiveShadow(manny.hActor, 3)
    SetActorShadowPoint(manny.hActor, 3000, -4000, 4000.5)
    SetActorShadowPlane(manny.hActor, "shadow_door")
    AddShadowPlane(manny.hActor, "shadow_door")
    SetActiveShadow(manny.hActor, 4)
    SetActorShadowPoint(manny.hActor, 3000, -4000, 4000.5)
    SetActorShadowPlane(manny.hActor, "sideshadow1")
    AddShadowPlane(manny.hActor, "sideshadow1")
    AddShadowPlane(manny.hActor, "sideshadow2")
end
os.exit = function() -- line 74
    KillActorShadows(manny.hActor)
    stop_sound("traffic1.imu")
end
os.car = Object:create(os, "/ostx006/car", -1.425, -2.79619, -0.45199999, { range = 0.89999998 })
os.car.use_pnt_x = -1.395
os.car.use_pnt_y = -2.1561899
os.car.use_pnt_z = -0.84200001
os.car.use_rot_x = 0
os.car.use_rot_y = -150.46899
os.car.use_rot_z = 0
os.car.lookAt = function(arg1) -- line 92
    soft_script()
    manny:say_line("/osma007/")
    wait_for_message()
    manny:say_line("/osma008/")
end
os.car.pickUp = function(arg1) -- line 99
    system.default_response("tow")
end
os.car.use = function(arg1) -- line 103
    manny:say_line("/osma009/")
end
os.sign = Object:create(os, "/ostx010/sign", -0.69499499, -2.4061899, -0.152, { range = 1 })
os.sign.use_pnt_x = -0.36097699
os.sign.use_pnt_y = -2.175
os.sign.use_pnt_z = -0.84200001
os.sign.use_rot_x = 0
os.sign.use_rot_y = -209.22701
os.sign.use_rot_z = 0
os.sign.lookAt = function(arg1) -- line 116
    manny:say_line("/osma011/")
end
os.sign.pickUp = function(arg1) -- line 120
    system.default_response("bolted")
end
os.sign.use = os.sign.lookAt
os.facade = Object:create(os, "/ostx012/facade", 0.0053950702, -1.20488, 2.0179999, { range = 4 })
os.facade.use_pnt_x = 0.70539498
os.facade.use_pnt_y = -2.17488
os.facade.use_pnt_z = -0.84200001
os.facade.use_rot_x = 0
os.facade.use_rot_y = 24.8806
os.facade.use_rot_z = 0
os.facade.lookAt = function(arg1) -- line 134
    soft_script()
    manny:say_line("/osma013/")
    wait_for_message()
    manny:say_line("/osma014/")
end
os.facade.pickUp = function(arg1) -- line 141
    system.default_response("right")
end
os.facade.use = os.facade.lookAt
os.lo_door = Object:create(os, "/ostx001/door", 0.034118999, 0.80067801, 0.70999998, { range = 1 })
os.lo_door.use_pnt_x = 0.31706801
os.lo_door.use_pnt_y = 0.39784199
os.lo_door.use_pnt_z = 0.0099999998
os.lo_door.use_rot_x = 0
os.lo_door.use_rot_y = 393.504
os.lo_door.use_rot_z = 0
os.lo_door.out_pnt_x = 0.16371199
os.lo_door.out_pnt_y = 0.629291
os.lo_door.out_pnt_z = 0.0099999998
os.lo_door.out_rot_x = 0
os.lo_door.out_rot_y = 393.50201
os.lo_door.out_rot_z = 0
os.lo_door.touchable = TRUE
os.lo_door.use = function(arg1) -- line 170
    if reaped_meche then
        START_CUT_SCENE()
        manny:say_line("/osma002/")
        wait_for_message()
        manny:say_line("/osma003/")
        END_CUT_SCENE()
    else
        START_CUT_SCENE()
        manny:walkto(os.lo_door.out_pnt_x, os.lo_door.out_pnt_y, os.lo_door.out_pnt_z)
        manny:wait_for_actor()
        manny:setrot(0, -705, 0, TRUE)
        manny:start_open_door_anim()
        sleep_for(1000)
        arg1:play_chore(0)
        manny:finish_open_door_anim()
        lo:switch_to_set()
        lo.os_door.interest_actor:complete_chore(0)
        manny:put_in_set(lo)
        manny:setpos(lo.os_door.out_pnt_x, lo.os_door.out_pnt_y, lo.os_door.out_pnt_z)
        manny:setrot(lo.os_door.out_rot_x, lo.os_door.out_rot_y + 180, lo.os_door.out_rot_z)
        lo:force_camerachange()
        manny:walkto(lo.os_door.use_pnt_x, lo.os_door.use_pnt_y, lo.os_door.use_pnt_z)
        manny:wait_for_actor()
        lo.os_door:play_chore(1)
        lo.os_door.interest_actor:wait_for_chore(1)
        END_CUT_SCENE()
    end
end
os.lo_door.lookAt = function(arg1) -- line 201
    system.default_response("closed")
end
os.st_door = Object:create(os, "/ostx004/door", 4.7241201, -1.60932, -0.33000001, { range = 0 })
os.st_box = os.st_door
os.st_door.use_pnt_x = 2.80828
os.st_door.use_pnt_y = -1.35203
os.st_door.use_pnt_z = -0.84200001
os.st_door.use_rot_x = 0
os.st_door.use_rot_y = -794.52301
os.st_door.use_rot_z = 0
os.st_door.out_pnt_x = 3.1367099
os.st_door.out_pnt_y = -1.26107
os.st_door.out_pnt_z = -0.84200001
os.st_door.out_rot_x = 0
os.st_door.out_rot_y = -794.52301
os.st_door.out_rot_z = 0
os.st_door:make_untouchable()
os.st_door.walkOut = function(arg1) -- line 225
    st:come_out_door(st.os_door)
end
os.rp_door = Object:create(os, "/ostx005/door", -3.4669099, -1.88081, -0.40000001, { range = 0 })
os.rp_door.use_pnt_x = -3.0926399
os.rp_door.use_pnt_y = -1.76768
os.rp_door.use_pnt_z = -0.84200102
os.rp_door.use_rot_x = 0
os.rp_door.use_rot_y = -645.66101
os.rp_door.use_rot_z = 0
os.rp_door.out_pnt_x = -3.5720301
os.rp_door.out_pnt_y = -1.63578
os.rp_door.out_pnt_z = -0.84200102
os.rp_door.out_rot_x = 0
os.rp_door.out_rot_y = -645.66101
os.rp_door.out_rot_z = 0
os.rp_door:make_untouchable()
os.rp_box = os.rp_door
os.rp_door.walkOut = function(arg1) -- line 247
    rp:come_out_door(rp.os_door)
end
os.st_st_door = Object:create(os, "/ostx015/door", 0.206909, -2.9842701, -0.89999998, { range = 0 })
os.st_st_door.use_pnt_x = 0.206909
os.st_st_door.use_pnt_y = -2.9842701
os.st_st_door.use_pnt_z = -0.89999998
os.st_st_door.use_rot_x = 0
os.st_st_door.use_rot_y = -828.91498
os.st_st_door.use_rot_z = 0
os.st_st_door.out_pnt_x = 0.82586199
os.st_st_door.out_pnt_y = -3.03512
os.st_st_door.out_pnt_z = -0.89999998
os.st_st_door.out_rot_x = 0
os.st_st_door.out_rot_y = -812.13898
os.st_st_door.out_rot_z = 0
os.st_st_door:make_untouchable()
os.st_box = os.st_st_door
os.st1_box = os.st_st_door
os.st2_box = os.st_st_door
os.st_st_door.walkOut = function(arg1) -- line 271
    st:come_out_door(st.os_st_door)
end
os.rp_st_door = Object:create(os, "/ostx016/door", -1.0897501, -3.3119299, -0.89999998, { range = 0 })
os.rp_st_door.use_pnt_x = -1.0897501
os.rp_st_door.use_pnt_y = -3.3119299
os.rp_st_door.use_pnt_z = -0.89999998
os.rp_st_door.use_rot_x = 0
os.rp_st_door.use_rot_y = -981.88898
os.rp_st_door.use_rot_z = 0
os.rp_st_door.out_pnt_x = -1.4841599
os.rp_st_door.out_pnt_y = -3.36815
os.rp_st_door.out_pnt_z = -0.89999998
os.rp_st_door.out_rot_x = 0
os.rp_st_door.out_rot_y = -981.88898
os.rp_st_door.out_rot_z = 0
os.rp_st_door:make_untouchable()
os.rp_st_box = os.rp_st_door
os.rp_st_door.walkOut = function(arg1) -- line 292
    rp:come_out_door(rp.os_st_door)
end
passoutgirl_get_shooter = 0
passoutgirl_hold_shooter = 1
passoutgirl_drink_shooter = 2
passoutgirl_drink_shooter_hd = 3
passoutgirl_idle = 4
passoutgirl_faint = 5
passoutgirl_faint_hold = 6
passoutgirl_shooter_start = 7
passoutgirl_shooter_end = 8
CheckFirstTime("patrons.lua")
dofile("slisko.lua")
dofile("slisko_meshes.lua")
dofile("gunar.lua")
dofile("gunar_meshes.lua")
dofile("alexi.lua")
dofile("alexi_meshes.lua")
dofile("hooka_guys.lua")
dofile("skinny_girl.lua")
dofile("cig_girl.lua")
slisko.alexi_point = { x = 0.96459, y = -0.956689, z = 0.37 }
slisko.gunnar_point = { x = 0.93819, y = -0.718089, z = 0.4238 }
slisko.manny_point = { x = 0.66149, y = -1.12069, z = 0.3396 }
gunnar.gaze_point = { x = 1.14935, y = -1.53968, z = 0.6306 }
gunnar.say_line = function(arg1, arg2) -- line 28
    gunnar:head_look_at_point(gunnar.gaze_point)
    Actor.say_line(gunnar, arg2)
    gunnar:wait_for_message()
    gunnar:head_look_at(nil)
end
gunnar.default = function(arg1) -- line 35
    gunnar:set_costume(nil)
    gunnar:set_costume("gunar.cos")
    gunnar:set_mumble_chore(gunar_mumble, "gunar.cos")
    gunnar:set_talk_chore(1, gunar_m)
    gunnar:set_talk_chore(2, gunar_a)
    gunnar:set_talk_chore(3, gunar_c)
    gunnar:set_talk_chore(4, gunar_e)
    gunnar:set_talk_chore(5, gunar_f)
    gunnar:set_talk_chore(6, gunar_l)
    gunnar:set_talk_chore(7, gunar_m)
    gunnar:set_talk_chore(8, gunar_o)
    gunnar:set_talk_chore(9, gunar_t)
    gunnar:set_talk_chore(10, gunar_u)
    gunnar:push_costume("gunar_meshes.cos")
    gunnar:set_head(3, 4, 5, 360, 360, 360)
    gunnar:set_look_rate(120)
    gunnar:put_in_set(bi)
    gunnar:setpos(0.86396, -1.0802, -0.01048)
    gunnar:setrot(0, -180.046, 0)
    gunnar:play_chore(gunar_rest, "gunar.cos")
    if not gunnar.body then
        gunnar.body = Actor:create(nil, nil, nil, "gunnar body")
    end
    gunnar.body:set_costume(nil)
    gunnar.body:set_costume("gunar.cos")
    gunnar.body:set_mumble_chore(gunar_mumble, "gunar.cos")
    gunnar.body:set_talk_chore(1, gunar_m)
    gunnar.body:set_talk_chore(2, gunar_a)
    gunnar.body:set_talk_chore(3, gunar_c)
    gunnar.body:set_talk_chore(4, gunar_e)
    gunnar.body:set_talk_chore(5, gunar_f)
    gunnar.body:set_talk_chore(6, gunar_l)
    gunnar.body:set_talk_chore(7, gunar_m)
    gunnar.body:set_talk_chore(8, gunar_o)
    gunnar.body:set_talk_chore(9, gunar_t)
    gunnar.body:set_talk_chore(10, gunar_u)
    gunnar.body:push_costume("gunar_meshes.cos")
    gunnar.body:set_head(3, 4, 5, 360, 360, 360)
    gunnar.body:set_look_rate(120)
    gunnar.body:put_in_set(bi)
    gunnar.body:setpos(0.86396, -1.0802, -0.01048)
    gunnar.body:setrot(0, -180.046, 0)
    gunnar.body:play_chore(gunar_rest, "gunar.cos")
end
gunnar.free = function(arg1) -- line 82
    if gunnar.body then
        gunnar.body:free()
    end
    Actor.free(arg1)
end
slisko.default = function(arg1) -- line 90
    slisko:set_costume(nil)
    slisko:set_costume("slisko.cos")
    slisko:set_mumble_chore(slisko_mumble, "slisko.cos")
    slisko:set_talk_chore(1, slisko_m)
    slisko:set_talk_chore(2, slisko_a)
    slisko:set_talk_chore(3, slisko_c)
    slisko:set_talk_chore(4, slisko_e)
    slisko:set_talk_chore(5, slisko_f)
    slisko:set_talk_chore(6, slisko_l)
    slisko:set_talk_chore(7, slisko_m)
    slisko:set_talk_chore(8, slisko_o)
    slisko:set_talk_chore(9, slisko_t)
    slisko:set_talk_chore(10, slisko_u)
    slisko:push_costume("slisko_meshes.cos")
    slisko:set_head(3, 4, 5, 165, 28, 80)
    slisko:set_talk_color(MakeColor(240, 240, 259))
    slisko:put_in_set(bi)
    slisko:setpos(0.70873, -0.759, 0)
    slisko:setrot(0, 118.693, 0)
    slisko:play_chore(slisko_rest, "slisko.cos")
    if not slisko.body then
        slisko.body = Actor:create(nil, nil, nil, "slisko body")
    end
    slisko.body:set_costume(nil)
    slisko.body:set_costume("slisko.cos")
    slisko.body:set_mumble_chore(slisko_mumble, "slisko.cos")
    slisko.body:set_talk_chore(1, slisko_m)
    slisko.body:set_talk_chore(2, slisko_a)
    slisko.body:set_talk_chore(3, slisko_c)
    slisko.body:set_talk_chore(4, slisko_e)
    slisko.body:set_talk_chore(5, slisko_f)
    slisko.body:set_talk_chore(6, slisko_l)
    slisko.body:set_talk_chore(7, slisko_m)
    slisko.body:set_talk_chore(8, slisko_o)
    slisko.body:set_talk_chore(9, slisko_t)
    slisko.body:set_talk_chore(10, slisko_u)
    slisko.body:push_costume("slisko_meshes.cos")
    slisko.body:set_head(3, 4, 5, 165, 28, 80)
    slisko.body:set_talk_color(MakeColor(240, 240, 259))
    slisko.body:put_in_set(bi)
    slisko.body:setpos(0.70873, -0.759, 0)
    slisko.body:setrot(0, 118.693, 0)
    slisko.body:play_chore(slisko_rest, "slisko.cos")
end
slisko.free = function(arg1) -- line 137
    if slisko.body then
        slisko.body:free()
    end
    Actor.free(arg1)
end
slisko.start_jivin = function(arg1) -- line 144
    start_script(slisko.hand_jive, slisko)
end
slisko.hand_jive = function(arg1) -- line 148
    slisko:stop_chore(slisko_foot_bounce, "slisko.cos")
    slisko:run_chore(slisko_gesture4, "slisko.cos")
    while 1 do
        slisko:run_chore(slisko_hold_hand, "slisko.cos")
        slisko:run_chore(slisko_hold_hand2, "slisko.cos")
    end
end
slisko.stop_jivin = function(arg1) -- line 157
    stop_script(slisko.hand_jive)
    slisko:play_chore(slisko_back_to_rest, "slisko.cos")
end
slisko.start_pointing = function(arg1) -- line 162
    start_script(slisko.point_loop, slisko)
end
slisko.point_loop = function(arg1) -- line 166
    slisko:stop_chore(slisko_foot_bounce, "slisko.cos")
    slisko:run_chore(slisko_gesture1, "slisko.cos")
    while 1 do
        slisko:run_chore(slisko_point, "slisko.cos")
        sleep_for(500 * random())
    end
end
slisko.stop_pointing = function(arg1) -- line 175
    start_script(slisko.wait_for_pointing, slisko)
end
slisko.wait_for_pointing = function(arg1) -- line 179
    stop_script(slisko.point_loop)
    slisko:wait_for_chore(slisko_point, "slisko.cos")
    slisko:play_chore(slisko_back_to_rest, "slisko.cos")
end
slisko.hand_up = function(arg1) -- line 185
    slisko:play_chore(slisko_talk_to_the_hand, "slisko.cos")
end
slisko.hand_down = function(arg1) -- line 189
    slisko:play_chore(slisko_back_to_rest, "slisko.cos")
end
alexi.default = function(arg1) -- line 194
    alexi:set_costume(nil)
    alexi:set_costume("alexi.cos")
    alexi:set_mumble_chore(alexi_mumble, "alexi.cos")
    alexi:set_talk_chore(1, alexi_m)
    alexi:set_talk_chore(2, alexi_a)
    alexi:set_talk_chore(3, alexi_c)
    alexi:set_talk_chore(4, alexi_e)
    alexi:set_talk_chore(5, alexi_f)
    alexi:set_talk_chore(6, alexi_l)
    alexi:set_talk_chore(7, alexi_m)
    alexi:set_talk_chore(8, alexi_o)
    alexi:set_talk_chore(9, alexi_t)
    alexi:set_talk_chore(10, alexi_u)
    alexi:push_costume("alexi_meshes.cos")
    alexi:put_in_set(bi)
    alexi:setpos(0.44737, -1.06348, -0.13499)
    alexi:setrot(0.1937, 155, 3.7804)
    alexi:play_chore(alexi_rest, "alexi.cos")
    if not alexi.body then
        alexi.body = Actor:create(nil, nil, nil, "alexi body")
    end
    alexi.body:set_costume(nil)
    alexi.body:set_costume("alexi.cos")
    alexi.body:set_mumble_chore(alexi_mumble, "alexi.cos")
    alexi.body:set_talk_chore(1, alexi_m)
    alexi.body:set_talk_chore(2, alexi_a)
    alexi.body:set_talk_chore(3, alexi_c)
    alexi.body:set_talk_chore(4, alexi_e)
    alexi.body:set_talk_chore(5, alexi_f)
    alexi.body:set_talk_chore(6, alexi_l)
    alexi.body:set_talk_chore(7, alexi_m)
    alexi.body:set_talk_chore(8, alexi_o)
    alexi.body:set_talk_chore(9, alexi_t)
    alexi.body:set_talk_chore(10, alexi_u)
    alexi.body:push_costume("alexi_meshes.cos")
    alexi.body:put_in_set(bi)
    alexi.body:setpos(0.44737, -1.06348, -0.13499)
    alexi.body:setrot(0.1937, 155, 3.7804)
    alexi.body:play_chore(alexi_rest, "alexi.cos")
end
alexi.free = function(arg1) -- line 239
    if alexi.body then
        alexi.body:free()
    end
    Actor.free(arg1)
end
bi.idle_reds = function() -- line 246
    bi.alexi_pause_idles = FALSE
    if not alexi.frozen then
        if alexi.body.frozen then
            alexi.body:thaw(TRUE)
            break_here()
        end
        alexi.body:set_visibility(FALSE)
        alexi:complete_chore(alexi_meshes_show_all, "alexi_meshes.cos")
        alexi:freeze()
    end
    if slisko.frozen or gunnar.frozen or slisko.body.frozen or gunnar.body.frozen then
        slisko:thaw()
        slisko.body:thaw()
        slisko.body:set_visibility(TRUE)
        gunnar:thaw()
        gunnar.body:thaw(TRUE)
        gunnar.body:set_visibility(TRUE)
        break_here()
    end
    slisko.body:set_visibility(TRUE)
    slisko.body:complete_chore(slisko_meshes_all_but_head_foot, "slisko_meshes.cos")
    slisko.body:freeze()
    slisko:complete_chore(slisko_meshes_just_head_foot, "slisko_meshes.cos")
    gunnar.body:set_visibility(TRUE)
    gunnar.body:complete_chore(gunar_meshes_all_but_head_hand, "gunar_meshes.cos")
    gunnar.body:freeze()
    gunnar:complete_chore(gunar_meshes_just_hand_head, "gunar_meshes.cos")
    break_here()
    slisko:play_chore_looping(slisko_foot_bounce, "slisko.cos")
    gunnar:play_chore_looping(gunar_tap_cycle, "gunar.cos")
    while TRUE do
        sleep_for(5000 + 5000 * random())
        if not bi.alexi_pause_idles then
            alexi:thaw(TRUE)
            alexi:complete_chore(alexi_meshes_show_all, "alexi_meshes.cos")
            alexi.body:thaw(TRUE)
            alexi.body:set_visibility(FALSE)
            if rnd() then
                break_here()
                alexi:run_chore(alexi_gesture8, "alexi.cos")
                alexi:loop_chore_for(alexi_chin_cycle, "alexi.cos", 3000, 5000)
                alexi:run_chore(alexi_gesture9, "alexi.cos")
                alexi:run_chore(alexi_gesture10, "alexi.cos")
                alexi:run_chore(alexi_gesture11, "alexi.cos")
            else
                alexi.body:set_visibility(TRUE)
                alexi.body:complete_chore(alexi_meshes_all_but_head, "alexi_meshes.cos")
                alexi:complete_chore(alexi_meshes_just_head, "alexi_meshes.cos")
                break_here()
                alexi.body:freeze()
                alexi:run_chore(alexi_look_at_gunar, "alexi.cos")
                sleep_for(2000 + 3000 * random())
                alexi:run_chore(alexi_gesture1, "alexi.cos")
                alexi:play_chore(alexi_rest, "alexi.cos")
            end
        end
        break_here()
        if not bi.alexi_pause_idles then
            alexi:freeze()
        end
    end
end
bi.alexi_talking = function() -- line 319
    bi.alexi_pause_idles = TRUE
    alexi:thaw(TRUE)
    alexi.body:thaw(TRUE)
    alexi.body:set_visibility(FALSE)
    alexi:complete_chore(alexi_meshes_show_all, "alexi_meshes.cos")
    break_here()
end
bi.alexi_not_talking = function() -- line 329
    bi.alexi_pause_idles = FALSE
end
bi.idle_beats = function() -- line 333
    local local1
    while TRUE do
        sleep_for(3000 * random())
        if system.frameTime < 66 then
            local1 = rndint(1, 4)
            if local1 == 1 then
                hooka_guy1:thaw(TRUE)
                if rnd() then
                    hooka_guy1:run_chore(hooka_guys_gesture1, "hooka_guys.cos")
                    sleep_for(1000)
                    hooka_guy1:run_chore(hooka_guys_gesture2, "hooka_guys.cos")
                else
                    hooka_guy1:run_chore(hooka_guys_gesture3, "hooka_guys.cos")
                    sleep_for(1000)
                    hooka_guy1:run_chore(hooka_guys_back_to_rest, "hooka_guys.cos")
                end
                hooka_guy1:freeze()
            elseif local1 == 2 then
                hooka_guy2:thaw(TRUE)
                if rnd() then
                    hooka_guy2:run_chore(hooka_guys_gesture1, "hooka_guys.cos")
                    sleep_for(1000)
                    hooka_guy2:run_chore(hooka_guys_gesture2, "hooka_guys.cos")
                else
                    hooka_guy2:run_chore(hooka_guys_gesture3, "hooka_guys.cos")
                    sleep_for(1000)
                    hooka_guy2:run_chore(hooka_guys_back_to_rest, "hooka_guys.cos")
                end
                hooka_guy2:freeze()
            elseif local1 == 3 then
                cig_girl:thaw(TRUE)
                if rnd() then
                    cig_girl:run_chore(cig_girl_gesture3, "cig_girl.cos")
                    sleep_for(1000)
                    cig_girl:run_chore(cig_girl_gesture1, "cig_girl.cos")
                else
                    cig_girl:run_chore(cig_girl_gesture3, "cig_girl.cos")
                    cig_girl:run_chore(cig_girl_gesture4, "cig_girl.cos")
                    sleep_for(1000)
                    cig_girl:run_chore(cig_girl_gesture5, "cig_girl.cos")
                    cig_girl:run_chore(cig_girl_gesture1, "cig_girl.cos")
                end
                cig_girl:freeze()
            elseif local1 == 4 and not skinny_girl.passed_out then
                skinny_girl:thaw(TRUE)
                if rnd() then
                    skinny_girl:run_chore(skinny_girl_gesture1, "skinny_girl.cos")
                    sleep_for(1000)
                    skinny_girl:run_chore(skinny_girl_gesture2, "skinny_girl.cos")
                else
                    skinny_girl:run_chore(skinny_girl_gesture3, "skinny_girl.cos")
                    sleep_for(1000)
                    skinny_girl:run_chore(skinny_girl_back_to_rest, "skinny_girl.cos")
                end
                skinny_girl:freeze()
            end
        end
    end
end
bi.freeze_all_beatniks = function() -- line 396
    stop_script(bi.idle_reds)
    stop_script(bi.idle_beats)
    skinny_girl:freeze()
    cig_girl:freeze()
    hooka_guy1:freeze()
    hooka_guy2:freeze()
    alexi:freeze()
    alexi.body:freeze()
    gunnar:freeze()
    gunnar.body:freeze()
    slisko:freeze()
    slisko.body:freeze()
end
bi.snap_sfx = function() -- line 411
    local local1
    while 1 do
        if rndint(4) == 3 then
            start_sfx(pick_one_of({ "bisnp1.wav", "bisnp2.wav", "bisnp3.wav" }), nil, 80)
        end
        local1 = single_start_sfx("beatsnap.imu", IM_LOW_PRIORITY)
        set_vol(local1, rndint(50, 120))
        sleep_for(rnd(100, 250))
        fade_sfx("beatsnap.imu", 100, 0)
    end
end
bi.snap = function() -- line 427
    start_script(bi.snap_sfx)
    stop_script(bi.idle_reds)
    stop_script(bi.idle_beats)
    alexi:thaw(TRUE)
    alexi:complete_chore(alexi_meshes_show_all, "alexi_meshes.cos")
    alexi.body:thaw(TRUE)
    alexi.body:set_visibility(FALSE)
    alexi:stop_chore(nil, "alexi.cos")
    alexi:play_chore(alexi_rest, "alexi.cos")
    if slisko.frozen then
        slisko:thaw(TRUE)
        slisko:complete_chore(slisko_meshes_show_everything, "slisko_meshes.cos")
        slisko.body:thaw(TRUE)
        slisko.body:set_visibility(FALSE)
    end
    slisko:stop_chore(slisko_foot_bounce, "slisko.cos")
    slisko:complete_chore(slisko_rest, "slisko.cos")
    if hooka_guy1.frozen then
        hooka_guy1:thaw(TRUE)
    end
    if hooka_guy2.frozen then
        hooka_guy2:thaw(TRUE)
    end
    break_here()
    slisko:play_chore(slisko_begin_snap, "slisko.cos")
    alexi:play_chore(alexi_begin_snap, "alexi.cos")
    hooka_guy2:play_chore(hooka_guys_begin_snap, "hooka_guys.cos")
    hooka_guy1:play_chore(hooka_guys_begin_snap, "hooka_guys.cos")
    slisko:wait_for_chore(slisko_begin_snap, "slisko.cos")
    slisko:play_chore_looping(slisko_snap_cycle, "slisko.cos")
    alexi:wait_for_chore(alexi_begin_snap, "alexi.cos")
    alexi:play_chore_looping(alexi_snap_cycle, "alexi.cos")
    hooka_guy2:wait_for_chore(hooka_guys_begin_snap, "hooka_guys.cos")
    hooka_guy2:play_chore_looping(hooka_guys_snap_cycle, "hooka_guys.cos")
    hooka_guy1:wait_for_chore(hooka_guys_begin_snap, "hooka_guys.cos")
    hooka_guy1:play_chore_looping(hooka_guys_snap_cycle, "hooka_guys.cos")
    sleep_for(2000)
    hooka_guy1:stop_chore(hooka_guys_snap_cycle, "hooka_guys.cos")
    hooka_guy1:play_chore(hooka_guys_end_snap, "hooka_guys.cos")
    hooka_guy2:stop_chore(hooka_guys_snap_cycle, "hooka_guys.cos")
    hooka_guy2:play_chore(hooka_guys_end_snap, "hooka_guys.cos")
    alexi:stop_chore(alexi_snap_cycle, "alexi.cos")
    alexi:play_chore(alexi_end_snap, "alexi.cos")
    slisko:stop_chore(slisko_snap_cycle, "slisko.cos")
    slisko:play_chore(slisko_end_snap, "slisko.cos")
    hooka_guy1:wait_for_chore(hooka_guys_end_snap, "hooka_guys.cos")
    hooka_guy2:wait_for_chore(hooka_guys_end_snap, "hooka_guys.cos")
    alexi:wait_for_chore(alexi_end_snap, "alexi.cos")
    slisko:wait_for_chore(slisko_end_snap, "slisko.cos")
    hooka_guy1:freeze()
    hooka_guy2:freeze()
    start_script(bi.idle_reds)
    stop_script(bi.snap_sfx)
    fade_sfx("beatsnap.imu")
end
bi.manny_follow_conversation = function() -- line 502
    local local1
    while system.currentSet == bi do
        local1 = system.lastActorTalking
        if local1 == slisko then
            manny:head_look_at(bi.commies)
        elseif local1 == gunnar then
            manny:head_look_at_point({ x = 0.89162898, y = -1.08314, z = 0.46200001 })
        elseif local1 == alexi then
            manny:head_look_at(bi.commies2)
        end
        while local1 == system.lastActorTalking do
            break_here()
        end
    end
end
bi.one_hiss = function(arg1) -- line 517
    break_here()
    slisko:say_line("/bisl131/")
end
CheckFirstTime("pc.lua")
pc = Set:create("pc.set", "police station", { pc_estws = 0, pc_dorws = 1, pc_overhead = 2, pc_3_idfoto = 3, pc_4_idfoto = 4, pc_5_idfoto = 5, pc_6_idfoto = 6, pc_7_idfoto = 7, pc_8_idfoto = 8, pc_9_idfoto = 9, pc_10_idfoto = 10 })
pc.enter = function(arg1) -- line 19
    NewObjectState(pc_dorws, OBJSTATE_UNDERLAY, "pc_morgue_door.bm")
    pc.mg_door:set_object_state("pc_morgue_door.cos")
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -2.4, 3.7, 24)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, -2.4, 3.7, 24)
    SetActorShadowPlane(manny.hActor, "shadow10")
    AddShadowPlane(manny.hActor, "shadow10")
    AddShadowPlane(manny.hActor, "shadow11")
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, -2.4, 3.7, 24)
    SetActorShadowPlane(manny.hActor, "shadow20")
    AddShadowPlane(manny.hActor, "shadow20")
    AddShadowPlane(manny.hActor, "shadow21")
    SetActiveShadow(manny.hActor, 3)
    SetActorShadowPoint(manny.hActor, -0.518094, 5.57332, 20.649)
    SetActorShadowPlane(manny.hActor, "shadow50")
    AddShadowPlane(manny.hActor, "shadow50")
    SetActiveShadow(manny.hActor, 4)
    SetActorShadowPoint(manny.hActor, -2.44, 5.4, 13)
    SetActorShadowPlane(manny.hActor, "shadow60")
    AddShadowPlane(manny.hActor, "shadow60")
end
pc.exit = function(arg1) -- line 56
    KillActorShadows(manny.hActor)
end
pc.pi_door = Object:create(pc, "/pctx001/door", -0.055260599, 5.5387001, 13.4634, { range = 0.60000002 })
pc.pi_door.use_pnt_x = -0.055260599
pc.pi_door.use_pnt_y = 5.9387002
pc.pi_door.use_pnt_z = 13.0334
pc.pi_door.use_rot_x = 0
pc.pi_door.use_rot_y = -170.09599
pc.pi_door.use_rot_z = 0
pc.pi_door.out_pnt_x = 0.0441637
pc.pi_door.out_pnt_y = 5.4296498
pc.pi_door.out_pnt_z = 13.1
pc.pi_door.out_rot_x = 0
pc.pi_door.out_rot_y = -169.261
pc.pi_door.out_rot_z = 0
pc.pi_door.touchable = FALSE
pc.pi_box = pc.pi_door
pc.pi_door.walkOut = function(arg1) -- line 89
    pi:come_out_door(pi.pc_door)
end
pc.bp_door = Object:create(pc, "/pctx002/bridge", 0.233805, 1.23681, 12.2, { range = 0.60000002 })
pc.bp_door.use_pnt_x = -0.49619499
pc.bp_door.use_pnt_y = 1.23681
pc.bp_door.use_pnt_z = 11.8
pc.bp_door.use_rot_x = 0
pc.bp_door.use_rot_y = -89.502296
pc.bp_door.use_rot_z = 0
pc.bp_door.out_pnt_x = 0.31990099
pc.bp_door.out_pnt_y = 1.23359
pc.bp_door.out_pnt_z = 11.8
pc.bp_door.out_rot_x = 0
pc.bp_door.out_rot_y = -127.641
pc.bp_door.out_rot_z = 0
pc.bp_door.touchable = FALSE
pc.bp_box = pc.bp_door
pc.bp_door.walkOut = function(arg1) -- line 113
    bp:come_out_door(bp.pc_door)
end
pc.mg_door = Object:create(pc, "/pctx003/door", -2.24878, 5.3828001, 12.13, { range = 0.40000001 })
pc.mg_door.use_pnt_x = -2.47628
pc.mg_door.use_pnt_y = 5.2999902
pc.mg_door.use_pnt_z = 11.6
pc.mg_door.use_rot_x = 0
pc.mg_door.use_rot_y = 284.49301
pc.mg_door.use_rot_z = 0
pc.mg_door.out_pnt_x = -2.31284
pc.mg_door.out_pnt_y = 5.2999902
pc.mg_door.out_pnt_z = 11.6
pc.mg_door.out_rot_x = 0
pc.mg_door.out_rot_y = 284.49301
pc.mg_door.out_rot_z = 0
pc.mg_box = pc.mg_door
pc.mg_door.walkOut = function(arg1) -- line 134
    if made_vacancy then
        if arg1.tried then
            system.default_response("locked")
        else
            arg1.tried = TRUE
            START_CUT_SCENE()
            manny:walkto_object(arg1)
            manny:play_chore(mc_reach_med, "mc.cos")
            manny:wait_for_chore(mc_reach_med, "mc.cos")
            manny:stop_chore(mc_reach_med, "mc.cos")
            END_CUT_SCENE()
            manny:say_line("/pcma004/")
        end
    else
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        manny:play_chore(mc_reach_med, "mc.cos")
        sleep_for(500)
        arg1:play_chore(0)
        manny:wait_for_chore(mc_reach_med, "mc.cos")
        arg1:wait_for_chore(0)
        END_CUT_SCENE()
        mg:come_out_door(mg.pc_door)
    end
end
pc.ev_door = Object:create(pc, "/pctx005/stairs", -3.82284, 8.6571598, 13.4, { range = 1.5 })
pc.ev_door.use_pnt_x = -3.7506499
pc.ev_door.use_pnt_y = 7.79006
pc.ev_door.use_pnt_z = 12.5732
pc.ev_door.use_rot_x = 0
pc.ev_door.use_rot_y = -346.34601
pc.ev_door.use_rot_z = 0
pc.ev_door.out_pnt_x = -3.7282901
pc.ev_door.out_pnt_y = 8.5170202
pc.ev_door.out_pnt_z = 12.9
pc.ev_door.out_rot_x = 0
pc.ev_door.out_rot_y = -372.79599
pc.ev_door.out_rot_z = 0
pc.ev_door.touchable = FALSE
pc.ev_box = pc.ev_door
pc.ev_door.walkOut = function(arg1) -- line 180
    ev:come_out_door(ev.pc_door)
end
pc_morgue_door_open = 0
pc_morgue_door_close = 1
pc_morgue_door_set_open = 2
pc_morgue_door_set_closed = 3
CheckFirstTime("pf.lua")
pf = Set:create("pf.set", "photofinish", { pf_photocu = 0 })
pf.enter = function(arg1) -- line 20
    pf_save_handler = system.buttonHandler
    system.buttonHandler = pfButtonHandler
    music_state:update()
end
pf.exit = function(arg1) -- line 27
end
pf.switch_to_set = function(arg1) -- line 32
    if IsMoviePlaying() then
        StopMovie()
    else
        system.loopingMovie = nil
    end
    system.lastSet = system.currentSet
    LockSet(system.currentSet.setFile)
    pf_save_set = system.currentSet
    MakeCurrentSet(arg1.setFile)
    arg1:enter()
    system.currentSet = pf
    if system.ambientLight then
        SetAmbientLight(system.ambientLight)
    end
    music_state:set_state(statePF)
end
pf.return_to_set = function(arg1) -- line 52
    pf:exit()
    system.currentSet = pf_save_set
    UnLockSet(pf_save_set.setFile)
    MakeCurrentSet(pf_save_set.setFile)
    system.buttonHandler = pf_save_handler
    if system.loopingMovie and type(system.loopingMovie) == "table" then
        play_movie_looping(system.loopingMovie.name, system.loopingMovie.x, system.loopingMovie.y)
    end
    music_state:update()
end
pfButtonHandler = function(arg1, arg2, arg3) -- line 72
    if arg2 then
        pf:return_to_set()
    end
end
pigeon_idles_walk_cycle = 0
pigeon_idles_stopwalk_cycle = 1
pigeon_idles_standing = 2
pigeon_idles_short_takeoff = 3
pigeon_idles_scared_takeoff = 4
pigeon_idles_pecking = 5
pigeon_idles_lead_to_walk = 6
pigeon_idles_landing = 7
pigeon_idles_jump_for_turn = 8
pigeon_idles_head_turns = 9
pigeon_idles_glide_hook_up = 10
pigeon_idles_glide = 11
pigeon_idles_fly_cycle = 12
pigeon_os_Chore0 = 0
pigeon_os_Chore1 = 1
le.init_homes = function() -- line 3
    local local1 = 0
    le.pigeon_homes = { }
    repeat
        local1 = local1 + 1
        le.pigeon_homes[local1] = { pos = { }, used = nil, face = nil }
    until local1 == 42
    le.pigeon_homes[1].pos.x = 0.0086075896
    le.pigeon_homes[1].pos.y = -0.249706
    le.pigeon_homes[1].pos.z = 0
    le.pigeon_homes[1].face = "y"
    le.pigeon_homes[2].pos.x = -0.071392
    le.pigeon_homes[2].pos.y = -0.249706
    le.pigeon_homes[2].pos.z = 0
    le.pigeon_homes[2].face = "y"
    le.pigeon_homes[3].pos.x = -0.131392
    le.pigeon_homes[3].pos.y = -0.249706
    le.pigeon_homes[3].pos.z = 0
    le.pigeon_homes[3].face = "y"
    le.pigeon_homes[4].pos.x = -1.47139
    le.pigeon_homes[4].pos.y = -0.249706
    le.pigeon_homes[4].pos.z = 0
    le.pigeon_homes[4].face = "y"
    le.pigeon_homes[5].pos.x = -1.40139
    le.pigeon_homes[5].pos.y = -0.50970602
    le.pigeon_homes[5].pos.z = -0.050000001
    le.pigeon_homes[5].face = "y"
    le.pigeon_homes[6].pos.x = 0.27898699
    le.pigeon_homes[6].pos.y = 0.84865701
    le.pigeon_homes[6].pos.z = 0
    le.pigeon_homes[6].face = "x"
    le.pigeon_homes[7].pos.x = 0.27898699
    le.pigeon_homes[7].pos.y = 0.25865701
    le.pigeon_homes[7].pos.z = 0
    le.pigeon_homes[7].face = "x"
    le.pigeon_homes[8].pos.x = 0.148987
    le.pigeon_homes[8].pos.y = 3.09866
    le.pigeon_homes[8].pos.z = 0
    le.pigeon_homes[8].face = "x"
    le.pigeon_homes[9].pos.x = 0.138987
    le.pigeon_homes[9].pos.y = 3.2286601
    le.pigeon_homes[9].pos.z = 0
    le.pigeon_homes[9].face = "x"
    le.pigeon_homes[10].pos.x = 0.27898699
    le.pigeon_homes[10].pos.y = 3.58866
    le.pigeon_homes[10].pos.z = 0
    le.pigeon_homes[10].face = "x"
    le.pigeon_homes[11].pos.x = 0.27898699
    le.pigeon_homes[11].pos.y = 3.4486599
    le.pigeon_homes[11].pos.z = 0
    le.pigeon_homes[11].face = "x"
    le.pigeon_homes[12].pos.x = 0.27898699
    le.pigeon_homes[12].pos.y = 3.5186601
    le.pigeon_homes[12].pos.z = 0
    le.pigeon_homes[12].face = "x"
    le.pigeon_homes[13].pos.x = -0.00101317
    le.pigeon_homes[13].pos.y = 3.4486599
    le.pigeon_homes[13].pos.z = 1.21
    le.pigeon_homes[13].face = "x"
    le.pigeon_homes[14].pos.x = -0.00101317
    le.pigeon_homes[14].pos.y = 3.30866
    le.pigeon_homes[14].pos.z = 1.21
    le.pigeon_homes[14].face = "x"
    le.pigeon_homes[15].pos.x = -0.00101317
    le.pigeon_homes[15].pos.y = 3.2386601
    le.pigeon_homes[15].pos.z = 1.21
    le.pigeon_homes[15].face = "x"
    le.pigeon_homes[16].pos.x = -0.00101317
    le.pigeon_homes[16].pos.y = 3.09866
    le.pigeon_homes[16].pos.z = 1.21
    le.pigeon_homes[16].face = "x"
    le.pigeon_homes[17].pos.x = -0.00101317
    le.pigeon_homes[17].pos.y = 3.0286601
    le.pigeon_homes[17].pos.z = 1.21
    le.pigeon_homes[17].face = "x"
    le.pigeon_homes[18].pos.x = -0.00101317
    le.pigeon_homes[18].pos.y = 2.7786601
    le.pigeon_homes[18].pos.z = 1.21
    le.pigeon_homes[18].face = "x"
    le.pigeon_homes[19].pos.x = -0.00101317
    le.pigeon_homes[19].pos.y = 1.25866
    le.pigeon_homes[19].pos.z = 1.21
    le.pigeon_homes[19].face = "x"
    le.pigeon_homes[20].pos.x = -0.00101317
    le.pigeon_homes[20].pos.y = 1.18866
    le.pigeon_homes[20].pos.z = 1.21
    le.pigeon_homes[20].face = "x"
    le.pigeon_homes[21].pos.x = -0.00101317
    le.pigeon_homes[21].pos.y = 0.77865899
    le.pigeon_homes[21].pos.z = 1.21
    le.pigeon_homes[21].face = "x"
    le.pigeon_homes[22].pos.x = -0.00101317
    le.pigeon_homes[22].pos.y = 0.36865899
    le.pigeon_homes[22].pos.z = 1.21
    le.pigeon_homes[22].face = "x"
    le.pigeon_homes[23].pos.x = -0.00101317
    le.pigeon_homes[23].pos.y = 0.33865899
    le.pigeon_homes[23].pos.z = 1.21
    le.pigeon_homes[23].face = "x"
    le.pigeon_homes[24].pos.x = -0.391013
    le.pigeon_homes[24].pos.y = 0.0186585
    le.pigeon_homes[24].pos.z = 1.21
    le.pigeon_homes[24].face = "y"
    le.pigeon_homes[25].pos.x = -0.64101303
    le.pigeon_homes[25].pos.y = 0.0186585
    le.pigeon_homes[25].pos.z = 1.21
    le.pigeon_homes[25].face = "y"
    le.pigeon_homes[26].pos.x = -0.89101303
    le.pigeon_homes[26].pos.y = 0.0186585
    le.pigeon_homes[26].pos.z = 1.21
    le.pigeon_homes[26].face = "y"
    le.pigeon_homes[27].pos.x = -0.96101302
    le.pigeon_homes[27].pos.y = 0.0186585
    le.pigeon_homes[27].pos.z = 1.21
    le.pigeon_homes[27].face = "y"
    le.pigeon_homes[28].pos.x = -1.10101
    le.pigeon_homes[28].pos.y = 0.0186585
    le.pigeon_homes[28].pos.z = 1.21
    le.pigeon_homes[28].face = "y"
    le.pigeon_homes[29].pos.x = -1.35101
    le.pigeon_homes[29].pos.y = 0.0186585
    le.pigeon_homes[29].pos.z = 1.21
    le.pigeon_homes[29].face = "y"
    le.pigeon_homes[30].pos.x = -0.41101301
    le.pigeon_homes[30].pos.y = 3.07866
    le.pigeon_homes[30].pos.z = 2.8199999
    le.pigeon_homes[30].face = "x"
    le.pigeon_homes[31].pos.x = -0.41101301
    le.pigeon_homes[31].pos.y = 2.82866
    le.pigeon_homes[31].pos.z = 2.8199999
    le.pigeon_homes[31].face = "x"
    le.pigeon_homes[32].pos.x = -0.41101301
    le.pigeon_homes[32].pos.y = 2.6886599
    le.pigeon_homes[32].pos.z = 2.8199999
    le.pigeon_homes[32].face = "x"
    le.pigeon_homes[33].pos.x = -0.41101301
    le.pigeon_homes[33].pos.y = 2.05866
    le.pigeon_homes[33].pos.z = 2.8199999
    le.pigeon_homes[33].face = "x"
    le.pigeon_homes[34].pos.x = -0.41101301
    le.pigeon_homes[34].pos.y = 1.6486599
    le.pigeon_homes[34].pos.z = 2.8199999
    le.pigeon_homes[34].face = "x"
    le.pigeon_homes[35].pos.x = -0.41101301
    le.pigeon_homes[35].pos.y = 1.3986599
    le.pigeon_homes[35].pos.z = 2.8199999
    le.pigeon_homes[35].face = "x"
    le.pigeon_homes[36].pos.x = -0.41101301
    le.pigeon_homes[36].pos.y = 1.1486599
    le.pigeon_homes[36].pos.z = 2.8199999
    le.pigeon_homes[36].face = "x"
    le.pigeon_homes[37].pos.x = -0.41101301
    le.pigeon_homes[37].pos.y = 0.89865899
    le.pigeon_homes[37].pos.z = 2.8199999
    le.pigeon_homes[37].face = "x"
    le.pigeon_homes[38].pos.x = -0.72101301
    le.pigeon_homes[38].pos.y = 2.37866
    le.pigeon_homes[38].pos.z = 4.21
    le.pigeon_homes[38].face = "x"
    le.pigeon_homes[39].pos.x = -0.72101301
    le.pigeon_homes[39].pos.y = 2.12866
    le.pigeon_homes[39].pos.z = 4.21
    le.pigeon_homes[39].face = "x"
    le.pigeon_homes[40].pos.x = -0.72101301
    le.pigeon_homes[40].pos.y = 1.98866
    le.pigeon_homes[40].pos.z = 4.21
    le.pigeon_homes[40].face = "x"
    le.pigeon_homes[41].pos.x = -0.72101301
    le.pigeon_homes[41].pos.y = 1.57866
    le.pigeon_homes[41].pos.z = 4.21
    le.pigeon_homes[41].face = "x"
    le.pigeon_homes[42].pos.x = -0.72101301
    le.pigeon_homes[42].pos.y = 1.50866
    le.pigeon_homes[42].pos.z = 4.21
    le.pigeon_homes[42].face = "x"
end
bird_climb = function(arg1, arg2, arg3, arg4) -- line 186
    local local1
    local local2 = arg1:getpos()
    local1 = (arg2 - local2.z) / arg3
    if arg4 then
        arg1:play_chore(arg4)
    end
    if arg2 > local2.z then
        repeat
            local2.z = local2.z + PerSecond(local1)
            arg1:setpos(local2)
            break_here()
            local2 = arg1:getpos()
        until local2.z >= arg2
    else
        repeat
            local2.z = local2.z + PerSecond(local1)
            arg1:setpos(local2)
            break_here()
            local2 = arg1:getpos()
        until local2.z <= arg2
        arg1:set_walk_rate(0)
    end
    if arg4 then
        arg1:wait_for_chore(arg4)
    end
    local2 = arg1:getrot()
    arg1:setrot(0, local2.y, 0)
end
st.init_homes = function() -- line 220
    local local1 = 0
    st.pigeon_homes = { }
    repeat
        local1 = local1 + 1
        st.pigeon_homes[local1] = { pos = { }, used = nil }
    until local1 == 21
    st.pigeon_homes[1].pos.x = 6.6474099
    st.pigeon_homes[1].pos.y = -2.7763
    st.pigeon_homes[1].pos.z = 3.5899999
    st.pigeon_homes[2].pos.x = 6.8974099
    st.pigeon_homes[2].pos.y = -2.7763
    st.pigeon_homes[2].pos.z = 3.5899999
    st.pigeon_homes[3].pos.x = 7.3074098
    st.pigeon_homes[3].pos.y = -2.7763
    st.pigeon_homes[3].pos.z = 3.5899999
    st.pigeon_homes[4].pos.x = 6.6827798
    st.pigeon_homes[4].pos.y = 2.7881601
    st.pigeon_homes[4].pos.z = 3.1800001
    st.pigeon_homes[5].pos.x = 6.0527802
    st.pigeon_homes[5].pos.y = 2.7881601
    st.pigeon_homes[5].pos.z = 3.1800001
    st.pigeon_homes[6].pos.x = 5.6427798
    st.pigeon_homes[6].pos.y = 2.7881601
    st.pigeon_homes[6].pos.z = 3.1800001
    st.pigeon_homes[7].pos.x = 5.3927798
    st.pigeon_homes[7].pos.y = 2.7881601
    st.pigeon_homes[7].pos.z = 3.1800001
    st.pigeon_homes[8].pos.x = 5.1427798
    st.pigeon_homes[8].pos.y = 2.7881601
    st.pigeon_homes[8].pos.z = 3.1800001
    st.pigeon_homes[9].pos.x = 2.1127801
    st.pigeon_homes[9].pos.y = 2.7881601
    st.pigeon_homes[9].pos.z = 3.98
    st.pigeon_homes[10].pos.x = 2.0427799
    st.pigeon_homes[10].pos.y = 2.7881601
    st.pigeon_homes[10].pos.z = 3.98
    st.pigeon_homes[11].pos.x = 1.9027801
    st.pigeon_homes[11].pos.y = 2.7881601
    st.pigeon_homes[11].pos.z = 3.98
    st.pigeon_homes[12].pos.x = 1.76278
    st.pigeon_homes[12].pos.y = 2.7881601
    st.pigeon_homes[12].pos.z = 3.98
    st.pigeon_homes[13].pos.x = 1.62278
    st.pigeon_homes[13].pos.y = 2.7881601
    st.pigeon_homes[13].pos.z = 3.98
    st.pigeon_homes[14].pos.x = 1.37278
    st.pigeon_homes[14].pos.y = 2.7881601
    st.pigeon_homes[14].pos.z = 3.98
    st.pigeon_homes[15].pos.x = 7.3074098
    st.pigeon_homes[15].pos.y = -2.7763
    st.pigeon_homes[15].pos.z = 3.5899999
    st.pigeon_homes[16].pos.x = 1.55108
    st.pigeon_homes[16].pos.y = -2.76526
    st.pigeon_homes[16].pos.z = 2.79
    st.pigeon_homes[17].pos.x = 1.80108
    st.pigeon_homes[17].pos.y = -2.7763
    st.pigeon_homes[17].pos.z = 2.79
    st.pigeon_homes[18].pos.x = 2.2110801
    st.pigeon_homes[18].pos.y = -2.7763
    st.pigeon_homes[18].pos.z = 2.79
    st.pigeon_homes[19].pos.x = 2.84108
    st.pigeon_homes[19].pos.y = -2.7763
    st.pigeon_homes[19].pos.z = 2.79
    st.pigeon_homes[20].pos.x = 3.09108
    st.pigeon_homes[20].pos.y = -2.7763
    st.pigeon_homes[20].pos.z = 2.79
    st.pigeon_homes[21].pos.x = 3.34108
    st.pigeon_homes[21].pos.y = -2.7763
    st.pigeon_homes[21].pos.z = 2.79
    local1 = 0
    st.pigeon_dest = { }
    repeat
        local1 = local1 + 1
        st.pigeon_dest[local1] = { pos = { } }
    until local1 == 10
    st.pigeon_dest[1].pos.x = 6.6226001
    st.pigeon_dest[1].pos.y = 11.2937
    st.pigeon_dest[1].pos.z = 6.1900001
    st.pigeon_dest[2].pos.x = 6.5925999
    st.pigeon_dest[2].pos.y = 11.2937
    st.pigeon_dest[2].pos.z = 6.1900001
    st.pigeon_dest[3].pos.x = 6.45259
    st.pigeon_dest[3].pos.y = 11.2937
    st.pigeon_dest[3].pos.z = 6.1900001
    st.pigeon_dest[4].pos.x = 6.0425901
    st.pigeon_dest[4].pos.y = 11.2937
    st.pigeon_dest[4].pos.z = 6.1900001
    st.pigeon_dest[5].pos.x = 5.6325898
    st.pigeon_dest[5].pos.y = 11.2937
    st.pigeon_dest[5].pos.z = 6.1900001
    st.pigeon_dest[6].pos.x = 4.7125902
    st.pigeon_dest[6].pos.y = 11.2937
    st.pigeon_dest[6].pos.z = 6.1900001
    st.pigeon_dest[7].pos.x = 4.3025899
    st.pigeon_dest[7].pos.y = 11.2937
    st.pigeon_dest[7].pos.z = 6.1900001
    st.pigeon_dest[8].pos.x = 3.67259
    st.pigeon_dest[8].pos.y = 11.2937
    st.pigeon_dest[8].pos.z = 6.1900001
    st.pigeon_dest[9].pos.x = 3.0425899
    st.pigeon_dest[9].pos.y = 11.2937
    st.pigeon_dest[9].pos.z = 6.1900001
    st.pigeon_dest[10].pos.x = 2.41259
    st.pigeon_dest[10].pos.y = 11.2937
    st.pigeon_dest[10].pos.z = 6.1900001
end
FLAP = 10
COO = 15
TAKEOFF = 20
SCARED = 25
LAND = 30
PECK = 35
bird_sound_monitor = function(arg1, arg2) -- line 346
    local local1
    local local2
    local local3
    if arg2 == FLAP then
        local3 = rndint(1, 5)
        local2 = "wingfly"
    elseif arg2 == COO then
        local3 = rndint(1, 8)
        local2 = "pigeon"
    elseif arg2 == TAKEOFF or arg2 == SCARED or arg2 == LAND then
        local3 = rndint(1, 8)
        local2 = "wings"
    elseif arg2 == PECK then
    end
    if local3 then
        local1 = local2 .. local3 .. ".wav"
        arg1:play_sound_at(local1, 10, 127, 64)
    end
end
CheckFirstTime("pi.lua")
pi = Set:create("pi.set", "police interior", { pi_jalws = 0, pi_ovrhd = 1 })
pi.shrinkable = 0.12
pi.talk_to_terry = function() -- line 13
    START_CUT_SCENE()
    start_script(pi.terry_stop_pace, pi)
    if not pi.talked_to_terry then
        pi.talked_to_terry = TRUE
        manny:say_line("/pima002/")
        wait_for_message()
        terry:say_line("/pite003/")
        wait_for_message()
        manny:say_line("/pima004/")
        wait_for_message()
        terry:say_line("/pite005/")
    else
        manny:say_line("/pima006/")
        wait_for_message()
        terry:say_line("/pite007/")
        wait_for_message()
        terry:say_line("/pite008/")
        wait_for_message()
        terry:say_line("/pite009/")
        wait_for_message()
        manny:say_line("/pima010/")
    end
    start_script(pi.terry_pace, pi, TRUE)
    END_CUT_SCENE()
end
pi.pace_point = { }
pi.pace_point[0] = { x = 0.191954, y = 1.80075, z = 0.21600001, pitch = 0, yaw = 120, roll = 0 }
pi.pace_point[1] = { x = -0.938546, y = 1.13415, z = 0.21600001, pitch = 0, yaw = 300, roll = 0 }
pi.terry_pace = function(arg1, arg2) -- line 44
    local local1, local2, local3, local4
    local1 = 1
    single_start_sfx("beewing.imu")
    if not arg2 then
        terry:default("pace")
        terry:put_in_set(pi)
        start_script(terry.start_pace, terry)
        terry:setpos(pi.pace_point[0].x, pi.pace_point[0].y, pi.pace_point[0].z)
        terry:setrot(pi.pace_point[0].pitch, pi.pace_point[0].yaw, pi.pace_point[0].roll)
        start_script(terry.fake_hover, terry)
    else
        local3 = proximity(terry.hActor, pi.pace_point[0].x, pi.pace_point[0].y, pi.pace_point[0].z)
        local4 = proximity(terry.hActor, pi.pace_point[1].x, pi.pace_point[1].y, pi.pace_point[1].z)
        if local3 > local4 then
            local1 = 0
        else
            local1 = 1
        end
        terry:stop_chore(tm_pace_pace_no_scratch, "tm_pace.cos")
        terry:run_chore(tm_pace_start_scratch, "tm_pace.cos")
        terry:play_chore_looping(tm_pace_pace, "tm_pace.cos")
        local3 = GetActorYawToPoint(terry.hActor, pi.pace_point[local1])
        terry:setrot(0, local3, 0, TRUE)
        terry:wait_for_actor()
        local2 = terry:getpos()
        while local2.x > pi.pace_point[0].x or local2.x < pi.pace_point[1].x do
            WalkActorForward(terry.hActor)
            break_here()
            local2 = terry:getpos()
        end
    end
    while TRUE do
        local2 = terry:getpos()
        while local2.x <= pi.pace_point[0].x and local2.x >= pi.pace_point[1].x do
            WalkActorForward(terry.hActor)
            break_here()
            local2 = terry:getpos()
            pi.terry_obj.interest_actor:setpos(local2.x, local2.y, local2.z + 0.30000001)
            if hot_object == pi.terry_obj then
                manny:head_look_at(pi.terry_obj)
            end
        end
        terry:setrot(0, pi.pace_point[local1].yaw, 0, TRUE)
        terry:wait_for_actor()
        local1 = 1 - local1
        while local2.x > pi.pace_point[0].x or local2.x < pi.pace_point[1].x do
            WalkActorForward(terry.hActor)
            break_here()
            local2 = terry:getpos()
            pi.terry_obj.interest_actor:setpos(local2.x, local2.y, local2.z + 0.30000001)
            if hot_object == pi.terry_obj then
                manny:head_look_at(pi.terry_obj)
            end
        end
    end
end
pi.terry_stop_pace = function(arg1) -- line 105
    local local1, local2, local3
    local1 = manny:getpos()
    local2 = terry:getpos()
    stop_script(pi.terry_pace)
    terry:wait_for_actor()
    local3 = GetActorYawToPoint(terry.hActor, local1)
    terry:setrot(0, local3, 0, TRUE)
    terry:wait_for_actor()
    terry:run_chore(tm_pace_stop_scratch, "tm_pace.cos")
    terry:play_chore_looping(tm_pace_pace_no_scratch, "tm_pace.cos")
    terry:stop_chore(tm_pace_pace, "tm_pace.cos")
end
pi.set_up_actors = function(arg1) -- line 122
    if dd.terry_arrested and not dd.strike_on then
        pi.cell:make_untouchable()
        pi.terry_obj:make_touchable()
        start_script(pi.terry_pace, pi)
    else
        pi.cell:make_touchable()
        pi.terry_obj:make_untouchable()
    end
end
pi.enter = function(arg1) -- line 139
    pi:set_up_actors()
    SetShadowColor(5, 5, 5)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0.7, 0.7, 4)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
end
pi.exit = function(arg1) -- line 151
    stop_sound("beewing.imu")
    if dd.terry_arrested and not dd.strike_on then
        stop_script(pi.terry_pace)
        terry:free()
    end
    KillActorShadows(manny.hActor)
end
pi.update_music_state = function(arg1) -- line 161
    if dd.terry_arrested and not dd.strike_on then
        return statePI_MALLOY
    else
        return statePI
    end
end
pi.posters = Object:create(pi, "/pitx011/posters", -0.93506902, 0.373602, 0.49000001, { range = 0.60000002 })
pi.posters.use_pnt_x = -0.775069
pi.posters.use_pnt_y = 0.443602
pi.posters.use_pnt_z = 0
pi.posters.use_rot_x = 0
pi.posters.use_rot_y = -221.761
pi.posters.use_rot_z = 0
pi.posters.lookAt = function(arg1) -- line 183
    soft_script()
    arg1.seen = TRUE
    manny:say_line("/pima012/")
    wait_for_message()
    manny:say_line("/pima013/")
end
pi.posters.pickUp = function(arg1) -- line 191
    if not arg1.seen then
        arg1:lookAt()
    end
    manny:say_line("/pima014/")
end
pi.posters.use = pi.posters.lookAt
pi.cell = Object:create(pi, "/pitx015/cell", -0.043852299, 0.87620598, 0.47, { range = 0.80000001 })
pi.cell.use_pnt_x = 0.236148
pi.cell.use_pnt_y = 0.67620599
pi.cell.use_pnt_z = 0
pi.cell.use_rot_x = 0
pi.cell.use_rot_y = -308.64001
pi.cell.use_rot_z = 0
pi.cell.lookAt = function(arg1) -- line 210
    manny:say_line("/pima016/")
    wait_for_message()
    manny:say_line("/pima017/")
end
pi.cell.use = function(arg1) -- line 216
    manny:say_line("/pima018/")
end
pi.terry_obj = Object:create(pi, "/pitx019/Terry", -0.043852299, 0.87620598, 0.47, { range = 1.5 })
pi.terry_obj.use_pnt_x = 0.236148
pi.terry_obj.use_pnt_y = 0.67620599
pi.terry_obj.use_pnt_z = 0
pi.terry_obj.use_rot_x = 0
pi.terry_obj.use_rot_y = -308.64001
pi.terry_obj.use_rot_z = 0
pi.terry_obj:make_untouchable()
pi.terry_obj.lookAt = function(arg1) -- line 230
    manny:say_line("/pima020/")
end
pi.terry_obj.use = function(arg1) -- line 234
    start_script(pi.talk_to_terry)
end
pi.pc_door = Object:create(pi, "/pitx001/door", 0.31192601, -0.41686001, 0.44, { range = 0.60000002 })
pi.pc_door.use_pnt_x = 0.181926
pi.pc_door.use_pnt_y = -0.13686
pi.pc_door.use_pnt_z = 0
pi.pc_door.use_rot_x = 0
pi.pc_door.use_rot_y = -153.373
pi.pc_door.use_rot_z = 0
pi.pc_door.out_pnt_x = 0.30958399
pi.pc_door.out_pnt_y = -0.39144701
pi.pc_door.out_pnt_z = 0
pi.pc_door.out_rot_x = 0
pi.pc_door.out_rot_y = -153.373
pi.pc_door.out_rot_z = 0
pi.pc_door.touchable = FALSE
pi.pc_box = pi.pc_door
pi.pc_door.walkOut = function(arg1) -- line 259
    pc:come_out_door(pc.pi_door)
end
pk_l_balloon_balloon = 0
pk_left_pump_pump = 0
CheckFirstTime("pk.lua")
dofile("ma_squirt_chem.lua")
dofile("pk_left_pump.lua")
dofile("pk_puddle.lua")
dofile("manny_foam_fill.lua")
pk = Set:create("pk.set", "Packing Room", { pk_widha = 0, pk_ovrhd = 1 })
pk.shrinkable = 0.03
pk.chem_state = "no chem"
gb = function() -- line 22
    fe.balloons.balloon1:get()
    fe.balloons.balloon2:get()
    fe.balloons.balloon3:get()
    fe.balloons.balloon4:get()
    fe.balloons.balloon5:get()
end
pb = function() -- line 30
    print_table(pk.balloons.balloon1)
    print_table(pk.balloons.balloon2)
    print_table(pk.balloons.balloon3)
    print_table(pk.balloons.balloon4)
    print_table(pk.balloons.balloon5)
    PrintDebug(pk.balloons.balloon1.name .. " owner=" .. pk.balloons.balloon1.owner.name .. "\n")
    PrintDebug(pk.balloons.balloon2.name .. " owner=" .. pk.balloons.balloon2.owner.name .. "\n")
    PrintDebug(pk.balloons.balloon3.name .. " owner=" .. pk.balloons.balloon3.owner.name .. "\n")
    PrintDebug(pk.balloons.balloon4.name .. " owner=" .. pk.balloons.balloon4.owner.name .. "\n")
    PrintDebug(pk.balloons.balloon5.name .. " owner=" .. pk.balloons.balloon5.owner.name .. "\n")
end
pk.fill_balloon = function(arg1, arg2, arg3) -- line 45
    local local1 = alloc_object_from_table(pk.balloons)
    START_CUT_SCENE()
    if local1 then
        local1:get()
        local1.wav = "getBloon.wav"
        local1.source_balloon = arg2
        manny.is_holding = nil
        manny:stop_chore(manny.hold_chore, "ms.cos")
        manny:stop_chore(ms_hold, "ms.cos")
        manny.hold_chore = nil
        if arg3 == 1 then
            local1.chem = 2
            pk.nozzle_1.interest_actor:push_costume("pk_l_balloon.cos")
            local1.name = arg2.name .. " filled with a dark chemical"
            manny:walkto(0.75395, -1.18986, 0, 0, 119.264, 0)
            manny:wait_for_actor()
            manny:push_costume("manny_foam_fill.cos")
            manny:play_chore(manny_foam_fill_left_fill, "manny_foam_fill.cos")
            sleep_for(536)
            pk.nozzle_1.interest_actor:play_chore(0, "pk_l_balloon.cos")
            manny:wait_for_chore(manny_foam_fill_left_fill, "manny_foam_fill.cos")
            pk.nozzle_1.interest_actor:wait_for_chore(0, "pk_l_balloon.cos")
            pk.nozzle_1.interest_actor:pop_costume()
            arg2:free()
            arg2.owner = IN_LIMBO
            manny:pop_costume()
            manny:play_chore(ms_pb_filled_balloon, "ms.cos")
            manny:wait_for_chore()
            manny:stop_chore(ms_pb_filled_balloon, "ms.cos")
            manny:play_chore(ms_takeout_empty, "ms.cos")
            manny:wait_for_chore()
            manny:stop_chore(ms_takeout_empty, "ms.cos")
        elseif arg3 == 2 then
            local1.name = arg2.name .. " filled with a light chemical"
            local1.chem = 1
            manny:walkto(0.75475502, -1.20416, 0, 0, 172.573, 0)
            manny:wait_for_actor()
            manny:push_costume("manny_foam_fill.cos")
            manny:play_chore(manny_foam_fill_right_fill, "manny_foam_fill.cos")
            sleep_for(900)
            pk.nozzle_2.interest_actor:play_chore(1, "pk_r_pump.cos")
            pk.nozzle_2.interest_actor:wait_for_chore(1, "pk_r_pump.cos")
            manny:wait_for_chore(manny_foam_fill_right_fill, "manny_foam_fill.cos")
            arg2:free()
            arg2.owner = IN_LIMBO
            manny:pop_costume()
            manny:play_chore(ms_pb_filled_balloon2, "ms.cos")
            manny:wait_for_chore()
            manny:stop_chore(ms_pb_filled_balloon2, "ms.cos")
            manny:play_chore(ms_takeout_empty, "ms.cos")
            manny:wait_for_chore()
            manny:stop_chore(ms_takeout_empty, "ms.cos")
        end
    else
        PrintDebug("ERROR:  can't allocate full balloon!")
    end
    END_CUT_SCENE()
end
pk.spray_chemical = function(arg1, arg2) -- line 116
    local local1
    START_CUT_SCENE()
    if pk.chem_state == "both chem" then
        manny:walkto(0.73000002, -1.1950001, 0, 0, 172.5, 0)
        manny:wait_for_message()
        manny:push_costume("ma_swats_foam.cos")
        manny:play_chore(0)
        sleep_for(737)
        pk.puddle:play_chore(pk_puddle_swat)
        manny:wait_for_chore(0, "ma_swats_foam.cos")
        pk.puddle.interest_actor:wait_for_chore(pk_puddle_swat)
        pk.puddle:play_chore(pk_puddle_clear)
        manny:stop_chore(0, "ma_swats_foam.cos")
        manny:pop_costume()
        if arg2 == 1 then
            manny:walkto(0.72000003, -1.115, 0, 0, 119.2665, 0)
        else
            manny:walkto(0.730721, -1.17336, 0, 0, 172.569, 0)
        end
        manny:wait_for_actor()
    end
    if arg2 == "swat" then
        pk.chem_state = "no chem"
    else
        if pk.chem_state == "no chem" then
            if arg2 == 1 then
                pk.chem_state = "chem 1"
            else
                pk.chem_state = "chem 2"
            end
        elseif pk.chem_state == "chem 1" then
            if arg2 == 2 then
                pk.chem_state = "both chem"
            end
        elseif pk.chem_state == "chem 2" then
            if arg2 == 1 then
                pk.chem_state = "both chem"
            end
        elseif pk.chem_state == "both chem" then
            if arg2 == 1 then
                pk.chem_state = "chem 1"
            else
                pk.chem_state = "chem 2"
            end
        end
        if arg2 == 1 then
            manny:push_costume("ma_squirt_chem.cos")
            local1 = ma_squirt_chem_left_shoot
            manny:play_chore(ma_squirt_chem_left_shoot, "ma_squirt_chem.cos")
            sleep_for(804)
            pk.nozzle_1:play_chore(0)
        elseif arg2 == 2 then
            manny:push_costume("ma_squirt_chem.cos")
            local1 = ma_squirt_chem_right_shoot
            manny:play_chore(ma_squirt_chem_right_shoot, "ma_squirt_chem.cos")
            sleep_for(670)
            pk.nozzle_2:play_chore(0)
        end
        sleep_for(871)
        if pk.chem_state == "both chem" then
            pk.puddle:play_chore(pk_puddle_foam)
            manny:wait_for_chore(local1, "ma_squirt_chem.cos")
            manny:stop_chore(local1, "ma_squirt_chem.cos")
            manny:pop_costume()
            pk.puddle.interest_actor:wait_for_chore(pk_puddle_foam)
        else
            pk.puddle.interest_actor:put_in_set(pk)
            pk.puddle:play_chore(pk_puddle_puddle)
            manny:wait_for_chore(local1, "ma_squirt_chem.cos")
            manny:stop_chore(local1, "ma_squirt_chem.cos")
            manny:pop_costume()
            pk.puddle:wait_for_chore(pk_puddle_puddle)
        end
    end
    END_CUT_SCENE()
    pk:update_states()
    if pk.chem_state == "both chem" and not pk.smelled_chem then
        pk.smelled_chem = TRUE
        wait_for_message()
        manny:say_line("/pkma001/")
    end
end
pk.update_states = function(arg1) -- line 207
    if pk.chem_state == "both chem" then
        pk.puddle:play_chore(pk_puddle_instant_foam)
        pk.puddle:make_touchable()
    elseif pk.chem_state == "no chem" then
        pk.puddle:play_chore(pk_puddle_clear)
        pk.puddle:make_untouchable()
    else
        pk.puddle:play_chore(pk_puddle_instant_puddle)
        pk.puddle:make_touchable()
    end
end
pk.test = function() -- line 227
    manny:push_costume("manny_foam_fill.cos")
    pk.nozzle_1.interest_actor:push_costume("pk_l_balloon.cos")
    while 1 do
        manny:play_chore(0)
        sleep_for(536)
        pk.nozzle_1.interest_actor:play_chore(0)
        manny:wait_for_chore(0)
        pk.nozzle_1.interest_actor:wait_for_chore(0)
        break_here()
    end
end
pk.enter = function(arg1) -- line 241
    NewObjectState(0, OBJSTATE_OVERLAY, "pk_foam_ball.bm", nil, 1)
    NewObjectState(0, OBJSTATE_OVERLAY, "pk_left_pump.bm", "pk_left_pump.zbm", 1)
    NewObjectState(0, OBJSTATE_OVERLAY, "pk_lt_foam_stream.bm", nil, 1)
    puddle = NewObjectState(0, OBJSTATE_OVERLAY, "pk_puddle.bm", nil, 1)
    NewObjectState(0, OBJSTATE_OVERLAY, "pk_puddle_fade.bm", nil, 1)
    NewObjectState(0, OBJSTATE_OVERLAY, "pk_r_pump.bm", "pk_r_pump.zbm", 1)
    NewObjectState(0, OBJSTATE_OVERLAY, "pk_rt_foam_stream.bm", nil, 1)
    NewObjectState(0, OBJSTATE_OVERLAY, "pk_r_balloon.bm", nil, 1)
    NewObjectState(0, OBJSTATE_OVERLAY, "pk_l_balloon.bm", nil, 1)
    NewObjectState(0, OBJSTATE_OVERLAY, "pk_foam_ball_swat.bm", nil, 1)
    SendObjectToBack(puddle)
    pk.nozzle_1:set_object_state("pk_left_pump.cos")
    pk.nozzle_1.interest_actor:complete_chore(0)
    pk.nozzle_2:set_object_state("pk_r_pump.cos")
    pk.nozzle_2.interest_actor:complete_chore(0)
    LoadCostume("pk_left_pump.cos")
    LoadCostume("pk_r_pump.cos")
    LoadCostume("pk_puddle.cos")
    LoadCostume("manny_foam_fill.cos")
    pk.puddle:set_object_state("pk_puddle.cos")
    pk.puddle:play_chore(pk_puddle_clear)
    pk:update_states()
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 10)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
end
pk.exit = function(arg1) -- line 279
    pk.nozzle_1:free_object_state()
    pk.nozzle_2:free_object_state()
    pk.puddle:free_object_state()
    KillActorShadows(manny.hActor)
end
pk.nozzle_1 = Object:create(pk, "/pktx002/nozzle", 0.86838901, -1.46008, 0.551, { range = 0.80000001 })
pk.nozzle_1.use_pnt_x = 0.730721
pk.nozzle_1.use_pnt_y = -1.17336
pk.nozzle_1.use_pnt_z = 0
pk.nozzle_1.use_rot_x = 0
pk.nozzle_1.use_rot_y = 172.569
pk.nozzle_1.use_rot_z = 0
pk.nozzle_1.lookAt = function(arg1) -- line 300
    manny:say_line("/pkma003/")
end
pk.nozzle_1.pickUp = function(arg1) -- line 305
    system.default_response("portable")
end
pk.nozzle_1.use = function(arg1) -- line 309
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    END_CUT_SCENE()
    pk:spray_chemical(2)
end
pk.nozzle_1.use_mt_balloon = function(arg1, arg2) -- line 317
    pk:fill_balloon(arg2, 2)
end
pk.nozzle_2 = Object:create(pk, "/pktx005/nozzle", 0.59614003, -1.3855799, 0.57999998, { range = 0.80000001 })
pk.nozzle_2.use_pnt_x = 0.72000003
pk.nozzle_2.use_pnt_y = -1.115
pk.nozzle_2.use_pnt_z = 0
pk.nozzle_2.use_rot_x = 0
pk.nozzle_2.use_rot_y = 119.2665
pk.nozzle_2.use_rot_z = 0
pk.nozzle_2.parent = pk.nozzle_1
pk.nozzle_2.use = function(arg1) -- line 332
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    END_CUT_SCENE()
    pk:spray_chemical(1)
end
pk.nozzle_2.use_mt_balloon = function(arg1, arg2) -- line 339
    pk:fill_balloon(arg2, 1)
end
pk.puddle = Object:create(pk, "/pktx006/puddle", 0.67614001, -1.40558, 0.19, { range = 0.5 })
pk.puddle:make_untouchable()
pk.puddle.use_pnt_x = 0.67900002
pk.puddle.use_pnt_y = -1.166
pk.puddle.use_pnt_z = 0
pk.puddle.use_rot_x = 0
pk.puddle.use_rot_y = -185.895
pk.puddle.use_rot_z = 0
pk.puddle.lookAt = function(arg1) -- line 354
    if pk.chem_state == "both chem" then
        manny:say_line("/pkma007/")
    else
        manny:say_line("/pkma008/")
    end
end
pk.puddle.pickUp = function(arg1) -- line 362
    manny:say_line("/pkma009/")
end
pk.puddle.use = function(arg1) -- line 366
    if pk.chem_state == "both chem" then
        pk:spray_chemical("swat")
    else
        manny:say_line("/pkma010/")
    end
end
pk.balloons = { }
pk.balloons.balloon1 = Object:create(pk, "", 0, 0, 0, { range = 0 })
pk.balloons.balloon1.string_name = "full_balloon"
pk.balloons.balloon1.owner = pk
pk.balloons.balloon1.big = TRUE
pk.balloons.balloon1.wav = "getFlBln.wav"
pk.balloons.balloon1.chem = FALSE
pk.balloons.balloon1.lookAt = function(arg1) -- line 384
    if arg1.chem == 1 then
        manny:say_line("/pkma011/")
    else
        manny:say_line("/pkma012/")
    end
end
pk.balloons.balloon2 = Object:create(pk, "", 0, 0, 0, { range = 0 })
pk.balloons.balloon2.string_name = "full_balloon"
pk.balloons.balloon2.owner = pk
pk.balloons.balloon2.parent = pk.balloons.balloon1
pk.balloons.balloon2.big = TRUE
pk.balloons.balloon2.wav = "getFlBln.wav"
pk.balloons.balloon2.chem = FALSE
pk.balloons.balloon2.lookAt = function(arg1) -- line 400
    if arg1.chem == 1 then
        manny:say_line("/pkma011/")
    else
        manny:say_line("/pkma012/")
    end
end
pk.balloons.balloon3 = Object:create(pk, "", 0, 0, 0, { range = 0 })
pk.balloons.balloon3.string_name = "full_balloon"
pk.balloons.balloon3.owner = pk
pk.balloons.balloon3.parent = pk.balloons.balloon1
pk.balloons.balloon3.big = TRUE
pk.balloons.balloon3.wav = "getFlBln.wav"
pk.balloons.balloon3.chem = FALSE
pk.balloons.balloon3.lookAt = function(arg1) -- line 417
    if arg1.chem == 1 then
        manny:say_line("/pkma011/")
    else
        manny:say_line("/pkma012/")
    end
end
pk.balloons.balloon4 = Object:create(pk, "", 0, 0, 0, { range = 0 })
pk.balloons.balloon4.string_name = "full_balloon"
pk.balloons.balloon4.owner = pk
pk.balloons.balloon4.parent = pk.balloons.balloon1
pk.balloons.balloon4.big = TRUE
pk.balloons.balloon4.wav = "getFlBln.wav"
pk.balloons.balloon4.chem = FALSE
pk.balloons.balloon4.lookAt = function(arg1) -- line 433
    if arg1.chem == 1 then
        manny:say_line("/pkma011/")
    else
        manny:say_line("/pkma012/")
    end
end
pk.balloons.balloon5 = Object:create(pk, "", 0, 0, 0, { range = 0 })
pk.balloons.balloon5.string_name = "full_balloon"
pk.balloons.balloon5.owner = pk
pk.balloons.balloon5.parent = pk.balloons.balloon1
pk.balloons.balloon5.big = TRUE
pk.balloons.balloon5.wav = "getFlBln.wav"
pk.balloons.balloon5.chem = FALSE
pk.balloons.balloon5.lookAt = function(arg1) -- line 449
    if arg1.chem == 1 then
        manny:say_line("/pkma011/")
    else
        manny:say_line("/pkma012/")
    end
end
pk.coffin = Object:create(pk, "/pktx014/coffin", 0.116594, -1.16655, 0.41, { range = 0.60000002 })
pk.coffin.use_pnt_x = 0.356594
pk.coffin.use_pnt_y = -1.04655
pk.coffin.use_pnt_z = 0
pk.coffin.use_rot_x = 0
pk.coffin.use_rot_y = 124.473
pk.coffin.use_rot_z = 0
pk.coffin.lookAt = function(arg1) -- line 466
    manny:say_line("/pkma015/")
end
pk.coffin.pickUp = function(arg1) -- line 470
    system.default_response("hernia")
end
pk.coffin.use = function(arg1) -- line 474
    START_CUT_SCENE()
    manny:say_line("/pkma016/")
    wait_for_message()
    manny:say_line("/pkma017/")
    END_CUT_SCENE()
end
pk.lo_door = Object:create(pk, "/pktx013/door", -0.0138599, -0.475577, 0.5, { range = 0.54506099 })
pk.pk_lo_box = pk.lo_door
pk.lo_door.use_pnt_x = 0.193
pk.lo_door.use_pnt_y = -0.41
pk.lo_door.use_pnt_z = 0
pk.lo_door.use_rot_x = 0
pk.lo_door.use_rot_y = -993.59998
pk.lo_door.use_rot_z = 0
pk.lo_door.out_pnt_x = -0.127
pk.lo_door.out_pnt_y = -0.391
pk.lo_door.out_pnt_z = 0
pk.lo_door.out_rot_x = 0
pk.lo_door.out_rot_y = -993.59998
pk.lo_door.out_rot_z = 0
pk.lo_door.touchable = FALSE
pk.lo_door.walkOut = function(arg1) -- line 506
    lo:come_out_door(lo.pk_door)
end
pk_puddle_puddle = 0
pk_puddle_puddle_fade = 1
pk_puddle_foam = 2
pk_puddle_clear = 3
pk_puddle_instant_puddle = 4
pk_puddle_instant_foam = 5
pk_puddle_swat = 6
pk_r_pump_pump = 0
pk_r_pump_balloon = 1
CheckFirstTime("ps.lua")
ps = Set:create("ps.set", "pearl sub", { ps_widha = 0, ps_barfg = 1, ps_subla = 2, ps_ovrhd = 3, ps_intro = 4 })
dofile("barnacle.lua")
ps.set_up_actors = function(arg1) -- line 19
    if not ps.barnacle then
        ps.barnacle = Actor:create(nil, nil, nil, "barnacles")
    end
    ps.barnacle:set_costume("barnacle.cos")
    ps.barnacle:put_in_set(ps)
    ps.barnacle:setpos(-11.2506, 3.79427, 2.58294)
    ps.barnacle:setrot(0, -191.951, 0)
    ps.barnacle:play_chore_looping(barnacle_idles)
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(manny.hActor, 0.35)
end
ps.octo_watch_manny = function() -- line 34
    local local1 = manny:getpos()
    octoeye:set_head(0, 0, 0, 0, 0, 360)
    while 1 do
        octoeye:head_look_at_manny()
        break_here()
    end
end
ps.chepito_light = function() -- line 43
    local local1, local2, local3
    local local4 = { }
    while 1 do
        local1, local2, local3 = GetActorNodeLocation(chepito.hActor, 12)
        SetLightPosition("chepito_light", local1, local2, local3)
        ps.lantern.interest_actor:setpos(local1, local2, local3)
        local4 = chepito:getpos()
        ps.chepito_obj.interest_actor:setpos(local4.x, local4.y, local4.z + 0.40000001)
        if hot_object == ps.chepito_obj then
            manny:head_look_at(ps.chepito_obj)
        end
        break_here()
    end
end
ps.glottis_follow_manny = function() -- line 61
    local local1 = glottis:getpos()
    local local2 = { }
    local local3, local4
    local local5 = { x = 1, y = -1, z = 0 }
    break_here()
    while 1 do
        if ps:current_setup() == ps_barfg then
            local1 = glottis:getpos()
            glottis:walkto(-11.3708, 5.8907299, 2.52, 0, 155.19901, 0)
            glottis:wait_for_actor()
            while ps:current_setup() == ps_barfg do
                glottis:head_look_at_manny()
                break_here()
            end
        else
            glottis:head_look_at_manny()
            while proximity(glottis, manny) > 1.5 and ps:current_setup() ~= ps_barfg do
                glottis:head_look_at_manny()
                repeat
                    glottis:head_look_at_manny()
                    glottis:stop_chore(glottis_home_pose, "glottis_sailor.cos")
                    local2 = manny:getrot()
                    local4 = RotateVector(local5, local2)
                    local3 = manny:getpos()
                    local4.x = local4.x + local3.x
                    local4.y = local4.y + local3.y
                    local4.z = local4.z + local3.z
                    TurnActorTo(glottis.hActor, local4.x, local4.y, local4.z)
                    break_here()
                    glottis:set_walk_rate(GetActorWalkRate(manny.hActor))
                    glottis:walk_forward()
                    local1 = glottis:getpos()
                    ps.glottis_obj.interest_actor:setpos(local1.x, local1.y, local1.z + 1)
                until proximity(glottis, manny) < 1.1 or ps:current_setup() == ps_barfg
            end
            break_here()
            glottis:set_walk_rate(MANNY_WALK_RATE)
            glottis:play_chore(glottis_home_pose, "glottis_sailor.cos")
        end
    end
end
ps.chepito_follow_manny = function() -- line 108
    local local1 = chepito:getpos()
    local local2 = { }
    local local3, local4
    local local5 = { x = 0.2, y = -0.5, z = 0 }
    break_here()
    while 1 do
        if ps:current_setup() == ps_barfg then
            local1 = chepito:getpos()
            chepito:walkto(-11.1406, 4.7150502, 2.52, 0, 134.09801, 0)
            chepito:wait_for_actor()
            while ps:current_setup() == ps_barfg do
                chepito:head_look_at_manny()
                break_here()
            end
        else
            chepito:head_look_at_manny()
            while proximity(chepito, manny) > 1 do
                chepito:head_look_at_manny()
                repeat
                    chepito:head_look_at_manny()
                    chepito:stop_chore(chepito_base)
                    local2 = manny:getrot()
                    local4 = RotateVector(local5, local2)
                    local3 = manny:getpos()
                    local4.x = local4.x + local3.x
                    local4.y = local4.y + local3.y
                    local4.z = local4.z + local3.z
                    TurnActorTo(chepito.hActor, local4.x, local4.y, local4.z)
                    chepito:set_walk_rate(GetActorWalkRate(manny.hActor))
                    chepito:walk_forward()
                    break_here()
                    local1 = chepito:getpos()
                    ps.chepito_obj.interest_actor:setpos(local1.x, local1.y, local1.z + 0.25)
                until proximity(chepito, manny) < 0.60000002 or ps:current_setup() == ps_barfg
            end
            break_here()
            chepito:set_walk_rate(MANNY_WALK_RATE)
            chepito:play_chore(chepito_base)
        end
    end
end
ps.pre_subjacked = function() -- line 154
    local local1 = { "/such143/", "/such144/Grrrr!", "/such145/Aaaaaah!", "/such146/LeggoleggoLEGGO!" }
    MakeSectorActive("barnacle_box", FALSE)
    stop_script(ps.chepito_follow_manny)
    ps.barnacle:set_chore_looping(barnacle_idles, FALSE)
    chepito:walkto(-11.7438, 4.1452899, 2.52, 0, -191.951, 0)
    chepito:wait_for_actor()
    chepito:ignore_boxes()
    ps.barnacle:blend(barnacle_hold_ct, barnacle_idles, 800)
    chepito:fade_in_chore(chepito_2trapped, "chepito.cos", 500)
    ps.barnacle:wait_for_chore()
    ps.barnacle:play_chore_looping(barnacle_ct_thrash)
    chepito:say_line("/such143/")
    chepito:wait_for_chore(chepito_2trapped)
    chepito.trapped_in_ps = TRUE
    chepito:play_chore_looping(chepito_trapped)
    start_sfx("ct_thrash.IMU")
    while 1 do
        chepito:say_line(pick_from_nonweighted_table(local1, TRUE), { background = TRUE })
        chepito:wait_for_message()
        sleep_for(500)
    end
end
ps.octo = function() -- line 184
    while 1 do
        if ps:current_setup() == ps_widha then
            StartMovie("ps_0.snm", TRUE, 168, 161)
            while ps:current_setup() == ps_widha do
                break_here()
            end
        elseif ps:current_setup() == ps_subla then
            StartMovie("ps_2.snm", TRUE, 290, 75)
            while ps:current_setup() == ps_subla do
                break_here()
            end
        elseif ps:current_setup() == ps_barfg then
            StartMovie("ps_1.snm", TRUE, 220, 148)
            while ps:current_setup() == ps_barfg do
                break_here()
            end
        end
        system:lock_display()
        StopMovie()
        ForceRefresh()
        break_here()
        system:unlock_display()
    end
end
ps.camerachange = function(arg1, arg2, arg3) -- line 211
    StopMovie()
    if arg3 == ps_widha and ps.octo_here then
        StartMovie("ps_0.snm", TRUE, 168, 161)
    elseif arg3 == ps_subla and ps.octo_here then
        StartMovie("ps_2.snm", TRUE, 290, 75)
    elseif arg3 == ps_barfg and ps.octo_here then
        StartMovie("ps_1.snm", TRUE, 220, 148)
    end
end
ps.enter = function(arg1) -- line 223
    cur_puzzle_state[34] = TRUE
    MakeSectorActive("backdoor", FALSE)
    ps:set_up_actors()
    ps:add_ambient_sfx(underwater_ambience_list, underwater_ambience_parm_list)
end
ps.exit = function(arg1) -- line 231
    stop_sound("bubvox.imu")
    stop_script(ps.chepito_light)
    stop_script(ps.octo)
    stop_script(ps.octo_watch_manny)
    stop_script(ps.chepito_follow_manny)
    stop_script(ps.glottis_follow_manny)
    chepito:free()
    glottis:free()
    octoeye:free()
    ps.barnacle:free()
end
ps.clam_animation = function(arg1) -- line 253
    ps.barnacle:wait_for_chore(barnacle_caress)
    ps.barnacle:play_chore_looping(barnacle_idles)
end
ps.barnacle_box = { }
ps.barnacle_box.walkOut = function(arg1) -- line 260
    START_CUT_SCENE()
    ps.barnacle:set_chore_looping(barnacle_idles, FALSE)
    ps.barnacle:blend(barnacle_caress, barnacle_idles, 800)
    start_script(ps.clam_animation)
    manny:head_look_at(ps.barnicle)
    manny:say_line("/psma001/")
    manny:wait_for_message()
    start_script(manny.setrot, manny, 0, -452.416, 0, TRUE)
    manny:wait_for_actor()
    manny.move_in_reverse = TRUE
    start_script(move_actor_backward, manny.hActor)
    sleep_for(800)
    stop_script(move_actor_backward)
    manny:set_walk_backwards(FALSE)
    manny.move_in_reverse = FALSE
    manny:set_walk_backwards(FALSE)
    wait_for_message()
    if not ps.groped then
        ps.groped = TRUE
        manny:say_line("/psma002/")
        wait_for_message()
    end
    END_CUT_SCENE()
end
ps.barrier1 = { }
ps.barrier1.walkOut = function(arg1) -- line 290
    manny:say_line("/psma003/")
end
ps.barrier2 = ps.barrier1
ps.sub = Object:create(ps, "/pstx004/sub", 2.4552, 0.383313, 0.0200001, { range = 50 })
ps.sub.use_pnt_x = 6.3151999
ps.sub.use_pnt_y = 7.6433101
ps.sub.use_pnt_z = 2.5
ps.sub.use_rot_x = 0
ps.sub.use_rot_y = 525.47198
ps.sub.use_rot_z = 0
ps.sub.immediate = TRUE
ps.sub.lookAt = function(arg1) -- line 308
    manny:say_line("/psma005/")
end
ps.sub.pickUp = function(arg1) -- line 312
    system.default_response("underwater")
end
ps.sub.use = function(arg1) -- line 316
    manny:say_line("/psma006/")
end
ps.octopus = Object:create(ps, "/pstx007/octopus", 1.7352, 0.383313, 2.23, { range = 50 })
ps.octopus.use_pnt_x = 6.3151999
ps.octopus.use_pnt_y = 7.6433101
ps.octopus.use_pnt_z = 2.5
ps.octopus.use_rot_x = 0
ps.octopus.use_rot_y = 525.47198
ps.octopus.use_rot_z = 0
ps.octopus.immediate = TRUE
ps.octopus.lookAt = function(arg1) -- line 330
    soft_script()
    manny:say_line("/psma008/")
    wait_for_message()
    manny:say_line("/psma009/")
end
ps.octopus.use = function(arg1) -- line 337
    manny:say_line("/psma010/")
end
ps.pearl = Object:create(ps, "/pstx011/the Pearl", -0.49479899, -2.6066899, 5.4200001, { range = 50 })
ps.pearl.use_pnt_x = 6.3151999
ps.pearl.use_pnt_y = 7.6433101
ps.pearl.use_pnt_z = 2.5
ps.pearl.use_rot_x = 0
ps.pearl.use_rot_y = 525.47198
ps.pearl.use_rot_z = 0
ps.pearl.lookAt = function(arg1) -- line 350
    soft_script()
    manny:say_line("/psma012/")
    wait_for_message()
    manny:say_line("/psma013/")
    wait_for_message()
    glottis:say_line("/psgl014/")
end
ps.pearl.pickUp = function(arg1) -- line 359
    manny:say_line("/psma015/")
    wait_for_message()
    chepito:say_line("/psch016/")
end
ps.pearl.use = ps.pearl.pickUp
ps.glottis_obj = Object:create(ps, "/pstx017/Glottis", 8.4403496, 8.0503101, 3.4200001, { range = 1.5 })
ps.glottis_obj.use_pnt_x = 7.1703401
ps.glottis_obj.use_pnt_y = 7.7503099
ps.glottis_obj.use_pnt_z = 2.5
ps.glottis_obj.use_rot_x = 0
ps.glottis_obj.use_rot_y = -45.7803
ps.glottis_obj.use_rot_z = 0
ps.glottis_obj.lookAt = function(arg1) -- line 375
    manny:say_line("/psma018/")
end
ps.glottis_obj.pickUp = function(arg1) -- line 379
    system.default_response("underwater")
end
ps.glottis_obj.use = function(arg1) -- line 383
    manny:say_line("/psma019/")
    wait_for_message()
    glottis:say_line("/psgl020/")
    wait_for_message()
    chepito:say_line("/psch021/")
end
ps.chepito_obj = Object:create(ps, "/pstx022/Chepito", 7.75034, 8.5103102, 3.04, { range = 1.5 })
ps.chepito_obj.use_pnt_x = 7.1703401
ps.chepito_obj.use_pnt_y = 7.7503099
ps.chepito_obj.use_pnt_z = 2.5
ps.chepito_obj.use_rot_x = 0
ps.chepito_obj.use_rot_y = -45.7803
ps.chepito_obj.use_rot_z = 0
ps.chepito_obj.lookAt = function(arg1) -- line 399
    manny:say_line("/psma023/")
end
ps.chepito_obj.pickUp = function(arg1) -- line 403
    manny:say_line("/psma024/")
end
ps.chepito_obj.use = function(arg1) -- line 407
    START_CUT_SCENE()
    manny:say_line("/psma025/")
    wait_for_message()
    manny:say_line("/psma026/")
    wait_for_message()
    chepito:say_line("/psch027/")
    wait_for_message()
    chepito:say_line("/psch028/")
    END_CUT_SCENE()
end
ps.lantern = Object:create(ps, "/pstx029/lantern", 7.75034, 8.5103102, 3.25, { range = 0.60000002 })
ps.lantern.use_pnt_x = 7.1703401
ps.lantern.use_pnt_y = 7.7503099
ps.lantern.use_pnt_z = 2.5
ps.lantern.use_rot_x = 0
ps.lantern.use_rot_y = -45.7803
ps.lantern.use_rot_z = 0
ps.lantern.lookAt = function(arg1) -- line 428
    manny:say_line("/psma030/")
end
ps.lantern.use = function(arg1) -- line 432
    chepito:say_line("/psch031/")
    wait_for_message()
    chepito:say_line("/psch032/")
end
ps.lantern.pickUp = ps.lantern.use
ps.barnacles = Object:create(ps, "/pstx033/barnacles", -11.5604, 3.8449399, 2.7969, { range = 0.60000002 })
ps.barnacles.use_pnt_x = -11.9244
ps.barnacles.use_pnt_y = 3.8557401
ps.barnacles.use_pnt_z = 2.52
ps.barnacles.use_rot_x = 0
ps.barnacles.use_rot_y = 239.808
ps.barnacles.use_rot_z = 0
ps.barnacles.lookAt = function(arg1) -- line 449
    manny:say_line("/psma034/")
end
ps.barnacles.pickUp = function(arg1) -- line 453
    manny:say_line("/psma035/")
end
ps.barnacles.use = function(arg1) -- line 457
    manny:say_line("/psma036/")
end
ps.backdoor_trigger = Object:create(ps, "trigger", 0, 0, 0, { range = 0 })
ps.back_trigger = ps.backdoor_trigger
ps.backdoor_trigger.walkOut = function(arg1) -- line 467
    START_CUT_SCENE("no head")
    start_script(ps.pre_subjacked)
    manny:walkto(-11.1, 3.35, 2.3, 0, 256.233, 0)
    manny:wait_for_actor()
    MakeSectorActive("backdoor", TRUE)
    manny:setpos(-10.55, 3.02499, 2.32)
    manny:setrot(0, 742.695, 0)
    manny:walkto(-11.1578, 4.43829, 2.52, 0, 743.268, 0)
    manny:wait_for_actor()
    manny:head_look_at(chepito)
    MakeSectorActive("backdoor", FALSE)
    while not chepito.trapped_in_ps do
        break_here()
    end
    manny:head_look_at(nil)
    start_script(manny.walkto, manny, -10.5679, 6.50009, 2.52)
    while manny:find_sector_name("ps_barfg") do
        break_here()
    end
    END_CUT_SCENE()
    stop_script(ps.pre_subjacked)
    stop_script(ps.octo)
    stop_sound("ct_thrash.IMU")
    start_script(cut_scene.subjacked)
    stop_sound("ps_oct.imu")
end
pu_argue_yell2look_bibi = 0
pu_argue_yell = 1
pu_argue_talk = 2
pu_argue_look_bibi2talk = 3
pu_argue_look_bibi = 4
pu_argue_argue2look_bibi = 5
pu_argue_argue = 6
pu_argue_2yell = 7
pu_argue_2talk = 8
pu_argue_2look_bibi = 9
pu_argue_2argue = 10
pu_tag_tag_cw = 0
pu_tag_tag_ccw = 1
pu_tag_cw_hover_to_loop = 2
pu_tag_cw_loop_to_hover = 3
pu_tag_cw_loop = 4
pu_tag_ccw_loop = 5
pu_tag_ccw_hover_to_loop = 6
pu_tag_ccw_hover = 7
pu_tag_ccw_loop_to_hover = 8
pu_talk_idles_mumble = 0
pu_talk_idles_m = 1
pu_talk_idles_c = 2
pu_talk_idles_f = 3
pu_talk_idles_e = 4
pu_talk_idles_l = 5
pu_talk_idles_u = 6
pu_talk_idles_o = 7
pu_talk_idles_a = 8
pu_talk_idles_gesture1 = 9
pu_talk_idles_talkpos2 = 10
pu_talk_idles_cocky = 11
pu_talk_idles_cocky2 = 12
pu_talk_idles_hold_gesture2 = 13
pu_talk_idles_gesture3 = 14
pu_talk_idles_laugh = 15
pu_talk_idles_gesture4 = 16
pu_talk_idles_start_cry = 17
pu_talk_idles_cry_loop = 18
pu_talk_idles_end_cry = 19
pu_talk_idles_gesture5 = 20
pu_talk_idles_gesture2 = 21
pu_talk_idles_gesture6 = 22
pu_talk_idles_coral_stick_only = 23
pu_talk_idles_work_idle = 24
pu_talk_idles_stop_talk = 25
pu_talk_idles_t = 26
pu_work_idles_work_idle = 0
pu_work_idles_start_hammer = 1
pu_work_idles_hammer_cycle = 2
pu_work_idles_blow = 3
pu_work_idles_start_chisel = 4
pu_work_idles_chisel_cycle = 5
pu_work_idles_putdown_chisel = 6
pu_work_idles_look_coral = 7
pu_work_idles_chisel2 = 8
pu_work_idles_stick_only = 9
pu_work_idles_scrap_only = 10
pu_work_idles_coral_only = 11
pu_work_idles_stick_coral_only = 12
pu_work_idles_throw_pickaxe = 13
pu_work_idles_axe_only = 14
pu_work_idles_work2talk = 15
pu_work_idles_talk_pos2 = 16
pu_work_idles_end_hammer = 17
pu_work_idles_show_nothing = 18
pu_work_idles_hide_hammer = 19
pu_work_idles_show_hammer = 20
ra_bonked_knock_out = 0
ra_bonked_can_only = 1
ra_bonked_can_end = 2
raoul_bored_shakes_ankle = 0
raoul_bored_scratches_head = 1
raoul_bored_cigarette_drag = 2
raoul_bored_mumble = 3
raoul_bored_c = 4
raoul_bored_m = 5
raoul_bored_f = 6
raoul_bored_e = 7
raoul_bored_u = 8
raoul_bored_l = 9
raoul_bored_a = 10
raoul_bored_o = 11
raoul_bored_no_talk = 12
raoul_bored_t = 13
raoul_cask_fall = 0
raoul_cask_fall_hold = 1
raoul_cask_out = 2
raoul_cask_on_knee_hold = 3
raoul_cask_to_feet = 4
raoul_cask_head_hold = 5
raoul_cask_turn_back = 6
raoul_cask_turn_back_hold = 7
raoul_cask_mumble = 8
raoul_cask_no_talk = 9
raoul_cask_c = 10
raoul_cask_m = 11
raoul_cask_f = 12
raoul_cask_e = 13
raoul_cask_u = 14
raoul_cask_l = 15
raoul_cask_a = 16
raoul_cask_o = 17
raoul_cask_t = 18
raoul_yelling_yelling = 0
raoul_yelling_mumble = 1
raoul_yelling_no_talk = 2
raoul_yelling_c = 3
raoul_yelling_m = 4
raoul_yelling_f = 5
raoul_yelling_e = 6
raoul_yelling_u = 7
raoul_yelling_l = 8
raoul_yelling_a = 9
raoul_yelling_o = 10
raoul_yelling_t = 11
ra_walks_idle = 0
ra_walks_walk_loop1 = 1
ra_walks_walk_stop = 2
ra_walks_walk_start = 3
ra_walks_walk_upstair = 4
ra_walks_walk_downstair = 5
ra_walks_mumble = 6
ra_walks_c = 7
ra_walks_m = 8
ra_walks_f = 9
ra_walks_e = 10
ra_walks_u = 11
ra_walks_l = 12
ra_walks_a = 13
ra_walks_o = 14
ra_walks_no_talk = 15
ra_walks_waveoff = 16
ra_walks_open_pantry = 17
ra_walks_t = 18
re_bw_anim_sit = 0
re_bw_anim_go_away = 1
CheckFirstTime("re.lua")
re = Set:create("re.set", "rubamat exterior", { re_estla = 0, re_estla2 = 0, re_front = 1, re_lotws = 2, re_ovrhd = 3, re_velcu = 4, re_mnycu = 5 })
dofile("ma_ve_carry.lua")
dofile("ma_shakecycle_stand.lua")
dofile("glottis_idles.lua")
dofile("velasco_idles.lua")
re.glottis_mark = { x = 0.786365, y = -4.8601, z = -3.4 }
re.glottis_look_point = { x = 0.801131, y = -4.43508, z = -2.655 }
re.vel_shake_spot1 = { x = 7.24323, y = -3.0996, z = -1.56629 }
re.vel_shake_spot2 = { x = 7.27331, y = -2.98701, z = -1.55692 }
re.vel_look_bw_spot = { x = 7.15428, y = -3.10409, z = -1.54379 }
re.vel_look_sky_point = { x = 7.24101, y = -3.07819, z = -1.5001 }
re.bw_look1 = { x = 0.826013, y = -4.32169, z = -3.2145 }
re.bw_look2 = { x = 0.767513, y = -4.50069, z = -2.662 }
re.bw_look3 = { x = 0.0944134, y = -4.53109, z = -3.1975 }
re.bw_look4 = { x = 0.0944134, y = -4.76249, z = -2.7852 }
velasco.idle_table = Idle:create("velasco_idles")
velasco.idle_table:add_state("up_on_toes", { rocking = 0.4, on_toes = 0.1, down_from_toes = 0.1, looks_right = 0.2, tilt_left = 0.2 })
velasco.idle_table:add_state("tilt_up", { standing = 1 })
velasco.idle_table:add_state("tilt_left", { tilt_hold = 0.7, tilt_up = 0.3 })
velasco.idle_table:add_state("tilt_hold", { tilt_hold = 0.6, tilt_up = 0.4 })
velasco.idle_table:add_state("standing", { up_on_toes = 0.25, standing = 0.75, bending_down = 0 })
velasco.idle_table:add_state("rocking", { on_toes = 0.5, down_from_toes = 0.5 })
velasco.idle_table:add_state("on_toes", { rocking = 0.8, down_from_toes = 0.2, on_toes = 0 })
velasco.idle_table:add_state("looks_right", { looks_hold = 1, looks_forward = 0 })
velasco.idle_table:add_state("looks_hold", { looks_hold = 0.6, looks_forward = 0.4 })
velasco.idle_table:add_state("looks_forward", { on_toes = 0.2, looks_right = 0.2, tilt_left = 0.2, rocking = 0.2, down_from_toes = 0.2 })
velasco.idle_table:add_state("hold_down", { bending_up = 0.2, hold_down = 0.8 })
velasco.idle_table:add_state("down_from_toes", { up_on_toes = 0, bending_down = 0, standing = 1 })
velasco.idle_table:add_state("bending_up", { on_toes = 1 })
velasco.idle_table:add_state("bending_down", { hold_down = 1, bending_up = 0 })
re.stop_fake_conversation = function() -- line 46
    stop_script(re.fake_conversation)
    if not find_script(re.car_talk_intro) then
        velasco:shut_up()
        glottis:shut_up()
    end
end
re.car_talk_intro = function(arg1) -- line 54
    re.stop_fake_conversation()
    break_here()
    glottis:say_line("/regl040/")
    glottis:wait_for_message()
    velasco:say_line("/reve041/")
    velasco:wait_for_message()
    start_script(re.fake_conversation)
end
re.more_car_talk = function(arg1) -- line 64
    glottis:say_line("/regl042/")
    wait_for_message()
    glottis:say_line("/regl043/")
    wait_for_message()
    velasco:say_line("/reve044/")
    wait_for_message()
    glottis:say_line("/regl045/")
    wait_for_message()
    velasco:say_line("/reve046/")
    wait_for_message()
end
re.heloruba_outro = function() -- line 77
    START_CUT_SCENE()
    manny:default()
    manny:put_in_set(re)
    SetActorConstrain(system.currentActor.hActor, FALSE)
    plunge_trap_set = TRUE
    set_override(re.heloruba_outro_override)
    manny:setpos(5.47389, -2.9179, -2.47364)
    manny:setrot(0, 274.291, 0)
    SetActorConstrain(system.currentActor.hActor, FALSE)
    re:current_setup(re_estla)
    start_script(re.fix_this_damn_bug)
    play_movie("re_bw.snm", 0, 274)
    SetActorConstrain(system.currentActor.hActor, FALSE)
    manny:walkto(6.78632, -2.86125, -1.99)
    break_here()
    SetActorConstrain(system.currentActor.hActor, FALSE)
    manny:walk_and_face(6.78632, -2.86125, -1.99, 0, 255.741, 0)
    break_here()
    SetActorConstrain(system.currentActor.hActor, FALSE)
    sleep_for(300)
    manny:head_look_at_point(6.71672, -3.03675, -1.5827, 170)
    wait_for_movie()
    re.bone_wagon:play_chore(0)
    manny:head_look_at(nil, 130)
    stop_script(re.fix_this_damn_bug)
    re.bw_needs_updating = TRUE
    END_CUT_SCENE()
end
re.heloruba_outro_override = function() -- line 112
    kill_override()
    manny:setpos(6.78632, -2.86125, -1.99)
    manny:setrot(0, 255.741, 0)
    manny:head_look_at(nil)
    if IsMoviePlaying() then
        StopMovie()
    end
    re.bone_wagon:play_chore(0)
    re.bw_needs_updating = TRUE
    stop_script(re.fix_this_damn_bug)
end
re.fix_this_damn_bug = function() -- line 125
    while 1 do
        break_here()
        glottis:set_visibility(FALSE)
    end
end
re.velasco_shake_head = function() -- line 132
    velasco:set_look_rate(25)
    while 1 do
        velasco:head_look_at_point(re.vel_shake_spot1)
        sleep_for(250)
        velasco:head_look_at_point(re.vel_shake_spot2)
        sleep_for(250)
    end
end
velasco.manny_cu_pos = function(arg1) -- line 142
    velasco:setpos(7.46706, -2.46743, -1.99)
    velasco:setrot(0, 180.912, 0)
end
velasco.cu_pos = function(arg1) -- line 147
    velasco:setpos(7.19231, -2.94419, -1.99)
    velasco:setrot(0, 216.983, 0)
end
re.velasco_intro = function() -- line 152
    local local1, local2
    START_CUT_SCENE()
    stop_script(re.setup_velasco_idles)
    stop_script(velasco.walk_and_face)
    stop_script(velasco.walkto)
    stop_script(velasco.new_run_idle)
    stop_script(re.vel_look_around)
    re:current_setup(re_velcu)
    re:current_setup(re_mnycu)
    re:current_setup(re_estla)
    manny:free()
    velasco:default()
    velasco:follow_boxes()
    velasco:put_in_set(re)
    velasco:set_walk_rate(0.23)
    velasco:head_look_at(nil)
    velasco:push_costume("ma_ve_carry.cos")
    velasco:set_walk_chore(nil)
    velasco:set_rest_chore(nil)
    velasco.footsteps = footsteps.velasco
    set_override(re.velasco_intro_override)
    music_state:set_sequence(seqMeetVelasco)
    velasco:setpos(7.3227401, -1.10838, -1.99)
    velasco:setrot(0, 175.411, 0)
    velasco:play_chore_looping(ma_ve_carry_ma_carry, "ma_ve_carry.cos")
    velasco:walkto(7.3450799, -2.51139, -1.994)
    velasco:wait_for_actor()
    velasco:stop_chore(ma_ve_carry_ma_carry, "ma_ve_carry.cos")
    velasco:play_chore(ma_ve_carry_drop_ma, "ma_ve_carry.cos")
    sleep_for(1500)
    re:current_setup(re_mnycu)
    velasco:manny_cu_pos()
    velasco:say_line("/plgvl03a/")
    wait_for_message()
    re:current_setup(re_velcu)
    velasco:cu_pos()
    velasco:say_line("/plgvl03b/")
    start_script(re.velasco_shake_head)
    wait_for_message()
    stop_script(re.velasco_shake_head)
    velasco:set_look_rate(180)
    velasco:head_look_at_point(re.vel_look_bw_spot)
    sleep_for(1000)
    velasco:say_line("/plgvl04a/")
    wait_for_message()
    velasco:say_line("/plgvl04b/")
    velasco:head_look_at_point(7.2711101, -3.0781901, -1.5986)
    sleep_for(3000)
    velasco:head_look_at(nil)
    velasco:default()
    velasco:put_in_set(re)
    start_script(velasco.walk_and_face, velasco, 0.63307297, -3.9885099, -3.4000001, 0, 140.009, 0)
    sleep_for(1000)
    stop_script(velasco.walk_and_face)
    velasco:setpos(6.26722, -2.8559599, -2.05934)
    velasco:setrot(0, 94.547997, 0)
    start_script(velasco.walk_down_to_car)
    re:current_setup(re_estla)
    manny:default()
    manny:setpos(7.2093101, -2.7980101, -1.99)
    manny:setrot(0, 188.711, 0)
    manny:push_costume("ma_shakecycle_stand.cos")
    manny:run_chore(ma_shakecycle_stand_bendup_shake, "ma_shakecycle_stand.cos")
    manny:play_chore_looping(ma_shakecycle_stand_shiver_cycle, "ma_shakecycle_stand.cos")
    sleep_for(2000)
    END_CUT_SCENE()
    system.buttonHandler = shiver_button_handler
    start_script(re.setup_velasco_idles)
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(manny.hActor, 0.34999999)
    re.velasco_obj:make_touchable()
end
re.velasco_intro_override = function() -- line 243
    kill_override()
    stop_script(re.velasco_shake_head)
    manny:default()
    manny:push_costume("ma_shakecycle_stand.cos")
    manny:play_chore_looping(ma_shakecycle_stand_shiver_cycle, "ma_shakecycle_stand.cos")
    manny:setpos(7.20931, -2.79801, -1.99)
    manny:setrot(0, 188.711, 0)
    stop_script(velasco.walk_down_to_car)
    re:current_setup(re_estla)
    velasco:stop_chore()
    velasco:head_look_at(nil)
    velasco:setpos(0.633073, -3.98851, -3.4)
    velasco:setrot(0, 140.009, 0)
    velasco:set_look_rate(180)
    system.buttonHandler = shiver_button_handler
    velasco:setpos(0.633073, -3.98851, -3.4)
    velasco:setrot(0, 140.009, 0)
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(manny.hActor, 0.35)
    re.velasco_obj:make_touchable()
    single_start_script(re.setup_velasco_idles)
end
shiver_button_handler = function(arg1, arg2, arg3) -- line 267
    if arg2 and cutSceneLevel <= 0 then
        if not find_script(re.manny_get_up, arg1, arg2, arg3) then
            start_script(re.manny_get_up, arg1, arg2, arg3)
        end
    end
end
velasco.walk_down_to_car = function() -- line 275
    velasco:walk_and_face(3.4835, -2.82654, -3.4, 0, 90.3123, 0)
    velasco:wait_for_actor()
    velasco:walk_and_face(0.633073, -3.98851, -3.4, 0, 140.009, 0)
end
re.manny_get_up = function(arg1, arg2, arg3) -- line 282
    local local1 = manny:getrot()
    START_CUT_SCENE()
    manny:stop_looping_chore(ma_shakecycle_stand_shiver_cycle, "ma_shakecycle_stand.cos")
    manny:play_chore(ma_shakecycle_stand_shiver_getup, "ma_shakecycle_stand.cos")
    manny:wait_for_chore(ma_shakecycle_stand_shiver_getup, "ma_shakecycle_stand.cos")
    manny:default()
    manny:setrot(local1.x, local1.y + 180, local1.z)
    system.buttonHandler = SampleButtonHandler
    END_CUT_SCENE()
end
re.vel_look_around = function() -- line 295
    while 1 do
        sleep_for(3000 + 4000 * random())
        velasco:head_look_at_point(pick_one_of({ re.bw_look1, re.bw_look2, re.bw_look3, re.bw_look4 }))
    end
end
re.setup_velasco_idles = function(arg1) -- line 302
    while find_script(velasco.walk_down_to_car) and re:current_setup() == re_estla do
        break_here()
    end
    start_script(re.setup_velasco_idles2)
end
re.setup_velasco_idles2 = function() -- line 309
    stop_script(velasco.walk_down_to_car)
    stop_script(velasco.walk_and_face)
    velasco:setpos(0.633073, -3.98851, -3.4)
    velasco:setrot(0, 140.009, 0)
    velasco:default()
    velasco:put_in_set(re)
    velasco:push_costume("velasco_idles.cos")
    velasco:set_collision_mode(COLLISION_BOX, 1)
    start_script(velasco.new_run_idle, velasco, "standing", velasco.idle_table, "velasco_idles.cos")
    start_script(re.vel_look_around)
    start_script(re.fake_conversation)
end
re.see_cactus = function(arg1) -- line 323
    START_CUT_SCENE()
    fc:switch_to_set()
    manny:put_in_set(fc)
    manny:setpos(19.9082, 0.332317, 1.30575)
    manny:setrot(0, 128.548, 0)
    break_here()
    manny:walkto(19.5434, 0.0680735, 1.30575, 0, 105.545, 0)
    manny:wait_for_actor()
    sleep_for(1000)
    if not fc.seen_road then
        fc.seen_road = TRUE
        manny:say_line("/rema072/")
        wait_for_message()
        manny:say_line("/rema073/")
        wait_for_message()
        manny:say_line("/rema074/")
        wait_for_message()
        manny:say_line("/rema075/")
        wait_for_message()
    end
    manny:say_line("/rema076/")
    wait_for_message()
    manny:walkto(19.9082, 0.332317, 1.30575)
    sleep_for(500)
    END_CUT_SCENE()
    re:come_out_door(arg1)
end
re.fake_conversation = function() -- line 352
    local local1
    while not re.in_dialog do
        if not find_script(re.car_talk_intro) then
            sleep_for(random() * 4000)
            velasco:play_chore_looping(velasco_mumble, "velasco.cos")
            sleep_for(random() * 3000 + 1000)
            velasco:shut_up()
            sleep_for(2000 * random())
            glottis:play_chore_looping(glottis_mumble, "glottis.cos")
            sleep_for(random() * 5000 + 2000)
            glottis:shut_up()
        else
            break_here()
        end
    end
end
re.set_up_actors = function() -- line 373
    glottis:default()
    glottis:push_costume("glottis_idles.cos")
    glottis:ignore_boxes()
    glottis:put_in_set(re)
    glottis:head_look_at(nil, 360)
    glottis:setpos(0.921865, -4.8776, -3.4)
    glottis:setrot(0, 315.689, 0)
    glottis:play_chore(glottis_idles_hold, "glottis_idles.cos")
    if re.plunged then
        re.velasco_obj:make_touchable()
        re:setup_velasco_idles()
        manny:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(manny.hActor, 0.35)
    else
        re.velasco_obj:make_untouchable()
    end
end
re.enter = function(arg1) -- line 398
    start_script(re.set_up_actors)
    re.bone_wagon.hObjectState = re:add_object_state(re_estla, "re_bw_anim.bm", nil, OBJSTATE_STATE, FALSE)
    re.bone_wagon:set_object_state("re_bw_anim.cos")
    if not re.plunged then
        plunge_trap_set = TRUE
        preload_sfx("re_slip.wav")
    end
    SetShadowColor(10, 10, 10)
end
re.camerachange = function(arg1, arg2, arg3) -- line 426
    if re.bw_needs_updating then
        re.bw_needs_updating = FALSE
        glottis:set_visibility(TRUE)
        re.bone_wagon:play_chore(1)
    end
    if re.plunged and arg3 == re_lotws then
        if find_script(re.setup_velasco_idles) then
            stop_script(re.setup_velasco_idles)
            start_script(re.setup_velasco_idles2)
        end
        if not re.heard_car_talk_intro then
            re.heard_car_talk_intro = TRUE
            start_script(re.car_talk_intro)
        end
    end
end
re.exit = function(arg1) -- line 444
    stop_script(velasco.new_run_idle)
    stop_script(re.vel_look_around)
    stop_script(re.fake_conversation)
    manny:set_collision_mode(COLLISION_OFF)
    glottis:free()
    velasco:free()
    re.bone_wagon:free_object_state()
    KillActorShadows(manny.hActor)
end
re.bone_wagon = Object:create(re, "/retx058/Bone Wagon", 0.49903101, -4.5590901, -2.993, { range = 0.80000001 })
re.bone_wagon.use_pnt_x = 0.49903101
re.bone_wagon.use_pnt_y = -4.2260799
re.bone_wagon.use_pnt_z = -3.4000001
re.bone_wagon.use_rot_x = 0
re.bone_wagon.use_rot_y = 219.369
re.bone_wagon.use_rot_z = 0
re.bone_wagon.lookAt = function(arg1) -- line 469
    manny:say_line("/rema059/")
end
re.bone_wagon.pickUp = function(arg1) -- line 473
    sg.bone_wagon:pickUp()
end
re.bone_wagon.use = function(arg1) -- line 477
    soft_script()
    if not find_script(re.more_car_talk) then
        if not find_script(re.velasco_obj.use) then
            wait_for_script(re.car_talk_intro)
            if re.plunged then
                re.stop_fake_conversation()
            end
            START_CUT_SCENE()
            manny:say_line("/rema060/")
            manny:twist_head_gesture()
            wait_for_message()
            glottis:head_look_at_manny()
            if re.plunged then
                glottis:say_line("/regl061/")
                wait_for_message()
                glottis:head_follow_mesh(velasco, 6, TRUE)
            else
                glottis:say_line("/regl062/")
                wait_for_message()
                glottis:head_look_at(nil)
            end
            END_CUT_SCENE()
            if re.plunged then
                start_script(re.fake_conversation)
            end
        end
    end
end
re.velasco_obj = Object:create(re, "/retx063/Velasco", 0.55661398, -4.0648499, -2.8923299, { range = 0.80000001 })
re.velasco_obj.use_pnt_x = 0.272825
re.velasco_obj.use_pnt_y = -4.2909498
re.velasco_obj.use_pnt_z = -3.4000001
re.velasco_obj.use_rot_x = 0
re.velasco_obj.use_rot_y = 303.51801
re.velasco_obj.use_rot_z = 0
re.velasco_obj.lookAt = function(arg1) -- line 516
    manny:say_line("/rema064/")
end
re.velasco_obj.pickUp = function(arg1) -- line 520
    manny:say_line("/rema065/")
end
re.velasco_obj.use = function(arg1) -- line 524
    soft_script()
    if manny:walkto_object(arg1) then
        Dialog:run("ve1", "dlg_velasco.lua")
    end
end
re.velasco_obj.use_photo = function(arg1) -- line 531
    if manny:walkto_object(arg1) then
        Dialog:run("ve1", "dlg_velasco.lua", "photo")
    end
end
re.velasco_obj.use_logbook = function(arg1) -- line 537
    manny:say_line("/rema066/")
end
re.logbook = Object:create(re, "/retx067/logbook", 0, 0, 0, { range = 0 })
re.logbook.wav = "getBook.wav"
re.logbook.lookAt = function(arg1) -- line 546
    manny:say_line("/rema068/")
end
re.logbook.use = function(arg1) -- line 550
    manny:say_line("/rema069/")
end
re.plunge_trigger = { }
re.plunge_trigger.walkOut = function(arg1) -- line 562
    local local1 = manny:getpos()
    if plunge_trap_set then
        re.plunged = TRUE
        plunge_trap_set = FALSE
        START_CUT_SCENE()
        manny:walkto(local1.x, local1.y + 0.69999999, local1.z)
        manny:wait_for_actor()
        if manny.is_holding then
            manny.is_holding = nil
            manny:stop_chore(manny.hold_chore, manny.base_costume)
            manny:stop_chore(ma_hold, manny.base_costume)
            manny:stop_chore(ma_hold_scythe, manny.base_costume)
        end
        manny:set_visibility(FALSE)
        manny:play_sound_at("re_slip.wav")
        sleep_for(1000)
        manny:say_line("/hkma015/")
        manny:wait_for_message()
        sleep_for(1000)
        manny:say_line("/hkma013/")
        manny:wait_for_message()
        sleep_for(250)
        manny:set_visibility(TRUE)
        END_CUT_SCENE()
        start_script(cut_scene.plunge, cut_scene)
    else
        ResetMarioControls()
        manny:walkto(local1.x, local1.y - 0.80000001, local1.z)
        manny:say_line("/rema070/")
    end
end
re.fc_door1 = Object:create(re, "", -1.05828, -4.5809898, -2.974, { range = 0.60000002 })
re.fc_door1.use_pnt_x = -0.84753698
re.fc_door1.use_pnt_y = -4.31287
re.fc_door1.use_pnt_z = -3.4000001
re.fc_door1.use_rot_x = 0
re.fc_door1.use_rot_y = -230.744
re.fc_door1.use_rot_z = 0
re.fc_door1.out_pnt_x = -1.0012701
re.fc_door1.out_pnt_y = -4.5511599
re.fc_door1.out_pnt_z = -3.4000001
re.fc_door1.out_rot_x = 0
re.fc_door1.out_rot_y = -230.51601
re.fc_door1.out_rot_z = 0
re.fc_door1:make_untouchable()
re.fc_door1.walkOut = function(arg1) -- line 620
    start_script(re.see_cactus, arg1)
end
re.fc_door2 = Object:create(re, "", 2.57214, -5.1846299, -2.9554999, { range = 0.60000002 })
re.fc_door2.use_pnt_x = 2.57214
re.fc_door2.use_pnt_y = -4.0476298
re.fc_door2.use_pnt_z = -3.4000001
re.fc_door2.use_rot_x = 0
re.fc_door2.use_rot_y = -183.705
re.fc_door2.use_rot_z = 0
re.fc_door2.out_pnt_x = 2.506
re.fc_door2.out_pnt_y = -5.0750999
re.fc_door2.out_pnt_z = -3.4000001
re.fc_door2.out_rot_x = 0
re.fc_door2.out_rot_y = -183.705
re.fc_door2.out_rot_z = 0
re.fc_door2:make_untouchable()
re.fc_door2.walkOut = function(arg1) -- line 641
    start_script(re.see_cactus, arg1)
end
re.ri_door = Object:create(re, "/retx078/door", -1.46644, 0.210143, 0.31779999, { range = 0.80000001 })
re.ri_door.use_pnt_x = -1.46644
re.ri_door.use_pnt_y = -0.352357
re.ri_door.use_pnt_z = -0.13
re.ri_door.use_rot_x = 0
re.ri_door.use_rot_y = -359.17401
re.ri_door.use_rot_z = 0
re.ri_door.out_pnt_x = -1.47202
re.ri_door.out_pnt_y = 0.025
re.ri_door.out_pnt_z = -0.13
re.ri_door.out_rot_x = 0
re.ri_door.out_rot_y = -359.17401
re.ri_door.out_rot_z = 0
re.ri_door:make_untouchable()
re.ri_door.walkOut = function(arg1) -- line 668
    ri:come_out_door(ri.re_door)
end
re.ri_door.use = re.ri_door.walkOut
rf_ha_pigeons_pigeon_loop1 = 0
rf_ha_pigeons_pigeon_loop2 = 1
rf_ha_pigeons_chore0 = 2
CheckFirstTime("rf.lua")
dofile("pigeon_idles.lua")
dofile("ma_crumble_bread.lua")
rf = Set:create("rf.set", "Roof", { rf_nstoh = 0, rf_rufha = 1, rf_rufha2 = 1, rf_rufha3 = 1, rf_rufws = 2, rf_rufws2 = 2, rf_overhead = 3, rf_pigeon = 4 })
rf.camera_adjusts = { 320, 340, 25 }
rf.cheat_boxes = { rf_cheat_box_1 = 1, rf_cheat_box_2 = 2 }
rf.set_up_actors = function(arg1) -- line 34
    if not ma_crumble_bread_cos then
        ma_crumble_bread_cos = "ma_crumble_bread.cos"
    end
    rf.escape_point_1:set_object_state("le_copals_windows.cos")
    rf.escape_point_2:set_object_state("le_open_doms_window.cos")
    rf.escape_point_1.interest_actor:play_chore(0)
    rf.escape_point_2.interest_actor:complete_chore(0)
    rf.escape_point_1.touchable = FALSE
    rf.escape_point_2.touchable = FALSE
    if rf.pigeons_gone then
        MakeSectorActive("bird_threshhold", TRUE)
        MakeSectorActive("rf_nstoh", TRUE)
        rf.pigeons1:stop_chore(0)
        rf.pigeons1:play_chore(1)
        rf.pigeons1:make_untouchable()
        rf.pigeons2:make_untouchable()
        rf.pigeons3:make_untouchable()
    else
        rf.init_pigeons()
        rf.pigeons1:set_object_state("pigeon_os.cos")
        rf.pigeons1:play_chore_looping(0)
        MakeSectorActive("bird_threshhold", FALSE)
        MakeSectorActive("rf_nstoh", FALSE)
    end
    if not rf.egg_actor then
        rf.egg_actor = Actor:create(nil, nil, nil, "egg_actor")
        rf.egg_actor1 = Actor:create(nil, nil, nil, "egg_actor")
        rf.egg_actor2 = Actor:create(nil, nil, nil, "egg_actor")
        rf.egg_actor3 = Actor:create(nil, nil, nil, "egg_actor")
    end
    if rf.eggs.owner ~= manny then
        rf.egg_actor:put_in_set(rf)
        rf.egg_actor:setpos(-13.43, 11.2, 4.28)
        rf.egg_actor:setrot(0, -334.498, 0)
        rf.egg_actor:set_costume("eggs.cos")
    end
    rf.egg_actor1:put_in_set(rf)
    rf.egg_actor1:setpos(-13.4255, 11.3217, 4.3)
    rf.egg_actor1:setrot(0, 210, 0)
    rf.egg_actor1:set_costume("eggs.cos")
    rf.egg_actor2:put_in_set(rf)
    rf.egg_actor2:setpos(-13.5055, 11.3117, 4.29)
    rf.egg_actor2:setrot(0, 90, 0)
    rf.egg_actor2:set_costume("eggs.cos")
    rf.egg_actor3:put_in_set(rf)
    rf.egg_actor3:setpos(-13.4602, 11.245, 4.31)
    rf.egg_actor3:setrot(0, -334.498, 0)
    rf.egg_actor3:set_costume("eggs.cos")
end
rf.balloon_placement = { }
rf.balloon_placement.cat = { }
rf.balloon_placement.dingo = { }
rf.balloon_placement.frost = { }
rf.balloon_placement["cat"].x = -11.3502
rf.balloon_placement["cat"].y = 7.77496
rf.balloon_placement["cat"].z = 3.8199999
rf.balloon_placement["cat"].cos = "cat_balloon.cos"
rf.balloon_placement["cat"]["r"] = -54.182598
rf.balloon_placement["dingo"].x = -11.3502
rf.balloon_placement["dingo"].y = 7.77496
rf.balloon_placement["dingo"].z = 3.77
rf.balloon_placement["dingo"]["r"] = -57.493099
rf.balloon_placement["dingo"].cos = "dingo_balloon.cos"
rf.balloon_placement["frost"].x = -11.3802
rf.balloon_placement["frost"].y = 7.7449598
rf.balloon_placement["frost"].z = 3.8199999
rf.balloon_placement["frost"]["r"] = -57.493099
rf.balloon_placement["frost"].cos = "frost_balloon.cos"
rf.update_states = function(arg1) -- line 127
    local local1
    if not dish_item_actor then
        dish_item_actor = Actor:create(nil, nil, nil, "dish item")
    end
    if rf.dish.contains then
        if rf.dish.contains == fe.balloon_cat then
            local1 = "cat"
        elseif rf.dish.contains == fe.balloon_dingo then
            local1 = "dingo"
        elseif rf.dish.contains == fe.balloon_frost then
            local1 = "frost"
        end
        dish_item_actor:set_costume(rf.balloon_placement[local1].cos)
        dish_item_actor:put_in_set(rf)
        dish_item_actor:setpos(rf.balloon_placement[local1].x, rf.balloon_placement[local1].y, rf.balloon_placement[local1].z)
        dish_item_actor:setrot(0, rf.balloon_placement[local1].r, 0)
        dish_item_actor:scale(0.80000001)
        dish_item_actor:set_colormap("items_more.cmp")
    else
        dish_item_actor:free()
    end
    if rf.pigeons_gone then
        MakeSectorActive("bird_threshhold", TRUE)
        MakeSectorActive("rf_nstoh", TRUE)
        rf.pigeons1.touchable = FALSE
        rf.pigeons2.touchable = FALSE
        rf.pigeons3.touchable = FALSE
        rf.pigeons1:stop_chore(0)
        rf.pigeons1:play_chore(1)
    else
        rf.pigeons1.touchable = TRUE
        rf.pigeons2.touchable = TRUE
        rf.pigeons3.touchable = TRUE
        rf.pigeons1:play_chore_looping(0)
    end
end
rf.pigeon_liftoff = function(arg1) -- line 174
    while 1 do
        arg1:offsetBy(0, 0, rnd(0.008, 0.03))
        break_here()
    end
end
rf.pigeon_mover = function(arg1) -- line 181
    local local1 = 0
    local local2 = { }
    arg1.costume_marker_handler = nil
    arg1:play_chore_looping(pigeon_idles_fly_cycle)
    sleep_for(rnd(500, 1000))
    repeat
        arg1:setpos(-1, 4.5, 4.54)
        local2 = arg1:getpos()
        PointActorAt(arg1.hActor, 4.1999998, rnd(3.5, 6), 4.54)
        arg1:play_sound_at("flockFly.wav")
        while local2.x <= 2 do
            arg1:walk_forward()
            break_here()
            local2 = arg1:getpos()
        end
        local1 = local1 + 1
    until local1 == 3
end
rf.pigeons_eat_bread = function() -- line 201
    local local1 = 1
    START_CUT_SCENE()
    cur_puzzle_state[9] = TRUE
    if rf.dish_contains then
        rf.dish_contains:free()
    end
    rf.pigeons_gone = TRUE
    rf.dish.contains = nil
    stop_script(rf.pigeon_brain)
    stop_script(rf.pigeon_attack)
    stop_script(rf.fly_fly_fly)
    stop_script(rf.pigeon_eat)
    stop_script(rf.turn_toward_home)
    stop_script(bird_climb)
    stop_script(rf.pigeon_walk)
    stop_sound("flockeat.imu")
    sleep_for(100)
    start_sfx("bloonpop.wav")
    prop_pigeon:stop_chore(nil)
    prop_pigeon:push_chore(pigeon_idles_scared_takeoff)
    prop_pigeon:push_chore()
    dish_item_actor:free()
    start_script(rf.pigeon_liftoff, prop_pigeon)
    repeat
        pigeons[local1]:stop_chore(nil)
        pigeons[local1]:play_chore(pigeon_idles_scared_takeoff)
        sleep_for(rnd(50, 150))
        start_script(rf.pigeon_liftoff, pigeons[local1])
        local1 = local1 + 1
    until local1 > rf.NUMBER_OF_PIGEONS
    local1 = 1
    sleep_for(1500)
    prop_pigeon:stop_chore(nil)
    prop_pigeon:put_in_set(nil)
    stop_script(rf.pigeon_liftoff)
    le:init_ropes()
    rf.pigeons1:stop_chore(0)
    rf.pigeons1:play_chore(1)
    rf:current_setup(rf_pigeon)
    local1 = 1
    repeat
        pigeons[local1]:stop_chore(nil)
        pigeons[local1]:set_walk_rate(rnd(1, 2))
        start_script(rf.pigeon_mover, pigeons[local1])
        local1 = local1 + 1
    until local1 > rf.NUMBER_OF_PIGEONS
    sleep_for(6000)
    rf:set_up_actors()
    rf:current_setup(rf_rufws)
    rf.pigeons1:stop_chore(0)
    rf.pigeons1:play_chore(1)
    stop_script(rf.pigeon_mover)
    local1 = 1
    repeat
        pigeons[local1]:stop_chore(nil)
        pigeons[local1]:put_in_set(nil)
        local1 = local1 + 1
    until local1 > rf.NUMBER_OF_PIGEONS
    break_here()
    rf.sky:make_touchable()
    manny:head_look_at(rf.sky)
    wait_for_message()
    music_state:set_sequence(seqLedgepeckers)
    sleep_for(3000)
    manny:say_line("/rfma054/")
    wait_for_message()
    rf.pigeons1:free_object_state()
    rf.sky:make_untouchable()
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
rf.show_eggs = function(arg1) -- line 296
    local local1 = 1
    START_CUT_SCENE()
    set_override(rf.show_eggs_override, rf)
    rf:current_setup(rf_nstoh)
    local1 = 1
    repeat
        pigeons[local1]:moveto(rnd(-13, -12.575), rnd(10.35, 11), 3.72)
        local1 = local1 + 1
    until local1 > rf.NUMBER_OF_PIGEONS
    sleep_for(3000)
    rf:current_setup(rf_rufha)
    break_here()
    local1 = 1
    repeat
        pigeons[local1]:setpos(-1 * rnd(12.575, 13.925), rnd(9.8249998, 11), 3.72)
        local1 = local1 + 1
    until local1 > rf.NUMBER_OF_PIGEONS
    END_CUT_SCENE()
end
rf.show_eggs_override = function(arg1) -- line 321
    local local1 = 1
    repeat
        pigeons[local1]:setpos(-1 * rnd(12.575, 13.925), rnd(9.8249998, 11), 3.72)
        local1 = local1 + 1
    until local1 > rf.NUMBER_OF_PIGEONS
end
rf.show_eggs_override = function(arg1, arg2) -- line 329
    rf:current_setup(rf_rufha)
    local local1 = 1
    repeat
        pigeons[local1]:set_chore_looping(pigeon_idles_pecking, FALSE)
        pigeons[local1]:set_chore_looping(pigeon_idles_jump_for_turn, FALSE)
        local1 = local1 + 1
    until local1 > rf.NUMBER_OF_PIGEONS
    if arg2 then
        kill_override()
    end
end
BZ_X = -13.25
BZ_7 = 10.45
BZ_Z = 3.72
rf.NUMBER_OF_PIGEONS = 7
FLY_SPEED = 0.80000001
PIGEON_GLIDE_SPEED = 0.5
PIGEON_WALK_SPEED = 0.1
pigeons = { }
birdidle = { }
birdidle[1] = pigeon_idles_pecking
birdidle[2] = pigeon_idles_lead_to_walk
birdidle[3] = pigeon_idles_jump_for_turn
birdidle[4] = pigeon_idles_head_turns
rf.all_pigeons_pecking = nil
rf.kill_pigeons = nil
rf.seen_birds = nil
rf.no_attack_manny = FALSE
rf.default_pigeon = function(arg1, arg2) -- line 383
    arg1:set_costume("pigeon_idles.cos")
    arg1:set_colormap("pigeons.cmp")
    arg1:set_walk_rate(PIGEON_WALK_SPEED)
    arg1:set_turn_rate(90)
    arg1:ignore_boxes()
end
rf.pigeon_walk = function(arg1) -- line 398
    arg1:play_chore(pigeon_idles_lead_to_walk)
    arg1:wait_for_chore()
    arg1:play_chore(pigeon_idles_walk_cycle)
    while arg1:is_choring() do
        arg1:walk_forward()
        break_here()
    end
    arg1:play_chore(pigeon_idles_stopwalk_cycle)
    while arg1:is_choring() do
        arg1:walk_forward()
        break_here()
    end
    if not arg1:find_sector_name("bird_zone") then
        repeat
            PointActorAt(arg1.hActor, arg1.start_pnt.x, arg1.start_pnt.y, arg1.start_pnt.z)
            arg1:play_chore(pigeon_idles_lead_to_walk)
            arg1:wait_for_chore()
            arg1:play_chore(pigeon_idles_walk_cycle)
            while arg1:is_choring() do
                arg1:walk_forward()
                break_here()
            end
            arg1:play_chore(pigeon_idles_stopwalk_cycle)
            while arg1:is_choring() do
                arg1:walk_forward()
                break_here()
            end
        until arg1:find_sector_name("bird_zone")
    end
end
rf.turn_toward_home = function(arg1) -- line 439
    arg1:set_turn_rate(90)
    while TurnActorTo(arg1.hActor, arg1.start_pnt.x, arg1.start_pnt.y, arg1.start_pnt.z) do
        arg1:walk_forward()
        break_here()
    end
    while 1 do
        arg1:walk_forward()
        break_here()
    end
end
rf.fly_fly_fly = function(arg1) -- line 461
    arg1:set_turn_rate(250)
    while 1 do
        while TurnActorTo(arg1.hActor, manny.hActor) do
            arg1:walk_forward()
            if proximity(arg1, manny) < 0.65 then
                if not find_script(rf.manny_flee) then
                    start_script(rf.manny_flee)
                end
            end
            break_here()
        end
        arg1:walk_forward()
        break_here()
    end
end
rf.pigeon_attack = function(arg1) -- line 488
    local local1
    local local2
    local local3 = { }
    if not inventory_disabled then
        inventory_disabled = TRUE
    end
    arg1:set_walk_rate(FLY_SPEED)
    local1 = start_script(rf.fly_fly_fly, arg1)
    foo2 = start_script(bird_climb, arg1, arg1.height, 1.6, pigeon_idles_scared_takeoff)
    wait_for_script(foo2)
    arg1:play_chore_looping(pigeon_idles_fly_cycle)
    while manny:find_sector_name("attack_zone") or manny:find_sector_name("attack_box") do
        break_here()
    end
    stop_sound("rfPigMus.imu")
    if inventory_disabled then
        inventory_disabled = FALSE
    end
    repeat
        local3 = arg1:getpos()
        local2 = sqrt((local3.x - arg1.start_pnt.x) ^ 2 + (local3.y - arg1.start_pnt.y) ^ 2 + (1 - 1) ^ 2)
        break_here()
    until local2 > 2
    stop_script(local1)
    local1 = start_script(rf.turn_toward_home, arg1)
    arg1:set_chore_looping(pigeon_idles_fly_cycle, FALSE)
    arg1:wait_for_chore()
    SetActorWalkRate(arg1.hActor, PIGEON_GLIDE_SPEED)
    arg1:play_chore(pigeon_idles_glide_hook_up)
    arg1:wait_for_chore()
    arg1:play_chore_looping(pigeon_idles_glide)
    repeat
        local3 = arg1:getpos()
        local2 = sqrt((local3.x - arg1.start_pnt.x) ^ 2 + (local3.y - arg1.start_pnt.y) ^ 2 + (1 - 1) ^ 2)
        if local3.z > 3.95 then
            arg1:setpos(local3.x, local3.y, local3.z - 0.0040000002)
        end
        break_here()
    until local2 < 1
    arg1:set_chore_looping(pigeon_idles_glide, FALSE)
    foo2 = start_script(bird_climb, arg1, arg1.start_pnt.z, 1, pigeon_idles_landing)
    wait_for_script(foo2)
    stop_script(local1)
    local3 = arg1:getpos()
    arg1:setpos(local3.x, local3.y, BZ_Z)
    arg1:set_walk_rate(PIGEON_WALK_SPEED)
end
rf.turn_to_food = function(arg1) -- line 558
    arg1:set_turn_rate(250)
    while TurnActorTo(arg1.hActor, arg1.eat_pnt.x, arg1.eat_pnt.y, arg1.eat_pnt.z) do
        arg1:walk_forward()
        break_here()
    end
    while 1 do
        arg1:walk_forward()
        break_here()
    end
end
rf.pigeon_eat = function(arg1) -- line 577
    local local1, local2
    local local3
    local local4 = { }
    local local5
    local local6
    local local7 = FALSE
    arg1.height = 4.0999999
    arg1:set_walk_rate(FLY_SPEED)
    local1 = start_script(rf.turn_to_food, arg1)
    local2 = start_script(bird_climb, arg1, arg1.height, 1.6, pigeon_idles_scared_takeoff)
    wait_for_script(local2)
    arg1:play_chore_looping(pigeon_idles_fly_cycle)
    repeat
        local4 = arg1:getpos()
        local3 = sqrt((local4.x - arg1.eat_pnt.x) ^ 2 + (local4.y - arg1.eat_pnt.y) ^ 2)
        break_here()
    until local3 < 1.5
    stop_script(local1)
    local4 = arg1:getpos()
    while local3 >= 0.050000001 do
        if not TurnActorTo(arg1.hActor, arg1.eat_pnt.x, arg1.eat_pnt.y, arg1.eat_pnt.z) then
            PointActorAt(arg1.hActor, arg1.eat_pnt.x, arg1.eat_pnt.y, arg1.eat_pnt.z)
        end
        local3 = sqrt((local4.x - arg1.eat_pnt.x) ^ 2 + (local4.y - arg1.eat_pnt.y) ^ 2)
        local5 = tan(15) * local3
        local5 = local5 + arg1.eat_pnt.z
        local6 = GetActorWalkRate(arg1.hActor)
        if local6 >= local3 then
            if not local7 then
                local7 = TRUE
                arg1:stop_chore(pigeon_idles_fly_cycle)
                arg1:play_chore(pigeon_idles_landing)
            end
        end
        if PerSecond(local6) > local3 then
            arg1:set_walk_rate(local3)
        end
        arg1:walk_forward()
        local4 = arg1:getpos()
        arg1:setpos(local4.x, local4.y, local5)
        break_here()
        if local7 and not arg1:is_choring(pigeon_idles_landing) then
            arg1:setpos(arg1.eat_pnt.x, arg1.eat_pnt.y, arg1.eat_pnt.z)
            arg1:setrot(arg1.eat_rot.x, arg1.eat_rot.y, arg1.eat_rot.z)
        end
    end
    arg1:setpos(arg1.eat_pnt.x, arg1.eat_pnt.y, arg1.eat_pnt.z)
    arg1:setrot(arg1.eat_rot.x, arg1.eat_rot.y, arg1.eat_rot.z)
    arg1:wait_for_chore()
    arg1:play_chore_looping(pigeon_idles_pecking)
    arg1.eating = TRUE
    while not rf.all_pigeons_pecking do
        break_here()
    end
    arg1:set_chore_looping(pigeon_idles_pecking, FALSE)
    arg1:wait_for_chore()
    arg1.height = arg1.height + 0.0099999998
    local1 = start_script(rf.pigeon_attack, arg1)
    wait_for_script(local1)
    arg1.eating = FALSE
end
rf.wait_for_pigeons = function() -- line 660
    local local1 = 1
    local local2 = 0
    local local3
    rf.all_pigeons_pecking = FALSE
    repeat
        if pigeons[local1].eating then
            if local1 == 1 then
                start_sfx("flockeat.imu")
                local3 = start_script(rf.diminish_bread_pile)
            end
            local1 = local1 + 1
        else
            break_here()
        end
        local2 = local2 + 1
    until local1 > rf.NUMBER_OF_PIGEONS or local2 > 500
    if not local3 then
        local3 = start_script(rf.diminish_bread_pile)
    end
    wait_for_script(local3)
    rf.all_pigeons_pecking = TRUE
    rf.dish_contains = nil
    if rf.kill_pigeons then
        stop_script(rf.pigeon_brain)
        stop_script(rf.pigeon_eat)
        stop_script(rf.pigeon_attack)
        start_script(rf.pigeons_eat_bread)
    end
end
pigeon_coo_sfx = { "pigeon1.wav", "pigeon2.wav", "pigeon3.wav", "pigeon4.wav", "pigeon5.wav", "pigeon6.wav", "pigeon7.wav", "pigeon8.wav" }
rf.pigeon_brain = function(arg1) -- line 703
    local local1
    local local2
    local local3
    arg1.start_pnt = arg1:getpos()
    break_here()
    while TRUE do
        if manny:find_sector_name("attack_zone") or manny:find_sector_name("attack_box") and not rf.no_attack_manny then
            single_start_sfx("rfPigMus.imu")
            arg1.height = arg1.start_pnt.z + rnd(0.51999998, 0.62)
            local2 = start_script(rf.pigeon_attack, arg1)
            wait_for_script(local2)
            arg1:play_chore(pigeon_idles_standing)
        elseif find_script(rf.wait_for_pigeons) then
            local2 = start_script(rf.pigeon_eat, arg1)
            wait_for_script(local2)
            rf:update_states()
        else
            local1 = pick_from_nonweighted_table(birdidle)
            if local1 == pigeon_idles_lead_to_walk then
                local2 = start_script(rf.pigeon_walk, arg1)
                wait_for_script(local2)
            elseif local1 == pigeon_idles_jump_for_turn then
                if rnd() then
                    arg1:turn_right(90)
                else
                    arg1:turn_left(90)
                end
            end
            if rnd() then
                local3 = pick_one_of(pigeon_coo_sfx, TRUE)
                if rnd() then
                    single_start_sfx(local3)
                end
            end
            arg1:play_chore(local1)
            arg1:wait_for_chore()
        end
    end
end
rf.init_pigeons = function() -- line 764
    local local1 = 0
    local local2
    repeat
        local1 = local1 + 1
        if not pigeons[local1] then
            pigeons[local1] = Actor:create(nil, nil, nil, "pigeon" .. local1)
        end
        pigeons[local1].costume_marker_handler = bird_sound_monitor
        pigeons[local1].eat_pnt = { }
        pigeons[local1].eat_rot = { }
        pigeons[local1].start_pnt = { }
        if local1 == 1 then
            pigeons[local1].eat_pnt.x = -11.4224
            pigeons[local1].eat_pnt.y = 7.7199998
            pigeons[local1].eat_pnt.z = 3.8
            pigeons[local1].eat_rot.x = 0
            pigeons[local1].eat_rot.y = -123.455
            pigeons[local1].eat_rot.z = 0
        elseif local1 == 2 then
            pigeons[local1].eat_pnt.x = -11.4524
            pigeons[local1].eat_pnt.y = 7.8200002
            pigeons[local1].eat_pnt.z = 3.8
            pigeons[local1].eat_rot.x = 0
            pigeons[local1].eat_rot.y = -89.845901
            pigeons[local1].eat_rot.z = 0
        elseif local1 == 3 then
            pigeons[local1].eat_pnt.x = -11.4324
            pigeons[local1].eat_pnt.y = 7.77
            pigeons[local1].eat_pnt.z = 3.8
            pigeons[local1].eat_rot.x = 0
            pigeons[local1].eat_rot.y = -56.6021
            pigeons[local1].eat_rot.z = 0
        elseif local1 == 4 then
            pigeons[local1].eat_pnt.x = -11.3824
            pigeons[local1].eat_pnt.y = 7.9099998
            pigeons[local1].eat_pnt.z = 3.8
            pigeons[local1].eat_rot.x = 0
            pigeons[local1].eat_rot.y = -89.845901
            pigeons[local1].eat_rot.z = 0
        elseif local1 == 5 then
            pigeons[local1].eat_pnt.x = -11.3024
            pigeons[local1].eat_pnt.y = 7.9000001
            pigeons[local1].eat_pnt.z = 3.8
            pigeons[local1].eat_rot.x = 0
            pigeons[local1].eat_rot.y = -123.455
            pigeons[local1].eat_rot.z = 0
        elseif local1 == 6 then
            pigeons[local1].eat_pnt.x = -11.3024
            pigeons[local1].eat_pnt.y = 7.9000001
            pigeons[local1].eat_pnt.z = 3.8
            pigeons[local1].eat_rot.x = 0
            pigeons[local1].eat_rot.y = -123.455
            pigeons[local1].eat_rot.z = 0
        elseif local1 == 7 then
            pigeons[local1].eat_pnt.x = -11.3024
            pigeons[local1].eat_pnt.y = 7.9000001
            pigeons[local1].eat_pnt.z = 3.8
            pigeons[local1].eat_rot.x = 0
            pigeons[local1].eat_rot.y = -123.455
            pigeons[local1].eat_rot.z = 0
        end
        rf.default_pigeon(pigeons[local1], local1)
        pigeons[local1].start_pnt.x = nil
        pigeons[local1].start_pnt.y = nil
        pigeons[local1].start_pnt.z = nil
        pigeons[local1].height = nil
        pigeons[local1].eating = nil
        pigeons[local1]:put_in_set(rf)
        pigeons[local1]:setpos(-1 * rnd(12.575, 13.925), rnd(9.8249998, 11), BZ_Z)
        start_script(rf.pigeon_brain, pigeons[local1])
    until local1 == rf.NUMBER_OF_PIGEONS
    if not prop_pigeon then
        prop_pigeon = Actor:create(nil, nil, nil, "prop pigeon")
    end
    rf.default_pigeon(prop_pigeon, 6)
    prop_pigeon:put_in_set(rf)
    prop_pigeon:setpos(-13.4947, 11.19, 4.6799998)
    prop_pigeon:setrot(0, -179.218, 0)
    prop_pigeon:play_chore_looping(pigeon_idles_pecking)
end
rf.manny_flee = function() -- line 859
    local local1, local2
    stop_script(monitor_run)
    START_CUT_SCENE()
    manny:set_walk_backwards(FALSE)
    manny:set_turn_rate(360)
    rf.pigeons1.count = rf.pigeons1.count + 1
    if rf.pigeons1.count == 1 then
        manny:say_line("/rfma044/")
    elseif rf.pigeons1.count == 2 then
        manny:say_line("/rfma045/")
    elseif rf.pigeons1.count == 3 then
        manny:say_line("/rfma046/")
    elseif rf.pigeons1.count == 4 then
        manny:say_line("/rfma047/")
    elseif rf.pigeons1.count == 5 then
        manny:say_line("/rfma048/")
    elseif rf.pigeons1.count == 6 then
        manny:say_line("/rfma049/")
    else
        manny:say_line("/rfma050/")
    end
    local1 = object_proximity(rf.escape_point_1)
    local2 = object_proximity(rf.escape_point_2)
    if local1 <= local2 then
        local2 = object_proximity(rf.escape_point_3)
        if local1 <= local2 then
            manny:runto(rf.escape_point_1.use_pnt_x, rf.escape_point_1.use_pnt_y, rf.escape_point_1.use_pnt_z)
        else
            manny:runto(rf.escape_point_3.use_pnt_x, rf.escape_point_3.use_pnt_y, rf.escape_point_3.use_pnt_z)
        end
    else
        local2 = object_proximity(rf.escape_point_4)
        if local1 <= local2 then
            manny:runto(rf.escape_point_2.use_pnt_x, rf.escape_point_2.use_pnt_y, rf.escape_point_2.use_pnt_z)
        else
            manny:runto(rf.escape_point_4.use_pnt_x, rf.escape_point_4.use_pnt_y, rf.escape_point_4.use_pnt_z)
        end
    end
    fade_sfx("rfPigMus.imu")
    manny:wait_for_actor()
    manny:set_run(FALSE)
    manny:wait_for_message()
    break_here()
    manny:turn_toward_entity(rf.pigeons1)
    END_CUT_SCENE()
    if inventory_disabled then
        inventory_disabled = FALSE
    end
end
rf.manny_follow_birds = function() -- line 916
    while 1 do
        manny:head_look_at(pigeons[1])
        break_here()
    end
end
rf.grow_bread_pile = function() -- line 929
    local local1 = 0.1
    local local2 = { }
    if not bread_pile_actor then
        bread_pile_actor = Actor:create(nil, nil, nil, "bread pile actor")
    end
    bread_pile_actor:put_in_set(rf)
    bread_pile_actor:set_costume("bread_pile.cos")
    bread_pile_actor:setpos(-11.3908, 7.7994599, 3.76)
    bread_pile_actor:setrot(0, 0, 0)
    bread_pile_actor:scale(local1)
    repeat
        local2 = bread_pile_actor:getpos()
        local1 = local1 + PerSecond(0.21250001)
        local2.z = local2.z + PerSecond(0.003)
        bread_pile_actor:scale(local1)
        bread_pile_actor:setpos(local2.x, local2.y, local2.z)
        break_here()
    until local1 >= 1.7
end
rf.diminish_bread_pile = function() -- line 954
    local local1 = 1.7
    local local2 = { }
    repeat
        local2 = bread_pile_actor:getpos()
        local1 = local1 - PerSecond(0.42500001)
        local2.z = local2.z - PerSecond(0.0060000001)
        SetActorScale(bread_pile_actor.hActor, local1)
        bread_pile_actor:setpos(local2.x, local2.y, local2.z)
        break_here()
    until local1 <= 0.1
    stop_sound("flockeat.imu")
    bread_pile_actor:free()
end
rf.enter = function(arg1) -- line 978
    LoadCostume("ma_crumble_bread.cos")
    NewObjectState(rf_rufws, OBJSTATE_UNDERLAY, "flock_ws_comp.bm", nil, TRUE)
    NewObjectState(rf_rufws, OBJSTATE_UNDERLAY, "flock_ws1_comp.bm", nil, TRUE)
    NewObjectState(rf_rufha, OBJSTATE_UNDERLAY, "flock_ha_comp.bm", nil, TRUE)
    NewObjectState(rf_pigeon, OBJSTATE_OVERLAY, "le_cl_.bm")
    manny.footsteps = footsteps.gravel
    manny:put_in_set(rf)
    rf:set_up_actors()
    rf:update_states()
    rf:camerachange()
    SetShadowColor(15, 15, 15)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 1000, 1000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
end
rf.exit = function(arg1) -- line 1002
    local local1 = 1
    stop_script(rf.pigeon_brain)
    stop_script(rf.pigeon_attack)
    stop_script(rf.fly_fly_fly)
    stop_script(rf.pigeon_eat)
    stop_script(rf.turn_toward_home)
    stop_script(bird_climb)
    stop_script(rf.pigeon_walk)
    prop_pigeon:free()
    repeat
        pigeons[local1]:free()
        local1 = local1 + 1
    until local1 > rf.NUMBER_OF_PIGEONS
    KillActorShadows(manny.hActor)
    rf.pigeons1:free_object_state()
    rf.pigeons2:free_object_state()
    rf.pigeons3:free_object_state()
    dish_item_actor:free()
    rf.egg_actor:free()
    rf.egg_actor1:free()
    rf.egg_actor2:free()
    rf.egg_actor3:free()
    rf.escape_point_1:free_object_state()
    rf.escape_point_2:free_object_state()
end
rf.ladder_object = Object:create(rf, "/rftx002/ladder", -4.2644401, 3.6105299, 4.6999998, { range = 0 })
rf.rf_ladder_box = rf.ladder_object
rf.ladder_object.use_pnt_x = -2.306
rf.ladder_object.use_pnt_y = 4.7729998
rf.ladder_object.use_pnt_z = 3.72
rf.ladder_object.use_rot_x = 0
rf.ladder_object.use_rot_y = -545.13
rf.ladder_object.use_rot_z = 0
rf.ladder_object.out_pnt_x = -2.3640001
rf.ladder_object.out_pnt_y = 4.138
rf.ladder_object.out_pnt_z = 3.72
rf.ladder_object.out_rot_x = 0
rf.ladder_object.out_rot_y = -545.13
rf.ladder_object.out_rot_z = 0
rf.ladder_object.walkOut = function(arg1) -- line 1061
    manny:clear_hands()
    le:switch_to_set()
    manny:put_in_set(le)
    le:current_setup(le_alloh)
    manny:follow_boxes()
    manny:setpos(le.rope_up.use_pnt_x, le.rope_up.use_pnt_y, le.rope_up.use_pnt_z)
    manny:setrot(le.rope_up.use_rot_x, le.rope_up.use_rot_y, le.rope_up.use_rot_z)
end
rf.dish = Object:create(rf, "", -11.5502, 7.79496, 3.72, { range = 1 })
rf.dish.use_pnt_x = -11.55
rf.dish.use_pnt_y = 7.7964301
rf.dish.use_pnt_z = 3.72
rf.dish.use_rot_x = 0
rf.dish.use_rot_y = -88.131897
rf.dish.use_rot_z = 0
rf.dish.contains = nil
rf.dish.walk_to_me = function(arg1) -- line 1084
    local local1
    local local2 = 9999
    START_CUT_SCENE()
    repeat
        TurnActorTo(manny.hActor, -11.36, 7.7849598, 3.72)
        local1 = local2
        manny:walk_forward()
        break_here()
        local2 = point_proximity(-11.325, 7.8000002, 3.72)
    until local2 >= local1
    while TurnActorTo(manny.hActor, -11.36, 7.7849598, 3.72) do
        break_here()
    end
    END_CUT_SCENE()
end
rf.dish.lookAt = function(arg1) -- line 1101
    if arg1.contains == nil then
        if rf.pigeons_gone then
            manny:say_line("/rfma004/")
        else
            manny:say_line("/rfma005/")
        end
    elseif arg1.contains == fe.balloon_cat or arg1.contains == fe.balloon_dingo or arg1.contains == fe.balloon_frost then
        manny:say_line("/rfma006/")
    else
        manny:say_line("/rfma007/")
    end
end
rf.dish.pickUp = function(arg1) -- line 1116
    local local1 = arg1.contains
    local local2
    if arg1.contains then
        START_CUT_SCENE()
        arg1:walk_to_me()
        if local1 == fe.balloon_cat then
            local2 = ms_activate_cat_balloon
        elseif local1 == fe.balloon_dingo then
            local2 = ms_activate_dingo_balloon
        elseif local1 == fe.balloon_frost then
            local2 = ms_activate_frost_balloon
        end
        manny:play_chore(ms_reach_med, "ms.cos")
        sleep_for(603)
        arg1.contains:get()
        arg1.contains = nil
        rf:update_states()
        manny:play_chore_looping(local2, "ms.cos")
        manny:play_chore_looping(ms_hold, "ms.cos")
        manny.is_holding = local1
        manny.hold_chore = local2
        manny:wait_for_chore(ms_reach_med, "ms.cos")
        manny:stop_chore(ms_reach_med, "ms.cos")
        END_CUT_SCENE()
    else
        manny:say_line("/rfma008/")
    end
end
rf.dish.use = function(arg1) -- line 1147
    arg1:walk_to_me()
    if arg1.contains then
        arg1:pickUp()
    else
        manny:say_line("/rfma009/")
    end
end
rf.dish.use_eggs = function(arg1) -- line 1157
    arg1:walk_to_me()
    manny:say_line("/rfma010/")
end
rf.dish.add_item = function(arg1, arg2) -- line 1162
    local local1 = arg1.contains
    local local2
    rf.no_attack_manny = TRUE
    arg1:walk_to_me()
    if not rf.pigeons_gone then
        if arg2 == fe.breads.bread1 or arg2 == fe.breads.bread2 or arg2 == fe.breads.bread3 or arg2 == fe.breads.bread4 or arg2 == fe.breads.bread5 then
            arg2:free()
            arg2.owner = fe.basket
            START_CUT_SCENE("no head")
            manny:stop_chore(ms_hold_bread, "ms.cos")
            manny:push_costume(ma_crumble_bread_cos)
            manny:play_chore(ma_crumble_bread_crumble_bread, ma_crumble_bread_cos)
            manny:play_sound_at("breadbrk.wav")
            manny:play_sound_at("breadpor.wav")
            start_script(rf.grow_bread_pile)
            manny:wait_for_chore(ma_crumble_bread_crumble_bread, ma_crumble_bread_cos)
            manny:pop_costume()
            manny.move_in_reverse = TRUE
            start_script(move_actor_backward, system.currentActor.hActor)
            sleep_for(1000)
            stop_script(move_actor_backward)
            system.currentActor:set_walk_backwards(FALSE)
            manny.move_in_reverse = FALSE
            manny:walkto(-11.9406, 7.3115101, 3.72)
            manny:wait_for_actor()
            manny:turn_toward_entity(rf.dish)
            start_script(rf.manny_follow_birds)
            if rf.dish.contains then
                rf.kill_pigeons = TRUE
            end
            rf.dish.foo = start_script(rf.wait_for_pigeons)
            wait_for_script(rf.dish.foo)
            wait_for_script(rf.pigeon_eat)
            stop_script(rf.manny_follow_birds)
            END_CUT_SCENE()
        else
            START_CUT_SCENE()
            if arg1.contains then
                if local1 == fe.balloon_cat then
                    local2 = ms_activate_cat_balloon
                elseif local1 == fe.balloon_dingo then
                    local2 = ms_activate_dingo_balloon
                elseif local1 == fe.balloon_frost then
                    local2 = ms_activate_frost_balloon
                end
                manny:stop_chore(ms_hold, "ms.cos")
                manny:play_chore(ms_reach_med, "ms.cos")
                sleep_for(603)
                arg2:free()
                arg1.contains:get()
                arg1.contains = arg2
                arg2.owner = rf.dish
                rf:update_states()
                manny:stop_chore(manny.hold_chore, "ms.cos")
                manny:play_chore_looping(local2, "ms.cos")
                manny:play_chore_looping(ms_hold, "ms.cos")
                manny.is_holding = local1
                manny.hold_chore = local2
                manny:wait_for_chore(ms_reach_med, "ms.cos")
            else
                manny:stop_chore(ms_hold, "ms.cos")
                manny:play_chore(ms_reach_med, "ms.cos")
                sleep_for(603)
                arg2:free()
                arg1.contains = arg2
                arg2.owner = rf.dish
                rf:update_states()
                manny:stop_chore(manny.hold_chore, "ms.cos")
                manny.hold_chore = nil
                manny.is_holding = nil
                manny:wait_for_chore(ms_reach_med, "ms.cos")
            end
            END_CUT_SCENE()
            if not rf.tried_scary_balloon then
                rf.tried_scary_balloon = TRUE
                manny:say_line("/rfma011/")
            end
        end
        rf.no_attack_manny = FALSE
    elseif arg2 == fe.breads.bread1 or arg2 == fe.breads.bread2 or arg2 == fe.breads.bread3 or arg2 == fe.breads.bread4 or arg2 == fe.breads.bread5 then
        arg2:default_response()
    else
        arg2:use()
    end
end
rf.dish.use_cat_balloon = function(arg1, arg2) -- line 1260
    arg1:add_item(arg2)
end
rf.dish.use_dingo_balloon = function(arg1, arg2) -- line 1264
    arg1:add_item(arg2)
end
rf.dish.use_frost_balloon = function(arg1, arg2) -- line 1268
    arg1:add_item(arg2)
end
rf.dish.use_bread = function(arg1, arg2) -- line 1272
    arg1:add_item(arg2)
end
rf.eggs = Object:create(rf, "/rftx012/eggs", 0, 0, 0, { range = 0 })
rf.eggs.lookAt = function(arg1) -- line 1281
    manny:say_line("/rfma013/")
end
rf.eggs.use = function(arg1) -- line 1285
    manny:say_line("/rfma014/")
end
rf.eggs.default_response = function(arg1) -- line 1289
    manny:say_line("/rfma015/")
end
rf.nest = Object:create(rf, "/rftx016/nest", -13.4724, 11.2718, 4.27, { range = 0.69999999 })
rf.nest.use_pnt_x = -13.4422
rf.nest.use_pnt_y = 11.0513
rf.nest.use_pnt_z = 3.72
rf.nest.use_rot_x = 0
rf.nest.use_rot_y = 12.124
rf.nest.use_rot_z = 0
rf.nest.contains = rf.eggs
rf.nest.use_eggs = function(arg1) -- line 1305
    manny:say_line("/rfma010/")
end
rf.nest.lookAt = function(arg1) -- line 1309
    if arg1.contains == rf.eggs then
        manny:say_line("/rfma017/")
    else
        manny:say_line("/rfma018/")
    end
end
rf.nest.pickUp = function(arg1) -- line 1317
    if arg1.contains == rf.eggs then
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        manny:say_line("/rfma019/")
        manny:play_chore(ms_reach_high, "ms.cos")
        sleep_for(1407)
        start_sfx("getEggs.wav")
        rf.egg_actor:free()
        arg1.contains = nil
        rf.eggs:get()
        rf.eggs.wav = "getEggs.wav"
        manny:play_chore_looping(ms_activate_eggs, "ms.cos")
        sleep_for(704)
        manny:play_chore_looping(ms_hold, "ms.cos")
        manny.hold_chore = ms_activate_eggs
        manny.is_holding = rf.eggs
        manny:wait_for_chore(ms_reach_high, "ms.cos")
        manny:stop_chore(ms_reach_high, "ms.cos")
        manny:head_look_at(nil)
        END_CUT_SCENE()
    else
        arg1:lookAt()
    end
end
rf.nest.use = rf.nest.pickUp
rf.pigeons1 = Object:create(rf, "/rftx021/pigeons", -13.3372, 10.6634, 3.72, { range = 3.5999999 })
rf.pigeons1.use_pnt_x = -10.4459
rf.pigeons1.use_pnt_y = 8.5341501
rf.pigeons1.use_pnt_z = 3.72
rf.pigeons1.use_rot_x = 0
rf.pigeons1.use_rot_y = -320.36401
rf.pigeons1.use_rot_z = 0
rf.pigeons1.look_count = 0
rf.pigeons1.count = 0
rf.pigeons1.lookAt = function(arg1) -- line 1362
    rf.pigeons1.look_count = rf.pigeons1.look_count + 1
    if rf.pigeons1.look_count == 1 then
        manny:say_line("/rfma022/")
    elseif rf.pigeons1.look_count == 2 then
        manny:say_line("/rfma023/")
    elseif rf.pigeons1.look_count == 3 then
        manny:say_line("/rfma024/")
    elseif rf.pigeons1.look_count == 4 then
        manny:say_line("/rfma025/")
    elseif rf.pigeons1.look_count == 5 then
        manny:say_line("/rfma026/")
    else
        arg1:use()
    end
end
rf.pigeons1.pickUp = function(arg1) -- line 1380
    manny:say_line("/rfma027/")
    if salvador.talked_pigeons then
        START_CUT_SCENE()
        wait_for_message()
        manny:say_line("/rfma028/")
        END_CUT_SCENE()
    end
end
rf.pigeons1.use = function(arg1) -- line 1391
    manny:say_line("/rfma029/")
end
rf.pigeons1.not_working = function(arg1) -- line 1395
    manny:say_line("/rfma030/")
    wait_for_message()
end
rf.pigeons1.use_cat_balloon = function(arg1) -- line 1400
    START_CUT_SCENE()
    fe.balloon_cat:use()
    wait_for_message()
    rf.pigeons1:not_working()
    manny:say_line("/rfma031/")
    END_CUT_SCENE()
end
rf.pigeons1.use_dingo_balloon = function(arg1) -- line 1409
    START_CUT_SCENE()
    fe.balloon_dingo:use()
    wait_for_message()
    manny:say_line("/rfma032/")
    END_CUT_SCENE()
end
rf.pigeons1.use_frost_balloon = function(arg1) -- line 1416
    START_CUT_SCENE()
    fe.balloon_frost:use()
    wait_for_message()
    manny:say_line("/rfma033/")
    END_CUT_SCENE()
end
rf.pigeons1.use_scythe = function(arg1) -- line 1437
    START_CUT_SCENE()
    manny:say_line("/rfma037/")
    wait_for_message()
    mo.scythe:use()
    sleep_for(500)
    manny:say_line("/rfma038/")
    END_CUT_SCENE()
end
rf.pigeons1.use_mouthpiece = function(arg1) -- line 1447
    manny:say_line("/rfma039/")
    wait_for_message()
    manny:say_line("/rfma040/")
    wait_for_message()
    manny:say_line("/rfma041/")
end
rf.pigeons1.use_bread = function(arg1) -- line 1455
    manny:say_line("/rfma042/")
end
rf.pigeons2 = Object:create(rf, "/rftx051/pigeons", -13.3372, 10.6634, 3.72, { range = 0 })
rf.pigeons2.use_pnt_x = -10.4459
rf.pigeons2.use_pnt_y = 8.5341501
rf.pigeons2.use_pnt_z = 3.72
rf.pigeons2.use_rot_x = 0
rf.pigeons2.use_rot_y = -320.36401
rf.pigeons2.use_rot_z = 0
rf.pigeons2.parent = rf.pigeons1
rf.pigeons3 = Object:create(rf, "/rftx051/pigeons", -13.3372, 10.6634, 3.72, { range = 0 })
rf.pigeons3.use_pnt_x = -10.4459
rf.pigeons3.use_pnt_y = 8.5341501
rf.pigeons3.use_pnt_z = 3.72
rf.pigeons3.use_rot_x = 0
rf.pigeons3.use_rot_y = -320.36401
rf.pigeons3.use_rot_z = 0
rf.pigeons3.parent = rf.pigeons1
rf.sky = Object:create(rf, "/rftx053/sky", -12.9724, 9.50179, 5.5999999, { range = 0.5 })
rf.sky.use_pnt_x = -10.83
rf.sky.use_pnt_y = 7.934
rf.sky.use_pnt_z = 3.72
rf.sky.use_rot_x = 0
rf.sky.use_rot_y = -303.345
rf.sky.use_rot_z = 0
rf.sky:make_untouchable()
rf.sky.lookAt = function(arg1) -- line 1493
end
rf.sky.pickUp = function(arg1) -- line 1496
end
rf.sky.use = function(arg1) -- line 1499
end
rf.escape_point_1 = Object:create(rf, "/rftx055/x", -10.1976, 9.35886, 3.72, { range = 0 })
rf.escape_point_1.use_pnt_x = -10.1976
rf.escape_point_1.use_pnt_y = 9.35886
rf.escape_point_1.use_pnt_z = 3.72
rf.escape_point_1.use_rot_x = 0
rf.escape_point_1.use_rot_y = -78.999199
rf.escape_point_1.use_rot_z = 0
rf.escape_point_2 = Object:create(rf, "/rftx056/x", -12.7606, 6.9607301, 3.72, { range = 0 })
rf.escape_point_2.use_pnt_x = -12.7606
rf.escape_point_2.use_pnt_y = 6.9607301
rf.escape_point_2.use_pnt_z = 3.72
rf.escape_point_2.use_rot_x = 0
rf.escape_point_2.use_rot_y = 200.63
rf.escape_point_2.use_rot_z = 0
rf.escape_point_3 = Object:create(rf, "", -10.5521, 7.8463898, 3.72, { range = 0 })
rf.escape_point_3.use_pnt_x = -10.5521
rf.escape_point_3.use_pnt_y = 7.8463898
rf.escape_point_3.use_pnt_z = 3.72
rf.escape_point_3.use_rot_x = 0
rf.escape_point_3.use_rot_y = -41.502998
rf.escape_point_3.use_rot_z = 0
rf.escape_point_3:make_untouchable()
rf.escape_point_4 = Object:create(rf, "", -11.4381, 6.9501801, 3.72, { range = 0 })
rf.escape_point_4.use_pnt_x = -11.4381
rf.escape_point_4.use_pnt_y = 6.9501801
rf.escape_point_4.use_pnt_z = 3.72
rf.escape_point_4.use_rot_x = 0
rf.escape_point_4.use_rot_y = -469.336
rf.escape_point_4.use_rot_z = 0
rf.escape_point_4:make_untouchable()
CheckFirstTime("ri.lua")
ri = Set:create("ri.set", "rubamat interior", { ri_intws = 0 })
dofile("celso_mop.lua")
ri.mop_point = { x = 3.37647, y = 0.436068, z = 0.3554 }
ri.manny_point = { x = 3.0706, y = 0.3254, z = 0.4624 }
mopvol = 20
ri.watch_costume_events = function() -- line 19
    local local1
    while 1 do
        if celso_mop_event then
            if celso_mop_event == 1 then
                local1 = pick_one_of({ "mopStrk1.wav", "mopStrk2.wav", "mopStrk3.wav", "mopStrk4.wav" })
                start_sfx(local1, 64, mopvol)
            end
            celso_mop_event = nil
        end
        break_here()
    end
end
celso.face_manny = function() -- line 34
    if find_script(celso.face_mop) then
        wait_for_script(celso.face_mop)
    end
    celso.facing_manny = TRUE
    celso:head_look_at_point(ri.manny_point)
    celso:stop_looping_chore(celso_mop_mop_loop, "celso_mop.cos")
    celso:run_chore(celso_mop_to_talk, "celso_mop.cos")
    celso:head_look_at_point(ri.manny_point)
end
celso.face_mop = function() -- line 45
    if find_script(celso.face_manny) then
        wait_for_script(celso.face_manny)
    end
    celso.facing_manny = FALSE
    celso:head_look_at_point(ri.mop_point)
    celso:stop_chore(celso_mop_talk_freeze, "celso_mop.cos")
    celso:run_chore(celso_mop_to_mop, "celso_mop.cos")
    celso:play_chore_looping(celso_mop_mop_loop, "celso_mop.cos")
end
celso.hand_photo = function() -- line 56
    manny:clear_hands()
    if not celso.facing_manny then
        celso:face_manny()
    end
    start_script(celso.blend, celso, celso_mop_hand_photo_2, celso_mop_to_talk, 500, "celso_mop.cos")
    start_script(manny.walk_and_face, manny, 2.92736, 0.303278, 0, 0, 6.37918, 0)
    sleep_for(1500)
    manny:play_chore(ma_reach_med, "ma.cos")
    sleep_for(500)
    ri.photo:hold()
    manny:fade_in_chore(ma_hold, "ma.cos")
    celso:wait_for_chore(celso_mop_hand_photo_2, "celso_mop.cos")
    celso:head_look_at_point(ri.mop_point)
    sleep_for(500)
    celso:blend(celso_mop_talk_freeze, celso_mop_hand_photo_2, 500, "celso_mop.cos")
    celso.face_mop()
end
ri.get_job = function(arg1) -- line 76
    START_CUT_SCENE()
    celso:head_look_at(nil)
    ready_for_logbook = FALSE
    manny:walk_and_face(2.91582, 0.380509, 0, 0, 325.012, 0)
    manny:say_line("/rima058/")
    manny:wait_for_message()
    celso.facing_manny = TRUE
    celso:stop_looping_chore(celso_mop_mop_loop, "celso_mop.cos")
    celso:play_chore(celso_mop_take_logbook, "celso_mop.cos")
    sleep_for(3800)
    manny:say_line("/rima059/")
    manny:stop_chore(nil, "ma.cos")
    manny:run_chore(ma_give_logbook, "ma.cos")
    manny:run_chore(ma_logbook_exit, "ma.cos")
    manny:stop_chore(nil, "ma.cos")
    re.logbook:put_in_limbo()
    wait_for_message()
    sleep_for(500)
    celso:say_line("/rice060/")
    wait_for_message()
    celso:say_line("/rice061/")
    wait_for_message()
    manny:say_line("/rima062/")
    manny:twist_head_gesture()
    wait_for_message()
    celso:head_look_at_point(ri.manny_point)
    celso:say_line("/rice063/")
    wait_for_message()
    celso:say_line("/rice064/")
    wait_for_message()
    celso:say_line("/rice065/")
    wait_for_message()
    celso:stop_chore()
    celso:head_look_at(nil)
    manny:head_look_at(nil)
    celso:play_chore(celso_mop_leave_mop, "celso_mop.cos")
    manny:push_costume("ma_grab_mop.cos")
    manny:play_chore(0, "ma_grab_mop.cos")
    celso:say_line("/rice066/")
    wait_for_message()
    celso:say_line("/rice067/")
    manny:wait_for_chore(0, "ma_grab_mop.cos")
    celso:wait_for_chore(celso_mop_leave_mop, "celso_mop.cos")
    wait_for_message()
    sleep_for(1000)
    END_CUT_SCENE()
    start_script(cut_scene.year2int, cut_scene)
end
ri.set_up_actors = function() -- line 133
    celso:put_in_set(ri)
    celso:set_costume("celso_mop.cos")
    celso:set_mumble_chore(celso_mop_mumble, "celso_mop.cos")
    celso:set_talk_chore(1, celso_mop_no_talk)
    celso:set_talk_chore(2, celso_mop_a)
    celso:set_talk_chore(3, celso_mop_c)
    celso:set_talk_chore(4, celso_mop_e)
    celso:set_talk_chore(5, celso_mop_f)
    celso:set_talk_chore(6, celso_mop_l)
    celso:set_talk_chore(7, celso_mop_m)
    celso:set_talk_chore(8, celso_mop_o)
    celso:set_talk_chore(9, celso_mop_t)
    celso:set_talk_chore(10, celso_mop_u)
    celso:setpos(3.075, 0.625, 0)
    celso:setrot(0, 224.118, 0)
    celso:set_head(5, 6, 7, 165, 28, 80)
    celso:play_chore_looping(celso_mop_mop_loop)
    celso:head_look_at_point(ri.mop_point)
    celso:set_look_rate(130)
    celso.facing_manny = FALSE
end
ri.enter = function(arg1) -- line 162
    start_script(ri.set_up_actors)
    start_script(ri.watch_costume_events)
end
ri.exit = function(arg1) -- line 167
    stop_script(ri.watch_costume_events)
    celso:free()
end
ri.celso_obj = Object:create(ri, "/ritx068/Celso", 3.027, 0.5776, 0.46250001, { range = 0.80000001 })
ri.celso_obj.use_pnt_x = 2.925
ri.celso_obj.use_pnt_y = 0.27500001
ri.celso_obj.use_pnt_z = 0
ri.celso_obj.use_rot_x = 0
ri.celso_obj.use_rot_y = 326.07199
ri.celso_obj.use_rot_z = 0
ri.celso_obj.lookAt = function(arg1) -- line 187
    if ce1 then
        manny:say_line("/rima069/")
    else
        manny:say_line("/rima070/")
    end
end
ri.celso_obj.use = function(arg1) -- line 195
    manny:walkto_object(arg1)
    Dialog:run("ce1", "dlg_celso.lua")
end
ri.celso_obj.use_photo = function(arg1) -- line 200
    manny:say_line("/ccma066/")
end
ri.celso_obj.use_logbook = function(arg1) -- line 204
    ri:get_job()
end
ri.automat = Object:create(ri, "/ritx071/automat doors", 2.4807401, 1.2656, 0.50349998, { range = 0.89999998 })
ri.automat.use_pnt_x = 2.45034
ri.automat.use_pnt_y = 0.88849902
ri.automat.use_pnt_z = 0
ri.automat.use_rot_x = 0
ri.automat.use_rot_y = -5.8937802
ri.automat.use_rot_z = 0
ri.automat.lookAt = function(arg1) -- line 219
    soft_script()
    manny:say_line("/rima072/")
    wait_for_message()
    manny:say_line("/rima073/")
    wait_for_message()
    celso:say_line("/rice074/")
    wait_for_message()
    manny:say_line("/rima075/")
end
ri.automat.use = function(arg1) -- line 230
    soft_script()
    manny:say_line("/rima076/")
    wait_for_message()
    celso:say_line("/rice077/")
end
ri.automat.pickUp = ri.automat.use
ri.condiments = Object:create(ri, "/ritx078/condiments", 3.0552599, 0.099889398, 0.30399999, { range = 0.60000002 })
ri.condiments.use_pnt_x = 2.9186599
ri.condiments.use_pnt_y = 0.27588901
ri.condiments.use_pnt_z = 0
ri.condiments.use_rot_x = 0
ri.condiments.use_rot_y = -143.2
ri.condiments.use_rot_z = 0
ri.condiments.lookAt = function(arg1) -- line 247
    manny:say_line("/rima079/")
end
ri.condiments.pickUp = function(arg1) -- line 251
    soft_script()
    manny:say_line("/rima080/")
    wait_for_message()
    manny:say_line("/rima081/")
end
ri.condiments.use = function(arg1) -- line 258
    manny:say_line("/rima082/")
end
ri.newspaper = Object:create(ri, "/ritx083/newspaper", 3.18662, 0.80306798, 0.24150001, { range = 0.40000001 })
ri.newspaper.use_pnt_x = 3.1182201
ri.newspaper.use_pnt_y = 1.04987
ri.newspaper.use_pnt_z = 0
ri.newspaper.use_rot_x = 0
ri.newspaper.use_rot_y = -173.483
ri.newspaper.use_rot_z = 0
ri.newspaper.lookAt = function(arg1) -- line 271
    soft_script()
    manny:say_line("/rima084/")
    wait_for_message()
    celso:say_line("/rice085/")
end
ri.newspaper.use = ri.newspaper.lookAt
ri.newspaper.pickUp = ri.newspaper.lookAt
ri.photo = Object:create(ri, "/ritx086/photo", 0, 0, 0, { range = 0 })
ri.photo.wav = "getCard.wav"
ri.photo.lookAt = function(arg1) -- line 285
    manny:say_line("/rima087/")
end
ri.photo.use = function(arg1) -- line 289
    manny:say_line("/rima088/")
end
ri.re_door = Object:create(ri, "/ritx089/door", -0.61741298, 0.139908, 0.4172, { range = 0.60000002 })
ri.re_door.use_pnt_x = -0.61741298
ri.re_door.use_pnt_y = 0.41160801
ri.re_door.use_pnt_z = 0
ri.re_door.use_rot_x = 0
ri.re_door.use_rot_y = -192.61301
ri.re_door.use_rot_z = 0
ri.re_door.out_pnt_x = -0.66807699
ri.re_door.out_pnt_y = 0.184798
ri.re_door.out_pnt_z = 0
ri.re_door.out_rot_x = 0
ri.re_door.out_rot_y = -192.61301
ri.re_door.out_rot_z = 0
ri.re_box = ri.re_door
ri.re_door:make_untouchable()
ri.re_door.walkOut = function(arg1) -- line 318
    re:come_out_door(re.ri_door)
end
rope_climb_climb = 0
rope_climb_show = 1
rope_climb_hide = 2
rope_climb_drop_off = 3
rope_rope_scale = 0
rope_rope_show = 1
rope_rope_hide = 2
CheckFirstTime("rp.lua")
rp = Set:create("rp.set", "ramp", { rp_rmpws = 0, rp_overhead = 1 })
rp.camera_adjusts = { 350 }
rp.enter = function(arg1) -- line 20
    start_sfx("traffic1.imu")
    manny.footsteps = footsteps.pavement
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -6000, 4000, 5000.5)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, -6000, 4000, 5000.5)
    SetActorShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow2")
end
rp.exit = function(arg1) -- line 37
    stop_sound("traffic1.imu")
    KillActorShadows(manny.hActor)
end
rp.freeway_sign = Object:create(rp, "/rptx003/sign", 1.0418299, 0.180627, 1.52, { range = 2 })
rp.freeway_sign.use_pnt_x = 1.0418299
rp.freeway_sign.use_pnt_y = -0.69937301
rp.freeway_sign.use_pnt_z = 0
rp.freeway_sign.use_rot_x = 0
rp.freeway_sign.use_rot_y = -719.96899
rp.freeway_sign.use_rot_z = 0
rp.freeway_sign.lookAt = function(arg1) -- line 55
    soft_script()
    manny:say_line("/rpma004/")
    wait_for_message()
    manny:say_line("/rpma005/")
end
rp.freeway_sign.use = rp.freeway_sign.lookAt
rp.on_ramp = Object:create(rp, "/rptx006/on-ramp", -2.19894, 3.9306099, 0.62341702, { range = 2 })
rp.on_ramp.use_pnt_x = -1.53894
rp.on_ramp.use_pnt_y = 3.38061
rp.on_ramp.use_pnt_z = 0.163417
rp.on_ramp.use_rot_x = 0
rp.on_ramp.use_rot_y = -688.50299
rp.on_ramp.use_rot_z = 0
rp.freeway_box = rp.on_ramp
rp.on_ramp.lookAt = function(arg1) -- line 74
    manny:say_line("/rpma007/")
end
rp.on_ramp.walkOut = function(arg1) -- line 78
    manny:say_line("/rpma008/")
    wait_for_message()
    manny:say_line("/rpma009/")
end
rp.os_door = Object:create(rp, "/rptx001/door", 1.51652, -2.76369, 0.5, { range = 0 })
rp.os_door.use_pnt_x = 1.5719301
rp.os_door.use_pnt_y = -2.22347
rp.os_door.use_pnt_z = 0.059999999
rp.os_door.use_rot_x = 0
rp.os_door.use_rot_y = -181.162
rp.os_door.use_rot_z = 0
rp.os_door.out_pnt_x = 1.56629
rp.os_door.out_pnt_y = -2.50701
rp.os_door.out_pnt_z = 0.059999999
rp.os_door.out_rot_x = 0
rp.os_door.out_rot_y = -181.162
rp.os_door.out_rot_z = 0
rp.os_door:make_untouchable()
rp.os_box = rp.os_door
rp.os_door.walkOut = function(arg1) -- line 107
    os:come_out_door(os.rp_door)
end
rp.st_door = Object:create(rp, "/rptx010/door", -0.50419199, -2.8151901, 0, { range = 0 })
rp.st_door.use_pnt_x = -0.50419199
rp.st_door.use_pnt_y = -2.8151901
rp.st_door.use_pnt_z = 0
rp.st_door.use_rot_x = 0
rp.st_door.use_rot_y = -172.105
rp.st_door.use_rot_z = 0
rp.st_door.out_pnt_x = -0.64355302
rp.st_door.out_pnt_y = -3.2307301
rp.st_door.out_pnt_z = 0
rp.st_door.out_rot_x = 0
rp.st_door.out_rot_y = -164.021
rp.st_door.out_rot_z = 0
rp.st_door:make_untouchable()
rp.st_box = rp.st_door
rp.st_door.walkOut = function(arg1) -- line 131
    st:come_out_door(st.rp_door)
end
rp.st_sidwk_door = Object:create(rp, "/rptx011/door", -1.8547601, -2.4714799, 0.059999999, { range = 0 })
rp.st_sidwk_door.use_pnt_x = -1.8547601
rp.st_sidwk_door.use_pnt_y = -1.74148
rp.st_sidwk_door.use_pnt_z = 0.059999999
rp.st_sidwk_door.use_rot_x = 0
rp.st_sidwk_door.use_rot_y = 187.996
rp.st_sidwk_door.use_rot_z = 0
rp.st_sidwk_door.out_pnt_x = -1.80278
rp.st_sidwk_door.out_pnt_y = -2.11064
rp.st_sidwk_door.out_pnt_z = 0.059999999
rp.st_sidwk_door.out_rot_x = 0
rp.st_sidwk_door.out_rot_y = 187.996
rp.st_sidwk_door.out_rot_z = 0
rp.st_sidwk_door:make_untouchable()
rp.st_sidbox = rp.st_sidwk_door
rp.st_sidwk_door.walkOut = function(arg1) -- line 154
    st:come_out_door(st.rp_sidwk_door)
end
rp.os_st_door = Object:create(rp, "/rptx012/door", 0.39129701, -2.73349, 0, { range = 0 })
rp.os_st_door.use_pnt_x = 0.39129701
rp.os_st_door.use_pnt_y = -2.73349
rp.os_st_door.use_pnt_z = 0
rp.os_st_door.use_rot_x = 0
rp.os_st_door.use_rot_y = -172.129
rp.os_st_door.use_rot_z = 0
rp.os_st_door.out_pnt_x = 0.38170001
rp.os_st_door.out_pnt_y = -3.26548
rp.os_st_door.out_pnt_z = 0
rp.os_st_door.out_rot_x = 0
rp.os_st_door.out_rot_y = -176.996
rp.os_st_door.out_rot_z = 0
rp.os_st_door:make_untouchable()
rp.os_stbox = rp.os_st_door
rp.os_st_door.walkOut = function(arg1) -- line 176
    os:come_out_door(os.rp_st_door)
end
rwheel_Chore0 = 0
sal_dead_sal_dead = 0
salnotes_Chore0 = 0
scythe_folded_be_the_sythe = 0
dofile("bee_barrel.lua")
dofile("bee_flavor.lua")
dofile("bee_strike.lua")
dofile("bee_works.lua")
dofile("bee_stamp.lua")
dofile("tm_manifesto.lua")
dofile("tm_pace.lua")
sea_bee = { }
sea_bee.parent = system.actorTemplate
sea_bee.create = function(arg1, arg2) -- line 23
    local local1
    local1 = Actor:create(nil, nil, nil, arg2)
    local1.parent = arg1
    local1.body = nil
    return local1
end
sea_bee.default = function(arg1, arg2, arg3) -- line 38
    if not arg2 then
        arg2 = bee_flavor_bee1
    end
    arg1:set_costume(nil)
    arg1:set_costume("bee_flavor.cos")
    arg1:set_colormap("seabees.cmp")
    arg1:set_mumble_chore(bee_flavor_mumble)
    arg1:set_talk_chore(1, bee_flavor_stop_talk)
    arg1:set_talk_chore(2, bee_flavor_a)
    arg1:set_talk_chore(3, bee_flavor_c)
    arg1:set_talk_chore(4, bee_flavor_e)
    arg1:set_talk_chore(5, bee_flavor_f)
    arg1:set_talk_chore(6, bee_flavor_l)
    arg1:set_talk_chore(7, bee_flavor_m)
    arg1:set_talk_chore(8, bee_flavor_o)
    arg1:set_talk_chore(9, bee_flavor_t)
    arg1:set_talk_chore(10, bee_flavor_u)
    arg1:play_chore(bee_flavor_no_flap, "bee_flavor.cos")
    arg1:complete_chore(arg2, "bee_flavor.cos")
    arg1:set_turn_rate(60)
    arg1:set_walk_rate(0.4)
    arg1.upper_hands_state = "base"
    arg1.lookdir = "center"
    arg1.look_script = nil
    arg1.shufflepos = 0
    arg1.stop_idle = FALSE
    if not arg3 then
        arg3 = "barrel"
    end
    if arg3 == "strike" or arg3 == "barrel" then
        if not arg1.body then
            arg1.body = Actor:create(nil, nil, nil, arg1.name .. " Body")
        end
        arg1.body:set_costume(nil)
        arg1.body:set_costume("bee_flavor.cos")
        arg1.body:set_colormap("seabees.cmp")
        arg1.body:complete_chore(arg2, "bee_flavor.cos")
        arg1.body:push_costume("bee_stamp.cos")
    end
    if arg3 == "works" then
        arg1:push_costume("bee_works.cos")
    elseif arg3 == "strike" then
        arg1:push_costume("bee_stamp.cos")
        arg1:push_costume("bee_strike.cos")
        arg1.body:push_costume("bee_strike.cos")
    elseif arg3 == "pace" then
        arg1:push_costume("tm_pace.cos")
    else
        arg1:push_costume("bee_stamp.cos")
        arg1:push_costume("bee_barrel.cos")
        arg1.body:push_costume("bee_barrel.cos")
    end
end
sea_bee.free = function(arg1) -- line 97
    if arg1.body then
        arg1.body:free()
    end
    Actor.free(arg1)
end
sea_bee.put_in_set = function(arg1, arg2) -- line 104
    if arg1.body then
        arg1.body:put_in_set(arg2)
    end
    Actor.put_in_set(arg1, arg2)
end
sea_bee.worker_chores = { }
sea_bee.worker_chores[0] = { chore = bee_flavor_bee3, used = FALSE }
sea_bee.worker_chores[1] = { chore = bee_flavor_bee4, used = FALSE }
sea_bee.worker_chores[2] = { chore = bee_flavor_bee5, used = FALSE }
sea_bee.choose_worker_flavor = function(arg1, arg2) -- line 118
    local local1 = rndint(0, 2)
    if arg1.flavor then
        sea_bee.worker_chores[arg1.flavor].used = FALSE
        arg1.flavor = nil
    end
    while sea_bee.worker_chores[local1].used and local1 ~= arg1.flavor do
        local1 = rndint(0, 2)
    end
    arg1.flavor = local1
    sea_bee.worker_chores[local1].used = TRUE
    sea_bee.default(arg1, sea_bee.worker_chores[local1].chore, arg2)
end
angry_bees = sea_bee:create("Angry Bees")
angry_bees.default = function(arg1, arg2) -- line 142
    sea_bee.default(arg1, bee_flavor_bee5, arg2)
    angry_bees:set_talk_color(Red)
end
bee1 = sea_bee:create("First Barrel Bee")
bee1.default = function(arg1, arg2) -- line 148
    sea_bee.default(arg1, bee_flavor_bee1, arg2)
    bee1:set_talk_color(Green)
end
bee2 = sea_bee:create("Second Barrel Bee")
bee2.default = function(arg1, arg2) -- line 154
    sea_bee.default(arg1, bee_flavor_bee2, arg2)
    bee2:set_talk_color(Blue)
end
terry = sea_bee:create("Terry")
terry.default = function(arg1, arg2) -- line 160
    sea_bee.default(arg1, bee_flavor_terry, arg2)
    if arg2 == "barrel" or arg2 == nil then
        arg1:push_costume("tm_manifesto.cos")
        arg1.body:push_costume("tm_manifesto.cos")
    end
    arg1:set_talk_color(Yellow)
end
worker_bee1 = sea_bee:create("First Worker Bee")
worker_bee1.flavor = nil
worker_bee1.default = function(arg1, arg2) -- line 171
    if not arg2 then
        arg2 = "works"
    end
    arg1:choose_worker_flavor(arg2)
end
worker_bee2 = sea_bee:create("Second Worker Bee")
worker_bee2.flavor = nil
worker_bee2.default = function(arg1, arg2) -- line 179
    if not arg2 then
        arg2 = "works"
    end
    arg1:choose_worker_flavor(arg2)
end
sea_bee.barrel_upper_idle_table = { start_warm_upr_hands = 0.69999999, warm_base = 0.2, to_scrtch_hd = 0.050000001, to_scrtch_chin = 0.050000001 }
sea_bee.barrel_lower_idle_table = { warm_lwr_hands = 0.40000001, warm_base = 0.27000001, move_wing = 0.2, rub_lwr_hands = 0.1, one_foot = 0.0099999998, step_right = 0.0099999998, step_left = 0.0099999998 }
sea_bee.run_barrel_upper_idles = function(arg1) -- line 204
    while not arg1.stop_idle do
        if not arg1.frozen then
            arg1.is_upper_idling = TRUE
            if rnd(9) then
                if arg1.upper_hands_state == "hands" then
                    arg1.upper_hands_state = "base"
                    arg1:set_chore_looping(bee_barrel_warm_upr_hands, FALSE, "bee_barrel.cos")
                    arg1:wait_for_chore(bee_barrel_warm_upr_hands, "bee_barrel.cos")
                    arg1:play_chore(bee_barrel_stop_warm_upr_hands, "bee_barrel.cos")
                    arg1:wait_for_chore(bee_barrel_stop_warm_upr_hands, "bee_barrel.cos")
                else
                    arg1.upper_hands_state = "hands"
                    arg1:play_chore(bee_barrel_start_warm_upr_hands, "bee_barrel.cos")
                    arg1:wait_for_chore(bee_barrel_start_warm_upr_hands, "bee_barrel.cos")
                    arg1:play_chore_looping(bee_barrel_warm_upr_hands, "bee_barrel.cos")
                end
                if not arg1.stop_idle then
                    sleep_for(rndint(1000, 3000))
                end
            elseif rnd(8) then
                if arg1.upper_hands_state == "hands" then
                    arg1:play_chore(bee_barrel_to_scrtch_hd, "bee_barrel.cos")
                    arg1:wait_for_chore(bee_barrel_to_scrtch_hd, "bee_barrel.cos")
                    arg1:play_chore_looping(bee_barrel_sctrch_head, "bee_barrel.cos")
                    sleep_for(500)
                    start_sfx("beehead.wav", IM_MED_PRIORITY, 100)
                    sleep_for(rndint(500, 1000))
                    arg1:stop_chore(bee_barrel_sctrch_head, "bee_barrel.cos")
                    arg1:play_chore(bee_barrel_stp_sctrch_hd, "bee_barrel.cos")
                    arg1:wait_for_chore(bee_barrel_stp_sctrch_hd, "bee_barrel.cos")
                else
                    arg1:play_chore(bee_barrel_to_scrtch_chin, "bee_barrel.cos")
                    arg1:wait_for_chore(bee_barrel_to_scrtch_chin, "bee_barrel.cos")
                    arg1:play_chore_looping(bee_barrel_scrtch_chin, "bee_barrel.cos")
                    sleep_for(500)
                    start_sfx("beehead.wav", IM_MED_PRIORITY, 100)
                    sleep_for(rndint(500, 1000))
                    arg1:stop_chore(bee_barrel_scrtch_chin, "bee_barrel.cos")
                    arg1:play_chore(bee_barrel_frm_scrtch_chin, "bee_barrel.cos")
                    arg1:wait_for_chore(bee_barrel_frm_scrtch_chin, "bee_barrel.cos")
                    arg1:stop_chore(bee_barrel_frm_scrtch_chin, "bee_barrel.cos")
                end
            end
            arg1.is_upper_idling = FALSE
            if not arg1.stop_idle then
                sleep_for(rndint(500, 1000))
            end
        else
            break_here()
        end
    end
    arg1.barrel_upper_idle_script = nil
end
sea_bee.run_barrel_lower_idles = function(arg1) -- line 259
    local local1, local2
    while not arg1.stop_idle do
        local1 = pick_from_weighted_table(sea_bee.barrel_lower_idle_table)
        local2 = getglobal("bee_barrel_" .. local1)
        if local2 and not arg1.frozen then
            arg1.is_lower_idling = TRUE
            if local2 == bee_barrel_step_left then
                if arg1.shufflepos > -1 and arg1 ~= terry then
                    arg1:shuffle(bee_barrel_step_left)
                    arg1.shufflepos = arg1.shufflepos - 1
                end
            elseif local2 == bee_barrel_step_right then
                if arg1.shufflepos < 1 and arg1 ~= terry then
                    arg1:shuffle(bee_barrel_step_right)
                    arg1.shufflepos = arg1.shufflepos + 1
                end
            elseif local2 == bee_barrel_one_foot then
                arg1:remove_barrel_stamp()
                arg1:run_chore(local2, "bee_barrel.cos")
                if local2 ~= bee_barrel_warm_base then
                    arg1:stop_chore(local2, "bee_barrel.cos")
                end
                arg1:replace_barrel_stamp()
            else
                if local2 == bee_barrel_move_wing then
                    start_sfx(pick_one_of({ "beeflap1.wav", "beeflap2.wav", "beeflap3.wav" }), IM_MED_PRIORITY, 100)
                end
                arg1:play_chore(local2, "bee_barrel.cos")
                arg1:wait_for_chore(local2, "bee_barrel.cos")
                if local2 ~= bee_barrel_warm_base then
                    arg1:stop_chore(local2, "bee_barrel.cos")
                end
            end
            arg1.is_lower_idling = FALSE
            if not arg1.stop_idle then
                sleep_for(rndint(100, 1000))
            end
        else
            break_here()
        end
    end
    arg1.barrel_lower_idle_script = nil
end
sea_bee.shuffle = function(arg1, arg2) -- line 307
    local local1, local2, local3, local4, local5, local6, local7
    arg1:remove_barrel_stamp()
    local2 = { x = 0, y = 0.1, z = 0 }
    if arg2 == bee_barrel_step_left then
        local6 = 11
        local2.y = 0.029999999
    elseif arg2 == bee_barrel_step_right then
        local6 = 7
        local2.y = 0.02
    elseif arg2 == tm_manifesto_step_left then
        local6 = 18
        local2.y = 0.02
    elseif arg2 == tm_manifesto_step_right then
        local6 = 20
        local2.y = 0.029999999
    end
    local1 = arg1:getrot()
    if arg2 == bee_barrel_step_left or arg2 == tm_manifesto_step_left then
        local1.y = local1.y - 90
    else
        local1.y = local1.y + 90
    end
    local2 = RotateVector(local2, local1)
    local3 = arg1:getpos()
    local2.x = local2.x + local3.x
    local2.y = local2.y + local3.y
    local2.z = local3.z
    local4 = (local2.x - local3.x) / local6
    local5 = (local2.y - local3.y) / local6
    arg1:play_chore(arg2, "bee_barrel.cos")
    local7 = 0
    while local7 < local6 do
        local3.x = local3.x + local4
        local3.y = local3.y + local5
        arg1:setpos(local3.x, local3.y, local3.z)
        local7 = local7 + 1
        break_here()
    end
    arg1:stop_chore(arg2, "bee_barrel.cos")
    arg1:replace_barrel_stamp()
end
sea_bee.barrel_idles = function(arg1) -- line 357
    arg1.stop_idle = FALSE
    if not arg1.barrel_lower_idle_script then
        arg1.barrel_lower_idle_script = start_script(arg1.run_barrel_lower_idles, arg1)
    end
    if not arg1.barrel_upper_idle_script then
        arg1.barrel_upper_idle_script = start_script(arg1.run_barrel_upper_idles, arg1)
    end
end
sea_bee.init_barrel_stuff = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) -- line 368
    start_script(arg1.do_init_barrel, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
end
sea_bee.do_init_barrel = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) -- line 372
    system:lock_display()
    arg1:play_chore_looping(bee_barrel_warm_base, "bee_barrel.cos")
    if not arg8 then
        arg1.body:play_chore_looping(bee_barrel_warm_base, "bee_barrel.cos")
        arg1.body:setpos(arg2, arg3, arg4)
        arg1.body:setrot(arg5, arg6, arg7)
    end
    arg1:setpos(arg2, arg3, arg4)
    arg1:setrot(arg5, arg6, arg7)
    if not arg8 then
        arg1:complete_chore(bee_stamp_wings_and_arms, "bee_stamp.cos")
        arg1.body:complete_chore(bee_stamp_body_and_head, "bee_stamp.cos")
        arg1.body:complete_chore(bee_stamp_hide_wings, "bee_stamp.cos")
    end
    break_here()
    if not arg8 then
        arg1.body:freeze()
        arg1:barrel_idles()
    else
        arg1:freeze()
    end
    system:unlock_display()
end
sea_bee.remove_barrel_stamp = function(arg1) -- line 409
    arg1.body:thaw(TRUE)
    arg1.body:put_in_set(nil)
    arg1:complete_chore(bee_stamp_show_head, "bee_stamp.cos")
    arg1:complete_chore(bee_stamp_show_body, "bee_stamp.cos")
end
sea_bee.replace_barrel_stamp = function(arg1) -- line 421
    local local1, local2
    local1 = arg1:getpos()
    local2 = arg1:getrot()
    arg1.body:put_in_set(dd)
    arg1.body:setpos(local1.x, local1.y, local1.z)
    arg1.body:setrot(local2.x, local2.y, local2.z)
    arg1.body:complete_chore(bee_stamp_body_and_head, "bee_stamp.cos")
    arg1.body:freeze()
    arg1:complete_chore(bee_stamp_wings_and_arms, "bee_stamp.cos")
end
sea_bee.thaw_head = function(arg1) -- line 440
    system:lock_display()
    arg1:complete_chore(bee_stamp_show_head, "bee_stamp.cos")
    arg1.body:thaw(TRUE)
    arg1.body:complete_chore(bee_stamp_hide_head, "bee_stamp.cos")
    break_here()
    arg1.body:freeze()
    system:unlock_display()
end
sea_bee.work_idles = function(arg1) -- line 450
    if not arg1.work_idle_script then
        arg1.work_idle_script = start_script(arg1.work_idle_movement, arg1)
    end
end
sea_bee.look_center = function(arg1) -- line 456
    if arg1.look_script then
        while arg1.look_script ~= nil do
            break_here()
        end
    end
    arg1.look_script = start_script(arg1.set_look_dir, arg1, "center")
end
sea_bee.look_left = function(arg1) -- line 466
    if arg1.look_script then
        while arg1.look_script ~= nil do
            break_here()
        end
    end
    if arg1.lookdir == "right" then
        arg1.look_script = start_script(arg1.set_look_dir, arg1, "center")
        while arg1.look_script do
            break_here()
        end
    end
    arg1.look_script = start_script(arg1.set_look_dir, arg1, "left")
end
sea_bee.look_right = function(arg1) -- line 482
    if arg1.look_script then
        while arg1.look_script ~= nil do
            break_here()
        end
    end
    if arg1.lookdir == "left" then
        arg1.look_script = start_script(arg1.set_look_dir, arg1, "center")
        while arg1.look_script do
            break_here()
        end
    end
    arg1.look_script = start_script(arg1.set_look_dir, arg1, "right")
end
sea_bee.set_look_dir = function(arg1, arg2) -- line 502
    if arg2 ~= arg1.lookdir then
        if arg2 == "center" then
            if arg1.lookdir == "right" then
                arg1:stop_chore(bee_barrel_lk_rt_hold, "bee_barrel.cos")
                arg1:play_chore(bee_barrel_lk_rt_to_ctr, "bee_barrel.cos")
                arg1:wait_for_chore(bee_barrel_lk_rt_to_ctr, "bee_barrel.cos")
                arg1:stop_chore(bee_barrel_lk_rt_to_ctr, "bee_barrel.cos")
            else
                arg1:stop_chore(bee_barrel_lk_lft_hold, "bee_barrel.cos")
                arg1:play_chore(bee_barrel_lk_lft_to_ctr, "bee_barrel.cos")
                arg1:wait_for_chore(bee_barrel_lk_lft_to_ctr, "bee_barrel.cos")
                arg1:stop_chore(bee_barrel_lk_lft_to_ctr, "bee_barrel.cos")
            end
            arg1.lookdir = "center"
        elseif arg2 == "left" then
            arg1:play_chore(bee_barrel_lk_lft, "bee_barrel.cos")
            arg1:wait_for_chore(bee_barrel_lk_lft, "bee_barrel.cos")
            arg1:stop_chore(bee_barrel_lk_lft, "bee_barrel.cos")
            arg1:play_chore_looping(bee_barrel_lk_lft_hold, "bee_barrel.cos")
            arg1.lookdir = "left"
        else
            arg1:play_chore(bee_barrel_lk_rt, "bee_barrel.cos")
            arg1:wait_for_chore(bee_barrel_lk_rt, "bee_barrel.cos")
            arg1:stop_chore(bee_barrel_lk_rt, "bee_barrel.cos")
            arg1:play_chore_looping(bee_barrel_lk_rt_hold, "bee_barrel.cos")
            arg1.lookdir = "right"
        end
    end
    arg1.look_script = nil
end
sea_bee.stop_idles = function(arg1) -- line 535
    if arg1.barrel_upper_idle_script then
        stop_script(arg1.barrel_upper_idle_script)
        arg1.barrel_upper_idle_script = nil
    end
    if arg1.barrel_lower_idle_script then
        stop_script(arg1.barrel_lower_idle_script)
        arg1.barrel_lower_idle_script = nil
    end
    if arg1.work_idle_script then
        stop_script(arg1.work_idle_script)
        arg1.work_idle_script = nil
    end
    if arg1.movement_script then
        stop_script(arg1.movement_script)
        arg1.movement_script = nil
    end
    if arg1.strike_idle_script then
        stop_script(arg1.strike_idle_script)
        arg1.strike_idle_script = nil
    end
    if arg1.strike_rotate then
        stop_script(arg1.strike_rotate)
    end
    if arg1.frozen then
        arg1:thaw()
    end
end
terry.do_init_barrel = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) -- line 569
    system:lock_display()
    arg1:complete_chore(tm_manifesto_base_pose, "tm_manifesto.cos")
    if not arg8 then
        arg1.body:complete_chore(tm_manifesto_base_pose, "tm_manifesto.cos")
        arg1.body:setpos(arg2, arg3, arg4)
        arg1.body:setrot(arg5, arg6, arg7)
    end
    arg1:setpos(arg2, arg3, arg4)
    arg1:setrot(arg5, arg6, arg7)
    if not arg8 then
        arg1:complete_chore(bee_stamp_wings_and_arms, "bee_stamp.cos")
        arg1.body:complete_chore(bee_stamp_body_and_head, "bee_stamp.cos")
        arg1.body:complete_chore(bee_stamp_hide_wings, "bee_stamp.cos")
    end
    break_here()
    if not arg8 then
        arg1.body:freeze()
        arg1:barrel_idles()
    else
        arg1:freeze()
    end
    system:unlock_display()
    if not arg1.saylineTable then
        arg1.saylineTable = { }
    end
    arg1.saylineTable.x = 500
    arg1.saylineTable.y = 170
end
terry.free = function(arg1) -- line 600
    arg1.saylineTable.x = nil
    arg1.saylineTable.y = nil
    if arg1.body then
        arg1.body:free()
    end
    Actor.free(arg1)
end
terry.barrel_idles = function(arg1) -- line 609
    arg1.stop_idle = FALSE
    if not arg1.barrel_upper_idle_script then
        arg1.barrel_upper_idle_script = start_script(arg1.run_barrel_upper_idles, arg1)
    end
end
terry.run_barrel_upper_idles = function(arg1) -- line 617
    arg1:play_chore_looping(tm_manifesto_warm_hands, "tm_manifesto.cos")
    while not arg1.stop_idle do
        break_here()
    end
    arg1:set_chore_looping(tm_manifesto_warm_hands, FALSE, "tm_manifesto.cos")
    arg1:wait_for_chore(tm_manifesto_warm_hands, "tm_manifesto.cos")
    arg1:play_chore_looping(tm_manifesto_base_pose, "tm_manifesto.cos")
    arg1.barrel_upper_idle_script = nil
end
terry.stop_barrel_idles = function(arg1) -- line 628
    arg1.stop_idle = TRUE
    while arg1.barrel_upper_idle_script do
        break_here()
    end
end
terry.strike_idles = function(arg1) -- line 635
    terry.body:put_in_set(nil)
    terry.body:free()
    terry:push_costume("bee_barrel.cos")
    terry:play_chore_looping(bee_strike_hover, "bee_strike.cos")
    terry:set_turn_rate(20)
    terry.stop_rotate = FALSE
    single_start_script(terry.strike_rotate, terry)
end
terry.strike_rotate = function(arg1) -- line 648
    local local1, local2, local3, local4, local5, local6
    arg1:wait_for_actor()
    local1 = arg1:getrot()
    local2 = 3
    while TRUE and not arg1.stop_rotate do
        while local1.y < 45 and local2 > 0.001 and not arg1.stop_rotate do
            local1.y = local1.y + local2
            if local1.y > 30 then
                local2 = local2 - local2 / 6
            elseif local2 < 3 then
                local2 = local2 + 1
            end
            arg1:setrot(local1.x, local1.y, local1.z)
            break_here()
        end
        local4 = 0
        while local4 < 2000 and not arg1.stop_rotate do
            break_here()
            local4 = local4 + system.frameTime
        end
        local2 = -1
        while local1.y > 0 and local2 < -0.001 and not arg1.stop_rotate do
            local1.y = local1.y + local2
            if local1.y < 10 then
                local2 = local2 + abs(local2) / 6
            elseif local2 > -3 then
                local2 = local2 - 1
            end
            arg1:setrot(local1.x, local1.y, local1.z)
            break_here()
        end
        local4 = 0
        while local4 < 2000 and not arg1.stop_rotate do
            break_here()
            local4 = local4 + system.frameTime
        end
        local2 = 1
    end
    local5 = manny:getpos()
    local6 = GetActorYawToPoint(arg1.hActor, local5)
    arg1:setrot(local1.x, local6, local1.z, TRUE)
    arg1:wait_for_actor()
    arg1.stop_rotate = FALSE
end
terry.head_left = function(arg1) -- line 702
    terry:run_chore(tm_manifesto_to_head_base, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_to_head_base, "tm_manifesto.cos")
    terry:play_chore_looping(tm_manifesto_head_base, "tm_manifesto.cos")
end
terry.stop_head_left = function(arg1) -- line 708
    terry:stop_chore(tm_manifesto_head_base, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_head_to_base, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_head_to_base, "tm_manifesto.cos")
end
terry.head_nod = function(arg1) -- line 714
    if find_script(arg1.head_left) then
        wait_for_script(arg1.head_left)
    end
    terry:wait_for_chore(tm_manifesto_to_head_base, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_to_head_base, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_head_base, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_head_nod, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_head_nod, "tm_manifesto.cos")
    terry:play_chore_looping(tm_manifesto_head_base, "tm_manifesto.cos")
end
terry.head_wag = function(arg1) -- line 726
    if find_script(arg1.head_left) then
        wait_for_script(arg1.head_left)
    end
    terry:wait_for_chore(tm_manifesto_to_head_base, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_to_head_base, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_head_base, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_head_wag, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_head_wag, "tm_manifesto.cos")
    terry:play_chore_looping(tm_manifesto_head_base, "tm_manifesto.cos")
end
terry.gesture1 = function(arg1, arg2) -- line 738
    terry:stop_chore(tm_manifesto_base_pose, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_gesture1, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_gesture1, "tm_manifesto.cos")
    if arg2 then
        terry:play_chore_looping(tm_manifesto_gesture_cycle, "tm_manifesto.cos")
    else
        terry:play_chore_looping(tm_manifesto_gesture1_hold, "tm_manifesto.cos")
    end
end
terry.gesture2 = function(arg1) -- line 749
    if terry:is_choring(tm_manifesto_gesture_cycle, FALSE, "tm_manifesto.cos") then
        terry:set_chore_looping(tm_manifesto_gesture_cycle, FALSE, "tm_manifesto.cos")
        terry:wait_for_chore(tm_manifesto_gesture_cycle, "tm_manifesto.cos")
        terry:stop_chore(tm_manifesto_gesture_cycle, "tm_manifesto.cos")
    else
        terry:stop_chore(tm_manifesto_gesture1_hold, "tm_manifesto.cos")
    end
    terry:run_chore(tm_manifesto_gesture2, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_gesture2, "tm_manifesto.cos")
    terry:play_chore(tm_manifesto_gesture2_hold, "tm_manifesto.cos")
end
terry.stop_gesture = function(arg1) -- line 762
    if terry:is_choring(tm_manifesto_gesture2, FALSE, "tm_manifesto.cos") then
        terry:wait_for_chore(tm_manifesto_gesture2, "tm_manifesto.cos")
        terry:stop_chore(tm_manifesto_gesture2, "tm_manifesto.cos")
    end
    terry:stop_chore(tm_manifesto_gesture2_hold, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_gesture_to_base, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_gesture_to_base, "tm_manifesto.cos")
    terry:play_chore_looping(tm_manifesto_base_pose, "tm_manifesto.cos")
end
terry.lefthand_out = function(arg1) -- line 773
    terry:stop_chore(tm_manifesto_base_pose, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_lefthand_out, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_lefthand_out, "tm_manifesto.cos")
    terry:play_chore_looping(tm_manifesto_lefthand_hold, "tm_manifesto.cos")
end
terry.stop_lefthand_out = function(arg1) -- line 780
    terry:stop_chore(tm_manifesto_lefthand_hold, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_lhand_to_base, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_lhand_to_base, "tm_manifesto.cos")
    terry:play_chore_looping(tm_manifesto_base_pose, "tm_manifesto.cos")
end
terry.shrug = function(arg1) -- line 787
    terry:stop_chore(tm_manifesto_base_pose, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_base_to_shrug, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_base_to_shrug, "tm_manifesto.cos")
    terry:play_chore_looping(tm_manifesto_shrug_hold, "tm_manifesto.cos")
end
terry.stop_shrug = function(arg1) -- line 794
    terry:stop_chore(tm_manifesto_shrug_hold, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_shrug_to_base, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_shrug_to_base, "tm_manifesto.cos")
    terry:play_chore_looping(tm_manifesto_base_pose, "tm_manifesto.cos")
end
terry.point = function(arg1) -- line 801
    terry:stop_chore(tm_manifesto_base_pose, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_to_point, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_to_point, "tm_manifesto.cos")
    terry:play_chore_looping(tm_manifesto_point_cycle, "tm_manifesto.cos")
end
terry.stop_point = function(arg1) -- line 808
    terry:set_chore_looping(tm_manifesto_point_cycle, FALSE, "tm_manifesto.cos")
    terry:wait_for_chore(tm_manifesto_point_cycle, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_point_cycle, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_point_to_base, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_point_to_base, "tm_manifesto.cos")
    terry:play_chore_looping(tm_manifesto_base_pose, "tm_manifesto.cos")
end
terry.point_once = function(arg1) -- line 817
    terry:stop_chore(tm_manifesto_base_pose, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_to_point, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_to_point, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_point_cycle, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_point_cycle, "tm_manifesto.cos")
    terry:run_chore(tm_manifesto_point_to_base, "tm_manifesto.cos")
    terry:stop_chore(tm_manifesto_point_to_base, "tm_manifesto.cos")
    terry:play_chore_looping(tm_manifesto_base_pose, "tm_manifesto.cos")
end
terry.start_pace = function(arg1) -- line 828
    terry:play_chore_looping(bee_flavor_wings_flap, "bee_flavor.cos")
    terry:run_chore(tm_pace_start_scratch, "tm_pace.cos")
    terry:play_chore_looping(tm_pace_pace, "tm_pace.cos")
end
terry.stop_pace = function(arg1) -- line 834
    terry:stop_chore(tm_pace_pace, "tm_pace.cos")
    terry:run_chore(tm_pace_stop_scratch, "tm_pace.cos")
    terry:stop_chore(bee_flavor_wings_flap, "bee_flavor.cos")
    terry:play_chore(bee_flavor_no_flap, "bee_flavor.cos")
end
terry.fake_hover = function(arg1) -- line 841
    local local1, local2, local3, local4, local5
    local1 = arg1:getpos()
    local2 = local1.z
    local3 = 10
    local4 = 5
    local5 = 90
    while TRUE do
        local1 = arg1:getpos()
        local1.z = local2 + sin(local3) / 20
        local3 = local3 + local4
        if local4 < 0 then
            local4 = rndint(5, 10)
            local4 = -local4
        else
            local4 = rndint(5, 10)
        end
        if local5 >= 70 and local3 >= local5 then
            local4 = -local4
            local3 = local5 - 1
            local5 = rndint(70, 90)
        elseif local5 <= 20 and local3 < local5 then
            local4 = -local4
            local3 = local5
            local5 = rndint(5, 20)
        end
        arg1:setpos(local1.x, local1.y, local1.z)
        break_here()
    end
end
sea_bee.fly_condition = function(arg1, arg2, arg3, arg4) -- line 880
    if arg4 then
        if arg2 < arg3 then
            return TRUE
        else
            return FALSE
        end
    elseif arg2 > arg3 then
        return TRUE
    else
        return FALSE
    end
end
sea_bee.fly_to = function(arg1, arg2, arg3, arg4, arg5) -- line 896
    local local1, local2, local3, local4, local5
    local local6, local7, local8, local9, local10, local11
    local1 = arg1:getpos()
    arg1.near_destination = FALSE
    local10 = FALSE
    local11 = FALSE
    if arg5 then
        local3 = 0.050000001
        local2 = 0.02
        local5 = 6
        local4 = 8
        local6 = 0.15000001
        local7 = 0.1
    else
        local2 = 0.050000001
        local3 = 0.02
        local5 = 8
        local4 = 6
        local6 = 0.1
        local7 = 0.15000001
    end
    if local1.z < arg4 then
        local9 = TRUE
    else
        local9 = FALSE
        local2 = -local2
    end
    if local1.y < arg3 then
        local8 = TRUE
    else
        local8 = FALSE
        local3 = -local3
    end
    while arg1:fly_condition(local1.z, arg4, local9) or arg1:fly_condition(local1.y, arg3, local8) do
        if arg1:fly_condition(local1.z, arg4, local9) then
            if not local11 then
                local1.z = local1.z + local2
                if abs(local2) < local7 then
                    local2 = abs(local2) + abs(local2) / local4
                    if not local9 then
                        local2 = -local2
                    end
                end
            else
                if abs(local2) > 0.0099999998 then
                    local2 = abs(local2) - abs(local2) / local5
                    if local2 < 0.0099999998 then
                        local2 = 0.0099999998
                    end
                    if not local9 then
                        local2 = -local2
                    end
                end
                local1.z = local1.z + local2
            end
        end
        if arg1:fly_condition(local1.y, arg3, local8) then
            if not local10 then
                local1.y = local1.y + local3
                if abs(local3) < local6 then
                    local3 = abs(local3) + abs(local3) / local5
                    if not local8 then
                        local3 = -local3
                    end
                end
            else
                if abs(local3) > 0.0099999998 then
                    local3 = abs(local3) - abs(local3) / local4
                    if local3 < 0.0099999998 then
                        local3 = 0.0099999998
                    end
                    if not local8 then
                        local3 = -local3
                    end
                end
                local1.y = local1.y + local3
            end
        end
        arg1:setpos(local1.x, local1.y, local1.z)
        if abs(local1.y - arg3) < abs(local3 * 4) then
            local10 = TRUE
        end
        if abs(local1.z - arg4) < abs(local2 * 4) then
            local11 = TRUE
        end
        if local10 and local11 then
            arg1.near_destination = TRUE
        end
        break_here()
    end
end
sea_bee.work_idle_table = { to_hammer = 0.40000001, weld = 0.34999999, neutral_to_drill = 0.2, big_hammer = 0.050000001 }
sea_bee.worker_positions = { }
sea_bee.check_proximity = function(arg1, arg2) -- line 1008
    local local1, local2, local3, local4
    local3 = FALSE
    local1, local2 = next(sea_bee.worker_positions, nil)
    while local1 and not local3 do
        local4 = sqrt((arg2.x - local2.x) ^ 2 + (arg2.y - local2.y) ^ 2 + (arg2.z - local2.z) ^ 2)
        if local4 < 1.5 then
            local3 = TRUE
        end
        local1, local2 = next(sea_bee.worker_positions, local1)
    end
    return local3
end
sea_bee.work_idle_movement = function(arg1) -- line 1024
    local local1, local2, local3, local4
    local local5, local6
    local local7, local8
    arg1:set_visibility(FALSE)
    sleep_for(rndint(3000, 5000))
    local4 = nil
    while TRUE do
        sleep_for(rndint(1000, 5000))
        local5 = pick_from_weighted_table(sea_bee.work_idle_table)
        local6 = getglobal("bee_works_" .. local5)
        if local6 == bee_works_to_hammer then
            local1 = sea_bee.work_points
        elseif local6 == bee_works_neutral_to_drill then
            local1 = sea_bee.drill_points
        elseif local6 == bee_works_weld then
            local1 = sea_bee.weld_points
        elseif local6 == bee_works_big_hammer then
            local1 = sea_bee.big_hammer_points
        end
        local3 = rndint(0, local1.count)
        if not local1[local3].used and local3 ~= local4 and not sea_bee:check_proximity(local1[local3].finish) then
            local1[local3].used = TRUE
            local4 = local3
            local2 = local1[local3]
            sea_bee.worker_positions[arg1.hActor] = local1[local3].finish
            arg1:default()
            arg1:play_chore_looping(bee_flavor_wings_flap, "bee_flavor.cos")
            if local6 == bee_works_to_hammer then
                arg1:play_chore(bee_works_show_hmmr_wrnch, "bee_works.cos")
            elseif local6 == bee_works_neutral_to_drill then
                arg1:play_chore(bee_works_show_drill, "bee_works.cos")
            elseif local6 == bee_works_weld then
                arg1:play_chore_looping(bee_works_weld, "bee_works.cos")
            elseif local6 == bee_works_big_hammer then
                arg1:play_chore(bee_works_show_big_hmr, "bee_works.cos")
                arg1:play_chore_looping(bee_works_hold_big_hammer, "bee_works.cos")
            end
            arg1:setpos(local2.start.x, local2.start.y, local2.start.z)
            arg1:setrot(local2.start.pitch, local2.start.yaw, local2.start.roll)
            arg1:set_visibility(TRUE)
            if not sound_playing("beewing.IMU") then
                start_sfx("beewing.IMU", IM_MED_PRIORITY, 0)
                fade_sfx("beewing.IMU", 1000, 70)
                set_pan("beewing.IMU", 100)
            end
            if local6 == bee_works_weld or local6 == bee_works_big_hammer then
                arg1.movement_script = start_script(arg1.fly_to, arg1, local2.finish.x, local2.finish.y, local2.finish.z, FALSE)
                wait_for_script(arg1.movement_script)
                arg1.movement_script = nil
            else
                arg1:play_chore(bee_works_strt_forward, "bee_works.cos")
                arg1.movement_script = start_script(arg1.fly_to, arg1, local2.finish.x, local2.finish.y, local2.finish.z, FALSE)
                arg1:wait_for_chore(bee_works_strt_forward, "bee_works.cos")
                arg1:play_chore_looping(bee_works_fly_forward, "bee_works.cos")
                while not arg1.near_destination do
                    break_here()
                end
                arg1:stop_chore(bee_works_fly_forward, "bee_works.cos")
                arg1:play_chore(bee_works_stop_forward, "bee_works.cos")
                wait_for_script(arg1.movement_script)
                arg1.movement_script = nil
                arg1:wait_for_chore(bee_works_stop_forward, "bee_works.cos")
                arg1:stop_chore(bee_works_stop_forward, "bee_works.cos")
            end
            if local6 == bee_works_to_hammer then
                local7 = 0
                local8 = rndint(1, 3)
                while local7 < local8 do
                    arg1:play_chore(bee_works_show_hmmr_wrnch, "bee_works.cos")
                    arg1:loop_chore_for(bee_works_hover, "bee_works.cos", 500, 1500)
                    arg1:play_chore(bee_works_show_hmmr_wrnch, "bee_works.cos")
                    arg1:play_chore(bee_works_to_hammer, "bee_works.cos")
                    arg1:wait_for_chore(bee_works_to_hammer, "bee_works.cos")
                    arg1:loop_chore_for(bee_works_hammer, "bee_works.cos", 1000, 2000)
                    arg1:play_chore(bee_works_show_hmmr_wrnch, "bee_works.cos")
                    arg1:play_chore(bee_works_stp_hammer, "bee_works.cos")
                    arg1:wait_for_chore(bee_works_stp_hammer, "bee_works.cos")
                    arg1:stop_chore(bee_works_stp_hammer, "bee_works.cos")
                    local7 = local7 + 1
                end
                arg1:play_chore(bee_works_show_hmmr_wrnch, "bee_works.cos")
            elseif local6 == bee_works_neutral_to_drill then
                arg1:play_chore(bee_works_hover, "bee_works.cos")
                arg1:run_chore(bee_works_start_adj_drill, "bee_works.cos")
                arg1:wait_for_chore(bee_works_hover, "bee_works.cos")
                arg1:stop_chore(bee_works_hover, "bee_works.cos")
                arg1:loop_chore_for(bee_works_adj_drill, "bee_works.cos", 1000, 3000)
                arg1:play_chore(bee_works_stop_adj_drill, "bee_works.cos")
                local7 = 0
                local8 = rndint(1, 3)
                while local7 < local8 do
                    arg1:run_chore(bee_works_neutral_to_drill, "bee_works.cos")
                    arg1:loop_chore_for(bee_works_drill_loop, "bee_works.cos", 3000, 5000)
                    arg1:run_chore(bee_works_stop_drill, "bee_works.cos")
                    arg1:run_chore(bee_works_drill_to_neutral, "bee_works.cos")
                    local7 = local7 + 1
                end
                arg1:run_chore(bee_works_hover, "bee_works.cos")
            elseif local6 == bee_works_weld then
                sleep_for(rndint(5000, 6000))
            elseif local6 == bee_works_big_hammer then
                arg1:stop_chore(bee_works_hold_big_hammer, "bee_works.cos")
                local7 = 0
                local8 = rndint(3, 6)
                while local7 < local8 do
                    arg1:run_chore(bee_works_big_hammer, "bee_works.cos")
                    local7 = local7 + 1
                end
            end
            fade_sfx("beewing.IMU", 2000, 0)
            if local6 == bee_works_weld then
                arg1:play_chore(bee_works_stop_weld, "bee_works.cos")
                arg1.movement_script = start_script(arg1.fly_to, arg1, local2.start.x, local2.start.y, local2.start.z, TRUE)
                arg1:wait_for_chore(bee_works_stop_weld, "bee_works.cos")
                arg1:stop_chore(bee_works_stop_weld, "bee_works.cos")
                arg1:play_chore_looping(bee_works_fly_back_hold, "bee_works.cos")
                while not arg1.near_destination do
                    break_here()
                end
                arg1:stop_chore(bee_works_fly_back_hold, "bee_works.cos")
                arg1:run_chore(bee_works_fly_to_neutral, "bee_works.cos")
                arg1:stop_chore(bee_works_fly_to_neutral, "bee_works.cos")
                wait_for_script(arg1.movement_script)
            elseif local6 == bee_works_big_hammer then
                arg1:play_chore_looping(bee_works_hold_big_hammer, "bee_works.cos")
                arg1:fly_to(local2.start.x, local2.start.y, local2.start.z, TRUE)
                arg1:stop_chore(bee_works_hold_big_hammer, "bee_works.cos")
            else
                arg1:play_chore(bee_works_fly_back, "bee_works.cos")
                arg1.movement_script = start_script(arg1.fly_to, arg1, local2.start.x, local2.start.y, local2.start.z, TRUE)
                arg1:wait_for_chore(bee_works_fly_back, "bee_works.cos")
                arg1:stop_chore(bee_works_fly_back, "bee_works.cos")
                arg1:play_chore_looping(bee_works_fly_back_hold, "bee_works.cos")
                while not arg1.near_destination do
                    break_here()
                end
                arg1:stop_chore(bee_works_fly_back_hold, "bee_works.cos")
                arg1:run_chore(bee_works_fly_to_neutral, "bee_works.cos")
                arg1:stop_chore(bee_works_fly_to_neutral, "bee_works.cos")
                wait_for_script(arg1.movement_script)
            end
            arg1.movement_script = nil
            sea_bee.worker_positions[arg1.hActor] = nil
            local1[local3].used = FALSE
            arg1:set_visibility(FALSE)
        end
        break_here()
    end
end
sea_bee.strike_idle_table = Idle:create("bee_strike")
idt = sea_bee.strike_idle_table
idt:add_state("sign_lo", { sign_lo = 0.30000001, hold_lo = 0.30000001, to_sign_hi = 0.30000001, to_akimbo = 0.1 })
idt:add_state("sign_hi", { sign_hi = 0.5, hi_to_lo = 0.5 })
idt:add_state("shake_fist", { shake_fist = 0.5, fist_to_akimbo = 0.5 })
idt:add_state("hold_lo", { sign_lo = 0.2, hold_lo = 0.5, to_sign_hi = 0.1, to_akimbo = 0.2 })
idt:add_state("hi_to_lo", { sign_lo = 0.60000002, hold_lo = 0.2, to_sign_hi = 0.1, to_akimbo = 0.1 })
idt:add_state("fist_to_akimbo", { akimbo_hold = 0.60000002, akimbo_to_lo = 0.30000001, to_fist = 0.1 })
idt:add_state("akimbo_hold", { akimbo_hold = 0.60000002, akimbo_to_lo = 0.30000001, to_fist = 0.1 })
idt:add_state("to_sign_hi", { sign_hi = 0.89999998, hi_to_lo = 0.1 })
idt:add_state("to_fist", { shake_fist = 0.80000001, fist_to_akimbo = 0.2 })
idt:add_state("to_akimbo", { akimbo_hold = 0.80000001, to_fist = 0.2 })
idt:add_state("akimbo_to_lo", { sign_lo = 0.40000001, hold_lo = 0.5, to_sign_hi = 0.050000001, to_akimbo = 0.050000001 })
sea_bee.strike_actor = nil
sea_bee.strike_idles = function(arg1) -- line 1251
    local local1
    local1 = rndint(0, 2)
    if local1 == 0 then
        arg1.strike_idle_script = start_script(arg1.run_strike_idles, arg1, "sign_lo")
    elseif local1 == 1 then
        arg1.strike_idle_script = start_script(arg1.run_strike_idles, arg1, "shake_fist")
    else
        arg1.strike_idle_script = start_script(arg1.run_strike_idles, arg1, "sign_hi")
    end
end
sea_bee.init_strike_stuff = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7) -- line 1264
    start_script(arg1.do_init_strike, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
end
sea_bee.do_init_strike = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7) -- line 1268
    local local1 = rndint(0, 2)
    system:lock_display()
    arg1:setpos(arg2, arg3, arg4)
    arg1:setrot(arg5, arg6, arg7)
    arg1.body:setpos(arg2, arg3, arg4)
    arg1.body:setrot(arg5, arg6, arg7)
    if local1 == 0 then
        local1 = bee_strike_sign_lo
    elseif local1 == 1 then
        local1 = bee_strike_shake_fist
    else
        local1 = bee_strike_sign_hi
    end
    arg1:play_chore(local1, "bee_strike.cos")
    arg1:play_chore(bee_flavor_no_flap, "bee_flavor.cos")
    if arg1 == angry_bees or arg1 == bee1 then
        arg1:complete_chore(bee_stamp_head_only, "bee_stamp.cos")
        arg1.body:play_chore(local1, "bee_strike.cos")
        arg1.body:play_chore(bee_flavor_no_flap, "bee_flavor.cos")
        arg1.body:complete_chore(bee_stamp_hide_head, "bee_stamp.cos")
        break_here()
        arg1.body:freeze()
    elseif arg1 == bee2 then
        arg1.body:free()
        break_here()
        arg1:freeze()
    end
    system:unlock_display()
end
sea_bee.run_strike_idles = function(arg1, arg2) -- line 1310
    local local1
    local local2
    local local3 = system.currentSet
    local local4 = sea_bee.strike_idle_table
    local local5, local6
    arg1.stop_idle = FALSE
    arg1.last_play_chore = nil
    break_here()
    break_here()
    local1 = local4.root_name .. "_" .. arg2
    while system.currentSet == local3 and local1 and not arg1.stop_idle do
        if sea_bee.strike_actor == nil then
            sea_bee.strike_actor = arg1.hActor
            local5 = rndint(20, 30)
            local6 = 0
            if arg1.body then
                arg1.body:thaw(TRUE)
            else
                arg1:thaw(TRUE)
            end
            while local6 < local5 and local1 and not arg1.stop_idle do
                arg1:play_chore(getglobal(local1))
                if arg1.body then
                    arg1.body:play_chore(getglobal(local1))
                end
                arg1.last_chore = getglobal(local1)
                break_here()
                arg1:wait_for_chore()
                if not arg1.stop_idle then
                    if arg1.last_play_chore then
                        if local4[arg1.last_play_chore] then
                            local2 = arg1.last_play_chore
                            arg1.stop_idle = TRUE
                            arg1:play_chore(getglobal(local1))
                            if arg1.body then
                                arg1.body:play_chore(getglobal(local1))
                            end
                            arg1.last_chore = local1
                            break_here()
                            arg1:wait_for_chore()
                        else
                            repeat
                                local1 = arg1.stop_table[arg1.last_chore]
                                arg1:play_chore(local1)
                                if arg1.body then
                                    arg1.body:play_chore(getglobal(local1))
                                end
                                arg1.last_chore = local1
                                arg1:wait_for_chore()
                            until local1 == arg1.last_play_chore
                            arg1.stop_idle = TRUE
                        end
                    else
                        local2 = pick_from_weighted_table(local4[local1])
                    end
                end
                if local2 then
                    local1 = local2
                end
                local6 = local6 + 1
            end
            sea_bee.strike_actor = nil
            if arg1.body then
                arg1.body:freeze()
            else
                arg1:freeze()
            end
        end
        break_here()
    end
end
angry_bees.say_line = function(arg1, arg2) -- line 1394
    Actor.say_line(arg1, arg2)
    start_script(bee1.syncrho_say_line, bee1, arg2, arg1)
end
sea_bee.syncrho_say_line = function(arg1, arg2, arg3) -- line 1399
    arg1:play_chore_looping(bee_flavor_mumble, "bee_flavor.cos")
    while arg3:is_speaking() do
        break_here()
    end
    arg1:stop_chore(bee_flavor_mumble, "bee_flavor.cos")
    arg1:complete_chore(bee_flavor_stop_talk, "bee_flavor.cos")
end
sea_bee.work_points = { }
sea_bee.work_points.count = 13
sea_bee.work_points[0] = { start = { x = 2.8907199, y = -1.73743, z = 4.4555001, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 2.8907199, y = -3.45013, z = 1.9954, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.work_points[1] = { start = { x = 3.80022, y = -1.74993, z = 9.5015001, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 3.80022, y = -3.43993, z = 2.0090001, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.work_points[2] = { start = { x = 4.26262, y = -2.2062299, z = 4.4759998, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 4.26262, y = -2.8482299, z = 2.7046001, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.work_points[3] = { start = { x = 5.6776199, y = -2.0313301, z = 4.9797001, pitch = 0, yaw = 160, roll = 0 }, finish = { x = 5.6776199, y = -3.67293, z = 2.3039999, pitch = 0, yaw = 160, roll = 0 } }
sea_bee.work_points[4] = { start = { x = 5.7941198, y = -2.28473, z = 6.0089998, pitch = 0, yaw = 160, roll = 0 }, finish = { x = 5.7941198, y = -4.1632299, z = 2.0706, pitch = 0, yaw = 160, roll = 0 } }
sea_bee.work_points[5] = { start = { x = 10.3385, y = -7.91013, z = 8.7849998, pitch = 0, yaw = 90, roll = 0 }, finish = { x = 10.3385, y = -7.91013, z = 4.9541001, pitch = 0, yaw = 90, roll = 0 } }
sea_bee.work_points[6] = { start = { x = 2.28562, y = -8.1475296, z = 4.9993, pitch = 0, yaw = 0, roll = 0 }, finish = { x = 2.28562, y = -6.8860302, z = 3.2130001, pitch = 0, yaw = 0, roll = 0 } }
sea_bee.work_points[7] = { start = { x = 2.49492, y = -7.4598298, z = 5.2233901, pitch = 0, yaw = 0, roll = 0 }, finish = { x = 2.49492, y = -6.90733, z = 2.6178, pitch = 0, yaw = 0, roll = 0 } }
sea_bee.work_points[8] = { start = { x = 2.49492, y = -4.9109201, z = 4.8497901, pitch = 0, yaw = 0, roll = 0 }, finish = { x = 2.49492, y = -4.4145198, z = 2.0402901, pitch = 0, yaw = 0, roll = 0 } }
sea_bee.work_points[9] = { start = { x = 3.0417199, y = -5.0980201, z = 5.0261898, pitch = 0, yaw = 0, roll = 0 }, finish = { x = 3.0417199, y = -4.23242, z = 2.7037899, pitch = 0, yaw = 0, roll = 0 } }
sea_bee.work_points[10] = { start = { x = 3.5262201, y = -8.3116198, z = 6.0753899, pitch = 0, yaw = 0, roll = 0 }, finish = { x = 3.5262201, y = -6.7236199, z = 2.7533901, pitch = 0, yaw = 0, roll = 0 } }
sea_bee.work_points[11] = { start = { x = 3.2148199, y = -4.9864202, z = 4.0039902, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 3.2148199, y = -5.6419201, z = 2.93999, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.work_points[12] = { start = { x = 4.8689098, y = -5.4816198, z = 5.6519899, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 4.8689098, y = -5.4950199, z = 3.0330901, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.work_points[13] = { start = { x = 3.92501, y = -1.79282, z = 5.76369, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 3.92501, y = -4.2494202, z = 1.6821899, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.big_hammer_points = { }
sea_bee.big_hammer_points.count = 4
sea_bee.big_hammer_points[0] = { start = { x = 2.2492299, y = -5.5011201, z = 5.4967899, pitch = 0, yaw = 300, roll = 0 }, finish = { x = 2.2492299, y = -5.5011201, z = 2.7767899, pitch = 0, yaw = 300, roll = 0 } }
sea_bee.big_hammer_points[1] = { start = { x = 3.3292301, y = -7.3206301, z = 5.7274799, pitch = 0, yaw = 30, roll = 0 }, finish = { x = 3.3292301, y = -6.3261299, z = 3.6459799, pitch = 0, yaw = 30, roll = 0 } }
sea_bee.big_hammer_points[2] = { start = { x = 3.39203, y = -4.04213, z = 5.9975801, pitch = 0, yaw = 100, roll = 0 }, finish = { x = 3.39203, y = -4.04213, z = 2.91608, pitch = 0, yaw = 100, roll = 0 } }
sea_bee.big_hammer_points[3] = { start = { x = 3.84533, y = -4.5699301, z = 5.3148799, pitch = 0, yaw = 100, roll = 0 }, finish = { x = 3.84533, y = -4.5699301, z = 2.45228, pitch = 0, yaw = 100, roll = 0 } }
sea_bee.big_hammer_points[4] = { start = { x = 5.9882302, y = -5.45753, z = 8.12008, pitch = 0, yaw = 0, roll = 0 }, finish = { x = 5.9882302, y = -5.45753, z = 4.1080799, pitch = 0, yaw = 0, roll = 0 } }
sea_bee.drill_points = { }
sea_bee.drill_points.count = 9
sea_bee.drill_points[0] = { start = { x = 2.8103199, y = -1.74883, z = 5.0798998, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 2.8103199, y = -3.1138301, z = 2.0854001, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.drill_points[1] = { start = { x = 3.77191, y = -1.92143, z = 5.5978999, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 3.77191, y = -3.13503, z = 2.1189001, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.drill_points[2] = { start = { x = 4.68891, y = -1.67203, z = 5.7294002, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 4.68891, y = -3.18203, z = 2.2434001, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.drill_points[3] = { start = { x = 5.4423199, y = -2.0043299, z = 5.7424002, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 5.4423199, y = -3.35023, z = 2.3643999, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.drill_points[4] = { start = { x = 3.7167201, y = -1.1689301, z = 5.5096002, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 3.7167201, y = -2.82303, z = 2.5515001, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.drill_points[5] = { start = { x = 3.90222, y = -1.60593, z = 5.5855999, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 3.90222, y = -3.9981301, z = 1.8295, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.drill_points[6] = { start = { x = 7.1019301, y = -4.5686302, z = 8.3982, pitch = 0, yaw = 90, roll = 0 }, finish = { x = 7.1019301, y = -4.5686302, z = 3.3901999, pitch = 0, yaw = 90, roll = 0 } }
sea_bee.drill_points[7] = { start = { x = 8.2294302, y = -6.2635198, z = 8.6535997, pitch = 0, yaw = 90, roll = 0 }, finish = { x = 8.2294302, y = -6.2635198, z = 3.2031, pitch = 0, yaw = 90, roll = 0 } }
sea_bee.drill_points[8] = { start = { x = 3.5317299, y = -8.91222, z = 5.8316002, pitch = 0, yaw = 0, roll = 0 }, finish = { x = 3.5317299, y = -7.39012, z = 2.8211999, pitch = 0, yaw = 0, roll = 0 } }
sea_bee.drill_points[9] = { start = { x = 4.5858202, y = -10.1919, z = 7.1627998, pitch = 0, yaw = 0, roll = 0 }, finish = { x = 4.5858202, y = -7.4458199, z = 4.3002, pitch = 0, yaw = 0, roll = 0 } }
sea_bee.weld_points = { }
sea_bee.weld_points.count = 9
sea_bee.weld_points[0] = { start = { x = 2.4005201, y = -2.34902, z = 5.7907, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 2.4005201, y = -3.64292, z = 2.0611999, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.weld_points[1] = { start = { x = 2.7706201, y = -1.86502, z = 5.2820001, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 2.7706201, y = -3.72402, z = 1.816, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.weld_points[2] = { start = { x = 2.7706201, y = -1.46202, z = 5.5728002, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 2.7706201, y = -3.3210199, z = 2.4913001, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.weld_points[3] = { start = { x = 3.46662, y = -1.99172, z = 5.4166002, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 3.46662, y = -3.6458199, z = 2.0386, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.weld_points[4] = { start = { x = 5.4868202, y = -1.99902, z = 5.1738, pitch = 0, yaw = 180, roll = 0 }, finish = { x = 5.4868202, y = -3.8580201, z = 2.2874, pitch = 0, yaw = 180, roll = 0 } }
sea_bee.weld_points[5] = { start = { x = 6.5672202, y = -4.4411201, z = 6.4329, pitch = 0, yaw = 90, roll = 0 }, finish = { x = 6.5672202, y = -4.4411201, z = 3.2693999, pitch = 0, yaw = 90, roll = 0 } }
sea_bee.weld_points[6] = { start = { x = 7.1017199, y = -6.3796301, z = 8.6829004, pitch = 0, yaw = 90, roll = 0 }, finish = { x = 7.1017199, y = -6.3796301, z = 3.6749001, pitch = 0, yaw = 90, roll = 0 } }
sea_bee.weld_points[7] = { start = { x = 2.3273201, y = -7.8400302, z = 5.9288001, pitch = 0, yaw = 0, roll = 0 }, finish = { x = 2.3273201, y = -6.35953, z = 2.4428, pitch = 0, yaw = 0, roll = 0 } }
sea_bee.weld_points[8] = { start = { x = 4.2172198, y = -9.3459301, z = 7.23949, pitch = 0, yaw = 0, roll = 0 }, finish = { x = 4.2172198, y = -7.7080302, z = 3.4085901, pitch = 0, yaw = 0, roll = 0 } }
sea_bee.weld_points[9] = { start = { x = 6.0967302, y = -4.91502, z = 9.7298899, pitch = 0, yaw = 270, roll = 0 }, finish = { x = 6.0967302, y = -4.91502, z = 3.3143899, pitch = 0, yaw = 270, roll = 0 } }
se_hatch_Chore0 = 0
se_hatch_closed = 1
CheckFirstTime("se.lua")
se = Set:create("se.set", "scrimshaw exterior", { se_estws = 0, se_overhead = 1 })
se.set_up_water = function() -- line 12
    local local1 = ReadRegistryValue("GrimDeveloper")
    if local1 then
        EngineDisplay(FALSE)
        break_here()
        EngineDisplay(TRUE)
    end
    start_script(play_movie_looping, "se_water.snm")
end
se.jump_off = function() -- line 22
    START_CUT_SCENE()
    se:switch_to_set()
    manny:put_in_set(se)
    manny:setpos(47.2102, -15.5179, -0)
    manny:setrot(0, -172.071, 0)
    if in_year_four then
        manny:push_costume("msb_ladder_generic.cos")
    else
        manny:push_costume("mc_ladder_generic.cos")
    end
    manny:play_chore(4)
    manny:wait_for_chore()
    manny:pop_costume()
    END_CUT_SCENE()
end
se.enter = function(arg1) -- line 49
    NewObjectState(se_estws, OBJSTATE_OVERLAY, "se_hatch.bm", nil, TRUE)
    se.si_door:set_object_state("se_hatch.cos")
    se.si_door:play_chore(1)
    start_script(se.set_up_water)
    start_script(foghorn_sfx)
    se:add_ambient_sfx(harbor_ambience_list, harbor_ambience_parm_list)
end
se.exit = function(arg1) -- line 58
    StopMovie()
    stop_script(foghorn_sfx)
end
se.sd_door = Object:create(se, "/setx001/door", 40.9561, -12.6999, 0.57370597, { range = 0.60000002 })
se.sd_door.use_pnt_x = 42.281799
se.sd_door.use_pnt_y = -12.7303
se.sd_door.use_pnt_z = 0
se.sd_door.use_rot_x = 0
se.sd_door.use_rot_y = 104.189
se.sd_door.use_rot_z = 0
se.sd_door.out_pnt_x = 41.586399
se.sd_door.out_pnt_y = -12.7505
se.sd_door.out_pnt_z = 0.35771301
se.sd_door.out_rot_x = 0
se.sd_door.out_rot_y = 83.776901
se.sd_door.out_rot_z = 0
se.sd_door:make_untouchable()
se.sd_box = se.sd_door
se.sd_door.walkOut = function(arg1) -- line 94
    START_CUT_SCENE()
    if manny.is_backward then
        manny:set_walk_backwards(FALSE)
        manny:turn_right(180)
    end
    END_CUT_SCENE()
    xb:come_out_door(xb.se_door)
end
se.si_door = Object:create(se, "/setx002/hatch", 47.284401, -16.0672, 0.80000001, { range = 2.5 })
se.si_door.use_pnt_x = 46.5373
se.si_door.use_pnt_y = -14.5703
se.si_door.use_pnt_z = 0
se.si_door.use_rot_x = 0
se.si_door.use_rot_y = 923.09698
se.si_door.use_rot_z = 0
se.si_door.out_pnt_x = 47.0923
se.si_door.out_pnt_y = -15.6921
se.si_door.out_pnt_z = 0
se.si_door.out_rot_x = 0
se.si_door.out_rot_y = -509.58401
se.si_door.out_rot_z = 0
se.si_box = se.si_door
se.si_door.lookAt = function(arg1) -- line 120
    manny:say_line("/sema003/")
end
se.si_door.walkOut = function(arg1) -- line 124
    local local1 = { }
    START_CUT_SCENE()
    manny:ignore_boxes()
    manny:walkto(47.0042, -15.5869, -0.040999901, 0, -154.69701, 0)
    manny:wait_for_actor()
    if manny.is_holding then
        put_away_held_item()
    end
    manny:set_visibility(FALSE)
    manny:push_costume("mc_ladder_generic.cos")
    manny:play_chore_looping(5)
    manny:setpos({ x = 47.211201, y = -15.9199, z = -0.048999999 })
    manny:setrot(0, -154.69701, 0)
    if in_year_four then
        manny:push_costume("msb_enter_sc.cos")
        manny:blend(0, 5, 500, "msb_enter_sc.cos", "mc_ladder_generic.cos")
    else
        manny:push_costume("ma_enter_sc.cos")
        manny:blend(0, 5, 500, "ma_enter_sc.cos", "mc_ladder_generic.cos")
    end
    manny:set_visibility(TRUE)
    sleep_for(1000)
    se.si_door:play_chore(0)
    if in_year_four then
        manny:wait_for_chore(0, "msb_enter_sc.cos")
    else
        manny:wait_for_chore(0, "ma_enter_sc.cos")
    end
    manny:pop_costume()
    manny:pop_costume()
    END_CUT_SCENE()
    manny:follow_boxes()
    si:come_out_door(si.ladder)
end
se.si_door.comeOut = function(arg1) -- line 163
    manny:setpos(47.0913, -15.3242, 0)
    manny:setrot(0, -681.6, 0)
end
CheckFirstTime("_sets.lua")
system.setCount = 0
system.setTable = { }
system.currentSet = nil
system.ambientLight = 0
OBJSTATE_UNDERLAY = 1
OBJSTATE_OVERLAY = 2
OBJSTATE_STATE = 3
no_scythe_sets = { "co.set", "hq.set", "lo.set", "tu.set", "pk.set", "sm.set", "cf.set", "cc.set", "ci.set", "cn.set", "bk.set", "bi.set", "be.set", "ev.set", "sl.set", "pi.set", "do.set", "hh.set", "xb.set", "hp.set", "de.set", "il.set", "fo.set", "cy.set", "ew.set", "tg.set", "td.set", "mk.set", "nq.set", "th.set", "ly.set", "si.set" }
need_scythe_sets = { "tr.set", "ac.set", "dp.set", "fi.set", "gh.set", "gs.set", "ks.set", "lr.set", "lu.set", "mf.set", "mn.set", "mo.set", "my.set", "na.set", "op.set", "rf.set", "sg.set", "si.set", "sp.set", "vd.set", "vi.set", "vo.set", "hk.set" }
system.setTemplate = { name = "<unnamed>", setFile = nil, hSet = nil, setups = nil, cheat_boxes = nil, shrinkable = nil, boxes_shrunk = nil }
Set = system.setTemplate
Set.create = function(arg1, arg2, arg3, arg4, arg5) -- line 77
    local local1 = { }
    local1.parent = arg1
    if arg3 then
        local1.name = arg3
    else
        local1.name = arg2
    end
    local1.setFile = arg2
    local1.setups = arg4
    if arg4 then
        globalize(arg4)
    end
    local1.hSet = nil
    local1.number = system.setCount
    local1.doors = { }
    local1.cheat_boxes = { }
    local1.objects = { }
    local1.object_states = { }
    local1.camera_adjusts = { }
    local1.frozen_actors = nil
    local1.shrinkable = FALSE
    local1.boxes_shrunk = FALSE
    local1.cameraChange = FALSE
    if arg5 then
        local1.temporary = TRUE
    else
        local1.temporary = FALSE
    end
    system.setTable[arg2] = local1
    system.setTable[system.setCount] = local1
    system.setCount = system.setCount + 1
    PrintDebug("Adding room " .. system.setCount .. ": " .. arg2 .. "\n")
    return local1
end
Set.current_setup = function(arg1, arg2) -- line 130
    if arg2 == nil then
        return GetCurrentSetup(arg1.setFile)
    elseif arg2 ~= GetCurrentSetup(arg1.setFile) then
        MakeCurrentSetup(arg2)
        if system.ambientLight then
            SetAmbientLight(system.ambientLight)
        end
    end
end
Set.switch_to_set = function(arg1, arg2) -- line 151
    local local1
    local local2, local3
    local1 = FALSE
    if arg2 ~= nil and strfind(strlower(arg2), "noenter") ~= nil then
        local1 = TRUE
    end
    if system.currentSet ~= nil then
        if system.currentSet.boxes_shrunk then
            UnShrinkBoxes()
            system.currentSet.boxes_shrunk = FALSE
            PrintDebug("boxes unshrunk!")
        end
    end
    if system.currentSet and arg1.name == system.currentSet.name then
        PrintDebug("Already in " .. arg1.name .. "!\n")
    else
        PrintDebug("Switching to set: " .. arg1.name .. ".\n")
        system.lastSet = system.currentSet
        if system.currentSet ~= nil and not local1 then
            system.currentSet:CommonExit()
        end
        system.currentSet = arg1
        local2, local3 = CheckForCD(arg1.setFile, TRUE)
        if local3 then
            NukeResources()
            GetSystemFonts()
        end
        if not local1 then
            arg1:CommonEnter()
        end
        MakeCurrentSet(arg1.setFile)
        if not local1 then
            if Set.footsteps_table then
                Set.footsteps_table:update(arg1)
                set_vox_effect()
            end
        end
        if not local1 then
            arg1:enter()
        end
        print_scripts()
        if arg1.name ~= "Inventory" and developerMode then
            if dont_update_lastSet then
                dont_update_lastSet = FALSE
            else
                PrintDebug("Writing reg: GrimLastSet=" .. tostring(arg1.setFile) .. "\n")
                WriteRegistryValue("GrimLastSet", tostring(arg1.setFile))
            end
        end
        LightMgrSetChange()
        if system.ambientLight then
            SetAmbientLight(system.ambientLight)
        end
        if not local1 and (manny:get_costume() == nil or manny.costume_state ~= look_up_correct_costume(system.currentSet)) then
            manny:default(look_up_correct_costume(system.currentSet))
        end
        if not local1 then
            if music_state then
                music_state:update(arg1)
            end
        end
        if not local1 then
            if arg1.ambient_sfx then
                single_start_script(arg1.play_ambient_sfx, arg1)
            end
        end
    end
end
Set.come_out_door = function(arg1, arg2) -- line 254
    arg1:switch_to_set()
    if arg2 then
        system.currentActor:put_in_set(arg1)
        if arg2.comeOut then
            arg2:comeOut()
        else
            arg2:come_out_door()
        end
    else
        PrintDebug("\n* * * come_out_door: No valid door!\n")
    end
    arg1:cameraman()
end
Set.make_objects_visible = function(arg1) -- line 275
    local local1, local2 = next(arg1, nil)
    while local1 do
        if type(local2) == "table" then
            if local2.touchable or local2.has_object_states then
                PutActorInSet(local2.interest_actor.hActor, arg1.setFile)
                if arg1.temporary or system.object_names_showing then
                elseif local2.has_object_states then
                    local2.interest_actor:set_visibility(TRUE)
                else
                    local2.interest_actor:set_visibility(FALSE)
                end
            end
        end
        local1, local2 = next(arg1, local1)
    end
end
Set.update_object_names = function(arg1) -- line 302
    local local1, local2
    local local3
    local local4, local5
    system.object_names_showing = TRUE
    break_here()
    local1, local2 = next(arg1, nil)
    while local1 do
        if type(local2) == "table" then
            if local2.temp_text then
                KillTextObject(local2.temp_text)
                local2.temp_text = nil
            end
            if local2.touchable and local2.range > 0 then
                local3 = local2.interest_actor:getpos()
                local4, local5 = WorldToScreen(local3.x, local3.y, local3.z)
                if local4 and local5 then
                    local2.temp_text = MakeTextObject(local2.name, { fgcolor = White, x = local4, y = local5, font = special_font, center = TRUE })
                end
            end
        end
        local1, local2 = next(arg1, local1)
    end
end
Set.kill_object_names = function(arg1) -- line 336
    local local1, local2
    local1, local2 = next(arg1, nil)
    while local1 do
        if type(local2) == "table" then
            if local2.temp_text then
                KillTextObject(local2.temp_text)
                local2.temp_text = nil
            end
        end
        local1, local2 = next(arg1, local1)
    end
    system.object_names_showing = FALSE
end
Set.display_room_name = function(arg1) -- line 358
    arg1.room_text = MakeTextObject(arg1.name, { fgcolor = Aqua, x = 500, y = 460, font = pt_font })
end
Set.kill_room_name = function(arg1) -- line 366
    if arg1.room_text then
        KillTextObject(arg1.room_text)
    end
end
Set.CommonEnter = function(arg1) -- line 376
    arg1:make_objects_visible()
    if arg1.been_there then
        arg1.been_there = arg1.been_there + 1
    else
        arg1.been_there = 1
    end
    if arg1.temporary then
        system.object_names_showing = TRUE
        arg1:display_room_name()
        start_script(arg1.update_object_names, arg1)
    elseif system.object_names_showing then
        start_script(arg1.update_object_names, arg1)
    end
end
Set.CommonCameraChange = function(arg1, arg2, arg3) -- line 406
    local local1, local2
    local local3, local4, local5
    local local6
    current_setup = arg3
    if arg2 then
        last_setup = arg2
    else
        last_setup = current_setup
    end
    if arg1.camera_adjusts[arg3 + 1] then
        local4 = arg1.camera_adjusts[arg3 + 1]
    else
        local4 = 0
    end
    if MarioControl then
        local6 = TRUE
        if last_setup ~= nil and current_setup ~= nil then
            local1 = GetCameraLookVector(last_setup)
            local2 = GetCameraLookVector(current_setup)
            if type(local1) == "table" and type(local2) == "table" then
                local3 = GetAngleBetweenVectors(local1, local2)
                local5 = abs(system.camera_adjust_y - local4)
                if local3 + local5 < 80 then
                    local6 = FALSE
                end
            end
        end
        if local6 then
            ResetMarioControls()
        end
    end
    system.camera_adjust_y = local4
    if system.object_names_showing then
        start_script(arg1.update_object_names, arg1)
    end
    if arg1.camerachange then
        arg1:camerachange(arg2, arg3)
    end
end
Set.CommonPostCameraChange = function(arg1, arg2) -- line 461
    arg1:redraw_frozen_actors()
    if arg1.postcamerachange then
        arg1:postcamerachange(arg2)
    end
end
Set.CommonExit = function(arg1) -- line 475
    stop_script(arg1.play_ambient_sfx)
    if arg1.temporary then
        arg1:kill_room_name()
        arg1:kill_object_names()
    end
    if system.object_names_showing then
        arg1:kill_object_names()
        system.object_names_showing = TRUE
    end
    if arg1.exit then
        arg1:exit()
    end
    if MarioControl then
        ResetMarioControls()
    end
    arg1:free_object_states()
    hot_object = nil
    manny:head_look_at(nil)
end
Set.enter = function(arg1) -- line 510
end
Set.exit = function(arg1) -- line 519
end
Set.camerachange = function(arg1, arg2, arg3) -- line 528
end
Set.postcamerachange = function(arg1, arg2) -- line 536
end
Set.update_music_state = function(arg1) -- line 544
    return nil
end
Set.add_object_state = function(arg1, arg2, arg3, arg4, arg5, arg6) -- line 557
    if arg5 == nil then
        arg5 = OBJSTATE_STATE
    end
    return NewObjectState(arg2, arg5, arg3, arg4, arg6)
end
Set.free_object_states = function(arg1) -- line 571
    local local1, local2, local3
    local1 = next(arg1.object_states, nil)
    while local1 do
        local3 = next(arg1.object_states, local1)
        local1:free_object_state()
        local1 = local3
    end
end
Set.get_setup_name = function(arg1) -- line 589
    local local1, local2 = next(arg1.setups, nil)
    local local3
    while local1 do
        if arg1:current_setup() == local2 then
            if local3 then
                if strlen(local1) < strlen(local3) then
                    local3 = local1
                end
            else
                local3 = local1
            end
        end
        local1, local2 = next(arg1.setups, local1)
    end
    return local3
end
Set.cameraman = function(arg1) -- line 614
    local local1
    if cameraman_disabled == FALSE and arg1:current_setup() ~= arg1.setups.overhead then
        local1 = system.currentActor:find_sector_name(tostring(cameraman_box_name))
        if not local1 or arg1 ~= cameraman_watching_set then
            arg1:force_camerachange()
        else
            arg1.cameraChange = FALSE
        end
    end
end
Set.force_camerachange = function(arg1) -- line 639
    local local1, local2
    local local3
    arg1.cameraChange = TRUE
    cameraman_watching_set = arg1
    local1, cameraman_box_name, local2 = system.currentActor:find_sector_type(CAMERA)
    local3 = arg1.setups[tostring(cameraman_box_name)]
    arg1:current_setup(local3)
end
Set.next_set = function(arg1) -- line 654
    local local1 = system.setTable[arg1.number + 1]
    if not local1 then
        local1 = system.setTable[1]
    end
    local1:switch_to_set()
    manny:put_in_set(local1)
    manny:put_at_interest()
end
Set.prev_set = function(arg1) -- line 665
    local local1 = system.setTable[arg1.number - 1]
    if not local1 or local1 == testroom then
        local1 = system.setTable[system.setCount - 1]
    end
    local1:switch_to_set()
    manny:put_in_set(local1)
    manny:put_at_interest()
end
Set.redraw_frozen_actors = function(arg1) -- line 677
    local local1, local2
    if arg1.frozen_actors then
        local1, local2 = next(arg1.frozen_actors, nil)
        while local1 do
            local2.actor:refreeze()
            local1, local2 = next(arg1.frozen_actors, local1)
        end
    end
end
Set.short_name = function(arg1) -- line 690
    local local1 = arg1.setFile
    local local2
    local local3
    if local1 then
        local1 = strlower(local1)
        local3 = strfind(local1, ".set")
        if local3 then
            local2 = strsub(local1, 1, local3 - 1)
        end
    end
    return local2
end
Set.play_ambient_sfx = function(arg1) -- line 707
    local local1, local2
    local local3, local4
    local local5, local6, local7
    if type(arg1.ambient_sfx) == "table" then
        local2 = { min_delay = 4000, max_delay = 6000, min_volume = 50, max_volume = 100, min_pan = 0, max_pan = 127 }
        arg1.ambient_sfx = union_table(local2, arg1.ambient_sfx)
        if arg1.ambient_sfx.sfx then
            local1 = nil
            local5 = 0
            local6, local7 = next(arg1.ambient_sfx.sfx, nil)
            while local6 do
                local5 = local5 + 1
                local6, local7 = next(arg1.ambient_sfx.sfx, local6)
            end
            while TRUE do
                sleep_for(rndint(arg1.ambient_sfx.min_delay, arg1.ambient_sfx.max_delay))
                if cutSceneLevel <= 0 then
                    repeat
                        local3 = pick_one_of(arg1.ambient_sfx.sfx)
                    until local3 ~= local1 or local5 < 2
                    local4 = start_sfx(local3, IM_LOW_PRIORITY)
                    set_vol(local3, rndint(arg1.ambient_sfx.min_volume, arg1.ambient_sfx.max_volume))
                    set_pan(local3, rndint(arg1.ambient_sfx.min_pan, arg1.ambient_sfx.max_pan))
                    PrintDebug("Ambient stinger: " .. local3 .. "\n")
                    arg1.ambient_sfx.hCurSound = local4
                    arg1.ambient_sfx.curSound = local3
                    wait_for_sound(local4)
                    arg1.ambient_sfx.hCurSound = nil
                    local1 = local3
                end
                break_here()
            end
        end
    end
end
Set.add_ambient_sfx = function(arg1, arg2, arg3) -- line 752
    arg1.ambient_sfx = { }
    arg1.ambient_sfx.sfx = arg2
    if type(arg3) == "table" then
        arg1.ambient_sfx = union_table(arg1.ambient_sfx, arg3)
    end
end
Set.stop_ambient_sfx = function(arg1, arg2) -- line 760
    stop_script(arg1.play_ambient_sfx)
    if type(arg1.ambient_sfx) == "table" then
        if arg1.ambient_sfx.hCurSound and arg2 then
            fade_sfx(arg1.ambient_sfx.hCurSound, 500, 0)
        elseif arg1.ambient_sfx.hCurSound then
            stop_sound(arg1.ambient_sfx.hCurSound)
        end
        arg1.ambient_sfx.hCurSound = nil
        arg1.ambient_sfx.curSound = nil
    end
end
Set.unfreeze_all_actors = function(arg1) -- line 773
    local local1, local2, local3
    local3 = 0
    local1, local2 = next(system.actorTable, nil)
    while local1 do
        if local2.frozen == system.currentSet then
            local2:thaw(FALSE, TRUE)
            local3 = local3 + 1
        end
        if local2.body then
            if local2.body.frozen == system.currentSet then
                local2.body:thaw(FALSE, TRUE)
                local3 = local3 + 1
            end
        end
        local1, local2 = next(system.actorTable, local1)
    end
    if local3 > 0 then
        ForceRefresh()
    end
end
box_on = function(arg1) -- line 803
    MakeSectorActive(arg1, TRUE)
end
box_off = function(arg1) -- line 809
    MakeSectorActive(arg1, FALSE)
end
list_sets = function() -- line 817
    local local1 = 0
    local local2
    while system.setTable[local1] do
        local2 = system.setTable[local1]
        PrintDebug(local2.setFile .. "\t" .. local2.name .. "\n")
        local1 = local1 + 1
    end
end
display_setup_name = function() -- line 833
    if not system.setup_name_hText then
        system.setup_name_hText = MakeTextObject("", { fgcolor = Magenta, x = 10, y = 460, font = pt_font })
    end
    if not system.setup_name_shown or system.setup_name_shown ~= system.currentSet:get_setup_name() then
        system.setup_name_shown = system.currentSet:get_setup_name()
        if not system.setup_name_shown then
            ChangeTextObject(system.setup_name_hText, "[setup name not found]")
        else
            ChangeTextObject(system.setup_name_hText, system.setup_name_shown)
        end
    end
end
kill_setup_name = function() -- line 848
    setup_name_showing = FALSE
    KillTextObject(system.setup_name_hText)
    system.setup_name_shown = nil
    system.setup_name_hText = nil
end
slide_show = function(arg1) -- line 859
    local local1
    local local2 = system.currentSet.number
    local local3, local4
    local local5
    local local6
    local local7 = { }
    if InputDialog("Run Slide Show?", "(y OR n)") == "y" then
        if arg1 then
            local6 = arg1 * 1000
        else
            local6 = 4000
        end
        local1 = system.setTable[local2]
        while local1 do
            if not local1.temporary then
                local7[local1] = { }
                local1:switch_to_set()
                local3, local4 = next(local1.setups, nil)
                while local3 do
                    if not local7[local1][local4] and strsub(local3, 1, 2) ~= "ov" and strsub(local3, 4, 5) ~= "ov" and strsub(local3, 1, 3) ~= "top" and strsub(local3, 4, 6) ~= "top" then
                        local7[local1][local4] = TRUE
                        local1:current_setup(local4)
                        sleep_for(local6)
                    end
                    local3, local4 = next(local1.setups, local3)
                end
            end
            local2 = local2 + 1
            local1 = system.setTable[local2]
        end
    end
end
switch_to_set_from_user = function() -- line 904
    local local1
    local local2, local3
    PrintDebug("In switch_to_set_from_user()\n")
    local1 = InputDialog("Go to Set", "Enter set name (mo) or friendly name (Manny's Office):")
    if local1 ~= nil then
        local2, local3 = next(system.setTable, nil)
        while local2 do
            if strlower(local3.name) == strlower(local1) or strlower(local3.setFile) == strlower(local1 .. ".set") then
                local3:switch_to_set()
                system.currentActor:put_in_set(local3)
                system.currentActor:put_at_interest()
                return
            else
                local2, local3 = next(system.setTable, local2)
            end
        end
        PrintDebug("Set '" .. local1 .. "' not found.\n")
    end
end
load_room_code = function(arg1) -- line 935
    local local1
    local1 = dofile(arg1)
    if local1 ~= nil then
        PrintDebug("HELP! Couldn't source '" .. arg1 .. "'\n")
    else
        PrintDebug("Sourced '" .. arg1 .. "'\n")
    end
    return local1
end
source_all_set_files = function() -- line 953
    local local1
    local local2
    local local3
    local local4
    if DEMO then
        load_room_code("al.lua")
        load_room_code("do.lua")
        load_room_code("fe.lua")
        load_room_code("hq.lua")
        load_room_code("le.lua")
        load_room_code("mo.lua")
        load_room_code("os.lua")
        load_room_code("rf.lua")
        load_room_code("rp.lua")
        load_room_code("st.lua")
        load_room_code("suitset.lua")
    else
        load_room_code("ac.lua")
        load_room_code("al.lua")
        load_room_code("ar.lua")
        load_room_code("at.lua")
        load_room_code("bb.lua")
        load_room_code("bd.lua")
        load_room_code("be.lua")
        load_room_code("bi.lua")
        load_room_code("bk.lua")
        load_room_code("bl.lua")
        load_room_code("bp.lua")
        load_room_code("bs.lua")
        load_room_code("bu.lua")
        load_room_code("bv.lua")
        load_room_code("bw.lua")
        load_room_code("cc.lua")
        load_room_code("ce.lua")
        load_room_code("cf.lua")
        load_room_code("ci.lua")
        load_room_code("ck.lua")
        load_room_code("cl.lua")
        load_room_code("cn.lua")
        load_room_code("co.lua")
        load_room_code("cu.lua")
        load_room_code("cv.lua")
        load_room_code("cy.lua")
        load_room_code("dd.lua")
        load_room_code("de.lua")
        load_room_code("dh.lua")
        load_room_code("do.lua")
        load_room_code("dp.lua")
        load_room_code("dr.lua")
        load_room_code("ea.lua")
        load_room_code("ei.lua")
        load_room_code("ev.lua")
        load_room_code("ew.lua")
        load_room_code("fc.lua")
        load_room_code("fe.lua")
        load_room_code("fh.lua")
        load_room_code("fi.lua")
        load_room_code("fo.lua")
        load_room_code("fp.lua")
        load_room_code("ga.lua")
        load_room_code("gh.lua")
        load_room_code("gs.lua")
        load_room_code("gt.lua")
        load_room_code("ha.lua")
        load_room_code("hb.lua")
        load_room_code("he.lua")
        load_room_code("hf.lua")
        load_room_code("hh.lua")
        load_room_code("hk.lua")
        load_room_code("hl.lua")
        load_room_code("hp.lua")
        load_room_code("hq.lua")
        load_room_code("il.lua")
        load_room_code("kh.lua")
        load_room_code("jb.lua")
        load_room_code("lb.lua")
        load_room_code("ks.lua")
        load_room_code("lm.lua")
        load_room_code("le.lua")
        load_room_code("lr.lua")
        load_room_code("lo.lua")
        load_room_code("lw.lua")
        load_room_code("lu.lua")
        load_room_code("ly.lua")
        load_room_code("lx.lua")
        load_room_code("me.lua")
        load_room_code("lz.lua")
        load_room_code("mg.lua")
        load_room_code("mf.lua")
        load_room_code("mn.lua")
        load_room_code("mk.lua")
        load_room_code("mt.lua")
        load_room_code("mo.lua")
        load_room_code("my.lua")
        load_room_code("mx.lua")
        load_room_code("nl.lua")
        load_room_code("na.lua")
        load_room_code("op.lua")
        load_room_code("nq.lua")
        load_room_code("pc.lua")
        load_room_code("os.lua")
        load_room_code("pk.lua")
        load_room_code("pi.lua")
        load_room_code("re.lua")
        load_room_code("ps.lua")
        load_room_code("ri.lua")
        load_room_code("rf.lua")
        load_room_code("rp.lua")
        load_room_code("sg.lua")
        load_room_code("si.lua")
        load_room_code("se.lua")
        load_room_code("sm.lua")
        load_room_code("sh.lua")
        load_room_code("st.lua")
        load_room_code("sl.lua")
        load_room_code("td.lua")
        load_room_code("sp.lua")
        load_room_code("tg.lua")
        load_room_code("su.lua")
        load_room_code("tr.lua")
        load_room_code("tb.lua")
        load_room_code("tu.lua")
        load_room_code("te.lua")
        load_room_code("tx.lua")
        load_room_code("th.lua")
        load_room_code("vi.lua")
        load_room_code("ts.lua")
        load_room_code("wc.lua")
        load_room_code("tw.lua")
        load_room_code("zw.lua")
        load_room_code("vd.lua")
        load_room_code("tp.lua")
        load_room_code("vo.lua")
        load_room_code("cb.lua")
        load_room_code("xb.lua")
        load_room_code("pf.lua")
        load_room_code("ul.lua")
    end
    return
end
set_ambient_light = function(arg1) -- line 1076
    if not arg1 then
        arg1 = 0
    end
    system.ambientLight = arg1
    SetAmbientLight(arg1)
end
Set.footsteps_table = { }
Set.footsteps_table.ac = "underwater"
Set.footsteps_table.al = "concrete"
Set.footsteps_table.ar = "metal"
Set.footsteps_table.at = "echo"
Set.footsteps_table.bb = "concrete"
Set.footsteps_table.bd = "dirt"
Set.footsteps_table.be = "concrete"
Set.footsteps_table.bi = "marble"
Set.footsteps_table.bk = "marble"
Set.footsteps_table.bl = "sand"
Set.footsteps_table.bp = "concrete"
Set.footsteps_table.bs = "marble"
Set.footsteps_table.bu = "sand"
Set.footsteps_table.bv = "dirt"
Set.footsteps_table.bw = "concrete"
Set.footsteps_table.cb = "concrete"
Set.footsteps_table.cc = "rug"
Set.footsteps_table.ce = "concrete"
Set.footsteps_table.cf = "rug"
Set.footsteps_table.ci = "rug"
Set.footsteps_table.ck = "dirt"
Set.footsteps_table.cl = "concrete"
Set.footsteps_table.cn = "rug"
Set.footsteps_table.co = "rug"
Set.footsteps_table.cu = "marble"
Set.footsteps_table.cv = "concrete"
Set.footsteps_table.cy = "underwater"
Set.footsteps_table.dd = "concrete"
Set.footsteps_table.de = "metal"
Set.footsteps_table.dh = "concrete"
Set.footsteps_table["do"] = "rug"
Set.footsteps_table.dp = "metal"
Set.footsteps_table.dr = "metal"
Set.footsteps_table.ea = "underwater"
Set.footsteps_table.ei = "metal"
Set.footsteps_table.ev = "concrete"
Set.footsteps_table.ew = "sand"
Set.footsteps_table.fc = "dirt"
Set.footsteps_table.fe = "pavement"
Set.footsteps_table.fh = "metal2"
Set.footsteps_table.fi = "marble"
Set.footsteps_table.fo = "metal"
Set.footsteps_table.fp = "concrete"
Set.footsteps_table.ga = "echo"
Set.footsteps_table.ge = "concrete"
Set.footsteps_table.gh = "metal"
Set.footsteps_table.gs = "concrete"
Set.footsteps_table.gt = "marble"
Set.footsteps_table.ha = "rug"
Set.footsteps_table.hb = "concrete"
Set.footsteps_table.he = "marble"
Set.footsteps_table.hf = "marble"
Set.footsteps_table.hh = "rug"
Set.footsteps_table.hi = "rug"
Set.footsteps_table.hk = "marble"
Set.footsteps_table.hl = "rug"
Set.footsteps_table.hp = "marble"
Set.footsteps_table.hq = "concrete"
Set.footsteps_table.il = "metal2"
Set.footsteps_table.jb = "concrete"
Set.footsteps_table.kh = "echo"
Set.footsteps_table.ks = "concrete"
Set.footsteps_table.lb = "dirt"
Set.footsteps_table.le = "concrete"
Set.footsteps_table.lm = "creak"
Set.footsteps_table["lo"] = "marble"
Set.footsteps_table.lr = "marble"
Set.footsteps_table.lu = "metal2"
Set.footsteps_table.lw = "echo"
Set.footsteps_table.lx = "concrete"
Set.footsteps_table.ly = "rug"
Set.footsteps_table.lz = "concrete"
Set.footsteps_table.me = "flowers"
Set.footsteps_table.mf = "flowers"
Set.footsteps_table.mg = "reverb"
Set.footsteps_table.mk = "concrete"
Set.footsteps_table.mn = "underwater"
Set.footsteps_table.mo = "rug"
Set.footsteps_table.mt = "concrete"
Set.footsteps_table.mx = "rug"
Set.footsteps_table.my = "concrete"
Set.footsteps_table.na = "dirt"
Set.footsteps_table.nl = "concrete"
Set.footsteps_table.nq = "marble"
Set.footsteps_table.op = "metal2"
Set.footsteps_table.os = "pavement"
Set.footsteps_table.pc = "concrete"
Set.footsteps_table.pi = "marble"
Set.footsteps_table.pk = "marble"
Set.footsteps_table.ps = "underwater"
Set.footsteps_table["re"] = "concrete"
Set.footsteps_table.rf = "pavement"
Set.footsteps_table.ri = "marble"
Set.footsteps_table.rp = "pavement"
Set.footsteps_table.sd = "concrete"
Set.footsteps_table.se = "gravel"
Set.footsteps_table.sg = "dirt"
Set.footsteps_table.sh = "echo"
Set.footsteps_table.si = "metal"
Set.footsteps_table.sl = "marble"
Set.footsteps_table.sm = "dirt"
Set.footsteps_table.sp = "dirt"
Set.footsteps_table.st = "pavement"
Set.footsteps_table.su = "underwater"
Set.footsteps_table.tb = "marble"
Set.footsteps_table.td = "snow"
Set.footsteps_table.te = "metal2"
Set.footsteps_table.tg = "marble"
Set.footsteps_table["th"] = "concrete"
Set.footsteps_table.tr = "dirt"
Set.footsteps_table.ts = "marble"
Set.footsteps_table.tu = "concrete"
Set.footsteps_table.tw = "marble"
Set.footsteps_table.tx = "marble"
Set.footsteps_table.vd = "metal2"
Set.footsteps_table.vi = "reverb"
Set.footsteps_table.vo = "reverb"
Set.footsteps_table.wc = "reverb"
Set.footsteps_table.xb = "concrete"
Set.footsteps_table.zw = "echo"
Set.footsteps_table.update = function(arg1, arg2) -- line 1213
    local local1
    local local2
    if arg2 then
        local1 = arg2:short_name()
        if local1 and arg1[local1] then
            local2 = arg1[local1]
            if footsteps[local2] then
                system.currentActor.footsteps = footsteps[local2]
            else
                PrintDebug("Couldn't set default footsteps for " .. local1 .. "\n")
            end
        end
    end
end
Set.stereo_ring_sets = { "ac", "mn", "ps", "su", "ea" }
Set.short_reverb_sets = { "hb", "wc", "dp", "ei", "il", "op", "vd", "vi", "vo" }
Set.basic_reverb_sets = { "ga", "mg", "fh", "at", "lw", "sh", "te", "zw" }
if load_room_code("testroom.lua") ~= nil then
    return
end
CheckFirstTime("_sfx.lua")
IM_LOW_PRIORITY = 0
IM_MED_PRIORITY = 64
IM_HIGH_PRIORITY = 127
IM_GROUP_MASTER = 0
IM_GROUP_SFX = 1
IM_GROUP_VOICE = 2
IM_GROUP_MUSIC = 3
IM_GROUP_DIPPED_MUSIC = 4
IM_SOUND_PLAY_COUNT = 256
IM_SOUND_PEND_COUNT = 512
IM_SOUND_GROUP = 1024
IM_SOUND_PRIORITY = 1280
IM_SOUND_VOL = 1536
IM_SOUND_PAN = 1792
preload_sfx = function(arg1) -- line 45
    ImStartSound(arg1, 127, 0)
    ImStopSound(arg1)
end
start_sfx = function(arg1, arg2, arg3) -- line 56
    local local1
    if not arg2 then
        arg2 = IM_HIGH_PRIORITY
    end
    if not arg3 then
        arg3 = 127
    end
    local1 = ImStartSound(arg1, arg2, IM_GROUP_SFX)
    ImSetParam(local1, IM_SOUND_VOL, arg3)
    return local1
end
single_start_sfx = function(arg1, arg2, arg3) -- line 74
    local local1
    if ImGetParam(arg1, IM_SOUND_PLAY_COUNT) == 0 then
        local1 = start_sfx(arg1, arg2, arg3)
    end
    return local1
end
fade_sfx = function(arg1, arg2, arg3) -- line 89
    start_script(new_fade_sfx, arg1, arg2, arg3)
end
new_fade_sfx = function(arg1, arg2, arg3) -- line 93
    local local1 = 0
    local local2 = 0
    local local3 = 0
    local local4 = 0
    if not arg3 then
        arg3 = 0
    end
    if not arg2 then
        arg2 = 1000
    end
    local1 = ImGetParam(arg1, IM_SOUND_VOL)
    local2 = arg2 / 1000
    local3 = abs(local1 - arg3)
    local4 = local3 / local2
    if arg3 < local1 then
        repeat
            break_here()
            local1 = local1 - PerSecond(local4)
            if local1 < arg3 then
                local1 = arg3
            end
            ImSetParam(arg1, IM_SOUND_VOL, local1)
        until local1 == arg3 or sound_playing(arg1) == FALSE
    else
        repeat
            break_here()
            local1 = local1 + PerSecond(local4)
            if local1 > arg3 then
                local1 = arg3
            end
            ImSetParam(arg1, IM_SOUND_VOL, local1)
        until local1 == arg3 or sound_playing(arg1) == FALSE
    end
    if arg3 == 0 then
        stop_sound(arg1)
    end
end
fade_pan_sfx = function(arg1, arg2, arg3) -- line 145
    if not arg3 then
        arg3 = 64
    end
    if not arg2 then
        arg2 = 1000
    end
    ImFadeParam(arg1, IM_SOUND_PAN, arg3, arg2)
end
start_footstep_sfx = function(arg1, arg2) -- line 160
    if not arg2 then
        arg2 = IM_MED_PRIORITY
    end
    ImStartSound(arg1, arg2, IM_GROUP_SFX)
end
start_loop_sfx = function(arg1, arg2) -- line 172
    local local1
    if not arg2 then
        arg2 = IM_HIGH_PRIORITY
    end
    local1 = ImStartSound(arg1, arg2, IM_GROUP_SFX)
    return local1
end
sound_playing = function(arg1) -- line 185
    if ImGetParam(arg1, IM_SOUND_PLAY_COUNT) > 0 then
        return TRUE
    else
        return FALSE
    end
end
wait_for_sound = function(arg1) -- line 197
    while ImGetParam(arg1, IM_SOUND_PLAY_COUNT) > 0 do
        break_here()
    end
end
stop_sound = function(arg1) -- line 207
    ImStopSound(arg1)
end
set_vol = function(arg1, arg2) -- line 215
    ImSetParam(arg1, IM_SOUND_VOL, arg2)
end
set_pan = function(arg1, arg2) -- line 223
    if not arg2 then
        arg2 = 64
    end
    ImSetParam(arg1, IM_SOUND_PAN, arg2)
end
sg_bone_wagon_Chore0 = 0
CheckFirstTime("sg.lua")
sg = Set:create("sg.set", "signpost fork", { sg_ovrhd = 0, sg_sgnha = 1, sg_sgnha2 = 1, sg_sgnha3 = 1, sg_sgnha4 = 1, sg_sgnha5 = 1, sg_spdws = 2, sg_mancu = 3 })
dofile("glottis_throws.lua")
dofile("glottis_cry.lua")
dofile("gl_saved.lua")
dofile("ma_save_gl.lua")
dofile("signpost.lua")
dofile("ma_action_sign.lua")
dofile("ma_climb_bw.lua")
dofile("gl_boarding_bw.lua")
dofile("bonewagon_gl.lua")
rh = function() -- line 23
    manny:default()
    sg:switch_to_set()
    start_script(sg.glottis_rip_heart)
end
glottis.snores = { }
glottis.snores["/sggl001/"] = 0.2
glottis.snores["/sggl002/"] = 0.15000001
glottis.snores["/sggl003/"] = 0.039999999
glottis.snores["/sggl004/"] = 0.039999999
glottis.snores["/sggl005/"] = 0.15000001
glottis.snores["/sggl006/"] = 0.15000001
glottis.snores["/sggl007/"] = 0.15000001
glottis.snores["/sggl008/"] = 0.039999999
glottis.snores["/sggl009/"] = 0.039999999
glottis.snores["/sggl010/"] = 0.039999999
glottis.roars = { }
glottis.roars[1] = { line = "/sggl011/", freq = 0.1, choreTbl = { bonewagon_gl_2vrm_lft, bonewagon_gl_vrm2drv } }
glottis.roars[2] = { line = "/sggl012/", freq = 0.2, choreTbl = { bonewagon_gl_sc_hook, bonewagon_gl_sc_rmbl, bonewagon_gl_sc_rmbl, bonewagon_gl_sc2drv } }
glottis.roars[3] = { line = "/sggl013/", freq = 0.1, choreTbl = { bonewagon_gl_sc_hook, bonewagon_gl_sc_rmbl, bonewagon_gl_sc2drv, bonewagon_gl_mck_shft } }
glottis.roars[4] = { line = "/sggl014/", freq = 0.1, choreTbl = { bonewagon_gl_sc_hook, bonewagon_gl_sc2steer, bonewagon_gl_sc_steer, bonewagon_gl_sc2drv } }
glottis.roars[5] = { line = "/sggl015/", freq = 0.1, choreTbl = { bonewagon_gl_rx2rmbl, bonewagon_gl_rx_rmbl, bonewagon_gl_rx_rmbl, bonewagon_gl_rx_2steer, bonewagon_gl_rx_steer, bonewagon_gl_rx_hook, bonewagon_gl_rx2drv } }
glottis.roars[6] = { line = "/sggl016/", freq = 0.1, choreTbl = { bonewagon_gl_2rmbl, bonewagon_gl_rmbl2drv, bonewagon_gl_2rmbl, bonewagon_gl_rmbl2drv } }
glottis.roars[7] = { line = "/sggl017/", freq = 0.1, choreTbl = { bonewagon_gl_sc_hook, bonewagon_gl_sc_rmbl, bonewagon_gl_sc2steer, bonewagon_gl_sc_steer, bonewagon_gl_sc2drv } }
glottis.roars[8] = { line = "/sggl018/", freq = 0.1, choreTbl = { bonewagon_gl_rx2rmbl, bonewagon_gl_rx_rmbl, bonewagon_gl_rx_2steer, bonewagon_gl_rx_steer, bonewagon_gl_rx_hook, bonewagon_gl_rx2drv } }
glottis.roars[9] = { line = "/sggl019/", freq = 0.050000001, choreTbl = { bonewagon_gl_sc_hook, bonewagon_gl_sc2steer, bonewagon_gl_sc_steer, bonewagon_gl_sc2drv } }
glottis.roars[10] = { line = "/sggl020/", freq = 0.050000001, choreTbl = { bonewagon_gl_gl_2hands_out, bonewagon_gl_gl_cvr_eyes, bonewagon_gl_uncover_eyes, bonewagon_gl_gl_stop_hands_out } }
sg.glottis_roars = function(arg1, arg2) -- line 69
    local local1
    local local2, local3, local4, local5
    if not arg2 then
        arg2 = bonewagon
    end
    while TRUE do
        sleep_for(rndint(1000, 5000))
        if cutSceneLevel <= 0 then
            local2 = random()
            local5 = 0
            local3, local4 = next(glottis.roars, nil)
            local1 = nil
            while local3 and not local1 do
                local5 = local5 + local4.freq
                if local5 > local2 then
                    local1 = local4
                end
                local3, local4 = next(glottis.roars, local3)
            end
            if not local1 then
                local1 = glottis.roars[1]
            end
            if local1.choreTbl then
                start_script(sg.glottis_roars_animate, sg, arg2, local1.choreTbl)
            end
            arg2:say_line(local1.line, { skip_log = TRUE, background = TRUE, volume = 65 })
            arg2:wait_for_message()
            wait_for_script(sg.glottis_roars_animate)
        end
    end
end
sg.glottis_roars_animate = function(arg1, arg2, arg3) -- line 106
    local local1, local2, local3
    local3 = bonewagon_gl_gl_drive
    local1, local2 = next(arg3, nil)
    while local1 do
        arg2:play_chore(local2)
        arg2:wait_for_chore(local2)
        local3 = local2
        local1, local2 = next(arg3, local1)
    end
    arg2:stop_chore(local3)
    arg2:play_chore(bonewagon_gl_gl_drive)
end
signpost = Actor:create(nil, nil, nil, "Signpost")
signpost.offset_vector = { x = -0.0211, y = 0.1585, z = 0 }
signpost.manny_offset = { x = 0.15078799, y = 0.066618003, z = 0 }
signpost.default = function(arg1) -- line 131
    arg1:set_costume("signpost.cos")
    arg1:set_turn_rate(20)
    arg1:set_collision_mode(COLLISION_BOX, 0.3)
end
signpost.put_at_manny = function(arg1, arg2) -- line 137
    local local1, local2, local3
    local2 = manny:getrot()
    local1 = RotateVector(arg1.offset_vector, local2)
    local3 = manny:getpos()
    local1.x = local1.x + local3.x
    local1.y = local1.y + local3.y
    local1.z = local1.z + local3.z
    arg1:put_in_set(system.currentSet)
    arg1:setpos(local1.x, local1.y, local1.z)
    arg1:setrot(local2.x, local2.y - 110, local2.z)
    if not arg2 then
        arg1:show()
    end
end
signpost.get_manny_pos = function(arg1) -- line 154
    local local1, local2, local3, local4
    local2 = signpost:getrot()
    local1 = RotateVector(arg1.manny_offset, local2)
    local3 = signpost:getpos()
    local1.x = local1.x + local3.x
    local1.y = local1.y + local3.y
    local4 = manny:getpos()
    local1.z = local4.z
    return local1.x, local1.y, local1.z
end
signpost.get_future_manny_pos = function(arg1) -- line 168
    local local1, local2, local3, local4, local5
    local5 = manny:getrot()
    local3 = RotateVector(arg1.offset_vector, local5)
    local4 = manny:getpos()
    local3.x = local3.x + local4.x
    local3.y = local3.y + local4.y
    local3.z = local4.z
    arg1:setpos(local3.x, local3.y, local3.z)
    local2 = GetActorYawToPoint(arg1.hActor, system.currentSet.rubacava_point)
    local2 = { 0, local2, 0 }
    local1 = RotateVector(arg1.manny_offset, local2)
    local1.x = local1.x + local3.x
    local1.y = local1.y + local3.y
    local1.z = local3.z
    return local1.x, local1.y, local1.z
end
signpost.show = function(arg1) -- line 190
    arg1:play_chore(signpost_show)
    arg1:set_collision_mode(COLLISION_BOX, 0.3)
end
signpost.hide = function(arg1) -- line 195
    arg1:play_chore(signpost_hide)
    arg1:set_collision_mode(COLLISION_OFF)
end
signpost.pick_up = function(arg1) -- line 200
    manny:push_costume("ma_action_sign.cos")
    manny:play_chore(ma_action_sign_lift_sign, "ma_action_sign.cos")
    sleep_for(500)
    start_sfx("sgSgnOut.WAV")
    sleep_for(150)
    arg1:hide()
    manny:wait_for_chore()
    manny:pop_costume()
    manny:play_chore_looping(ma_hold_sign, "ma.cos")
end
signpost.put_down = function(arg1) -- line 212
    manny:stop_chore(ma_hold_sign, "ma.cos")
    manny:push_costume("ma_action_sign.cos")
    manny:play_chore(ma_action_sign_plant_sign, "ma_action_sign.cos")
    sleep_for(1300)
    start_sfx("sgSgnIn.WAV")
    sleep_for(960)
    arg1:put_at_manny()
    manny:wait_for_chore(ma_action_sign_plant_sign, "ma_action_sign.cos")
    manny:pop_costume()
end
sg.check_post = function(arg1, arg2) -- line 224
    if manny.is_holding == sg.signpost then
        START_CUT_SCENE()
        if arg2 == sg.sp_door then
            manny:walkto(-2.83579, -4.87312, 0, 0, 5.9804, 0)
            manny:wait_for_actor()
        else
            manny:walkto_object(arg2)
            manny:wait_for_actor()
        end
        sg.signpost:plant()
        manny:wait_for_message()
        manny:say_line("/sgma040/")
        manny:wait_for_message()
        manny:say_line("/sgma041/")
        manny:wait_for_message()
        END_CUT_SCENE()
        return TRUE
    else
        return FALSE
    end
end
dofile("bonewagon.lua")
sg.bw_out_points = { }
sg.bw_out_points[0] = { pos = { x = -3.87446, y = -1.04915, z = 0 }, rot = { x = 0, y = 337.62799, z = 0 } }
sg.bw_out_points[1] = { pos = { x = 0.26031801, y = 0.98607898, z = 0 }, rot = { x = 0, y = 236.30299, z = 0 } }
sg.bw_out_points[2] = { pos = { x = 3.44713, y = -2.0948, z = 0 }, rot = { x = 0, y = 239.709, z = 0 } }
sg.bw_out_points[3] = { pos = { x = 6.2069998, y = 0.25447601, z = 0 }, rot = { x = 0, y = 310.397, z = 0 } }
bonewagon = Actor:create(nil, nil, nil, "Bone Wagon")
bonewagon.max_walk_rate = 4.5
bonewagon.max_backward_rate = -3
bonewagon.max_turn_rate = 60
bonewagon.min_turn_rate = 0
bonewagon.going = FALSE
bonewagon.keep_moving = FALSE
bonewagon.is_backward = FALSE
bonewagon.wheel_state = "center"
bonewagon.max_volume = 30
bonewagon.glottis_offset_pos = { x = 0.76233, y = 0.34405601, z = 0 }
bonewagon.glottis_offset_rot = { x = 0, y = 98.228401, z = 0 }
bonewagon.manny_offset_pos = { x = 0.52359003, y = -1.335618, z = 0 }
bonewagon.manny_offset_rot = { x = 0, y = 82.184402, z = 0 }
bonewagon.manny_out_offset_pos = { x = 0.66830659, y = -1.518109, z = 0 }
bonewagon.manny_out_offset_rot = { x = 0, y = 278.89801, z = 0 }
bonewagon.manny_all_out_offset = { x = 0.97174299, y = -1.354003, z = 0 }
bonewagon.rev_sfx = { "bwup01.WAV", "bwup02.WAV", "bwup04.wav", "bwup05.wav", "bwup06.wav" }
bonewagon.down_sfx = { "bwdown02.WAV", "bwdown04.WAV", "bwdown06.WAV" }
bonewagon.tire_sfx = { "bwTire01.WAV", "bwTire02.WAV", "bwTire03.WAV", "bwTire04.WAV" }
bonewagon.cruise_sfx = { "bwrev05.wav", "bwrev07.wav", "bwrev09.wav", "bwrev12.wav" }
bonewagon.default = function(arg1, arg2) -- line 287
    arg1:follow_boxes()
    arg1:set_visibility(TRUE)
    if manny.is_driving then
        arg1:set_costume("bonewagon_gl.cos")
        arg1:play_chore(bonewagon_gl_ma_sit, "bonewagon_gl.cos")
        arg1:play_chore(bonewagon_gl_gl_drive, "bonewagon_gl.cos")
        arg1:stop_chore(bonewagon_gl_stay_up, "bonewagon_gl.cos")
        arg1:play_chore(bonewagon_gl_no_shocks, "bonewagon_gl.cos")
        arg1:set_collision_mode(COLLISION_SPHERE, 0.3)
    else
        arg1:set_costume("bonewagon_gl.cos")
        arg1:stop_chore(bonewagon_gl_stay_up, "bonewagon_gl.cos")
        arg1:play_chore(bonewagon_gl_no_shocks)
        arg1:set_collision_mode(COLLISION_BOX)
    end
    arg1.walk_rate = 0.5
    arg1.turn_dir = 0
    arg1.turn_rate = arg1.min_turn_rate
    arg1:set_walk_rate(arg1.walk_rate)
    arg1:set_turn_rate(arg1.turn_rate)
    arg1:set_talk_color(Orange)
    SetActorReflection(arg1.hActor, 50)
end
bonewagon.get_glottis_pos_rot = function(arg1) -- line 314
    local local1, local2, local3, local4
    local3 = arg1:get_positive_rot()
    local1 = RotateVector(arg1.glottis_offset_pos, local3)
    local4 = arg1:getpos()
    local1.x = local1.x + local4.x
    local1.y = local1.y + local4.y
    local1.z = local4.z
    newRot = arg1:get_positive_rot()
    newRot.y = newRot.y + arg1.glottis_offset_rot.y
    if newRot.y > 360 then
        newRot.y = newRot.y - 360
    end
    if newRot.y < 0 then
        newRot.y = newRot.y + 360
    end
    return local1, newRot
end
bonewagon.get_manny_pos = function(arg1, arg2) -- line 336
    local local1, local2, local3
    local2 = arg1:get_positive_rot()
    if not arg2 then
        local1 = RotateVector(arg1.manny_offset_pos, local2)
    else
        local1 = RotateVector(arg1.manny_out_offset_pos, local2)
    end
    local3 = arg1:getpos()
    local1.x = local1.x + local3.x
    local1.y = local1.y + local3.y
    local1.z = local3.z
    return local1.x, local1.y, local1.z
end
bonewagon.get_manny_far_pos = function(arg1) -- line 353
    local local1, local2, local3
    local2 = arg1:get_positive_rot()
    local1 = RotateVector(arg1.manny_all_out_offset, local2)
    local3 = arg1:getpos()
    local1.x = local1.x + local3.x
    local1.y = local1.y + local3.y
    local1.z = local3.z
    return local1.x, local1.y, local1.z
end
bonewagon.get_manny_rot = function(arg1, arg2) -- line 367
    local local1
    local1 = arg1:get_positive_rot()
    if not arg2 then
        local1.y = local1.y + arg1.manny_offset_rot.y
    else
        local1.y = local1.y + arg1.manny_out_offset_rot.y
    end
    if local1.y > 360 then
        local1.y = local1.y - 360
    end
    if local1.y < 0 then
        local1.y = local1.y + 360
    end
    return local1.x, local1.y, local1.z
end
bonewagon.accelerate = function(arg1, arg2, arg3) -- line 385
    local local1
    if not arg2 then
        arg2 = 0.1
    end
    local1 = arg2
    stop_script(arg1.decelerate)
    if not arg3 then
        while arg1.walk_rate < arg1.max_walk_rate do
            arg1.walk_rate = arg1.walk_rate + arg2
            if arg1.walk_rate > arg1.max_walk_rate then
                arg1.walk_rate = arg1.max_walk_rate
            end
            arg1:set_walk_rate(arg1.walk_rate)
            arg2 = arg2 + local1
            break_here()
        end
    else
        while arg1.walk_rate > arg1.max_backward_rate do
            arg1.walk_rate = arg1.walk_rate - arg2
            if arg1.walk_rate < arg1.max_backward_rate then
                arg1.walk_rate = arg1.max_backward_rate
            end
            arg1:set_walk_rate(arg1.walk_rate)
            break_here()
        end
    end
end
bonewagon.decelerate = function(arg1, arg2, arg3) -- line 417
    local local1
    if not arg2 then
        arg2 = 0.1
    end
    local1 = arg2
    stop_script(arg1.accelerate)
    if not arg3 then
        while arg1.walk_rate > 1 do
            arg1.walk_rate = arg1.walk_rate - arg2
            if arg1.walk_rate < 1 then
                arg1.walk_rate = 1
            end
            arg1:set_walk_rate(arg1.walk_rate)
            arg2 = arg2 + local1
            break_here()
        end
    else
        while arg1.walk_rate < 0 do
            arg1.walk_rate = arg1.walk_rate + arg2
            if arg1.walk_rate > 0.1 then
                arg1.walk_rate = 0.1
            end
            arg1:set_walk_rate(arg1.walk_rate)
            break_here()
        end
    end
end
bonewagon.cruise_sounds = function(arg1) -- line 449
    fade_sfx("bwIdle.IMU", 1000, bonewagon.max_volume / 2)
    arg1.cur_cruise_sound = nil
    while TRUE do
        arg1.cur_cruise_sound = pick_one_of(bonewagon.cruise_sfx, TRUE)
        bonewagon:play_sound_at(arg1.cur_cruise_sound, 10, bonewagon.max_volume, IM_MED_PRIORITY)
        wait_for_sound(arg1.cur_cruise_sound)
        break_here()
    end
end
bonewagon.stop_cruise_sounds = function(arg1, arg2) -- line 460
    local local1, local2
    stop_script(arg1.cruise_sounds)
    local1, local2 = next(bonewagon.cruise_sfx, nil)
    while local1 do
        if sound_playing(local2) then
            fade_sfx(local2, 200)
        end
        local1, local2 = next(bonewagon.cruise_sfx, local1)
    end
    local1, local2 = next(bonewagon.rev_sfx, nil)
    while local1 do
        if sound_playing(local2) then
            fade_sfx(local2, 200)
        end
        local1, local2 = next(bonewagon.rev_sfx, local1)
    end
    local1, local2 = next(bonewagon.down_sfx, nil)
    while local1 do
        if sound_playing(local2) then
            fade_sfx(local2, 200)
        end
        local1, local2 = next(bonewagon.down_sfx, local1)
    end
    local1, local2 = next(bonewagon.tire_sfx, nil)
    while local1 do
        if sound_playing(local2) then
            fade_sfx(local2, 200)
        end
        local1, local2 = next(bonewagon.tire_sfx, local1)
    end
    if not arg2 then
        fade_sfx("bwIdle.IMU", 1000, bonewagon.max_volume)
    end
end
bonewagon.gas = function(arg1) -- line 499
    local local1
    stop_script(arg1.reverse, arg1)
    arg1.going = TRUE
    local1 = pick_one_of(bonewagon.rev_sfx, TRUE)
    bonewagon:play_sound_at(local1, 1, 10, IM_HIGH_PRIORITY)
    fade_sfx(local1, 500, bonewagon.max_volume)
    single_start_script(bonewagon.cruise_sounds, bonewagon)
    bonewagon:set_walk_chore(-1)
    bonewagon:set_turn_chores(-1, -1)
    bonewagon:set_rest_chore(-1)
    bonewagon:play_chore(bonewagon_gl_gl_drive, "bonewagon_gl.cos")
    bonewagon:play_chore(bonewagon_gl_no_shocks, "bonewagon_gl.cos")
    start_script(arg1.accelerate, arg1)
    while get_generic_control_state("MOVE_FORWARD") or arg1.keep_moving do
        WalkActorForward(arg1.hActor)
        break_here()
    end
    if sound_playing(local1) then
        fade_sfx(local1, 500, 0)
    end
    local1 = pick_one_of(bonewagon.down_sfx, TRUE)
    bonewagon:play_sound_at(local1, 10, bonewagon.max_volume, IM_HIGH_PRIORITY)
    start_script(arg1.decelerate, arg1)
    single_start_script(bonewagon.stop_cruise_sounds, bonewagon)
    while arg1.walk_rate > 1 do
        WalkActorForward(arg1.hActor)
        break_here()
    end
    fade_sfx(local1, 300, 0)
    arg1.going = FALSE
end
bonewagon.reverse = function(arg1) -- line 541
    local local1
    if find_script(arg1.gas) then
        stop_script(arg1.gas)
        arg1:brake()
    end
    arg1.going = TRUE
    start_script(arg1.accelerate, arg1, nil, TRUE)
    brakesfx = pick_one_of(bonewagon.tire_sfx, TRUE)
    single_start_sfx(brakesfx, IM_MED_PRIORITY, bonewagon.max_volume)
    bonewagon:set_walk_chore(-1)
    bonewagon:set_turn_chores(-1, -1)
    bonewagon:set_rest_chore(-1)
    bonewagon:play_chore(bonewagon_gl_gl_drive, "bonewagon_gl.cos")
    bonewagon:play_chore(bonewagon_gl_no_shocks, "bonewagon_gl.cos")
    while get_generic_control_state("MOVE_BACKWARD") or arg1.keep_moving do
        WalkActorForward(arg1.hActor)
        break_here()
    end
    start_script(arg1.decelerate, arg1, 0.5, TRUE)
    while arg1.walk_rate < 0 do
        WalkActorForward(arg1.hActor)
        break_here()
    end
    arg1.going = FALSE
end
bonewagon.brake = function(arg1, arg2) -- line 574
    local local1, local2
    stop_script(arg1.accelerate, arg1)
    if arg1.walk_rate > 0.1 then
        local2 = pick_one_of(bonewagon.down_sfx, TRUE)
        local1 = pick_one_of(bonewagon.tire_sfx, TRUE)
        if not arg2 then
            single_start_sfx(local2, IM_HIGH_PRIORITY, 0)
            fade_sfx(local2, 500, bonewagon.max_volume)
        end
    end
    single_start_script(arg1.decelerate, arg1, 0.30000001)
    bonewagon:set_walk_chore(-1)
    bonewagon:set_turn_chores(-1, -1)
    bonewagon:set_rest_chore(-1)
    bonewagon:play_chore(bonewagon_gl_gl_drive, "bonewagon_gl.cos")
    bonewagon:play_chore(bonewagon_gl_no_shocks, "bonewagon_gl.cos")
    while find_script(arg1.decelerate) do
        WalkActorForward(arg1.hActor)
        break_here()
    end
    if not arg2 then
        single_start_sfx(local1, IM_MED_PRIORITY, bonewagon.max_volume)
    end
    arg1.going = FALSE
end
bonewagon.left = function(arg1) -- line 611
    if find_script(arg1.right) then
        stop_script(arg1.right)
    end
    if arg1.actual_walk_rate > 0.1 then
        single_start_sfx(pick_one_of(bonewagon.tire_sfx, TRUE), IM_LOW_PRIORITY, bonewagon.max_volume)
    end
    start_script(arg1.turn_wheels, arg1, "left")
    while get_generic_control_state("TURN_LEFT") do
        break_here()
    end
    if arg1.wheel_state == "left" then
        start_script(arg1.turn_wheels, arg1, "center")
    end
end
bonewagon.right = function(arg1) -- line 630
    if find_script(arg1.left) then
        stop_script(arg1.left)
    end
    if arg1.actual_walk_rate > 0.1 then
        single_start_sfx(pick_one_of(bonewagon.tire_sfx, TRUE), IM_LOW_PRIORITY, bonewagon.max_volume)
    end
    start_script(arg1.turn_wheels, arg1, "right")
    while get_generic_control_state("TURN_RIGHT") do
        break_here()
    end
    if arg1.wheel_state == "right" then
        start_script(arg1.turn_wheels, arg1, "center")
    end
end
bonewagon.turn_wheels = function(arg1, arg2) -- line 649
    if arg2 == "left" then
        arg1:stop_chore(bonewagon_gl_hold_rt, "bonewagon_gl.cos")
        arg1:stop_chore(bonewagon_gl_hold_ctr, "bonewagon_gl.cos")
        if arg1.wheel_state == "right" then
            arg1:play_chore(bonewagon_gl_rt_to_ctr, "bonewagon_gl.cos")
            arg1:wait_for_chore(bonewagon_gl_rt_to_ctr)
            arg1.wheel_state = "center"
        end
        if arg1.wheel_state == "center" then
            arg1:play_chore(bonewagon_gl_turn_lft, "bonewagon_gl.cos")
            arg1:wait_for_chore(bonewagon_gl_turn_lft)
            arg1:play_chore_looping(bonewagon_gl_hold_lft, "bonewagon_gl.cos")
            arg1.wheel_state = "left"
        end
    elseif arg2 == "center" then
        arg1:stop_chore(bonewagon_gl_hold_lft, "bonewagon_gl.cos")
        arg1:stop_chore(bonewagon_gl_hold_rt, "bonewagon_gl.cos")
        if arg1.wheel_state == "right" then
            arg1:play_chore(bonewagon_gl_rt_to_ctr, "bonewagon_gl.cos")
            arg1:wait_for_chore(bonewagon_gl_rt_to_ctr)
            arg1:play_chore_looping(bonewagon_gl_hold_ctr, "bonewagon_gl.cos")
            arg1.wheel_state = "center"
        end
        if arg1.wheel_state == "left" then
            arg1:play_chore(bonewagon_gl_lft_to_ctr, "bonewagon_gl.cos")
            arg1:wait_for_chore(bonewagon_gl_lft_to_ctr)
            arg1:play_chore_looping(bonewagon_gl_hold_ctr, "bonewagon_gl.cos")
            arg1.wheel_state = "center"
        end
    elseif arg2 == "right" then
        arg1:stop_chore(bonewagon_gl_hold_lft, "bonewagon_gl.cos")
        arg1:stop_chore(bonewagon_gl_hold_ctr, "bonewagon_gl.cos")
        if arg1.wheel_state == "left" then
            arg1:play_chore(bonewagon_gl_lft_to_ctr, "bonewagon_gl.cos")
            arg1:wait_for_chore(bonewagon_gl_lft_to_ctr)
            arg1.wheel_state = "center"
        end
        if arg1.wheel_state == "center" then
            arg1:play_chore(bonewagon_gl_turn_rt, "bonewagon_gl.cos")
            arg1:wait_for_chore(bonewagon_gl_turn_rt)
            arg1:play_chore_looping(bonewagon_gl_hold_rt, "bonewagon_gl.cos")
            arg1.wheel_state = "right"
        end
    end
end
bonewagon.walkto = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7) -- line 696
    bonewagon:set_walk_chore(-1)
    bonewagon:set_turn_chores(-1, -1)
    bonewagon:set_rest_chore(-1)
    if arg1.walk_rate < 1.5 or GetActorWalkRate(arg1.hActor) < 1.5 then
        arg1.walk_rate = 1.5
        arg1:set_walk_rate(1.5)
    end
    bonewagon:play_chore(bonewagon_gl_gl_drive, "bonewagon_gl.cos")
    Actor.walkto(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
end
bonewagon.driveto = function(arg1, arg2, arg3, arg4, arg5) -- line 712
    local local1
    local local2
    arg1:walkto(arg2, arg3, arg4)
    while arg1:is_moving() do
        local1 = proximity(bonewagon.hActor, arg2, arg3, arg4)
        arg1.walk_rate = min(arg1.max_walk_rate, local1)
        arg1.walk_rate = max(arg1.walk_rate, 1.5)
        arg1:set_walk_rate(arg1.walk_rate)
        if local1 < 1 and local2 == nil then
            arg1:stop_cruise_sounds()
            if not arg5 then
                local2 = pick_one_of(bonewagon.down_sfx, TRUE)
                arg1:play_sound_at(local2, 10, bonewagon.max_volume, IM_HIGH_PRIORITY)
            end
        end
        break_here()
    end
    arg1:wait_for_actor()
end
bonewagon.drivetorot = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7) -- line 735
    local local1, local2
    arg1:stop_cruise_sounds()
    arg1.cur_cruise_sound = nil
    arg1:set_turn_rate(arg1.max_turn_rate / 2)
    arg1.walk_rate = 0.80000001
    arg1:set_walk_rate(arg1.walk_rate)
    Actor.walkto(arg1, arg2, arg3, arg4)
    while arg1:is_moving() do
        local1 = proximity(bonewagon.hActor, arg2, arg3, arg4)
        if local1 > 0.5 then
            arg1.walk_rate = arg1.walk_rate + 0.2
        else
            arg1.walk_rate = arg1.walk_rate - 0.2
        end
        arg1.walk_rate = min(arg1.max_walk_rate, arg1.walk_rate)
        arg1.walk_rate = max(arg1.walk_rate, 1.5)
        arg1:set_walk_rate(arg1.walk_rate)
        if not arg1.cur_cruise_sound or not sound_playing(arg1.cur_cruise_sound) then
            arg1.cur_cruise_sound = pick_one_of(bonewagon.cruise_sfx, TRUE)
            arg1:play_sound_at(arg1.cur_cruise_sound, 10, bonewagon.max_volume, IM_MED_PRIORITY)
        end
        break_here()
    end
    arg1:stop_cruise_sounds()
    local2 = nil
    arg1:set_turn_rate(arg1.max_turn_rate / 3)
    Actor.setrot(arg1, arg5, arg6, arg7, TRUE)
    while arg1:is_turning() do
        if not local2 or not sound_playing(local2) then
            local2 = pick_one_of(bonewagon.tire_sfx, TRUE)
            arg1:play_sound_at(local2, 10, bonewagon.max_volume, IM_MED_PRIORITY)
        end
        break_here()
    end
end
bonewagon.monitor_turns = function(arg1) -- line 774
    local local1, local2
    local1 = arg1:getpos()
    arg1.actual_walk_rate = 0
    while TRUE do
        arg1.turn_rate = abs(20 * arg1.actual_walk_rate)
        if arg1.turn_rate > arg1.max_turn_rate then
            arg1.turn_rate = arg1.max_turn_rate
        end
        arg1:set_turn_rate(arg1.turn_rate)
        if get_generic_control_state("TURN_LEFT") and cutSceneLevel <= 0 then
            if arg1.turn_rate > 1 then
                if arg1.walk_rate > 0 or get_generic_control_state("MOVE_FORWARD") then
                    TurnActor(arg1.hActor, 1)
                else
                    TurnActor(arg1.hActor, -1)
                end
            else
                if not bonewagon:playing_tire_sfx() then
                    start_sfx(pick_one_of(bonewagon.tire_sfx, TRUE), IM_LOW_PRIORITY, bonewagon.max_volume)
                end
                arg1:set_turn_rate(30)
                TurnActor(arg1.hActor, 1)
            end
        elseif get_generic_control_state("TURN_RIGHT") and cutSceneLevel <= 0 then
            if arg1.turn_rate > 1 then
                if arg1.walk_rate > 0 or get_generic_control_state("MOVE_FORWARD") then
                    TurnActor(arg1.hActor, -1)
                else
                    TurnActor(arg1.hActor, 1)
                end
            else
                if not bonewagon:playing_tire_sfx() then
                    start_sfx(pick_one_of(bonewagon.tire_sfx, TRUE), IM_LOW_PRIORITY, bonewagon.max_volume)
                end
                arg1:set_turn_rate(30)
                TurnActor(arg1.hActor, -1)
            end
        end
        break_here()
        local2 = proximity(arg1.hActor, local1.x, local1.y, local1.z)
        arg1.actual_walk_rate = local2 / system.frameTime * 1000
        local1 = arg1:getpos()
    end
end
bonewagon.playing_tire_sfx = function(arg1) -- line 826
    local local1, local2, local3
    local1 = FALSE
    local2, local3 = next(arg1.tire_sfx, nil)
    while local2 and not local1 do
        if sound_playing(local3) then
            local1 = TRUE
        end
        local2, local3 = next(arg1.tire_sfx, local2)
    end
    return local1
end
bonewagon.stop_movement_scripts = function(arg1) -- line 841
    bonewagon:set_walk_chore(-1)
    bonewagon:set_turn_chores(-1, -1)
    bonewagon:set_rest_chore(-1)
    stop_script(bonewagon.gas)
    stop_script(bonewagon.reverse)
    stop_script(bonewagon.brake)
    stop_script(bonewagon.left)
    stop_script(bonewagon.right)
    stop_script(bonewagon.accelerate)
    stop_script(bonewagon.decelerate)
    bonewagon:play_chore(bonewagon_gl_gl_drive, "bonewagon_gl.cos")
    bonewagon:play_chore(bonewagon_gl_no_shocks, "bonewagon_gl.cos")
end
bonewagon.squelch_sfx = function(arg1) -- line 856
    local local1, local2
    local1, local2 = next(bonewagon.rev_sfx, nil)
    while local1 do
        if sound_playing(local2) then
            set_vol(local2, bonewagon.max_volume / 3)
        end
        local1, local2 = next(bonewagon.rev_sfx, local1)
    end
    local1, local2 = next(bonewagon.down_sfx, nil)
    while local1 do
        if sound_playing(local2) then
            set_vol(local2, bonewagon.max_volume / 3)
        end
        local1, local2 = next(bonewagon.down_sfx, local1)
    end
    local1, local2 = next(bonewagon.tire_sfx, nil)
    while local1 do
        if sound_playing(local2) then
            set_vol(local2, bonewagon.max_volume / 3)
        end
        local1, local2 = next(bonewagon.tire_sfx, local1)
    end
    local1, local2 = next(bonewagon.cruise_sfx, nil)
    while local1 do
        if sound_playing(local2) then
            set_vol(local2, bonewagon.max_volume / 3)
        end
        local1, local2 = next(bonewagon.cruise_sfx, local1)
    end
    if sound_playing("bwIdle.IMU") then
        set_vol("bwIdle.IMU", bonewagon.max_volume / 3)
    end
end
bonewagon.restore_sfx = function(arg1) -- line 892
    local local1, local2
    local1, local2 = next(bonewagon.rev_sfx, nil)
    while local1 do
        if sound_playing(local2) then
            set_vol(local2, bonewagon.max_volume)
        end
        local1, local2 = next(bonewagon.rev_sfx, local1)
    end
    local1, local2 = next(bonewagon.down_sfx, nil)
    while local1 do
        if sound_playing(local2) then
            set_vol(local2, bonewagon.max_volume)
        end
        local1, local2 = next(bonewagon.down_sfx, local1)
    end
    local1, local2 = next(bonewagon.tire_sfx, nil)
    while local1 do
        if sound_playing(local2) then
            set_vol(local2, bonewagon.max_volume)
        end
        local1, local2 = next(bonewagon.tire_sfx, local1)
    end
    local1, local2 = next(bonewagon.cruise_sfx, nil)
    while local1 do
        if sound_playing(local2) then
            set_vol(local2, bonewagon.max_volume)
        end
        local1, local2 = next(bonewagon.cruise_sfx, local1)
    end
    if sound_playing("bwIdle.IMU") then
        set_vol("bwIdle.IMU", bonewagon.max_volume)
    end
end
bonewagon.in_danger_box = function(arg1) -- line 928
    return arg1:find_sector_name("no_bw_box")
end
bonewagon.can_get_out_here = function(arg1) -- line 935
    local local1, local2, local3
    local local4 = FALSE
    local1, local2, local3 = arg1:get_manny_far_pos()
    if GetPointSector(local1, local2, local3) then
        PrintDebug("Found point sector!\n")
        local4 = TRUE
    else
        PrintDebug("Failed point sector!\n")
        local4 = FALSE
    end
    if local4 then
        if signpost.current_set == system.currentSet then
            if proximity(signpost.hActor, local1, local2, local3) < 1 then
                PrintDebug("Failed signpost proximity!\n")
                local4 = FALSE
            end
        end
    end
    return local4
end
bonewagon.find_safe_out_point = function(arg1) -- line 960
    local local1 = system.currentSet.bw_out_points
    local local2, local3, local4
    local local5, local6
    if not bw_scout then
        bw_scout = Actor:create(nil, nil, nil, "bonewagon scout")
    end
    local2 = nil
    local5 = 9999
    bw_scout.parent = arg1
    bw_scout:set_visibility(FALSE)
    bw_scout:put_in_set(system.currentSet)
    if local1 then
        local3, local4 = next(local1, nil)
        while local3 do
            PrintDebug("Trying point " .. local4.pos.x .. ", " .. local4.pos.y .. ", " .. local4.pos.z .. "\n")
            local6 = proximity(arg1.hActor, local4.pos.x, local4.pos.y, local4.pos.z)
            bw_scout:setpos(local4.pos.x, local4.pos.y, local4.pos.z)
            bw_scout:setrot(local4.rot.x, local4.rot.y, local4.rot.z)
            if bw_scout:can_get_out_here() then
                if local6 < local5 then
                    PrintDebug("Chosen!\n")
                    local5 = local6
                    local2 = local3
                else
                    PrintDebug("Found better point.\n")
                end
            else
                PrintDebug("Failed.\n")
            end
            local3, local4 = next(local1, local3)
        end
    end
    return local2
end
bonewagon.collision_handler = function(arg1, arg2) -- line 999
    if arg2 == signpost then
        start_script(sg.signpost_collapse, sg)
    end
end
sg.signpost_collapse = function(arg1) -- line 1005
    local local1, local2, local3
    signpost:set_collision_mode(COLLISION_OFF)
    signpost.knocked_over = TRUE
    signpost.save_rot = signpost:get_positive_rot()
    local2 = copy_table(signpost.save_rot)
    local3 = bonewagon:get_positive_rot()
    local2.y = local3.y
    start_sfx("sgCrash.WAV", IM_HIGH_PRIORITY)
    if bonewagon.walk_rate < 0 or get_generic_control_state("MOVE_BACKWARD") then
        local1 = 10
        while local2.x < 80 do
            local2.x = local2.x + local1
            if local2.x > 80 then
                local2.x = 80
            end
            signpost:setrot(local2.x, local2.y, local2.z)
            break_here()
        end
    else
        local1 = -10
        while local2.x > -80 do
            local2.x = local2.x + local1
            if local2.x < -80 then
                local2.x = -80
            end
            signpost:setrot(local2.x, local2.y, local2.z)
            break_here()
        end
    end
end
sg.signpost_uncollapse = function(arg1) -- line 1041
    local local1 = signpost:get_positive_rot()
    local local2 = signpost.save_rot
    local local3
    if signpost.knocked_over then
        if proximity(bonewagon.hActor, signpost.hActor) > 2 then
            if signpost.current_set == system.currentSet then
                start_sfx("sgSgnSlw.WAV")
                wait_for_sound("sgSgnSlw.WAV")
                start_sfx("sgSgnStp.WAV")
                local3 = 10
                while local3 ~= 0 do
                    signpost:setrot(local2.x + local3, local2.y, local2.z)
                    if local3 > 0 then
                        local3 = floor(abs(local3 - 1))
                    else
                        local3 = -floor(abs(local3 - 1))
                    end
                    break_here()
                end
            end
            signpost:setrot(local2.x, local2.y, local2.z)
            signpost.knocked_over = FALSE
            system.currentSet.signpost:make_touchable()
        else
            system.currentSet.signpost:make_untouchable()
        end
    end
end
sg.examine_signpost = function(arg1) -- line 1074
    local local1, local2
    local local3, local4, local5
    local local6
    if sg.signpost.uprooted and sg:current_setup() ~= sg_spdws then
        START_CUT_SCENE()
        local1 = { }
        local1.pos = signpost:getpos()
        local1.rot = signpost:getrot()
        local2 = { }
        local2.pos = manny:getpos()
        local2.rot = manny:getrot()
        local6 = sg:current_setup()
        sg:current_setup(sg_mancu)
        signpost:setpos(4.0353198, -1.21448, 0)
        local3 = 3.8364899 + (local2.pos.x - local1.pos.x)
        local4 = -1.23856 + (local2.pos.y - local1.pos.y)
        local5 = 0
        manny:ignore_boxes()
        manny:setpos(local3, local4, local5)
        if bonewagon.current_set == system.currentSet then
            bonewagon:set_visibility(FALSE)
            bonewagon:set_collision_mode(COLLISION_OFF)
        end
        manny:head_look_at_point({ 4.0353198, -1.21448, 0.5 })
        manny:say_line("/sgma051/")
        manny:wait_for_message()
        sleep_for(1000)
        sg:current_setup(local6)
        signpost:setpos(local1.pos.x, local1.pos.y, local1.pos.z)
        manny:follow_boxes()
        manny:setpos(local2.pos.x, local2.pos.y, local2.pos.z)
        manny:head_look_at(sg.signpost)
        if bonewagon.current_set == system.currentSet then
            bonewagon:set_visibility(TRUE)
            bonewagon:set_collision_mode(COLLISION_BOX, 1)
        end
        END_CUT_SCENE()
    else
        manny:say_line("/sgma051/")
    end
end
bone_wagon_button_handler = function(arg1, arg2, arg3) -- line 1123
    if cutSceneLevel <= 0 and not find_script(Sentence) then
        if control_map.PICK_UP[arg1] or control_map.USE[arg1] then
            if arg2 then
                single_start_script(sg.leave_BW, sg)
            end
        elseif control_map.MOVE_FORWARD[arg1] then
            if arg2 then
                if not find_script(bonewagon.gas) then
                    start_script(bonewagon.gas, bonewagon)
                end
            end
        elseif control_map.MOVE_BACKWARD[arg1] then
            if arg2 then
                if not find_script(bonewagon.reverse) then
                    start_script(bonewagon.reverse, bonewagon)
                end
            end
        elseif control_map.TURN_LEFT[arg1] then
            if arg2 then
                single_start_script(bonewagon.left, bonewagon)
            end
        elseif control_map.TURN_RIGHT[arg1] then
            if arg2 then
                single_start_script(bonewagon.right, bonewagon)
            end
        else
            CommonButtonHandler(arg1, arg2, arg3)
        end
    else
        CommonButtonHandler(arg1, arg2, arg3)
    end
end
sg.get_in_BW = function(arg1) -- line 1157
    local local1, local2, local3
    stop_script(sg.glottis_roars)
    stop_script(glottis.talk_randomly_from_weighted_table)
    if manny.is_holding == sg.signpost then
        sg.signpost:plant()
    end
    glottis.heartless = FALSE
    sg.glottis_obj:make_untouchable()
    inventory_disabled = TRUE
    START_CUT_SCENE()
    if not sg.bone_wagon.ridden then
        sg:switch_to_set()
        manny:set_collision_mode(COLLISION_OFF)
        glottis:set_collision_mode(COLLISION_OFF)
        bonewagon:set_collision_mode(COLLISION_OFF)
        signpost:set_collision_mode(COLLISION_OFF)
        sg:current_setup(sg_sgnha)
        glottis:set_costume(nil)
        glottis:put_in_set(sg)
        glottis:set_costume("gl_boarding_bw.cos")
        local1, local2 = bonewagon:get_glottis_pos_rot()
        glottis:setpos(local1.x, local1.y, local1.z)
        glottis:setrot(local2.x, local2.y, local2.z)
        manny:put_at_object(sg.bone_wagon)
        manny:head_look_at(glottis)
        IrisUp(300, 150, 1000)
        sleep_for(500)
        manny:say_line("/sgma021/")
        manny:wait_for_message()
        glottis:say_line("/sggl022/")
        glottis:wait_for_message()
        manny:set_visibility(FALSE)
        glottis:play_chore(gl_boarding_bw_hop_in_bw, "gl_boarding_bw.cos")
        bonewagon:play_chore(bonewagon_gl_ma_jump_in, "bonewagon_gl.cos")
        sleep_for(700)
        start_sfx("bwGlClmb.WAV")
        glottis:wait_for_chore(gl_boarding_bw_hop_in_bw, "gl_boarding_bw.cos")
        glottis:put_in_set(nil)
        bonewagon:play_chore(bonewagon_gl_drive, "bonewagon_gl.cos")
        sleep_for(1400)
        start_sfx("bwMaClmb.WAV")
        bonewagon:wait_for_chore(bonewagon_gl_ma_jump_in, "bonewagon_gl.cos")
        bonewagon:play_chore(bonewagon_gl_ma_sit, "bonewagon_gl.cos")
    else
        if system.currentSet == sg then
            sg:current_setup(sg_sgnha)
        end
        manny:walk_closeto_object(system.currentSet.bone_wagon, 0.80000001)
        manny:wait_for_actor()
        bonewagon:set_collision_mode(COLLISION_OFF)
        manny:set_collision_mode(COLLISION_OFF)
        manny:walkto_object(system.currentSet.bone_wagon)
        manny:wait_for_actor()
        manny:set_visibility(FALSE)
        bonewagon:play_chore(bonewagon_gl_ma_jump_in, "bonewagon_gl.cos")
        sleep_for(2100)
        start_sfx("bwMaClmb.WAV")
        bonewagon:wait_for_chore()
        bonewagon:play_chore(bonewagon_gl_ma_sit, "bonewagon_gl.cos")
        manny:put_in_set(nil)
    end
    start_sfx("bwStart.WAV", IM_HIGH_PRIORITY)
    sleep_for(200)
    start_sfx("bwIdle.IMU", IM_HIGH_PRIORITY, 0)
    fade_sfx("bwIdle.IMU", 1000, bonewagon.max_volume)
    sleep_for(500)
    if not sg.signpost.uprooted then
        sg.bone_wagon.ridden = TRUE
        sg.signpost.uprooted = TRUE
        sg:current_setup(sg_sgnha)
        sleep_for(1000)
        bonewagon:play_chore(bonewagon_gl_backup, "bonewagon_gl.cos")
        single_start_sfx(pick_one_of(bonewagon.tire_sfx, TRUE), IM_HIGH_PRIORITY, bonewagon.max_volume)
        start_sfx("bwrev01.wav", IM_HIGH_PRIORITY, bonewagon.max_volume)
        sleep_for(1700)
        fade_sfx("bwrev01.wav", 500)
        start_sfx("sgCrash.WAV", IM_HIGH_PRIORITY)
        sleep_for(200)
        start_script(sg.signpost_lean, sg)
        sleep_for(100)
        glottis:say_line("/gagl017/")
        bonewagon:wait_for_chore(bonewagon_gl_backup, "bonewagon_gl.cos")
        bonewagon:stop_chore(bonewagon_gl_backup, "bonewagon_gl.cos")
        bonewagon:setpos(-2.8169899, -3.0120001, 0)
        bonewagon:setrot(0, 39.022099, 0)
        bonewagon:play_chore(bonewagon_gl_no_shocks, "bonewagon_gl.cos")
        glottis:wait_for_message()
        bonewagon.walk_rate = 0.1
        local3 = 0
        while local3 < 100 do
            bonewagon:set_walk_rate(bonewagon.walk_rate)
            bonewagon.walk_rate = bonewagon.walk_rate + 0.1
            bonewagon:walk_forward()
            break_here()
            local3 = local3 + system.frameTime
        end
        start_script(sg.signpost_vibrate, sg)
        start_sfx("bwrev01.wav", IM_HIGH_PRIORITY, bonewagon.max_volume)
        local3 = 0
        while local3 < 200 do
            bonewagon:set_walk_rate(bonewagon.walk_rate)
            bonewagon.walk_rate = bonewagon.walk_rate + 0.2
            bonewagon:walk_forward()
            break_here()
            local3 = local3 + system.frameTime
        end
        local3 = 0
        bonewagon:set_turn_rate(10)
        while bonewagon.walk_rate > 0.1 and local3 < 2000 do
            bonewagon:set_walk_rate(bonewagon.walk_rate)
            bonewagon.walk_rate = bonewagon.walk_rate - 0.02
            bonewagon:walk_forward()
            TurnActor(bonewagon.hActor, -1)
            break_here()
            local3 = local3 + system.frameTime
        end
        bonewagon.walk_rate = 0.1
        bonewagon:set_walk_rate(bonewagon.walk_rate)
        glottis:say_line("/sugl165/")
        glottis:wait_for_message()
    end
    END_CUT_SCENE()
    bonewagon.current_set = nil
    if signpost.current_set == system.currentSet then
        signpost:set_collision_mode(COLLISION_BOX, 0.40000001)
    end
    system.currentSet.bone_wagon:make_untouchable()
    manny.is_driving = TRUE
    bonewagon:default()
    start_script(bonewagon.monitor_turns, bonewagon)
    sg:enable_bonewagon_boxes(TRUE)
    system.buttonHandler = bone_wagon_button_handler
    bonewagon:set_selected()
    manny:put_in_set(nil)
    music_state:set_state(stateOO_BONE)
end
sg.signpost_lean = function(arg1) -- line 1314
    local local1 = 5
    while local1 < 25 do
        SetActorPitch(signpost.hActor, local1)
        local1 = local1 + local1 / 2
        break_here()
    end
end
sg.signpost_vibrate = function(arg1) -- line 1323
    local local1 = 25
    local local2 = 1
    start_sfx("sgSgnStp.wav")
    while abs(local1) > 1 do
        SetActorPitch(signpost.hActor, local1 * local2)
        local1 = local1 - local1 / 6
        local2 = -local2
        break_here()
    end
    SetActorPitch(signpost.hActor, 0)
end
sg.park_BW_obj = function(arg1) -- line 1337
    local local1
    local local2 = { }
    bonewagon:stop_movement_scripts()
    bonewagon:wait_for_actor()
    bonewagon:stop_movement_scripts()
    local1 = bonewagon:getpos()
    system.currentSet.bone_wagon.obj_x = local1.x
    system.currentSet.bone_wagon.obj_y = local1.y
    system.currentSet.bone_wagon.obj_z = local1.z + 0.25
    system.currentSet.bone_wagon.interest_actor:setpos(local1.x, local1.y, local1.z)
    local1 = { }
    local1.x, local1.y, local1.z = bonewagon:get_manny_pos()
    system.currentSet.bone_wagon.use_pnt_x = local1.x
    system.currentSet.bone_wagon.use_pnt_y = local1.y
    system.currentSet.bone_wagon.use_pnt_z = local1.z
    local2.x, local2.y, local2.z = bonewagon:get_manny_rot()
    system.currentSet.bone_wagon.use_rot_x = local2.x
    system.currentSet.bone_wagon.use_rot_y = local2.y
    system.currentSet.bone_wagon.use_rot_z = local2.z
    system.currentSet.bone_wagon:make_touchable()
end
sg.leave_BW = function(arg1, arg2) -- line 1364
    local local1, local2, local3
    START_CUT_SCENE()
    stop_script(bonewagon.gas)
    stop_script(bonewagon.reverse)
    stop_script(bonewagon.left)
    stop_script(bonewagon.right)
    bonewagon:brake(TRUE)
    END_CUT_SCENE()
    if not arg2 then
        if system.currentSet.enable_bonewagon_boxes then
            system.currentSet:enable_bonewagon_boxes(FALSE)
        end
        if not bonewagon:can_get_out_here() then
            if system.currentSet.enable_bonewagon_boxes then
                system.currentSet:enable_bonewagon_boxes(TRUE)
            end
            local1 = bonewagon:find_safe_out_point()
            if local1 then
                system.default_response("not here")
                local1 = system.currentSet.bw_out_points[local1]
                bonewagon:drivetorot(local1.pos.x, local1.pos.y, local1.pos.z, local1.rot.x, local1.rot.y, local1.rot.z)
                bonewagon:wait_for_actor()
            else
                system.default_response("no room")
                return
            end
        end
    end
    bonewagon:stop_cruise_sounds(TRUE)
    fade_sfx("bwIdle.IMU", 1000, 0)
    if system.currentSet.enable_bonewagon_boxes then
        system.currentSet:enable_bonewagon_boxes(FALSE)
    end
    sg:park_BW_obj()
    manny.is_driving = FALSE
    stop_script(bonewagon.monitor_turns)
    system.buttonHandler = SampleButtonHandler
    START_CUT_SCENE()
    bonewagon:play_chore(bonewagon_gl_ma_jump_out, "bonewagon_gl.cos")
    bonewagon:wait_for_chore(bonewagon_gl_ma_jump_out, "bonewagon_gl.cos")
    bonewagon:set_collision_mode(COLLISION_OFF)
    manny:set_collision_mode(COLLISION_OFF)
    manny:put_in_set(system.currentSet)
    local1, local2, local3 = bonewagon:get_manny_pos(TRUE)
    manny:setpos(local1, local2, local3)
    local1, local2, local3 = bonewagon:get_manny_rot(TRUE)
    manny:setrot(local1, local2, local3)
    manny:set_selected()
    manny:set_visibility(TRUE)
    bonewagon:play_chore(bonewagon_gl_hide_ma, "bonewagon_gl.cos")
    local1 = 0
    while local1 < 1000 do
        manny:walk_forward()
        break_here()
        local1 = local1 + system.frameTime
    end
    manny:set_collision_mode(COLLISION_SPHERE, 0.5)
    bonewagon:set_collision_mode(COLLISION_BOX, 1)
    END_CUT_SCENE()
    inventory_disabled = FALSE
    bonewagon.current_set = system.currentSet
    bonewagon.current_pos = bonewagon:getpos()
    bonewagon.current_rot = bonewagon:getrot()
    bonewagon:stop_cruise_sounds(TRUE)
    start_script(sg.signpost_uncollapse, sg)
    single_start_script(sg.glottis_roars, sg)
    music_state:update(system.currentSet)
end
sg.enable_bonewagon_boxes = function(arg1, arg2) -- line 1448
    local local1, local2
    local1 = 1
    while local1 <= 17 do
        local2 = "bw_box" .. local1
        MakeSectorActive(local2, arg2)
        local1 = local1 + 1
    end
    local1 = 1
    while local1 <= 22 do
        local2 = "mn_box" .. local1
        MakeSectorActive(local2, not arg2)
        local1 = local1 + 1
    end
    if not arg2 then
        local1 = not sg.glottis_obj.touchable
        MakeSectorActive("glot_box1", local1)
        MakeSectorActive("glot_box2", local1)
        MakeSectorActive("glot_box3", local1)
        MakeSectorActive("no_glot_box1", sg.glottis_obj.touchable)
        MakeSectorActive("no_glot_box2", sg.glottis_obj.touchable)
        MakeSectorActive("no_glot_box3", sg.glottis_obj.touchable)
    else
        MakeSectorActive("glot_box1", FALSE)
        MakeSectorActive("glot_box2", FALSE)
        MakeSectorActive("glot_box3", FALSE)
        MakeSectorActive("no_glot_box1", FALSE)
        MakeSectorActive("no_glot_box2", FALSE)
        MakeSectorActive("no_glot_box3", FALSE)
    end
    MakeSectorActive("sg_sp_box_bw", arg2)
    MakeSectorActive("sg_sm_box_bw", arg2)
end
sg.update_glottis = function(arg1) -- line 1492
    stop_script(sg.glottis_roars)
    stop_script(glottis.talk_randomly_from_weighted_table)
    ExpireText()
    if glottis.ripped_heart then
        if glottis.heartless then
            glottis:default()
            glottis:put_in_set(sg)
            glottis:ignore_boxes()
            glottis:setpos(-2.76674, -4.90863, 0)
            glottis:setrot(0, 41.4323, 0)
            glottis:push_costume("glottis_throws.cos")
            glottis:play_chore(glottis_throws_sleep)
            if not find_script(glottis.talk_randomly_from_weighted_table) then
                start_script(glottis.talk_randomly_from_weighted_table, glottis, glottis.snores)
            end
            MakeSectorActive("glot_box1", FALSE)
            MakeSectorActive("glot_box2", FALSE)
            MakeSectorActive("glot_box3", FALSE)
            MakeSectorActive("no_glot_box1", TRUE)
            MakeSectorActive("no_glot_box2", TRUE)
            MakeSectorActive("no_glot_box3", TRUE)
        else
            sg.glottis_obj:make_untouchable()
            if not manny.is_driving then
                MakeSectorActive("glot_box1", TRUE)
                MakeSectorActive("glot_box2", TRUE)
                MakeSectorActive("glot_box3", TRUE)
            end
            MakeSectorActive("no_glot_box1", FALSE)
            MakeSectorActive("no_glot_box2", FALSE)
            MakeSectorActive("no_glot_box3", FALSE)
            glottis:free()
            glottis:put_in_set(nil)
            if bonewagon.current_set == sg and not manny.is_driving then
                single_start_script(sg.glottis_roars, sg, bonewagon)
            end
        end
    else
        MakeSectorActive("glot_box1", TRUE)
        MakeSectorActive("glot_box2", TRUE)
        MakeSectorActive("glot_box3", TRUE)
        MakeSectorActive("no_glot_box1", FALSE)
        MakeSectorActive("no_glot_box2", FALSE)
        MakeSectorActive("no_glot_box3", FALSE)
    end
end
sg.glottis_rip_heart = function(arg1) -- line 1546
    glottis.ripped_heart = TRUE
    glottis.heartless = TRUE
    sp.web.contains = sp.heart
    START_CUT_SCENE()
    music_state:set_sequence(seqGlottisHeart)
    set_override(sg.glottis_rip_heart_override, sg)
    sg:current_setup(sg_sgnha)
    LoadCostume("glottis_throws.cos")
    LoadCostume("glottis_cry.cos")
    manny:setpos(-5.56994, -4.63949, 0)
    manny:setrot(0, 306.939, 0)
    glottis:default()
    glottis:put_in_set(sg)
    glottis:push_costume("glottis_cry.cos")
    glottis:ignore_boxes()
    glottis:setpos(-2.76674, -4.90863, 0)
    glottis:setrot(0, 41.4323, 0)
    glottis:play_chore_looping(glottis_cry_cry_cyc, "glottis_cry.cos")
    sg:current_setup(sg_sgnha)
    manny:walkto(-5.19219, -4.35516, 0)
    glottis:say_line("/sggl023/")
    manny:wait_for_actor()
    manny:setrot(0, 274.838, 0)
    glottis:wait_for_message()
    glottis:say_line("/sggl024/")
    manny:walkto(-3.36409, -4.55001, 0)
    sleep_for(500)
    sg:current_setup(sg_spdws)
    manny:setpos(-3.75837, -4.61657, 0)
    manny:setrot(0, 263.997, 0)
    manny:walkto(-3.46798, -4.64709, 0, 0, 263.962, 0)
    manny:wait_for_actor()
    manny:turn_toward_entity(-2.6755, -4.83566, 0)
    manny:head_look_at_point(-2.98244, -4.81335, 0.552)
    glottis:wait_for_message()
    manny:hand_gesture()
    manny:say_line("/sgma025/")
    manny:wait_for_message()
    manny:shrug_gesture()
    manny:say_line("/sgma026/")
    glottis:set_chore_looping(glottis_cry_cry_cyc, FALSE, "glottis_cry.cos")
    glottis:wait_for_chore("glottis_cry_cry_cyc", "glottis_cry.cos")
    glottis:play_chore(glottis_cry_cry_out, "glottis_cry.cos")
    manny:wait_for_message()
    glottis:say_line("/sggl027/")
    glottis:wait_for_message()
    glottis:play_chore(glottis_cry_head_swing_in, "glottis_cry.cos")
    glottis:say_line("/sggl028/")
    glottis:wait_for_chore(glottis_cry_head_swing_in, "glottis_cry.cos")
    glottis:play_chore_looping(glottis_cry_head_swing_cyc, "glottis_cry.cos")
    wait_for_message()
    glottis:set_chore_looping(glottis_cry_head_swing_cyc, FALSE, "glottis_cry.cos")
    glottis:say_line("/sggl029/")
    glottis:wait_for_chore(glottis_cry_head_swing_cyc, "glottis_cry.cos")
    glottis:play_chore(glottis_cry_head_swing_out, "glottis_cry.cos")
    glottis:wait_for_chore(glottis_cry_head_swing_out, "glottis_cry.cos")
    sleep_for(500)
    glottis:say_line("/sggl023/")
    glottis:play_chore(glottis_cry_tantrum_in, "glottis_cry.cos")
    glottis:wait_for_chore(glottis_cry_tantrum_in, "glottis_cry.cos")
    glottis:play_chore_looping(glottis_cry_tantrum_cyc, "glottis_cry.cos")
    wait_for_message()
    manny:say_line("/sgma030/")
    glottis:set_chore_looping(glottis_cry_tantrum_cyc, FALSE, "glottis_cry.cos")
    glottis:wait_for_chore(glottis_cry_tantrum_cyc, "glottis_cry.cos")
    glottis:play_chore_looping(glottis_cry_tantrum_out, "glottis_cry.cos")
    wait_for_message()
    glottis:wait_for_chore(glottis_cry_tantrum_out, "glottis_cry.cos")
    glottis:stop_chore()
    glottis:push_costume("glottis_throws.cos")
    glottis:play_chore(glottis_throws_throws, "glottis_throws.cos")
    glottis:say_line("/sggl031/")
    wait_for_message()
    glottis:say_line("/sggl032/")
    wait_for_message()
    glottis:say_line("/sggl034/")
    wait_for_message()
    glottis:say_line("/sggl035/")
    wait_for_message()
    glottis:say_line("/sggl036/")
    wait_for_message()
    glottis:wait_for_chore()
    glottis:play_chore(glottis_throws_sleep, "glottis_throws.cos")
    break_here()
    manny:say_line("/sgma038/")
    sleep_for(500)
    start_script(manny.walkto_object, manny, sg.glottis_obj)
    manny:wait_for_message()
    manny:wait_for_actor()
    glottis:wait_for_message()
    manny:twist_head_gesture()
    manny:say_line("/sgma039/")
    break_here()
    manny:wait_for_message()
    END_CUT_SCENE()
    start_script(cut_scene.sp06a, cut_scene)
    wait_for_script(cut_scene.sp06a)
    wait_for_message()
    sg:update_glottis()
end
sg.glottis_rip_heart_override = function(arg1) -- line 1669
    kill_override()
    sg:switch_to_set()
    sg:current_setup(sg_spdws)
    manny:shut_up()
    glottis:stop_chore()
    glottis:shut_up()
    manny:default()
    manny:put_at_object(sg.glottis_obj)
    if not find_script(glottis.talk_randomly_from_weighted_table) then
        start_script(glottis.talk_randomly_from_weighted_table, glottis, glottis.snores)
    end
    sg:update_glottis()
end
sg.replace_heart = function() -- line 1685
    cur_puzzle_state[11] = TRUE
    sg.heart:put_in_limbo()
    sg.glottis_obj:make_untouchable()
    glottis.heartless = FALSE
    sg.bone_wagon.contains = glottis
    stop_script(glottis.talk_randomly_from_weighted_table)
    set_override(sg.replace_heart_override)
    START_CUT_SCENE()
    manny:walkto(-2.23264, -4.77272, 0, 0, 131.467, 0)
    manny:wait_for_actor()
    MakeSectorActive("glot_box1", TRUE)
    MakeSectorActive("glot_box2", TRUE)
    manny:walkto(-2.23264, -4.77272, 0, 0, 131.467, 0)
    manny:wait_for_actor()
    manny:stop_chore(ma_activate_heart, "ma.cos")
    manny:stop_chore(ma_hold, "ma.cos")
    manny:push_costume("ma_save_gl.cos")
    glottis:shut_up()
    glottis:stop_chore()
    glottis:pop_costume()
    glottis:push_costume("gl_saved.cos")
    glottis:head_look_at(nil)
    glottis:play_chore(gl_saved_saved, "gl_saved.cos")
    manny:play_chore(ma_save_gl_save_glottis, "ma_save_gl.cos")
    sleep_for(2000)
    stop_sound("glHrtBt.IMU")
    start_sfx("sgHrtShv.wav")
    sleep_for(4000)
    glottis:say_line("/cpdgl12a/")
    wait_for_message()
    glottis:say_line("/cpdgl12b/")
    wait_for_message()
    glottis:say_line("/cpdgl12c/")
    wait_for_message()
    glottis:say_line("/cpdgl12d/")
    wait_for_message()
    glottis:say_line("/cpdgl12e/")
    wait_for_message()
    glottis:say_line("/cpdgl12f/")
    wait_for_message()
    glottis:wait_for_chore()
    manny:wait_for_chore()
    IrisDown(320, 240, 1000)
    sleep_for(1500)
    manny:pop_costume()
    glottis:pop_costume()
    glottis:default()
    END_CUT_SCENE()
    inventory_disabled = FALSE
    start_script(cut_scene.copaldie, cut_scene)
end
sg.replace_heart_override = function() -- line 1747
    kill_override()
    manny:stop_chore()
    manny:stop_chore(ma_activate_heart, "ma.cos")
    manny:stop_chore(ma_hold, "ma.cos")
    manny:pop_costume()
    glottis:shut_up()
    glottis:stop_chore()
    glottis:pop_costume()
    stop_sound("glHrtBt.IMU")
    glottis:default()
    start_script(sg.get_in_BW)
end
sg.rubacava_point = { x = 2.138, y = 12.1412, z = 0 }
sg.enter = function(arg1) -- line 1769
    sg:update_glottis()
    manny:set_collision_mode(COLLISION_SPHERE, 0.4)
    if sg.signpost.touchable and signpost.current_set == arg1 then
        sg.signpost:make_visible()
    end
    if not sg.bone_wagon.ridden then
        bonewagon:default()
        bonewagon:put_in_set(arg1)
        bonewagon:setpos(2.88665, -0.798663, 0)
        bonewagon:setrot(0, 219.129, 0)
    end
    if bonewagon.current_set == arg1 then
        bonewagon:put_in_set(arg1)
        bonewagon:setpos(bonewagon.current_pos.x, bonewagon.current_pos.y, bonewagon.current_pos.z)
        bonewagon:setrot(bonewagon.current_rot.x, bonewagon.current_rot.y, bonewagon.current_rot.z)
        if not manny.is_driving then
            single_start_script(sg.glottis_roars, sg, bonewagon)
        end
    end
    if not manny.is_driving then
        sg:enable_bonewagon_boxes(FALSE)
    else
        sg:enable_bonewagon_boxes(TRUE)
    end
    if sg.heart.touchable then
        preload_sfx("sgGetHrt.wav")
        preload_sfx("sgHrtShv.wav")
        sg.heart:make_touchable()
        start_sfx("glHrtBt.imu", IM_HIGH_PRIORITY, sp.heartbeat_vol_medium)
    else
        sg.heart:make_untouchable()
    end
    if manny.is_driving then
        bonewagon:default()
        single_start_sfx("bwIdle.IMU", IM_HIGH_PRIORITY, 0)
        fade_sfx("bwIdle.IMU", 1000, bonewagon.max_volume)
    end
    sg:add_ambient_sfx({ "frstCrt1.wav", "frstCrt2.wav", "frstCrt3.wav", "frstCrt4.wav" }, { min_delay = 8000, max_delay = 20000 })
end
sg.camerachange = function(arg1, arg2, arg3) -- line 1820
    if arg3 == sg_spdws then
        if manny.is_driving or bonewagon:in_danger_box() then
            sg:current_setup(arg2)
        end
    end
    if signpost.current_set == sg and manny.is_holding ~= sg.signpost then
        if arg3 == sg_spdws then
            signpost:play_chore(signpost_show)
        else
            signpost:play_chore(signpost_show_lit)
        end
    end
    if sound_playing("glHrtBt.imu") then
        if arg3 == sg_spdws then
            set_vol("glHrtBt.imu", sp.heartbeat_vol_medium)
        else
            set_vol("glHrtBt.imu", sp.heartbeat_vol_far)
        end
    end
end
sg.update_music_state = function(arg1) -- line 1855
    if manny.is_driving then
        return stateOO_BONE
    else
        return stateSG
    end
end
sg.exit = function(arg1) -- line 1863
    manny:set_collision_mode(COLLISION_OFF)
    if sg.heart.visible_actor then
        sg.heart.visible_actor:free()
    end
    stop_script(glottis.talk_randomly_from_weighted_table)
    stop_script(sg.glottis_roars)
    glottis:shut_up()
    glottis:free()
    bonewagon:shut_up()
    stop_sound("bwIdle.IMU")
    stop_sound("glHrtBt.imu")
end
sg.glottis_obj = Object:create(sg, "/sgtx043/Glottis", -2.4567201, -5.0476298, 0.3705, { range = 2 })
sg.glottis_obj.use_pnt_x = -2.23264
sg.glottis_obj.use_pnt_y = -4.7727199
sg.glottis_obj.use_pnt_z = 0
sg.glottis_obj.use_rot_x = 0
sg.glottis_obj.use_rot_y = 131.467
sg.glottis_obj.use_rot_z = 0
sg.glottis_obj.lookAt = function(arg1) -- line 1898
end
sg.glottis_obj.pickUp = function(arg1) -- line 1901
end
sg.glottis_obj.use = function(arg1) -- line 1904
end
sg.glottis_obj.lookAt = function(arg1) -- line 1907
    if glottis.heartless then
        manny:say_line("/sgma044/")
    else
        sg.bone_wagon:lookAt()
    end
end
sg.glottis_obj.pickUp = function(arg1) -- line 1915
    manny:say_line("/sgma045/")
end
sg.glottis_obj.use = function(arg1) -- line 1919
    if glottis.heartless then
        manny:say_line("/sgma046/")
    else
        sg:get_in_BW()
    end
end
sg.glottis_obj.use_heart = function(arg1) -- line 1927
    start_script(sg.replace_heart)
end
sg.glottis_obj.use_scythe = function(arg1) -- line 1931
    START_CUT_SCENE()
    manny:say_line("/sgma047/")
    manny:wait_for_message()
    manny:say_line("/sgma048/")
    END_CUT_SCENE()
end
sg.glottis_obj.use_bone = function(arg1) -- line 1939
    manny:say_line("/sgma049/")
end
sg.signpost = Object:create(sg, "/sgtx050/sign post", -1.87272, -4.17906, 0.60000002, { range = 1.5 })
sg.signpost.use_pnt_x = -1.71085
sg.signpost.use_pnt_y = -4.1479301
sg.signpost.use_pnt_z = 0
sg.signpost.use_rot_x = 0
sg.signpost.use_rot_y = 2617.03
sg.signpost.use_rot_z = 0
sg.signpost.uprooted = FALSE
sg.signpost.used_once = FALSE
sg.signpost.default_rot = { x = 0, y = 346.20999, z = 0 }
sg.signpost.can_put_away = FALSE
signpost.current_set = sg
signpost.current_pos = { x = -1.87272, y = -4.17906, z = 0 }
signpost.current_rot = { x = 0, y = 346.20999, z = 0 }
sg.signpost.lookAt = function(arg1) -- line 1962
    system.currentSet:examine_signpost()
end
sg.signpost.put_away = function(arg1) -- line 1966
    system.default_response("not now")
    return FALSE
end
sg.signpost.pickUp = function(arg1) -- line 1975
    if arg1.uprooted then
        if manny:walk_closeto_object(arg1, 0.8) then
            cur_puzzle_state[12] = TRUE
            START_CUT_SCENE()
            arg1.used_once = TRUE
            manny:wait_for_actor()
            signpost:set_collision_mode(COLLISION_OFF)
            manny:walkto_object(arg1)
            manny:wait_for_actor()
            signpost:pick_up()
            sg.signpost:get()
            manny.is_holding = arg1
            sg.signpost:make_untouchable()
            END_CUT_SCENE()
            signpost.current_set = nil
        else
            system.default_repsonse("reach")
        end
    elseif manny:walk_closeto_object(arg1, 0.8) then
        START_CUT_SCENE()
        manny:wait_for_actor()
        signpost:set_collision_mode(COLLISION_OFF)
        manny:walkto_object(arg1)
        manny:wait_for_actor()
        manny:push_costume("ma_action_sign.cos")
        manny:play_chore(ma_action_sign_try_to_lift, "ma_action_sign.cos")
        manny:wait_for_chore()
        manny:pop_costume()
        manny:say_line("/sgma052/")
        signpost:set_collision_mode(COLLISION_BOX, 0.3)
        END_CUT_SCENE()
    else
        system.default_response("reach")
    end
end
sg.signpost.plant = function(arg1) -- line 2014
    local local1, local2, local3
    local local4
    local local5, local6
    local local7
    local local8 = FALSE
    local local9, local10, local11
    if bonewagon.current_set == system.currentSet then
        local9, local10, local11 = bonewagon:get_manny_far_pos()
        if proximity(manny.hActor, bonewagon.hActor) < 2 or proximity(manny.hActor, local9, local10, local11) < 1.5 then
            system.default_response("not here")
            manny:wait_for_message()
            manny:say_line("/sgma065/")
            return FALSE
        end
    end
    local3 = { }
    local3.x, local3.y, local3.z = signpost:get_future_manny_pos()
    if not GetPointSector(local3.x, local3.y, local3.z) then
        system.default_response("no room")
        return FALSE
    end
    START_CUT_SCENE()
    arg1:free()
    manny.is_holding = nil
    inventory_disabled = FALSE
    if system.currentSet == na or (system.currentSet == sg and sg:current_setup() ~= sg_spdws) then
        local7 = { }
        local7.pos = manny:getpos()
        local7.rot = manny:getrot()
        signpost:put_at_manny(TRUE)
        local7.signpos = signpost:getpos()
        local7.destangle = GetActorYawToPoint(signpost.hActor, system.currentSet.rubacava_point)
        if system.currentSet == na then
            na:current_setup(na_mancu)
        else
            sg:current_setup(sg_mancu)
        end
        if bonewagon.current_set == system.currentSet then
            bonewagon:set_visibility(FALSE)
            bonewagon:set_collision_mode(COLLISION_OFF)
        end
        manny:setpos(3.8364899, -1.23856, 0.5)
    end
    signpost:put_down()
    signpost:play_chore(signpost_show)
    if system.currentSet == sg then
        local4 = arg1
    else
        local4 = na.signpost
    end
    signpost:set_collision_mode(COLLISION_OFF)
    manny:backup(500)
    signpost:set_collision_mode(COLLISION_BOX, 0.30000001)
    if system.currentSet == na then
        if na:check_for_nav_solved(local7.signpos) then
            local8 = TRUE
        end
    end
    if not local8 then
        if local7 then
            sg.signpost:spin(system.currentSet.rubacava_point, local7.destangle)
            manny:setrot(0, local7.destangle, 0, TRUE)
            manny:wait_for_actor()
            sleep_for(1000)
            local1 = signpost:getpos()
            local3 = manny:getpos()
            if system.currentSet == sg then
                sg:current_setup(sg_sgnha)
            else
                na:current_setup(na_intha)
            end
            if bonewagon.current_set == system.currentSet then
                bonewagon:set_visibility(TRUE)
                bonewagon:set_collision_mode(COLLISION_BOX, 1)
            end
            signpost:play_chore(signpost_show_lit)
            signpost:setpos(local7.signpos.x, local7.signpos.y, local7.signpos.z)
            local3.x = local7.signpos.x - (local1.x - local3.x)
            local3.y = local7.signpos.y - (local1.y - local3.y)
            local3.z = local7.signpos.z
            manny:setpos(local3.x, local3.y, local3.z)
            signpost:setrot(0, local7.destangle, 0)
        else
            sg.signpost:spin(system.currentSet.rubacava_point)
            if system.currentSet == sg and sg:current_setup() ~= sg_spdws then
                signpost:play_chore(signpost_show_lit)
            end
        end
        local4.interest_actor:put_in_set(system.currentSet)
        local1 = signpost:getpos()
        local4.obj_x = local1.x
        local4.obj_y = local1.y
        local4.obj_z = local1.z + 0.60000002
        local4.interest_actor:setpos(local4.obj_x, local4.obj_y, local4.obj_z)
        local4:make_touchable()
        local4.use_pnt_x, local4.use_pnt_y, local4.use_pnt_z = signpost:get_manny_pos()
        local2 = signpost:getrot()
        local4.use_rot_x = local2.x
        local4.use_rot_y = local2.y + 110
        local4.use_rot_z = local2.z
        signpost:set_collision_mode(COLLISION_BOX, 0.30000001)
    end
    END_CUT_SCENE()
    if not local8 then
        signpost.current_set = system.currentSet
        signpost.current_pos = signpost:getpos()
        signpost.current_rot = signpost:getrot()
    end
    return TRUE
end
sg.signpost.spin = function(arg1, arg2, arg3) -- line 2146
    local local1
    local local2, local3
    local local4, local5
    local1 = signpost:getrot()
    while local1.y > 360 do
        local1.y = local1.y - 360
    end
    while local1.y < 0 do
        local1.y = local1.y + 360
    end
    local2 = 0
    local3 = 1
    start_sfx("sgSgnRot.IMU")
    while local2 < 5 do
        local1.y = local1.y + local3
        if local3 < 40 then
            local3 = local3 + 1
        end
        if local1.y > 360 then
            local1.y = local1.y - 360
            local2 = local2 + 1
        end
        signpost:setrot(local1.x, local1.y, local1.z)
        break_here()
    end
    if not arg3 then
        arg3 = GetActorYawToPoint(signpost.hActor, arg2)
    end
    while arg3 > 360 do
        arg3 = arg3 - 360
    end
    while arg3 < 0 do
        arg3 = arg3 + 360
    end
    fade_sfx("sgSgnRot.IMU", 200, 0)
    start_sfx("sgSgnSlw.WAV", 127, 0)
    fade_sfx("sgSgnSlw.WAV", 200, 127)
    while local3 > 1 do
        local1.y = local1.y + local3
        local3 = local3 - local3 / 4
        if local1.y > 360 then
            local1.y = local1.y - 360
        end
        signpost:setrot(local1.x, local1.y, local1.z)
        break_here()
    end
    stop_sound("sgSgnRot.IMU")
    local3 = 1
    local4 = arg3
    if local4 > local1.y then
        local4 = local4 - 360
    end
    local5 = 0
    while local1.y > local4 do
        local1.y = local1.y - local3
        local3 = local3 + local3 / 2
        signpost:setrot(local1.x, local1.y, local1.z)
        break_here()
        local5 = local5 + system.frameTime
        if local5 >= 150 then
            single_start_sfx("sgSgnStp.WAV")
        end
    end
    if local5 < 100 then
        single_start_sfx("sgSgnStp.WAV")
    end
    if abs(local1.y - local4) < local3 then
        local3 = abs(local1.y - local4)
    end
    while abs(local1.y - local4) > 1 do
        local3 = local3 - local3 / 3
        if local1.y > local4 then
            local1.y = local4 - local3
        else
            local1.y = local4 + local3
        end
        signpost:setrot(local1.x, local1.y, local1.z)
        break_here()
    end
    signpost:setrot(0, arg3, 0)
end
sg.signpost.use = function(arg1) -- line 2243
    if manny.is_holding == arg1 then
        arg1:plant()
    else
        sg.signpost:pickUp()
    end
end
sg.signpost.use_scythe = function(arg1) -- line 2251
    if arg1.uprooted then
        manny:say_line("/sgma054/")
    else
        manny:say_line("/sgma055/")
        manny:wait_for_message()
        manny:say_line("/sgma056/")
    end
end
sg.signpost.make_visible = function(arg1) -- line 2261
    signpost:default()
    signpost:put_in_set(system.currentSet)
    signpost:setpos(signpost.current_pos.x, signpost.current_pos.y, signpost.current_pos.z)
    signpost:setrot(signpost.current_rot.x, signpost.current_rot.y, signpost.current_rot.z)
    signpost:play_chore(signpost_show, "signpost.cos")
end
sg.heart = Object:create(sg, "/sgtx057/heart", -2.80985, -4.17379, 0.073100001, { range = 1 })
sg.heart.use_pnt_x = -2.6830399
sg.heart.use_pnt_y = -4.1160302
sg.heart.use_pnt_z = 0
sg.heart.use_rot_x = 0
sg.heart.use_rot_y = 118.755
sg.heart.use_rot_z = 0
sg.heart.wav = "spHrtWeb.wav"
sg.heart.touchable = FALSE
sg.heart.can_put_away = FALSE
sg.heart.lookAt = function(arg1) -- line 2282
    arg1.seen = TRUE
    manny:say_line("/spma010/")
end
sg.heart.pickUp = function(arg1) -- line 2287
    if manny:walk_closeto_object(arg1, 0.5) then
        START_CUT_SCENE()
        manny:wait_for_actor()
        arg1.visible_actor:set_collision_mode(COLLISION_OFF)
        manny:walkto_object(arg1)
        manny:wait_for_actor()
        manny:play_chore(ma_reach_low, "ma.cos")
        sleep_for(650)
        sg.heart:get()
        sg.heart:make_untouchable()
        manny:play_chore_looping(ma_activate_heart_beat, "ma.cos")
        start_sfx("sgGetHrt.wav")
        sleep_for(500)
        manny:play_chore_looping(ma_hold, "ma.cos")
        manny:stop_chore(ma_reach_low, "ma.cos")
        manny.is_holding = arg1
        if not arg1.seen then
            arg1:lookAt()
        end
        END_CUT_SCENE()
    end
end
sg.heart.use = function(arg1) -- line 2311
    if arg1.owner == manny then
        manny:say_line("/sgma058/")
    else
        arg1:pickUp()
    end
end
sg.heart.default_response = function(arg1) -- line 2319
    manny:say_line("/sgma059/")
end
sg.heart.use_scythe = function(arg1) -- line 2323
    manny:say_line("/sgma060/")
end
sg.heart.make_touchable = function(arg1) -- line 2327
    if not arg1.visible_actor then
        arg1.visible_actor = Actor:create(nil, nil, nil, arg1.name)
    end
    Object.make_touchable(arg1)
    arg1.visible_actor:set_costume("sp_glottis_heart.cos")
    arg1.visible_actor:put_in_set(sg)
    arg1.visible_actor:setpos(arg1.obj_x, arg1.obj_y, arg1.obj_z)
    arg1.visible_actor:setrot(0, 0, 0)
    arg1.visible_actor:set_visibility(TRUE)
    arg1.visible_actor:play_chore_looping(0)
    arg1.visible_actor:set_collision_mode(COLLISION_BOX, 1.1)
end
sg.heart.make_untouchable = function(arg1) -- line 2342
    if arg1.visible_actor then
        arg1.visible_actor:set_collision_mode(COLLISION_OFF)
        arg1.visible_actor:put_in_set(nil)
        arg1.visible_actor:set_visibility(FALSE)
        arg1.visible_actor:stop_chore(0)
    end
    Object.make_untouchable(arg1)
end
sg.heart.put_away = function(arg1) -- line 2352
    arg1:default_response()
    return FALSE
end
sg.bone_wagon = Object:create(sg, "/sgtx061/Bone Wagon", 3.50579, -0.84495902, 0.2538, { range = 2.5 })
sg.bone_wagon.use_pnt_x = 1.63726
sg.bone_wagon.use_pnt_y = -0.094200999
sg.bone_wagon.use_pnt_z = 0
sg.bone_wagon.use_rot_x = 0
sg.bone_wagon.use_rot_y = 301.353
sg.bone_wagon.use_rot_z = 0
sg.bone_wagon.lookAt = function(arg1) -- line 2366
    if not glottis.heartless then
        manny:say_line("/sgma062/")
    else
        manny:say_line("/sgma063/")
    end
end
sg.bone_wagon.pickUp = function(arg1) -- line 2374
    system.default_response("tow")
end
sg.bone_wagon.use = function(arg1) -- line 2378
    if not glottis.heartless then
        sg:get_in_BW()
    else
        manny:say_line("/trma068/")
    end
end
sg.bone_wagon.use_scythe = function(arg1) -- line 2386
    manny:say_line("/sgma065/")
end
sg.bone_wagon.use_bone = function(arg1) -- line 2390
    manny:say_line("/sgma066/")
end
sg.sm_door = Object:create(sg, "/sgtx067/trail", -5.7180099, -5.4510102, 1.1, { range = 1.5 })
sg.sg_sm_box = sg.sm_door
sg.sg_sm_box_bw = sg.sm_door
sg.sm_door.use_pnt_x = -4.5913901
sg.sm_door.use_pnt_y = -4.3188801
sg.sm_door.use_pnt_z = 0
sg.sm_door.use_rot_x = 0
sg.sm_door.use_rot_y = -224.203
sg.sm_door.use_rot_z = 0
sg.sm_door.out_pnt_x = -5.1719098
sg.sm_door.out_pnt_y = -4.9159999
sg.sm_door.out_pnt_z = 0
sg.sm_door.out_rot_x = 0
sg.sm_door.out_rot_y = -224.203
sg.sm_door.out_rot_z = 0
sg.sm_door.walkOut = function(arg1) -- line 2416
    if manny.is_driving then
        bonewagon:squelch_sfx()
        if rnd(5) then
            glottis:say_line("/sggl071/")
        else
            glottis:say_line("/sggl069/")
        end
        glottis:wait_for_message()
        bonewagon:restore_sfx()
    elseif glottis.heartless then
        manny:say_line("/sgma070/")
    elseif not sg:check_post(arg1) then
        sm:come_out_door(sm.sg_door)
    end
end
sg.sm_door.comeOut = function(arg1) -- line 2435
    if not glottis.ripped_heart then
        start_script(sg.glottis_rip_heart)
    else
        arg1:come_out_door()
    end
end
sg.sp_door = Object:create(sg, "/sgtx072/path", -2.20207, -6.4960999, 0.47999999, { range = 1.5 })
sg.sg_sp_box = sg.sp_door
sg.sg_sp_box_bw = sg.sp_door
sg.sp_door.use_pnt_x = -2.9080701
sg.sp_door.use_pnt_y = -6.0844102
sg.sp_door.use_pnt_z = 0
sg.sp_door.use_rot_x = 0
sg.sp_door.use_rot_y = 197.575
sg.sp_door.use_rot_z = 0
sg.sp_door.out_pnt_x = -2.1252999
sg.sp_door.out_pnt_y = -6.5885901
sg.sp_door.out_pnt_z = 0
sg.sp_door.out_rot_x = 0
sg.sp_door.out_rot_y = -152.37801
sg.sp_door.out_rot_z = 0
sg.sp_door.lookAt = function(arg1) -- line 2464
    manny:say_line("/sgma073/")
end
sg.sp_door.walkOut = function(arg1) -- line 2468
    if manny.is_driving then
        bonewagon:squelch_sfx()
        glottis:say_line("/sggl074/")
        glottis:wait_for_message()
        bonewagon:restore_sfx()
    elseif not sg:check_post(arg1) then
        if not sp.seen_intro then
            sp.intro_flag = TRUE
        end
        sp:come_out_door(sp.sg_door)
    end
end
sg.sp_door.comeOut = function(arg1) -- line 2484
    system.lock_display()
    break_here()
    sg:current_setup(2)
    manny:setpos(-2.89254, -6.14322, 0)
    manny:setrot(0, 746.691, 0)
    system.unlock_display()
end
sg.mod_door = Object:create(sg, "/sgtx075/bumpy road", 12.542, 4.9489999, 0.80000001, { range = 1.5 })
sg.sg_mod_box = sg.mod_door
sg.mod_door.use_pnt_x = 11.1404
sg.mod_door.use_pnt_y = 3.9449799
sg.mod_door.use_pnt_z = 0
sg.mod_door.use_rot_x = 0
sg.mod_door.use_rot_y = 320.28
sg.mod_door.use_rot_z = 0
sg.mod_door.out_pnt_x = 11.6844
sg.mod_door.out_pnt_y = 4.5656199
sg.mod_door.out_pnt_z = 0
sg.mod_door.out_rot_x = 0
sg.mod_door.out_rot_y = 301.72699
sg.mod_door.out_rot_z = 0
sg.mod_door.lookAt = function(arg1) -- line 2514
    if glottis.talked_clearance then
        START_CUT_SCENE()
        manny:say_line("/sgma076/")
        manny:wait_for_message()
        manny:say_line("/sgma077/")
        END_CUT_SCENE()
    else
        manny:say_line("/sgma078/")
    end
end
sg.mod_door.walkOut = function(arg1) -- line 2526
    local local1
    if glottis.heartless then
        sg.sm_door:walkOut()
    elseif manny.is_driving then
        if mod_solved then
            START_CUT_SCENE()
            stop_script(bonewagon.gas)
            stop_script(bonewagon.reverse)
            stop_script(bonewagon.left)
            stop_script(bonewagon.right)
            bonewagon:brake(TRUE)
            bonewagon:stop_cruise_sounds()
            sleep_for(500)
            bonewagon:play_chore(bonewagon_gl_shocks)
            bonewagon:wait_for_chore(bonewagon_gl_shocks)
            bonewagon:play_chore_looping(bonewagon_gl_stay_Up)
            local1 = 0
            bonewagon:set_walk_rate(1)
            bonewagon:ignore_boxes()
            while local1 < 1000 do
                bonewagon:walk_forward()
                break_here()
                local1 = local1 + system.frameTime
            end
            bonewagon:stop_chore(bonewagon_gl_stay_up)
            bonewagon:play_chore(bonewagon_gl_no_shocks)
            bonewagon:follow_boxes()
            END_CUT_SCENE()
            bv:drive_in()
        elseif not glottis.talked_clearance then
            glottis.talked_clearance = TRUE
            bonewagon:squelch_sfx()
            glottis:say_line("/sggl079/")
            glottis:wait_for_message()
            glottis:say_line("/sggl080/")
            glottis:wait_for_message()
            bonewagon:restore_sfx()
        else
            bonewagon:squelch_sfx()
            glottis:say_line("/sggl081/")
            glottis:wait_for_message()
            bonewagon:restore_sfx()
        end
    elseif not sg:check_post(arg1) then
        bv:come_out_door(bv.sg_door)
    end
end
sg.na_door = Object:create(sg, "/sgtx082/trail", -0.498, 7.7490001, 0.27000001, { range = 1.5 })
sg.sg_na_box = sg.na_door
sg.na_door.use_pnt_x = -1.04241
sg.na_door.use_pnt_y = 6.2573299
sg.na_door.use_pnt_z = 0
sg.na_door.use_rot_x = 0
sg.na_door.use_rot_y = 332.31601
sg.na_door.use_rot_z = 0
sg.na_door.out_pnt_x = -0.35649699
sg.na_door.out_pnt_y = 7.70927
sg.na_door.out_pnt_z = 0
sg.na_door.out_rot_x = 0
sg.na_door.out_rot_y = -7.7764401
sg.na_door.out_rot_z = 0
sg.na_door.lookAt = function(arg1) -- line 2606
    manny:say_line("/sgma083/")
end
sg.na_door.walkOut = function(arg1) -- line 2610
    if glottis.heartless then
        sg.sm_door:walkOut()
    else
        na:come_out_door(na.sg_door)
    end
end
sg.tr_door = Object:create(sg, "/sgtx084/trail", 5.82793, -6.8160901, 0.5, { range = 1.5 })
sg.sg_tr_box = sg.tr_door
sg.tr_door.use_pnt_x = 5.3253398
sg.tr_door.use_pnt_y = -5.6335101
sg.tr_door.use_pnt_z = 0
sg.tr_door.use_rot_x = 0
sg.tr_door.use_rot_y = -143.755
sg.tr_door.use_rot_z = 0
sg.tr_door.out_pnt_x = 6.01823
sg.tr_door.out_pnt_y = -6.7782698
sg.tr_door.out_pnt_z = 0
sg.tr_door.out_rot_x = 0
sg.tr_door.out_rot_y = -156.267
sg.tr_door.out_rot_z = 0
sg.tr_door.lookAt = function(arg1) -- line 2637
    START_CUT_SCENE()
    ResetMarioControls()
    manny:say_line("/sgma085/")
    manny:setpos(5.43677, -5.04949, 0, 0, 11.5, 0)
    END_CUT_SCENE()
end
sg.tr_door.walkOut = function(arg1) -- line 2645
    if glottis.heartless then
        sg.sm_door:walkOut()
    elseif not manny.is_driving then
        arg1:lookAt()
    else
        tr:drive_in()
    end
end
ship_bottle_Chore0 = 0
CheckFirstTime("sh.lua")
dofile("msb_ladder_generic.lua")
sh = Set:create("sh.set", "sewer hub", { sh_intws = 0, sh_ovrhd = 1 })
sewer_drip = function() -- line 14
    local local1
    while 1 do
        sleep_for(rnd(10000, 25000))
        local1 = pick_one_of({ "swrDrop1.wav", "swrDrop2.wav", "swrDrop3.wav", "swrDrop4.wav" })
        start_sfx(local1, IM_LOW_PRIORITY)
    end
end
sh.glottis_bounce = function() -- line 35
    glottis_bounce_okay = TRUE
    while glottis_bounce_okay do
        sleep_for(500)
        start_sfx("bwRmClik.wav")
        start_sfx("bwShock.wav")
        glottis:play_chore(bonewagon_gl_shocks)
        glottis:wait_for_chore()
        sleep_for(500)
        start_sfx("bwRmClik.wav")
        start_sfx("bwShock.wav")
        glottis:play_chore(bonewagon_gl_down)
        glottis:wait_for_chore()
    end
end
sh.get_remote = function(arg1) -- line 51
    local local1 = start_script(sh.glottis_bounce)
    START_CUT_SCENE()
    if manny.is_holding then
        put_away_held_item()
    end
    manny:walkto(1.83951, -1.40749, 0, 0, 19.8526, 0)
    manny:wait_for_actor()
    glottis_bounce_okay = FALSE
    wait_for_script(local1)
    manny:say_line("/syma093/")
    manny:play_chore(msb_reach_high, manny.base_costume)
    sleep_for(700)
    start_sfx("slHndCse.wav")
    manny:wait_for_chore()
    manny:generic_pickup(sh.remote)
    END_CUT_SCENE()
    start_script(sg.glottis_roars, sg, glottis)
end
manny_grind = function() -- line 80
    local local1 = { x = 0, y = 0.42699999, z = 0 }
    local local2 = { }
    local local3 = { }
    local local4 = { }
    local local5 = 0.0099999998
    local local6 = 0
    local local7 = FALSE
    START_CUT_SCENE()
    if not grind_boy then
        grind_boy = Actor:create(nil, nil, nil, "grind boy")
    end
    local3 = manny:getrot()
    local4 = RotateVector(local1, local3)
    local2 = manny:getpos()
    local4.x = local4.x + local2.x
    local4.y = local4.y + local2.y
    local4.z = local4.z + local2.z
    grind_boy:put_in_set(system.currentSet)
    grind_boy:follow_boxes()
    grind_boy:setpos(local4)
    if manny.fancy then
        manny:stop_chore(mcc_thunder_hold, "mcc_thunder.cos")
        manny:stop_chore(mcc_thunder_takeout_grinder_full, "mcc_thunder.cos")
        manny:play_chore_looping(mcc_thunder_hold_grinder, "mcc_thunder.cos")
        manny:play_chore_looping(mcc_thunder_use_grinder, "mcc_thunder.cos")
    else
        manny:stop_chore(msb_activate_grinder_full, "msb.cos")
        manny:play_chore_looping(msb_use_grinder, "msb.cos")
    end
    break_here()
    start_sfx("grinder.IMU")
    if grind_boy:find_sector_name("trail") or grind_boy:find_sector_name("find_zod") or grind_boy:find_sector_name("bowlsley_puddle") and not local7 then
        if grind_boy:find_sector_name("find_zod") then
            local7 = TRUE
        end
        trail_actor:set_costume("flower_trail.cos")
        trail_actor:put_in_set(system.currentSet)
        local2 = grind_boy:getpos()
        local2.z = local2.z + 0.025
        trail_actor:setpos(local2)
        trail_actor:play_chore(1)
        start_sfx("zw_trail.WAV")
        trail_actor:scale(local5)
        trail_actor:setrot(0, rnd(0, 360), 0)
        if system.currentSet == sh then
            repeat
                local5 = local5 + PerSecond(5)
                if local5 >= 3.5 then
                    local5 = 3.5
                end
                trail_actor:scale(local5)
                break_here()
            until local5 == 3.5
        else
            repeat
                local5 = local5 + PerSecond(5)
                if local5 >= 2.5 then
                    local5 = 2.5
                end
                trail_actor:scale(local5)
                break_here()
            until local5 == 2.5
        end
        trail_actor["i"] = trail_actor.i + 1
        if trail_actor.i == 100 then
            trail_actor["i"] = 1
        end
        if not trail_actor.instances[trail_actor.i] then
            trail_actor.instances[trail_actor.i] = { object = { }, actor = { }, set = { }, pos = { }, rot = { } }
        end
        trail_actor.instances[trail_actor.i].object = Object:create(system.currentSet, "trail" .. local6, local2.x, local2.y, local2.z, { range = 0.60000002 })
        trail_actor.instances[trail_actor.i].object.parent = sh.flower_trail_obj
        trail_actor.instances[trail_actor.i].actor = trail_actor.instances[trail_actor.i].object.interest_actor
        trail_actor.instances[trail_actor.i].set = system.currentSet
        trail_actor.instances[trail_actor.i].pos = trail_actor:getpos()
        trail_actor.instances[trail_actor.i].rot = trail_actor:getrot()
        if Is3DHardwareEnabled() then
            trail_actor.instances[trail_actor.i].actor:set_costume("flower_trail.cos")
            trail_actor.instances[trail_actor.i].actor:setrot(trail_actor.instances[trail_actor.i].rot)
            trail_actor.instances[trail_actor.i].actor:scale(2.5)
            trail_actor.instances[trail_actor.i].actor:play_chore(1)
            trail_actor.instances[trail_actor.i].actor:set_visibility(TRUE)
        else
            trail_actor:stamp()
        end
        local5 = 0.0099999998
        trail_actor:free()
        if manny.fancy then
            manny:set_chore_looping(mcc_thunder_use_grinder, FALSE)
        else
            manny:set_chore_looping(msb_use_grinder, FALSE)
        end
        if not exclaimed_tears then
            start_script(sh.exclaim_tears)
        end
    else
        sleep_for(1000)
    end
    fade_sfx("grinder.IMU", 400, 0)
    if manny.fancy then
        manny:stop_chore(mcc_thunder_hold_grinder, "mcc_thunder.cos")
        manny:stop_chore(mcc_thunder_use_grinder, "mcc_thunder.cos")
        manny:play_chore_looping(mcc_thunder_hold, "mcc_thunder.cos")
        manny:play_chore_looping(mcc_thunder_takeout_grinder_full, "mcc_thunder.cos")
    else
        manny:wait_for_chore(msb_use_grinder, "msb.cos")
        manny:stop_chore(msb_use_grinder, "msb.cos")
        manny:play_chore_looping(msb_activate_grinder_full, "msb.cos")
    end
    sleep_for(400)
    END_CUT_SCENE()
    if local7 and not manny.been_in_at then
        manny.been_in_at = TRUE
        start_script(cut_scene.albinizod)
    end
    grind_boy:free()
end
sh.mount_ladder = function(arg1) -- line 205
    START_CUT_SCENE()
    sh:switch_to_set()
    manny:put_in_set(sh)
    manny:setpos(-0.388315, 0.121017, 2.95)
    manny:setrot(0, 266.267, 0)
    if manny.is_holding then
        manny:clear_hands()
    end
    manny:walkto(0.263604, 0.0531176, 2.95, 0, 254.052, 0)
    manny:wait_for_actor()
    manny:walkto(0.495525, 0.035114, 2.95, 0, 90, 0)
    manny:wait_for_actor()
    manny:start_climb_ladder(sh.te_ladder)
    manny:play_chore(msb_ladder_generic_mount_ladder)
    manny:wait_for_chore(msb_ladder_generic_mount_ladder)
    manny:stop_chore(msb_ladder_generic_mount_ladder)
    manny:setpos(0.606632, -0.0489547, 2.356)
    manny:setrot(0, 90, 0)
    manny:climb_down()
    END_CUT_SCENE()
end
sh.unmount_ladder = function(arg1) -- line 231
    START_CUT_SCENE()
    stop_script(manny.climb_up)
    stop_script(manny.climb_down)
    stop_script(climb_actor_up)
    stop_script(climb_actor_down)
    manny:stop_chore(ma_ladder_generic_climb1)
    manny:stop_chore(ma_ladder_generic_climb2)
    manny:stop_chore(ma_ladder_generic_climb_down1)
    manny:stop_chore(ma_ladder_generic_climb_down2)
    manny:setpos(0.495525, 0.035114, 2.95)
    manny:setrot(0, 90, 0)
    manny:play_chore(msb_ladder_generic_unmount_ladder)
    manny:wait_for_chore(msb_ladder_generic_unmount_ladder)
    manny:setpos(0.495525, 0.035114, 2.95)
    manny:stop_climb_ladder()
    manny:walkto(-0.360079, -0.0644043, 2.95, 0, 84.0209, 0)
    te:come_out_door(te.sh_door)
    END_CUT_SCENE()
end
sh.exclaim_tears = function() -- line 256
    local local1
    START_CUT_SCENE()
    exclaimed_tears = TRUE
    music_state:set_sequence(seqSproutAha)
    manny:say_line("/syma159/")
    manny:wait_for_message()
    if system.currentSet == sh then
        manny:walkto(2.99928, -0.492008, 0, 0, 66.599998, 0)
        manny:wait_for_actor()
        local local2 = start_script(manny_grind)
        wait_for_script(local2)
        manny:walkto(3.2314, -0.492008, 0, 0, 66.599998, 0)
        manny:wait_for_actor()
        local local3 = start_script(manny_grind)
        wait_for_script(local3)
        manny:walkto(3.55, -0.492008, 0, 0, 66.599998, 0)
        manny:wait_for_actor()
        local local4 = start_script(manny_grind)
        wait_for_script(local4)
    end
    manny:say_line("/shma015/")
    wait_for_message()
    manny:say_line("/shma016/")
    wait_for_message()
    END_CUT_SCENE()
end
sh.set_up_flowers = function(arg1) -- line 291
    local local1 = 1
    local local2 = { }
    system:lock_display()
    break_here()
    if trail_actor.i > 0 then
        repeat
            if trail_actor.instances[local1].set == system.currentSet then
                trail_actor.instances[local1].object:make_touchable()
                trail_actor.instances[local1].actor:set_costume("flower_trail.cos")
                trail_actor.instances[local1].actor:put_in_set(system.currentSet)
                trail_actor.instances[local1].actor:setpos(trail_actor.instances[local1].pos)
                trail_actor.instances[local1].actor:setrot(trail_actor.instances[local1].rot)
                if system.currentSet == sh then
                    trail_actor.instances[local1].actor:scale(3.5)
                else
                    trail_actor.instances[local1].actor:scale(2.5)
                end
                trail_actor.instances[local1].actor:play_chore(1)
                trail_actor.instances[local1].actor:set_visibility(TRUE)
                if not Is3DHardwareEnabled() then
                    break_here()
                    trail_actor.instances[local1].actor:stamp()
                    trail_actor.instances[local1].actor:set_costume(nil)
                end
            end
            local1 = local1 + 1
        until local1 > trail_actor.i
    end
    system:unlock_display()
end
sh.set_up_actors = function(arg1) -- line 323
    if bowlsley_in_hiding and not glottis.in_at then
        MakeSectorActive("glottis_here", TRUE)
        MakeSectorActive("glottis_gone", FALSE)
        glottis:set_costume("bonewagon_gl.cos")
        glottis:put_in_set(sh)
        glottis:ignore_boxes()
        glottis:setpos(2.04434, -0.128071, 0)
        glottis:setrot(0, -191.033, 0)
        glottis:set_mumble_chore(bonewagon_gl_gl_mumble)
        glottis:set_talk_chore(1, bonewagon_gl_stop_talk)
        glottis:set_talk_chore(2, bonewagon_gl_a)
        glottis:set_talk_chore(3, bonewagon_gl_c)
        glottis:set_talk_chore(4, bonewagon_gl_e)
        glottis:set_talk_chore(5, bonewagon_gl_f)
        glottis:set_talk_chore(6, bonewagon_gl_l)
        glottis:set_talk_chore(7, bonewagon_gl_m)
        glottis:set_talk_chore(8, bonewagon_gl_o)
        glottis:set_talk_chore(9, bonewagon_gl_t)
        glottis:set_talk_chore(10, bonewagon_gl_u)
        glottis:play_chore(bonewagon_gl_drive)
        if sh.remote.raised then
            glottis:complete_chore(bonewagon_gl_stay_up)
        end
        glottis:set_collision_mode(COLLISION_OFF)
    else
        MakeSectorActive("glottis_here", FALSE)
        MakeSectorActive("glottis_gone", TRUE)
    end
    if not trail_actor then
        trail_actor = Actor:create(nil, nil, nil, "trail")
        trail_actor["i"] = 0
        trail_actor.instances = { }
    end
end
sh.crush_manny = function() -- line 365
    START_CUT_SCENE()
    stop_script(sg.glottis_roars)
    glottis:play_chore(bonewagon_gl_down)
    sleep_for(250)
    start_sfx("atBWlnd.wav")
    manny:say_line("/bdma006B/")
    glottis:wait_for_chore()
    manny:wait_for_message()
    glottis:wait_for_message()
    start_sfx("bwShock.wav")
    glottis:play_chore(bonewagon_gl_shocks)
    glottis:wait_for_chore()
    glottis:say_line("/sugl165/")
    glottis:wait_for_message()
    start_script(sg.glottis_roars, sg, glottis)
    END_CUT_SCENE()
end
sh.enter = function(arg1) -- line 384
    NewObjectState(sh_intws, OBJSTATE_UNDERLAY, "sh_0_nopuddle.bm")
    sh.zw_door:set_object_state("sh_puddle.cos")
    sh:set_up_actors()
    start_script(sewer_drip)
    if bowlsley_in_hiding then
        sh.puddle:make_touchable()
        sh.zw_door:play_chore(1)
    else
        sh.zw_door:play_chore(0)
    end
    if trail_actor then
        start_script(sh.set_up_flowers)
    end
    if sh.remote.owner == manny and not glottis.in_at and not find_script(fi.happy_bowlsley) then
        single_start_script(sg.glottis_roars, sg, glottis)
    elseif bowlsley_in_hiding and not sh.stolen_remote then
        sh.stolen_remote = TRUE
        start_script(sh.get_remote)
    end
    if bowlsley_in_hiding and not glottis.in_at then
        sh.glottis_obj:make_touchable()
    else
        sh.glottis_obj:make_untouchable()
    end
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 2.6, -0.5, 2.6)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
    MakeSectorActive("bw_up1", FALSE)
    MakeSectorActive("bw_up2", FALSE)
    MakeSectorActive("bw_up3", FALSE)
end
sh.exit = function(arg1) -- line 426
    local local1 = 1
    stop_script(sg.glottis_roars)
    stop_script(sewer_drip)
    glottis:free()
    if trail_actor.i > 0 then
        repeat
            trail_actor.instances[local1].actor:free()
            local1 = local1 + 1
        until local1 > trail_actor.i
    end
    trail_actor:free()
    KillActorShadows(manny.hActor)
end
sh.glottis_obj = Object:create(sh, "glottis", 1.93088, -0.87330699, 1.012, { range = 2.5 })
sh.glottis_obj.use_pnt_x = 2.0242801
sh.glottis_obj.use_pnt_y = -1.17633
sh.glottis_obj.use_pnt_z = 0
sh.glottis_obj.use_rot_x = 0
sh.glottis_obj.use_rot_y = -333.151
sh.glottis_obj.use_rot_z = 0
sh.glottis_obj.touchable = FALSE
sh.glottis_obj.lookAt = function(arg1) -- line 458
    manny:say_line("/lbma005/")
end
sh.flower_trail_obj = Object:create(sh, "master flower trail", 0, 0, 0, { range = 0 })
sh.flower_trail_obj.lookAt = function(arg1) -- line 465
    manny:say_line("/zwma012/")
end
sh.flower_trail_obj.pickUp = function(arg1) -- line 469
    system.default_response("mittens")
end
sh.flower_trail_obj.use = sh.flower_trail_obj.pickUp
sh.remote = Object:create(sh, "/shtx002/remote control", 0, 0, 0, { range = 0 })
sh.remote.string_name = "remote"
sh.remote.lookAt = function(arg1) -- line 478
    manny:say_line("/shma003/")
end
sh.remote.raise = function(arg1) -- line 482
    if albinizod_pinned then
        system.default_response("right")
    else
        if system.currentSet == at then
            glottis:thaw()
            ForceRefresh()
        end
        START_CUT_SCENE()
        start_sfx("bwRmClik.wav")
        start_sfx("bwShock.wav")
        glottis.bonewagon_up = TRUE
        stop_script(sg.glottis_roars)
        glottis:play_chore(bonewagon_gl_shocks)
        glottis:wait_for_chore()
        arg1.raised = TRUE
        if system.currentSet == sh then
            MakeSectorActive("bw_up1", TRUE)
            MakeSectorActive("bw_up2", TRUE)
            MakeSectorActive("bw_up3", TRUE)
            glottis:wait_for_message()
            glottis:say_line("/shgl004/")
            glottis:wait_for_message()
            start_script(sg.glottis_roars, sg, glottis)
        elseif system.currentSet == at then
            glottis:freeze()
        end
        END_CUT_SCENE()
    end
end
sh.remote.lower = function(arg1) -- line 513
    START_CUT_SCENE()
    if system.currentSet == sh and (manny:find_sector_name("bw_up1") or manny:find_sector_name("bw_up2")) then
        END_CUT_SCENE()
        return nil
    else
        start_sfx("bwRmClik.wav")
        start_sfx("bwShock.wav")
        if system.currentSet == at then
            glottis:thaw()
            ForceRefresh()
        end
        glottis.bonewagon_up = FALSE
        stop_script(sg.glottis_roars)
        if zod_set_to_pin then
            preload_sfx("atBWLnd.wav")
            at:current_setup(at_albcu)
            start_sfx("atBWLnd.wav")
        end
        if manny:find_sector_name("bw_up3") then
            start_script(sh.crush_manny)
            END_CUT_SCENE()
            return nil
        end
        glottis:play_chore(bonewagon_gl_down)
        glottis:wait_for_chore()
        arg1.raised = FALSE
        if system.currentSet == sh then
            MakeSectorActive("bw_up1", FALSE)
            MakeSectorActive("bw_up2", FALSE)
            MakeSectorActive("bw_up3", FALSE)
            glottis:wait_for_message()
            glottis:say_line("/shgl005/")
            glottis:wait_for_message()
            start_script(sg.glottis_roars, sg, glottis)
        elseif system.currentSet == at then
            glottis:freeze()
        end
        if zod_set_to_pin then
            start_script(at.solve_puzzle)
        end
    end
    END_CUT_SCENE()
end
sh.remote.use = function(arg1) -- line 562
    if sh.remote.raised then
        sh.remote:lower()
    else
        sh.remote:raise()
    end
end
sh.remote.use_gator = sh.remote.use
sh.remote.use_at_wagon = sh.remote.use
sh.remote.use_glottis_obj = sh.remote.use
sh.glottis_obj.use_remote = sh.remote.use
at.bone_wagon.use_remote = sh.remote.use
sh.storm_drain = Object:create(sh, "/shtx008/storm drain", 0, 0, 0, { range = 0 })
sh.storm_drain.look_out = function(arg1) -- line 625
    manny:say_line("/shma009/")
end
sh.te_ladder = Ladder:create(le, "/shtx010/", 0.51663202, -0.048954699, 0.92000002, { range = 1 })
sh.ladderup_box = sh.te_ladder
sh.ladderdn_box = sh.te_ladder
sh.te_ladder.base.use_pnt_x = 0.60663199
sh.te_ladder.base.use_pnt_y = -0.048954699
sh.te_ladder.base.use_pnt_z = 0
sh.te_ladder.base.use_rot_x = 0
sh.te_ladder.base.use_rot_y = 84
sh.te_ladder.base.use_rot_z = 0
sh.te_ladder.base.out_pnt_x = 0.84414202
sh.te_ladder.base.out_pnt_y = -0.073743597
sh.te_ladder.base.out_pnt_z = 0
sh.te_ladder.base.out_rot_x = 0
sh.te_ladder.base.out_rot_y = 264.01999
sh.te_ladder.base.out_rot_z = 0
sh.te_ladder.top.use_pnt_x = 0.60663199
sh.te_ladder.top.use_pnt_y = -0.048954699
sh.te_ladder.top.use_pnt_z = 2.95
sh.te_ladder.top.use_rot_x = 0
sh.te_ladder.top.use_rot_y = 84
sh.te_ladder.top.use_rot_z = 0
sh.te_ladder.top.out_pnt_x = 0.047309
sh.te_ladder.top.out_pnt_y = -0.106915
sh.te_ladder.top.out_pnt_z = 2.95
sh.te_ladder.top.out_rot_x = 0
sh.te_ladder.top.out_rot_y = 84
sh.te_ladder.top.out_rot_z = 0
sh.te_ladder.touchable = FALSE
sh.te_ladder.base.box = "ladderup_box"
sh.te_ladder.top.box = "ladderdn_box"
sh.te_ladder.minz = 0
sh.te_ladder.maxz = 2.3559999
sh.te_ladder.climbOut = function(arg1, arg2) -- line 674
    if arg2 == arg1.top.box then
        single_start_script(sh.unmount_ladder, sh)
    else
        Ladder.climbOut(arg1, arg2)
    end
end
sh.te_ladder.walkOut = function(arg1, arg2) -- line 682
end
sh.puddle = Object:create(sh, "/shtx012/puddle", 2.4706399, -0.217572, 0, { range = 0.60000002 })
sh.puddle.use_pnt_x = 2.4706399
sh.puddle.use_pnt_y = 0.202428
sh.puddle.use_pnt_z = 0
sh.puddle.use_rot_x = 0
sh.puddle.use_rot_y = 188.48
sh.puddle.use_rot_z = 0
sh.puddle:make_untouchable()
sh.puddle.lookAt = function(arg1) -- line 738
    manny:say_line("/shma013/")
    wait_for_message()
    manny:say_line("/shma014/")
end
sh.puddle.pickUp = function(arg1) -- line 744
    system.default_response("mittens")
end
sh.puddle.use = sh.puddle.pickUp
sh.puddle.use_bone = function(arg1) -- line 750
    soft_script()
    manny:say_line("/shma017/")
    wait_for_message()
    manny:say_line("/shma018/")
end
sh.zw_door = Object:create(sh, "/shtx019/sewer", 3.7567101, 1.7472301, 0.49000001, { range = 0 })
sh.zw_door.use_pnt_x = 3.33671
sh.zw_door.use_pnt_y = 1.26723
sh.zw_door.use_pnt_z = 0
sh.zw_door.use_rot_x = 0
sh.zw_door.use_rot_y = -7242.3599
sh.zw_door.use_rot_z = 0
sh.zw_door.out_pnt_x = 3.66871
sh.zw_door.out_pnt_y = 1.68056
sh.zw_door.out_pnt_z = 0
sh.zw_door.out_rot_x = 0
sh.zw_door.out_rot_y = -7237.9399
sh.zw_door.out_rot_z = 0
sh.zw_box = sh.zw_door
sh.zw_door.walkOut = function(arg1) -- line 778
    zw:come_out_door(zw.sh_door)
    if bowlsley_in_hiding and not zw.talked_bowlsley then
        start_script(zw.talk_bowlsley)
    end
end
sh.lw_door = Object:create(sh, "/shtx020/sewer", 2.0725801, -3.85025, 0.44999999, { range = 1.5 })
sh.lw_door.use_pnt_x = 2.0725801
sh.lw_door.use_pnt_y = -2.7802501
sh.lw_door.use_pnt_z = 0
sh.lw_door.use_rot_x = 0
sh.lw_door.use_rot_y = -7379.2002
sh.lw_door.use_rot_z = 0
sh.lw_door.out_pnt_x = 2.0743799
sh.lw_door.out_pnt_y = -2.9058599
sh.lw_door.out_pnt_z = 0
sh.lw_door.out_rot_x = 0
sh.lw_door.out_rot_y = -7379.2002
sh.lw_door.out_rot_z = 0
sh.lw_door:make_untouchable()
sh.lw_door.walkOut = function(arg1) -- line 804
    lw:come_out_door(lw.sh_door)
end
sh.te_door = Object:create(sh, "/shtx021/corridor", -0.46466601, -0.065484896, 3.48, { range = 0 })
sh.te_door.use_pnt_x = -0.24216101
sh.te_door.use_pnt_y = -0.065622203
sh.te_door.use_pnt_z = 2.95
sh.te_door.use_rot_x = 0
sh.te_door.use_rot_y = 81.121101
sh.te_door.use_rot_z = 0
sh.te_door.out_pnt_x = -0.34338301
sh.te_door.out_pnt_y = -0.129418
sh.te_door.out_pnt_z = 2.95
sh.te_door.out_rot_x = 0
sh.te_door.out_rot_y = 95.169601
sh.te_door.out_rot_z = 0
sh.te_door:make_untouchable()
sh.te_door.walkOut = function(arg1) -- line 826
    te:come_out_door(te.sh_door)
end
bonewagon_gl_no_shocks = 0
bonewagon_gl_shocks = 1
bonewagon_gl_stay_up = 2
bonewagon_gl_turn_rt = 3
bonewagon_gl_hold_rt = 4
bonewagon_gl_rt_to_ctr = 5
bonewagon_gl_hold_ctr = 6
bonewagon_gl_turn_lft = 7
bonewagon_gl_hold_lft = 8
bonewagon_gl_lft_to_ctr = 9
bonewagon_gl_down = 10
bonewagon_gl_ma_jump_in = 11
bonewagon_gl_ma_sit = 12
bonewagon_gl_ma_jump_out = 13
bonewagon_gl_hide_ma = 14
bonewagon_gl_backup = 15
bonewagon_gl_gl_drive = 16
bonewagon_gl_gl_hands_out = 17
bonewagon_gl_gl_2hands_out = 18
bonewagon_gl_gl_cvr_eyes_shocks = 19
bonewagon_gl_gl_cvr_eyes_hold = 20
bonewagon_gl_gl_cvr_eyes_fwd = 21
bonewagon_gl_gl_cvr_eyes_dn = 22
bonewagon_gl_gl_cvr_eyes_bk = 23
bonewagon_gl_gl_cvr_eyes = 24
bonewagon_gl_gl_mumble = 25
bonewagon_gl_c = 26
bonewagon_gl_f = 27
bonewagon_gl_e = 28
bonewagon_gl_u = 29
bonewagon_gl_t = 30
bonewagon_gl_m = 31
bonewagon_gl_a = 32
bonewagon_gl_o = 33
bonewagon_gl_stop_talk = 34
bonewagon_gl_drive = 35
bonewagon_gl_tormbl = 36
bonewagon_gl_rmbl = 37
bonewagon_gl_rmbl2drv = 38
bonewagon_gl_tovrm_lft = 39
bonewagon_gl_vrm_lft_hld = 40
bonewagon_gl_vrm2drv = 41
bonewagon_gl_mck_shft = 42
bonewagon_gl_sc_hook = 43
bonewagon_gl_sc_rmbl = 44
bonewagon_gl_sc2steer = 45
bonewagon_gl_sc_steer = 46
bonewagon_gl_sc2drv = 47
bonewagon_gl_rx2rmbl = 48
bonewagon_gl_rx_rmbl = 49
bonewagon_gl_rx_2steer = 50
bonewagon_gl_rx_steer = 51
bonewagon_gl_rx_hook = 52
bonewagon_gl_rx2drv = 53
bonewagon_gl_wp_mouth = 54
bonewagon_gl_putaway_remote = 55
bonewagon_gl_takeout_remote = 56
bonewagon_gl_hold_remote = 57
bonewagon_gl_hide_bw = 58
bonewagon_gl_gl_stop_hands_out = 59
bonewagon_gl_gl_uncover_eyes = 60
bonewagon_gl_hide_gl = 61
bonewagon_gl_l = 62
bonewagon_alb_no_shocks = 0
bonewagon_alb_shocks = 1
bonewagon_alb_stay_up = 2
bonewagon_alb_turn_rt = 3
bonewagon_alb_hold_rt = 4
bonewagon_alb_rt_to_ctr = 5
bonewagon_alb_hold_ctr = 6
bonewagon_alb_turn_lft = 7
bonewagon_alb_hold_lft = 8
bonewagon_alb_lft_to_ctr = 9
bonewagon_alb_down = 10
bonewagon_alb_ma_jump_in = 11
bonewagon_alb_ma_sit = 12
bonewagon_alb_ma_jump_out = 13
bonewagon_alb_hide_ma = 14
bonewagon_alb_backup = 15
bonewagon_alb_gl_drive = 16
bonewagon_alb_gl_hands_out = 17
bonewagon_alb_gl_2hands_out = 18
bonewagon_alb_gl_cvr_eyes_shocks = 19
bonewagon_alb_gl_cvr_eyes_hold = 20
bonewagon_alb_gl_cvr_eyes_fwd = 21
bonewagon_alb_gl_cvr_eyes_dn = 22
bonewagon_alb_gl_cvr_eyes_bk = 23
bonewagon_alb_gl_cvr_eyes = 24
bonewagon_alb_gl_mumble = 25
bonewagon_alb_c = 26
bonewagon_alb_f = 27
bonewagon_alb_e = 28
bonewagon_alb_u = 29
bonewagon_alb_t = 30
bonewagon_alb_m = 31
bonewagon_alb_a = 32
bonewagon_alb_o = 33
bonewagon_alb_stop_talk = 34
bonewagon_alb_drive = 35
bonewagon_alb_tormbl = 36
bonewagon_alb_rmbl = 37
bonewagon_alb_rmbl2drv = 38
bonewagon_alb_tovrm_lft = 39
bonewagon_alb_vrm_lft_hld = 40
bonewagon_alb_vrm2drv = 41
bonewagon_alb_mck_shft = 42
bonewagon_alb_sc_hook = 43
bonewagon_alb_sc_rmbl = 44
bonewagon_alb_sc2steer = 45
bonewagon_alb_sc_steer = 46
bonewagon_alb_sc2drv = 47
bonewagon_alb_rx2rmbl = 48
bonewagon_alb_rx_rmbl = 49
bonewagon_alb_rx_2steer = 50
bonewagon_alb_rx_steer = 51
bonewagon_alb_rx_hook = 52
bonewagon_alb_rx2drv = 53
bonewagon_alb_wp_mouth = 54
bonewagon_alb_putaway_remote = 55
bonewagon_alb_takeout_remote = 56
bonewagon_alb_hold_remote = 57
bonewagon_cc_no_shocks = 0
bonewagon_cc_shocks = 1
bonewagon_cc_stay_up = 2
bonewagon_cc_turn_rt = 3
bonewagon_cc_hold_rt = 4
bonewagon_cc_rt_to_ctr = 5
bonewagon_cc_hold_ctr = 6
bonewagon_cc_turn_lft = 7
bonewagon_cc_hold_lft = 8
bonewagon_cc_lft_to_ctr = 9
bonewagon_cc_down = 10
bonewagon_cc_ma_jump_in = 11
bonewagon_cc_ma_sit = 12
bonewagon_cc_ma_jump_out = 13
bonewagon_cc_hide_ma = 14
bonewagon_cc_backup = 15
bonewagon_cc_gl_drive = 16
bonewagon_cc_gl_hands_out = 17
bonewagon_cc_gl_2hands_out = 18
bonewagon_cc_gl_cvr_eyes_shocks = 19
bonewagon_cc_gl_cvr_eyes_hold = 20
bonewagon_cc_gl_cvr_eyes_fwd = 21
bonewagon_cc_gl_cvr_eyes_dn = 22
bonewagon_cc_gl_cvr_eyes_bk = 23
bonewagon_cc_gl_cvr_eyes = 24
bonewagon_cc_gl_mumble = 25
bonewagon_cc_c = 26
bonewagon_cc_f = 27
bonewagon_cc_e = 28
bonewagon_cc_u = 29
bonewagon_cc_t = 30
bonewagon_cc_m = 31
bonewagon_cc_a = 32
bonewagon_cc_o = 33
bonewagon_cc_stop_talk = 34
bonewagon_cc_drive = 35
bonewagon_cc_tormbl = 36
bonewagon_cc_rmbl = 37
bonewagon_cc_rmbl2drv = 38
bonewagon_cc_tovrm_lft = 39
bonewagon_cc_vrm_lft_hld = 40
bonewagon_cc_vrm2drv = 41
bonewagon_cc_mck_shft = 42
bonewagon_cc_sc_hook = 43
bonewagon_cc_sc_rmbl = 44
bonewagon_cc_sc2steer = 45
bonewagon_cc_sc_steer = 46
bonewagon_cc_sc2drv = 47
bonewagon_cc_rx2rmbl = 48
bonewagon_cc_rx_rmbl = 49
bonewagon_cc_rx_2steer = 50
bonewagon_cc_rx_steer = 51
bonewagon_cc_rx_hook = 52
bonewagon_cc_rx2drv = 53
bonewagon_cc_wp_mouth = 54
bonewagon_cc_putaway_remote = 55
bonewagon_cc_takeout_remote = 56
bonewagon_cc_hold_remote = 57
bonewagon_cc_gl_stop_hands_out = 58
bonewagon_cc_gl_uncover_eyes = 59
bonewagon_thunder_no_shocks = 0
bonewagon_thunder_shocks = 1
bonewagon_thunder_stay_up = 2
bonewagon_thunder_turn_rt = 3
bonewagon_thunder_hold_rt = 4
bonewagon_thunder_rt_to_ctr = 5
bonewagon_thunder_hold_ctr = 6
bonewagon_thunder_turn_lft = 7
bonewagon_thunder_hold_lft = 8
bonewagon_thunder_lft_to_ctr = 9
bonewagon_thunder_down = 10
bonewagon_thunder_ma_jump_in = 11
bonewagon_thunder_ma_sit = 12
bonewagon_thunder_ma_jump_out = 13
bonewagon_thunder_hide_ma = 14
bonewagon_thunder_backup = 15
bonewagon_thunder_gl_drive = 16
bonewagon_thunder_gl_hands_out = 17
bonewagon_thunder_gl_2hands_out = 18
bonewagon_thunder_gl_cvr_eyes_shocks = 19
bonewagon_thunder_gl_cvr_eyes_hold = 20
bonewagon_thunder_gl_cvr_eyes_fwd = 21
bonewagon_thunder_gl_cvr_eyes_dn = 22
bonewagon_thunder_gl_cvr_eyes_bk = 23
bonewagon_thunder_gl_cvr_eyes = 24
bonewagon_thunder_gl_mumble = 25
bonewagon_thunder_c = 26
bonewagon_thunder_f = 27
bonewagon_thunder_e = 28
bonewagon_thunder_u = 29
bonewagon_thunder_t = 30
bonewagon_thunder_m = 31
bonewagon_thunder_a = 32
bonewagon_thunder_o = 33
bonewagon_thunder_stop_talk = 34
bonewagon_thunder_drive = 35
bonewagon_thunder_tormbl = 36
bonewagon_thunder_rmbl = 37
bonewagon_thunder_rmbl2drv = 38
bonewagon_thunder_tovrm_lft = 39
bonewagon_thunder_vrm_lft_hld = 40
bonewagon_thunder_vrm2drv = 41
bonewagon_thunder_mck_shft = 42
bonewagon_thunder_sc_hook = 43
bonewagon_thunder_sc_rmbl = 44
bonewagon_thunder_sc2steer = 45
bonewagon_thunder_sc_steer = 46
bonewagon_thunder_sc2drv = 47
bonewagon_thunder_rx2rmbl = 48
bonewagon_thunder_rx_rmbl = 49
bonewagon_thunder_rx_2steer = 50
bonewagon_thunder_rx_steer = 51
bonewagon_thunder_rx_hook = 52
bonewagon_thunder_rx2drv = 53
bonewagon_thunder_wp_mouth = 54
bonewagon_thunder_putaway_remote = 55
bonewagon_thunder_takeout_remote = 56
bonewagon_thunder_hold_remote = 57
bonewagon_thunder_gl_stop_hands_out = 58
bonewagon_thunder_gl_uncover_eyes = 59
CheckFirstTime("shootout.lua")
dofile("me_windows.lua")
me.test_shootout = function() -- line 17
    manny.healed = TRUE
    me:switch_to_set()
    me:current_setup(me_shtgh)
    manny:setpos(3.39682, -2.08289, -0.119392)
    manny:setrot(0, 40.7742, 0)
    me.gun:hold()
    me.setup_shootout()
    preload_sfx("me_glas1.WAV")
    preload_sfx("me_glas2.WAV")
    preload_sfx("me_glas3.WAV")
    preload_sfx("me_gun.WAV")
    preload_sfx("hecgun.WAV")
end
me.glass_sounds = { "me_glas1.WAV", "me_glas2.WAV", "me_glas3.WAV" }
me.smash_all = function() -- line 37
    local local1
    local1 = 1
    repeat
        me.greenhouse:play_chore(local1)
        local1 = local1 + 1
    until local1 == 39
end
me.print_window_angles = function() -- line 46
    local local1
    while 1 do
        if me:current_setup() == me_shtgh then
            local1 = "<" .. tostring(floor(GetAngleBetweenActors(manny.hActor, me.greenhouse.columns[1].act.hActor)))
            me.greenhouse.columns[1].act:say_line(local1)
            local1 = "<" .. tostring(floor(GetAngleBetweenActors(manny.hActor, me.greenhouse.columns[2].act.hActor)))
            me.greenhouse.columns[2].act:say_line(local1)
            local1 = "<" .. tostring(floor(GetAngleBetweenActors(manny.hActor, me.greenhouse.columns[3].act.hActor)))
            me.greenhouse.columns[3].act:say_line(local1)
            local1 = "<" .. tostring(floor(GetAngleBetweenActors(manny.hActor, me.greenhouse.columns[4].act.hActor)))
            me.greenhouse.columns[4].act:say_line(local1)
            local1 = "<" .. tostring(floor(GetAngleBetweenActors(manny.hActor, me.greenhouse.columns[5].act.hActor)))
            me.greenhouse.columns[5].act:say_line(local1)
            local1 = "<" .. tostring(floor(GetAngleBetweenActors(manny.hActor, me.greenhouse.columns[6].act.hActor)))
            me.greenhouse.columns[6].act:say_line(local1)
            local1 = "<" .. tostring(floor(GetAngleBetweenActors(manny.hActor, me.greenhouse.columns[7].act.hActor)))
            me.greenhouse.columns[7].act:say_line(local1)
        end
        break_here()
    end
end
me.setup_window_objects = function() -- line 69
    local local1 = 1
    me.greenhouse.tObjectStates = { }
    repeat
        me.greenhouse.tObjectStates[1] = me:add_object_state(me_shtgh, "me_" .. tostring(local1) .. ".bm", "me_" .. tostring(local1) .. ".zbm", OBJSTATE_STATE, TRUE)
        local1 = local1 + 1
    until local1 == 40
    me.greenhouse:set_object_state("me_windows.cos")
end
me.place_window_actor = function(arg1, arg2, arg3, arg4) -- line 80
    me.greenhouse.columns[arg1].act:set_costume("x_spot.cos")
    me.greenhouse.columns[arg1].act:set_visibility(FALSE)
    me.greenhouse.columns[arg1].act:put_in_set(me)
    me.greenhouse.columns[arg1].act:setpos(arg2, arg3, arg4)
end
me.setup_window_actors = function() -- line 87
    me.greenhouse.columns = { }
    me.greenhouse.columns[1] = { act = Actor:create(nil, nil, nil, "column 1") }
    me.greenhouse.columns[2] = { act = Actor:create(nil, nil, nil, "column 2") }
    me.greenhouse.columns[3] = { act = Actor:create(nil, nil, nil, "column 3") }
    me.greenhouse.columns[4] = { act = Actor:create(nil, nil, nil, "column 4") }
    me.greenhouse.columns[5] = { act = Actor:create(nil, nil, nil, "column 5") }
    me.greenhouse.columns[6] = { act = Actor:create(nil, nil, nil, "column 6") }
    me.greenhouse.columns[7] = { act = Actor:create(nil, nil, nil, "column 7") }
    me.place_window_actor(1, 2.19182, -1.51689, 0.0256077)
    me.place_window_actor(2, 2.42582, -1.39088, 0.0276077)
    me.place_window_actor(3, 2.61582, -1.23388, 0.00360769)
    me.place_window_actor(4, 2.82582, -1.00488, 0.0136077)
    me.place_window_actor(5, 2.97882, -0.759885, -0.0153923)
    me.place_window_actor(6, 3.07282, -0.478885, 0.0546078)
    me.place_window_actor(7, 3.12282, -0.179885, 0.0286078)
    me.greenhouse.columns[1].objs = { "me_windows_33", "me_windows_26", "me_windows_19", "me_windows_12", "me_windows_5" }
    me.greenhouse.columns[2].objs = { "me_windows_34", "me_windows_27", "me_windows_20", "me_windows_13", "me_windows_6" }
    me.greenhouse.columns[3].objs = { "me_windows_35", "me_windows_28", "me_windows_21", "me_windows_14", "me_windows_7" }
    me.greenhouse.columns[4].objs = { "me_windows_36", "me_windows_29", "me_windows_22", "me_windows_15", "me_windows_8", "me_windows_1" }
    me.greenhouse.columns[5].objs = { "me_windows_37", "me_windows_30", "me_windows_23", "me_windows_16", "me_windows_9", "me_windows_2" }
    me.greenhouse.columns[6].objs = { "me_windows_38", "me_windows_31", "me_windows_24", "me_windows_17", "me_windows_10", "me_windows_3" }
    me.greenhouse.columns[7].objs = { "me_windows_39", "me_windows_32", "me_windows_25", "me_windows_18", "me_windows_11", "me_windows_4" }
end
me.setup_shootout = function() -- line 116
    if not me.greenhouse.columns then
        me.setup_window_actors()
    end
    if not me.greenhouse.tObjectStates then
        me.setup_window_objects()
    end
    if manny:get_costume() ~= "md_shooting.cos" then
        manny:push_costume("md_shooting.cos")
    end
    me.darts.hObjectState = me:add_object_state(me_pmpws, "me_darts.bm", nil, OBJSTATE_STATE, FALSE)
    me.darts:set_object_state("me_darts.cos")
    me.shootout_count = 0
    me.window_broken_flag = { }
end
test = function() -- line 133
    local local1
    while 1 do
        local1 = GetAngleBetweenActors(hector.hActor, manny.hActor)
        ExpireText()
        print_temporary(local1)
        break_here()
    end
end
me.check_for_hit = function() -- line 143
    local local1, local2, local3, local4
    local3 = 999
    local4 = nil
    local1 = 1
    repeat
        local2 = GetAngleBetweenActors(manny.hActor, me.greenhouse.columns[local1].act.hActor)
        if local2 < local3 then
            local4 = local1
            local3 = local2
        end
        local1 = local1 + 1
    until local1 > 7
    if local3 < 45 then
        return local4
    else
        return nil
    end
end
me.smash_window_in_column = function(arg1) -- line 166
    local local1, local2
    local1 = pick_one_of(me.greenhouse.columns[arg1].objs, TRUE)
    local2 = getglobal(local1)
    if local2 then
        start_sfx(pick_one_of(me.glass_sounds, TRUE))
        if not me.window_broken_flag[local2] then
            me.window_broken_flag[local2] = TRUE
            sleep_for(200)
            me.greenhouse:play_chore(local2)
        end
    end
end
me.shootout = function() -- line 181
    local local1
    START_CUT_SCENE()
    me.shootout_begun = TRUE
    me:current_setup(me_shtgh)
    music_state:update()
    local1 = me.check_for_hit()
    start_script(me.manny_shoot)
    sleep_for(500)
    END_CUT_SCENE()
    if local1 then
        me.smash_window_in_column(local1)
        music_state:set_state(stateSHOOT)
        stop_script(me.hector_reaction)
        if not hector.dying then
            start_script(me.hector_reaction)
        end
    end
end
me.manny_shoot = function() -- line 211
    START_CUT_SCENE()
    if manny:get_costume() ~= "md_shooting.cos" then
        manny:push_costume("md_shooting.cos")
    end
    manny:set_rest_chore(nil)
    manny:stop_chore(md_hold, "md.cos")
    manny:play_chore(md_shooting_quick_shot, "md_shooting.cos")
    sleep_for(200)
    start_sfx("me_gun.WAV")
    manny:wait_for_chore(md_shooting_quick_shot, "md_shooting.cos")
    manny:stop_chore(md_shooting_quick_shot, "md_shooting.cos")
    manny:play_chore_looping(md_hold, "md.cos")
    manny:set_rest_chore(md_rest, "md.cos")
    END_CUT_SCENE()
end
manny.run_for_cover = function(arg1) -- line 228
    manny:head_look_at(nil)
    manny:face_entity(3.97991, -1.30607, -0.211625)
    start_script(manny.runto, manny, 3.97991, -1.30607, -0.211625, 0, 72.9266, 0)
    manny:wait_for_actor()
end
manny.duck = function(arg1) -- line 235
    if manny:get_costume() ~= "md_shooting.cos" then
        manny:push_costume("md_shooting.cos")
    end
    manny:set_rest_chore(nil)
    manny:run_chore(md_shooting_duck, "md_shooting.cos")
    manny:stop_chore(md_shooting_duck, "md_shooting.cos")
    manny:set_rest_chore(md_rest, "md.cos")
end
manny.unduck = function(arg1) -- line 245
    manny:fade_out_chore(md_shooting_duck, "md_shooting.cos")
end
hector.run_med_left = function(arg1) -- line 256
    PrintDebug("run_med_left\n")
    hector:walkto(1.68938, -0.43049, 0.27, 0, 211.451, 0)
end
hector.run_right = function(arg1) -- line 260
    PrintDebug("run_right\n")
    hector:walkto(1.42082, 0.93111, 0.27, 0, 316.471, 0)
end
hector.run_back = function(arg1) -- line 264
    PrintDebug("run_back\n")
    hector:walkto(-0.0751248, 1.21843, 0.27, 0, 28.6596, 0)
end
hector.run_left = function(arg1) -- line 268
    PrintDebug("run_left\n")
    hector:walkto(1.42082, -0.63989, 0.27, 0, 187.198, 0)
end
hector.run_front = function(arg1) -- line 272
    PrintDebug("run_front\n")
    hector:walkto(1.84638, -0.00248966, 0.266058, 0, 245, 0)
end
hector.run_way_back = function(arg1) -- line 277
    PrintDebug("run_way_back\n")
    hector:walkto(-0.63262, 0.0755099, 0.27, 0, 73.0735, 0)
end
hector.dodges = { hector.run_med_left, hector.run_right, hector.run_back, hector.run_left, hector.run_front, hector.run_way_back }
hector.run_around_nervously = function() -- line 284
    local local1
    stop_script(hector.part_1_idle)
    hector:complete_chore(he_greenhouse_show_gun, "he_greenhouse.cos")
    if not hector.crouching then
        hector:crouch()
    end
    while not hector.dying do
        local1 = pick_one_of(hector.dodges, TRUE)
        local1()
        hector:wait_for_actor()
        sleep_for(1000)
        hector:look_around()
        if rnd(2) then
            hector:uncrouch()
            hector:look_around()
            hector:crouch()
            hector:look_around()
        end
    end
end
hector.crouch = function(arg1) -- line 306
    stop_script(hector.part_1_idle)
    if not hector.crouching then
        hector.crouching = TRUE
        hector:run_chore(he_greenhouse_aim_to_crouch, "he_greenhouse.cos")
    end
    hector:complete_chore(he_greenhouse_crouch, "he_greenhouse.cos")
end
hector.uncrouch = function(arg1) -- line 315
    hector.crouching = FALSE
    hector:run_chore(he_greenhouse_crouch_to_aim, "he_greenhouse.cos")
end
hector.run_to_window = function(arg1, arg2, arg3) -- line 320
    local local1
    stop_script(hector.part_1_idle)
    stop_script(hector.run_around_nervously)
    stop_script(hector.look_around)
    hector:head_look_at(nil)
    if arg3 then
        hector:setpos(-2.6502399, 0.65807903, 0.266058)
        hector:setrot(0, 72.3787, 0)
    end
    stop_script(hector.part_1_idle)
    hector:complete_chore(he_greenhouse_show_gun, "he_greenhouse.cos")
    start_script(hector.walkto, hector, 1.84638, -0.0024896599, 0.266058)
    hector:wait_for_actor()
    hector:head_look_at(nil)
    hector:play_chore(he_greenhouse_run_to_cruch, "he_greenhouse.cos")
    hector:wait_for_chore(he_greenhouse_run_to_cruch, "he_greenhouse.cos")
    if arg2 then
        hector:look_around()
    end
end
hector.shoot = function(arg1) -- line 349
    hector:head_look_at(nil)
    hector:complete_chore(he_greenhouse_show_gun, "he_greenhouse.cos")
    hector:wait_for_actor()
    if hector.crouching then
        hector:uncrouch()
    end
    hector:play_chore(he_greenhouse_shoot_once, "he_greenhouse.cos")
    start_sfx("hecgun.WAV")
    hector:wait_for_chore(he_greenhouse_shoot_once, "he_greenhouse.cos")
    hector:run_chore(he_greenhouse_shoot_to_aim, "he_greenhouse.cos")
end
hector.get_look_point = function(arg1, arg2) -- line 362
    local local1 = { x = 0, y = 1, z = 0 }
    local local2 = arg1:get_positive_rot()
    local local3 = arg1:getpos()
    local local4
    if arg1.crouching then
        local4 = 0.5
    else
        local4 = 0.80000001
    end
    local1 = RotateVector(local1, { x = 0, y = local2.y, z = 0 })
    lookvec = RotateVector(local1, { x = 0, y = arg2, z = 0 })
    newpoint = { x = local3.x + lookvec.x, y = local3.y + lookvec.y, z = local3.z + local4 }
    return newpoint
end
hector.look_around = function(arg1) -- line 380
    local local1
    local1 = hector:get_look_point(35)
    hector:head_look_at_point(local1, 200)
    sleep_for(1000)
    local1 = hector:get_look_point(-35)
    hector:head_look_at_point(local1, 190)
    sleep_for(1500)
    local1 = hector:get_look_point(35)
    hector:head_look_at_point(local1, 180)
    sleep_for(1000)
    hector:head_look_at(nil, 250)
end
hector.random_taunts = { "/mehe027/", "/mehe028/", "/mehe029/", "/mehe031/", "/mehe034/", "/mehe035/", "/mehe038/" }
hector.face_mannys_voice = function() -- line 409
    local local1
    hector:wait_for_actor()
    while not (IsMessageGoing() and system.lastActorTalking == manny) do
        break_here()
    end
    sleep_for(1000)
    local1 = manny:getpos()
    hector:turn_toward_entity(local1.x, local1.y, local1.z)
end
me.hector_reaction = function() -- line 420
    local local1
    START_CUT_SCENE()
    me.shootout_count = me.shootout_count + 1
    stop_script(hector.part_1_idle)
    stop_script(hector.run_around_nervously)
    stop_script(hector.look_around)
    stop_script(hector.walkto)
    hector:head_look_at(nil)
    if not hector.crouching then
        hector:crouch()
    end
    start_script(hector.run_to_window, hector, TRUE)
    sleep_for(1000)
    start_script(hector.face_mannys_voice)
    hector:wait_for_actor()
    if me.shootout_count == 1 then
        hector:say_line("/mehe016/")
        wait_for_message()
        hector:say_line("/mehe017/")
        wait_for_message()
        manny:say_line("/mema018/")
        wait_for_message()
        manny:say_line("/mema019/")
        manny:wait_for_message()
        hector:say_line("/mehe030/")
    elseif me.shootout_count == 5 then
        manny:say_line("/mema020/")
        manny:wait_for_message()
        hector:say_line("/mehe038/")
    elseif me.shootout_count == 10 then
        manny:say_line("/mema021/")
        wait_for_message()
        manny:say_line("/mema022/")
        manny:wait_for_message()
        hector:say_line("/mehe027/")
        hector:wait_for_message()
        hector:say_line("/mehe036/")
        hector:wait_for_message()
        hector:say_line("/mehe037/")
    elseif me.shootout_count == 15 then
        manny:say_line("/mema023/")
        manny:wait_for_message()
        hector:say_line("/mehe032/")
    elseif me.shootout_count == 20 then
        manny:say_line("/mema024/")
        manny:wait_for_message()
        hector:say_line("/mehe033/")
    elseif me.shootout_count == 25 then
        manny:say_line("/mema025/")
        wait_for_message()
        hector:say_line("/mehe026/")
    else
        hector:say_line(pick_one_of(hector.random_taunts, TRUE))
    end
    manny:wait_for_message()
    hector:wait_for_message()
    hector:wait_for_actor()
    stop_script(hector.run_to_window)
    if find_script(hector.face_mannys_voice) then
        stop_script(hector.face_mannys_voice)
        hector:setrot(0, 220, 0, TRUE)
    end
    hector:wait_for_actor()
    hecrot = hector:get_positive_rot()
    if hecrot.y < 230 then
        hecwin = me_windows_15
    elseif hecrot.y < 262 then
        hecwin = me_windows_16
    else
        hecwin = me_windows_17
    end
    local1 = GetAngleBetweenActors(hector.hActor, manny.hActor)
    if local1 < 20 then
        start_script(manny.run_for_cover, manny)
    end
    stop_script(hector.look_around)
    hector:head_look_at(nil, 999)
    start_script(hector.shoot)
    sleep_for(750)
    start_sfx(pick_one_of(me.glass_sounds, TRUE))
    if not me.window_broken_flag[hecwin] then
        me.window_broken_flag[hecwin] = TRUE
        sleep_for(100)
        me.greenhouse:play_chore(hecwin)
    end
    wait_for_script(manny.run_for_cover)
    if local1 < 20 then
        if find_script(hector.shoot) then
            manny:duck()
            wait_for_script(hector.shoot)
            manny:unduck()
        end
    end
    END_CUT_SCENE()
    start_script(hector.run_around_nervously)
end
si_cabinet_open = 0
si_cabinet_close = 1
si_drawer_open = 0
si_drawer_close = 1
signpost_show = 0
signpost_hide = 1
signpost_show_lit = 2
CheckFirstTime("si.lua")
si = Set:create("si.set", "Scrimshaw Interior", { si_ladms = 0, si_ladms2 = 0, si_frgms = 1, overhead = 2 })
si.naranja_out = FALSE
si.drill_slow_count = 0
si.gossip_count = 0
dofile("naranja.lua")
dofile("toto.lua")
dofile("mc_in_si.lua")
dofile("frg_door.lua")
dofile("toto_phone.lua")
dofile("toto_photo.lua")
drill_slows = 0
yell_to_drill = 1
drill_loop = 2
head_turn = 3
head_hold = 4
hdhold_to_drill = 5
stop_chktt = 6
chktt_close = 7
chktt_away = 8
chktt_pause = 9
chktt_to_drill = 10
look_fridge = 11
look_to_drill = 12
toto.drilling_chore = nil
DRILL_NORMAL = 0
DRILL_LOADED = 1
DRILL_STOPPED = 2
si.drill_state = nil
si.drill_loop_vol = 80
si.gen_loop_vol = 25
si.refrig_loop_vol = 80
si.takeout_scythe = function() -- line 48
    local local1 = manny:getpos()
    if in_year_four then
        system.default_response("shed light")
    else
        START_CUT_SCENE("no head")
        manny:stop_takeout_chores()
        manny:play_chore(mc_takeout_empty, "mc.cos")
        manny:wait_for_chore(mc_takeout_empty, "mc.cos")
        manny:stop_chore(mc_takeout_empty, "mc.cos")
        si:current_setup(si_ladms)
        if local1.y <= -0.68000001 then
            manny:walkto(-0.10347, -1.55514, 0, 0, -13, 0)
        elseif not si.naranja_out then
            manny:walkto(0.052437998, -0.520679, 0, 0, 230.293, 0)
        else
            toto:set_collision_mode(COLLISION_OFF)
            manny:walkto(0.052437998, -0.520679, 0, 0, -238.293, 0)
        end
        manny:push_costume("mc_scythe.cos")
        manny:play_chore(ma_scythe_takeout_scythe)
        manny:wait_for_chore(ma_scythe_takeout_scythe)
        manny:pop_costume()
        manny:play_chore_looping(ms_hold_scythe, manny.base_costume)
        toto:say_line("/sito071/")
        toto:wait_for_message()
        manny:stop_chore(ms_hold_scythe, manny.base_costume)
        manny:push_costume("mc_scythe.cos")
        manny:play_chore(ma_scythe_putaway_scythe)
        manny:wait_for_chore(ma_scythe_putaway_scythe)
        manny:pop_costume()
        if si.naranja_out then
            toto:set_collision_mode(COLLISION_SPHERE)
            SetActorCollisionScale(toto.hActor, 0.30000001)
            manny:set_collision_mode(COLLISION_SPHERE)
            SetActorCollisionScale(manny.hActor, 0.34999999)
        end
        END_CUT_SCENE()
    end
end
si.watch_totos_head = function() -- line 92
    while system.currentSet == si do
        stop_script(manny.head_follow_mesh)
        repeat
            break_here()
        until hot_object == si.toto_obj
        start_script(manny.head_follow_mesh, manny, toto, 7)
        repeat
            break_here()
        until hot_object ~= si.toto_obj
    end
end
si.drilling_sfx = function() -- line 105
    local local1 = si.drill_state
    while 1 do
        if si.drill_state == DRILL_NORMAL then
            single_start_sfx("siDrNlOn.wav")
            sleep_for(750)
            single_start_sfx("siDrNlLp.imu", nil, 0)
            fade_sfx("siDrNlLp.imu", 250, si.drill_loop_vol)
        elseif si.drill_state == DRILL_LOADED then
            single_start_sfx("siDrLdOn.wav")
            fade_sfx("siDrNlLp.imu", 300, 0)
            sleep_for(2000)
            single_start_sfx("siDrLdLp.imu", nil, 0)
            fade_sfx("siDrLdLp.imu", 400, si.drill_loop_vol)
        elseif si.drill_state == DRILL_STOPPED then
            if local1 == DRILL_NORMAL then
                single_start_sfx("siDrNlOf.wav")
                fade_sfx("siDrNlLp.imu", 250, 0)
            else
                single_start_sfx("siDrLdOf.wav")
                fade_sfx("siDrLdLp.imu", 250, 0)
            end
        end
        local1 = si.drill_state
        while si.drill_state == local1 do
            break_here()
        end
        PrintDebug("drill state change")
    end
end
si.toto_controller = function() -- line 144
    local local1
    local local2
    local local3
    while not si.motor_running and si.naranja_out == FALSE do
        if find_script(si.booze.use_turkey_baster) == FALSE then
            if rnd() then
                si.drill_state = DRILL_NORMAL
                local1 = rndint(3, 5)
                if rnd(7) and not naranja:is_choring(naranja_look_up) and not naranja:is_choring(naranja_look_around) then
                    if rnd() then
                        naranja:play_chore(naranja_look_around)
                    else
                        naranja:play_chore(naranja_look_up)
                    end
                end
                repeat
                    if not naranja:is_choring(naranja_arm_drilled) then
                        naranja:play_chore_looping(naranja_arm_drilled)
                        naranja:stop_chore(naranja_arm_no_drill)
                    end
                    toto:play_chore(toto_drill_loop)
                    toto:wait_for_chore(toto_drill_loop)
                    if si.motor_running then
                        local1 = 0
                    else
                        local1 = local1 - 1
                    end
                until local1 <= 0
                naranja:wait_for_chore(naranja_look_up)
                naranja:wait_for_chore(naranja_look_around)
                naranja:play_chore(naranja_watch_toto)
                local2 = FALSE
            elseif not local2 then
                si.drill_state = DRILL_STOPPED
                naranja:stop_chore(naranja_arm_drilled)
                naranja:play_chore_looping(naranja_arm_no_drill)
                if not cut_scene_level then
                    local3 = start_script(si.naranja_drink)
                end
                toto:play_chore(stop_chktt)
                toto:wait_for_chore(stop_chktt)
                if not si.motor_running then
                    toto:play_chore(chktt_close)
                    toto:wait_for_chore(chktt_close)
                    local1 = rnd(1.5, 3)
                    repeat
                        sleep_for(1000)
                        if si.motor_running then
                            local1 = 0
                        else
                            local1 = local1 - 1
                        end
                        break_here()
                    until local1 <= 0
                    wait_for_script(local3)
                    toto:play_chore(chktt_away)
                    toto:wait_for_chore(chktt_away)
                end
                toto:play_chore(chktt_to_drill)
                toto:wait_for_chore(chktt_to_drill)
                local2 = TRUE
            end
        else
            break_here()
        end
    end
    if si.naranja_out then
        if cutSceneLevel < 1 then
            START_CUT_SCENE()
        end
        manny:head_follow_mesh(toto, 6, TRUE)
        start_script(manny.walkto, manny, si.toto_obj)
        music_state:set_state(stateSI_SLEEP)
        start_script(si.passout_lines1)
        si:current_setup(si_ladms)
        naranja:play_chore(naranja_passout)
        toto:stop_chore(toto_yell_to_drill)
        si.drill_state = DRILL_STOPPED
        toto:play_chore(toto_na_pso)
        naranja:wait_for_chore(naranja_passout)
        toto:wait_for_chore(toto_na_pso)
        stop_script(si.drilling_sfx)
        wait_for_script(si.passout_lines1)
        si:current_setup(si_frgms)
        END_CUT_SCENE()
        stop_script(manny.head_follow_mesh)
        manny:head_look_at(nil, 360)
        manny:default("cafe")
        start_script(cut_scene.passout)
    end
end
si.passout_lines1 = function() -- line 244
    toto:say_line("/psots01a/")
    toto:wait_for_message()
    toto:say_line("/psots01b/")
    toto:wait_for_message()
    toto:say_line("/psots02a/")
    toto:wait_for_message()
    toto:say_line("/psots02b/")
    toto:wait_for_message()
    toto:say_line("/psots03a/")
    toto:wait_for_message()
    toto:say_line("/psots03b/")
    toto:wait_for_message()
    toto:say_line("/psots03c/")
    toto:wait_for_message()
end
si.toto_talk_to_velasco = function() -- line 263
    START_CUT_SCENE()
    si.overheard_passout = TRUE
    toto:say_line("/psots05a/")
    toto:wait_for_message()
    si:current_setup(si_ladms)
    toto:say_line("/psots05b/")
    toto:wait_for_message()
    sleep_for(1000)
    toto:say_line("/psots06a/")
    toto:head_look_at(si.naranja_obj)
    toto:wait_for_message()
    toto:head_look_at(nil)
    toto:say_line("/psots06b/")
    toto:wait_for_message()
    toto:say_line("/psots06c/")
    toto:wait_for_message()
    toto:say_line("/psots06d/")
    toto:wait_for_message()
    toto:head_look_at(nil)
    manny:head_look_at(nil)
    manny:stop_chore()
    si:force_camerachange()
    END_CUT_SCENE()
end
si.naranja_drink = function(arg1) -- line 289
    if not manny:find_sector_name("bottle") then
        MakeSectorActive("bottle", FALSE)
        MakeSectorActive("bottle1", FALSE)
        if arg1 then
            si.naranja_pain = TRUE
            naranja:stop_chore(naranja_arm_drilled)
            naranja:play_chore_looping(naranja_arm_no_drill)
            naranja:play_chore(naranja_pain_to_drink)
            naranja:wait_for_chore()
            si.booze_actor:play_chore(1)
            si.booze:make_untouchable()
            naranja:play_chore(naranja_pain_drink)
            naranja:wait_for_chore()
            naranja:play_chore()
            si.booze_actor:play_chore(0)
            si.booze:make_touchable()
            naranja:play_chore(naranja_from_pain_drink)
            naranja:wait_for_chore()
            si.naranja_pain = FALSE
        else
            naranja:play_chore(naranja_to_grab_bz)
            naranja:wait_for_chore()
            si.booze_actor:play_chore(1)
            si.booze:make_untouchable()
            naranja:play_chore(naranja_got_booze)
            naranja:wait_for_chore()
            naranja:play_chore(naranja_drink_booze)
            naranja:wait_for_chore()
            naranja:play_chore(naranja_stop_drink)
            naranja:wait_for_chore()
            si.booze_actor:play_chore(0)
            si.booze:make_touchable()
            naranja:play_chore(naranja_bz_down)
            naranja:wait_for_chore()
            if si.booze.dosed then
                si.naranja_out = TRUE
                si.lettuce_crisper:make_untouchable()
            end
        end
        MakeSectorActive("bottle", TRUE)
        MakeSectorActive("bottle1", TRUE)
    end
end
toto.one_snore = function() -- line 337
    toto:say_line(pick_one_of({ "/sito008/", "/sito009/", "/sito010/" }), { background = TRUE, volume = 75, skip_log = TRUE })
end
toto.one_mumble = function() -- line 341
    local local1 = { "/sito012/", "/sito013/", "/sito014/", "/sito015/", "/sito016/", "/sito017/", "/sito018/", "/sito019/", "/sito020/", "/sito021/", "/sito022/" }
    if tims_changes_his_mind then
        toto:say_line("/sito011/")
    else
        toto:say_line(pick_one_of(local1), { background = TRUE, volume = 127, skip_log = TRUE })
    end
end
si.toto_snoring = function() -- line 352
    toto:set_speech_mode(MODE_BACKGROUND)
    while 1 do
        toto.one_snore()
        toto:wait_for_message()
        sleep_for(500)
        toto.one_snore()
        toto:wait_for_message()
        sleep_for(500)
        toto.one_snore()
        toto:wait_for_message()
        sleep_for(1000)
        toto:one_mumble()
        toto:wait_for_message()
        sleep_for(1000)
    end
end
si.get_photofinish = function() -- line 370
    START_CUT_SCENE()
    cur_puzzle_state[31] = TRUE
    toto:set_collision_mode(COLLISION_OFF)
    manny:walkto_object(si.toto_obj)
    toto:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(toto.hActor, 0.3)
    stop_script(si.toto_on_phone)
    toto:say_line("/sito003/")
    toto:wait_for_message()
    toto:head_look_at_manny()
    manny:say_line("/sima023/")
    manny:wait_for_message()
    toto:say_line("/sito024/")
    put_away_held_item()
    toto:wait_for_message()
    toto:say_line("/sito025/")
    toto:wait_for_message()
    toto:head_look_at(nil)
    toto:play_chore(toto_phone_hang_up)
    toto:wait_for_chore()
    si.phone_actor:setpos(-0.418431, -0.630621, 0.495)
    si.phone_actor:setrot(180, 0, 0)
    si.phone_actor:put_in_set(si)
    si.phone_actor:play_chore(0)
    toto:push_costume("toto_photo.cos")
    toto:stop_chore(toto_phone_hang_up, "toto_phone.cos")
    toto:play_chore(toto_photo_open_binder)
    sleep_for(1139)
    binder:setpos(0, 0, 100)
    toto:wait_for_chore()
    toto:say_line("/sito026a/")
    toto:wait_for_message()
    toto:say_line("/sito026b/")
    sleep_for(6500)
    toto:stop_chore(toto_photo_open_binder)
    toto:play_chore(toto_photo_give_photo)
    toto:wait_for_message()
    toto:wait_for_chore()
    manny:say_line("/sima027/")
    manny:wait_for_message()
    toto:say_line("/sito028a/")
    toto:wait_for_message()
    toto:say_line("/sito028b/")
    toto:wait_for_message()
    toto:say_line("/sito028c/")
    manny:play_chore(mc_hand_on_obj, manny.base_costume)
    manny:wait_for_chore()
    toto:stop_chore(toto_photo_give_photo)
    toto:play_chore(toto_photo_done_giving)
    manny:play_chore(mc_hand_off_obj, manny.base_costume)
    si.photofinish:get()
    manny:play_chore_looping(mc_activate_photofinsh, manny.base_costume)
    manny.is_holding = si.photofinish
    manny.hold_chore = mc_activate_photofinish
    manny:play_chore_looping(ms_hold, manny.base_costume)
    sleep_for(871)
    binder:setpos(-0.354, -0.781075, 0.2818)
    toto:wait_for_chore()
    manny:wait_for_chore()
    manny:clear_hands()
    toto:wait_for_message()
    manny:say_line("/vima040b/")
    toto:wait_for_chore()
    toto:pop_costume()
    toto:play_chore(toto_phone_grab_phone)
    sleep_for(603)
    si.phone_actor:setpos(0, 0, 100)
    toto:wait_for_chore()
    sleep_for(1000)
    cc.anchor_paper:free()
    END_CUT_SCENE()
    start_script(si.toto_on_phone)
end
si.toto_gossip = { }
si.toto_gossip.sits035 = 0.0099999998
si.toto_gossip.sits040 = 0.1
si.toto_gossip.sits041 = 0.30000001
si.toto_gossip.sits042 = 0.1
si.toto_gossip.sits043 = 0.0099999998
si.toto_gossip.sits044 = 0.1
si.toto_gossip.sits045 = 0.1
si.toto_gossip.sits050 = 0.1
si.toto_gossip.sits051 = 0.0099999998
si.toto_gossip.sits052 = 0.0099999998
si.toto_gossip.sits055 = 0.16
si.interrupt_toto = function(arg1) -- line 474
    line = rndint(2)
    if in_year_four then
        si.sneak_around()
    elseif si.naranja_out then
        START_CUT_SCENE()
        if not arg1 then
            manny:walkto_object(si.toto_obj)
        end
        stop_script(si.toto_on_phone)
        toto:say_line("/sito003/")
        toto:wait_for_message()
        END_CUT_SCENE()
        if arg1 then
            START_CUT_SCENE()
            toto:play_chore(toto_phone_turn_point)
            if line == 0 then
                toto:say_line("/sito004/")
            elseif line == 1 then
                toto:say_line("/sito005/")
            elseif line == 2 then
                toto:say_line("/sito006/")
            end
            toto:wait_for_message()
            start_script(si.toto_on_phone)
            toto:stop_chore(toto_phone_turn_point)
            toto:play_chore(toto_phone_back_to_phone)
            toto:wait_for_chore()
            toto:stop_chore(toto_phone_back_to_phone)
            END_CUT_SCENE()
        end
    else
        START_CUT_SCENE()
        toto:head_look_at_manny()
        toto:wait_for_message()
        si.toto_obj:use(TRUE)
        END_CUT_SCENE()
    end
end
si.toto_on_phone = function() -- line 520
    toto:set_speech_mode(MODE_BACKGROUND)
    while system.currentSet == si do
        toto:wait_for_message()
        if not si.toto_phoning then
            si.toto_phoning = TRUE
            toto:play_chore(toto_phone_grab_phone)
        elseif rnd() then
            toto:push_chore(toto_phone_scratch)
        elseif rnd() then
            toto:push_chore(toto_phone_wave)
        end
        if not si.overheard_passout then
            si.toto_talk_to_velasco()
        end
        si.gossip_count = si.gossip_count + 1
        if si.gossip_count == 1 then
            toto:say_line("/sito030/")
        elseif si.gossip_count == 2 then
            toto:say_line("/sito031/")
        elseif si.gossip_count == 3 then
            toto:say_line("/sito032/")
        elseif si.gossip_count == 4 then
            toto:say_line("/sito033/")
        elseif si.gossip_count == 5 then
            toto:say_line("/sito034/")
        elseif si.gossip_count == 6 then
            toto:say_line("/sito035/")
        elseif si.gossip_count == 7 then
            toto:say_line("/sito036/")
        elseif si.gossip_count == 8 then
            toto:say_line("/sito037/")
        elseif si.gossip_count == 9 then
            toto:say_line("/sito038/")
        elseif si.gossip_count == 10 then
            toto:say_line("/sito039/")
        elseif si.gossip_count == 11 then
            toto:say_line("/sito040/")
        elseif si.gossip_count == 12 then
            toto:say_line("/sito041/")
        elseif si.gossip_count == 13 then
            toto:say_line("/sito042/")
        elseif si.gossip_count == 14 then
            toto:say_line("/sito043/")
        elseif si.gossip_count == 15 then
            toto:say_line("/sito044/")
        elseif si.gossip_count == 16 then
            toto:say_line("/sito045/")
        elseif si.gossip_count == 17 then
            toto:say_line("/sito046/")
        elseif si.gossip_count == 18 then
            toto:say_line("/sito047/")
        elseif si.gossip_count == 19 then
            toto:say_line("/sito048/")
        elseif si.gossip_count == 20 then
            toto:say_line("/sito049/")
        elseif si.gossip_count == 21 then
            toto:say_line("/sito050/")
        elseif si.gossip_count == 22 then
            toto:say_line("/sito051/")
        elseif si.gossip_count == 23 then
            toto:say_line("/sito052/")
        elseif si.gossip_count == 24 then
            toto:say_line("/sito053/")
        elseif si.gossip_count == 25 then
            toto:say_line("/sito054/")
        elseif si.gossip_count == 26 then
            toto:say_line("/sito055/")
        elseif si.gossip_count == 27 then
            toto:say_line("/sito056/")
        elseif si.gossip_count == 28 then
            toto:say_line("/sito057/")
        end
        toto:wait_for_message()
        toto:wait_for_chore()
        sleep_for(3000 * random() + 2000)
    end
end
si.naranja_snoring = function() -- line 608
    naranja:set_speech_mode(MODE_BACKGROUND)
    while system.currentSet == si do
        sleep_for(1000 + random() * 1000)
        if not IsMessageGoing() then
            naranja:say_line("/sina058/")
            naranja:wait_for_message()
        end
        sleep_for(1000 + random() * 1000)
        if not IsMessageGoing() then
            naranja:say_line("/sina059/")
            naranja:wait_for_message()
        end
    end
end
si.slow_drill = function(arg1) -- line 625
    while find_script(si.toto_controller) do
        break_here()
    end
    si.drill_state = DRILL_LOADED
    start_script(si.naranja_drink, TRUE)
    toto:play_chore(toto_drill_slows)
    sleep_for(1500)
    naranja:say_line("/sina060/")
    naranja:wait_for_message()
    toto:wait_for_chore(toto_drill_slows)
    si.drill_state = DRILL_STOPPED
    local local1 = manny:find_sector_name("busted_box")
    if local1 then
        START_CUT_SCENE()
        manny:head_look_at(toto)
        if manny:find_sector_name("fridge_box") then
            start_script(manny.walkto, manny, 1.17378, -1.01255, 0, 0, 415, 0)
        end
        si.drill_slow_count = si.drill_slow_count + 1
        if si.drill_slow_count == 1 then
            toto:say_line("/sito061a/")
            toto:play_chore_looping(toto_yell_loop)
            toto:wait_for_message()
            toto:say_line("/sito061b/")
            toto:wait_for_message()
            toto:say_line("/sito061c/")
            toto:wait_for_message()
        elseif si.drill_slow_count == 2 then
            toto:say_line("/sito062a/")
            toto:wait_for_message()
            toto:say_line("/sito062b/")
            toto:play_chore_looping(toto_yell_loop)
        elseif si.drill_slow_count == 3 then
            toto:say_line("/sito063a/")
            toto:wait_for_message()
            toto:say_line("/sito063b/")
            toto:play_chore_looping(toto_yell_loop)
        else
            toto:say_line("/sito064/")
            toto:play_chore_looping(toto_yell_loop)
        end
        toto:wait_for_message()
        manny:head_look_at(nil)
        MakeSectorActive("no_fridge", TRUE)
        MakeSectorActive("floor_1", TRUE)
        MakeSectorActive("xit_frg_box", TRUE)
        MakeSectorActive("xit_box", TRUE)
        si:current_setup(si_frgms)
        if manny.is_holding then
            put_away_held_item()
        end
        if si.lettuce_crisper:is_open() then
            manny:walkto(1.17155, -1.07449, 0, 0, 347.936, 0)
            manny:wait_for_actor()
            manny:walkto_object(si.lettuce_crisper)
            si.lettuce_crisper:close()
            start_script(manny.walkto_object, manny, si.fridge)
            local local2 = fridge_door:getrot()
            repeat
                local2.y = local2.y + PerSecond(25)
                fridge_door:setrot(0, local2.y, 0)
                break_here()
            until local2.y >= 261
        elseif not si.fridge.door_closed then
            manny:walkto(1.17155, -1.07449, 0, 0, 347.936, 0)
            manny:wait_for_actor()
            manny:walkto_object(si.fridge)
        end
        while not si.fridge.door_closed do
            break_here()
        end
        fridge_door:play_chore(1)
        fridge_door:setrot(0, 179.979, 0)
        si.fridge:close()
        toto:set_chore_looping(toto_yell_loop, FALSE)
        toto:wait_for_chore(toto_yell_loop)
        toto:play_chore(toto_look_to_drill)
        toto:wait_for_chore(toto_look_to_drill)
        fade_sfx("siRefrig.imu", 400, 0)
        fade_sfx("siGenSlw.imu", 400, 0)
        start_sfx("siGenUp.wav", nil, 40)
        sleep_for(600)
        start_sfx("siGenRun.imu", nil, 0)
        fade_sfx("siGenRun.imu", 200, si.gen_loop_vol)
        END_CUT_SCENE()
    else
        si.guys_distracted = TRUE
        toto:say_line("/sito065/")
        toto:play_chore_looping(toto_look_fridge)
        toto:wait_for_message()
        sleep_for(5000)
        start_sfx("siRfSlam.wav")
        si.guys_distracted = FALSE
        if not si.booze.dosed then
            START_CUT_SCENE()
            if local1 then
                si:current_setup(si_frgms)
            end
            fridge_door:play_chore(1)
            si.lettuce_crisper.interest_actor:complete_chore(1)
            fridge_door:setrot(0, 179.979, 0)
            si.fridge:close()
            si.fridge.parent.close(si.fridge)
            si.lettuce_crisper.parent.close(si.lettuce_crisper)
            fade_sfx("siRefrig.imu", 400, 0)
            fade_sfx("siGenSlw.imu", 400, 0)
            start_sfx("siGenUp.wav", nil, 40)
            sleep_for(600)
            start_sfx("siGenRun.imu", nil, 0)
            fade_sfx("siGenRun.imu", 200, si.gen_loop_vol)
            if local1 then
                si:current_setup(si_ladms)
            end
            si.lettuce_crisper:make_untouchable()
            toto:stop_chore(toto_look_fridge)
            toto:play_chore(toto_yell_to_drill)
            toto:say_line("/sito068/")
            toto:wait_for_message()
            toto:say_line("/sito069/")
            toto:wait_for_message()
            END_CUT_SCENE()
        end
    end
    MakeSectorActive("no_fridge", TRUE)
    MakeSectorActive("floor_1", TRUE)
    MakeSectorActive("xit_frg_box", TRUE)
    MakeSectorActive("xit_box", TRUE)
    si.motor_running = FALSE
    start_script(si.toto_controller)
end
si.fridge_box_watch = function(arg1) -- line 777
    local local1
    local local2 = start_script(si.fridge_close)
    wait_for_script(local2)
    if si.fridge:is_open() then
        si.fridge:close()
    end
end
si.fridge_motor = function(arg1) -- line 786
    start_script(si.fridge_box_watch)
    preload_sfx("siRefrig.imu")
    preload_sfx("siGenDn.wav")
    preload_sfx("siGenUp.wav")
    preload_sfx("siGenSlw.imu")
    sleep_for(10000)
    if si.fridge:is_open() then
        start_sfx("siRefrig.imu", nil, si.refrig_loop_vol)
        si.motor_running = TRUE
        sleep_for(500)
        fade_sfx("siGenRun.imu", 200, 0)
        start_sfx("siGenDn.wav", nil, 40)
        sleep_for(600)
        start_sfx("siGenSlw.imu", nil, 0)
        fade_sfx("siGenSlw.imu", 250, si.gen_loop_vol)
        start_script(si.slow_drill)
    end
end
si.fridge_close = function() -- line 810
    si.fridge:make_untouchable()
    local local1 = fridge_door:getrot()
    repeat
        local1.y = local1.y + PerSecond(15)
        fridge_door:setrot(0, local1.y, 0)
        break_here()
    until manny:find_sector_name("fridge_box") or local1.y >= 224
    while manny:find_sector_name("fridge_box") do
        break_here()
    end
    MakeSectorActive("xit_frg_box", FALSE)
    MakeSectorActive("xit_box", FALSE)
    si.lettuce_crisper:make_untouchable()
    if not si.lettuce_crisper:is_open() then
        repeat
            local1.y = local1.y + PerSecond(25)
            fridge_door:setrot(0, local1.y, 0)
            break_here()
        until local1.y >= 261
        si.fridge.door_closed = TRUE
        fridge_door:play_chore(1)
        fridge_door:setrot(0, 179.979, 0)
    else
        repeat
            local1.y = local1.y + PerSecond(15)
            fridge_door:setrot(0, local1.y, 0)
            break_here()
        until local1.y >= 220
    end
    stop_sound("siRefrig.imu")
end
si.sneak_around = function() -- line 844
    manny:say_line("/sima070/")
end
si.set_up_actors = function(arg1) -- line 848
    toto:set_costume("toto.cos")
    toto:default()
    toto:set_mumble_chore(toto_mumble)
    toto:set_talk_chore(1, toto_stop_talk)
    toto:set_talk_chore(2, toto_a)
    toto:set_talk_chore(3, toto_c)
    toto:set_talk_chore(4, toto_e)
    toto:set_talk_chore(5, toto_f)
    toto:set_talk_chore(6, toto_l)
    toto:set_talk_chore(7, toto_m)
    toto:set_talk_chore(8, toto_o)
    toto:set_talk_chore(9, toto_t)
    toto:set_talk_chore(10, toto_u)
    toto:put_in_set(si)
    if not naranja.hCos then
        naranja.hCos = "naranja.cos"
    end
    naranja:set_costume(naranja.hCos)
    naranja:default()
    naranja:set_mumble_chore(naranja_mumble)
    naranja:set_talk_chore(1, naranja_stop_talk)
    naranja:set_talk_chore(2, naranja_a)
    naranja:set_talk_chore(3, naranja_c)
    naranja:set_talk_chore(4, naranja_e)
    naranja:set_talk_chore(5, naranja_f)
    naranja:set_talk_chore(6, naranja_l)
    naranja:set_talk_chore(7, naranja_m)
    naranja:set_talk_chore(8, naranja_o)
    naranja:set_talk_chore(9, naranja_t)
    naranja:set_talk_chore(10, naranja_u)
    naranja:put_in_set(si)
    if not binder then
        binder = Actor:create(nil, nil, nil, "binder")
    end
    binder:set_costume("binder.cos")
    binder:setpos(-0.354, -0.781075, 0.2818)
    binder:setrot(0, 60, 0)
    binder:put_in_set(si)
    if not si.phone_actor then
        si.phone_actor = Actor:create(nil, nil, nil, "reciever")
    end
    si.phone_actor:set_costume("si_phone.cos")
    si.phone_actor:setpos({ x = -0.355015, y = -0.63749, z = 0.458 })
    si.phone_actor:setrot(0, 0, 0)
    si.phone_actor:put_in_set(si)
    si.phone_actor:play_chore(0)
    if in_year_four then
        si.toto_obj:make_untouchable()
        si.naranja_obj:make_untouchable()
        si.booze:make_untouchable()
        naranja:put_in_set(nil)
        toto:push_costume("to_sleep.cos")
        toto:setpos(1.36707, -0.743324, 0.1034)
        toto:setrot(89, 0, 0)
        toto:play_chore_looping(0)
        toto:set_speech_mode(MODE_BACKGROUND)
        start_script(si.toto_snoring)
    else
        NewObjectState(si_ladms, OBJSTATE_STATE, "si_phone_obj.bm", "si_phone_obj.zbm")
        si.phone:set_object_state("si_phone_obj.cos")
        if not si.naranja_out then
            preload_sfx("tkBstSqt.wav")
            start_sfx("siGenRun.imu", nil, si.gen_loop_vol)
            toto:setpos(0.40958, -0.86168, 0)
            toto:setrot(0, 151.925, 0)
            start_script(si.toto_controller)
            start_script(si.drilling_sfx)
            si.naranja_obj:make_touchable()
            SetActorHead(naranja.hActor, 4, 5, 6, 360, 28, 95)
            PutActorAt(naranja.hActor, 0.14681, -0.69212, -0.05687)
            SetActorRot(naranja.hActor, 25.2101, 0, 0)
            start_script(si.naranja_drinking)
        else
            si.lettuce_crisper:make_untouchable()
            si.booze_actor:play_chore(1)
            si.scrimshaw_apparatus.touchable = TRUE
            si.toto_phoning = FALSE
            toto:set_collision_mode(COLLISION_SPHERE)
            SetActorCollisionScale(toto.hActor, 0.3)
            manny:set_collision_mode(COLLISION_SPHERE)
            SetActorCollisionScale(manny.hActor, 0.35)
            toto:setpos(-0.2773, -0.61543, 0)
            toto:setrot(0, 333.598, 0)
            toto:push_costume("toto_phone.cos")
            SetActorHead(toto.hActor, 4, 5, 6, 360, 28, 95)
            si.toto_obj.obj_x = -0.21633
            si.toto_obj.obj_y = -0.605221
            si.toto_obj.obz_z = 0.47
            si.toto_obj.use_pnt_x = 0.0777695
            si.toto_obj.use_pnt_y = -0.397821
            si.toto_obj.use_pnt_z = 0
            si.toto_obj.use_rot_x = 0
            si.toto_obj.use_rot_y = 121.429
            si.toto_obj.use_rot_z = 0
            si.toto_obj.interest_actor:setpos(-0.21633, -0.605221, 0.47)
            si.toto_obj:make_touchable()
            start_script(si.toto_on_phone)
            si.naranja_obj:make_untouchable()
            si.booze:make_untouchable()
            start_script(si.naranja_snoring)
            naranja:push_costume("na_on_cot.cos")
            naranja:setpos(1.36044, -0.6715, 0.117)
            naranja:setrot(90, 0, 0)
            naranja:complete_chore(1, "na_on_cot.cos")
        end
    end
end
si.enter = function(arg1) -- line 977
    si:set_up_actors()
    si.lettuce_crisper.opened = FALSE
    si.fridge.opened = FALSE
    NewObjectState(si_frgms, OBJSTATE_UNDERLAY, "si_cabinet.bm")
    NewObjectState(si_ladms, OBJSTATE_UNDERLAY, "si_ladms_cab.bm")
    si.cabinet:set_object_state("si_cabinet.cos")
    if in_year_four then
        si.cabinet.opened = FALSE
    end
    if si.cabinet.opened then
        si.cabinet.interest_actor:complete_chore(0)
    else
        si.cabinet.interest_actor:complete_chore(1)
    end
    NewObjectState(si_frgms, OBJSTATE_OVERLAY, "si_drawer.bm", nil, TRUE)
    si.lettuce_crisper:set_object_state("si_drawer.cos")
    if not fridge_door then
        fridge_door = Actor:create(nil, nil, nil, "door")
    end
    fridge_door:set_costume("frg_door.cos")
    fridge_door:put_in_set(si)
    fridge_door:set_softimage_pos(7.475, 2.6598, 6.9895)
    fridge_door:setrot(0, 179.979, 0)
    if not si.booze_actor then
        si.booze_actor = Actor:create(nil, nil, nil, "booze")
    end
    if not in_year_four then
        bot = NewObjectState(si_ladms, OBJSTATE_UNDERLAY, "si_bottle.bm", nil, TRUE)
        NewObjectState(si_frgms, OBJSTATE_UNDERLAY, "si_rfbot.bm")
        SendObjectToFront(bot)
        si.booze_actor:set_costume("nr_bottle.cos")
        si.booze_actor:put_in_set(si)
        si.booze_actor:setrot(0, 160, 0)
        si.booze_actor:setpos(-0.21479, -1.01508, 0.33246)
        si.booze_actor:play_chore(0)
    end
    toto:set_speech_mode(MODE_BACKGROUND)
    naranja:set_speech_mode(MODE_BACKGROUND)
    start_script(si.watch_totos_head)
end
si.exit = function(arg1) -- line 1039
    fridge_door:free()
    naranja:free()
    toto:free()
    binder:free()
    if si.phone_actor then
        si.phone_actor:free()
    end
    manny:set_collision_mode(COLLISION_OFF)
    stop_script(si.naranja_snoring)
    stop_script(si.toto_snoring)
    stop_script(si.toto_on_phone)
    stop_script(si.toto_controller)
    stop_script(si.drilling_sfx)
    stop_script(si.watch_totos_head)
    stop_script(si.fridge_collision_actor_locator)
    stop_sound("siRefrig.imu")
    stop_sound("siGenDn.wav")
    stop_sound("siGenUp.wav")
    stop_sound("siGenSlw.imu")
    stop_sound("siGenRun.imu")
    stop_sound("siDrNlOn.wav")
    stop_sound("siDrNlLp.imu")
    stop_sound("siDrNlOf.wav")
    stop_sound("siDrLdOn.wav")
    stop_sound("siDrLdLp.imu")
    stop_sound("siDrLdOf.wav")
    if si.booze_actor then
        si.booze_actor:free()
    end
end
si.update_music_state = function(arg1) -- line 1072
    if si.naranja_out then
        return stateSI_SLEEP
    else
        return stateSI
    end
end
si.fridge_collision_actor_locator = function() -- line 1080
    local local1, local2, local3
    while 1 do
        local1, local2, local3 = GetActorNodeLocation(fridge_door.hActor, 1)
        fridge_collision_actor:setpos(local1, local2, local3)
        break_here()
    end
end
si.nitrogen = Object:create(si, "/sitx072/liquid nitrogen", 0, 0, 0, { range = 0 })
si.nitrogen.string_name = "nitro"
si.nitrogen.wav = "getBotl.wav"
si.nitrogen.lookAt = function(arg1) -- line 1098
    if manny.shot then
        if manny.healed then
            arg1:use()
        else
            mf:look_at_nitro()
        end
    else
        manny:say_line("/sima073/")
    end
end
si.nitrogen.use = function(arg1) -- line 1110
    if not manny.healed then
        if manny.shot then
            mf.freeze_heart()
        else
            soft_script()
            manny:say_line("/sima074a/")
            manny:wait_for_message()
            manny:say_line("/sima074b/")
        end
    else
        manny:say_line("/sima075/")
    end
end
si.nitrogen.default_response = si.nitrogen.use
si.cabinet = Object:create(si, "/sitx076/cabinet", -0.39372, -1.1983, 0.44999999, { range = 0.60000002 })
si.cabinet.use_pnt_x = -0.15000001
si.cabinet.use_pnt_y = -1.211
si.cabinet.use_pnt_z = 0
si.cabinet.use_rot_x = 0
si.cabinet.use_rot_y = 94.6231
si.cabinet.use_rot_z = 0
si.cabinet.opened = FALSE
si.cabinet.lookAt = function(arg1) -- line 1139
    manny:say_line("/sima077/")
end
si.cabinet.pickUp = function(arg1) -- line 1143
    system.default_response("attached")
end
si.cabinet.use = function(arg1) -- line 1147
    START_CUT_SCENE()
    if arg1.opened then
        manny:walkto_object(arg1)
        si:current_setup(si_frgms)
        manny:play_chore(msb_hand_on_obj, manny.base_costume)
        sleep_for(200)
        arg1:close()
        arg1:play_chore(1)
        manny:wait_for_actor()
        manny:play_chore(msb_hand_off_obj, manny.base_costume)
        manny:wait_for_actor()
        sleep_for(500)
        si:current_setup(si_ladms)
    elseif not in_year_four then
        arg1:open()
        si:current_setup(si_frgms)
        manny:walkto_object(arg1)
        manny:play_chore(mc_reach_cabinet, manny.base_costume)
        sleep_for(500)
        arg1:play_chore(0)
        manny:wait_for_chore(mc_reach_cabinet, manny.base_costume)
        manny:stop_chore(mc_reach_cabinet, manny.base_costume)
        system.default_response("empty")
        manny:wait_for_message()
        if not arg1.seen then
            arg1.seen = TRUE
            if si.naranja_out then
                stop_script(si.toto_on_phone)
                toto:say_line("/sito003/")
                toto:wait_for_message()
            end
            sleep_for(500)
            toto:say_line("/sito080/")
            toto:wait_for_message()
            manny:setrot(0, -42.5, 0, TRUE)
            manny:head_look_at(toto)
            manny:say_line("/sima081/")
            manny:wait_for_message()
            toto:say_line("/sito082/")
            toto:wait_for_message()
            manny:setrot(0, 94.6231, 0, TRUE)
            manny:head_look_at(nil)
            if si.naranja_out then
                si.toto_resume()
            else
                naranja:say_line("/sina083/")
                naranja:wait_for_message()
                toto:say_line("/sito084/")
            end
        end
        si:current_setup(si_ladms)
    else
        manny:walkto(-0.05341, -1.07143, 0, 0, 145.622, 0)
        manny:wait_for_actor()
        manny:push_costume("mm_get_nitro.cos")
        manny:play_chore(0)
        sleep_for(500)
        arg1:play_chore(0)
        manny:wait_for_actor()
        manny:play_chore(1)
        manny:wait_for_actor()
        manny:play_chore(2)
        manny:wait_for_actor()
        manny:pop_costume()
        manny:setpos(-0.03331, -1.30403, 0)
        manny:setrot(0, 10.6225, 0)
        si.nitrogen:get()
        manny.is_holding = si.nitrogen
        manny:play_chore_looping(msb_activate_nitro, "msb.cos")
        manny:play_chore_looping(msb_hold, "msb.cos")
        manny.hold_chore = msb_activate_nitro
        arg1:make_untouchable()
    end
    END_CUT_SCENE()
end
si.lettuce_crisper = Object:create(si, "/sitx085/lettuce crisper", 0.84577203, -0.69888902, 0.1, { range = 0.60000002 })
si.lettuce_crisper.use_pnt_x = 0.98833001
si.lettuce_crisper.use_pnt_y = -0.91671002
si.lettuce_crisper.use_pnt_z = 0
si.lettuce_crisper.use_rot_x = 0
si.lettuce_crisper.use_rot_y = 14.989
si.lettuce_crisper.use_rot_z = 0
si.lettuce_crisper:make_untouchable()
si.lettuce_crisper.lookAt = function(arg1) -- line 1241
    START_CUT_SCENE()
    manny:say_line("/sima086/")
    manny:wait_for_message()
    manny:say_line("/sima087/")
    END_CUT_SCENE()
end
si.lettuce_crisper.open = function(arg1) -- line 1249
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    Object.open(arg1)
    manny:push_costume("mc_in_si.cos")
    manny:play_chore(mc_in_si_open_crspr, "mc_in_si.cos")
    sleep_for(1005)
    arg1:play_chore(0)
    arg1:wait_for_chore()
    manny:wait_for_chore(mc_in_si_open_crspr, "mc_in_si.cos")
    manny:pop_costume()
    manny:backup(1000)
    END_CUT_SCENE()
    if not arg1.been_open then
        START_CUT_SCENE()
        arg1.been_open = TRUE
        system.default_response("empty")
        END_CUT_SCENE()
    end
end
si.lettuce_crisper.close = function(arg1) -- line 1271
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    Object.close(arg1)
    manny:push_costume("mc_in_si.cos")
    manny:play_chore(mc_in_si_close_crspr, "mc_in_si.cos")
    sleep_for(900)
    arg1:play_chore(1)
    arg1:wait_for_chore()
    manny:wait_for_chore(mc_in_si_close_crspr, "mc_in_si.cos")
    manny:pop_costume()
    END_CUT_SCENE()
end
si.lettuce_crisper.use = function(arg1) -- line 1288
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    END_CUT_SCENE()
    if arg1:is_open() then
        arg1:close()
    else
        arg1:open()
    end
end
si.lettuce_crisper.pickUp = si.lettuce_crisper.use
si.fridge = Object:create(si, "/sitx088/fridge", 0.91577202, -0.68888903, 0.40000001, { range = 0.60000002 })
si.fridge.use_pnt_x = 1.1401
si.fridge.use_pnt_y = -0.80976999
si.fridge.use_pnt_z = 0
si.fridge.use_rot_x = 0
si.fridge.use_rot_y = 68.274002
si.fridge.use_rot_z = 0
si.fridge.close_x = 1.10946
si.fridge.close_y = -0.85006201
si.fridge.close_z = 0
si.fridge.close_rot_x = 0
si.fridge.close_rot_y = -1015.7
si.fridge.close_rot_z = 0
si.fridge.door_closed = TRUE
si.fridge.lookAt = function(arg1) -- line 1319
    if arg1:is_open() then
        manny:say_line("/sima089/")
    else
        manny:say_line("/sima090/")
    end
end
si.fridge.open = function(arg1) -- line 1327
    if in_year_four then
        si.sneak_around()
    elseif si.naranja_out then
        system.default_response("shed light")
    else
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        si.lettuce_crisper:make_touchable()
        si.fridge.door_closed = FALSE
        arg1.parent.open(arg1)
        manny:push_costume("mc_in_si.cos")
        manny:play_chore(mc_in_si_open_frg, "mc_in_si.cos")
        fridge_door:play_chore(frg_door_door_open)
        manny:wait_for_chore(mc_in_si_open_frg, "mc_in_si.cos")
        manny:pop_costume()
        if not si.naranja_out then
            start_script(si.fridge_motor)
        end
        MakeSectorActive("bottle", FALSE)
        MakeSectorActive("bottle1", FALSE)
        MakeSectorActive("no_fridge", FALSE)
        MakeSectorActive("floor_1", FALSE)
        END_CUT_SCENE()
    end
end
si.fridge.close = function(arg1) -- line 1355
    si.fridge:make_touchable()
    if not si.lettuce_crisper:is_open() then
        stop_script(si.fridge_motor)
        arg1.parent.close(arg1)
        si.lettuce_crisper:make_untouchable()
        MakeSectorActive("bottle", TRUE)
        MakeSectorActive("bottle1", TRUE)
        MakeSectorActive("no_fridge", TRUE)
        MakeSectorActive("floor_1", TRUE)
        MakeSectorActive("xit_frg_box", TRUE)
        MakeSectorActive("xit_box", TRUE)
        start_sfx("rfrgDrCl.wav")
    end
    si.fridge.door_closed = TRUE
end
si.fridge.use = function(arg1) -- line 1373
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    END_CUT_SCENE()
    if arg1:is_open() then
        arg1:close()
    else
        arg1:open()
    end
end
si.cot = Object:create(si, "/sitx091/cot", 1.38577, -1.00889, 0.039999999, { range = 0.5 })
si.cot.use_pnt_x = 1.188
si.cot.use_pnt_y = -1.051
si.cot.use_pnt_z = 0
si.cot.use_rot_x = 0
si.cot.use_rot_y = -78.643799
si.cot.use_rot_z = 0
si.cot.lookAt = function(arg1) -- line 1394
    if in_year_four then
        manny:say_line("/sima092/")
    elseif si.naranja_out then
        arg1.seen = TRUE
        manny:say_line("/sima093/")
    else
        manny:say_line("/sima094/")
    end
end
si.cot.use = function(arg1) -- line 1407
    if in_year_four then
        manny:say_line("/sima095/")
    elseif si.naranja_out then
        if not si.rolled_naranja then
            si.rolled_naranja = TRUE
            si.dog_tags:get()
            START_CUT_SCENE()
            manny:say_line("/sima096/")
            manny:walkto(1.26159, -1.04933, 0, 0, 280, 0)
            manny:wait_for_message()
            manny:wait_for_actor()
            manny:play_chore(mc_reach_med, "mc.cos")
            sleep_for(900)
            start_sfx("getDogTg.wav")
            manny:play_chore_looping(mc_activate_dog_tags, "mc.cos")
            manny.hold_chore = mc_activate_dog_tags
            manny.is_holding = si.dog_tags
            manny:wait_for_chore(mc_reach_med, "mc.cos")
            manny:blend(mc_hold, mc_reach_med, 500, "mc.cos", "mc.cos")
            sleep_for(500)
            manny:play_chore_looping(mc_hold, "mc.cos")
            manny:say_line("/sima097/")
            si.dog_tags:lookAt()
            if not arg1.seen then
                manny:wait_for_message()
                arg1:lookAt()
            end
            END_CUT_SCENE()
        else
            manny:say_line("/sima098/")
        end
    else
        manny:say_line("/sima099/")
    end
end
si.cot.pickUp = si.cot.use
si.cot.use_dog_tags = function(arg1) -- line 1448
    manny:say_line("/sima100/")
end
si.dog_tags = Object:create(si, "/sitx101/dog tags", 0, 0, 0, { range = 0 })
si.dog_tags.string_name = "dog_tags"
si.dog_tags.wav = "getDogTg.wav"
si.dog_tags.lookAt = function(arg1) -- line 1457
    manny:say_line("/sima102/")
end
si.dog_tags.use = function(arg1) -- line 1461
    manny:say_line("/sima103/")
end
si.phone = Object:create(si, "/sitx104/phone", -0.37371999, -0.59829998, 0.47999999, { range = 0.60000002 })
si.phone.use_pnt_x = -0.19769
si.phone.use_pnt_y = -0.63867998
si.phone.use_pnt_z = 0
si.phone.use_rot_x = 0
si.phone.use_rot_y = 94.629303
si.phone.use_rot_z = 0
si.phone.lookAt = function(arg1) -- line 1475
    if in_year_four or used_totos_phone then
        manny:say_line("/sima105/")
    else
        manny:say_line("/sima106a/")
        manny:wait_for_message()
        manny:say_line("/sima106b/")
    end
end
si.phone.call_operator = function(arg1) -- line 1485
    manny:say_line("/sima107/")
    manny:wait_for_message()
end
si.phone.use = function(arg1) -- line 1490
    if in_year_four then
        START_CUT_SCENE()
        si.phone:pick_up()
        si.phone:call_operator()
        manny:say_line("/sima108a/")
        manny:nod_head_gesture()
        manny:wait_for_message()
        manny:say_line("/sima108b/")
        manny:hand_gesture()
        manny:wait_for_message()
        start_sfx("inezhgup.wav")
        wait_for_sound("inezhgup.wav")
        si.phone:hang_up()
        manny:say_line("/sima109/")
        manny:shrug_gesture()
        END_CUT_SCENE()
    elseif si.naranja_out then
        si.toto_obj:use()
    elseif not used_totos_phone then
        used_totos_phone = TRUE
        START_CUT_SCENE()
        si.phone:pick_up()
        si.phone:call_operator()
        manny:say_line("/sima110a/")
        manny:nod_head_gesture(TRUE)
        manny:wait_for_message()
        manny:hand_gesture()
        sleep_for(500)
        manny:say_line("/sima110b/")
        manny:wait_for_message()
        sleep_for(1000)
        manny:say_line("/sima111a/")
        manny:twist_head_gesture()
        manny:wait_for_message()
        manny:say_line("/sima111b/")
        manny:wait_for_message()
        start_sfx("inezhgup.wav")
        wait_for_sound("inezhgup.wav")
        si.phone:hang_up()
        manny:shrug_gesture()
        sleep_for(1000)
        END_CUT_SCENE()
        manny:say_line("/sima112/")
    else
        manny:say_line("/sima113/")
    end
end
si.phone.pick_up = function(arg1) -- line 1543
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    if in_year_four then
        manny:push_costume("msb_in_si.cos")
    else
        manny:push_costume("mc_in_si.cos")
    end
    manny:play_chore(mc_in_si_grab_phone)
    manny:wait_for_chore()
    manny:stop_chore(mc_in_si_grab_phone)
    manny:play_chore(mc_in_si_hold_phone)
    END_CUT_SCENE()
end
si.phone.hang_up = function(arg1) -- line 1558
    START_CUT_SCENE()
    manny:stop_chore(mc_in_si_hold_phone)
    manny:play_chore(mc_in_si_hang_phone)
    manny:wait_for_chore()
    manny:pop_costume()
    END_CUT_SCENE()
end
si.toto_obj = Object:create(si, "/sitx114/Toto", 0.375, -0.787, 0.347, { range = 0.60000002 })
si.toto_obj.use_pnt_x = 0.46900001
si.toto_obj.use_pnt_y = -1.117
si.toto_obj.use_pnt_z = 0
si.toto_obj.use_rot_x = 0
si.toto_obj.use_rot_y = -12.0664
si.toto_obj.use_rot_z = 0
si.toto_obj.lookAt = function(arg1) -- line 1577
    manny:say_line("/gtcma17/")
end
si.toto_obj.use = function(arg1, arg2) -- line 1581
    if not si.naranja_out then
        if not bug_toto_count then
            bug_toto_count = 1
        else
            bug_toto_count = bug_toto_count + 1
        end
        if not arg2 then
            if bug_toto_count == 1 then
                manny:say_line("/sima115/")
            elseif bug_toto_count == 2 then
                manny:say_line("/sima116/")
            elseif bug_toto_count == 3 then
                manny:say_line("/sima117/")
            elseif bug_toto_count == 4 then
                manny:say_line("/sima118/")
            elseif bug_toto_count == 5 then
                manny:say_line("/sima119/")
            elseif bug_toto_count == 6 then
                manny:say_line("/sima120/")
            elseif bug_toto_count == 7 then
                manny:say_line("/sima121/")
            elseif bug_toto_count == 8 then
                manny:say_line("/sima122/")
            elseif bug_toto_count == 9 then
                manny:say_line("/sima123/")
            elseif bug_toto_count == 10 then
                manny:say_line("/sima124/")
            elseif bug_toto_count == 11 then
                manny:say_line("/sima125/")
            elseif bug_toto_count == 12 then
                manny:say_line("/sima126/")
            elseif bug_toto_count == 13 then
                manny:say_line("/sima127/")
            elseif bug_toto_count == 14 then
                manny:say_line("/sima128a/")
                manny:wait_for_message()
                manny:say_line("/sima128b/")
            else
                manny:say_line("/sima129/")
            end
            manny:wait_for_message()
        end
        PrintDebug(1)
        if bug_toto_count == 1 then
            toto:say_line("/sito130a/")
            toto:wait_for_message()
            toto:say_line("/sito130b/")
        elseif bug_toto_count == 2 then
            toto:say_line("/sito131/")
        elseif bug_toto_count == 3 then
            toto:say_line("/sito132a/")
            toto:wait_for_message()
            toto:say_line("/sito132b/")
        elseif bug_toto_count == 4 then
            toto:say_line("/sito133/")
        elseif bug_toto_count == 5 then
            toto:say_line("/sito134/")
        elseif bug_toto_count == 6 then
            toto:say_line("/sito135/")
        elseif bug_toto_count == 7 then
            toto:say_line("/sito136/")
        elseif bug_toto_count == 8 then
            toto:say_line("/sito137/")
        elseif bug_toto_count == 9 then
            toto:say_line("/sito138/")
        else
            toto:say_line(pick_one_of({ "/sito139/", "/sito140/", "/sito141/", "/sito142/", "/sito143/", "/sito144/", "/sito145/" }, TRUE))
        end
    else
        START_CUT_SCENE()
        stop_script(si.toto_on_phone)
        toto:shut_up()
        manny:head_look_at(si.phone)
        manny:say_line("/clma008/")
        sleep_for(500)
        toto:head_look_at_manny()
        manny:wait_for_message()
        toto:say_line("/sito154/")
        toto:wait_for_message()
        manny:head_look_at(nil)
        toto:head_look_at(nil)
        END_CUT_SCENE()
    end
end
si.toto_obj.use_detector = function(arg1) -- line 1686
    if not si.naranja_out then
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        si:current_setup(si_frgms)
        manny:play_chore(mc_use_obj, "mc.cos")
        manny:wait_for_chore()
        toto:say_line("/sito146a/")
        toto:wait_for_message()
        toto:say_line("/sito146b/")
        toto:wait_for_message()
        toto:say_line("/sito146c/")
        END_CUT_SCENE()
    end
end
si.toto_obj.use_pass = function(arg1) -- line 1702
    si.interrupt_toto()
    toto:say_line("/sito147/")
    si.toto_resume()
end
si.toto_obj.use_opener = function(arg1) -- line 1708
    si.interrupt_toto()
    toto:say_line("/sito148a/")
    toto:wait_for_message()
    toto:say_line("/sito148b/")
    si.toto_resume()
end
si.toto_obj.use_book = function(arg1) -- line 1716
    START_CUT_SCENE()
    si.interrupt_toto()
    toto:say_line("/sito149/")
    toto:wait_for_message()
    manny:say_line("/sima150/")
    manny:wait_for_message()
    toto:say_line("/sito151/")
    END_CUT_SCENE()
    si.toto_resume()
end
si.toto_obj.use_case = function(arg1) -- line 1729
    si.interrupt_toto()
    toto:say_line("/sito152/")
    si.toto_resume()
end
si.toto_obj.use_lengua = function(arg1) -- line 1735
    si.interrupt_toto()
    toto:say_line("/sito153a/")
    toto:wait_for_message()
    toto:say_line("/sito153b/")
    si.toto_resume()
end
si.toto_obj.use_anything_else = function(arg1) -- line 1743
    si.interrupt_toto()
    toto:say_line("/sito154/")
    si.toto_resume()
end
si.toto_obj.use_paper = function(arg1) -- line 1749
    if si.naranja_out then
        if not si.got_photofinish then
            si.got_photofinish = TRUE
            si:get_photofinish()
        else
            system.default_response("shed light")
        end
    else
        toto:say_line("/sito130a/")
        toto:wait_for_message()
        toto:say_line("/sito130b/")
    end
end
si.toto_resume = function() -- line 1764
    toto:wait_for_message()
    toto:head_look_at(nil)
    if si.naranja_out then
        start_script(si.toto_on_phone)
    end
end
si.scrimshaw_apparatus = Object:create(si, "/sitx183/stuff", 0.35816801, -0.91463101, 0.1671, { range = 0.60000002 })
si.scrimshaw_apparatus.use_pnt_x = 0.268332
si.scrimshaw_apparatus.use_pnt_y = -1.12954
si.scrimshaw_apparatus.use_pnt_z = 0
si.scrimshaw_apparatus.use_rot_x = 0
si.scrimshaw_apparatus.use_rot_y = 337.784
si.scrimshaw_apparatus.use_rot_z = 0
si.scrimshaw_apparatus.touchable = FALSE
si.scrimshaw_apparatus.lookAt = function(arg1) -- line 1782
    manny:say_line("/sima001/")
end
si.scrimshaw_apparatus.pickUp = function(arg1) -- line 1786
    si.interrupt_toto(TRUE)
end
si.scrimshaw_apparatus.use = function(arg1) -- line 1790
    si.interrupt_toto(TRUE)
end
si.ladder = Object:create(si, "/sitx155/ladder", -0.21371999, -0.0583, 0.80000001, { range = 1 })
si.ladder.use_pnt_x = -0.22
si.ladder.use_pnt_y = -0.221
si.ladder.use_pnt_z = 0
si.ladder.use_rot_x = 0
si.ladder.use_rot_y = 0.093383797
si.ladder.use_rot_z = 0
si.bottom = si.ladder
si.ladder.use = si.ladder.walkOut
si.ladder.walkOut = function(arg1) -- line 1808
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    if manny.is_holding then
        put_away_held_item()
    end
    manny:start_climb_ladder()
    manny:climb_up()
    manny:climb_up()
    manny:stop_climb_ladder()
    END_CUT_SCENE()
    se:come_out_door(se.si_door)
end
si.ladder.lookAt = function(arg1) -- line 1824
    manny:say_line("/sima156/")
end
si.ladder.pickUp = function(arg1) -- line 1828
    system.default_response("not portable")
end
si.binders = Object:create(si, "/sitx157/binders", -0.31986701, -0.81404102, 0.34, { range = 0.5 })
si.binders.use_pnt_x = -0.149867
si.binders.use_pnt_y = -0.80404103
si.binders.use_pnt_z = 0
si.binders.use_rot_x = 0
si.binders.use_rot_y = -637.995
si.binders.use_rot_z = 0
si.binders.lookAt = function(arg1) -- line 1840
    soft_script()
    manny:say_line("/sima158/")
    manny:wait_for_message()
    manny:say_line("/sima159/")
    manny:wait_for_message()
    manny:say_line("/sima160/")
end
si.binders.pickUp = function(arg1) -- line 1849
    si.interrupt_toto(TRUE)
end
si.binders.use = si.binders.pickUp
si.booze = Object:create(si, "/sitx162/booze", -0.23999999, -1.03, 0.37, { range = 0.60000002 })
si.booze.use_pnt_x = -0.15000001
si.booze.use_pnt_y = -1.11475
si.booze.use_pnt_z = 0
si.booze.use_rot_x = 0
si.booze.use_rot_y = 63.360298
si.booze.use_rot_z = 0
si.booze.dosed = FALSE
si.booze.lookAt = function(arg1) -- line 1866
    if find_script(si.fridge_motor) then
        arg1:pickUp()
    else
        START_CUT_SCENE()
        manny:say_line("/sima163/")
        if not arg1.seen then
            arg1.seen = TRUE
            manny:wait_for_message()
            naranja:say_line("/sina164/")
            naranja:wait_for_message()
            toto:say_line("/sito165/")
            toto:wait_for_message()
            naranja:say_line("/sina166/")
            naranja:wait_for_message()
            naranja:say_line("/sina167/")
            naranja:wait_for_message()
            toto:say_line("/sito168/")
        end
        END_CUT_SCENE()
    end
end
si.booze.pickUp = function(arg1) -- line 1890
    if si.guys_distracted or find_script(si.fridge_motor) then
        manny:say_line("/sima169/")
    else
        START_CUT_SCENE()
        naranja:say_line("/sina170/")
        naranja:wait_for_message()
        toto:say_line("/sito171/")
        END_CUT_SCENE()
    end
end
si.booze.use_turkey_baster = function(arg1) -- line 1902
    if hk.turkey_baster.full then
        if si.guys_distracted or (si.fridge:is_open() and si.lettuce_crisper:is_open()) then
            cur_puzzle_state[24] = TRUE
            START_CUT_SCENE("no_head")
            local local1 = naranja:getpos()
            manny:head_look_at(local1.x, local1.y, local1.z + 0.60000002)
            while not si.guys_distracted do
                break_here()
            end
            fridge_door:play_chore(1)
            si.lettuce_crisper.interest_actor:complete_chore(1)
            fridge_door:setrot(0, 179.979, 0)
            si.fridge:close()
            si.fridge.parent.close(si.fridge)
            si.lettuce_crisper.parent.close(si.lettuce_crisper)
            arg1.dosed = TRUE
            manny:head_look_at(nil)
            manny:walkto(-0.085999101, -1.18571, 0)
            manny:wait_for_actor()
            manny:setrot(0, 38.629601, 0, TRUE)
            manny:wait_for_actor()
            while si.naranja_pain do
                break_here()
            end
            manny:push_costume("ma_use_baster.cos")
            manny:play_chore(ma_use_baster_use_baster, "ma_use_baster.cos")
            manny:stop_chore(mc_activate_full_baster, "mc.cos")
            manny:stop_chore(mc_hold, "mc.cos")
            start_sfx("tkBstSqt.wav")
            manny:wait_for_chore(ma_use_baster_use_baster, "ma_use_baster.cos")
            manny:stop_chore(ma_use_baster_use_baster, "ma_use_baster.cos")
            manny:pop_costume()
            manny:head_look_at(local1.x, local1.y, local1.z + 0.60000002)
            manny:play_chore_looping(mc_activate_turkey_baster, "mc.cos")
            manny:play_chore_looping(mc_hold, "mc.cos")
            hk.turkey_baster.full = FALSE
            put_away_held_item()
            toto:say_line("/sito066a/")
            toto:wait_for_message()
            toto:say_line("/sito066b/")
            toto:wait_for_message()
            toto:say_line("/sito067/")
            toto:wait_for_message()
            toto:stop_chore(toto_look_fridge)
            toto:play_chore(toto_yell_to_drill)
            toto:wait_for_chore(toto_yell_to_drill)
            manny:head_look_at(nil)
        else
            manny:say_line("/sima172/")
        end
    else
        START_CUT_SCENE()
        manny:say_line("/sima173/")
        manny:wait_for_message()
        manny:say_line("/sima174/")
        END_CUT_SCENE()
    end
end
si.booze.use_rye = function(arg1) -- line 1962
    manny:say_line("/sima175/")
end
si.booze.use_liqueur = si.booze.use_rye
si.booze.use = si.booze.pickUp
si.naranja_obj = Object:create(si, "/sitx176/Sailor", 0.13628, -0.8883, 0.40000001, { range = 0.60000002 })
si.naranja_obj.use_pnt_x = -0.057519201
si.naranja_obj.use_pnt_y = -0.671947
si.naranja_obj.use_pnt_z = 0
si.naranja_obj.use_rot_x = 0
si.naranja_obj.use_rot_y = -122.848
si.naranja_obj.use_rot_z = 0
si.naranja_obj.lookAt = function(arg1) -- line 1979
    manny:say_line("/sima177/")
end
si.naranja_obj.pickUp = function(arg1) -- line 1983
    manny:say_line("/sima178/")
end
si.naranja_obj.use = function(arg1) -- line 1987
    if find_script(si.fridge_motor) then
        START_CUT_SCENE()
        manny:say_line("/sima179/")
        naranja:wait_for_message()
        naranja:say_line("/sina180/")
        END_CUT_SCENE()
    else
        arg1:lookAt()
    end
end
si.photofinish = Object:create(si, "/sitx181/photo", 0, 0, 0, { range = 0 })
si.photofinish.string_name = "photofinish"
si.photofinish.wav = "getCard.wav"
si.photofinish.lookAt = function(arg1) -- line 2004
    START_CUT_SCENE()
    pf:switch_to_set()
    if not arg1.seen then
        arg1.seen = TRUE
        manny:say_line("/sima182/")
        manny:wait_for_message()
    end
    END_CUT_SCENE()
end
si.photofinish.use = si.photofinish.lookAt
si.photofinish.default_response = function(arg1) -- line 2017
    system.default_response("shed light")
end
si_phone_Chore0 = 0
si_phone_obj_Chore0 = 0
skinny_girl_rest = 0
skinny_girl_gesture1 = 1
skinny_girl_gesture1_hold = 2
skinny_girl_gesture2 = 3
skinny_girl_gesture3 = 4
skinny_girl_look_at_olivia = 5
skinny_girl_back_to_rest = 6
sl_hatch_open = 0
sl_hatch_close = 1
sl_hatch_explode = 2
sl_inventory_show_detector = 0
sl_inventory_show_baster = 1
sl_inventory_show_dogtags = 2
sl_inventory_show_salnotes = 3
sl_inventory_show_key = 4
sl_inventory_show_cigcase = 5
sl_inventory_show_gold_bottle = 6
sl_inventory_show_tix_machine = 7
sl_inventory_show_opener = 8
sl_inventory_show_comm_book = 9
sl_inventory_show_hr_pass = 10
sl_inventory_show_n_l_photo = 11
sl_inventory_show_betting_stub = 12
sl_inventory_show_finish_photo = 13
sl_inventory_show_lengua = 14
sl_inventory_show_union_card = 15
sl_inventory_show_scythe = 16
slisko_rest = 0
slisko_gesture1 = 1
slisko_point_hold = 2
slisko_point = 3
slisko_gesture2 = 4
slisko_look_at_gunar = 5
slisko_look_hold1 = 6
slisko_gesture3 = 7
slisko_foot_bounce = 8
slisko_look_at_olivia = 9
slisko_look_hold2 = 10
slisko_begin_snap = 11
slisko_snap_cycle = 12
slisko_end_snap = 13
slisko_gesture4 = 14
slisko_hold_hand = 15
slisko_gesture5 = 16
slisko_hold_hand2 = 17
slisko_gesture6 = 18
slisko_gesture7 = 19
slisko_gesture8 = 20
slisko_hold_hand3 = 21
slisko_gesture9 = 22
slisko_begin_to_read = 23
slisko_turn_head = 24
slisko_head_hold = 25
slisko_return_to_read = 26
slisko_return_rest = 27
slisko_back_to_rest = 28
slisko_talk_to_the_hand = 29
slisko_mumble = 30
slisko_m = 31
slisko_c = 32
slisko_u = 33
slisko_o = 34
slisko_a = 35
slisko_f = 36
slisko_e = 37
slisko_l = 38
slisko_t = 39
slisko_meshes_show_everything = 0
slisko_meshes_just_foot = 1
slisko_meshes_just_head = 2
slisko_meshes_all_but_foot = 3
slisko_meshes_all_but_head = 4
slisko_meshes_all_but_head_foot = 5
slisko_meshes_all_but_r_arm_head = 6
slisko_meshes_just_r_arm_and_head = 7
slisko_meshes_just_head_foot = 8
sl_light_red = 0
sl_light_green = 1
CheckFirstTime("sl.lua")
sl = Set:create("sl.set", "shuttle security", { sl_intha = 0, sl_intha1 = 0, sl_diams = 1, sl_intws = 2, sl_winha = 3, sl_ovrhd = 4 })
dofile("carla_moods.lua")
dofile("manny_lunge.lua")
dofile("ma_charmer.lua")
dofile("ca_detonate.lua")
dofile("sl_inventory.lua")
dofile("mc_fishout_key.lua")
dofile("sl_light.lua")
sl.item = { }
sl.item.init = function(arg1) -- line 27
    sl.item.orient_table = { }
    sl.item.orient_table[0] = { }
    sl.item.orient_table[0].pos = { x = 0.502289, y = -0.519764, z = 0.2192 }
    sl.item.orient_table[0].rot = { x = 102, y = 96, z = 0 }
    sl.item.orient_table[0].item = sl.detector
    sl.item.orient_table[1] = { }
    sl.item.orient_table[1].pos = { x = 0.585489, y = -0.571464, z = 0.2192 }
    sl.item.orient_table[1].rot = { x = 102, y = 70, z = 0 }
    sl.item.orient_table[1].item = hk.turkey_baster
    sl.item.orient_table[2] = { }
    sl.item.orient_table[2].pos = { x = 0.553489, y = -0.619464, z = 0.2086 }
    sl.item.orient_table[2].rot = { x = 94, y = 46, z = 0 }
    sl.item.orient_table[2].item = si.dog_tags
    sl.item.orient_table[3] = { }
    sl.item.orient_table[3].pos = { x = 0.523089, y = -0.622164, z = 0.2086 }
    sl.item.orient_table[3].rot = { x = 94, y = 94, z = 0 }
    sl.item.orient_table[3].item = cf.letters
    sl.item.orient_table[4] = { }
    sl.item.orient_table[4].pos = { x = 0.564089, y = -0.690864, z = 0.2089 }
    sl.item.orient_table[4].rot = { x = 94, y = 246, z = 0 }
    sl.item.orient_table[4].item = sl.key
    sl.item.orient_table[5] = { }
    sl.item.orient_table[5].pos = { x = 0.543989, y = -0.713664, z = 0.2523 }
    sl.item.orient_table[5].rot = { x = 142, y = 278, z = 88 }
    sl.item.orient_table[5].item = hl.case
    sl.item.orient_table[6] = { }
    sl.item.orient_table[6].pos = { x = 0.566989, y = -0.633065, z = 0.2912 }
    sl.item.orient_table[6].rot = { x = 176, y = 402, z = 540 }
    sl.item.orient_table[6].item = ci.liqueur
    sl.item.orient_table[7] = { }
    sl.item.orient_table[7].pos = { x = 0.452389, y = -0.752765, z = 0.2386 }
    sl.item.orient_table[7].rot = { x = 94, y = 416, z = 440 }
    sl.item.orient_table[7].item = cn.printer
    sl.item.orient_table[8] = { }
    sl.item.orient_table[8].pos = { x = 0.545789, y = -0.711765, z = 0.2386 }
    sl.item.orient_table[8].rot = { x = 134, y = 416, z = 440 }
    sl.item.orient_table[8].item = ks.opener
    sl.item.orient_table[9] = { }
    sl.item.orient_table[9].pos = { x = 0.638889, y = -0.806265, z = 0.243 }
    sl.item.orient_table[9].rot = { x = 188, y = 412, z = 364 }
    sl.item.orient_table[9].item = bi.book
    sl.item.orient_table[10] = { }
    sl.item.orient_table[10].pos = { x = 0.51419, y = -0.736465, z = 0.2321 }
    sl.item.orient_table[10].rot = { x = 96, y = 412, z = 364 }
    sl.item.orient_table[10].item = cn.pass
    sl.item.orient_table[11] = { }
    sl.item.orient_table[11].pos = { x = 0.63329, y = -0.751765, z = 0.1258 }
    sl.item.orient_table[11].rot = { x = 86, y = 412, z = 364 }
    sl.item.orient_table[11].item = tb.blackmail_photo
    sl.item.orient_table[12] = { }
    sl.item.orient_table[12].pos = { x = 0.66149, y = -0.739365, z = 0.232 }
    sl.item.orient_table[12].rot = { x = -352, y = 386, z = 364 }
    sl.item.orient_table[12].item = cn.ticket
    sl.item.orient_table[13] = { }
    sl.item.orient_table[13].pos = { x = 0.64539, y = -0.788866, z = 0.2458 }
    sl.item.orient_table[13].rot = { x = -338, y = 384, z = 446 }
    sl.item.orient_table[13].item = si.photofinish
    sl.item.orient_table[14] = { }
    sl.item.orient_table[14].pos = { x = 0.556889, y = -0.775564, z = 0.1787 }
    sl.item.orient_table[14].rot = { x = -324, y = 384, z = 446 }
    sl.item.orient_table[14].item = lx.lengua
    sl.item.orient_table[15] = { }
    sl.item.orient_table[15].pos = { x = 0.687089, y = -0.886864, z = 0.189 }
    sl.item.orient_table[15].rot = { x = -328, y = 384, z = 446 }
    sl.item.orient_table[15].item = hh.union_card
    sl.item.orient_table[16] = { }
    sl.item.orient_table[16].pos = { x = 0.560711, y = -0.505745, z = 0.291 }
    sl.item.orient_table[16].rot = { x = 0, y = 32.8603, z = 0 }
    sl.item.orient_table[16].item = mo.scythe
end
sl.draw_manny_inventory = function(arg1) -- line 116
    local local1, local2
    sl.item:init()
    local1 = 0
    while sl.item.orient_table[local1] do
        local2 = sl.item.orient_table[local1]
        if local2.item.owner == manny then
            if not local2.actor then
                local2.actor = Actor:create(nil, nil, nil, "inventory item")
            end
            local2.actor:set_costume("sl_inventory.cos")
            local2.actor:put_in_set(sl)
            local2.actor:complete_chore(local1)
            local2.actor:setpos(local2.pos.x, local2.pos.y, local2.pos.z)
            local2.actor:setrot(local2.rot.x, local2.rot.y, local2.rot.z)
        end
        local1 = local1 + 1
    end
end
sl.remove_manny_inventory = function(arg1) -- line 138
    local local1, local2
    local1 = 0
    while sl.item.orient_table[local1] do
        local2 = sl.item.orient_table[local1]
        if local2.actor then
            local2.actor:set_costume(nil)
            local2.actor:put_in_set(nil)
        end
        local1 = local1 + 1
    end
end
carla.walkto = function(arg1, arg2, arg3, arg4, arg5, arg6, arg7) -- line 157
    arg1:stop_chore(carla_stand_hold, sl.search_cos)
    arg1:play_chore_looping(carla_walk, sl.search_cos)
    Actor.walkto(arg1, arg2, arg3, arg4)
    while arg1:is_moving() do
        break_here()
    end
    if arg5 then
        arg1:setrot(arg5, arg6, arg7, TRUE)
        arg1:wait_for_actor()
    end
    arg1:stop_chore(carla_walk, sl.search_cos)
    arg1:play_chore(carla_stand_hold, sl.search_cos)
end
sl.blow_up_case = function() -- line 173
    sl.bomb_detonated = TRUE
    hl.case:put_in_limbo()
    sl.key:get()
    music_state:set_state(stateSL_BOMB)
    START_CUT_SCENE()
    manny:head_look_at(sl.carla_obj)
    carla:stop_chore(carla_stand_hold, sl.search_cos)
    carla:set_time_scale(1.2)
    carla:play_chore(carla_hide_detector, sl.search_cos)
    carla:push_costume("ca_detonate.cos")
    carla:play_chore(ca_detonate_detonate)
    manny:stop_chore(mc_hold, "mc.cos")
    manny:set_time_scale(1.2)
    manny:play_chore(mc_give_item, "mc.cos")
    sleep_for(1100)
    start_sfx("slHndCse.wav")
    sleep_for(300)
    manny.is_holding = nil
    manny:stop_chore(mc_activate_cigcase, "mc.cos")
    manny:set_time_scale(1)
    carla:set_time_scale(1)
    manny:fade_out_chore(mc_give_item, "mc.cos", 500)
    sleep_for(2067)
    manny:head_look_at_point(0.58319, -0.79361, 0.24)
    start_script(sl.safe.play_open_and_close, sl.safe, 1000)
    sleep_for(3100)
    start_sfx("cigCsExp.WAV")
    sleep_for(50)
    music_state:update()
    start_script(sl.safe.play_explode, sl.safe)
    sleep_for(1467)
    start_script(sl.safe.play_open_and_close, sl.safe, 1000)
    sleep_for(2000)
    carla:say_line("/slca180/")
    carla:wait_for_message()
    manny:head_look_at(nil)
    carla:say_line("/slca181/")
    carla:wait_for_message()
    carla:head_look_at_point(0.58319, -0.79361, 0.24)
    carla:say_line("/slca182/")
    sleep_for(500)
    manny:head_look_at_point(0.58319, -0.79361, 0.24)
    carla:wait_for_message()
    carla:wait_for_chore()
    manny:push_costume("mc_fishout_key.cos")
    manny:head_look_at(nil)
    manny:play_chore(mc_fishout_key_fishout_key, "mc_fishout_key.cos")
    carla:say_line("/slca183/")
    sleep_for(533)
    carla:play_chore(ca_detonate_hide_bucket, "ca_detonate.cos")
    carla:wait_for_message()
    carla:head_look_at(nil)
    manny:wait_for_chore(mc_fishout_key_fishout_key, "mc_fishout_key.cos")
    manny:play_chore(mc_fishout_key_lookat_key, "mc_fishout_key.cos")
    manny:say_line("/slma184/")
    manny:wait_for_chore(mc_fishout_key_lookat_key, "mc_fishout_key.cos")
    manny:play_chore(mc_fishout_key_lookat_key_hold, "mc_fishout_key.cos")
    manny:wait_for_message()
    if sl.carla_scorned then
        carla:say_line("/slca185/")
    else
        carla:say_line("/slca186/")
    end
    manny:head_look_at(nil)
    manny:play_chore(mc_fishout_key_key_idle, "mc_fishout_key.cos")
    manny:wait_for_chore(mc_fishout_key_key_idle, "mc_fishout_key.cos")
    carla:wait_for_message()
    if not sl.bucket_actor then
        sl.bucket_actor = Actor:create(nil, nil, nil, "bucket")
    end
    sl.bucket_actor:put_in_set(sl)
    sl.bucket_actor:set_costume(nil)
    sl.bucket_actor:set_costume("mc_fishout_key.cos")
    sl.bucket_actor:play_chore(mc_fishout_key_key_basket_end, "mc_fishout_key.cos")
    sl.bucket_actor:put_at_object(sl.carla_obj)
    manny:pop_costume()
    manny:generic_pickup(sl.key)
    manny:head_look_at(nil)
    manny:walkto(-1.24249, 1.0503, -0.517538, 0, 359.056, 0)
    manny:wait_for_actor()
    gt:switch_to_set()
    manny:put_in_set(gt)
    manny:setpos(-1.27368, 6.07243, 19.7)
    manny:setrot(0, 265.643, 0)
    gt:force_camerachange()
    manny:walkto(-0.641409, 6.04704, 19.51, 0, 268.699, 0)
    END_CUT_SCENE()
    music_state:update()
end
sl.search_manny = function() -- line 272
    if manny.golden then
        stop_script(ci.liqueur.timer)
    end
    START_CUT_SCENE()
    start_script(sl.flash_gate_light, sl)
    stop_script(sl.carla_idle)
    sleep_for(500)
    if not sl.carla_scorned then
        sl.detector.actor:hide()
        start_script(carla.stand_up, carla)
    end
    if not sl.searched and not sl.carla_scorned then
        sl.searched = TRUE
        carla:say_line("/slca187/")
    end
    manny:setrot(0, -1228.67, 0, TRUE)
    wait_for_script(carla.stand_up)
    if not sl.carla_scorned then
        MakeSectorActive("carlawalk1", TRUE)
        carla:follow_boxes()
        carla:stop_chore(carla_stand_hold, sl.search_cos)
        carla:walkto(0.00688933, -0.983964, 0, 0, 310, 0)
        carla:wait_for_actor()
        carla:wait_for_message()
        enable_head_control(FALSE)
        carla:play_chore(carla_stand_hold, sl.search_cos)
        carla:say_line("/slca188/")
        sleep_for(1000)
        carla:setrot(0, 310, 0, TRUE)
        manny:walkto(0.198736, -0.710569, 0, 0, 170.362, 0)
        carla:wait_for_message()
        manny:wait_for_actor()
        carla:wait_for_actor()
    else
        carla:say_line("/slca188/")
        sleep_for(1000)
        start_script(manny.walk_and_face, manny, 0.248381, -0.5268, 0, 0, 275.391, 0)
        manny:head_look_at(sl.carla_obj)
        carla:wait_for_message()
        carla:say_line("/slca189/")
        carla:wait_for_message()
        manny:hand_gesture()
        manny:say_line("/slma190/")
        manny:wait_for_message()
        manny:head_look_at(nil)
    end
    END_CUT_SCENE()
    if not sl.carla_scorned then
        START_CUT_SCENE()
        if manny.is_holding then
            manny.is_holding:put_away()
        else
            manny:play_chore(mc_takeout_get, "mc.cos")
            manny:wait_for_chore()
        end
        IrisDown(225, 180, 700)
        sleep_for(1000)
        sl:draw_manny_inventory()
        manny:stop_chore(mc_takeout_get, "mc.cos")
        manny:push_costume("ma_charmer.cos")
        manny:play_chore(ma_charmer_searched, "ma_charmer.cos")
        if not manny.golden then
            carla:stop_chore(carla_stand_hold, sl.search_cos)
            carla:play_chore(carla_srch_mc, sl.search_cos)
            IrisUp(350, 250, 700)
            sleep_for(700)
            carla:wait_for_chore(carla_srch_mc, sl.search_cos)
            manny:wait_for_chore(ma_charmer_searched, "ma_charmer.cos")
            manny:pop_costume()
        end
        END_CUT_SCENE()
        if manny.golden then
            START_CUT_SCENE()
            carla:stop_chore(carla_stand_hold, sl.search_cos)
            carla:play_chore(carla_srch_shrg, sl.search_cos)
            IrisUp(350, 250, 700)
            sleep_for(1700)
            start_sfx("mdBeep.IMU")
            sleep_for(1500)
            stop_sound("mdBeep.IMU")
            sleep_for(800)
            carla:say_line("/slca191/")
            carla:wait_for_chore(carla_srch_shrg, sl.search_cos)
            manny:wait_for_chore(ma_charmer_searched, "ma_charmer.cos")
            carla:wait_for_message()
            manny:pop_costume()
            manny:twist_head_gesture()
            manny:say_line("/slma192/")
            manny:wait_for_message()
            carla:stop_chore(carla_srch_shrg, sl.search_cos)
            carla:play_chore(carla_show_detector, sl.search_cos)
            carla:say_line("/slca193/")
            carla:walkto(0.054836, -0.850169, 0, 0, 310.009, 0)
            carla:wait_for_actor()
            carla:stop_chore(carla_stand_hold, sl.search_cos)
            carla:play_chore(carla_says_turn, sl.search_cos)
            carla:wait_for_message()
            carla:wait_for_chore(carla_says_turn, sl.search_cos)
            manny:shrug_gesture()
            manny:say_line("/slma194/")
            manny:wait_for_message()
            manny:run_chore(mc_belch, "mc.cos")
            manny:stop_chore(mc_belch, "mc.cos")
            manny:shut_up()
            END_CUT_SCENE()
            sl:remove_manny_inventory()
            carla:stop_chore()
            carla:ignore_boxes()
            carla:head_look_at(nil)
            MakeSectorActive("carlawalk1", FALSE)
            Dialog:run("ca2", "dlg_car2.lua")
        else
            START_CUT_SCENE()
            carla:say_line("/slca196/")
            carla:wait_for_message()
            IrisDown(225, 180, 700)
            sleep_for(1000)
            sl:remove_manny_inventory()
            carla:stop_chore()
            carla:ignore_boxes()
            MakeSectorActive("carlawalk1", FALSE)
            carla:set_softimage_pos(9.1847, 0.1254, 7.5366)
            carla:setrot(0, 31.513, 0)
            carla:play_chore_looping(carla_sit_hold, sl.search_cos)
            carla:play_chore(carla_hide_detector, sl.search_cos)
            sl.detector.actor:show()
            carla.idle_state = "sit"
            manny:setrot(0, 283.584, 0)
            manny:head_look_at(sl.carla_obj)
            IrisUp(495, 230, 700)
            sleep_for(700)
            carla:say_line("/slca197/")
            carla:wait_for_message()
            start_script(sl.carla_idle, sl)
            END_CUT_SCENE()
        end
    else
        start_script(sl.carla_idle, sl)
    end
end
sl.flash_gate_light = function(arg1) -- line 435
    local local1
    start_sfx("slAlarm.WAV")
    local1 = 0
    while local1 < 2000 do
        sl.gate:complete_chore(0, "sl_light.cos")
        break_here()
        local1 = local1 + system.frameTime
        break_here()
        local1 = local1 + system.frameTime
        sl.gate:complete_chore(1, "sl_light.cos")
        break_here()
        local1 = local1 + system.frameTime
        break_here()
        local1 = local1 + system.frameTime
    end
end
carla.costume_marker_handler = function(arg1, arg2) -- line 454
    if arg2 == Actor.MARKER_LEFT_WALK or arg2 == Actor.MARKER_RIGHT_WALK then
        arg1:play_default_footstep(arg2, arg1.footsteps)
    end
end
sl.set_up_actors = function(arg1) -- line 460
    sl.search_cos = "carla_srch_chrm.cos"
    sl.cry_cos = "carla_cry.cos"
    carla:set_costume(nil)
    carla:set_costume(sl.cry_cos)
    carla:set_mumble_chore(carla_cry_mumble)
    carla:set_talk_chore(1, carla_cry_stop_talk)
    carla:set_talk_chore(2, carla_cry_a)
    carla:set_talk_chore(3, carla_cry_c)
    carla:set_talk_chore(4, carla_cry_e)
    carla:set_talk_chore(5, carla_cry_f)
    carla:set_talk_chore(6, carla_cry_l)
    carla:set_talk_chore(7, carla_cry_m)
    carla:set_talk_chore(8, carla_cry_o)
    carla:set_talk_chore(9, carla_cry_t)
    carla:set_talk_chore(10, carla_cry_u)
    carla:set_head(3, 4, 5, 165, 28, 80)
    carla:set_look_rate(110)
    carla:push_costume(sl.search_cos)
    carla:set_walk_chore(-1)
    carla:set_walk_rate(0.39)
    carla:set_turn_rate(170)
    carla:put_in_set(sl)
    carla:ignore_boxes()
    carla:set_softimage_pos(9.1847, 0.1254, 7.5366)
    carla:setrot(0, 31.513, 0)
    carla.footsteps = footsteps.marble
    carla:play_chore_looping(carla_sit_hold, sl.search_cos)
    carla.idle_state = "sit"
    if sl.detector.touchable then
        sl.detector.actor:show()
    else
        sl.detector.actor:hide()
    end
    start_script(sl.carla_idle)
end
sl.carla_idle = function(arg1) -- line 501
    while TRUE do
        sleep_for(rndint(5000, 8000))
        if rnd(6) and carla.idle_state == "prop" then
            carla:prop_tilt_head()
            sleep_for(rndint(5000, 8000))
            carla:prop_end_tilt_head()
        elseif rnd(8) then
            if carla.idle_state == "sit" then
                carla:go_to_prop()
            elseif carla.idle_state == "prop" then
                carla:go_to_sit()
            end
        end
    end
end
sl.carla_drinks_liqueur = function(arg1) -- line 519
    carla:say_line("/slca256/")
end
sl.carla_storm_out = function(arg1) -- line 523
    local local1, local2
    carla:setpos(1.04081, 0.332219, 0)
    carla:setrot(0, 200.013, 0)
    carla:stop_chore(carla_stand_hold, sl.search_cos)
    carla:ignore_boxes()
    local1 = 0
    carla:play_chore_looping(carla_walk, sl.search_cos)
    while local1 < 6000 do
        WalkActorForward(carla.hActor)
        break_here()
        local1 = local1 + system.frameTime
        local2 = carla:getpos()
        manny:head_look_at_point(local2.x, local2.y, local2.z + 0.40000001)
    end
    carla:stop_chore(carla_walk, sl.search_cos)
    carla:stop_chore(carla_stand_hold, sl.search_cos)
    carla:set_softimage_pos(9.1847, 0.12540001, 7.5366001)
    carla:setrot(0, 31.513, 0)
    carla:play_chore_looping(carla_sit_hold, sl.search_cos)
    sl.carla_scorned = TRUE
    carla.idle_state = "sit"
    start_script(sl.carla_idle, sl)
end
sl.manny_lunge_gesture1 = function(arg1) -- line 554
    manny:play_chore(manny_lunge_wait, "manny_lunge.cos")
    manny:wait_for_chore(manny_lunge_wait, "manny_lunge.cos")
    manny:stop_chore(manny_lunge_wait, "manny_lunge.cos")
    manny:play_chore(manny_lunge_sit, "manny_lunge.cos")
end
sl.manny_lunge_gesture2 = function(arg1) -- line 561
    manny:play_chore(manny_lunge_gesture, "manny_lunge.cos")
    manny:wait_for_chore(manny_lunge_gesture, "manny_lunge.cos")
    manny:stop_chore(manny_lunge_gesture, "manny_lunge.cos")
    manny:play_chore(manny_lunge_sit, "manny_lunge.cos")
end
manny.charm_point_gesture = function(arg1) -- line 568
    start_script(arg1.play_charm_gesture, arg1, ma_charmer_gesture)
end
manny.charm_nod_gesture = function(arg1) -- line 572
    start_script(arg1.play_charm_gesture, arg1, ma_charmer_head_nod_loop)
end
manny.play_charm_gesture = function(arg1, arg2) -- line 576
    arg1:play_chore(arg2, "ma_charmer.cos")
    arg1:wait_for_chore(arg2, "ma_charmer.cos")
    if arg2 == ma_charmer_gesture then
        arg1:play_chore(ma_charmer_hand_to_chin2, "ma_charmer.cos")
        arg1:wait_for_chore(ma_charmer_hand_to_chin2, "ma_charmer.cos")
    else
        arg1:stop_chore(arg2, "ma_charmer.cos")
    end
end
sl.enter = function(arg1) -- line 593
    sl:set_up_actors()
    if system.lastSet ~= gt then
        MakeSectorActive("intro_trigger", FALSE)
    elseif not sl.intro_trigger.seen then
        MakeSectorActive("intro_trigger", TRUE)
    end
    if hl.case.owner == manny then
        NewObjectState(sl_intha, OBJSTATE_STATE, "sl_hatch.bm", "sl_hatch.zbm")
        sl.safe:set_object_state("sl_hatch.cos")
    end
    NewObjectState(sl_intha, OBJSTATE_UNDERLAY, "sl_light.bm")
    sl.gate:set_object_state("sl_light.cos")
end
sl.exit = function(arg1) -- line 608
    stop_script(sl.carla_idle)
    carla:free()
    if sl.bucket_actor then
        sl.bucket_actor:free()
    end
end
sl.intro_trigger = { }
sl.intro_trigger.walkOut = function(arg1) -- line 625
    if not sl.intro_trigger.seen and system.lastSet == gt then
        sl.intro_trigger.seen = TRUE
        MakeSectorActive("intro_trigger", FALSE)
        stop_script(sl.carla_idle)
        START_CUT_SCENE("no head")
        set_override(sl.intro_trigger.skip_walkout, sl.intro_trigger)
        start_script(carla.go_to_prop, carla)
        carla:say_line("/slca198/")
        manny:walkto(-0.140429, -1.01301, 0)
        manny:wait_for_actor()
        manny:setrot(0, -794.132, 0, TRUE)
        manny:head_look_at(sl.carla_obj)
        carla:wait_for_message()
        manny:shrug_gesture()
        manny:say_line("/slma199/")
        wait_for_script(carla.go_to_prop)
        manny:wait_for_message()
        carla:prop_tilt_head()
        carla:say_line("/slca200/")
        carla:wait_for_message()
        carla:prop_end_tilt_head()
        carla:say_line("/slca201/")
        carla:wait_for_message()
        manny:head_look_at(nil)
        enable_head_control(TRUE)
        END_CUT_SCENE()
        start_script(sl.carla_idle)
    end
end
sl.intro_trigger.skip_walkout = function(arg1) -- line 658
    kill_override()
    manny:setpos(-0.140429, -1.01301, 0)
    manny:setrot(0, -794.132, 0)
    manny:head_look_at(nil)
    enable_head_control(TRUE)
    single_start_script(sl.carla_idle)
end
sl.key = Object:create(sl, "/sltx202/skeleton key", 0, 0, 0, { range = 0 })
sl.key.string_name = "key"
sl.key.wav = "getmekey.wav"
sl.key.lookAt = function(arg1) -- line 672
    manny:say_line("/slma203/")
end
sl.key.use = sl.key.lookAt
sl.key.default_response = function(arg1) -- line 678
    manny:say_line("/slma204/")
end
sl.detector = Object:create(sl, "/sltx207/metal detector", 0.67886001, -0.69790399, 0.26199999, { range = 0.60000002 })
sl.detector.string_name = "detector"
sl.detector.use_pnt_x = 0.374879
sl.detector.use_pnt_y = -0.62381101
sl.detector.use_pnt_z = 0
sl.detector.use_rot_x = 0
sl.detector.use_rot_y = -473.388
sl.detector.use_rot_z = 0
sl.detector.wav = "getMetl.wav"
sl.detector.lookAt = function(arg1) -- line 695
    if arg1.owner == manny then
        manny:say_line("/slma208/")
    else
        manny:say_line("/slma209/")
        manny:wait_for_message()
        carla:say_line("/slca210/")
    end
end
sl.detector.pickUp = function(arg1) -- line 705
    if not sl.talked_detectors then
        if manny:walkto_object(sl.carla_obj) then
            Dialog:run("ca1", "dlg_carla.lua", "detector")
        end
    elseif manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:play_chore(mc_hand_on_obj, "mc.cos")
        manny:say_line("/slma211/")
        sleep_for(1500)
        FadeOutChore(manny.hActor, "mc.cos", mc_hand_on_obj, 500)
        carla:say_line("/slca212/")
        END_CUT_SCENE()
    end
end
sl.detector.use = function(arg1) -- line 723
    if arg1.owner == manny then
        START_CUT_SCENE()
        start_sfx("mdBeep.IMU")
        manny:say_line("/slma213/")
        manny:wait_for_message()
        stop_sound("mdBeep.IMU")
        END_CUT_SCENE()
    else
        arg1:pickUp()
    end
end
sl.detector.actor = Actor:create(nil, nil, nil, "metal detector")
sl.detector.actor.show = function(arg1) -- line 740
    if not arg1.initialized then
        arg1.initialized = TRUE
        arg1:set_costume("carla_srch_chrm.cos")
    end
    arg1:play_chore_looping(carla_detector_only)
    arg1:put_in_set(sl)
    arg1:set_softimage_pos(9.1847, 0.1254, 7.5366)
    arg1:setrot(0, 31.513, 0)
    arg1:set_visibility(TRUE)
end
sl.detector.actor.hide = function(arg1) -- line 752
    arg1:set_visibility(FALSE)
end
sl.escalator_box = Object:create(sl, "/sltx214/escalator box", 0, 0, 0, { range = 0 })
sl.escalator_box.walkOut = function(arg1) -- line 760
    if not sl.escalator_box.tried then
        START_CUT_SCENE()
        sl.escalator_box.tried = TRUE
        carla:say_line("/slca215/")
        carla:wait_for_message()
        manny:say_line("/slma216/")
        manny:wait_for_message()
        carla:say_line("/slca217/")
        carla:wait_for_message()
        manny:say_line("/slma218/")
        manny:wait_for_message()
        END_CUT_SCENE()
    end
    START_CUT_SCENE()
    carla:say_line("/slca219/")
    carla:wait_for_message()
    carla:say_line("/slca220/")
    END_CUT_SCENE()
end
sl.detector_box = Object:create(sl, "/sltx221/metal detector", 0, 0, 0, { range = 0 })
sl.detector_box.walkOut = function(arg1) -- line 783
    start_script(sl.search_manny)
end
sl.carla_obj = Object:create(sl, "/sltx222/Carla", 0.838404, -0.54134703, 0.34999999, { range = 0.69999999 })
sl.carla_obj.use_pnt_x = 0.37193999
sl.carla_obj.use_pnt_y = -0.61785001
sl.carla_obj.use_pnt_z = 0
sl.carla_obj.use_rot_x = 0
sl.carla_obj.use_rot_y = 270
sl.carla_obj.use_rot_z = 0
sl.carla_obj.lookAt = function(arg1) -- line 795
    manny:say_line("/slma223/")
end
sl.carla_obj.use = function(arg1) -- line 799
    if sl.carla_scorned then
        if not sl.detector.in_catbox then
            if manny:walkto_object(arg1) then
                START_CUT_SCENE()
                sl:current_setup(sl_diams)
                manny:push_costume("ma_charmer.cos")
                manny:play_chore(ma_charmer_start_charm, "ma_charmer.cos")
                start_script(carla.go_to_prop, carla)
                manny:wait_for_chore(ma_charmer_start_charm, "ma_charmer.cos")
                manny:stop_chore(ma_charmer_start_charm, "ma_charmer.cos")
                manny:play_chore(ma_charmer_hand_to_chin2, "ma_charmer.cos")
                manny:wait_for_chore(ma_charmer_hand_to_chin2, "ma_charmer.cos")
                manny:say_line("/slma224/")
                manny:wait_for_message()
                carla:say_line("/slca225/")
                carla:wait_for_message()
                manny:stop_chore(ma_charmer_hand_to_chin2, "ma_charmer.cos")
                manny:play_chore(ma_charmer_back_to_idle, "ma_charmer.cos")
                manny:wait_for_chore(ma_charmer_back_to_idle, "ma_charmer.cos")
                manny:pop_costume()
                sl:current_setup(sl_intha)
                END_CUT_SCENE()
            end
        else
            manny:say_line("/slma226/")
            manny:wait_for_message()
            carla:say_line("/slca227/")
        end
    elseif manny:walkto_object(arg1) then
        Dialog:run("ca1", "dlg_carla.lua")
    end
end
sl.carla_obj.use_cigcase = function(arg1) -- line 837
    if manny:walkto_object(arg1) then
        Dialog:run("bo1", "dlg_bomb.lua")
    end
end
sl.carla_obj.use_liqueur = function(arg1) -- line 843
    if not sl.detector.in_catbox then
        start_script(carla.go_to_prop, carla)
        carla:say_line("/slca257/")
    else
        start_script(carla.go_to_sit, carla)
        carla:say_line("/slca258/")
    end
end
sl.carla_obj.pickUp = sl.carla_obj.use
sl.papers = Object:create(sl, "/sltx228/papers", 0.51840401, -0.91134697, 0.28999999, { range = 0.40000001 })
sl.papers.use_pnt_x = 0.375
sl.papers.use_pnt_y = -0.64633
sl.papers.use_pnt_z = 0
sl.papers.use_rot_x = 0
sl.papers.use_rot_y = -182.146
sl.papers.use_rot_z = 0
sl.papers.lookAt = function(arg1) -- line 863
    START_CUT_SCENE()
    manny:say_line("/slma229/")
    manny:wait_for_message()
    END_CUT_SCENE()
    carla:say_line("/slca230/")
end
sl.papers.pickUp = function(arg1) -- line 871
    carla:say_line("/slca231/")
end
sl.papers.use = sl.papers.pickUp
sl.safe = Object:create(sl, "/sltx232/safe", 0.73840398, -0.97134697, 0.0200001, { range = 0.44999999 })
sl.safe.use_pnt_x = 0.56884402
sl.safe.use_pnt_y = -1.06256
sl.safe.use_pnt_z = 0
sl.safe.use_rot_x = 0
sl.safe.use_rot_y = -63.6488
sl.safe.use_rot_z = 0
sl.safe.lookAt = function(arg1) -- line 886
    START_CUT_SCENE()
    if not arg1.seen then
        stop_script(sl.carla_idle)
        arg1.seen = TRUE
        manny:say_line("/slma233/")
        manny:wait_for_message()
        start_script(carla.go_to_sit)
        carla:say_line("/slca234/")
        wait_for_script(carla.go_to_sit)
        carla:wait_for_message()
        manny:say_line("/slma235/")
        manny:wait_for_message()
        carla:say_line("/slca236/")
        start_script(sl.carla_idle)
    else
        manny:say_line("/slma237/")
    end
    END_CUT_SCENE()
end
sl.safe.pickUp = function(arg1) -- line 907
    system.default_response("not portable")
end
sl.safe.use = function(arg1) -- line 911
    system.default_response("locked")
end
sl.safe.play_open_and_close = function(arg1, arg2) -- line 915
    arg1:play_chore(0)
    arg1:wait_for_chore()
    if arg2 then
        sleep_for(arg2)
    end
    arg1:play_chore(1)
    arg1:wait_for_chore()
end
sl.safe.play_explode = function(arg1) -- line 925
    arg1:play_chore(2)
    arg1:wait_for_chore()
end
sl.gate = Object:create(sl, "/sltx238/metal detector", 0.138404, -0.37134701, 0.72000003, { range = 0.74000001 })
sl.gate.use_pnt_x = 0.12059
sl.gate.use_pnt_y = -0.54001898
sl.gate.use_pnt_z = 0
sl.gate.use_rot_x = 0
sl.gate.use_rot_y = -2.8977301
sl.gate.use_rot_z = 0
sl.gate.lookAt = function(arg1) -- line 939
    manny:say_line("/slma239/")
end
sl.gate.pickUp = function(arg1) -- line 943
    system.default_response("not portable")
end
sl.gate.use = function(arg1) -- line 947
    manny:walkto(0.154136, -0.296585, 0)
end
sl.view = Object:create(sl, "/sltx240/view", 2.2633901, 1.1901, -1.4, { range = 1.9 })
sl.view.use_pnt_x = 1.25
sl.view.use_pnt_y = 0.67499799
sl.view.use_pnt_z = 0
sl.view.use_rot_x = 0
sl.view.use_rot_y = -63.568401
sl.view.use_rot_z = 0
sl.view.lookAt = function(arg1) -- line 960
    if sl.detector.in_catbox then
        manny:say_line("/slma241/")
    else
        manny:say_line("/slma242/")
    end
end
sl.view.use = function(arg1) -- line 968
    manny:say_line("/slma243/")
end
sl.lockers = Object:create(sl, "/sltx244/lockers", 1.0822999, 0.86180001, 0.46000001, { range = 0.60000002 })
sl.lockers.use_pnt_x = 0.95897502
sl.lockers.use_pnt_y = 0.58470702
sl.lockers.use_pnt_z = 0
sl.lockers.use_rot_x = 0
sl.lockers.use_rot_y = -379.21301
sl.lockers.use_rot_z = 0
sl.lockers.lookAt = function(arg1) -- line 980
    START_CUT_SCENE()
    manny:say_line("/slma245/")
    manny:wait_for_message()
    END_CUT_SCENE()
    manny:say_line("/slma246/")
    manny:wait_for_message()
    manny:say_line("/slma247/")
end
sl.lockers.use = function(arg1) -- line 990
    START_CUT_SCENE()
    manny:say_line("/slma248/")
    manny:wait_for_message()
    END_CUT_SCENE()
    carla:say_line("/slca249/")
end
sl.they1 = Object:create(sl, "/sltx250/they", 0.468404, -0.881347, 0.81999999, { range = 0 })
sl.they1:make_untouchable()
sl.they2 = Object:create(sl, "/sltx251/they", 0.56840402, -0.28134701, 0.81999999, { range = 0 })
sl.they2:make_untouchable()
sl.gt_door = Object:create(sl, "/sltx252/stairs", -1.1097, 1.47768, -0.38, { range = 1 })
sl.gt_door.use_pnt_x = -1.1999201
sl.gt_door.use_pnt_y = -0.035161398
sl.gt_door.use_pnt_z = 0
sl.gt_door.use_rot_x = 0
sl.gt_door.use_rot_y = 10
sl.gt_door.use_rot_z = 0
sl.gt_door.out_pnt_x = -1.11708
sl.gt_door.out_pnt_y = 0.82613999
sl.gt_door.out_pnt_z = -0.40660501
sl.gt_door.out_rot_x = 0
sl.gt_door.out_rot_y = 7.8907099
sl.gt_door.out_rot_z = 0
sl.gt_box = sl.gt_door
sl.gt_door.lookAt = function(arg1) -- line 1026
    manny:say_line("/slma253/")
end
sl.gt_door.walkOut = function(arg1) -- line 1030
    if sl.detector.in_catbox and not sl.said_goodbye then
        START_CUT_SCENE()
        sl.said_goodbye = TRUE
        manny:say_line("/slma254/")
        manny:wait_for_message()
        start_script(carla.go_to_sit, carla)
        carla:say_line("/slca255/")
        carla:wait_for_message()
        END_CUT_SCENE()
    end
    START_CUT_SCENE()
    gt:switch_to_set()
    gt:current_setup(gt_extst)
    PutActorInSet(system.currentActor.hActor, gt.setFile)
    manny:setpos(-1.55956, 5.7115, 19.8019)
    manny:setrot(0, -357.205, 0)
    SetActorConstrain(manny.hActor, FALSE)
    manny:walkto_object(gt.exit_pt, FALSE)
    END_CUT_SCENE()
end
CheckFirstTime("sm.lua")
sm = Set:create("sm.set", "sm", { sm_smpws = 0, sm_top = 1 })
sm.climb_out_stump = function(arg1) -- line 14
    START_CUT_SCENE()
    manny:head_look_at(nil)
    manny:put_in_set(sm)
    sm:switch_to_set()
    manny:default()
    manny:ignore_boxes()
    manny:setpos(-0.76896, -0.70574, 0.00038)
    manny:setrot(0, 114, 0)
    manny:set_visibility(FALSE)
    manny:push_costume(manny_jump_stump_cos)
    sm.stump:play_chore(0)
    sm.stump:wait_for_chore()
    sm.stump:set_type(OBJSTATE_STATE)
    sm.stump:complete_chore(0)
    manny:set_visibility(TRUE)
    manny:play_chore(0)
    manny:wait_for_chore()
    manny:pop_costume()
    manny:follow_boxes()
    start_script(manny.walk_and_face, manny, -1.1064, -0.600584, 0.02, 0, 17.071, 0)
    manny:say_line("/smma001/")
    manny:wait_for_actor()
    manny:head_look_at(sm.skyline)
    sleep_for(500)
    manny:head_look_at(sm.stump)
    sleep_for(700)
    manny:head_look_at(nil)
    END_CUT_SCENE()
    sm.climbed_out_stump = TRUE
end
sm.enter = function(arg1) -- line 57
    sm.sg_door:make_untouchable()
    sm.stump_hObjectState = sm:add_object_state(sm_smpws, "sm_smpws_top_open.bm", "sm_smpws_top_open.zbm", OBJSTATE_STATE, TRUE)
    sm.stump:set_object_state("sm_stump.cos")
    if sm.climbed_out_stump then
        sm.stump.interest_actor:complete_chore(1)
    end
    if not manny_jump_stump_cos then
        manny_jump_stump_cos = "ma_jump_stump.cos"
    end
    LoadCostume(manny_jump_stump_cos)
    sm:add_ambient_sfx({ "frstCrt1.wav", "frstCrt2.wav", "frstCrt3.wav", "frstCrt4.wav" }, { min_delay = 8000, max_delay = 20000 })
end
sm.exit = function(arg1) -- line 78
    sm.stump_hObjectState = nil
end
sm.skyline = Object:create(sm, "/smtx002/skyline", 2.3892701, 10.4482, 1.11456, { range = 8 })
sm.skyline.use_pnt_x = -0.354
sm.skyline.use_pnt_y = 0.68900001
sm.skyline.use_pnt_z = 0.001
sm.skyline.use_rot_x = 0
sm.skyline.use_rot_y = 1091.48
sm.skyline.use_rot_z = 0
sm.skyline.immediate = TRUE
sm.skyline.lookAt = function(arg1) -- line 96
    soft_script()
    manny:say_line("/smma003/")
    wait_for_message()
    manny:say_line("/smma004/")
end
sm.skyline.use = function(arg1) -- line 103
    manny:say_line("/smma005/")
end
sm.stump = Object:create(sm, "/smtx006/stump", 0.076495104, -0.227853, 1.21, { range = 2 })
sm.stump.use_pnt_x = 0.70499998
sm.stump.use_pnt_y = -0.259
sm.stump.use_pnt_z = 0.001
sm.stump.use_rot_x = 0
sm.stump.use_rot_y = 785.29498
sm.stump.use_rot_z = 0
sm.stump.immediate = TRUE
sm.stump.lookAt = function(arg1) -- line 118
    manny:say_line("/smma007/")
end
sm.stump.use = function(arg1) -- line 122
    START_CUT_SCENE()
    manny:say_line("/smma008/")
    wait_for_message()
    manny:say_line("/smma009/")
    wait_for_message()
    manny:say_line("/smma010/")
    END_CUT_SCENE()
end
sm.sg_door = Object:create(sm, "/smtx012/door", 0.206306, -0.98770398, 0.23, { range = 0.60000002 })
sm.sg_door.use_pnt_x = -0.043693699
sm.sg_door.use_pnt_y = -0.91770399
sm.sg_door.use_pnt_z = 0.02
sm.sg_door.use_rot_x = 0
sm.sg_door.use_rot_y = -473.703
sm.sg_door.use_rot_z = 0
sm.sg_door.out_pnt_x = 0.096015997
sm.sg_door.out_pnt_y = -0.978984
sm.sg_door.out_pnt_z = 0.02
sm.sg_door.out_rot_x = 0
sm.sg_door.out_rot_y = -473.703
sm.sg_door.out_rot_z = 0
sm.sg_box = sm.sg_door
sm.sg_door:make_untouchable()
sm.sg_door.walkOut = function(arg1) -- line 157
    sg:come_out_door(sg.sm_door)
end
sm_stump_Chore0 = 0
sm_stump_opened = 1
sp_fly_generic_hop_loop1 = 0
sp_fly_generic_hop_loop2 = 1
sp_fly_generic_take_off = 2
sp_fly_generic_fly = 3
sp_fly_generic_land = 4
sp_fly_generic_sit = 5
sp_fly_generic_takeoff_land_sequence = 6
sp_fly_generic_idle = 7
sp_glottis_heart_activate_heart_beat = 0
CheckFirstTime("spiders.lua")
dofile("sp_fly_generic.lua")
dofile("sp_idles.lua")
spiders = { }
spider_actors = { }
SPIDER_FLY_SPEED = 0.2
spiders.init_spiders = function(arg1) -- line 27
    local local1 = 0
    local local2
    repeat
        local1 = local1 + 1
        if not spider_actors[local1] then
            spider_actors[local1] = Actor:create(nil, nil, nil, "spider" .. local1)
        end
        spider_actors[local1]:set_costume("sp_idles.cos")
        local2 = 1
        SetActorScale(spider_actors[local1].hActor, local2)
        spider_actors[local1]:set_walk_rate(SPIDER_FLY_SPEED * local2)
        spider_actors[local1]:set_turn_rate(45)
        spider_actors[local1]:follow_boxes()
        spider_actors[local1]:put_in_set(sp)
        spider_actors[local1]:follow_boxes()
        if local1 == 1 then
            spider_actors[1].home_point_x = 0.76620001
            spider_actors[1].home_point_y = -0.71600002
            spider_actors[1].home_point_z = 0.60000002
            spider_actors[1].range_point_x = 0.33950001
            spider_actors[1].range_point_y = -0.89529997
            spider_actors[1].range_point_z = 0.36000001
        elseif local1 == 2 then
            spider_actors[2].home_point_x = 0.59148598
            spider_actors[2].home_point_y = 0.23590399
            spider_actors[2].home_point_z = 0.93000001
            spider_actors[2].range_point_x = 0.33340001
            spider_actors[2].range_point_y = -0.90369999
            spider_actors[2].range_point_z = 0.36000001
        elseif local1 == 3 then
            spider_actors[3].home_point_x = 0.8427
            spider_actors[3].home_point_y = -0.23729999
            spider_actors[3].home_point_z = 0.94
            spider_actors[3].range_point_x = 0.60519999
            spider_actors[3].range_point_y = -0.85949999
            spider_actors[3].range_point_z = 0.64999998
        elseif local1 == 4 then
            spider_actors[4].home_point_x = -0.080814302
            spider_actors[4].home_point_y = -1.32417
            spider_actors[4].home_point_z = 0
            spider_actors[4].range_point_x = -1.16724
            spider_actors[4].range_point_y = -0.85349298
            spider_actors[4].range_point_z = 0
            spider_actors[4]:set_walk_rate(0.40000001)
        elseif local1 == 5 then
            spider_actors[5].home_point_x = -0.43773901
            spider_actors[5].home_point_y = 3.1407599
            spider_actors[5].home_point_z = 1.75
        elseif local1 == 6 then
            spider_actors[6].home_point_x = 1.0272599
            spider_actors[6].home_point_y = 2.52
            spider_actors[6].home_point_z = 1.602
        end
        if local1 > 4 then
            start_script(spiders.prop_spider_ganglia, spider_actors[local1])
        else
            ActorPuckOrient(spider_actors[local1].hActor, TRUE)
            start_script(spiders.spider_ganglia, spider_actors[local1])
        end
    until local1 == arg1
end
spiders.spider_ganglia = function(arg1) -- line 99
    local local1
    local local2
    SetActorReflection(arg1.hActor, 90)
    arg1:setpos(arg1.home_point_x, arg1.home_point_y, arg1.home_point_z)
    while 1 do
        if not find_script(sp.manny_hook_n_fling_web) then
            if arg1 == spider_actors[4] then
                local1 = 1
            else
                local1 = rndint(1, 3)
            end
            if local1 == 1 then
                local2 = start_script(sp.spider_walk, arg1)
                wait_for_script(local2)
            elseif local1 == 2 then
                local2 = start_script(sp.spider_wing, arg1)
                wait_for_script(local2)
            elseif local1 == 3 then
                local2 = start_script(sp.spider_leg, arg1)
                wait_for_script(local2)
            end
        end
        if arg1 == spider_actors[4] then
            sleep_for(1000)
        else
            local2 = rnd(2, 5)
            sleep_for(local2 * 1000)
        end
    end
end
sp.spider_walk = function(arg1) -- line 132
    local local1 = rnd(0.050000001, 0.1)
    local local2 = arg1:getpos()
    local local3 = { }
    local local4 = { }
    local local5 = GetActorWalkRate(arg1.hActor)
    local local6 = start_script(sleep_for, 1)
    local local7
    arg1:stop_chore(sp_idles_idle)
    arg1:play_chore(sp_idles_accelerate)
    while arg1:is_choring(sp_idles_accelerate) do
        if not find_script(local6) then
            local7 = pick_one_of({ "spSktr1.wav", "spSktr2.wav" })
            local6 = start_script(single_start_sfx, local7, IM_LOW_PRIORITY, 20)
        end
        arg1:walk_forward()
        break_here()
    end
    arg1:stop_chore(sp_idles_accelerate)
    local3 = local2
    arg1:play_chore_looping(sp_idles_walk_cycle)
    repeat
        if not find_script(local6) then
            local7 = pick_one_of({ "spSktr1.wav", "spSktr2.wav" })
            local6 = start_script(single_start_sfx, local7, IM_LOW_PRIORITY, 10)
        end
        arg1:walk_forward()
        break_here()
        local2 = arg1:getpos()
        if local2.x == local3.x and local2.y == local3.y and local2.z == local3.z then
            arg1:turn_left(180)
        else
            local3 = local2
        end
        local1 = local1 - PerSecond(local5)
    until local1 <= 0
    arg1:set_chore_looping(sp_idles_walk_cycle, FALSE)
    arg1:wait_for_chore(sp_idles_walk_cycle)
    arg1:stop_chore(sp_idles_walk_cycle)
    arg1:play_chore(sp_idles_decelerate)
    while arg1:is_choring(sp_idles_decelerate) do
        if not find_script(local6) then
            local7 = pick_one_of({ "spSktr1.wav", "spSktr2.wav" })
            local6 = start_script(single_start_sfx, local7, IM_LOW_PRIORITY, 20)
        end
        arg1:walk_forward()
        break_here()
    end
    arg1:stop_chore(sp_idles_decelerate)
    arg1:play_chore_looping(sp_idles_idle)
end
sp.spider_wing = function(arg1) -- line 185
    local local1 = start_script(sleep_for, 1)
    local local2
    local2 = pick_one_of({ "spFlap1.wav", "spFlap2.wav", "spFlap3.wav", "spFlap4.wav", "spFlap5.wav" })
    local1 = start_script(single_start_sfx, local2, IM_LOW_PRIORITY, 20)
    arg1:stop_chore(sp_idles_idle)
    arg1:play_chore(sp_idles_wing_enter)
    arg1:wait_for_chore(sp_idles_wing_enter)
    arg1:stop_chore(sp_idles_wing_enter)
    local local3 = rndint(1, 3)
    arg1:play_chore_looping(sp_idles_wing_cycle)
    arg1:wait_for_chore(sp_idles_wing_cycle)
    repeat
        if not find_script(local1) then
            local2 = pick_one_of({ "spFlap1.wav", "spFlap4.wav", "spFlap5.wav" })
            local1 = start_script(single_start_sfx, local2, IM_LOW_PRIORITY, 10)
        end
        sleep_for(500)
        local3 = local3 - 1
    until local3 <= 0
    arg1:set_chore_looping(sp_idles_wing_cycle, FALSE)
    arg1:wait_for_chore(sp_idles_wing_cycle)
    arg1:stop_chore(sp_idles_wing_cycle)
    arg1:play_chore(sp_idles_wing_exit)
    arg1:wait_for_chore(sp_idles_wing_exit)
    arg1:stop_chore(sp_idles_wing_exit)
    arg1:play_chore_looping(sp_idles_idle)
end
sp.spider_leg = function(arg1) -- line 218
    local local1 = start_script(sleep_for, 1)
    local local2
    arg1:stop_chore(sp_idles_idle)
    arg1:play_chore(sp_idles_leg_enter)
    arg1:wait_for_chore(sp_idles_leg_enter)
    arg1:stop_chore(sp_idles_leg_enter)
    local local3 = rndint(1, 6)
    arg1:play_chore_looping(sp_idles_leg_cycle)
    arg1:wait_for_chore(sp_idles_leg_cycle)
    repeat
        if not find_script(local1) then
            local2 = pick_one_of({ "spHop1.wav", "spHop2.wav", "spHop3.wav" })
            local1 = start_script(single_start_sfx, local2, IM_LOW_PRIORITY, 10)
        end
        sleep_for(1000)
        local3 = local3 - 1
    until local3 <= 0
    arg1:set_chore_looping(sp_idles_leg_cycle, FALSE)
    arg1:wait_for_chore(sp_idles_leg_cycle)
    arg1:stop_chore(sp_idles_leg_cycle)
    arg1:play_chore(sp_idles_leg_exit)
    arg1:wait_for_chore(sp_idles_leg_exit)
    arg1:stop_chore(sp_idles_leg_exit)
    arg1:play_chore_looping(sp_idles_idle)
end
spiders.prop_spider_ganglia = function(arg1) -- line 246
    local local1 = start_script(sleep_for, 1)
    local local2
    arg1:set_costume("sp_fly_generic.cos")
    arg1:ignore_boxes()
    arg1:setpos(arg1.home_point_x, arg1.home_point_y, arg1.home_point_z)
    arg1:setrot(0, rnd(0, 360), 0)
    arg1:set_turn_rate(rnd(45, 80))
    arg1:set_walk_rate(rnd(0.44999999, 0.69999999))
    arg1:play_chore_looping(sp_fly_generic_fly)
    while 1 do
        TurnActorTo(arg1.hActor, arg1.home_point_x, arg1.home_point_y, arg1.home_point_z)
        arg1:walk_forward()
        break_here()
    end
end
sp.uber_spider_sfx = function() -- line 272
    local local1
    while sp.uber_spider:is_choring(sp_fly_generic_fly) or sp.uber_spider:is_choring(sp_fly_generic_take_off) do
        local1 = pick_from_nonweighted_table({ "spUbFlp1.wav", "spUbFlp2.wav" })
        start_sfx(local1)
        wait_for_sound(local1)
    end
end
spiders.uber_spider = function() -- line 282
    local local1 = { }
    local local2
    local local3
    local local4
    local local5
    start_sfx("spVoxLp.imu", IM_HIGH_PRIORITY, 0)
    set_pan("spVoxLp.imu", 0)
    fade_sfx("spVoxLp.imu", 2000, 127)
    fade_pan_sfx("spVoxLp.imu", 2000, 64)
    if not sp.uber_spider then
        sp.uber_spider = Actor:create(nil, nil, nil, "uber spider")
    end
    sp.uber_spider:follow_boxes()
    sp.uber_spider:set_costume("sp_ub.cos")
    sp.uber_spider:set_walk_rate(0.30000001)
    sp.uber_spider:put_in_set(sp)
    sp.uber_spider:set_turn_rate(50)
    SetActorScale(sp.uber_spider.hActor, 2)
    sp.uber_spider:ignore_boxes()
    sp.uber_spider:setpos(-0.45925501, -2.1801701, 1.0112)
    sp.uber_spider:play_chore_looping(sp_fly_generic_fly)
    start_script(sp.uber_spider_sfx)
    sp.uber_spider.start_pnt = { }
    sp.uber_spider.start_pnt.x = -0.269539
    sp.uber_spider.start_pnt.y = -0.241943
    sp.uber_spider.start_pnt.z = 0.28
    local local6 = sp.uber_spider
    local1 = local6:getpos()
    repeat
        if not TurnActorTo(local6.hActor, local6.start_pnt.x, local6.start_pnt.y, local6.start_pnt.z) then
            PointActorAt(local6.hActor, local6.start_pnt.x, local6.start_pnt.y, local6.start_pnt.z)
        end
        local5 = sqrt((local1.x - local6.start_pnt.x) ^ 2 + (local1.y - local6.start_pnt.y) ^ 2)
        desired_z = tan(10) * local5
        desired_z = desired_z + local6.start_pnt.z
        if local5 <= 1.89 and not local3 then
            local3 = TRUE
            sp.uber_spider:stop_chore(sp_fly_generic_fly)
            sp.uber_spider:play_chore(sp_fly_generic_land)
        end
        if local5 <= 0.97500002 and not local2 then
            local2 = TRUE
            start_script(spiders.spider_rotate_up)
        end
        rate = GetActorWalkRate(local6.hActor)
        if PerSecond(rate) > local5 then
            local6:set_walk_rate(local5)
        end
        local6:walk_forward()
        local1 = local6:getpos()
        local6:setpos(local1.x, local1.y, desired_z)
        break_here()
        if local3 and not local6:is_choring(sp_fly_generic_land) then
            local6:setpos(local6.start_pnt.x, local6.start_pnt.y, local6.start_pnt.z)
        end
    until local5 < 0.0099999998
    local6:setpos(local6.start_pnt.x, local6.start_pnt.y, local6.start_pnt.z)
    local6:wait_for_chore(sp_fly_generic_land)
    stop_script(sp.uber_spider_sfx)
    local6:play_chore(sp_fly_generic_hop_loop2)
    start_sfx("spUbRepr.wav")
    local6:wait_for_chore()
    sp.web:complete_chore(sp_web_no_web)
    sp.web:play_chore(sp_web_web)
    ForceRefresh()
    local6:play_chore(sp_fly_generic_take_off)
    start_script(sp.uber_spider_sfx)
    local6:set_walk_rate(-0.22)
    start_script(spiders.spider_rotate_down)
    local6:set_time_scale(1.5)
    while local6:is_choring(sp_fly_generic_take_off) do
        local6:walk_forward()
        break_here()
    end
    local6:stop_chore(sp_fly_generic_take_off)
    local6:play_chore_looping(sp_fly_generic_fly)
    local6:set_walk_rate(0.40000001)
    fade_pan_sfx("spVoxLp.IMU", 3000, 0)
    fade_sfx("spVoxLp.IMU", 4000, 0)
    repeat
        if not TurnActorTo(local6.hActor, local6.start_pnt.x, local6.start_pnt.y, local6.start_pnt.z) then
            break_here()
        end
        local1 = local6:getpos()
        local6:walk_forward()
        local1.z = local1.z + 0.050000001
        local6:setpos(local1.x, local1.y, local1.z)
        break_here()
    until local1.z > 1.5
    sp.uber_spider:free()
    stop_script(sp.uber_spider_sfx)
end
spiders.spider_rotate_up = function() -- line 397
    local local1 = 0
    while local1 ~= 89 do
        local1 = local1 + PerSecond(28)
        if local1 > 89 then
            local1 = 89
        end
        SetActorPitch(sp.uber_spider.hActor, local1)
        break_here()
    end
end
spiders.spider_rotate_down = function() -- line 410
    local local1 = 89
    while local1 ~= 0 do
        local1 = local1 - PerSecond(30)
        if local1 < 0 then
            local1 = 0
        end
        SetActorPitch(sp.uber_spider.hActor, local1)
        break_here()
    end
end
sp_idles_anticipation = 0
sp_idles_accelerate = 1
sp_idles_walk_cycle = 2
sp_idles_decelerate = 3
sp_idles_follow_thru = 4
sp_idles_leg_enter = 5
sp_idles_leg_cycle = 6
sp_idles_leg_exit = 7
sp_idles_wing_enter = 8
sp_idles_wing_cycle = 9
sp_idles_wing_exit = 10
sp_idles_idle = 11
spinner_base_pose = 0
spinner_up_ball = 1
spinner_look_right = 2
spinner_look_rt_hold = 3
spinner_look_rt2base = 4
spinner_swvl_right = 5
spinner_swvl_rt_hold = 6
spinner_swvl_left = 7
spinner_mumble = 8
spinner_stop_talk = 9
spinner_c = 10
spinner_m = 11
spinner_f = 12
spinner_e = 13
spinner_u = 14
spinner_l = 15
spinner_a = 16
spinner_o = 17
spinner_h = 18
spinner_t = 19
CheckFirstTime("sp.lua")
sp = Set:create("sp.set", "spiderweb", { sp_webws = 0, sp_entla = 1, sp_top = 2 })
dofile("spiders.lua")
dofile("ma_scythe_web.lua")
dofile("sp_web.lua")
dofile("ma_throw_bone.lua")
sp.NUMBER_OF_SPIDERS = 6
sp.heartbeat_vol_close = 127
sp.heartbeat_vol_medium = 25
sp.heartbeat_vol_far = 15
shazam = function(arg1) -- line 23
    manny:set_costume(nil)
    manny:set_costume("sp_idles.cos")
    manny:set_walk_chore(sp_idles_walk_cycle)
    manny:set_turn_chores(nil, nil)
    manny:set_rest_chore(sp_idles_idle)
    if not arg1 then
        ActorPuckOrient(manny.hActor, TRUE)
    else
        ActorPuckOrient(manny.hActor, FALSE)
    end
    manny.running_chore = sp_idles_walk_cycle
    manny.costume_state = "spider"
end
newbug = function() -- line 38
    if not tbug then
        tbug = Actor:create()
    end
    tbug:set_costume(nil)
    tbug:put_in_set(system.currentSet)
    tbug:set_costume("sp_idles.cos")
    tbug:set_walk_chore(sp_idles_walk_cycle)
    tbug:set_turn_chores(nil, nil)
    tbug:set_rest_chore(sp_idles_idle)
    ActorPuckOrient(tbug.hActor, TRUE)
    tbug.running_chore = sp_idles_walk_cycle
    tbug.costume_state = "spider"
    tbug:put_at_interest()
    if not spotfinder_active then
        toggle_spotfinder()
    end
    spotfinder:put_at_interest()
    spotfinder.pos = tbug:getpos()
    spotfinder.attached_actor = tbug
end
sp.turn_spider = function(arg1, arg2, arg3, arg4) -- line 56
    while 1 do
        TurnActorTo(arg1.hActor, arg2, arg3, arg4)
        break_here()
    end
end
sp.reverse_spider = function(arg1) -- line 63
    arg1:set_walk_rate(-0.2)
    while 1 do
        WalkActorForward(arg1.hActor)
        break_here()
    end
end
sp.intro = function() -- line 71
    START_CUT_SCENE()
    box_on("intro_box")
    sp.seen_intro = TRUE
    sp:current_setup(sp_entla)
    manny:setpos(-5.4008002, 6.66644, 0)
    manny:setrot(0, 160.00301, 0)
    local local1 = Actor:create(nil, nil, nil, "bug1")
    local1:set_costume("sp_idles.cos")
    local1:set_walk_rate(0.40000001)
    local1:set_turn_rate(160)
    ActorPuckOrient(local1.hActor, TRUE)
    local1:set_walk_chore(nil)
    local1:set_turn_chores(nil, nil)
    local1:set_rest_chore(nil)
    local1:play_chore_looping(sp_idles_leg_cycle)
    local1:setpos(0.053610999, -0.35915199, 0.073643699)
    local1:setrot(46.889, 107.174, 297.168)
    local1:put_in_set(sp)
    local1:follow_boxes()
    break_here()
    local1:setrot(46.889, 107.174, 297.168)
    local1:wait_for_actor()
    manny:walkto(-5.5293298, 5.3671699, 0, 0, 224.472, 0)
    manny:wait_for_actor()
    manny:say_line("/lwma016/")
    wait_for_message()
    local1:stop_chore(sp_idles_leg_cycle)
    local1:play_chore_looping(sp_idles_walk_cycle)
    local1:wait_for_actor()
    local1:setrot(46.889, 107.174, 297.168)
    local1:walkto(-0.14880399, -0.442743, 0.247565, 46.889, 107.174, 297.168)
    local1:wait_for_actor()
    local1:stop_chore(sp_idles_walk_cycle)
    local1:run_chore(sp_idles_leg_enter)
    local1:play_chore_looping(sp_idles_leg_cycle)
    manny:wait_for_message()
    manny:say_line("/slma058/")
    manny:wait_for_message()
    sleep_for(500)
    manny:say_line("/rfma029/")
    start_script(manny.runto, manny, -3.5230601, 3.3424799, 0)
    local1:stop_chore(sp_idles_leg_cycle)
    local1:run_chore(sp_idles_leg_exit)
    local1:play_chore_looping(sp_idles_walk_cycle)
    start_script(sp.reverse_spider, local1)
    sleep_for(500)
    stop_script(sp.reverse_spider, local1)
    local1:set_walk_rate(0.5)
    start_script(sp.turn_spider, local1, -0.074399903, -0.1399, 0.83999902)
    sleep_for(1000)
    stop_script(sp.turn_spider)
    local1:walkto(-0.074399903, -0.1399, 0.83999902)
    local1:wait_for_actor()
    sleep_for(500)
    local1:free()
    box_off("intro_box")
    manny:set_run(FALSE)
    END_CUT_SCENE()
end
sp.watch_manny = function() -- line 155
    while 1 do
        if manny:find_sector_name("sp_cheat_box2") then
            system:lock_display()
            manny:setpos(-0.981346, -0.461838, 0)
            break_here()
            system:unlock_display()
        elseif manny:find_sector_name("sp_cheat_box1") then
            system:lock_display()
            manny:setpos(-3.48742, 1.94589, 0)
            break_here()
            system:unlock_display()
        end
        break_here()
    end
end
sp.hide_spiders = function() -- line 174
    local local1
    while 1 do
        if sp:current_setup() == sp_entla then
            local1 = 1
            repeat
                spider_actors[local1]:set_visibility(FALSE)
                local1 = local1 + 1
            until local1 > sp.NUMBER_OF_SPIDERS
            repeat
                break_here()
            until sp:current_setup() ~= sp_entla
            local1 = 1
            repeat
                spider_actors[local1]:set_visibility(TRUE)
                local1 = local1 + 1
            until local1 > sp.NUMBER_OF_SPIDERS
        end
        break_here()
    end
end
sp.set_up_actors = function() -- line 198
    spiders.init_spiders(sp.NUMBER_OF_SPIDERS)
end
sp.pull_heart = function() -- line 202
    START_CUT_SCENE()
    manny:set_rest_chore(nil)
    manny:stop_chore(ma_rest, "ma.cos")
    manny:walkto(-0.285213, -0.552777, 0, 0, 53.099, 0)
    manny:wait_for_actor()
    manny:push_costume("ma_pull_heart.cos")
    manny:play_chore(0, "ma_pull_heart.cos")
    if sp.web.has_bone then
        manny:play_chore(1, "ma_pull_heart.cos")
    end
    sleep_for(975)
    sp.heart_actor:set_visibility(FALSE)
    if sp.web.has_bone then
        sp.bone_actor:set_visibility(FALSE)
    end
    sleep_for(1000)
    manny:say_line("/spma011/")
    sleep_for(500)
    sp.heart_actor:set_visibility(TRUE)
    if sp.web.has_bone then
        sp.bone_actor:set_visibility(TRUE)
    end
    sleep_for(200)
    sp.web:complete_chore(sp_web_no_web)
    sp.web:play_chore(sp_web_web)
    ForceRefresh()
    manny:wait_for_chore(0, "ma_pull_heart.cos")
    manny:stop_chore(0, "ma_pull_heart.cos")
    manny:default("action")
    END_CUT_SCENE()
end
sp.slice_web = function() -- line 239
    local local1
    START_CUT_SCENE("no head")
    manny:walkto_object(sp.web)
    manny:push_costume("ma_scythe_web.cos")
    manny:stop_chore(ma_hold_scythe, "ma.cos")
    manny:play_chore(ma_scythe_web_cut_web, "ma_scythe_web.cos")
    sleep_for(670)
    sp.web:play_chore(sp_web_cut_web)
    start_sfx("spWebSlc.wav")
    manny:wait_for_chore()
    manny:pop_costume()
    manny:play_chore_looping(ma_hold_scythe, "ma.cos")
    start_script(manny.clear_hands, manny)
    manny:say_line("/jbma038/")
    sleep_for(1400)
    local1 = start_script(spiders.uber_spider, spiders)
    sleep_for(2000)
    manny.head_script = start_script(manny.head_follow_mesh, manny, sp.uber_spider, 1)
    manny:setrot(0, 94.519402, 0, TRUE)
    sleep_for(1000)
    manny:say_line("/spma020/")
    sleep_for(500)
    manny:setrot(0, 100, 0)
    manny:backup(2000)
    wait_for_script(local1)
    sleep_for(500)
    manny:kill_head_script()
    system.default_response("no work")
    manny:twist_head_gesture()
    END_CUT_SCENE()
end
sp.throw_bone = function(arg1) -- line 275
    sp.web.has_bone = TRUE
    arg1:free()
    arg1.owner = sp.bone_pile
    START_CUT_SCENE()
    manny:walkto(0.33919, -0.6035, 0, 0, 54.523, 0)
    manny:wait_for_actor()
    manny:stop_chore(manny.hold_chore, manny.base_costume)
    manny:stop_chore(ms_hold, manny.base_costume)
    manny.is_holding = nil
    manny:push_costume("ma_throw_bone.cos")
    manny:play_chore(ma_throw_bone_bone_throw)
    manny:say_line("/spma008/")
    manny:wait_for_chore(ma_throw_bone_bone_throw, "ma_throw_bone.cos")
    manny:pop_costume()
    if not sp.bone_actor then
        sp.bone_actor = Actor:create(nil, nil, nil, "bone")
    end
    sp.bone_actor:put_in_set(sp)
    sp.bone_actor:set_costume("bone.cos")
    sp.bone_actor:setpos(-0.24901, -0.248, 0.4609)
    sp.bone_actor:setrot(0, 30, 104)
    set_override(sp.skip_bone)
    manny:turn_left(180)
    manny:head_look_at(spider_actors[1])
    manny:wait_for_actor()
    manny:say_line("/mgma043/")
    manny:wait_for_message()
    manny:head_look_at(spider_actors[3])
    manny:say_line("/spma018/")
    manny:wait_for_message()
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
sp.skip_bone = function() -- line 314
    kill_override()
    manny:head_look_at(nil)
end
sp.test = function() -- line 319
    sp.freed_heart = FALSE
    manny.is_holding = mo.scythe
    manny:play_chore(ma_hold_scythe, "ma.cos")
    manny:put_at_object(sp.web)
    sp.web.has_bone = TRUE
    sp.web.contains = sp.heart
    if not sp.bone_actor then
        sp.bone_actor = Actor:create(nil, nil, nil, "bone")
    end
    sp.bone_actor:put_in_set(sp)
    sp.bone_actor:set_costume("bone.cos")
    sp.bone_actor:setpos(-0.24901, -0.248, 0.4609)
    sp.bone_actor:setrot(0, 30, 104)
    sp.heart_actor:set_costume("sp_glottis_heart.cos")
    sp.heart_actor:put_in_set(sp)
    sp.heart_actor:setpos({ x = -0.39533, y = -0.30642, z = 0.373 })
    sp.heart_actor:setrot(0, 180, 0)
    sp.heart_actor:play_chore_looping(0, "sp_glottis_heart.cos")
    start_sfx("glHrtBt.imu", IM_HIGH_PRIORITY, sp.heartbeat_vol)
    preload_sfx("sgHrtLnd.wav")
end
sp.evacuate_spiders = function() -- line 342
    local local1, local2
    if spider_actors[4] then
        spider_actors[4]:set_walk_rate(0.60000002)
        spider_actors[4]:walkto(-1.40558, -0.80676198, 0.029999999)
    end
    if spider_actors[5] and spider_actors[6] then
        local1 = spider_actors[5]:getpos()
        local2 = spider_actors[6]:getpos()
        while local1.z < 3.5 and system.currentSet == sp do
            spider_actors[5]:setpos(local1.x, local1.y, local1.z + 0.02)
            spider_actors[6]:setpos(local2.x, local2.y, local2.z + 0.02)
            sleep_for(66)
            local1 = spider_actors[5]:getpos()
            local2 = spider_actors[6]:getpos()
        end
    end
end
sp.manny_hook_n_fling_web = function() -- line 366
    START_CUT_SCENE()
    sp.tree_mask:play_chore(0)
    start_script(sp.evacuate_spiders)
    SetObjectType(sp.web.bone_hObject_state, OBJSTATE_OVERLAY, TRUE)
    manny:walkto_object(sp.web)
    manny:wait_for_actor()
    manny:stop_chore(ma_hold_scythe, "ma.cos")
    manny:push_costume("ma_scythe_web.cos")
    manny:play_chore(ma_scythe_web_hook_n_fling, "ma_scythe_web.cos")
    kill_heart_n_bone = nil
    music_state:set_sequence(seqSlingshotBone)
    repeat
        break_here()
    until kill_heart_n_bone
    sp.heart_actor:free()
    sp.bone_actor:free()
    sleep_for(2204)
    start_sfx("spWebSnp.wav")
    sleep_for(400)
    stop_sound("glHrtBt.imu")
    sleep_for(200)
    start_sfx("spWbShot.wav")
    sleep_for(200)
    sp.web:complete_chore(sp_web_no_web)
    sp.web:complete_chore(sp_web_web)
    ForceRefresh()
    manny:wait_for_chore(ma_scythe_web_hook_n_fling, "ma_scythe_web.cos")
    manny:stop_chore(ma_scythe_web_hook_n_fling, "ma_scythe_web.cos")
    manny:pop_costume()
    manny:head_look_at_point({ x = -2.20033, y = 0.64458, z = 1.024 })
    manny:play_chore_looping(ma_hold_scythe, "ma.cos")
    MakeSectorActive("cheater_sector", TRUE)
    manny:setpos(0.25247, -0.96592, 0)
    manny:walkto_object(sp.web)
    start_sfx("sgHrtLnd.wav")
    set_pan("sgHrtLnd.wav", 1)
    manny:wait_for_actor()
    sp.tree_mask:play_chore(1)
    wait_for_sound("sgHrtLnd.wav")
    manny:head_look_at(spider_actors[1])
    manny:turn_left(180)
    start_script(manny.clear_hands, manny)
    manny:say_line("/spma005/")
    sleep_for(2000)
    manny:head_look_at(spider_actors[3])
    manny:wait_for_message()
    manny:head_look_at(nil)
    END_CUT_SCENE()
    box_off("cheater_sector")
    sp.web.contains = nil
    sp.freed_heart = TRUE
    sg.heart:make_touchable()
end
sp.enter = function(arg1) -- line 467
    if not sp.freed_heart then
        sp.web.contains = sp.heart
        glottis.heartless = TRUE
        sp:add_object_state(sp.webws, "sp_tree_mask.bm", "sp_tree_mask.zbm", OBJSTATE_STATE, TRUE)
        sp.tree_mask:set_object_state("sp_tree_mask.cos")
    end
    sp.set_up_actors()
    MakeSectorActive("cheater_sector", FALSE)
    NewObjectState(sp_webws, OBJSTATE_STATE, "sp_web_cut.bm")
    sp:add_object_state(sp_webws, "sp_web_1.bm", "sp_web_1.zbm", OBJSTATE_STATE, FALSE)
    sp:add_object_state(sp_webws, "sp_web_pull.bm", "sp_web_pull.zbm", OBJSTATE_STATE, FALSE)
    sp:add_object_state(sp_webws, "sp_web_snap.bm", nil, OBJSTATE_OVERLAY, TRUE)
    local local1 = sp:add_object_state(sp_webws, "sp_web_rest.bm", nil, OBJSTATE_OVERLAY, FALSE)
    SendObjectToFront(local1)
    sp.web.bone_hObject_state = sp:add_object_state(sp_webws, "sp_bone.bm", nil, OBJSTATE_UNDERLAY, TRUE)
    SendObjectToFront(sp.web.bone_hObject_state)
    sp.web:set_object_state("sp_web.cos")
    sp.web:play_chore(0)
    if not sp.heart_actor then
        sp.heart_actor = Actor:create(nil, nil, nil, "heart")
    end
    if sp.web.contains == sp.heart then
        sp.heart_actor:set_costume("sp_glottis_heart.cos")
        sp.heart_actor:put_in_set(sp)
        sp.heart_actor:setpos({ x = -0.39533001, y = -0.30642, z = 0.373 })
        sp.heart_actor:setrot(0, 180, 0)
        sp.heart_actor:play_chore_looping(0, "sp_glottis_heart.cos")
        start_sfx("glHrtBt.imu", IM_HIGH_PRIORITY, sp.heartbeat_vol)
        preload_sfx("sgHrtLnd.wav")
    end
    if sp.web.has_bone then
        if not sp.bone_actor then
            sp.bone_actor = Actor:create(nil, nil, nil, "bone")
        end
        sp.bone_actor:put_in_set(sp)
        sp.bone_actor:set_costume("bone.cos")
        sp.bone_actor:setpos(-0.24901, -0.248, 0.46090001)
        sp.bone_actor:setrot(0, 30, 104)
    end
    preload_sfx("spWbStr1.wav")
    preload_sfx("spWbStr2.wav")
    preload_sfx("spWbShot.wav")
    preload_sfx("spSktr1.wav")
    preload_sfx("spSktr2.wav")
    preload_sfx("spHop1.wav")
    preload_sfx("spHop2.wav")
    preload_sfx("spHop3.wav")
    preload_sfx("spFlap1.wav")
    preload_sfx("spFlap2.wav")
    preload_sfx("spFlap3.wav")
    preload_sfx("spFlap4.wav")
    preload_sfx("spFlap5.wav")
    start_script(sp.hide_spiders)
    start_script(sp.watch_manny)
    sp:add_ambient_sfx({ "frstCrt1.wav", "frstCrt2.wav", "frstCrt3.wav", "frstCrt4.wav" }, { min_delay = 8000, max_delay = 20000 })
    sp:camerachange(nil, sp:current_setup())
    if sp.intro_flag then
        sp.intro_flag = FALSE
        start_script(sp.intro)
    end
    sp.heart:make_untouchable()
    sp.bone_in_web:make_untouchable()
end
sp.update_music_state = function(arg1, arg2) -- line 545
    if not arg2 then
        arg2 = sp:current_setup()
    end
    if arg2 == sp_entla then
        return stateSP_ENTLA
    else
        return stateSP_WEBWS
    end
end
sp.camerachange = function(arg1, arg2, arg3) -- line 557
    music_state:set_state(sp:update_music_state(arg3))
    if sound_playing("glHrtBt.imu") then
        if arg3 == sp_entla then
            set_vol("glHrtBt.imu", sp.heartbeat_vol_close)
        else
            set_vol("glHrtBt.imu", sp.heartbeat_vol_medium)
        end
    end
end
sp.exit = function(arg1) -- line 571
    stop_script(spiders.spider_ganglia)
    stop_script(spiders.prop_spider_ganglia)
    stop_script(sp.hide_spiders)
    stop_script(sp.watch_manny)
    stop_script(sp.spider_leg)
    stop_script(sp.spider_walk)
    stop_script(sp.spider_wing)
    local local1 = 1
    repeat
        spider_actors[local1]:free()
        local1 = local1 + 1
    until local1 > sp.NUMBER_OF_SPIDERS
    if sp.bone_actor then
        sp.bone_actor:free()
    end
    if sp.heart_actor then
        sp.heart_actor:free()
    end
    sp.web:free_object_state()
    stop_sound("glHrtBt.imu")
end
sp.tree_mask = Object:create(sp, "", 0, 0, 0, { range = 1.5 })
sp.tree_mask:make_untouchable()
sp.web = Object:create(sp, "/sptx001/web", -0.3926, -0.3906, 0.33000001, { range = 1.5 })
sp.web.use_pnt_x = 0.05367
sp.web.use_pnt_y = -0.63642001
sp.web.use_pnt_z = 0
sp.web.use_rot_x = 0
sp.web.use_rot_y = 52.459999
sp.web.use_rot_z = 0
sp.web.lookAt = function(arg1) -- line 618
    if not sp.freed_heart then
        manny:say_line("/spma002/")
        if arg1.has_bone then
            soft_script()
            wait_for_message()
            manny:say_line("/spma003/")
        end
    else
        manny:say_line("/spma004/")
    end
end
sp.web.use = function(arg1) -- line 631
    if not sp.freed_heart then
        start_script(sp.pull_heart)
    else
        manny:say_line("/spma006/")
    end
end
sp.web.pickUp = sp.web.use
sp.web.use_bone = function(arg1, arg2) -- line 641
    if not sp.freed_heart then
        if arg1.has_bone then
            manny:say_line("/spma007/")
        else
            start_script(sp.throw_bone, arg2)
        end
    else
        manny:say_line("/voma015/")
    end
end
sp.web.use_scythe = function(arg1) -- line 653
    if not sp.freed_heart then
        if arg1.has_bone then
            start_script(sp.manny_hook_n_fling_web)
        elseif not arg1.sliced then
            arg1.sliced = TRUE
            start_script(sp.slice_web)
        else
            system.default_response("already")
        end
    else
        manny:say_line("/voma015/")
    end
end
sp.heart = Object:create(sp, "/sptx009/heart", -0.1926, -0.22059999, 0.31999999, { range = 0.69999999 })
sp.heart.use_pnt_x = -0.050000001
sp.heart.use_pnt_y = -0.40599999
sp.heart.use_pnt_z = 0
sp.heart.use_rot_x = 0
sp.heart.use_rot_y = 51.57
sp.heart.use_rot_z = 0
sp.heart:make_untouchable()
sp.bone_pile = Object:create(sp, "/sptx012/pile of bones", 0.50739998, -0.3906, 0.0099999998, { range = 0.5 })
sp.bone_pile.use_pnt_x = 0.24061
sp.bone_pile.use_pnt_y = -0.56109798
sp.bone_pile.use_pnt_z = 0
sp.bone_pile.use_rot_x = 0
sp.bone_pile.use_rot_y = 309.198
sp.bone_pile.use_rot_z = 0
sp.bone_pile.lookAt = function(arg1) -- line 716
    manny:say_line("/spma013/")
end
sp.bone_pile.pickUp = function(arg1) -- line 720
    local local1
    if manny:walkto_object(arg1) then
        local1 = alloc_object_from_table(sp.bones)
        if local1 then
            START_CUT_SCENE()
            preload_sfx("getBone.wav")
            if not sp.said_spare then
                sp.said_spare = TRUE
                manny:say_line("/spma014/")
            end
            manny:wait_for_actor()
            manny:play_chore(ma_reach_low, "ma.cos")
            sleep_for(864)
            start_sfx("getBone.wav")
            local1:get()
            local1.wav = "getBone.wav"
            manny.is_holding = local1
            manny:play_chore_looping(ma_hold, "ma.cos")
            manny:play_chore_looping(ma_activate_bone, "ma.cos")
            manny.hold_chore = ma_activate_bone
            manny:wait_for_chore(ma_reach_low, "ma.cos")
            manny:stop_chore(ma_reach_low, "ma.cos")
            END_CUT_SCENE()
        else
            manny:say_line("/spma015/")
        end
    end
end
sp.bone_pile.use = sp.bone_pile.pickUp
sp.bone_pile.use_bone = function(arg1, arg2) -- line 753
    PrintDebug("Freeing bone" .. arg2.name .. "\n")
    arg2:free()
    arg2.owner = sp.bone_pile
    START_CUT_SCENE()
    if not sp.said_drop then
        sp.said_drop = TRUE
        manny:say_line("/spma016/")
    end
    preload_sfx("getBone.wav")
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:play_chore(ma_reach_low, "ma.cos")
    sleep_for(864)
    start_sfx("getBone.wav")
    manny.is_holding = nil
    manny:stop_chore(ma_hold, "ma.cos")
    manny:stop_chore(ma_activate_bone, "ma.cos")
    manny.hold_chore = nil
    manny:wait_for_chore(ma_reach_low, "ma.cos")
    manny:stop_chore(ma_reach_low, "ma.cos")
    END_CUT_SCENE()
end
sp.bone_in_web = Object:create(sp, "/sptx017/bone", -0.24433, -0.22341999, 0.45199999, { range = 0.5 })
sp.bone_in_web.use_pnt_x = -0.041000001
sp.bone_in_web.use_pnt_y = -0.39899999
sp.bone_in_web.use_pnt_z = 0
sp.bone_in_web.use_rot_x = 0
sp.bone_in_web.use_rot_y = 33.615002
sp.bone_in_web.use_rot_z = 0
sp.bone_in_web:make_untouchable()
sp.bones = { }
sp.bones.bone1 = Object:create(sp, "/sptx021/bone1", 0, 0, 0, { range = 0 })
sp.bones.bone1.string_name = "bone"
sp.bones.bone1.owner = sp.bone_pile
sp.bones.bone1.wav = "getBone.wav"
sp.bones.bone1.lookAt = function(arg1) -- line 814
    manny:say_line("/spma022/")
end
sp.bones.bone1.use = function(arg1) -- line 817
    manny:say_line("/spma023/")
end
sp.bones.bone1.default_response = function(arg1) -- line 821
    manny:say_line("/spma024/")
end
sp.bones.bone2 = Object:create(sp, "/sptx025/bone2", 0, 0, 0, { range = 0 })
sp.bones.bone2.parent = sp.bones.bone1
sp.bones.bone2.owner = sp.bone_pile
sp.bones.bone2.string_name = "bone"
sp.bones.bone2.wav = "getBone.wav"
sp.bones.bone3 = Object:create(sp, "/sptx026/bone3", 0, 0, 0, { range = 0 })
sp.bones.bone3.parent = sp.bones.bone1
sp.bones.bone3.owner = sp.bone_pile
sp.bones.bone3.string_name = "bone"
sp.bones.bone3.wav = "getBone.wav"
sp.bones.bone4 = Object:create(sp, "/sptx027/bone4", 0, 0, 0, { range = 0 })
sp.bones.bone4.parent = sp.bones.bone1
sp.bones.bone4.owner = sp.bone_pile
sp.bones.bone4.string_name = "bone"
sp.bones.bone4.wav = "getBone.wav"
sp.bones.bone5 = Object:create(sp, "/sptx028/bone5", 0, 0, 0, { range = 0 })
sp.bones.bone5.parent = sp.bones.bone1
sp.bones.bone5.owner = sp.bone_pile
sp.bones.bone5.string_name = "bone"
sp.bones.bone5.wav = "getBone.wav"
sp.pbo = function() -- line 849
    local local1, local2 = next(sp.bones, nil)
    while local2 do
        sp.obo(local2)
        local1, local2 = next(sp.bones, local1)
    end
end
sp.obo = function(arg1) -- line 858
    if arg1.owner == manny then
        PrintDebug(arg1.name .. ".owner = Manny\n")
    elseif arg1.owner == IN_THE_ROOM then
        PrintDebug(arg1.name .. ".owner = IN_THE_ROOM\n")
    elseif arg1.owner == IN_LIMBO then
        PrintDebug(arg1.name .. ".owner = IN_LIMBO\n")
    elseif arg1.owner == nil then
        PrintDebug(arg1.name .. ".owner = nil\n")
    else
        PrintDebug(arg1.name .. ".owner = " .. tostring(arg1.owner) .. "\n")
    end
end
sp.sg_door = Object:create(sp, "/sptx029/door", -0.86260003, -0.4806, 0, { range = 0 })
sp.sg_box = sp.sg_door
sp.sg_door.use_pnt_x = -5.2046399
sp.sg_door.use_pnt_y = 5.14048
sp.sg_door.use_pnt_z = 0
sp.sg_door.use_rot_x = 0
sp.sg_door.use_rot_y = 5
sp.sg_door.use_rot_z = 0
sp.sg_door.out_pnt_x = -5.4932098
sp.sg_door.out_pnt_y = 6.4337502
sp.sg_door.out_pnt_z = 0
sp.sg_door.out_rot_x = 0
sp.sg_door.out_rot_y = 0
sp.sg_door.out_rot_z = 0
sp.sg_door.walkOut = function(arg1) -- line 896
    sg:come_out_door(sg.sp_door)
    sg:current_setup(sg_spdws)
end
sp_tree_mask_mask = 0
sp_tree_mask_gone = 1
sp_ub_hop_loop1 = 0
sp_ub_hop_loop2 = 1
sp_ub_take_off = 2
sp_ub_fly = 3
sp_ub_land = 4
sp_ub_sit = 5
sp_ub_takeoff_land_sequence = 6
sp_ub_idle = 7
sp_web_web = 0
sp_web_hook_pull_web = 1
sp_web_cut_web = 2
sp_web_web_retract = 3
sp_web_web_snap = 4
sp_web_no_web = 5
sp_web_no_bone = 6
CheckFirstTime("st.lua")
st = Set:create("st.set", "st", { st_strws = 0, st_ovrhead = 1 })
st.camera_adjusts = { 0 }
dofile("st_pinata.lua")
dofile("pigeons.lua")
st.NUMBER_OF_PIGEONS = 5
st.center = { }
st.center.x = 4.35802
st.center.y = -0.0935754
st.choose_start_points = function(arg1) -- line 31
    local local1, local2
    repeat
        repeat
            local1, local2 = pick_from_nonweighted_table(st.pigeon_homes)
        until not local1.used
    until arg1.start_pnt.x ~= local1.pos.x and arg1.start_pnt.y ~= local1.pos.y and arg1.start_pnt.z ~= local1.pos.z
    if arg1.pigeon_number then
        st.pigeon_homes[arg1.pigeon_number].used = FALSE
    end
    local1.used = TRUE
    arg1.pigeon_number = local2
    arg1.start_pnt.x = local1.pos.x
    arg1.start_pnt.y = local1.pos.y
    arg1.start_pnt.z = local1.pos.z
end
st.init_pigeons = function() -- line 51
    local local1 = 0
    st.init_homes()
    repeat
        local1 = local1 + 1
        if not pigeons[local1] then
            pigeons[local1] = Actor:create(nil, nil, nil, "pigeon" .. local1)
        end
        pigeons[local1].costume_marker_handler = bird_sound_monitor
        pigeons[local1].start_pnt = { }
        pigeons[local1].orbit_pnt = { }
        st.choose_start_points(pigeons[local1])
        pigeons[local1].orbit_pnt.x = st.pigeon_dest[local1].pos.x
        pigeons[local1].orbit_pnt.y = st.pigeon_dest[local1].pos.y
        pigeons[local1].orbit_pnt.z = st.pigeon_dest[local1].pos.z
        pigeons[local1]:set_costume("pigeon_idles.cos")
        pigeons[local1]:set_colormap("pigeons.cmp")
        pigeons[local1]:set_walk_rate(0.80000001)
        pigeons[local1]:set_turn_rate(60)
        pigeons[local1]:ignore_boxes()
        pigeons[local1]:put_in_set(st)
        pigeons[local1]:setpos(pigeons[local1].start_pnt.x, pigeons[local1].start_pnt.y, pigeons[local1].start_pnt.z)
        start_script(st.pigeon_brain, pigeons[local1])
    until local1 == st.NUMBER_OF_PIGEONS
end
st.pigeon_brain = function(arg1) -- line 84
    local local1
    break_here()
    while 1 do
        PointActorAt(arg1.hActor, st.center.x, st.center.y, arg1.start_pnt.z)
        if rnd(9) then
            if rnd(8) then
                local1 = start_script(st.point_and_fly_away, arg1)
                wait_for_script(local1)
            end
        else
            sleep_for(rnd(250, 750))
            arg1:play_chore(pigeon_idles_pecking)
            arg1:wait_for_chore()
        end
        break_here()
    end
end
st.point_and_fly_away = function(arg1) -- line 110
    local local1
    local local2 = { }
    local local3 = { }
    local local4
    local local5
    local local6 = 0
    local local7
    local local8, local9, local10, local11
    local local12
    local local13
    if rnd(1) then
        arg1:play_chore(pigeon_idles_scared_takeoff)
        while arg1:is_choring(pigeon_idles_scared_takeoff) do
            local3 = arg1:getpos()
            TurnActorTo(arg1.hActor, st.center.x, st.center.y, local3.z)
            arg1:walk_forward()
            break_here()
        end
        local3 = arg1:getpos()
        local5 = sqrt((local3.x - arg1.start_pnt.x) ^ 2 + (local3.y - arg1.start_pnt.y) ^ 2 + (local3.z - arg1.start_pnt.z) ^ 2)
        repeat
            st.choose_start_points(arg1)
            local3 = arg1:getpos()
            local5 = sqrt((local3.x - arg1.start_pnt.x) ^ 2 + (local3.y - arg1.start_pnt.y) ^ 2 + (local3.z - arg1.start_pnt.z) ^ 2)
            local11 = 90 - acos((local3.z - arg1.start_pnt.z) / local5)
        until local11 <= 45 and local11 >= -45 and local11 ~= 0
        if local11 > 0 then
            local7 = pigeon_idles_glide
        else
            local7 = pigeon_idles_fly_cycle
        end
        repeat
            local3 = arg1:getpos()
            TurnActorTo(arg1.hActor, arg1.start_pnt.x, arg1.start_pnt.y, local3.z)
            local5 = sqrt((local3.x - arg1.start_pnt.x) ^ 2 + (local3.y - arg1.start_pnt.y) ^ 2 + (local3.z - arg1.start_pnt.z) ^ 2)
            if not arg1:is_choring(local7) then
                arg1:play_chore(local7)
            end
            local4 = tan(local11) * local5
            local4 = local4 + arg1.start_pnt.z
            arg1:setpos(local3.x, local3.y, local4)
            arg1:walk_forward()
            break_here()
        until local5 <= 1
        repeat
            local3 = arg1:getpos()
            if not TurnActorTo(arg1.hActor, arg1.start_pnt.x, arg1.start_pnt.y, arg1.start_pnt.z) then
                PointActorAt(arg1.hActor, arg1.start_pnt.x, arg1.start_pnt.y, arg1.start_pnt.z)
            end
            local5 = sqrt((local3.x - arg1.start_pnt.x) ^ 2 + (local3.y - arg1.start_pnt.y) ^ 2 + (local3.z - arg1.start_pnt.z) ^ 2)
            local4 = tan(local11) * local5
            local4 = local4 + arg1.start_pnt.z
            local12 = GetActorWalkRate(arg1.hActor)
            if local12 >= local5 then
                if not local13 then
                    local13 = TRUE
                    arg1:play_chore(pigeon_idles_landing)
                end
            end
            if PerSecond(local12) > local5 then
                arg1:set_walk_rate(local5)
            end
            arg1:setpos(local3.x, local3.y, local4)
            arg1:walk_forward()
            break_here()
        until local5 < 0.039999999
    else
        arg1:play_chore(pigeon_idles_scared_takeoff)
        while arg1:is_choring(pigeon_idles_scared_takeoff) do
            TurnActorTo(arg1.hActor, arg1.orbit_pnt.x, arg1.orbit_pnt.y, arg1.orbit_pnt.z)
            local3 = arg1:getpos()
            if local3.z <= arg1.orbit_pnt.z then
                local6 = local6 + 1
                arg1:setpos(local3.x, local3.y, local3.z + local6 / 10000)
            end
            arg1:walk_forward()
            break_here()
        end
        repeat
            local3 = arg1:getpos()
            if local3.z <= arg1.orbit_pnt.z then
                local6 = local6 + 1
                arg1:setpos(local3.x, local3.y, local3.z + local6 / 10000)
            end
            local2 = sqrt((local3.x - arg1.orbit_pnt.x) ^ 2 + (local3.y - arg1.orbit_pnt.y) ^ 2 + (local3.z - arg1.orbit_pnt.z) ^ 2)
            if not arg1:is_choring(pigeon_idles_fly_cycle) then
                arg1:play_chore(pigeon_idles_fly_cycle)
            end
            arg1:walk_forward()
            TurnActorTo(arg1.hActor, arg1.orbit_pnt.x, arg1.orbit_pnt.y, arg1.orbit_pnt.z)
            break_here()
        until local2 <= 0.5
        repeat
            local3 = arg1:getpos()
            local5 = sqrt((local3.x - arg1.start_pnt.x) ^ 2 + (local3.y - arg1.start_pnt.y) ^ 2)
            if not arg1:is_choring(pigeon_idles_glide) then
                arg1:play_chore(pigeon_idles_glide)
            end
            local4 = tan(15) * local5
            local4 = local4 + arg1.start_pnt.z
            if local3.z > local4 then
                arg1:setpos(local3.x, local3.y, local4)
            end
            arg1:walk_forward()
            TurnActorTo(arg1.hActor, arg1.start_pnt.x, arg1.start_pnt.y, arg1.start_pnt.z)
            break_here()
        until local5 <= 1
        repeat
            if not TurnActorTo(arg1.hActor, arg1.start_pnt.x, arg1.start_pnt.y, arg1.start_pnt.z) then
                PointActorAt(arg1.hActor, arg1.start_pnt.x, arg1.start_pnt.y, arg1.start_pnt.z)
            end
            local5 = sqrt((local3.x - arg1.start_pnt.x) ^ 2 + (local3.y - arg1.start_pnt.y) ^ 2)
            local4 = tan(15) * local5
            local4 = local4 + arg1.start_pnt.z
            local12 = GetActorWalkRate(arg1.hActor)
            if local12 >= local5 then
                if not local13 then
                    local13 = TRUE
                    arg1:play_chore(pigeon_idles_landing)
                end
            end
            if PerSecond(local12) > local5 then
                arg1:set_walk_rate(local5)
            end
            arg1:walk_forward()
            local3 = arg1:getpos()
            if local3.z > local4 then
                arg1:setpos(local3.x, local3.y, local4)
            end
            break_here()
        until local5 < 0.039999999
    end
    arg1:stop_chore(nil)
    arg1:setpos(arg1.start_pnt.x, arg1.start_pnt.y, arg1.start_pnt.z)
    arg1:play_chore(pigeon_idles_standing)
    arg1:set_walk_rate(0.80000001)
    sleep_for(1000)
end
st.set_up_actors = function(arg1) -- line 303
    clown:default()
    clown:put_in_set(st)
    clown:setpos(0.345265, 1.60425, -0.1)
    clown:setrot(0, 277.042, 0)
    clown:play_chore_looping(balloonman_tie_balloon)
    SetShadowColor(15, 15, 25)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 700, 4000, 5000.5)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow2")
    AddShadowPlane(manny.hActor, "shadow3")
    AddShadowPlane(manny.hActor, "shadow4")
    SetActiveShadow(manny.hActor, 1)
    SetActorShadowPoint(manny.hActor, 700, 4000, 5000.5)
    SetActorShadowPlane(manny.hActor, "shadow10")
    AddShadowPlane(manny.hActor, "shadow10")
    AddShadowPlane(manny.hActor, "shadow11")
    SetActiveShadow(manny.hActor, 2)
    SetActorShadowPoint(manny.hActor, 700, 4000, 5000.5)
    SetActorShadowPlane(manny.hActor, "shadow20")
    AddShadowPlane(manny.hActor, "shadow20")
    SetActiveShadow(manny.hActor, 3)
    SetActorShadowPoint(manny.hActor, 700, 4000, 5000.5)
    SetActorShadowPlane(manny.hActor, "shadow21")
    AddShadowPlane(manny.hActor, "shadow21")
end
st.enter = function(arg1) -- line 337
    manny.footsteps = footsteps.pavement
    st:add_object_state(0, "st_pinata_crowd.bm", nil, OBJSTATE_UNDERLAY)
    st:add_object_state(0, "st_pinata_crowd2.bm", nil, OBJSTATE_UNDERLAY)
    st.fe_door:set_object_state("st_pinata.cos")
    st.fe_door.interest_actor:play_chore(st_pinata_here)
    st.fe_door.interest_actor:play_chore_looping(st_pinata_idle)
    start_sfx("traffic1.imu")
    set_vol("traffic1.imu", 20)
    st.init_pigeons()
    if not fe.pop_trigger then
        if not prop_pigeon then
            prop_pigeon = Actor:create(nil, nil, nil, "prop pigeon")
        end
        rf.default_pigeon(prop_pigeon)
        prop_pigeon:put_in_set(st)
        prop_pigeon:setpos(0.524414, 0.142143, 0.58)
        prop_pigeon:setrot(0, -61, 0)
        prop_pigeon:play_chore_looping(pigeon_idles_pecking)
        if not prop_pigeon2 then
            prop_pigeon2 = Actor:create(nil, nil, nil, "prop pigeon")
        end
        rf.default_pigeon(prop_pigeon2)
        prop_pigeon2:put_in_set(st)
        prop_pigeon2:setpos(0.624414, 0.05, 0.58)
        prop_pigeon2:setrot(0, -61, 0)
    end
    st:set_up_actors()
end
st.exit = function(arg1) -- line 376
    local local1 = 1
    stop_script(st.point_and_fly_away)
    stop_script(st.pigeon_brain)
    stop_script(bird_climb)
    repeat
        local1 = local1 + 1
        pigeons[local1]:free()
    until local1 == st.NUMBER_OF_PIGEONS
    prop_pigeon:free()
    prop_pigeon2:free()
    clown:free()
    KillActorShadows(manny.hActor)
    stop_sound("traffic1.imu")
    st.fe_door.interest_actor:set_chore_looping(st_pinata_idle, FALSE)
    st.fe_door.interest_actor:stop_chore(st_pinata_idle)
    st.fe_door.interest_actor:play_chore(st_pinata_gone)
end
st.crates = Object:create(st, "/fetx093/crates", 0.53045601, 2.4614401, 0.059999999, { range = 1.5 })
st.crates.use_pnt_x = 1.93046
st.crates.use_pnt_y = 2.3714399
st.crates.use_pnt_z = 0.059999999
st.crates.use_rot_x = 0
st.crates.use_rot_y = 97.022102
st.crates.use_rot_z = 0
st.crates.lookAt = function(arg1) -- line 414
    soft_script()
    manny:say_line("/fema094/")
    wait_for_message()
    manny:say_line("/fema095/")
end
st.crates.pickUp = function(arg1) -- line 421
    system.default_response("hernia")
end
st.crates.use = function(arg1) -- line 425
    manny:say_line("/fema096/")
end
st.os_door = Object:create(st, "/sttx097/door", 6.16397, -2.40711, 0.059999999, { range = 0 })
st.os_door.use_pnt_x = 6.16397
st.os_door.use_pnt_y = -2.40711
st.os_door.use_pnt_z = 0.059999999
st.os_door.use_rot_x = 0
st.os_door.use_rot_y = -439.26501
st.os_door.use_rot_z = 0
st.os_door.out_pnt_x = 6.8000002
st.os_door.out_pnt_y = -2.2862999
st.os_door.out_pnt_z = 0.059999999
st.os_door.out_rot_x = 0
st.os_door.out_rot_y = -439.26501
st.os_door.out_rot_z = 0
st.os_door.touchable = FALSE
st.os_box = st.os_door
st.os_door.walkOut = function(arg1) -- line 453
    os:come_out_door(os.st_door)
end
st.al_door = Object:create(st, "/sttx002/door", 5.19554, -3.7165501, 0, { range = 0 })
st.al_door.use_pnt_x = 5.3355398
st.al_door.use_pnt_y = -2.80656
st.al_door.use_pnt_z = 0
st.al_door.use_rot_x = 0
st.al_door.use_rot_y = 166.5
st.al_door.use_rot_z = 0
st.al_door.out_pnt_x = 5.23523
st.al_door.out_pnt_y = -3.2249999
st.al_door.out_pnt_z = 0
st.al_door.out_rot_x = 0
st.al_door.out_rot_y = 166.5
st.al_door.out_rot_z = 0
st.al_door.touchable = FALSE
st.al_box = st.al_door
st.al_door.walkOut = function(arg1) -- line 478
    al:come_out_door(al.st_door)
end
st.fe_door = Object:create(st, "/sttx003/festival", 1.6874, -0.0062998701, 0.60000002, { range = 4 })
st.fe_box = st.fe_door
st.fe_door.use_pnt_x = 1.641
st.fe_door.use_pnt_y = 0.24699999
st.fe_door.use_pnt_z = 0
st.fe_door.use_rot_x = 0
st.fe_door.use_rot_y = 85.913803
st.fe_door.use_rot_z = 0
st.fe_door.walkOut = function(arg1) -- line 495
    local local1, local2, local3
    local1, local2, local3 = GetActorPos(system.currentActor.hActor)
    fe:switch_to_set()
    PutActorInSet(system.currentActor.hActor, fe.setFile)
    PutActorAt(system.currentActor.hActor, local1, local2, -0.097999997)
end
st.fe_door.lookAt = function(arg1) -- line 504
    manny:say_line("/stma005/")
    wait_for_message()
    manny:say_line("/stma006/")
end
st.fe_door.use = function(arg1) -- line 510
    manny:walkto_object(arg1)
end
st.rp_door = Object:create(st, "/sttx098/door", 6.08075, 1.11544, 0, { range = 0 })
st.rp_door.use_pnt_x = 6.08075
st.rp_door.use_pnt_y = 1.11544
st.rp_door.use_pnt_z = 0
st.rp_door.use_rot_x = 0
st.rp_door.use_rot_y = -93.111504
st.rp_door.use_rot_z = 0
st.rp_door.out_pnt_x = 6.8249998
st.rp_door.out_pnt_y = 1.07499
st.rp_door.out_pnt_z = 0
st.rp_door.out_rot_x = 0
st.rp_door.out_rot_z = 0
st.rp_door.touchable = FALSE
st.rp_stbox = st.rp_door
st.rp_door.walkOut = function(arg1) -- line 533
    rp:come_out_door(rp.st_door)
end
st.rp_sidwk_door = Object:create(st, "/sttx099/door", 6.1188402, 2.2841401, 0.059999999, { range = 0 })
st.rp_sidwk_door.use_pnt_x = 6.1188402
st.rp_sidwk_door.use_pnt_y = 2.2841401
st.rp_sidwk_door.use_pnt_z = 0.059999999
st.rp_sidwk_door.use_rot_x = 0
st.rp_sidwk_door.use_rot_y = 276.31
st.rp_sidwk_door.use_rot_z = 0
st.rp_sidwk_door.out_pnt_x = 6.8249998
st.rp_sidwk_door.out_pnt_y = 2.3625
st.rp_sidwk_door.out_pnt_z = 0.059999999
st.rp_sidwk_door.out_rot_x = 0
st.rp_sidwk_door.out_rot_y = 276.31
st.rp_sidwk_door.out_rot_z = 0
st.rp_sidwk_door.touchable = FALSE
st.rp_sidebox = st.rp_sidwk_door
st.rp_sidwk_door.walkOut = function(arg1) -- line 557
    rp:come_out_door(rp.st_sidwk_door)
end
st.os_st_door = Object:create(st, "/sttx100/door", 6.3185802, -0.750099, 0, { range = 0.60000002 })
st.os_st_door.use_pnt_x = 6.3185802
st.os_st_door.use_pnt_y = -0.750099
st.os_st_door.use_pnt_z = 0
st.os_st_door.use_rot_x = 0
st.os_st_door.use_rot_y = -73.990898
st.os_st_door.use_rot_z = 0
st.os_st_door.out_pnt_x = 6.8249998
st.os_st_door.out_pnt_y = -0.652363
st.os_st_door.out_pnt_z = 0
st.os_st_door.out_rot_x = 0
st.os_st_door.out_rot_y = -96.959801
st.os_st_door.out_rot_z = 0
st.os_st_door.touchable = FALSE
st.os_stbox = st.os_st_door
st.os_st_door.walkOut = function(arg1) -- line 581
    os:come_out_door(os.st_st_door)
end
st_pinata_idle = 0
st_pinata_here = 1
st_pinata_gone = 2
CheckFirstTime("su.lua")
su = Set:create("su.set", "sunken lola", { su_chews = 0, su_ovrhd = 1 })
dofile("chepito.lua")
dofile("mn_ctm.lua")
dofile("mn_ctc.lua")
su.chepito_to_manny = function(arg1) -- line 16
    local local1 = manny:getpos()
    local local2 = chepito:getpos()
    while TurnActorTo(chepito.hActor, local1.x, local1.y, local1.z) do
        break_here()
    end
    chepito:head_look_at_manny()
    while TurnActorTo(manny.hActor, local2.x, local2.y, local2.z) do
        break_here()
    end
end
su.manny_to_chepito = function(arg1) -- line 62
    local local1 = { }
    local local2, local3
    local local4 = { x = 0.28582701, y = -0.142896, z = 0 }
    while 1 do
        local1 = chepito:getrot()
        local3 = RotateVector(local4, local1)
        local2 = chepito:getpos()
        local3.x = local3.x + local2.x
        local3.y = local3.y + local2.y
        local3.z = local3.z + local2.z
        chepito:setpos(manny:getpos())
        chepito:setrot(manny:getrot())
        break_here()
    end
end
su.chepito_proximity = function(arg1, arg2, arg3) -- line 83
    local local1 = chepito:getpos()
    local local2 = sqrt((local1.x - arg1) ^ 2 + (local1.y - arg2) ^ 2 + (local1.z - arg3) ^ 2)
    return local2
end
su.chepito_to_start = function() -- line 90
    while TurnActorTo(chepito.hActor, chepito.start_position.x, chepito.start_position.y, chepito.start_position.z) do
        break_here()
    end
    while su.chepito_proximity(chepito.start_position.x, chepito.start_position.y, chepito.start_position.z) >= 0.05 do
        PointActorAt(chepito.hActor, chepito.start_position.x, chepito.start_position.y, chepito.start_position.z)
        chepito:walk_forward()
        break_here()
    end
    chepito:setpos(chepito.start_position.x, chepito.start_position.y, chepito.start_position.z)
    chepito:follow_boxes()
end
su.sink_aftermath = function(arg1) -- line 107
    local local1 = 4.5
    START_CUT_SCENE()
    set_override(su.sink_aftermath_override)
    manny:default("nautical")
    manny:put_in_set(su)
    manny:ignore_boxes()
    glottis:set_costume("glottis_sailor.cos")
    glottis:set_talk_color(Orange)
    glottis:set_visibility(TRUE)
    glottis:set_head(3, 4, 4, 165, 28, 80)
    glottis:set_mumble_chore(glottis_sailor_mumble)
    glottis:set_talk_chore(1, glottis_sailor_stop_talk)
    glottis:set_talk_chore(2, glottis_sailor_a)
    glottis:set_talk_chore(3, glottis_sailor_c)
    glottis:set_talk_chore(4, glottis_sailor_e)
    glottis:set_talk_chore(5, glottis_sailor_f)
    glottis:set_talk_chore(6, glottis_sailor_l)
    glottis:set_talk_chore(7, glottis_sailor_m)
    glottis:set_talk_chore(8, glottis_sailor_o)
    glottis:set_talk_chore(9, glottis_sailor_t)
    glottis:set_talk_chore(10, glottis_sailor_u)
    glottis:push_costume("gl_sailor_fastwalk.cos")
    glottis:head_look_at(nil)
    glottis:set_walk_chore(0, "gl_sailor_fastwalk.cos")
    glottis:set_walk_rate(0.5)
    glottis:put_in_set(su)
    manny:ignore_boxes()
    glottis:ignore_boxes()
    glottis:setpos(100, 100, 100)
    manny:setpos(100, 100, 100)
    start_sfx("current.imu", IM_HIGH_PRIORITY, 0)
    fade_sfx("current.imu", 2000, 80)
    manny:push_costume("mn_jump_sub.cos")
    glottis:push_costume("gl_jump_sub.cos")
    break_here()
    PreRender(TRUE, FALSE)
    manny:play_chore(0, "mn_jump_sub.cos")
    glottis:play_chore(0, "gl_jump_sub.cos")
    break_here()
    manny:follow_boxes()
    manny:setpos(-0.536861, -4.0693498, 0)
    manny:setrot(0, 227, 0)
    glottis:setpos(-0.120987, -3.50214, 0)
    glottis:setrot(0, 180, 0)
    glottis:follow_boxes()
    sleep_for(6400)
    fade_sfx("current.imu", 800)
    sleep_for(6000)
    manny:wait_for_chore(0, "mn_jump_sub.cos")
    manny:pop_costume()
    glottis:blend(glottis_sailor_home_pose, 0, 800, "glottis_sailor.cos", "gl_jump_sub.cos")
    sleep_for(800)
    glottis:pop_costume()
    PreRender(TRUE, TRUE)
    ForceRefresh()
    start_script(su.glottis_follow_manny)
    glottis:say_line("/sugl091/")
    wait_for_message()
    glottis:say_line("/sugl092/")
    wait_for_message()
    glottis:say_line("/sugl093/")
    wait_for_message()
    glottis:say_line("/sugl094/")
    wait_for_message()
    glottis:say_line("/sugl095/")
    wait_for_message()
    manny:say_line("/suma096/")
    wait_for_message()
    glottis:say_line("/sugl097/")
    wait_for_message()
    manny:say_line("/suma098/")
    wait_for_message()
    manny:say_line("/suma099/")
    wait_for_message()
    END_CUT_SCENE()
    glottis:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(glottis.hActor, 0.5)
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(chepito.hActor, 0.44999999)
    SetActorCollisionScale(manny.hActor, 0.34999999)
    kill_override()
end
su.sink_aftermath_override = function() -- line 202
    kill_override()
    PreRender(TRUE, TRUE)
    ForceRefresh()
    manny:put_in_set(su)
    manny:default("nautical")
    manny:follow_boxes()
    manny:setpos(-0.536861, -4.06935, 0)
    manny:setrot(0, 227, 0)
    glottis:set_costume("glottis_sailor.cos")
    glottis:set_talk_color(Orange)
    glottis:set_visibility(TRUE)
    glottis:set_head(3, 4, 4, 165, 28, 80)
    glottis:set_mumble_chore(glottis_sailor_mumble)
    glottis:set_talk_chore(1, glottis_sailor_stop_talk)
    glottis:set_talk_chore(2, glottis_sailor_a)
    glottis:set_talk_chore(3, glottis_sailor_c)
    glottis:set_talk_chore(4, glottis_sailor_e)
    glottis:set_talk_chore(5, glottis_sailor_f)
    glottis:set_talk_chore(6, glottis_sailor_l)
    glottis:set_talk_chore(7, glottis_sailor_m)
    glottis:set_talk_chore(8, glottis_sailor_o)
    glottis:set_talk_chore(9, glottis_sailor_t)
    glottis:set_talk_chore(10, glottis_sailor_u)
    glottis:push_costume("gl_sailor_fastwalk.cos")
    glottis:head_look_at(nil)
    glottis:set_walk_chore(0, "gl_sailor_fastwalk.cos")
    glottis:set_walk_rate(0.5)
    glottis:put_in_set(su)
    glottis:setpos(-0.120987, -3.50214, 0)
    glottis:setrot(0, 180, 0)
    glottis:follow_boxes()
    glottis:play_chore(glottis_sailor_home_pose, "glottis_sailor.cos")
    glottis:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(glottis.hActor, 0.5)
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(chepito.hActor, 0.45)
    SetActorCollisionScale(manny.hActor, 0.35)
    stop_sound("current.imu")
    start_script(su.glottis_follow_manny)
end
su.move_chepito_obj = function() -- line 249
    local local1 = { }
    while 1 do
        local1 = chepito:getpos()
        su.moving_chepito_obj.interest_actor:setpos(local1.x, local1.y, local1.z + 0.40000001)
        if hot_object == su.moving_chepito_obj then
            manny:head_look_at(su.moving_chepito_obj)
        end
        break_here()
    end
end
su.chepito_sing = function(arg1, arg2) -- line 262
    chepito.fade_cue = FALSE
    wait_for_message()
    chepito:say_line("/such100/")
    chepito:wait_for_message()
    chepito:say_line("/such101/")
    chepito:wait_for_message()
    chepito:say_line("/such102/")
    chepito:wait_for_message()
    chepito:say_line("/such103/")
    chepito:wait_for_message()
    chepito:say_line("/such104/")
    chepito:wait_for_message()
    chepito:say_line("/such105/")
    chepito.fade_cue = TRUE
    chepito:wait_for_message()
    chepito:say_line("/such107/")
    chepito:wait_for_message()
    chepito:say_line("/such108/")
    chepito:wait_for_message()
    chepito:say_line("/such109/")
    chepito:wait_for_message()
    chepito:say_line("/such110/")
    chepito:wait_for_message()
    chepito:say_line("/such111/")
    chepito:wait_for_message()
    chepito:say_line("/such112/")
    chepito:wait_for_message()
    chepito:say_line("/such113/")
    chepito:wait_for_message()
    if arg2 then
        start_script(su.glottis_sing)
        glottis:set_speech_mode(MODE_BACKGROUND)
    end
    chepito:say_line("/such121/")
    chepito:wait_for_message()
    chepito:say_line("/such122/")
    chepito:wait_for_message()
    chepito:say_line("/such123/")
    chepito:wait_for_message()
    chepito:say_line("/such125/")
    chepito:wait_for_message()
    chepito:say_line("/such126/")
    chepito:wait_for_message()
    chepito:say_line("/such127/")
    chepito:wait_for_message()
    sleep_for(3000)
    chepito:say_line("/such114/")
    chepito:wait_for_message()
    chepito:say_line("/such116/")
    chepito:wait_for_message()
    chepito:say_line("/such117/")
    chepito:wait_for_message()
    chepito:say_line("/such118/")
    chepito:wait_for_message()
    chepito:say_line("/such120/")
end
su.glottis_sing = function() -- line 334
    glottis:say_line("/sugl128/")
    glottis:wait_for_message()
    glottis:say_line("/sugl129/")
    glottis:wait_for_message()
    glottis:say_line("/sugl130/")
    glottis:wait_for_message()
    glottis:say_line("/sugl131/")
    glottis:wait_for_message()
    glottis:say_line("/sugl132/")
    glottis:wait_for_message()
    glottis:say_line("/sugl133/")
    glottis:wait_for_message()
    glottis:say_line("/sugl134/")
end
su.chepito_orbit = function() -- line 350
    while 1 do
        su.glottis_look_chepito = TRUE
        if not chepito.seen then
            start_sfx("rfPigMus.imu")
            chepito.seen = TRUE
            glottis:say_line("/sugl135/")
            wait_for_message()
            glottis:say_line("/sugl136/")
        end
        local local1 = 0
        if not chepito.just_talked then
            chepito.just_talked = FALSE
            repeat
                local1 = local1 + PerSecond(0.30000001)
                if local1 > 1 then
                    local1 = 1
                end
                SetLightIntensity("chepito_light", local1)
                break_here()
            until local1 == 1
        end
        chepito:walkto(3.8, -5.4790602, 0)
        while not chepito:find_sector_name("chepito_visible") and chepito:is_moving() do
            break_here()
        end
        if sound_playing("rfPigMus.imu") then
            fade_sfx("rfPigMus.imu")
        end
        su.moving_chepito_obj:make_touchable()
        while chepito:find_sector_name("chepito_visible") do
            break_here()
        end
        local local2 = 1
        local local3 = 127
        repeat
            local2 = local2 - PerSecond(0.33000001)
            local3 = local3 - PerSecond(42)
            if local2 < 0 then
                local2 = 0
            end
            SetLightIntensity("chepito_light", local2)
            chepito.saylineTable.vol = local3
            break_here()
        until local2 == 0
        su.glottis_look_chepito = FALSE
        su.moving_chepito_obj:make_untouchable()
        stop_script(su.chepito_sing)
        chepito.saylineTable.vol = nil
        su.chepito_mad = FALSE
        wait_for_message()
        if not chepito.met and not su.talked_spooky then
            su.talked_spooky = TRUE
            glottis:say_line("/sugl137/")
        end
        chepito:wait_for_actor()
        sleep_for(5000)
        chepito:setpos(7.8699999, 3.7, 0)
        chepito:walkto(3.0699999, 9.3500004, 0)
        chepito:wait_for_actor()
        chepito:setpos(-9.8000002, 39, 3)
        chepito:walkto(-26.799999, 38, 3)
        chepito:wait_for_actor()
        sleep_for(5000)
        chepito:default()
        chepito.knows_manny = FALSE
        chepito.just_talked = FALSE
        chepito:setpos({ x = -2.66886, y = -5.3533502, z = 0 })
        chepito:setrot(0, 448.375, 0)
    end
end
su.chepito_light = function(arg1) -- line 433
    local local1 = { }
    local local2, local3, local4
    while 1 do
        if GetActorRect(chepito.hActor) ~= nil then
            local2, local3, local4 = GetActorNodeLocation(chepito.hActor, 12)
            SetLightPosition("chepito_light", local2, local3, local4)
        else
            local1 = chepito:getpos()
            SetLightPosition("chepito_light", local1.x, local1.y, local1.z + 0.5)
        end
        break_here()
    end
end
su.stop_chepito = function(arg1) -- line 448
    if su.chepito_mad then
        manny:say_line("/suma138/")
        wait_for_message()
        chepito:say_line("/such139/")
    elseif find_script(su.dangle_bait) then
        stop_script(su.dangle_bait)
        stop_script(su.chepito_sing)
        su.lantern:make_untouchable()
        manny:say_line("/suma140/")
        Dialog:run("cp1", "dlg_chepito.lua")
    else
        manny:say_line("/suma141/")
        if proximity(manny, chepito) < 1.5 then
            stop_script(su.chepito_orbit)
            stop_script(su.move_chepito_obj)
            chepito:stop_walk()
            Dialog:run("cp1", "dlg_chepito.lua")
        else
            wait_for_message()
            manny:say_line("/suma142/")
        end
    end
end
su.dangle_bait = function() -- line 477
    local local1, local2, local3
    chepito:set_collision_mode(COLLISION_OFF)
    manny:set_collision_mode(COLLISION_OFF)
    start_script(su.chepito_sing)
    chepito:walkto(0.77413899, -3.7153499, 0, 0, 135.5, 0)
    chepito:wait_for_actor()
    local local4 = 0
    stop_script(su.glottis_follow_manny)
    local1, local2, local3 = GetActorNodeLocation(chepito.hActor, 12)
    su.lantern:make_touchable()
    su.lantern.interest_actor:setpos(local1, local2, local3)
    su.moving_chepito_obj:make_untouchable()
    repeat
        glottis:head_look_at(chepito)
        chepito:play_chore(cheptio_2conv)
        sleep_for(2000)
        glottis:head_look_at_manny()
        chepito:play_chore(cheptio_2base)
        sleep_for(2000)
        local4 = local4 + 1
    until local4 == 3
    su.lantern:make_untouchable()
    chepito:walkto(1.31036, -5.4790602, 0)
    single_start_script(su.chepito_orbit)
    single_start_script(su.move_chepito_obj)
    single_start_script(su.glottis_follow_manny)
end
su.cpos = { }
su.crot = { }
su.grab_lantern = function() -- line 513
    local local1 = { }
    local local2
    START_CUT_SCENE()
    manny:walkto(0.44378, -3.6732299, 0, 0, -160.394, 0)
    manny:wait_for_actor()
    while chepito:is_moving() do
        break_here()
    end
    local local3 = start_script(su.glottis_to_manny)
    stop_script(su.dangle_bait)
    stop_script(su.chepito_sing)
    manny:push_costume("mn_ctm.cos")
    manny:play_chore(mn_ctm_grabs_ct)
    local1 = manny:getpos()
    local2 = manny:getrot()
    su.cpos = chepito:getpos()
    su.crot = chepito:getrot()
    chepito:setpos(local1)
    chepito:setrot(local2)
    chepito:push_costume("mn_ctc.cos")
    chepito:play_chore(mn_ctm_grabs_ct)
    manny:wait_for_chore()
    chepito:wait_for_chore()
    manny:stop_chore(mn_ctm_grabs_ct)
    chepito:stop_chore(mn_ctm_grabs_ct)
    manny:play_chore_looping(mn_ctm_hold_ct)
    chepito:play_chore_looping(mn_ctm_hold_ct)
    wait_for_script(local3)
    start_script(manny_head_look_at_glottis)
    su.lantern:make_untouchable()
    END_CUT_SCENE()
    lantern_save_handler = system.buttonHandler
    system.buttonHandler = suButtonHandler
    chepito:say_line("/such143/")
    wait_for_message()
    chepito:say_line("/such144/")
    wait_for_message()
    chepito:say_line("/such145/")
    wait_for_message()
    chepito:say_line("/such146/")
    wait_for_message()
    START_CUT_SCENE()
    su.moving_chepito_obj:make_untouchable()
    su.lantern:make_untouchable()
    chepito:set_chore_looping(mn_ctc_hold_ct, FALSE)
    manny:set_chore_looping(mn_ctm_hold_ct, FALSE)
    chepito:wait_for_chore()
    chepito:play_chore(mn_ctc_ct_struggle)
    manny:play_chore(mn_ctc_ct_struggle)
    chepito:wait_for_chore()
    chepito:setpos(su.cpos)
    chepito:setrot(su.crot)
    chepito:pop_costume()
    chepito:play_chore(chepito_break_free)
    sleep_for(900)
    manny:stop_chore(mn_ctc_ct_struggle)
    chepito:wait_for_chore()
    manny:pop_costume()
    if not su.tried_grab then
        su.tried_grab = TRUE
        chepito:say_line("/such147/")
    else
        chepito:say_line("/such148/")
    end
    wait_for_message()
    su.chepito_mad = TRUE
    chepito:walkto(1.31036, -5.4790602, 0)
    single_start_script(su.chepito_orbit)
    single_start_script(su.move_chepito_obj)
    chepito:say_line("/such149/")
    system.buttonHandler = lantern_save_handler
    END_CUT_SCENE()
end
su.give_chepito_to_glottis = function() -- line 598
    START_CUT_SCENE()
    stop_script(su.grab_lantern)
    stop_script(su.glottis_follow_manny)
    glottis:head_look_at(nil)
    glottis:stop_chore(glottis_sailor_home_pose, "glottis_sailor.cos")
    glottis:push_costume("gl_grab_ct.cos")
    manny:set_chore_looping(mn_ctm_hold_ct, FALSE)
    chepito:set_chore_looping(mn_ctm_hold_ct, FALSE)
    manny:wait_for_chore()
    manny:stop_chore(mn_ctm_hold_ct)
    chepito:stop_chore(mn_ctm_hold_ct)
    manny:play_chore(mn_ctm_handoff_ct)
    chepito:play_chore(mn_ctm_handoff_ct)
    glottis:play_chore(0)
    chepito:say_line("/such172/")
    manny:wait_for_chore()
    manny:pop_costume()
    chepito:free()
    glottis:wait_for_chore()
    glottis:say_line("/sugl173/")
    wait_for_message()
    manny:say_line("/suma174/")
    MakeSectorActive("uber_sektor", TRUE)
    start_script(manny.walkto, manny, -3.52772, 0.790292, 0)
    wait_for_message()
    PreRender(TRUE, FALSE)
    glottis:set_walk_chore(2, "gl_grab_ct.cos")
    glottis:set_rest_chore(1, "gl_grab_ct.cos")
    start_script(glottis.walkto, glottis, -3.52772, 0.790292, 0)
    chepito:say_line("/such175/")
    wait_for_message()
    manny:say_line("/suma176/")
    wait_for_message()
    IrisDown(200, 345, 1000)
    sleep_for(1000)
    END_CUT_SCENE()
    system.buttonHandler = lantern_save_handler
    PreRender(TRUE, TRUE)
    start_script(cut_scene.thepearl)
end
su.turn_right = function() -- line 643
    START_CUT_SCENE()
    stop_script(su.grab_lantern)
    chepito:set_chore_looping(mn_ctc_hold_ct, FALSE)
    manny:set_chore_looping(mn_ctm_hold_ct, FALSE)
    chepito:wait_for_chore()
    chepito:play_chore(mn_ctc_ct_struggle)
    manny:play_chore(mn_ctc_ct_struggle)
    chepito:wait_for_chore()
    chepito:setpos(0.44378, -3.67323, 0)
    chepito:setrot(0, -160.394, 0)
    chepito:pop_costume()
    chepito:play_chore(chepito_break_free)
    sleep_for(900)
    manny:stop_chore(mn_ctc_ct_struggle)
    chepito:wait_for_chore()
    chepito:stop_chore(chepito_break_free)
    chepito:setpos(0.754139, -3.71535, 0)
    chepito:setrot(0, 150.5, 0)
    manny:pop_costume()
    if not su.tried_grab then
        su.tried_grab = TRUE
        chepito:say_line("/such147/")
    else
        chepito:say_line("/such148/")
    end
    wait_for_message()
    su.chepito_mad = TRUE
    chepito:walkto(1.31036, -5.47906, 0)
    single_start_script(su.chepito_orbit)
    single_start_script(su.move_chepito_obj)
    chepito:say_line("/such149/")
    system.buttonHandler = lantern_save_handler
    END_CUT_SCENE()
end
su.set_up_actors = function(arg1) -- line 685
    chepito:default()
    chepito:put_in_set(su)
    chepito:follow_boxes()
    chepito:setpos({ x = -2.66886, y = -5.35335, z = 0 })
    chepito:setrot(0, 448.375, 0)
    chepito:set_rest_chore(chepito_base)
    chepito.start_position = { }
end
suButtonHandler = function(arg1, arg2, arg3) -- line 696
    if arg1 == EKEY and controlKeyDown and arg2 then
        start_script(execute_user_command)
        bHandled = TRUE
    elseif control_map.TURN_RIGHT[arg1] and arg2 and cutSceneLevel <= 0 then
        start_script(su.give_chepito_to_glottis)
    elseif control_map.TURN_LEFT[arg1] and arg2 and cutSceneLevel <= 0 then
        start_script(su.give_chepito_to_glottis)
    else
        CommonButtonHandler(arg1, arg2, arg3)
    end
end
manny_head_look_at_glottis = function() -- line 710
    local local1 = { }
    local1 = glottis:getpos()
    manny:head_look_at(local1.x, local1.y, local1.z + 1.2)
end
su.glottis_to_manny = function(arg1) -- line 717
    local local1 = { }
    local local2, local3
    local local4 = { x = 0.80189598, y = 0.00076497701, z = 0 }
    local1 = manny:getrot()
    local3 = RotateVector(local4, local1)
    local2 = manny:getpos()
    local3.x = local3.x + local2.x
    local3.y = local3.y + local2.y
    local3.z = local3.z + local2.z
    glottis:setrot(0, 190, 0)
end
su.glottis_follow_manny = function(arg1) -- line 736
    local local1 = { }
    while 1 do
        if su.glottis_look_chepito then
            glottis:head_look_at(chepito)
        else
            glottis:head_look_at_manny()
        end
        break_here()
    end
end
su.test = function() -- line 754
    chepito:default()
    chepito:ignore_boxes()
    manny:push_costume("chepito.cos")
    glottis:push_costume("mn_ctc.cos")
    chepito:play_chore_looping(chepito_break_free)
    while 1 do
        break_here()
    end
    manny:play_chore(2)
    chepito:play_chore(chepito_grabs)
    manny:wait_for_chore()
    manny:stop_chore(2)
    manny:play_chore(3)
    manny:wait_for_chore()
    manny:stop_chore(3)
    manny:play_chore(4)
    manny:wait_for_chore()
    manny:stop_chore(4)
    manny:play_chore(5)
    manny:wait_for_chore()
    manny:stop_chore(5)
    chepito:wait_for_chore()
end
su.enter = function(arg1) -- line 796
    su:set_up_actors()
    manny:put_in_set(su)
    manny:follow_boxes()
    MakeSectorActive("uber_sektor", FALSE)
    manny:setpos(-0.0379301, -3.35008, 0)
    manny:setrot(0, 176.765, 0)
    start_script(su.sink_aftermath)
    SetLightPosition("chepito_light", -0.326861, -5.15835, 0.564)
    SetLightIntensity("chepito_light", 0)
    su:add_ambient_sfx(underwater_ambience_list, underwater_ambience_parm_list)
end
su.exit = function(arg1) -- line 812
    chepito:free()
    stop_sound("bubvox.imu")
    stop_script(su.chepito_orbit)
    stop_script(su.move_chepito_obj)
    stop_script(su.chepito_light)
    stop_script(su.glottis_follow_manny)
end
su.ring1 = { }
su.ring1.walkOut = function(arg1) -- line 827
    START_CUT_SCENE("no head")
    MakeSectorActive("ring1", FALSE)
    MakeSectorActive("ring2", FALSE)
    MakeSectorActive("ring3", FALSE)
    MakeSectorActive("ring4", FALSE)
    MakeSectorActive("ring5", FALSE)
    MakeSectorActive("ring6", FALSE)
    MakeSectorActive("ring7", FALSE)
    MakeSectorActive("ring8", FALSE)
    MakeSectorActive("ring9", FALSE)
    MakeSectorActive("ring10", FALSE)
    glottis:say_line("/sugl150/")
    wait_for_message()
    manny:head_look_at(glottis)
    glottis:say_line("/sugl151/")
    wait_for_message()
    glottis:say_line("/sugl152/")
    wait_for_message()
    glottis:say_line("/sugl153/")
    wait_for_message()
    manny:head_look_at(nil)
    manny:shrug_gesture()
    manny:say_line("/suma154/")
    wait_for_message()
    manny:say_line("/suma155/")
    END_CUT_SCENE()
    enable_head_control(TRUE)
    sleep_for(5000)
    single_start_script(su.chepito_orbit)
    single_start_script(su.move_chepito_obj)
end
su.ring2 = su.ring1
su.ring3 = su.ring1
su.ring4 = su.ring1
su.ring5 = su.ring1
su.ring6 = su.ring1
su.ring7 = su.ring1
su.ring8 = su.ring1
su.ring9 = su.ring1
su.ring10 = su.ring1
su.lantern = Object:create(su, "/sutx156/lantern", 0, 0, 0, { range = 2 })
su.lantern:make_untouchable()
su.lantern.immediate = TRUE
su.lantern.lookAt = function(arg1) -- line 879
    manny:say_line("/suma157/")
end
su.lantern.pickUp = function(arg1) -- line 883
    start_script(su.grab_lantern)
end
su.lantern.use = su.lantern.pickUp
su.moving_chepito_obj = Object:create(su, "/sutx158/Chepito", 0, 0, 0, { range = 1.5 })
su.moving_chepito_obj.immediate = TRUE
su.moving_chepito_obj:make_untouchable()
su.moving_chepito_obj.lookAt = function(arg1) -- line 894
    manny:say_line("/suma159/")
end
su.moving_chepito_obj.use = function(arg1) -- line 898
    if find_script(su.dangle_bait) then
        su.lantern:pickUp()
    else
        start_script(su.stop_chepito)
    end
end
su.sunken_lola = Object:create(su, "/sutx160/Lola", 0.151732, -3.0110099, 1.63, { range = 1.7 })
su.sunken_lola.use_pnt_x = 0.33173099
su.sunken_lola.use_pnt_y = -3.0310099
su.sunken_lola.use_pnt_z = 0
su.sunken_lola.use_rot_x = 0
su.sunken_lola.use_rot_y = 4.5426698
su.sunken_lola.use_rot_z = 0
su.sunken_lola.lookAt = function(arg1) -- line 915
    manny:say_line("/suma161/")
end
su.sunken_lola.pickUp = function(arg1) -- line 919
    system.default_response("underwater")
end
su.sunken_lola.use = function(arg1) -- line 923
    manny:say_line("/suma162/")
    if not arg1.seen then
        arg1.seen = TRUE
        wait_for_message()
        glottis:say_line("/sugl163/")
        wait_for_message()
        manny:say_line("/suma164/")
        wait_for_message()
        glottis:say_line("/sugl165/")
    end
end
su.glottis_obj = Object:create(su, "/sutx166/Glottis", -0.162861, -3.8013501, 0.759, { range = 1 })
su.glottis_obj.use_pnt_x = -0.403806
su.glottis_obj.use_pnt_y = -3.8994901
su.glottis_obj.use_pnt_z = 0
su.glottis_obj.use_rot_x = 0
su.glottis_obj.use_rot_y = 51.2481
su.glottis_obj.use_rot_z = 0
su.glottis_obj.lookAt = function(arg1) -- line 944
    manny:say_line("/suma167/")
end
su.glottis_obj.pickUp = su.sunken_lola.pickUp
su.glottis_obj.use = function(arg1) -- line 950
    START_CUT_SCENE()
    manny:say_line("/suma168/")
    wait_for_message()
    glottis:say_line("/sugl169/")
    wait_for_message()
    glottis:say_line("/sugl170/")
    wait_for_message()
    manny:say_line("/suma171/")
    END_CUT_SCENE()
end
su.pearl = Object:create(su, "/sutx177/light", -6.7880802, 8.1357002, 1.08, { range = 13.3 })
su.pearl.use_pnt_x = -1.75808
su.pearl.use_pnt_y = -3.5142901
su.pearl.use_pnt_z = 0
su.pearl.use_rot_x = 0
su.pearl.use_rot_y = 45.6399
su.pearl.use_rot_z = 0
su.pearl.lookAt = function(arg1) -- line 972
    manny:say_line("/suma178/")
    wait_for_message()
    manny:say_line("/suma179/")
end
su.pearl.use = function(arg1) -- line 978
    manny:say_line("/suma180/")
end
su.pearl.pickUp = su.pearl.use
glottis_sailor_trans_rock = 0
glottis_sailor_ear_wax = 1
glottis_sailor_trans_home = 2
glottis_sailor_smart_ass = 3
glottis_sailor_rock_loop = 4
glottis_sailor_look_down = 5
glottis_sailor_home_pose = 6
glottis_sailor_flip_ears = 7
glottis_sailor_mumble = 8
glottis_sailor_c = 9
glottis_sailor_f = 10
glottis_sailor_e = 11
glottis_sailor_u = 12
glottis_sailor_t = 13
glottis_sailor_m = 14
glottis_sailor_a = 15
glottis_sailor_o = 16
glottis_sailor_stop_talk = 17
sv_helps_peek = 0
sv_helps_peek_talk = 1
sv_helps_hide = 2
sv_helps_hidden = 3
sv_helps_open_door = 4
sv_helps_mumble = 5
sv_helps_stop_talk = 6
sv_helps_a = 7
sv_helps_c = 8
sv_helps_e = 9
sv_helps_f = 10
sv_helps_l = 11
sv_helps_m = 12
sv_helps_o = 13
sv_helps_u = 14
sv_helps_t = 15
sv_hq_idles_talk_stand_up = 0
sv_hq_idles_hand_talk = 1
sv_hq_idles_hand_forw = 2
sv_hq_idles_hand_o_hold = 3
sv_hq_idles_oh_well = 4
sv_hq_idles_head_turn_left = 5
sv_hq_idles_hold_head_left = 6
sv_hq_idles_head_up_down = 7
sv_hq_idles_gets_up = 8
sv_hq_idles_grab_n_sit = 9
sv_hq_idles_screen_gest = 10
sv_hq_idles_turn_l_hand_out = 11
sv_hq_idles_hand_out_up_down = 12
sv_hq_idles_turn_back = 13
sv_hq_idles_hold = 14
sv_hq_idles_hand_up_down = 15
sv_hq_idles_head_turn_right = 16
sv_hq_idles_scratch_chin = 17
sv_hq_idles_to_salute = 18
sv_hq_idles_salute_hold = 19
sv_hq_idles_salute_done = 20
sv_hq_idles_talk_stand_hold = 21
sv_hq_idles_talk_stand_down = 22
sv_hq_idles_hide_the_damn_eggs = 23
sv_in_hq_scratch_chin = 0
sv_in_hq_hold_chin = 1
sv_in_hq_hand_down = 2
sv_in_hq_hand_up = 3
sv_in_hq_drop_hand = 4
sv_in_hq_to_salute = 5
sv_in_hq_hold_salute = 6
sv_in_hq_done_salute = 7
sv_in_hq_mumble = 8
sv_in_hq_walk = 9
sv_in_hq_begin_walk = 10
sv_in_hq_end_walk = 11
sv_in_hq_stop_talk = 12
sv_in_hq_a = 13
sv_in_hq_c = 14
sv_in_hq_e = 15
sv_in_hq_f = 16
sv_in_hq_l = 17
sv_in_hq_m = 18
sv_in_hq_o = 19
sv_in_hq_u = 20
sv_in_hq_t = 21
tar_river_flow = 0
CheckFirstTime("tb.lua")
dofile("doug_idles.lua")
dofile("ma_photopass.lua")
tb = Set:create("tb.set", "track betting", { tb_fotws = 1, tb_strws = 0, tb_strws2 = 0, tb_strws3 = 0, tb_strws4 = 0, tb_overhead = 2 })
tb.show_room = function(arg1) -- line 17
    START_CUT_SCENE()
    cameraman_disabled = FALSE
    manny:walkto(-0.619026, -0.0328044, 0, 0, 272.47, 0)
    manny:wait_for_actor()
    manny:head_look_at_point({ x = 1.84646, y = -0.367253, z = 0.595 })
    manny:say_line("/lyma009/")
    manny:point_gesture()
    manny:wait_for_message()
    manny:walkto(0.723649, -0.690082, 0, 0, 306.381, 0)
    while point_proximity(0.723649, -0.690082, 0) > 0.4 do
        break_here()
    end
    tw:switch_to_set()
    manny:head_look_at(nil)
    manny:put_in_set(tw)
    manny:setpos(0.938004, -0.50864, 0)
    manny:setrot(0, 309.019, 0)
    manny:head_look_at(tw.track)
    manny:walkto(tw.track)
    manny:wait_for_actor()
    tw.track:lookAt()
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
tb.crowd_cheer = function(arg1) -- line 43
    local local1
    if arg1 or rndint(100) < 40 then
        local1 = pick_one_of({ "tkCheer1.wav", "tkCheer2.wav", "tkCheer3.wav", "tkCheer4.wav" })
        if system.currentSet == tb then
            vol = 65
        elseif system.currentSet == tw then
            vol = 65
        elseif system.currentSet == ts then
            vol = 80
        elseif system.currentSet == ks then
            vol = 30
        elseif system.currentSet == kh then
            vol = 40
        else
            vol = 0
        end
        if vol > 0 then
            start_sfx(local1, IM_LOW_PRIORITY, vol)
            set_pan(local1, rndint(30, 100))
        end
    end
end
tb.off_screen_kittys = function() -- line 71
    local local1
    local local2
    while 1 do
        sleep_for(rnd(6000, 12000))
        if not cat_race_running then
            local1 = pick_one_of({ "kitty1.wav", "kitty2.wav", "kitty3.wav", "kitty4.wav", "kitty5.wav" })
            if system.currentSet == tb then
                local2 = 30
            elseif system.currentSet == tw then
                local2 = 30
            elseif system.currentSet == ts then
                local2 = 35
            elseif system.currentSet == ks then
                local2 = 45
            elseif system.currentSet == kh then
                local2 = 55
            else
                local2 = 0
            end
            if local2 > 0 then
                start_sfx(local1, IM_LOW_PRIORITY, local2)
                if rnd() then
                    set_pan(local1, 127)
                else
                    set_pan(local1, 1)
                end
            end
        end
        break_here()
    end
end
tb.init_cat_names = function() -- line 106
    local local1 = 0
    cat_names = { }
    repeat
        local1 = local1 + 1
        cat_names[local1] = { name = nil, racing = nil, odds = 3 }
    until local1 == 60
    cat_names[1].name = "/tbta066/"
    cat_names[2].name = "/tbta067/"
    cat_names[3].name = "/tbta068/"
    cat_names[4].name = "/tbta069/"
    cat_names[5].name = "/tbta070/"
    cat_names[6].name = "/tbta071/"
    cat_names[7].name = "/tbta072/"
    cat_names[8].name = "/tbta073/"
    cat_names[9].name = "/tbta074/"
    cat_names[10].name = "/tbta075/"
    cat_names[11].name = "/tbta076/"
    cat_names[12].name = "/tbta077/"
    cat_names[13].name = "/tbta078/"
    cat_names[14].name = "/tbta079/"
    cat_names[15].name = "/tbta080/"
    cat_names[16].name = "/tbta081/"
    cat_names[17].name = "/tbta082/"
    cat_names[18].name = "/tbta083/"
    cat_names[19].name = "/tbta084/"
    cat_names[20].name = "/tbta085/"
    cat_names[21].name = "/tbta086/"
    cat_names[22].name = "/tbta087/"
    cat_names[23].name = "/tbta088/"
    cat_names[24].name = "/tbta089/"
    cat_names[25].name = "/tbta090/"
    cat_names[26].name = "/tbta091/"
    cat_names[27].name = "/tbta092/"
    cat_names[28].name = "/tbta093/"
    cat_names[29].name = "/tbta094/"
    cat_names[30].name = "/tbta095/"
    cat_names[31].name = "/tbta096/"
    cat_names[32].name = "/tbta097/"
    cat_names[33].name = "/tbta098/"
    cat_names[34].name = "/tbta099/"
    cat_names[35].name = "/tbta100/"
    cat_names[36].name = "/tbta101/"
    cat_names[37].name = "/tbta102/"
    cat_names[38].name = "/tbta103/"
    cat_names[39].name = "/tbta104/"
    cat_names[40].name = "/tbta105/"
    cat_names[41].name = "/tbta106/"
    cat_names[42].name = "/tbta107/"
    cat_names[43].name = "/tbta108/"
    cat_names[44].name = "/tbta109/"
    cat_names[45].name = "/tbta110/"
    cat_names[46].name = "/tbta111/"
    cat_names[47].name = "/tbta112/"
    cat_names[48].name = "/tbta113/"
    cat_names[49].name = "/tbta114/"
    cat_names[50].name = "/tbta115/"
    cat_names[51].name = "/tbta116/"
    cat_names[52].name = "/tbta117/"
    cat_names[53].name = "/tbta118/"
    cat_names[54].name = "/tbta119/"
    cat_names[55].name = "/tbta120/"
    cat_names[56].name = "/tbta121/"
    cat_names[57].name = "/tbta122/"
    cat_names[58].name = "/tbta123/"
    cat_names[59].name = "/tbta124/"
    cat_names[60].name = "/tbta125/"
    local1 = 0
    cat_announcements = { }
    repeat
        local1 = local1 + 1
        cat_announcements[local1] = { say = nil, place = nil }
    until local1 == 44
    cat_announcements[1].say = "/tbta126/"
    cat_announcements[2].say = "/tbta127/"
    cat_announcements[3].say = "/tbta128/"
    cat_announcements[4].say = "/tbta129/"
    cat_announcements[5].say = "/tbta130/"
    cat_announcements[6].say = "/tbta131/"
    cat_announcements[7].say = "/tbta132/"
    cat_announcements[8].say = "/tbta133/"
    cat_announcements[9].say = "/tbta134/"
    cat_announcements[10].say = "/tbta135/"
    cat_announcements[11].say = "/tbta136/"
    cat_announcements[12].say = "/tbta137/"
    cat_announcements[13].say = "/tbta142/"
    cat_announcements[14].say = "/tbta143/"
    cat_announcements[15].say = "/tbta144/"
    cat_announcements[15].place = 1
    cat_announcements[16].say = "/tbta145/"
    cat_announcements[16].place = -8
    cat_announcements[17].say = "/tbta146/"
    cat_announcements[17].place = 3
    cat_announcements[18].say = "/tbta147/"
    cat_announcements[18].place = 1
    cat_announcements[19].say = "/tbta148/"
    cat_announcements[19].place = 2
    cat_announcements[20].say = "/tbta149/"
    cat_announcements[20].place = 3
    cat_announcements[21].say = "/tbta150/"
    cat_announcements[21].place = -5
    cat_announcements[22].say = "/tbta151/"
    cat_announcements[22].place = -3
    cat_announcements[23].say = "/tbta152/"
    cat_announcements[23].place = -1
    cat_announcements[24].say = "/tbta153/"
    cat_announcements[24].place = 2
    cat_announcements[25].say = "/tbta154/"
    cat_announcements[25].place = -1
    cat_announcements[26].say = "/tbta155/"
    cat_announcements[26].place = -8
    cat_announcements[27].say = "/tbta156/"
    cat_announcements[27].place = -8
    cat_announcements[28].say = "/tbta157/"
    cat_announcements[28].place = -8
    cat_announcements[29].say = "/tbta158/"
    cat_announcements[29].place = nil
    cat_announcements[30].say = "/tbta159/"
    cat_announcements[30].place = nil
    cat_announcements[31].say = "/tbta160/"
    cat_announcements[31].place = 97
    cat_announcements[32].say = "/tbta161/"
    cat_announcements[32].place = 98
    cat_announcements[33].say = "/tbta162/"
    cat_announcements[33].place = 3
    cat_announcements[34].say = "/tbta163/"
    cat_announcements[34].place = -1
    cat_announcements[35].say = "/tbta164/"
    cat_announcements[35].place = 1
    cat_announcements[36].say = "/tbta165/"
    cat_announcements[36].place = 2
    cat_announcements[37].say = "/tbta166/"
    cat_announcements[37].place = 3
    cat_announcements[38].say = "/tbta167/"
    cat_announcements[38].place = -1
    cat_announcements[39].say = "/tbta170/"
    cat_announcements[39].place = -2
    cat_announcements[40].say = "/tbta171/"
    cat_announcements[40].place = 3
    cat_announcements[41].say = "/tbta172/"
    cat_announcements[41].place = -1
    cat_announcements[42].say = "/tbta173/"
    cat_announcements[42].place = -1
end
time_announcements = { }
time_announcements[1] = "/tbta138/"
time_announcements[2] = "/tbta139/"
time_announcements[3] = "/tbta140/"
time_announcements[4] = "/tbta141/"
tb.NUMBER_OF_CATS = 8
track_announcer = Actor:create(nil, nil, nil, "announcer")
track_announcer.say_line = function(arg1, arg2) -- line 265
    local local1
    if system.currentSet == tb or system.currentSet == hh or system.currentSet == ts or system.currentSet == tw then
        arg1.sfx_boy = nil
        Actor.say_line(arg1, arg2, { background = TRUE, volume = announcer_volume, skip_log = TRUE })
    elseif system.currentSet == hl then
        arg2 = strsub(arg2, 2)
        local1 = strlen(arg2)
        arg2 = strsub(arg2, 1, local1 - 1)
        arg2 = arg2 .. ".wav"
        arg1.sfx_boy = start_sfx(arg2, IM_LOW_PRIORITY, announcer_volume)
    end
end
track_announcer.wait_for_message = function(arg1) -- line 280
    if arg1.sfx_boy then
        wait_for_sound(arg1.sfx_boy)
    else
        while IsMessageGoing(arg1.hActor) do
            break_here()
        end
    end
end
start_cat_sfx = function(arg1, arg2) -- line 291
    start_sfx(arg1)
    set_pan(arg1, 10)
    if system.currentSet == tb or system.currentSet == tw then
        set_vol(arg1, 100)
    elseif system.currentSet == ts then
        set_vol(arg1, 64)
    elseif system.currentSet == hl then
        set_vol(arg1, 20)
    else
        stop_sound(arg1)
    end
    if not arg2 then
        fade_pan_sfx(arg1, 1800, 100)
    end
end
announcer_volume_setting = function() -- line 309
    while 1 do
        if system.currentSet == tb then
            announcer_volume = 90
        elseif system.currentSet == tw then
            announcer_volume = 115
        elseif system.currentSet == ts then
            announcer_volume = 127
        elseif system.currentSet == hl or system.currentSet == hh then
            announcer_volume = 64
        end
        break_here()
    end
end
tb.cat_paws = function() -- line 325
    local local1 = system.currentSet
    local local2 = 0
    while cat_race_running do
        if system.currentSet == tb or system.currentSet == tw then
            local2 = 35
        elseif system.currentSet == ts then
            local2 = 25
        elseif system.currentSet == hl then
            local2 = 14
        else
            if local2 > 0 then
                fade_sfx("twRaceLp.IMU", 300, 0)
            end
            local2 = 0
        end
        if local2 > 0 then
            single_start_sfx("twRaceLp.IMU")
            set_vol("twRaceLp.imu", local2)
        end
        repeat
            break_here()
        until local1 ~= system.current_set
        local1 = system.currentSet
    end
    fade_sfx("twRaceLp.IMU", 500, 0)
end
tb.pre_race_timer = function() -- line 358
    local local1 = 0
    repeat
        local1 = local1 + 1
        tb.race_countdown_announcement = time_announcements[local1]
        sleep_for(60000)
    until local1 == 4
end
tb.init_cat_race = function() -- line 367
    local local1 = 0
    local local2
    local local3, local4
    local local5
    local local6
    cat_racers = { }
    repeat
        local1 = local1 + 1
        cat_racers[local1] = { name = nil, distance = 0, number = nil, odds = nil }
    until local1 == tb.NUMBER_OF_CATS
    local1 = 0
    repeat
        local1 = local1 + 1
        cat_names[local1].racing = nil
    until local1 == 60
    local1 = 0
    repeat
        local1 = local1 + 1
        repeat
            local2 = rndint(1, 60)
            if not cat_names[local2].racing then
                cat_names[local2].racing = TRUE
                cat_racers[local1].name = cat_names[local2].name
                cat_racers[local1].distance = 1
                cat_racers[local1].number = local2
                cat_racers[local1].odds = cat_names[local2].odds
            end
        until cat_racers[local1].name
    until local1 == tb.NUMBER_OF_CATS
end
tb.cat_race_simulator = function() -- line 404
    local local1 = 0
    local local2
    local local3, local4
    local local5
    local local6
    local local7, local8
    tb.miracle = FALSE
    calculate_cats = TRUE
    cat_race_running = TRUE
    while cat_race_running do
        if calculate_cats then
            local1 = 0
            repeat
                local1 = local1 + 1
                cat_racers[local1].distance = cat_racers[local1].distance + rnd(1, 5) + cat_racers[local1].odds
            until local1 == tb.NUMBER_OF_CATS
            local7 = rnd(1, 100)
            local8 = rnd(1, 100)
            if not tb.miracle and local7 == local8 then
                tb.miracle = TRUE
                cat_racers[tb.NUMBER_OF_CATS].distance = 1000000
                miracle_cat = cat_racers[tb.NUMBER_OF_CATS].name
            end
            local1 = 0
            repeat
                local1 = local1 + 1
                local3 = local1
                local4 = local3 + 1
                while cat_racers[local4] do
                    if cat_racers[local3].distance < cat_racers[local4].distance then
                        local5 = cat_racers[local3].name
                        local6 = cat_racers[local3].distance
                        cat_racers[local3].name = cat_racers[local4].name
                        cat_racers[local3].distnce = cat_racers[local4].distance
                        cat_racers[local4].name = local5
                        cat_racers[local4].distnce = local6
                    end
                    local3 = local3 + 1
                    local4 = local3 + 1
                end
            until local1 == tb.NUMBER_OF_CATS
        end
        break_here()
    end
end
tb.track_announcer = function() -- line 456
    local local1
    local local2 = 1
    local local3, local4
    local local5
    local local6 = FALSE
    while 1 do
        local2 = 1
        cat_race_running = FALSE
        local local7 = start_script(tb.pre_race_timer)
        while find_script(local7) do
            if tb.race_countdown_announcement then
                track_announcer:say_line(tb.race_countdown_announcement)
                tb.race_countdown_announcement = nil
            else
                track_announcer:say_line(cat_announcements[local2].say)
                local2 = local2 + 1
                if local2 == 13 then
                    local2 = 1
                end
            end
            track_announcer:wait_for_message()
            sleep_for(20000)
        end
        track_announcer:say_line(cat_announcements[13].say)
        track_announcer:wait_for_message()
        tb.init_cat_race()
        local2 = 0
        track_announcer:say_line("/tbta164/")
        repeat
            local2 = local2 + 1
            track_announcer:wait_for_message()
            track_announcer:say_line(cat_racers[local2].name)
            track_announcer:wait_for_message()
        until local2 == tb.NUMBER_OF_CATS
        local local8 = start_script(tb.cat_race_simulator)
        sleep_for(2000)
        start_cat_sfx("kittyBel.wav", TRUE)
        sleep_for(500)
        track_announcer:say_line(cat_announcements[14].say)
        tb.crowd_cheer(TRUE)
        single_start_script(tb.cat_paws)
        track_announcer:wait_for_message()
        local6 = FALSE
        local2 = 14
        repeat
            calculate_cats = FALSE
            local2 = local2 + 1
            if cat_announcements[local2].place then
                if tb.miracle and not local6 then
                    local6 = TRUE
                    local2 = local2 - 1
                    track_announcer:say_line(miracle_cat)
                    track_announcer:wait_for_message()
                    track_announcer:say_line("/tbta168/")
                    track_announcer:wait_for_message()
                    track_announcer:say_line("/tbta169/")
                    track_announcer:wait_for_message()
                    tb.crowd_cheer(TRUE)
                elseif cat_announcements[local2].place == 99 then
                    local3 = cat_racers[1]
                    local4 = cat_racers[2]
                    track_announcer:say_line(local3.name)
                    track_announcer:wait_for_message()
                    track_announcer:say_line(cat_announcements[local2].say)
                    track_announcer:wait_for_message()
                    track_announcer:say_line(local4.name)
                    track_announcer:wait_for_message()
                elseif cat_announcements[local2].place == 98 then
                    local3 = cat_racers[1]
                    local4 = cat_racers[2]
                    track_announcer:say_line(local4.name)
                    track_announcer:wait_for_message()
                    track_announcer:say_line(cat_announcements[local2].say)
                    track_announcer:wait_for_message()
                    track_announcer:say_line(local3.name)
                    track_announcer:wait_for_message()
                elseif cat_announcements[local2].place == 97 then
                    local3 = cat_racers[1]
                    local4 = cat_racers[2]
                    track_announcer:say_line(local3.name)
                    track_announcer:wait_for_message()
                    track_announcer:say_line(local4.name)
                    track_announcer:wait_for_message()
                    track_announcer:say_line(cat_announcements[local2].say)
                    track_announcer:wait_for_message()
                elseif cat_announcements[local2].place < 0 then
                    local5 = abs(cat_announcements[local2].place)
                    local3 = cat_racers[local5]
                    track_announcer:say_line(local3.name)
                    track_announcer:wait_for_message()
                    track_announcer:say_line(cat_announcements[local2].say)
                    track_announcer:wait_for_message()
                else
                    local5 = abs(cat_announcements[local2].place)
                    local3 = cat_racers[local5]
                    track_announcer:say_line(cat_announcements[local2].say)
                    track_announcer:wait_for_message()
                    track_announcer:say_line(local3.name)
                    track_announcer:wait_for_message()
                end
            else
                track_announcer:say_line(cat_announcements[local2].say)
                track_announcer:wait_for_message()
            end
            tb.crowd_cheer()
            if local2 == 35 or local2 == 36 or local2 == 37 or local2 == 41 or local2 == 42 then
                if local2 == 35 then
                    start_cat_sfx("twCatBy.wav")
                    if system.currentSet == tw then
                        StartMovie("tb_kitty.snm", nil, 168, 398)
                    end
                end
                break_here()
            elseif local2 == 24 then
                start_cat_sfx("twCatBy.wav")
                if system.currentSet == tw then
                    StartMovie("tb_kitty.snm", nil, 168, 398)
                end
            else
                calculate_cats = TRUE
                sleep_for(3000)
            end
        until local2 == 42
        cat_race_running = FALSE
        start_cat_sfx("kittyBel.wav", TRUE)
        tb.crowd_cheer(TRUE)
        if rnd() then
            track_announcer:say_line("/tbta177/")
            track_announcer:wait_for_message()
            track_announcer:say_line("/tbta178/")
            track_announcer:wait_for_message()
            sleep_for(5000)
        end
        track_announcer:say_line("/tbta174/")
        track_announcer:wait_for_message()
        track_announcer:say_line(cat_racers[1].name)
        track_announcer:wait_for_message()
        track_announcer:say_line("/tbta175/")
        track_announcer:wait_for_message()
        track_announcer:say_line(cat_racers[2].name)
        track_announcer:wait_for_message()
        track_announcer:say_line("/tbta176/")
        track_announcer:wait_for_message()
        track_announcer:say_line(cat_racers[3].name)
        track_announcer:wait_for_message()
        sleep_for(5000)
        track_announcer:wait_for_message()
        track_announcer:say_line("/tbta179/")
        track_announcer:wait_for_message()
        track_announcer:say_line(cat_racers[1].name)
        track_announcer:wait_for_message()
        local2 = 1
        track_announcer:say_line("/tbta166/")
        repeat
            local2 = local2 + 1
            track_announcer:wait_for_message()
            track_announcer:say_line(cat_racers[local2].name)
            track_announcer:wait_for_message()
            cat_names[cat_racers[local2].number].racing = nil
            if local2 == 1 then
                cat_names[cat_racers[local2].number].odds = cat_names[cat_racers[local2].number].odds + 3
            elseif local2 == 2 then
                cat_names[cat_racers[local2].number].odds = cat_names[cat_racers[local2].number].odds + 2
            elseif local2 == 3 then
                cat_names[cat_racers[local2].number].odds = cat_names[cat_racers[local2].number].odds + 1
            elseif local2 == 4 then
                cat_names[cat_racers[local2].number].odds = cat_names[cat_racers[local2].number].odds - 0.5
            elseif local2 == 5 then
                cat_names[cat_racers[local2].number].odds = cat_names[cat_racers[local2].number].odds - 1
            elseif local2 == 6 then
                cat_names[cat_racers[local2].number].odds = cat_names[cat_racers[local2].number].odds - 1.5
            elseif local2 == 7 then
                cat_names[cat_racers[local2].number].odds = cat_names[cat_racers[local2].number].odds - 2
            end
        until local2 == tb.NUMBER_OF_CATS
        sleep_for(2000)
        track_announcer:say_line("/tbta180/")
        sleep_for(30000)
    end
end
tb.goodbye_doug = function(arg1) -- line 654
    if not tb.double_doug then
        tb.double_doug = TRUE
        START_CUT_SCENE()
        stop_script(tb.track_announcer)
        manny:set_visibility(FALSE)
        if arg1 == tb.ts_door then
            doug.look_point = { x = 0.118851, y = -0.539676, z = -0.116 }
            doug.look_point2 = { x = 0.118851, y = 0.875324, z = -0.145 }
        else
            doug.look_point = { x = -0.567064, y = -1.00833, z = 0.495 }
            doug.look_point2 = { x = -0.175, y = 1.4, z = 0.494 }
        end
        tb:current_setup(tb_fotws)
        doug:setpos(-0.0520684, -1.72162, 0)
        doug:setrot(0, -353, 0)
        doug:play_chore(doug_idles_rest, "doug_idles.cos")
        doug:head_look_at_point(doug.look_point, 300)
        sleep_for(1000)
        doug:say_line("/tbdu061/")
        doug:wait_for_message()
        doug:head_look_at(nil)
        doug:say_line("/tbdu062/")
        doug:wait_for_message()
        tb:current_setup(tb_strws)
        sleep_for(2000)
        tb:current_setup(tb_fotws)
        break_here()
        doug:head_look_at_point(doug.look_point, 120)
        sleep_for(1000)
        doug:head_look_at(nil, 120)
        sleep_for(750)
        doug:say_line("/tbdu063/")
        doug:wait_for_message()
        tb:current_setup(tb_strws)
        sleep_for(1500)
        doug:setpos(0.102557, 1.84044, 0)
        doug:fake_walkto(0, 1.63993, 0)
        doug:wait_for_actor()
        doug:setrot(0, -160, 0, TRUE)
        doug:wait_for_actor()
        doug:fade_in_chore(doug_idles_rest, "doug_idles.cos", 800)
        doug:say_line("/tbdu064/")
        sleep_for(500)
        doug:head_look_at_point(doug.look_point2, 100)
        sleep_for(750)
        doug:head_look_at(nil, 130)
        doug:wait_for_message()
        doug:say_line("/tbdu065/")
        sleep_for(1300)
        doug:head_look_at_point({ x = 0.077, y = 1.4, z = 0.494 }, 130)
        doug:wait_for_message()
        doug:head_look_at(nil, 130)
        sleep_for(1000)
        END_CUT_SCENE()
        manny:set_visibility(TRUE)
    end
end
tb.search_pockets_for_winning_ticket = function(arg1) -- line 722
    local local1, local2 = next(cn.tickets, nil)
    while local1 do
        if local2.race == 6 and local2.week == 2 and local2.day == 2 and local2.owner == manny then
            return TRUE
        else
            local1, local2 = next(cn.tickets, local1)
        end
    end
    return FALSE
end
tb.get_photo = function(arg1) -- line 738
    if cn.ticket.owner == manny then
        if cn.ticket.race == 6 and cn.ticket.week == 2 and cn.ticket.day == 2 then
            tb.right_photo = TRUE
        else
            tb.right_photo = FALSE
        end
    end
    START_CUT_SCENE()
    doug:say_line("/tbdu001/")
    doug:wait_for_message()
    END_CUT_SCENE()
    if not tb.tried_photo then
        tb.tried_photo = TRUE
        START_CUT_SCENE()
        manny:say_line("/tbma002/")
        manny:wait_for_message()
        doug:say_line("/tbdu003/")
        doug:wait_for_message()
        manny:say_line("/tbma004/")
        manny:wait_for_message()
        doug:say_line("/tbdu005/")
        doug:wait_for_message()
        END_CUT_SCENE()
    end
    if cn.ticket.owner ~= manny then
        START_CUT_SCENE()
        manny:say_line("/tbma006/")
        manny:wait_for_message()
        doug:say_line("/tbdu008/")
        doug:wait_for_message()
        doug:say_line("/tbdu009/")
        doug:fake_walkto(-0.487359, -1.81429, 0)
        doug:wait_for_actor()
        manny:play_chore(ma_photopass_from_cntr)
        manny:wait_for_chore()
        manny:pop_costume()
        END_CUT_SCENE()
    else
        START_CUT_SCENE()
        cn.ticket:free()
        manny:stop_chore(manny.hold_chore, "mc.cos")
        manny:stop_chore(mc_hold, "mc.cos")
        manny:stop_chore(mc_activate_ticket, "mc.cos")
        manny.is_holding = nil
        manny:say_line("/tbma010/")
        manny:wait_for_message()
        manny:stop_chore()
        manny:play_chore(ma_photopass_give_stub)
        doug:play_chore(doug_idles_take_stub)
        cn.ticket:free()
        doug:wait_for_chore()
        if not tb.given_ticket then
            tb.given_ticket = TRUE
            doug:say_line("/tbdu011/")
            doug:wait_for_message()
            manny:say_line("/tbma012/")
            manny:wait_for_message()
        end
        doug:play_chore(doug_idles_rid_stub)
        doug:say_line("/tbdu013/")
        doug:wait_for_message()
        doug:wait_for_chore()
        doug:play_chore(doug_idles_get_photo)
        doug:say_line("/tbdu014/")
        doug:wait_for_message()
        doug:wait_for_chore()
        doug:say_line("/tbdu015/")
        doug:play_chore(doug_idles_give_photo)
        manny:head_look_at(nil)
        manny:play_chore(ma_photopass_take_envelope)
        manny:wait_for_chore()
        doug:wait_for_chore()
        manny:wait_for_chore()
        if tb.right_photo and si.photofinish.owner == manny then
            cur_puzzle_state[32] = TRUE
            tb.time_to_say_goodbye = TRUE
            manny:say_line("/tbma016/")
            manny:wait_for_message()
            doug:say_line("/tbdu017/")
            doug:wait_for_message()
            manny:head_look_at(nil)
            manny:play_chore(ma_photopass_photo_switch)
            manny:say_line("/tbma018/")
            manny:wait_for_message()
            manny:wait_for_chore()
            manny:wait_for_chore(ma_photopass_photo_switch, "ma_photopass.cos")
            manny:play_chore(ma_photopass_return_photo)
            doug:play_chore(doug_idles_take_photo)
            manny:say_line("/tbma019/")
            manny:wait_for_message()
            doug:say_line("/tbdu020/")
            doug:wait_for_chore()
            doug:fake_walkto(-0.387359, -1.81429, 0)
            doug:wait_for_actor()
            tb.blackmail_photo:get()
            si.photofinish:free()
        else
            if not tb.got_wrong_photo then
                tb.got_wrong_photo = TRUE
                manny:say_line("/tbma021/")
                manny:wait_for_message()
                doug:say_line("/tbdu022/")
                doug:wait_for_message()
                manny:say_line("/tbma023/")
            else
                manny:say_line("/tbma024/")
            end
            manny:wait_for_message()
            manny:play_chore(ma_photopass_return_photo)
            doug:say_line("/tbdu025/")
            doug:play_chore(doug_idles_take_photo)
            doug:wait_for_message()
            doug:wait_for_chore()
            doug:fade_out_chore(doug_idles_take_photo, "doug_idles.cos", 500)
            doug:say_line("/tbdu026/")
            manny:wait_for_chore()
            doug:fake_walkto(-0.387359, -1.81429, 0)
            doug:wait_for_actor()
        end
        manny:pop_costume()
        manny:setpos({ x = 0.031, y = -1.19456, z = 0 })
        manny:head_look_at(nil)
        END_CUT_SCENE()
    end
end
tb.set_up_actors = function() -- line 880
    if not doug then
        doug = Actor:create(nil, nil, nil, "Doug")
    end
    doug:set_talk_color(Green)
    doug:set_costume("doug_idles.cos")
    doug:follow_boxes()
    doug:set_walk_rate(0.5)
    doug:put_in_set(tb)
    doug:set_mumble_chore(doug_idles_mumble)
    doug:set_talk_chore(1, doug_idles_stop_talk)
    doug:set_talk_chore(2, doug_idles_a)
    doug:set_talk_chore(3, doug_idles_c)
    doug:set_talk_chore(4, doug_idles_e)
    doug:set_talk_chore(5, doug_idles_f)
    doug:set_talk_chore(6, doug_idles_l)
    doug:set_talk_chore(7, doug_idles_m)
    doug:set_talk_chore(8, doug_idles_o)
    doug:set_talk_chore(9, doug_idles_t)
    doug:set_talk_chore(10, doug_idles_u)
    doug:setpos(0.102557, 1.84044, 0)
    doug:set_head(3, 4, 5, 165, 28, 80)
    if tb.needs_intro and not tb.seen_intro then
        tb.needs_intro = FALSE
        tb.seen_intro = TRUE
        start_script(tb.show_room)
    end
end
tb.enter = function(arg1) -- line 913
    start_script(tb.off_screen_kittys)
    if not find_script(tb.track_announcer) then
        tb.init_cat_names()
        start_script(tb.track_announcer)
    end
    tb.set_up_actors()
end
tb.exit = function() -- line 922
    stop_script(tb.off_screen_kittys)
    doug:free()
end
tb.photo_window = Object:create(tb, "/tbtx028/Window", -0.065300003, -1.5262001, 0.5, { range = 0.80000001 })
tb.photo_window.use_pnt_x = 0
tb.photo_window.use_pnt_y = -1.16456
tb.photo_window.use_pnt_z = 0
tb.photo_window.use_rot_x = 0
tb.photo_window.use_rot_y = 180
tb.photo_window.use_rot_z = 0
tb.photo_window.lookAt = function(arg1) -- line 940
    if not tb.photo_window.tried then
        system.default_response("nobody")
    else
        manny:say_line("/tbma029/")
    end
end
tb.photo_window.use = function(arg1) -- line 948
    tb.photo_window.tried = TRUE
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:push_costume("ma_photopass.cos")
    if manny.is_holding then
        manny:blend(ma_photopass_to_counter, ms_hold, 500, "ma_photopass.cos", manny.base_costume)
        sleep_for(500)
        manny:stop_chore(ms_hold, "mc.cos")
    else
        manny:play_chore(ma_photopass_to_counter)
    end
    manny:say_line("/tbma030/")
    manny:wait_for_message()
    manny:wait_for_chore()
    doug:setpos(-0.387359, -1.81429, 0)
    doug:fake_walkto(-0.0520684, -1.72162, 0)
    doug:wait_for_actor()
    doug:setrot(0, -353, 0, TRUE)
    doug:wait_for_actor()
    doug:stop_chore()
    doug:fade_in_chore(doug_idles_rest, "doug_idles.cos", 800)
    doug:say_line("/tbdu031/")
    doug:wait_for_message()
    END_CUT_SCENE()
    tb:get_photo()
end
tb.photo_window.use_ticket = tb.photo_window.use
tb.bet_window = Object:create(tb, "/tbtx032/window", 0, 1.49, 0.44999999, { range = 0.80000001 })
tb.bet_window.use_pnt_x = -0.086491302
tb.bet_window.use_pnt_y = 1.08706
tb.bet_window.use_pnt_z = 0
tb.bet_window.use_rot_x = 0
tb.bet_window.use_rot_y = 1440.04
tb.bet_window.use_rot_z = 0
tb.bet_window.lookAt = function(arg1) -- line 988
    if not tb.bet_window.tried then
        system.default_response("nobody")
    else
        manny:say_line("/tbma033/")
    end
end
tb.bet_window.use = function(arg1) -- line 996
    local local1
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:push_costume("ma_photopass.cos")
    if manny.is_holding then
        manny:blend(ma_photopass_to_counter, ms_hold, 500, "ma_photopass.cos", manny.base_costume)
        sleep_for(500)
        manny:stop_chore(ms_hold, "mc.cos")
    else
        manny:play_chore(ma_photopass_to_counter)
    end
    manny:say_line("/tbma034/")
    manny:wait_for_message()
    doug:setpos(0.102557, 1.84044, 0)
    doug:fake_walkto(0, 1.63993, 0)
    doug:wait_for_actor()
    doug:setrot(0, -160, 0, TRUE)
    doug:wait_for_actor()
    doug:fade_in_chore(doug_idles_rest, "doug_idles.cos", 800)
    if not arg1.tried then
        arg1.tried = TRUE
        doug:say_line("/tbdu035/")
        sleep_for(800)
        doug:push_chore(doug_idles_shake_left)
        doug:push_chore()
        doug:push_chore(doug_idles_shake_left)
        doug:push_chore()
        doug:wait_for_message()
        manny:say_line("/tbma036/")
        manny:wait_for_message()
        doug:say_line("/tbdu037/")
        doug:wait_for_message()
        manny:say_line("/tbma038/")
        manny:wait_for_message()
        doug:say_line("/tbdu039/")
        doug:push_chore(doug_idles_nod)
        doug:push_chore()
        doug:push_chore(doug_idles_nod)
        doug:push_chore()
        doug:wait_for_message()
        manny:say_line("/tbma040/")
        manny:wait_for_message()
        doug:say_line("/tbdu041/")
        doug:push_chore(doug_idles_shake_left)
        doug:push_chore()
        doug:push_chore(doug_idles_shake_left)
        doug:push_chore()
        doug:wait_for_message()
        if cn.ticket.owner == manny then
            manny:say_line("/tbma042/")
        else
            manny:say_line("/tbma043/")
        end
        manny:wait_for_message()
    else
        doug:say_line("/tbdu044/")
        doug:wait_for_message()
    end
    local1 = "rest"
    if cn.ticket.owner == manny then
        local1 = "rid"
        cn.ticket:free()
        manny:say_line("/tbma045/")
        manny:wait_for_message()
        manny:play_chore(ma_photopass_give_stub)
        doug:play_chore(doug_idles_take_stub)
        doug:wait_for_chore()
        doug:say_line("/tbdu046/")
        doug:wait_for_message()
        doug:play_chore(doug_idles_rid_stub)
        if tb.tried_fake then
            doug:say_line("/tbdu047/")
        else
            tb.tried_fake = TRUE
            doug:say_line("/tbdu048/")
            doug:wait_for_message()
            manny:say_line("/tbma049/")
        end
        doug:wait_for_chore()
    end
    manny:wait_for_message()
    if local1 == "rest" then
        doug:fade_out_chore(doug_idles_rest, "doug_idles.cos", 500)
    else
        doug:fade_out_chore(doug_idles_rid_stub, "doug_idles.cos", 500)
    end
    doug:say_line("/tbdu050/")
    doug:wait_for_message()
    manny:play_chore(ma_photopass_from_cntr)
    doug:fake_walkto(0.102557, 1.84044, 0)
    doug:wait_for_actor()
    manny:wait_for_chore(ma_photopass_from_cntr, "ma_photopass.cos")
    manny:pop_costume()
    END_CUT_SCENE()
end
tb.bet_window.use_ticket = tb.bet_window.use
tb.blackmail_photo = Object:create(tb, "/tbtx051/incriminating photo", 0, 0, 0, { range = 0 })
tb.blackmail_photo.string_name = "blackmail"
tb.blackmail_photo.wav = "getcard.wav"
tb.blackmail_photo.lookAt = function(arg1) -- line 1104
    manny:say_line("/tbma052/")
end
tb.blackmail_photo.use = tb.blackmail_photo.lookAt
tb.blackmail_photo.default_response = function(arg1) -- line 1110
    manny:say_line("/tbma053/")
end
tb.bet_obj = Object:create(tb, "", -0.173969, 1.63993, 0, { range = 0 })
tb.bet_obj.use_pnt_x = -0.173969
tb.bet_obj.use_pnt_y = 1.63993
tb.bet_obj.use_pnt_z = 0
tb.bet_obj.use_rot_x = 0
tb.bet_obj.use_rot_y = -160.77299
tb.bet_obj.use_rot_z = 0
tb.photo_obj = Object:create(tb, "", 0.072068401, -1.72162, 0, { range = 0 })
tb.photo_obj.use_pnt_x = 0.072068401
tb.photo_obj.use_pnt_y = -1.72162
tb.photo_obj.use_pnt_z = 0
tb.photo_obj.use_rot_x = 0
tb.photo_obj.use_rot_y = -352.745
tb.photo_obj.use_rot_z = 0
tb.ts_door = Object:create(tb, "/tbtx056/door", 0.80000001, 0, -0.1, { range = 0 })
tb.ts_door.use_pnt_x = 0.33327299
tb.ts_door.use_pnt_y = -0.0051976298
tb.ts_door.use_pnt_z = -0.26751199
tb.ts_door.use_rot_x = 0
tb.ts_door.use_rot_y = -87.913498
tb.ts_door.use_rot_z = 0
tb.ts_door.out_pnt_x = 0.68868601
tb.ts_door.out_pnt_y = 0.01196
tb.ts_door.out_pnt_z = -0.45457199
tb.ts_door.out_rot_x = 0
tb.ts_door.out_rot_y = -87.913498
tb.ts_door.out_rot_z = 0
tb.ts_box = tb.ts_door
tb.ts_door.walkOut = function(arg1) -- line 1160
    if tb.time_to_say_goodbye and not tb.said_goodbye then
        tb.goodbye_doug(arg1)
    end
    ts:come_out_door(ts.tb_door)
end
tb.hh_door = Object:create(tb, "/tbtx057/door", -0.80000001, 2.2, 0.54000002, { range = 0 })
tb.hh_door.use_pnt_x = -0.82007802
tb.hh_door.use_pnt_y = 1.23658
tb.hh_door.use_pnt_z = -3.7268402e-09
tb.hh_door.use_rot_x = 0
tb.hh_door.use_rot_y = -0.674227
tb.hh_door.use_rot_z = 0
tb.hh_door.out_pnt_x = -0.81631702
tb.hh_door.out_pnt_y = 1.5407701
tb.hh_door.out_pnt_z = 0.103325
tb.hh_door.out_rot_x = 0
tb.hh_door.out_rot_y = -0.674227
tb.hh_door.out_rot_z = 0
tb.hh_box = tb.hh_door
tb.hh_door.walkOut = function(arg1) -- line 1185
    if tb.time_to_say_goodbye and not tb.said_goodbye then
        tb.goodbye_doug(arg1)
    end
    hh:come_out_door(hh.tb_door)
end
tb.gt_door = Object:create(tb, "/tbtx058/door", -4.0999999, 0, 1.8, { range = 0.60000002 })
tb.gt_door.use_pnt_x = -1.73559
tb.gt_door.use_pnt_y = 0.057845
tb.gt_door.use_pnt_z = 0.206
tb.gt_door.use_rot_x = 0
tb.gt_door.use_rot_y = -2071.6899
tb.gt_door.use_rot_z = 0
tb.gt_door.out_pnt_x = -3.5209701
tb.gt_door.out_pnt_y = 0.0504007
tb.gt_door.out_pnt_z = 0.98903102
tb.gt_door.out_rot_x = 0
tb.gt_door.out_rot_y = -2057.8101
tb.gt_door.out_rot_z = 0
tb.gt_box = tb.gt_door
tb.gt_door.walkOut = function(arg1) -- line 1211
    if tb.time_to_say_goodbye and not tb.said_goodbye then
        tb.goodbye_doug(arg1)
    end
    gt:come_out_door(gt.tb_door)
end
tb.tw_door = Object:create(tb, "/tbtx059/door", -4.0999999, 0, 1.8, { range = 0.60000002 })
tb.tw_door.use_pnt_x = 0
tb.tw_door.use_pnt_y = 0
tb.tw_door.use_pnt_z = 0
tb.tw_door.use_rot_x = 0
tb.tw_door.use_rot_y = 0
tb.tw_door.use_rot_z = 0
tb.tw_door.out_pnt_x = 0
tb.tw_door.out_pnt_y = 0
tb.tw_door.out_pnt_z = 0
tb.tw_door.out_rot_x = 0
tb.tw_door.out_rot_y = 0
tb.tw_door.out_rot_z = 0
tb.tw_box = tb.tw_door
tb.tw_door.walkOut = function(arg1) -- line 1235
    local local1, local2, local3
    START_CUT_SCENE()
    local1, local2, local3 = GetActorPos(system.currentActor.hActor)
    tw:switch_to_set()
    PutActorInSet(system.currentActor.hActor, tw.setFile)
    PutActorAt(system.currentActor.hActor, local1, local2, local3)
    END_CUT_SCENE()
end
tb.tw1_door = Object:create(tb, "/tbtx060/door", -4.0999999, 0, 1.8, { range = 0.60000002 })
tb.tw1_door.use_pnt_x = 0
tb.tw1_door.use_pnt_y = 0
tb.tw1_door.use_pnt_z = 0
tb.tw1_door.use_rot_x = 0
tb.tw1_door.use_rot_y = 0
tb.tw1_door.use_rot_z = 0
tb.tw1_door.out_pnt_x = 0
tb.tw1_door.out_pnt_y = 0
tb.tw1_door.out_pnt_z = 0
tb.tw1_door.out_rot_x = 0
tb.tw1_door.out_rot_y = 0
tb.tw1_door.out_rot_z = 0
tb.tw1_box = tb.tw1_door
tb.tw1_door.walkOut = function(arg1) -- line 1262
    local local1, local2, local3
    START_CUT_SCENE()
    local1, local2, local3 = GetActorPos(system.currentActor.hActor)
    tw:switch_to_set()
    PutActorInSet(system.currentActor.hActor, tw.setFile)
    PutActorAt(system.currentActor.hActor, local1, local2, local3)
    END_CUT_SCENE()
end
td_coffin_open = 0
td_coffin_close = 1
td_coffin_set_open = 2
td_coffin_set_closed = 3
CheckFirstTime("td.lua")
dofile("td_coffin.lua")
td = Set:create("td.set", "truck depot", { td_overhead = 0, td_tdiws = 1, td_tdiha = 2, td_mnycu = 3 })
td.cameraman = function(arg1) -- line 14
    local local1, local2
    cameraman_watching_set = arg1
    if cameraman_disabled == FALSE and arg1:current_setup() ~= arg1.setups.overhead and cutSceneLevel <= 0 then
        local1, cameraman_box_name, local2 = system.currentActor:find_sector_type(CAMERA)
        if cameraman_box_name == "td_tdiha" then
            if td:current_setup() ~= td_tdiha then
                td:current_setup(td_tdiha)
            end
        elseif td:current_setup() ~= "td_tdiws" then
            td:current_setup(td_tdiws)
        end
    end
end
td.footstep_monitor = function(arg1) -- line 40
    while TRUE do
        if manny:find_sector_name("stair1") or manny:find_sector_name("top_stair") then
            manny.footsteps = footsteps.marble
        else
            manny.footsteps = footsteps.snow
        end
        break_here()
    end
end
td.enter = function(arg1) -- line 51
    td:add_object_state(td_tdiha, "td_coffin_door.bm", "td_coffin_door.zbm", OBJSTATE_STATE)
    td:add_object_state(td_tdiws, "td_1_coffin.bm", "td_1_coffin.zbm", OBJSTATE_STATE)
    td.coffin:set_object_state("td_coffin.cos")
    if td.coffin:is_open() then
        td.coffin:play_chore(td_coffin_set_open)
    else
        td.coffin:play_chore(td_coffin_set_closed)
    end
    start_script(td.footstep_monitor, td)
end
td.exit = function(arg1) -- line 65
    stop_script(td.footstep_monitor)
end
td.sigh_box = { }
td.sigh_box.walkOut = function(arg1) -- line 74
    if not td.sighed then
        td.sighed = TRUE
        box_off("sigh_box")
        soft_script()
        manny:head_look_at(td.rtruck_door)
        manny:say_line("/tdma007/")
        manny:wait_for_message()
        manny:say_line("/tdma008/")
        manny:wait_for_message()
        if hot_object then
            manny:head_look_at(hot_object)
        else
            manny:head_look_at(nil)
        end
    end
end
td.mug = Object:create(td, "/tdtx001/mug", 0, 0, 0, { range = 0 })
td.mug.string_name = "mug"
td.mug.lookAt = function(arg1) -- line 101
    manny:say_line("/tdma002/")
end
td.mug.default_response = function(arg1) -- line 105
    manny:say_line("/tdma003/")
end
td.mug.use = function(arg1) -- line 109
    manny:say_line("/tdma004/")
end
td.rtruck_door = Object:create(td, "/tdtx005/truck door", 1.0027601, -1.40321, 0.25999999, { range = 0.60000002 })
td.rtruck_door.use_pnt_x = 0.76275802
td.rtruck_door.use_pnt_y = -1.24321
td.rtruck_door.use_pnt_z = -0.02
td.rtruck_door.use_rot_x = 0
td.rtruck_door.use_rot_y = -129.33099
td.rtruck_door.use_rot_z = 0
td.rtruck_door.lookAt = function(arg1) -- line 122
    manny:say_line("/tdma006/")
end
td.rtruck_door.pickUp = function(arg1) -- line 126
    manny:say_line("/tdma025/")
end
td.rtruck_door.use = function(arg1) -- line 131
    soft_script()
    manny:say_line("/tdma010/")
    wait_for_message()
    sleep_for(1000)
    manny:say_line("/tdma011/")
end
td.rtruck_cab = Object:create(td, "/tdtx012/truck", 1.44891, -1.78935, 0.34999999, { range = 0.89999998 })
td.rtruck_cab.use_pnt_x = 1.79891
td.rtruck_cab.use_pnt_y = -1.36935
td.rtruck_cab.use_pnt_z = -0.02
td.rtruck_cab.use_rot_x = 0
td.rtruck_cab.use_rot_y = -219.608
td.rtruck_cab.use_rot_z = 0
td.rtruck_cab.lookAt = function(arg1) -- line 149
    if not arg1.other.seen then
        arg1.seen = TRUE
        manny:say_line("/tdma013/")
    else
        manny:say_line("/tdma014/")
    end
end
td.rtruck_cab.use = function(arg1) -- line 158
    manny:say_line("/tdma015/")
end
td.ltruck_door = Object:create(td, "/tdtx016/truck_door", 0.80421299, -0.47146699, 0.28, { range = 0.60000002 })
td.ltruck_door.use_pnt_x = 0.604213
td.ltruck_door.use_pnt_y = -0.461467
td.ltruck_door.use_pnt_z = -0.02
td.ltruck_door.use_rot_x = 0
td.ltruck_door.use_rot_y = -98.4804
td.ltruck_door.use_rot_z = 0
td.ltruck_door.lookAt = function(arg1) -- line 170
    td.rtruck_door.lookAt(arg1)
end
td.ltruck_door.pickUp = function(arg1) -- line 174
    td.rtruck_door.pickUp(arg1)
end
td.ltruck_door.use = function(arg1) -- line 178
    td.rtruck_door.use(arg1)
end
td.ltruck_cab = Object:create(td, "/tdtx017/truck", 1.52797, -0.65471703, 0.31, { range = 0.89999998 })
td.ltruck_cab.use_pnt_x = 1.52797
td.ltruck_cab.use_pnt_y = -0.92471701
td.ltruck_cab.use_pnt_z = -0.02
td.ltruck_cab.use_rot_x = 0
td.ltruck_cab.use_rot_y = -377.65701
td.ltruck_cab.use_rot_z = 0
td.ltruck_cab.other = td.rtruck_cab
td.rtruck_cab.other = td.ltruck_cab
td.ltruck_cab.lookAt = function(arg1) -- line 195
    td.rtruck_cab.lookAt(arg1)
end
td.ltruck_cab.use = td.rtruck_cab.use
td.road = Object:create(td, "/tdtx018/road", -1.99989, -2.92063, 0.37, { range = 0.89999998 })
td.road.use_pnt_x = -1.71989
td.road.use_pnt_y = -2.4806299
td.road.use_pnt_z = -0.02
td.road.use_rot_x = 0
td.road.use_rot_y = -214.48199
td.road.use_rot_z = 0
td.road.walkOut = function(arg1) -- line 211
    soft_script()
    manny:say_line("/tdma019/")
    wait_for_message()
    manny:say_line("/tdma020/")
end
td.road.lookAt = td.road.walkOut
td.road.use = td.road.walkOut
td.coffin = Object:create(td, "/tdtx021/casket", 0.038148701, -1.23876, 0.050000001, { range = 0.60000002 })
td.coffin.use_pnt_x = 0.28397
td.coffin.use_pnt_y = -0.96091002
td.coffin.use_pnt_z = -0.02
td.coffin.use_rot_x = 0
td.coffin.use_rot_y = 107.238
td.coffin.use_rot_z = 0
td.coffin.lookAt = function(arg1) -- line 230
    if arg1:is_open() then
        manny:say_line("/tdma022/")
    else
        manny:say_line("/tdma023/")
    end
end
td.coffin.pickUp = function(arg1) -- line 238
    if arg1:is_open() then
        manny:say_line("/tdma024/")
    else
        manny:say_line("/tdma025/")
    end
end
td.coffin.open = function(arg1) -- line 246
    arg1.opened = TRUE
    START_CUT_SCENE()
    manny:clear_hands()
    manny:walkto_object(arg1)
    END_CUT_SCENE()
    start_script(cut_scene.brunoup)
end
td.coffin.use = function(arg1) -- line 255
    if arg1:is_open() then
        arg1:pickUp()
    else
        arg1:open()
    end
end
td.ravine = Object:create(td, "/tdtx028/ravine", -1.79318, 0.33208901, -0.02, { range = 1.6 })
td.ravine.use_pnt_x = -0.91318101
td.ravine.use_pnt_y = -0.81791103
td.ravine.use_pnt_z = -0.02
td.ravine.use_rot_x = 0
td.ravine.use_rot_y = -319.03699
td.ravine.use_rot_z = 0
td.ravine.use = function(arg1) -- line 272
    START_CUT_SCENE()
    manny:say_line("/tdma029/")
    wait_for_message()
    sleep_for(2000)
    manny:say_line("/tdma030/")
    wait_for_message()
    manny:say_line("/tdma031/")
    END_CUT_SCENE()
end
td.ravine.lookAt = td.ravine.use
td.bs_door = Object:create(td, "/tdtx026/stairs", 1.95588, -4.0633101, 1.2946399, { range = 0.60000002 })
td.bs_door.use_pnt_x = 1.26588
td.bs_door.use_pnt_y = -3.3733201
td.bs_door.use_pnt_z = 0.52464098
td.bs_door.use_rot_x = 0
td.bs_door.use_rot_y = -1219.27
td.bs_door.use_rot_z = 0
td.bs_door.out_pnt_x = 1.4984
td.bs_door.out_pnt_y = -3.65698
td.bs_door.out_pnt_z = 0.67000002
td.bs_door.out_rot_x = 0
td.bs_door.out_rot_y = -1220.1899
td.bs_door.out_rot_z = 0
td.bs_door.walkOut = function(arg1) -- line 304
    bs:come_out_door(bs.td_door)
    if not seen_hell_train then
        start_script(bs.force_hell_train)
    end
end
td.bs_door.comeOut = function(arg1) -- line 311
    td:current_setup(td_tdiws)
    Object.come_out_door(arg1)
end
td.bs_door.lookAt = function(arg1) -- line 316
    manny:say_line("/tdma027/")
end
CheckFirstTime("te.lua")
te = Set:create("te.set", "theater sewer", { te_intws = 0, te_ovrhd = 1 })
te.enter = function(arg1) -- line 18
    start_script(sewer_drip)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -30, -40, 600)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
end
te.exit = function(arg1) -- line 30
    stop_script(sewer_drip)
    KillActorShadows(manny.hActor)
end
te.holes = Object:create(te, "/tetx001/grates", -0.55016202, 0.73949301, 0.15000001, { range = 0.60000002 })
te.holes.use_pnt_x = -0.48016199
te.holes.use_pnt_y = 0.45949301
te.holes.use_pnt_z = 0
te.holes.use_rot_x = 0
te.holes.use_rot_y = -1090.9
te.holes.use_rot_z = 0
te.holes.parent = lw.hole
te.hole = Object:create(te, "/tetx002/grating", -0.015843101, 0.74271798, 0.20999999, { range = 0.60000002 })
te.hole.use_pnt_x = -0.055842999
te.hole.use_pnt_y = 0.45271799
te.hole.use_pnt_z = 0
te.hole.use_rot_x = 0
te.hole.use_rot_y = -1112.52
te.hole.use_rot_z = 0
te.hole.parent = lw.hole
te.hole2 = Object:create(te, "/tetx003/grating", -0.621499, -0.79304802, 0.16, { range = 0.60000002 })
te.hole2.use_pnt_x = -0.63298303
te.hole2.use_pnt_y = -0.601632
te.hole2.use_pnt_z = 0
te.hole2.use_rot_x = 0
te.hole2.use_rot_y = -867.81299
te.hole2.use_rot_z = 0
te.hole2.parent = lw.hole
te.sh_door = Object:create(te, "/tetx004/sewer", 0.375756, -0.197089, 0.41999999, { range = 2 })
te.sh_door.use_pnt_x = -0.113849
te.sh_door.use_pnt_y = -0.195016
te.sh_door.use_pnt_z = 0
te.sh_door.use_rot_x = 0
te.sh_door.use_rot_y = 280.53699
te.sh_door.use_rot_z = 0
te.sh_door.out_pnt_x = 0.125
te.sh_door.out_pnt_y = -0.150581
te.sh_door.out_pnt_z = 0
te.sh_door.out_rot_x = 0
te.sh_door.out_rot_y = 280.53699
te.sh_door.out_rot_z = 0
te.sh_door:make_untouchable()
te.sh_door.walkOut = function(arg1) -- line 95
    START_CUT_SCENE()
    manny:walkto(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
    manny:wait_for_actor()
    single_start_script(sh.mount_ladder, sh)
    END_CUT_SCENE()
end
te.th_ladder = Ladder:create(te, "/tetx005/", 0.51663202, -0.048954699, 0.92000002, { range = 1 })
te.th_base = te.th_ladder
te.th_top = te.th_ladder
te.th_ladder.base.use_pnt_x = -6.25
te.th_ladder.base.use_pnt_y = -0.620013
te.th_ladder.base.use_pnt_z = 0
te.th_ladder.base.use_rot_x = 0
te.th_ladder.base.use_rot_y = 95
te.th_ladder.base.use_rot_z = 0
te.th_ladder.base.out_pnt_x = -5.90662
te.th_ladder.base.out_pnt_y = -0.49353999
te.th_ladder.base.out_pnt_z = 0
te.th_ladder.base.out_rot_x = 0
te.th_ladder.base.out_rot_y = 297.85901
te.th_ladder.base.out_rot_z = 0
te.th_ladder.top.use_pnt_x = -6.25
te.th_ladder.top.use_pnt_y = -0.620013
te.th_ladder.top.use_pnt_z = 2
te.th_ladder.top.use_rot_x = 0
te.th_ladder.top.use_rot_y = 95
te.th_ladder.top.use_rot_z = 0
te.th_ladder.minz = 0
te.th_ladder.maxz = 2
te.th_ladder.base.box = "th_base"
te.th_ladder.top.box = "th_top"
te.th_ladder.lookAt = function(arg1) -- line 136
    system.default_response("ladder")
end
te.th_ladder.pickUp = function(arg1) -- line 140
    system.default_response("attached")
end
te.th_ladder.walkOut = function(arg1, arg2) -- line 144
    if arg2 == arg1.top.box then
        th:climb_in()
        if not th.met_thunder_boys then
            start_script(th.meet_the_thunder_boys)
        end
    end
end
te.th_ladder.climbOut = function(arg1, arg2) -- line 153
    if manny.is_climbing and arg2 == arg1.top.box then
        stop_script(climb_actor_up)
        stop_script(climb_actor_down)
        ResetMarioControls()
        manny:stop_climb_ladder()
        arg1:walkOut(arg2)
    else
        Ladder.climbOut(arg1, arg2)
    end
end
te.ly_door = Object:create(te, "", -1.22983, 0.70003599, 0.73900002, { range = 1 })
te.ly_door.use_pnt_x = -1.27791
te.ly_door.use_pnt_y = 0.50864899
te.ly_door.use_pnt_z = 0
te.ly_door.use_rot_x = 0
te.ly_door.use_rot_y = 2.8397501
te.ly_door.use_rot_z = 0
te.ly_door.out_pnt_x = -1.12474
te.ly_door.out_pnt_y = 1.21507
te.ly_door.out_pnt_z = 0.29434901
te.ly_door.out_rot_x = 0
te.ly_door.out_rot_y = 0.650204
te.ly_door.out_rot_z = 0
te.ly_door.lookAt = function(arg1) -- line 185
    manny:say_line("/shma009/")
end
te.ly_door.walkOut = function(arg1) -- line 189
    if not manny.thunder then
        ResetMarioControls()
        manny:walkto(arg1.use_pnt_x, arg1.use_pnt_y, arg1.use_pnt_z)
        manny:say_line("/shma007/")
    else
        ly.service_door:comeOut()
    end
end
CheckFirstTime("testroom.lua")
testroom = Set:create("testroom.set", "testroom", { })
testroom.switch_to_set = function(arg1) -- line 24
    PrintDebug("Switching to set: " .. arg1.name .. ".\n")
    system.lastSet = system.currentSet
    if system.currentSet then
        system.currentSet:CommonExit()
    end
    system.currentSet = arg1
    arg1:CommonEnter()
    MakeCurrentSet(arg1.setFile)
    arg1:enter()
    if system.ambientLight then
        SetAmbientLight(system.ambientLight)
    end
end
HelpScreen = function() -- line 61
    RenderModeUser(TRUE)
    DimScreen()
    CleanBuffer()
    BlastText("Papa gotta brand new bag", { x = 40, y = 40, fgcolor = Red, font = special_font })
    Display()
end
EndHelp = function() -- line 70
    RenderModeUser(nil)
end
CheckFirstTime("tg.lua")
tg = Set:create("tg.set", "temple gate", { tg_trkla = 0, tg_gtkws = 1, tg_cofws = 2, tg_oh = 3 })
tg.cheat_boxes = { cheat_box1 }
dofile("gatekeeper.lua")
gate_keeper.fling_right_arm = function(arg1) -- line 15
    arg1:play_chore(gatekeeper_gesture, "gatekeeper.cos")
end
gate_keeper.nod_cycle = function(arg1) -- line 19
    arg1:play_chore_looping(gatekeeper_nod_cycle, "gatekeeper.cos")
end
gate_keeper.stop_nod = function(arg1) -- line 23
    arg1:stop_looping_chore(gatekeeper_nod_cycle, "gatekeeper.cos")
end
gate_keeper.brief_nod = function(arg1) -- line 27
    gate_keeper:nod_cycle()
    sleep_for(1000)
    gate_keeper:stop_nod()
end
gate_keeper.arms_out = function(arg1) -- line 33
    arg1:play_chore(gatekeeper_points, "gatekeeper.cos")
end
gate_keeper.raise_hands = function(arg1) -- line 37
    arg1:play_chore(gatekeeper_raise_hands, "gatekeeper.cos")
end
gate_keeper.say_what_in = function(arg1) -- line 41
    arg1:play_chore(gatekeeper_say_what_in, "gatekeeper.cos")
end
gate_keeper.say_what_out = function(arg1) -- line 45
    arg1:play_chore(gatekeeper_say_what_out, "gatekeeper.cos")
end
gate_keeper.shake_cycle = function(arg1) -- line 49
    arg1:play_chore_looping(gatekeeper_shake_cycle, "gatekeeper.cos")
end
gate_keeper.stop_shake = function(arg1) -- line 53
    arg1:stop_looping_chore(gatekeeper_shake_cycle, "gatekeeper.cos")
end
gate_keeper.uncross_arms = function(arg1) -- line 57
    arg1:play_chore(gatekeeper_uncross_arms, "gatekeeper.cos")
end
gate_keeper.cross_arms = function(arg1) -- line 61
    arg1:play_chore(gatekeeper_cross_arms, "gatekeeper.cos")
end
gate_keeper.arms_crossed = function(arg1) -- line 65
    arg1:play_chore(gatekeeper_cross_arms_hold, "gatekeeper.cos")
end
gate_keeper.to_rest = function(arg1) -- line 69
    arg1:play_chore(gatekeeper_back_to_rest, "gatekeeper.cos")
end
tg.give_note = function() -- line 73
    START_CUT_SCENE()
    gate_keeper:say_line("/tggk001/")
    gate_keeper:wait_for_message()
    manny:head_look_at(tg.keeper_obj)
    start_script(manny.walkto_object, manny, tg.keeper_obj)
    gate_keeper:say_line("/tggk002/")
    gate_keeper:fling_right_arm()
    gate_keeper:wait_for_message()
    gate_keeper:say_line("/tggk003/")
    gate_keeper:wait_for_message()
    gate_keeper:say_line("/tggk004/")
    gate_keeper:wait_for_message()
    gate_keeper:say_line("/tggk005/")
    gate_keeper:wait_for_message()
    gate_keeper:say_line("/tggk006/")
    gate_keeper:cross_arms()
    gate_keeper:wait_for_message()
    manny:twist_head_gesture(TRUE)
    manny:say_line("/tgma007/")
    sleep_for(300)
    manny:hand_gesture(TRUE)
    manny:wait_for_message()
    gate_keeper:say_line("/tggk008/")
    gate_keeper:uncross_arms()
    gate_keeper:wait_for_message()
    gate_keeper:say_line("/tggk009/")
    gate_keeper:wait_for_message()
    gate_keeper:play_chore(gatekeeper_give_note, "gatekeeper.cos")
    sleep_for(300)
    start_sfx("tgPullNt.WAV")
    sleep_for(700)
    gate_keeper:say_line("/tggk010/")
    sleep_for(750)
    start_sfx("tgFallNt.WAV")
    if manny.is_holding then
        manny.is_holding:put_away()
    else
        sleep_for(1200)
    end
    manny:play_chore(msb_reach_high, "msb.cos")
    sleep_for(1000)
    start_sfx("tgGrabNt.WAV")
    manny:generic_pickup(tg.note)
    manny:fade_out_chore(msb_reach_high, "msb.cos", 500)
    manny:fade_in_chore(msb_hold, "msb.cos", 500)
    gate_keeper:play_chore(gatekeeper_hide_note, "gatekeeper.cos")
    gate_keeper:wait_for_chore(gatekeeper_give_note, "gatekeeper.cos")
    gate_keeper:wait_for_message()
    END_CUT_SCENE()
end
tg.talk_2 = function() -- line 127
    tg.talked_2 = TRUE
    START_CUT_SCENE()
    wait_for_message()
    manny:say_line("/tgma011/")
    manny:wait_for_message()
    gate_keeper:say_line("/tggk012/")
    gate_keeper:nod_cycle()
    gate_keeper:wait_for_message()
    gate_keeper:stop_nod()
    gate_keeper:say_line("/tggk013/")
    gate_keeper:arms_out()
    END_CUT_SCENE()
end
tg.setup_gatekeeper = function(arg1) -- line 142
    gate_keeper:free()
    gate_keeper:set_costume("gatekeeper.cos")
    gate_keeper:set_mumble_chore(gatekeeper_mumble)
    gate_keeper:set_talk_chore(1, gatekeeper_stop_talk)
    gate_keeper:set_talk_chore(2, gatekeeper_a)
    gate_keeper:set_talk_chore(3, gatekeeper_c)
    gate_keeper:set_talk_chore(4, gatekeeper_e)
    gate_keeper:set_talk_chore(5, gatekeeper_f)
    gate_keeper:set_talk_chore(6, gatekeeper_l)
    gate_keeper:set_talk_chore(7, gatekeeper_m)
    gate_keeper:set_talk_chore(8, gatekeeper_o)
    gate_keeper:set_talk_chore(9, gatekeeper_t)
    gate_keeper:set_talk_chore(10, gatekeeper_u)
    gate_keeper:setpos(-1.55044, 33.5166, 18.097)
    gate_keeper:setrot(0, 170, 0)
    gate_keeper:put_in_set(tg)
    gate_keeper:play_chore(gatekeeper_cross_arms_hold, "gatekeeper.cos")
end
tg.teleport = function() -- line 162
    while 1 do
        if manny:find_sector_name("tele1") then
            system.lock_display()
            manny:setpos(-1.79763, 31.85, 17.2)
            break_here()
            system.unlock_display()
        elseif manny:find_sector_name("tele2") then
            system.lock_display()
            manny:setpos(-1.86763, 32.3411, 17.13)
            break_here()
            system.unlock_display()
        end
        break_here()
    end
end
tg.enter = function(arg1) -- line 185
    tg:current_setup(tg_gtkws)
    tg:setup_gatekeeper()
    start_script(tg.teleport)
end
tg.exit = function(arg1) -- line 191
    gate_keeper:free()
    stop_script(tg.teleport)
end
tg.note = Object:create(tg, "/tgtx014/note", 0, 0, 0, { range = 0 })
tg.note.wav = "getWrkOr.wav"
tg.note.lookAt = function(arg1) -- line 204
    START_CUT_SCENE()
    set_override(tg.note.look_at_override)
    music_state:set_state(stateHN)
    manny:say_line("/tgma015/")
    manny:wait_for_message()
    manny:say_line("/tgma016/")
    manny:wait_for_message()
    manny:say_line("/tgma017/")
    manny:wait_for_message()
    manny:say_line("/tgma018/")
    if not arg1.seen then
        arg1.seen = TRUE
        manny:wait_for_message()
        manny:say_line("/tgma019/")
        if system.currentSet == tg then
            gate_keeper:brief_nod()
        end
    end
    END_CUT_SCENE()
    music_state:update()
end
tg.note.look_at_override = function(arg1) -- line 227
    music_state:update()
end
tg.note.use = tg.note.lookAt
tg.note.default_response = function(arg1) -- line 233
    manny:say_line("/tgma020/")
end
tg.note.scare_response = function(arg1) -- line 237
    manny:say_line("/tgma021/")
end
tg.keeper_obj = Object:create(tg, "/tgtx022/Gate Keeper", -1.56235, 33.534901, 18.08, { range = 1.22 })
tg.keeper_obj.use_pnt_x = -1.81235
tg.keeper_obj.use_pnt_y = 32.864899
tg.keeper_obj.use_pnt_z = 17.129999
tg.keeper_obj.use_rot_x = 0
tg.keeper_obj.use_rot_y = 343.69
tg.keeper_obj.use_rot_z = 0
tg.keeper_obj.lookAt = function(arg1) -- line 250
    manny:say_line("/tgma023/")
    manny:wait_for_message()
    manny:say_line("/tgma024/")
    gate_keeper:brief_nod()
end
tg.keeper_obj.pickUp = function(arg1) -- line 257
    manny:say_line("/tgma025/")
end
tg.keeper_obj.use = function(arg1) -- line 261
    Dialog:run("gk1", "dlg_keeper.lua")
end
tg.waiting_door = Object:create(tg, "/tgtx026/doorway", -2.56987, 33.964298, 17.549999, { range = 0.60000002 })
tg.waiting_door.use_pnt_x = -2.56987
tg.waiting_door.use_pnt_y = 33.754299
tg.waiting_door.use_pnt_z = 17.129999
tg.waiting_door.use_rot_x = 0
tg.waiting_door.use_rot_y = -350.78
tg.waiting_door.use_rot_z = 0
tg.waiting_door.lookAt = function(arg1) -- line 273
    START_CUT_SCENE()
    manny:say_line("/tgma027/")
    manny:wait_for_message()
    gate_keeper:say_line("/tggk028/")
    gate_keeper:fling_right_arm()
    gate_keeper:wait_for_message()
    gate_keeper:say_line("/tggk029/")
    END_CUT_SCENE()
    if not tg.talked_2 then
        start_script(tg.talk_2)
    end
end
tg.waiting_door.use = function(arg1) -- line 287
    START_CUT_SCENE()
    manny:say_line("/tgma030/")
    manny:wait_for_message()
    gate_keeper:say_line("/tggk031/")
    gate_keeper:cross_arms()
    gate_keeper:wait_for_message()
    gate_keeper:say_line("/tggk032/")
    gate_keeper:cross_arms()
    gate_keeper:wait_for_message()
    gate_keeper:uncross_arms()
    END_CUT_SCENE()
    if not tg.talked_2 then
        start_script(tg.talk_2)
    end
end
tg.waiting_door.walkOut = tg.waiting_door.use
tg.sign = Object:create(tg, "/tgtx033/sign", -1.31014, 30.41, 17.82, { range = 0.89999998 })
tg.sign.use_pnt_x = -1.5417
tg.sign.use_pnt_y = 30.8209
tg.sign.use_pnt_z = 17.23
tg.sign.use_rot_x = 0
tg.sign.use_rot_y = 201.44
tg.sign.use_rot_z = 0
tg.sign.lookAt = function(arg1) -- line 314
    START_CUT_SCENE()
    manny:say_line("/tgma034/")
    manny:wait_for_message()
    gate_keeper:say_line("/tggk035/")
    gate_keeper:wait_for_message()
    gate_keeper:say_line("/tggk036/")
    gate_keeper:arms_out()
    END_CUT_SCENE()
end
tg.sign.use = function(arg1) -- line 325
    manny:say_line("/tgma037/")
end
tg.track = Object:create(tg, "/tgtx038/track", -0.61754298, 32.937099, 16.99, { range = 0.60000002 })
tg.track.use_pnt_x = -1.03754
tg.track.use_pnt_y = 32.937099
tg.track.use_pnt_z = 17.129999
tg.track.use_rot_x = 0
tg.track.use_rot_y = 249.435
tg.track.use_rot_z = 0
tg.track.lookAt = function(arg1) -- line 337
    manny:say_line("/tgma039/")
end
tg.track.use = function(arg1) -- line 341
    manny:say_line("/tgma040/")
    manny:wait_for_message()
    manny:say_line("/tgma041/")
end
tg.mt_door = Object:create(tg, "/tgtx042/doorway", -1.54431, 33.795898, 17.58, { range = 0.89999998 })
tg.mt_door.use_pnt_x = -1.55431
tg.mt_door.use_pnt_y = 33.405899
tg.mt_door.use_pnt_z = 17.129999
tg.mt_door.use_rot_x = 0
tg.mt_door.use_rot_y = -3.29249
tg.mt_door.use_rot_z = 0
tg.mt_door.out_pnt_x = -1.51428
tg.mt_door.out_pnt_y = 33.7286
tg.mt_door.out_pnt_z = 17.129999
tg.mt_door.out_rot_x = 0
tg.mt_door.out_rot_y = -7.0957699
tg.mt_door.out_rot_z = 0
tg.mt_door.walkOut = function(arg1) -- line 362
    mt:come_out_door(mt.tg_door)
end
tg.mt_door.lookAt = function(arg1) -- line 366
    manny:say_line("/tgma043/")
end
tg.bs_door = Object:create(tg, "/tgtx044/stairs", -4.3911901, 33.560501, 17.790001, { range = 0.60000002 })
tg.bs_door.use_pnt_x = -2.95119
tg.bs_door.use_pnt_y = 33.2505
tg.bs_door.use_pnt_z = 17.129999
tg.bs_door.use_rot_x = 0
tg.bs_door.use_rot_y = 80.750504
tg.bs_door.use_rot_z = 0
tg.bs_door.out_pnt_x = -3.19085
tg.bs_door.out_pnt_y = 33.289501
tg.bs_door.out_pnt_z = 17.129999
tg.bs_door.out_rot_x = 0
tg.bs_door.out_rot_y = 80.750504
tg.bs_door.out_rot_z = 0
tg.bs_box = tg.bs_door
tg.bs_door.walkOut = function(arg1) -- line 392
    if tg.note.owner ~= manny then
        tg:give_note()
    else
        bs:come_out_door(bs.tg_door)
    end
end
tg.bs_door.lookAt = function(arg1) -- line 400
    manny:say_line("/tgma045/")
end
tg.bs_door.comeOut = function(arg1) -- line 404
    if not seen_hell_train then
        start_script(cut_scene.helltrain)
    else
        Object.come_out_door(arg1)
    end
end
thb1_coffee_get_coffee = 0
thb1_coffee_coffee_dumped = 1
thb1_coffee_dumped_hold = 2
thb1_coffee_run = 3
thb2_coffee_get_coffee = 0
thb2_coffee_dumped_on = 1
thb2_coffee_exclaim = 2
thb2_coffee_run = 3
the_floreses_default = 0
the_floreses_to_whsper = 1
the_floreses_whsper_hld = 2
the_floreses_mf_talk_cyc = 3
the_floreses_mf_talk_hld = 4
the_floreses_they_nod = 5
the_floreses_tlk2whsper = 6
the_floreses_to_cstalk = 7
the_floreses_cs2talk_hld = 8
the_floreses_cstalk1_cyc = 9
the_floreses_cstalk1_hld = 10
the_floreses_cstalk2_cyc = 11
the_floreses_cstalk2_2whspr = 12
the_floreses_whspr_2dflt = 13
the_floreses_to_explain = 14
the_floreses_mf_shake = 15
the_floreses_exp_hld = 16
the_floreses_exp2dflt = 17
the_floreses_to_shrug = 18
the_floreses_shrg_hld = 19
the_floreses_shg_2dflt = 20
the_floreses_let_me = 21
the_floreses_lovey = 22
the_floreses_lov_hld = 23
the_floreses_lov_2dflt = 24
the_floreses_to_cs_shake = 25
the_floreses_cs_shake = 26
the_floreses_shk_2dflt = 27
the_floreses_to_susp = 28
the_floreses_susp_hld = 29
the_floreses_susp_cyc = 30
the_floreses_susp_2dflt = 31
the_floreses_walk_away = 32
the_floreses_mumble = 33
the_floreses_c = 34
the_floreses_m = 35
the_floreses_f = 36
the_floreses_e = 37
the_floreses_u = 38
the_floreses_l = 39
the_floreses_a = 40
the_floreses_o = 41
the_floreses_no_talk = 42
the_floreses_t = 43
th_grinder_show = 0
th_grinder_show_bone = 1
CheckFirstTime("th.lua")
dofile("thunderboy1_idles.lua")
dofile("thunderboy2_idles.lua")
dofile("thb1_coffee.lua")
dofile("thb2_coffee.lua")
dofile("msb_snowblow.lua")
dofile("msb_coffee.lua")
dofile("msb_theater.lua")
th = Set:create("th.set", "theater backstage", { th_stgws = 0, th_stgws2 = 0, th_rftha = 2, th_tbyws = 1, th_snocu = 3, th_ovrhd = 4 })
th.lever_actor = Actor:create(nil, nil, nil, "snow lever")
th.lever_actor.default = function(arg1) -- line 24
    arg1:set_costume("msb_snowblow.cos")
    arg1:put_in_set(th)
    arg1:setpos(0.20997, -0.0325, 2.1527)
    arg1:setrot(0, 90, 0)
    arg1:play_chore(msb_snowblow_chain_only)
end
th.coffeepot_actor = Actor:create(nil, nil, nil, "coffee pot")
th.coffeepot_actor.default = function(arg1) -- line 35
    arg1:set_costume("msb_coffee.cos")
    arg1:put_in_set(th)
    arg1:set_softimage_pos(-4.4588, 0, 19.993)
    arg1:setrot(0, 225, 0)
    arg1:play_chore(msb_coffee_coffee_on_burner)
    arg1:set_visibility(TRUE)
end
th.grinder_actor = Actor:create(nil, nil, nil, "grinder")
th.grinder_actor.default = function(arg1) -- line 47
    arg1:set_costume("th_grinder.cos")
    arg1:put_in_set(th)
    arg1:setpos(0.0860798, -0.011, 2.497)
    arg1:setrot(0, 101, 0)
    if th.grinder.has_bone then
        arg1:complete_chore(1)
    else
        arg1:complete_chore(0)
    end
end
th.stop_thunderboys = function() -- line 61
    stop_script(th.backstage_mumbling)
    stop_script(th.backstage_idling)
    thunder_boy_1:stop_chore(thunderboy1_idles_mumble, "thunderboy1_idles.cos")
    thunder_boy_1:play_chore(thunderboy1_idles_stop_talk, "thunderboy1_idles.cos")
    thunder_boy_2:stop_chore(thunderboy2_idles_mumble, "thunderboy2_idles.cos")
    thunder_boy_2:play_chore(thunderboy2_idles_stop_talk, "thunderboy2_idles.cos")
end
tb1 = Dialog:create()
tb1.intro = function(arg1) -- line 72
    th.mocked = TRUE
    if find_script(th.meet_the_thunder_boys) then
        stop_script(th.meet_the_thunder_boys)
    end
    th.stop_thunderboys()
    wait_for_message()
    START_CUT_SCENE()
    manny:setpos(0.363558, -0.583726, 0)
    manny:setrot(0, 296.391, 0)
    thunder_boy_1:say_line("/tht1003/")
    thunder_boy_1:wait_for_message()
    END_CUT_SCENE()
end
tb1[100] = { text = "/thma004/", n1 = TRUE }
tb1[100].response = function(arg1) -- line 90
    thunder_boy_2:say_line("/tht2005/")
    manny:head_look_at(th.thunderboy2)
    tb1.kiss_off()
end
tb1[200] = { text = "/thma006/", n1 = TRUE }
tb1[200].response = function(arg1) -- line 97
    thunder_boy_2:say_line("/tht2007/")
    manny:head_look_at(th.thunderboy2)
    tb1.kiss_off()
end
tb1.kiss_off = function() -- line 104
    tb1.node = "exit_dialog"
    wait_for_message()
    thunder_boy_1:say_line("/tht1008/")
    manny:head_look_at(th.thunderboy1)
    wait_for_message()
    thunder_boy_2:say_line("/tht2009/")
    manny:head_look_at(th.thunderboy2)
    wait_for_message()
    manny:head_look_at(nil)
    manny:walkto(0.197732, -0.593037, 0)
    th:current_setup(th_stgws)
    sleep_for(1000)
    thunder_boy_2:say_line("/tht2010/")
    sleep_for(500)
    thunder_boy_1:say_line("/tht1011/")
    wait_for_message()
    start_script(th.backstage_mumbling, th)
    start_script(th.backstage_idling, th)
    cameraman_disabled = FALSE
end
th.back_off = function() -- line 126
    stop_script(th.meet_the_thunder_boys)
    if manny.is_holding == th.coffee_pot then
        start_script(th.serve_coffee)
    else
        cameraman_disabled = TRUE
        th:current_setup(th_tbyws)
        manny:setpos(0.363558, -0.583726, 0)
        manny:setrot(0, 296.391, 0)
        if th.mocked then
            START_CUT_SCENE()
            thunder_boy_2:say_line("/tht2012/")
            wait_for_message()
            thunder_boy_2:say_line("/tht2013/")
            END_CUT_SCENE()
            manny:setpos(0.197732, -0.593037, 0)
            manny:setrot(0, 108.182, 0)
            th:current_setup(th_stgws)
            cameraman_disabled = FALSE
        else
            tb1:init()
        end
    end
end
th.meet_the_thunder_boys = function() -- line 155
    START_CUT_SCENE()
    th.met_thunder_boys = TRUE
    set_override(th.skip_meet_boys, th)
    manny:head_look_at(th.thunderboy2)
    stop_script(th.backstage_mumbling)
    thunder_boy_1:stop_chore(thunderboy1_idles_mumble, "thunderboy1_idles.cos")
    thunder_boy_1:play_chore(thunderboy1_idles_stop_talk, "thunderboy1_idles.cos")
    thunder_boy_2:stop_chore(thunderboy2_idles_mumble, "thunderboy2_idles.cos")
    thunder_boy_2:play_chore(thunderboy2_idles_stop_talk, "thunderboy2_idles.cos")
    thunder_boy_2:say_line("/tht2014/")
    thunder_boy_2:wait_for_message()
    thunder_boy_1:say_line("/tht1015/")
    thunder_boy_1:wait_for_message()
    thunder_boy_2:say_line("/tht2016/")
    thunder_boy_2:wait_for_message()
    thunder_boy_1:say_line("/tht1017/")
    thunder_boy_1:wait_for_message()
    thunder_boy_2:say_line("/tht2018/")
    thunder_boy_2:wait_for_message()
    thunder_boy_1:say_line("/tht1019/")
    thunder_boy_1:wait_for_message()
    END_CUT_SCENE()
    manny:head_look_at(nil)
    thunder_boy_2:say_line("/tht2020/")
    thunder_boy_2:wait_for_message()
    thunder_boy_1:say_line("/tht1021/")
    thunder_boy_1:wait_for_message()
    thunder_boy_2:say_line("/tht2022/")
    thunder_boy_2:wait_for_message()
    thunder_boy_2:say_line("/tht2023/")
    thunder_boy_2:wait_for_message()
    start_script(th.backstage_mumbling, th)
end
th.skip_meet_boys = function(arg1) -- line 193
    kill_override()
    single_start_script(th.backstage_mumbling, th)
end
th.eavesdrop = function() -- line 199
    th.stop_thunderboys()
    START_CUT_SCENE()
    box_off("eavesdrop_trigg")
    th.eavesdropped = TRUE
    th:current_setup(th_tbyws)
    break_here()
    thunder_boy_2:say_line("/tht2024/")
    sleep_for(500)
    manny:walkto(0.960463, -1.08513, -0.29)
    manny:wait_for_actor()
    manny:setrot(0, 452.177, 0)
    thunder_boy_2:wait_for_message()
    thunder_boy_1:say_line("/tht1025/")
    wait_for_message()
    thunder_boy_2:say_line("/tht2026/")
    wait_for_message()
    thunder_boy_2:say_line("/tht2027/")
    wait_for_message()
    thunder_boy_1:say_line("/tht1028/")
    wait_for_message()
    th:current_setup(th_stgws)
    END_CUT_SCENE()
    single_start_script(th.backstage_mumbling, th)
    single_start_script(th.backstage_idling, th)
end
th.burn_thunderboy_burn = function() -- line 227
    START_CUT_SCENE()
    th.boys_gone = TRUE
    th.thunderboy1:make_untouchable()
    th.thunderboy2:make_untouchable()
    stop_script(th.meet_the_thunder_boys)
    th.stop_thunderboys()
    th.thunderboys_from_above:make_untouchable()
    box_off("personal_bubble")
    box_off("eavesdrop_trigg")
    thunder_boy_1:wait_for_chore()
    thunder_boy_2:wait_for_chore()
    manny:stop_chore(msb_hold, manny.base_costume)
    manny:stop_chore(msb_activate_coffeepot, manny.base_costume)
    manny:push_costume("msb_coffee.cos")
    manny:play_chore(msb_coffee_start_pour_on_boyz, "msb_coffee.cos")
    sleep_for(100)
    start_sfx("thCofLng.WAV")
    manny:wait_for_chore(msb_coffee_start_pour_on_boyz, "msb_coffee.cos")
    manny:play_chore_looping(msb_coffee_pour_on_boyz, "msb_coffee.cos")
    music_state:set_sequence(seqCoffeeOnBoys)
    sleep_for(1000)
    th:current_setup(th_tbyws)
    manny:ignore_boxes()
    manny:setpos(0.542084, -0.123266, 2.05)
    manny:setrot(0, 164.794, 0)
    thunder_boy_2:say_line("/tht2029/")
    sleep_for(500)
    thunder_boy_1:stop_chore(thunderboy1_idles_talk1, "thunderboy1_idles.cos")
    thunder_boy_1:stop_chore(thunderboy1_idles_talk2, "thunderboy1_idles.cos")
    thunder_boy_1:stop_chore(thunderboy1_idles_whole_back, "thunderboy1_idles.cos")
    thunder_boy_1:set_time_scale(1.2)
    thunder_boy_1:play_chore(thb1_coffee_coffee_dumped, "thb1_coffee.cos")
    thunder_boy_2:stop_chore(thunderboy2_idles_talk1, "thunderboy2_idles.cos")
    thunder_boy_2:stop_chore(thunderboy2_idles_talk2, "thunderboy2_idles.cos")
    thunder_boy_2:stop_chore(thunderboy2_idles_whole_back, "thunderboy2_idles.cos")
    thunder_boy_2:set_time_scale(1.2)
    thunder_boy_2:play_chore(thb2_coffee_dumped_on, "thb2_coffee.cos")
    thunder_boy_2:wait_for_message()
    manny:stop_chore(msb_coffee_pour_on_boyz, "msb_coffee.cos")
    thunder_boy_2:say_line("/tht2030/")
    thunder_boy_2:wait_for_message()
    thunder_boy_1:say_line("/tht1031/")
    thunder_boy_1:wait_for_message()
    sleep_for(1000)
    thunder_boy_2:say_line("/tht2032/")
    thunder_boy_2:wait_for_message()
    th:current_setup(th_stgws)
    thunder_boy_2:setpos(0.625962, -0.313716, 0)
    thunder_boy_2:setrot(0, 123.538, 0)
    thunder_boy_2:setpos(0.605883, -0.492313, 0)
    thunder_boy_1:setrot(0, 63.5565, 0)
    thunder_boy_2:say_line("/tht2033/")
    thunder_boy_2:wait_for_message()
    thunder_boy_2:say_line("/tht2034/")
    thunder_boy_2:wait_for_chore(thb2_coffee_dumped_on, "thb2_coffee.cos")
    thunder_boy_2:play_chore(thb2_coffee_run, "thb2_coffee.cos")
    thunder_boy_1:play_chore(thb1_coffee_run, "thb1_coffee.cos")
    thunder_boy_2:wait_for_message()
    thunder_boy_1:say_line("/tht1035/")
    thunder_boy_1:wait_for_chore(thb1_coffee_run, "thb1_coffee.cos")
    th:current_setup(th_rftha)
    manny:follow_boxes()
    manny:put_at_object(th.thunderboys_from_above)
    manny:play_chore(msb_coffee_stop_pour_on_boyz, "msb_coffee.cos")
    manny:wait_for_chore(msb_coffee_stop_pour_on_boyz, "msb_coffee.cos")
    thunder_boy_1:wait_for_message()
    thunder_boy_1:free()
    thunder_boy_2:free()
    manny:pop_costume()
    manny:play_chore(msb_hold, manny.base_costume)
    manny:play_chore(msb_activate_coffeepot, manny.base_costume)
    END_CUT_SCENE()
end
th.set_up_actors = function(arg1) -- line 312
    if th.boys_gone then
        thunder_boy_1:put_in_set(nil)
        th.thunderboy1:make_untouchable()
        thunder_boy_2:put_in_set(nil)
        th.thunderboy2:make_untouchable()
        box_off("personal_bubble")
        box_off("eavesdrop_trigg")
    else
        thunder_boy_1:default()
        thunder_boy_1:put_in_set(th)
        thunder_boy_1:setpos(0.63103, -0.69655, 0)
        thunder_boy_1:setrot(0, 95.2081, 0)
        thunder_boy_2:default()
        thunder_boy_2:put_in_set(th)
        thunder_boy_2:setpos(0.60327, -0.35421, 0)
        thunder_boy_2:setrot(0, 144.486, 0)
        start_script(th.backstage_mumbling, th)
        start_script(th.backstage_idling, th)
    end
    th.lever_actor:default()
    if th.coffee_pot.touchable then
        th.coffeepot_actor:default()
    end
    if th.snow_machine.has_grinder then
        th.grinder_actor:default()
    end
    if makeup_woman then
        makeup_woman.saylineTable.x = 400
        makeup_woman.saylineTable.y = 200
        makeup_woman.saylineTable.pan = 110
    end
end
th.backstage_lines_one = { "/tht1044/", "/tht1045/", "/tht1046/", "/tht1047/", "/tht1048/", "/tht1049/", "/tht1050/", "/tht1051/", "/tht1052/" }
th.backstage_lines_two = { "/tht2036/", "/tht2037/", "/tht2038/", "/tht2039/", "/tht2040/", "/tht2041/", "/tht2042/", "/tht2043/" }
th.backstage_mumbling = function(arg1) -- line 375
    local local1 = thunder_boy_1
    local local2 = th.backstage_lines_one
    local local3, local4, local5
    while system.currentSet == th do
        if cutSceneLevel <= 0 then
            if local1 == thunder_boy_1 then
                local1:play_chore_looping(thunderboy1_idles_mumble, "thunderboy1_idles.cos")
            else
                local1:play_chore_looping(thunderboy2_idles_mumble, "thunderboy2_idles.cos")
            end
            local3 = rndint(2000, 5000)
            local5 = FALSE
            local4 = 0
            while local4 < local3 do
                if not local5 and rnd(8) and cutSceneLevel <= 0 then
                    if local1 == thunder_boy_1 then
                        local1:stop_chore(thunderboy1_idles_mumble, "thunderboy1_idles.cos")
                    else
                        local1:stop_chore(thunderboy2_idles_mumble, "thunderboy2_idles.cos")
                    end
                    local1:say_line(pick_one_of(local2, TRUE), { background = TRUE, skip_log = TRUE, volume = 10 })
                    local1:wait_for_message()
                    if local1 == thunder_boy_1 then
                        local1:play_chore_looping(thunderboy1_idles_mumble, "thunderboy1_idles.cos")
                    else
                        local1:play_chore_looping(thunderboy2_idles_mumble, "thunderboy2_idles.cos")
                    end
                    local5 = TRUE
                end
                break_here()
                local4 = local4 + system.frameTime
            end
            if local1 == thunder_boy_1 then
                local1:stop_chore(thunderboy1_idles_mumble, "thunderboy1_idles.cos")
                local1:play_chore(thunderboy1_idles_stop_talk, "thunderboy1_idles.cos")
                local1 = thunder_boy_2
                local2 = th.backstage_lines_two
            else
                local1:stop_chore(thunderboy2_idles_mumble, "thunderboy2_idles.cos")
                local1:play_chore(thunderboy2_idles_stop_talk, "thunderboy2_idles.cos")
                local1 = thunder_boy_1
                local2 = th.backstage_lines_one
            end
        end
        break_here()
    end
end
th.backstage_idling = function(arg1) -- line 427
    local local1, local2
    thunder_boy_1:play_chore(thunderboy1_idles_whole_back, "thunderboy1_idles.cos")
    thunder_boy_2:play_chore(thunderboy1_idles_whole_back, "thunderboy2_idles.cos")
    thunder_boy_1:wait_for_chore(thunderboy1_idles_whole_back, "thunderboy1_idles.cos")
    thunder_boy_2:wait_for_chore(thunderboy1_idles_whole_back, "thunderboy2_idles.cos")
    while system.currentSet == th do
        if local1 == thunderboy1_idles_talk1 then
            local1 = thunderboy1_idles_talk2
        else
            local1 = thunderboy1_idles_talk1
        end
        thunder_boy_1:play_chore(local1, "thunderboy1_idles.cos")
        thunder_boy_1:wait_for_chore(local1, "thunderboy1_idles.cos")
        if local2 == thunderboy2_idles_talk1 then
            local2 = thunderboy2_idles_talk2
        else
            local2 = thunderboy2_idles_talk1
        end
        thunder_boy_2:play_chore(local2, "thunderboy2_idles.cos")
        thunder_boy_2:wait_for_chore(local2, "thunderboy2_idles.cos")
    end
end
th.crash_dressing_room = function() -- line 456
    START_CUT_SCENE()
    if manny.is_holding == th.coffee_pot and (not th.boys_gone or manny.thunder) then
        makeup_woman:say_line("/thmk053/")
        makeup_woman:wait_for_message()
        start_sfx("thCofSht.WAV", IM_HIGH_PRIORITY, 127)
        set_pan("thCofSht.WAV", 127)
        wait_for_sound("thCofSht.WAV")
    elseif not th.boys_gone then
        makeup_woman:say_line("/thmk054/")
    elseif not manny.thunder then
        manny.thunder = TRUE
        cur_puzzle_state[55] = TRUE
        if manny.is_holding == th.coffee_pot then
            th.coffee_pot:free()
            th.coffee_pot:make_untouchable()
            box_on("grinder_box1")
            box_on("grinder_box2")
            manny.is_holding = nil
            manny:stop_chore(msb_hold, manny.base_costume)
            manny:stop_chore(msb_activate_coffeepot, manny.base_costume)
            makeup_woman:say_line("/thmk056/")
        else
            makeup_woman:say_line("/thmk057/")
        end
        wait_for_message()
        makeup_woman:say_line("/thmk058/")
        wait_for_message()
        manny:say_line("/thma059/")
        wait_for_message()
        IrisDown(570, 300, 1000)
        makeup_woman:say_line("/thmk060/")
        wait_for_message()
        sleep_for(500)
        manny.thunder = TRUE
        manny:default("thunder")
        IrisUp(570, 300, 1000)
        manny:walkto(1.06713, -1.14721, -0.29)
        makeup_woman:say_line("/thmk061/")
    else
        manny:say_line("/thma062/")
        wait_for_message()
        makeup_woman:say_line("/thmk063/")
        wait_for_message()
        if not th.bashed_thunder then
            th.bashed_thunder = TRUE
            makeup_woman:say_line("/thmk064/")
            wait_for_message()
            manny:say_line("/thma065/")
            wait_for_message()
            makeup_woman:say_line("/thmk066/")
        end
    end
    END_CUT_SCENE()
    manny:walkto(1.06713, -1.14721, -0.29)
end
th.serve_coffee = function() -- line 519
    th:current_setup(th_stgws)
    th.stop_thunderboys()
    START_CUT_SCENE()
    set_override(th.skip_serve_coffee, th)
    thunder_boy_1:say_line("/tht1067/")
    manny:head_look_at(th.thunderboy1)
    manny:walkto(0.156781, -0.804922, 0, 0, 296.215, 0)
    thunder_boy_1:wait_for_message()
    manny:wait_for_actor()
    thunder_boy_1:wait_for_chore()
    thunder_boy_1:set_time_scale(1.8)
    thunder_boy_2:set_time_scale(1.8)
    manny:push_costume("msb_coffee.cos")
    thunder_boy_1:play_chore(thb1_coffee_get_coffee, "thb1_coffee.cos")
    sleep_for(1500)
    manny:stop_chore(msb_hold, manny.base_costume)
    manny:stop_chore(msb_activate_coffeepot, manny.base_costume)
    manny:play_chore(msb_coffee_2coffee_pour, "msb_coffee.cos")
    sleep_for(100)
    start_sfx("thCofSht.WAV")
    manny:wait_for_chore(msb_coffee_2coffee_pour, "msb_coffee.cos")
    manny:play_chore(msb_coffee_stop_pour, "msb_coffee.cos")
    manny:wait_for_chore(msb_coffee_stop_pour, "msb_coffee.cos")
    manny:pop_costume()
    manny:play_chore(msb_hold, manny.base_costume)
    manny:play_chore(msb_activate_coffeepot, manny.base_costume)
    manny:head_look_at(th.thunderboy2)
    manny:walkto(0.126085, -0.476472, 0, 0, 317.476, 0)
    manny:wait_for_actor()
    thunder_boy_2:wait_for_chore()
    manny:push_costume("msb_coffee.cos")
    thunder_boy_2:play_chore(thb2_coffee_get_coffee, "thb2_coffee.cos")
    sleep_for(1500)
    manny:stop_chore(msb_hold, manny.base_costume)
    manny:stop_chore(msb_activate_coffeepot, manny.base_costume)
    manny:play_chore(msb_coffee_2coffee_pour, "msb_coffee.cos")
    sleep_for(100)
    start_sfx("thCofSht.WAV")
    manny:wait_for_chore(msb_coffee_2coffee_pour, "msb_coffee.cos")
    manny:play_chore(msb_coffee_stop_pour, "msb_coffee.cos")
    manny:wait_for_chore(msb_coffee_stop_pour, "msb_coffee.cos")
    manny:pop_costume()
    manny:play_chore(msb_hold, manny.base_costume)
    manny:play_chore(msb_activate_coffeepot, manny.base_costume)
    thunder_boy_1:set_time_scale(1)
    thunder_boy_2:set_time_scale(1)
    if not th.served then
        th.served = TRUE
        thunder_boy_2:say_line("/tht2068/")
        thunder_boy_2:wait_for_message()
        thunder_boy_2:say_line("/tht2069/")
        thunder_boy_2:wait_for_message()
    else
        thunder_boy_2:say_line("/tht2070/")
        thunder_boy_2:wait_for_message()
    end
    END_CUT_SCENE()
    single_start_script(th.backstage_mumbling, th)
    single_start_script(th.backstage_idling, th)
end
th.skip_serve_coffee = function(arg1) -- line 587
    kill_override()
    if manny:get_costume() == "msb_coffee.cos" then
        manny:pop_costume()
    end
    thunder_boy_1:stop_chore()
    thunder_boy_2:stop_chore()
    thunder_boy_1:set_time_scale(1)
    thunder_boy_2:set_time_scale(1)
    manny:play_chore(msb_hold, manny.base_costume)
    manny:play_chore(msb_activate_coffeepot, manny.base_costume)
    manny:setpos(0.126085, -0.476472, 0)
    manny:setrot(0, 317.476, 0)
    single_start_script(th.backstage_mumbling, th)
    single_start_script(th.backstage_idling, th)
end
th.climb_in = function(arg1) -- line 604
    local local1
    START_CUT_SCENE()
    th:switch_to_set()
    manny:put_in_set(th)
    manny:setpos(-0.53868401, -1.2299401, 0)
    manny:setrot(0, 78.479599, 0)
    if manny.fancy then
        local1 = "mcc_theater.cos"
    else
        local1 = "msb_theater.cos"
    end
    manny:push_costume(local1)
    manny:play_chore(msb_theater_enter_th, local1)
    manny:wait_for_chore(msb_theater_enter_th, local1)
    manny:blend(msb_rest, msb_theater_enter_th, 500, manny.base_costume, local1)
    sleep_for(500)
    manny:pop_costume()
    manny:walkto(-0.37628499, -1.23063, 0, 0, 285.67001, 0)
    END_CUT_SCENE()
end
th.climb_out = function(arg1) -- line 627
    local local1
    START_CUT_SCENE()
    manny:walkto(-0.53868401, -1.2299401, 0, 0, 78.479599, 0)
    manny:wait_for_actor()
    if manny.fancy then
        local1 = "mcc_theater.cos"
    else
        local1 = "msb_theater.cos"
    end
    manny:push_costume(local1)
    manny:fade_in_chore(msb_theater_exit_th, local1, 500)
    manny:wait_for_chore(msb_theater_exit_th, local1)
    manny:pop_costume()
    END_CUT_SCENE()
end
th.enter = function(arg1) -- line 651
    th:set_up_actors()
    if th.eavesdropped then
        box_off("eavesdrop_trigg")
    end
end
th.exit = function(arg1) -- line 658
    th.lever_actor:free()
    th.coffeepot_actor:free()
    thunder_boy_1:free()
    thunder_boy_2:free()
    stop_script(th.meet_the_thunder_boys)
    stop_script(th.backstage_mumbling)
    stop_script(th.backstage_idling)
end
th.personal_bubble = { }
th.personal_bubble.walkOut = function(arg1) -- line 677
    start_script(th.back_off)
end
th.eavesdrop_trigg = { }
th.eavesdrop_trigg.walkOut = function(arg1) -- line 684
    start_script(th.eavesdrop)
end
th.grinder = Object:create(th, "/thtx071/grinder", 0, 0, 0, { range = 0 })
th.grinder.use_pnt_x = 0.175
th.grinder.use_pnt_y = -0.048978701
th.grinder.use_pnt_z = 2.2
th.grinder.use_rot_x = 0
th.grinder.use_rot_y = 89.391602
th.grinder.use_rot_z = 0
th.grinder.wav = "getMetl.wav"
th.grinder:make_untouchable()
th.grinder.lookAt = function(arg1) -- line 699
    if manny.shot and not manny.healed then
        mf:use_grinder()
    elseif not arg1.has_bone then
        manny:say_line("/thma072/")
    else
        manny:say_line("/thma073/")
    end
end
th.grinder.use = function(arg1) -- line 711
    local local1, local2, local3
    if manny.shot and not manny.healed then
        mf:use_grinder()
    elseif arg1.has_bone and bowlsley_in_hiding then
        manny_grind()
    else
        START_CUT_SCENE()
        look_at_item_in_hand(TRUE)
        if arg1.has_bone or arg1.has_snow then
            if manny.costume_state == "reaper" then
                local1 = md_use_grinder
                local3 = md_activate_grinder_full
                local2 = md_hold_grinder
                start_sfx("grinder.IMU")
                manny:play_chore_looping(local1, manny.base_costume)
                sleep_for(2000)
                manny:head_look_at(nil)
                fade_sfx("grinder.imu", 500)
                if arg1.has_bone or arg1.has_snow then
                    manny:stop_chore(local1, manny.base_costume)
                    manny:play_chore(local2, manny.base_costume)
                    manny:play_chore(local3, manny.base_costume)
                end
            elseif manny.fancy then
                manny:stop_chore(mcc_thunder_hold, "mcc_thunder.cos")
                if arg1.has_snow then
                    manny:stop_chore(mcc_thunder_takeout_grinder_empty, "mcc_thunder.cos")
                    manny:play_chore_looping(75, "mcc_thunder.cos")
                else
                    manny:stop_chore(mcc_thunder_takeout_grinder_full, "mcc_thunder.cos")
                    manny:play_chore_looping(mcc_thunder_use_grinder, "mcc_thunder.cos")
                end
                manny:play_chore_looping(mcc_thunder_hold_grinder, "mcc_thunder.cos")
                start_sfx("grinder.IMU")
                sleep_for(2000)
                manny:head_look_at(nil)
                fade_sfx("grinder.imu", 500)
                manny:stop_chore(mcc_thunder_use_grinder, "mcc_thunder.cos")
                manny:stop_chore(75, "mcc_thunder.cos")
                manny:stop_chore(mcc_thunder_hold_grinder, "mcc_thunder.cos")
                manny:play_chore_looping(mcc_thunder_hold, "mcc_thunder.cos")
                if arg1.has_snow then
                    manny:play_chore_looping(mcc_thunder_takeout_grinder_empty, "mcc_thunder.cos")
                else
                    manny:play_chore_looping(mcc_thunder_takeout_grinder_full, "mcc_thunder.cos")
                end
            else
                if th.grinder.has_bone then
                    manny:stop_chore(msb_activate_grinder_full, manny.base_costume)
                else
                    manny:stop_chore(msb_activate_grinder_empty, manny.base_costume)
                end
                if arg1.has_snow then
                    local1 = 87
                else
                    local1 = msb_use_grinder
                end
                start_sfx("grinder.IMU")
                manny:play_chore_looping(local1, manny.base_costume)
                sleep_for(2000)
                manny:head_look_at(nil)
                fade_sfx("grinder.imu", 500)
                manny:stop_chore(local1, manny.base_costume)
                if th.grinder.has_bone then
                    manny:play_chore_looping(msb_activate_grinder_full, manny.base_costume)
                else
                    manny:play_chore_looping(msb_activate_grinder_empty, manny.base_costume)
                end
            end
        else
            start_sfx("grinder.IMU")
            sleep_for(2000)
            fade_sfx("grinder.imu", 500)
        end
        END_CUT_SCENE()
        if arg1.has_snow then
            arg1.has_snow = FALSE
        end
    end
end
th.grinder.default_response = th.grinder.use
th.snow_machine = Object:create(th, "/thtx074/snow machine", 0.025, -0.0289787, 2.46, { range = 0.60000002 })
th.snow_machine.use_pnt_x = 0.175
th.snow_machine.use_pnt_y = -0.048978701
th.snow_machine.use_pnt_z = 2.2
th.snow_machine.use_rot_x = 0
th.snow_machine.use_rot_y = 89.391602
th.snow_machine.use_rot_z = 0
th.snow_machine.has_grinder = TRUE
th.snow_machine.lookAt = function(arg1) -- line 811
    arg1.seen = TRUE
    manny:say_line("/thma075/")
    if arg1.has_grinder and not th.held_grinder then
        arg1:demo()
    end
end
th.snow_machine.demo = function(arg1) -- line 819
    START_CUT_SCENE()
    wait_for_message()
    manny:say_line("/thma076/")
    arg1:pickUp()
    manny:say_line("/moma053/")
    manny:wait_for_message()
    manny:setrot(0, 126.275, 0, TRUE)
    manny:wait_for_actor()
    manny:say_line("/syma159/")
    look_at_item_in_hand()
    arg1:use_grinder()
    END_CUT_SCENE()
end
th.snow_machine.pickUp = function(arg1) -- line 835
    if arg1.has_grinder then
        th.held_grinder = TRUE
        if manny.is_holding == th.coffee_pot then
            system.default_response("not now")
        else
            START_CUT_SCENE()
            th:current_setup(th_snocu)
            manny:walkto(0.217875, -0.064783, 2.156, 0, -272.067, 0)
            manny:head_look_at(nil)
            arg1.has_grinder = FALSE
            arg1.seen = TRUE
            th.grinder:get()
            if manny.fancy then
                if th.grinder.has_bone then
                    manny:play_chore(mcc_thunder_take_grinder_hand, "mcc_thunder.cos")
                else
                    manny:play_chore(mcc_thunder_take_grinder_no_hand, "mcc_thunder.cos")
                end
            elseif th.grinder.has_bone then
                manny:play_chore(msb_take_grinder_hand, "msb.cos")
            else
                manny:play_chore(msb_take_grinder_no_hand, "msb.cos")
            end
            sleep_for(850)
            start_sfx("thInsGrn.WAV")
            th.grinder_actor:set_visibility(FALSE)
            sleep_for(900)
            start_sfx("grdClLid.wav")
            manny:wait_for_chore()
            if manny.fancy then
                manny:stop_chore(mcc_thunder_take_grinder_hand, "mcc_thunder.cos")
                manny:stop_chore(mcc_thunder_take_grinder_no_hand, "mcc_thunder.cos")
            else
                manny:stop_chore(msb_take_grinder_no_hand, "msb.cos")
                manny:stop_chore(msb_take_grinder_hand, "msb.cos")
            end
            if manny.fancy then
                if th.grinder.has_bone then
                    manny:play_chore_looping(mcc_thunder_takeout_grinder_full, manny.base_costume)
                    manny.hold_chore = mcc_thunder_takeout_grinder_full
                else
                    manny:play_chore_looping(mcc_thunder_takeout_grinder_empty, manny.base_costume)
                    manny.hold_chore = mcc_thunder_takeout_grinder_empty
                end
            elseif th.grinder.has_bone then
                manny:play_chore_looping(msb_activate_grinder_full, manny.base_costume)
                manny.hold_chore = msb_activate_grinder_full
            else
                manny:play_chore_looping(msb_activate_grinder_empty, manny.base_costume)
                manny.hold_chore = msb_activate_grinder_empty
            end
            manny:play_chore_looping(ms_hold, manny.base_costume)
            sleep_for(1000)
            manny.is_holding = th.grinder
            manny:head_look_at(arg1)
            END_CUT_SCENE()
        end
    else
        system.default_response("huge")
    end
end
th.snow_machine.use = function(arg1) -- line 902
    if arg1.has_grinder then
        START_CUT_SCENE()
        manny:walkto(0.217875, -0.064783, 2.156, 0, 82.7267, 0)
        manny:wait_for_actor()
        th:current_setup(th_snocu)
        if manny.fancy then
            manny:push_costume("mcc_snowblow.cos")
        else
            manny:push_costume("msb_snowblow.cos")
        end
        manny:play_chore(msb_snowblow_turn_switch)
        sleep_for(600)
        start_sfx("snoMach.IMU")
        if th.grinder.has_snow or th.grinder.has_bone then
            th:current_setup(th_stgws)
            if not th.snow_actor then
                th.snow_actor = Actor:create(nil, nil, nil, "snow")
            end
            th.snow_actor:put_in_set(th)
            th.snow_actor:set_costume("th_snow.cos")
            th.snow_actor:set_softimage_pos(0, 2, 0)
            th.snow_actor:setrot(0, 180, 0)
            th.snow_actor:play_chore_looping(0)
            sleep_for(5000)
            th:current_setup(th_snocu)
            th.snow_actor:free()
            if th.grinder.has_snow then
                th.grinder.has_snow = FALSE
            end
        else
            sleep_for(2000)
        end
        stop_sound("snoMach.IMU")
        manny:wait_for_chore(msb_snowblow_turn_switch)
        manny:pop_costume()
        END_CUT_SCENE()
        if not arg1.seen then
            arg1:lookAt()
        end
    else
        manny:say_line("/thma077/")
    end
end
th.snow_machine.use_grinder = function(arg1) -- line 947
    if th.grinder.has_bone then
        manny:say_line("/thma078/")
    else
        START_CUT_SCENE()
        manny:walkto(0.217875, -0.064783, 2.156, 0, 82.7267, 0)
        manny:wait_for_actor()
        th:current_setup(th_snocu)
        manny:head_look_at(nil)
        arg1.has_grinder = TRUE
        manny:stop_chore(msb_hold, manny.base_costume)
        if manny.fancy then
            manny:stop_chore(mcc_thunder_takeout_grinder_empty, "mcc_thunder.cos")
            manny:play_chore(mcc_thunder_return_grinder, "mcc_thunder.cos")
        else
            manny:stop_chore(msb_activate_grinder_empty, "msb.cos")
            manny:play_chore(msb_return_grinder, "msb.cos")
        end
        sleep_for(800)
        start_sfx("grdOpLid.wav")
        sleep_for(200)
        start_sfx("thInsGrn.WAV")
        sleep_for(374)
        th.grinder_actor:set_visibility(TRUE)
        manny:wait_for_chore()
        manny.hold_chore = nil
        manny.is_holding = nil
        if manny.fancy then
            manny:stop_chore(mcc_thunder_return_grinder, "mcc_thunder.cos")
        else
            manny:stop_chore(msb_return_grinder, "msb.cos")
        end
        th.grinder:free()
        sleep_for(200)
        manny:head_look_at(arg1)
        END_CUT_SCENE()
    end
end
th.snow_machine.use_hand = function(arg1) -- line 987
    if arg1.has_grinder then
        if th.grinder.has_snow then
            system.default_response("full")
        else
            START_CUT_SCENE()
            manny:walkto(0.196374, -0.0406213, 2.2, 0, 82.7267, 0)
            manny:wait_for_actor()
            nq.arm:free()
            th.grinder.has_bone = TRUE
            manny:head_look_at(nil)
            manny:stop_chore(msb_hold, manny.base_costume)
            manny:stop_chore(manny.hold_chore, manny.base_costume)
            manny.hold_chore = nil
            if manny.fancy then
                manny:push_costume("mcc_snowblow.cos")
            else
                manny:push_costume("msb_snowblow.cos")
            end
            manny:play_chore(msb_snowblow_put_hand)
            manny:wait_for_chore(msb_snowblow_put_hand)
            manny:pop_costume()
            th.grinder_actor:default()
            manny:head_look_at(arg1)
            manny:say_line("/thma079/")
            END_CUT_SCENE()
        end
    else
        th.snow_machine:use()
    end
end
th.snow_machine.use_coffee_pot = function(arg1) -- line 1019
    manny:say_line("/thma080/")
end
th.snow_machine.use_sproutella = function(arg1) -- line 1023
    if arg1.has_grinder and th.grinder.has_bone then
        manny:say_line("/thma081/")
    else
        fi.sproutella:default_response(th.snow_machine)
    end
end
th.lever = Object:create(th, "/thtx082/lever", 0.075000003, 0.151021, 2.5699999, { range = 0.60000002 })
th.lever.use_pnt_x = 0.20997
th.lever.use_pnt_y = -0.032499999
th.lever.use_pnt_z = 2.2
th.lever.use_rot_x = 0
th.lever.use_rot_y = 90
th.lever.use_rot_z = 0
th.lever.lookAt = function(arg1) -- line 1041
    manny:say_line("/thma083/")
end
th.lever.use = function(arg1) -- line 1046
    if th.snow_machine.has_grinder then
        if manny.is_holding == th.coffee_pot then
            system.default_response("not now")
        elseif th.grinder.has_snow or th.grinder.has_bone then
            system.default_response("full")
        else
            th.grinder.has_snow = TRUE
            if manny:walkto_object(arg1) then
                START_CUT_SCENE()
                manny:head_look_at(nil)
                if manny.fancy then
                    manny:push_costume("mcc_snowblow.cos")
                else
                    manny:push_costume("msb_snowblow.cos")
                end
                th.lever_actor:set_visibility(FALSE)
                manny:play_chore(msb_snowblow_pull_chain)
                manny:wait_for_chore(msb_snowblow_pull_chain)
                manny:pop_costume()
                th.lever_actor:set_visibility(TRUE)
                END_CUT_SCENE()
            end
        end
    else
        soft_script()
        manny:say_line("/thma084/")
        wait_for_message()
        manny:say_line("/thma085/")
    end
end
th.lever.pickUp = function(arg1) -- line 1080
    if th.snow_machine.has_grinder then
        start_script(th.snow_machine.pickUp, th.snow_machine)
    else
        th.lever:use()
    end
end
th.ladder_bot = Object:create(th, "/thtx001/ladder", 0.70499998, -0.055, 0.75999999, { range = 1 })
th.ladder_bot.use_pnt_x = 0.46472499
th.ladder_bot.use_pnt_y = -0.040333699
th.ladder_bot.use_pnt_z = 0
th.ladder_bot.use_rot_x = 0
th.ladder_bot.use_rot_y = 258.875
th.ladder_bot.use_rot_z = 0
th.ladder_bot.lookAt = function(arg1) -- line 1099
    system.default_response("ladder")
end
th.ladder_bot.pickUp = function(arg1) -- line 1103
    system.default_response("attached")
end
th.ladder_bot.use = function(arg1) -- line 1107
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:head_look_at(th.ladder_top)
        if not manny.fancy then
            manny:play_chore(msb_lf_hand_on_obj, manny.base_costume)
            manny:wait_for_chore(msb_lf_hand_on_obj, manny.base_costume)
        else
            manny:play_chore(mcc_thunder_lf_hand_on_obj, manny.base_costume)
            manny:wait_for_chore(mcc_thunder_lf_hand_on_obj, manny.base_costume)
        end
        manny:put_at_object(th.ladder_top)
        th:current_setup(th_rftha)
        manny:head_look_at(th.ladder_top)
        if not manny.fancy then
            manny:stop_chore(msb_lf_hand_on_obj, manny.base_costume)
            manny:play_chore(msb_end_crouch, manny.base_costume)
            manny:wait_for_chore(msb_end_crouch, manny.base_costume)
            manny:stop_chore(msb_end_crouch, manny.base_costume)
        else
            manny:stop_chore(mcc_thunder_lf_hand_on_obj, manny.base_costume)
            manny:play_chore(mcc_thunder_end_crouch, manny.base_costume)
            manny:wait_for_chore(mcc_thunder_end_crouch, manny.base_costume)
            manny:stop_chore(mcc_thunder_end_crouch, manny.base_costume)
        end
        END_CUT_SCENE()
    end
end
th.ladder_bot.use_coffeepot = th.ladder_bot.use
th.ladder_top = Object:create(th, "/thtx002/top", 0.495107, -0.087508596, 2.536, { range = 1.2 })
th.ladder_top.use_pnt_x = 0.495
th.ladder_top.use_pnt_y = -0.064999998
th.ladder_top.use_pnt_z = 2.2
th.ladder_top.use_rot_x = 0
th.ladder_top.use_rot_y = 269.82401
th.ladder_top.use_rot_z = 0
th.ladder_top.lookAt = function(arg1) -- line 1149
    system.default_response("ladder")
end
th.ladder_top.pickUp = th.ladder_bot.pickUp
th.ladder_top.use = function(arg1) -- line 1155
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:head_look_at(th.ladder_bot)
        manny:play_chore(msb_reach_low, manny.base_costume)
        manny:play_chore(msb_lf_hand_on_obj, manny.base_costume)
        sleep_for(1000)
        th:current_setup(th_stgws)
        manny:stop_chore(msb_reach_low, manny.base_costume)
        manny:put_at_object(th.ladder_bot)
        manny:head_look_at(th.ladder_top)
        manny:wait_for_chore(msb_lf_hand_on_obj, manny.base_costume)
        manny:stop_chore(msb_lf_hand_on_obj, manny.base_costume)
        manny:play_chore(msb_lf_hand_off_obj, manny.base_costume)
        manny:wait_for_chore(msb_lf_hand_off_obj, manny.base_costume)
        manny:stop_chore(msb_lf_hand_off_obj, manny.base_costume)
        END_CUT_SCENE()
    end
end
th.ladder_top.use_coffeepot = th.ladder_top.use
th.coffee_pot = Object:create(th, "/thtx086/pot of coffee", -0.30750701, -2.2220199, 0.34999999, { range = 0.60000002 })
th.coffee_pot.string_name = "coffeepot"
th.coffee_pot.use_pnt_x = -0.44588
th.coffee_pot.use_pnt_y = -1.9993
th.coffee_pot.use_pnt_z = 0
th.coffee_pot.use_rot_x = 0
th.coffee_pot.use_rot_y = 225.011
th.coffee_pot.use_rot_z = 0
th.coffee_pot.wav = "getBotl.wav"
th.coffee_pot.can_put_away = FALSE
th.coffee_pot.lookAt = function(arg1) -- line 1191
    arg1.seen = TRUE
    manny:say_line("/thma087/")
end
th.coffee_pot.pickUp = function(arg1) -- line 1196
    local local1
    box_on("coffee_box")
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        if manny.fancy then
            local1 = "mcc_coffee.cos"
        else
            local1 = "msb_coffee.cos"
        end
        manny:push_costume(local1)
        th.coffeepot_actor:set_visibility(FALSE)
        manny:play_chore(msb_coffee_get_coffee, local1)
        sleep_for(1000)
        start_sfx("thPotUp.WAV")
        manny:wait_for_chore(msb_coffee_get_coffee, local1)
        manny:pop_costume()
        manny:setrot(0, 299.58401, 0)
        manny:generic_pickup(arg1)
        manny:walkto(-0.25503299, -1.8238699, 0)
        if not arg1.seen then
            look_at_item_in_hand()
        end
        manny:wait_for_actor()
        END_CUT_SCENE()
        box_off("grinder_box1")
        box_off("grinder_box2")
    end
    box_off("coffee_box")
    th.coffee_rack:make_touchable()
end
th.coffee_pot.use = function(arg1) -- line 1229
    if manny.is_holding == th.coffee_pot then
        manny:say_line("/thma088/")
    else
        th.coffee_pot:pickUp()
    end
end
th.coffee_pot.use_grinder = function(arg1) -- line 1237
    if th.grinder.has_bone or th.grinder.has_snow then
        manny:say_line("/thma089/")
    else
        th.grinder:default_response()
    end
end
th.coffee_pot.default_response = th.coffee_pot.use
th.coffee_pot.put_away = function(arg1) -- line 1247
    manny:say_line("/thma090/")
    return FALSE
end
th.coffee_rack = Object:create(th, "/thtx091/burners", -0.30750701, -2.2220199, 0.34999999, { range = 0.60000002 })
th.coffee_rack.use_pnt_x = -0.44588
th.coffee_rack.use_pnt_y = -1.9993
th.coffee_rack.use_pnt_z = 0
th.coffee_rack.use_rot_x = 0
th.coffee_rack.use_rot_y = 180.32401
th.coffee_rack.use_rot_z = 0
th.coffee_rack:make_untouchable()
th.coffee_rack.lookAt = function(arg1) -- line 1264
    manny:say_line("/thma092/")
end
th.coffee_rack.pickUp = th.coffee_rack.lookAt
th.coffee_rack.use_coffeepot = function(arg1) -- line 1270
    local local1
    box_on("coffee_box")
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny.is_holding = nil
        if manny.fancy then
            local1 = "mcc_coffee.cos"
            manny:stop_chore(mcc_thunder_hold, manny.base_costume)
            manny:stop_chore(mcc_thunder_activate_coffeepot, manny.base_costume)
        else
            local1 = "msb_coffee.cos"
            manny:stop_chore(msb_hold, manny.base_costume)
            manny:stop_chore(msb_activate_coffeepot, manny.base_costume)
        end
        manny:push_costume(local1)
        manny:setrot(0, 225, 0)
        manny:play_chore(msb_coffee_pot_to_burner, local1)
        sleep_for(900)
        start_sfx("thPotDn.WAV")
        manny:wait_for_chore(msb_coffee_pot_to_burner, local1)
        th.coffeepot_actor:default()
        manny:pop_costume()
        manny:setrot(0, 299.58401, 0)
        manny:walkto(-0.25503299, -1.8238699, 0)
        manny:wait_for_actor()
        END_CUT_SCENE()
        th.coffee_pot:free()
        th.coffee_pot:make_touchable()
        arg1:make_untouchable()
        box_on("grinder_box1")
        box_on("grinder_box2")
    end
    box_off("coffee_box")
end
th.dressing_room = Object:create(th, "/thtx093/dressing room", 1.35489, -1.1065201, 0.199967, { range = 0.89999998 })
th.dressing_room.use_pnt_x = 0.894467
th.dressing_room.use_pnt_y = -1.0750999
th.dressing_room.use_pnt_z = -0.28999999
th.dressing_room.use_rot_x = 0
th.dressing_room.use_rot_y = 275.81699
th.dressing_room.use_rot_z = 0
th.dressing_room.out_pnt_x = 1.3099999
th.dressing_room.out_pnt_y = -1.155
th.dressing_room.out_pnt_z = -0.28999999
th.dressing_room.out_rot_x = 0
th.dressing_room.out_rot_y = 248.313
th.dressing_room.out_rot_z = 0
th.dressing_room.lookAt = function(arg1) -- line 1324
    manny:say_line("/thma094/")
end
th.dressing_room.walkOut = function(arg1) -- line 1328
    start_script(th.crash_dressing_room)
end
th.thunderboy1 = Object:create(th, "/thtx095/Thunder Boy", 0.79973602, -0.57853103, 0.44, { range = 0.80000001 })
th.thunderboy1.use_pnt_x = 0.51973599
th.thunderboy1.use_pnt_y = -0.51853102
th.thunderboy1.use_pnt_z = 0
th.thunderboy1.use_rot_x = 0
th.thunderboy1.use_rot_y = -122.034
th.thunderboy1.use_rot_z = 0
th.thunderboy1.person = TRUE
th.thunderboy1.lookAt = function(arg1) -- line 1344
    START_CUT_SCENE()
    manny:say_line("/thma096/")
    manny:wait_for_message()
    thunder_boy_2:say_line("/tht2097/")
    thunder_boy_2:wait_for_message()
    END_CUT_SCENE()
end
th.thunderboy1.pickUp = function(arg1) -- line 1353
    manny:say_line("/thma098/")
end
th.thunderboy1.use = function(arg1) -- line 1357
    if not th.mocked then
        START_CUT_SCENE()
        manny:say_line("/thma099/")
        wait_for_message()
        END_CUT_SCENE()
    end
    start_script(th.back_off)
end
th.thunderboy1.use_coffeepot = function(arg1) -- line 1367
    start_script(th.serve_coffee)
end
th.thunderboy2 = Object:create(th, "/thtx100/Thunder Boy", 0.672732, -0.18703701, 0.456, { range = 0.80000001 })
th.thunderboy2.use_pnt_x = 0.51973599
th.thunderboy2.use_pnt_y = -0.51853102
th.thunderboy2.use_pnt_z = 0
th.thunderboy2.use_rot_x = 0
th.thunderboy2.use_rot_y = -122.034
th.thunderboy2.use_rot_z = 0
th.thunderboy2.parent = th.thunderboy1
th.thunderboys_from_above = Object:create(th, "/thtx101/Thunder Boys", 0.69005603, -0.58999997, 2.1800001, { range = 0.60000002 })
th.thunderboys_from_above.use_pnt_x = 0.477274
th.thunderboys_from_above.use_pnt_y = -0.1777813
th.thunderboys_from_above.use_pnt_z = 2.2
th.thunderboys_from_above.use_rot_x = 0
th.thunderboys_from_above.use_rot_y = 171.567
th.thunderboys_from_above.use_rot_z = 0
th.thunderboys_from_above.person = TRUE
th.thunderboys_from_above.lookAt = function(arg1) -- line 1394
    START_CUT_SCENE()
    manny:say_line("/thma102/")
    manny:wait_for_message()
    manny:say_line("/thma103/")
    END_CUT_SCENE()
end
th.thunderboys_from_above.use = function(arg1) -- line 1403
    START_CUT_SCENE()
    manny:say_line("/thma104/")
    manny:wait_for_message()
    thunder_boy_1:say_line("/tht1105/")
    thunder_boy_1:wait_for_message()
    thunder_boy_2:say_line("/tht2106/")
    thunder_boy_2:wait_for_message()
    thunder_boy_2:say_line("/tht2107/")
    END_CUT_SCENE()
end
th.thunderboys_from_above.use_grinder = function(arg1) -- line 1415
    local local1
    if th.grinder.has_bone or th.grinder.has_snow then
        local1 = TRUE
    end
    th.grinder:use()
    if local1 then
        START_CUT_SCENE()
        if not th.talked_dandruff then
            th.talked_dandruff = TRUE
            thunder_boy_1:say_line("/tht1108/")
            thunder_boy_1:wait_for_message()
            thunder_boy_2:say_line("/tht2109/")
            thunder_boy_2:wait_for_message()
            thunder_boy_1:say_line("/tht1110/")
            thunder_boy_1:wait_for_message()
        else
            thunder_boy_1:say_line("/tht1111/")
            thunder_boy_1:wait_for_message()
            thunder_boy_2:say_line("/tht2112/")
            thunder_boy_2:wait_for_message()
            thunder_boy_1:say_line("/tht1113/")
            thunder_boy_1:wait_for_message()
        end
        END_CUT_SCENE()
    end
end
th.thunderboys_from_above.use_coffeepot = function(arg1) -- line 1446
    if manny:walkto_object(arg1) then
        start_script(th.burn_thunderboy_burn)
    end
end
th.te_door = Object:create(th, "/thtx114/basement", -0.890948, -1.26624, 0.13, { range = 0.60000002 })
th.te_door.use_pnt_x = -0.53868401
th.te_door.use_pnt_y = -1.2299401
th.te_door.use_pnt_z = 0
th.te_door.use_rot_x = 0
th.te_door.use_rot_y = 78.479599
th.te_door.use_rot_z = 0
th.te_door.out_pnt_x = -0.53868401
th.te_door.out_pnt_y = -1.2299401
th.te_door.out_pnt_z = 0
th.te_door.out_rot_x = 0
th.te_door.out_rot_y = 78.479599
th.te_door.out_rot_z = 0
th.te_door.walkOut = function(arg1) -- line 1473
    local local1
    if manny.is_holding == th.coffee_pot then
        manny:say_line("/thma115/")
    else
        START_CUT_SCENE()
        th:climb_out()
        te:switch_to_set()
        manny:put_in_set(te)
        local1 = te.th_ladder.base
        manny:setpos(local1.use_pnt_x, local1.use_pnt_y, local1.use_pnt_z)
        manny:push_costume(manny.ladder_costume)
        manny:play_chore(ma_ladder_generic_jump_off, manny.ladder_costume)
        manny:wait_for_chore(ma_ladder_generic_jump_off, manny.ladder_costume)
        manny:pop_costume()
        manny:walkto(-4.9533801, -0.384285, 0, 0, 284.59399, 0)
        END_CUT_SCENE()
    end
end
th.te_door.lookAt = function(arg1) -- line 1494
    manny:say_line("/thma116/")
end
th.te_door.use = th.te_door.walkOut
th_snow_snow = 0
thunderboy1_idles_whole = 0
thunderboy1_idles_whole_back = 1
thunderboy1_idles_talk1 = 2
thunderboy1_idles_talk1_back = 3
thunderboy1_idles_talk2 = 4
thunderboy1_idles_talk2_back = 5
thunderboy1_idles_mumble = 6
thunderboy1_idles_c = 7
thunderboy1_idles_m = 8
thunderboy1_idles_f = 9
thunderboy1_idles_e = 10
thunderboy1_idles_l = 11
thunderboy1_idles_u = 12
thunderboy1_idles_a = 13
thunderboy1_idles_o = 14
thunderboy1_idles_stop_talk = 15
thunderboy1_idles_t = 16
thunderboy2_idles_whole = 0
thunderboy2_idles_whole_back = 1
thunderboy2_idles_talk1 = 2
thunderboy2_idles_talk1_back = 3
thunderboy2_idles_talk2 = 4
thunderboy2_idles_talk2_back = 5
thunderboy2_idles_mumble = 6
thunderboy2_idles_c = 7
thunderboy2_idles_m = 8
thunderboy2_idles_f = 9
thunderboy2_idles_e = 10
thunderboy2_idles_l = 11
thunderboy2_idles_u = 12
thunderboy2_idles_a = 13
thunderboy2_idles_o = 14
thunderboy2_idles_stop_talk = 15
thunderboy2_idles_t = 16
tix_hop_tix_hop = 0
tix_wiggle = 0
tm_IDPHOTO_terry_free = 0
tm_manifesto_base_pose = 0
tm_manifesto_gesture1 = 1
tm_manifesto_gesture1_hold = 2
tm_manifesto_gesture_cycle = 3
tm_manifesto_gesture2 = 4
tm_manifesto_gesture2_hold = 5
tm_manifesto_gesture_to_base = 6
tm_manifesto_lefthand_out = 7
tm_manifesto_lefthand_hold = 8
tm_manifesto_lhand_to_base = 9
tm_manifesto_base_to_shrug = 10
tm_manifesto_shrug_hold = 11
tm_manifesto_shrug_to_base = 12
tm_manifesto_to_point = 13
tm_manifesto_point_cycle = 14
tm_manifesto_point_to_base = 15
tm_manifesto_step_left = 16
tm_manifesto_step_right = 17
tm_manifesto_warm_hands = 18
tm_manifesto_to_head_base = 19
tm_manifesto_head_base = 20
tm_manifesto_head_nod = 21
tm_manifesto_head_wag = 22
tm_manifesto_head_to_base = 23
tm_manifesto_read_book = 24
tm_pace_pace = 0
tm_pace_stop_scratch = 1
tm_pace_start_scratch = 2
tm_pace_pace_no_scratch = 3
toaster_fire_fire = 0
toaster_fire_hide = 1
to_sleep_sleep = 0
tossed_tray_tossed_tray = 0
toto_drop_na_drop_walk = 0
toto_drop_na_mumble = 1
toto_drop_na_c = 2
toto_drop_na_m = 3
toto_drop_na_f = 4
toto_drop_na_e = 5
toto_drop_na_u = 6
toto_drop_na_l = 7
toto_drop_na_a = 8
toto_drop_na_o = 9
toto_drop_na_no_talk = 10
toto_drop_na_t = 11
toto_drill_slows = 0
toto_yell_to_drill = 1
toto_drill_loop = 2
toto_head_turn = 3
toto_head_hold = 4
toto_hdhold_to_drill = 5
toto_stop_chktt = 6
toto_chktt_close = 7
toto_chktt_away = 8
toto_chktt_pause = 9
toto_chktt_to_drill = 10
toto_look_fridge = 11
toto_look_to_drill = 12
toto_yell_loop = 13
toto_lift_arm = 14
toto_mumble = 15
toto_stop_talk = 16
toto_c = 17
toto_m = 18
toto_f = 19
toto_e = 20
toto_u = 21
toto_l = 22
toto_a = 23
toto_o = 24
toto_na_pso = 25
toto_t = 26
toto_phone_grab_phone = 0
toto_phone_gestures = 1
toto_phone_turn_point = 2
toto_phone_point_hold = 3
toto_phone_back_to_phone = 4
toto_phone_turn_head = 5
toto_phone_hold_head = 6
toto_phone_bye = 7
toto_phone_hang_up = 8
toto_phone_wave = 9
toto_phone_scratch = 10
toto_photo_open_binder = 0
toto_photo_give_photo = 1
toto_photo_done_giving = 2
toto_photo_binder_alone = 3
toto_photo_give_hold = 4
tp_interface_press_down = 0
tp_interface_press_up = 1
tp_interface_lft_to_mid = 2
tp_interface_mid_to_lft = 3
tp_interface_mid_to_rt = 4
tp_interface_rt_to_mid = 5
tp_interface_rt_to_tkt = 6
tp_interface_tkt_to_lft = 7
tp_interface_lft_hold = 8
CheckFirstTime("tp.lua")
dofile("tp_interface.lua")
tp = Set:create("tp.set", "ticket printer", { tp_tckcu = 0 })
tp.current_button = nil
tp.week = nil
tp.day = nil
tp.race = nil
tp.RACE = 1
tp.DAY = 2
tp.WEEK = 3
tp.PRINT = 4
system.digitTemplate = { name = "<unnamed>", x = nil, y = nil, elements = nil }
Digit = system.digitTemplate
Digit.create = function(arg1, arg2, arg3, arg4) -- line 45
    local local1 = { }
    local local2 = 1
    local1.parent = Digit
    local1.name = arg2
    local1.x = arg3
    local1.y = arg4
    local1.elements = { }
    repeat
        local1.elements[local2] = DrawLine(tp.basenumber[local2].x1 + local1.x, tp.basenumber[local2].y1 + local1.y, tp.basenumber[local2].x2 + local1.x, tp.basenumber[local2].y2 + local1.y, { color = tp.text_color_dim, layer = 1 })
        local2 = local2 + 1
    until local2 == 14
    return local1
end
Digit.draw_number = function(arg1, arg2) -- line 68
    local local1 = 1
    repeat
        ChangePrimitive(arg1.elements[local1], { color = tp.text_color_dim, layer = 1 })
        local1 = local1 + 1
    until local1 == 14
    local1 = 1
    repeat
        ChangePrimitive(arg1.elements[tp.number[arg2][local1]], { color = tp.text_color_bright, layer = 1 })
        local1 = local1 + 1
    until not tp.number[arg2][local1]
end
Digit.draw_char = function(arg1, arg2) -- line 83
    local local1 = 1
    repeat
        ChangePrimitive(arg1.elements[local1], { color = tp.text_color_dim, layer = 1 })
        local1 = local1 + 1
    until local1 == 14
    local1 = 1
    repeat
        if tp.letter[arg2][local1] then
            ChangePrimitive(arg1.elements[tp.letter[arg2][local1]], { color = tp.text_color_bright, layer = 1 })
        end
        local1 = local1 + 1
    until not tp.letter[arg2][local1]
end
Digit.destroy = function(arg1) -- line 101
    local local1 = 1
    repeat
        KillPrimitive(arg1.elements[local1])
        local1 = local1 + 1
    until local1 == 14
end
system.ledTemplate = { name = "<unnamed>", digits = nil, num_digits = 0 }
Led = system.ledTemplate
Led.create = function(arg1, arg2) -- line 120
    local local1 = { }
    local local2 = 1
    local1.parent = Led
    local1.name = arg2
    local1.digits = { }
    local1.num_digits = 0
    return local1
end
Led.add_digit = function(arg1, arg2, arg3) -- line 133
    local local1 = arg1.num_digits + 1
    arg1.digits[local1] = Digit:create("digit " .. local1, arg2, arg3)
    arg1.num_digits = arg1.num_digits + 1
end
Led.display_number = function(arg1, arg2) -- line 141
    local local1 = arg1.num_digits
    local local2, local3
    if arg2 > 9 then
        local2 = floor(arg2 / 10)
        local3 = mod(arg2, 10)
    else
        local2 = 0
        local3 = arg2
    end
    arg1.digits[local1]:draw_number(local3)
    local1 = local1 - 1
    arg1.digits[local1]:draw_number(local2)
    local1 = local1 - 1
    while arg1.digits[local1] do
        arg1.digits[local1]:draw_number(0)
        local1 = local1 - 1
    end
end
Led.display_str = function(arg1, arg2) -- line 164
    local local1 = 1
    local local2
    arg2 = LocalizeString(arg2)
    arg2 = trim_header(arg2)
    arg2 = americanize_string(arg2)
    repeat
        local2 = strsub(arg2, local1, local1)
        if local2 then
            arg1.digits[local1]:draw_char(local2)
            local1 = local1 + 1
        end
    until local1 > arg1.num_digits or not local2
end
americanize_string = function(arg1) -- line 181
    local local1 = { }
    local local2
    local local3, local4, local5, local6
    local1.A = "\192\193\194\195\196\197\198\224\225\226\227\228\229\230"
    local1.C = "\199\231"
    local1.E = "\200\201\202\203\232\233\234\235"
    local1.I = "\204\205\206\207\236\237\238\239"
    local1.N = "\209\241"
    local1.O = "\210\211\212\213\214\242\243\244\245\246\248\216"
    local1.U = "\217\218\219\220\249\250\251\252"
    local1.Y = "\221\159\253\255"
    local1.OE = "\140\156"
    local1.AE = "\198\230"
    local1.S = "\154\138"
    local1.SS = "\223"
    local2 = arg1
    local3, local4 = next(local1, nil)
    while local3 do
        local6 = strlen(local4)
        local5 = 1
        while local5 <= local6 do
            local2 = gsub(local2, strsub(local4, local5, local5), local3)
            local5 = local5 + 1
        end
        local3, local4 = next(local1, local3)
    end
    local2 = strlower(local2)
    return local2
end
Led.destroy = function(arg1) -- line 216
    local local1 = 1
    repeat
        arg1.digits[local1]:destroy()
        local1 = local1 + 1
    until local1 > arg1.num_digits
end
tp.init_number_tables = function() -- line 238
    tp.basenumber = { }
    tp.basenumber[1] = { }
    tp.basenumber[2] = { }
    tp.basenumber[3] = { }
    tp.basenumber[4] = { }
    tp.basenumber[5] = { }
    tp.basenumber[6] = { }
    tp.basenumber[7] = { }
    tp.basenumber[8] = { }
    tp.basenumber[9] = { }
    tp.basenumber[10] = { }
    tp.basenumber[11] = { }
    tp.basenumber[12] = { }
    tp.basenumber[13] = { }
    tp.basenumber[1].x1 = 1
    tp.basenumber[1].y1 = 0
    tp.basenumber[1].x2 = 12
    tp.basenumber[1].y2 = 0
    tp.basenumber[2].x1 = 0
    tp.basenumber[2].y1 = 1
    tp.basenumber[2].x2 = 0
    tp.basenumber[2].y2 = 13
    tp.basenumber[3].x1 = 13
    tp.basenumber[3].y1 = 1
    tp.basenumber[3].x2 = 13
    tp.basenumber[3].y2 = 13
    tp.basenumber[4].x1 = 1
    tp.basenumber[4].y1 = 14
    tp.basenumber[4].x2 = 12
    tp.basenumber[4].y2 = 14
    tp.basenumber[5].x1 = 0
    tp.basenumber[5].y1 = 15
    tp.basenumber[5].x2 = 0
    tp.basenumber[5].y2 = 27
    tp.basenumber[6].x1 = 13
    tp.basenumber[6].y1 = 15
    tp.basenumber[6].x2 = 13
    tp.basenumber[6].y2 = 27
    tp.basenumber[7].x1 = 1
    tp.basenumber[7].y1 = 28
    tp.basenumber[7].x2 = 12
    tp.basenumber[7].y2 = 28
    tp.basenumber[8].x1 = 6
    tp.basenumber[8].y1 = 1
    tp.basenumber[8].x2 = 6
    tp.basenumber[8].y2 = 12
    tp.basenumber[9].x1 = 6
    tp.basenumber[9].y1 = 15
    tp.basenumber[9].x2 = 6
    tp.basenumber[9].y2 = 27
    tp.basenumber[10].x1 = 1
    tp.basenumber[10].y1 = 26
    tp.basenumber[10].x2 = 5
    tp.basenumber[10].y2 = 15
    tp.basenumber[11].x1 = 7
    tp.basenumber[11].y1 = 12
    tp.basenumber[11].x2 = 12
    tp.basenumber[11].y2 = 1
    tp.basenumber[12].x1 = 1
    tp.basenumber[12].y1 = 1
    tp.basenumber[12].x2 = 5
    tp.basenumber[12].y2 = 12
    tp.basenumber[13].x1 = 7
    tp.basenumber[13].y1 = 15
    tp.basenumber[13].x2 = 11
    tp.basenumber[13].y2 = 26
    tp.number = { }
    tp.number[0] = { }
    tp.number[0][1] = 1
    tp.number[0][2] = 2
    tp.number[0][3] = 3
    tp.number[0][4] = 5
    tp.number[0][5] = 6
    tp.number[0][6] = 7
    tp.number[1] = { }
    tp.number[1][1] = 8
    tp.number[1][2] = 9
    tp.number[2] = { }
    tp.number[2][1] = 1
    tp.number[2][2] = 3
    tp.number[2][3] = 4
    tp.number[2][4] = 5
    tp.number[2][5] = 7
    tp.number[3] = { }
    tp.number[3][1] = 1
    tp.number[3][2] = 3
    tp.number[3][3] = 4
    tp.number[3][4] = 6
    tp.number[3][5] = 7
    tp.number[4] = { }
    tp.number[4][1] = 2
    tp.number[4][2] = 3
    tp.number[4][3] = 4
    tp.number[4][4] = 6
    tp.number[5] = { }
    tp.number[5][1] = 1
    tp.number[5][2] = 2
    tp.number[5][3] = 4
    tp.number[5][4] = 6
    tp.number[5][5] = 7
    tp.number[6] = { }
    tp.number[6][1] = 2
    tp.number[6][2] = 4
    tp.number[6][3] = 5
    tp.number[6][4] = 6
    tp.number[6][5] = 7
    tp.number[7] = { }
    tp.number[7][1] = 1
    tp.number[7][2] = 3
    tp.number[7][3] = 6
    tp.number[8] = { }
    tp.number[8][1] = 1
    tp.number[8][2] = 2
    tp.number[8][3] = 3
    tp.number[8][4] = 4
    tp.number[8][5] = 5
    tp.number[8][6] = 6
    tp.number[8][7] = 7
    tp.number[9] = { }
    tp.number[9][1] = 1
    tp.number[9][2] = 2
    tp.number[9][3] = 3
    tp.number[9][4] = 4
    tp.number[9][5] = 6
    tp.letter = { }
    tp.letter["a"] = { }
    tp.letter.a[1] = 1
    tp.letter.a[2] = 2
    tp.letter.a[3] = 3
    tp.letter.a[4] = 4
    tp.letter.a[5] = 5
    tp.letter.a[6] = 6
    tp.letter.b = { }
    tp.letter.b[1] = 1
    tp.letter.b[2] = 2
    tp.letter.b[3] = 3
    tp.letter.b[4] = 4
    tp.letter.b[5] = 5
    tp.letter.b[6] = 6
    tp.letter.b[7] = 7
    tp.letter.c = { }
    tp.letter.c[1] = 1
    tp.letter.c[2] = 2
    tp.letter.c[3] = 5
    tp.letter.c[4] = 7
    tp.letter["d"] = { }
    tp.letter.d[1] = 2
    tp.letter.d[2] = 5
    tp.letter.d[3] = 10
    tp.letter.d[4] = 12
    tp.letter["e"] = { }
    tp.letter.e[1] = 1
    tp.letter.e[2] = 2
    tp.letter.e[3] = 4
    tp.letter.e[4] = 5
    tp.letter.e[5] = 7
    tp.letter["f"] = { }
    tp.letter.f[1] = 1
    tp.letter.f[2] = 2
    tp.letter.f[3] = 4
    tp.letter.f[4] = 5
    tp.letter.g = { }
    tp.letter.g[1] = 1
    tp.letter.g[2] = 2
    tp.letter.g[3] = 5
    tp.letter.g[4] = 7
    tp.letter.g[5] = 13
    tp.letter.h = { }
    tp.letter.h[1] = 2
    tp.letter.h[2] = 3
    tp.letter.h[3] = 4
    tp.letter.h[4] = 5
    tp.letter.h[5] = 6
    tp.letter["i"] = { }
    tp.letter.i[1] = 8
    tp.letter.i[2] = 9
    tp.letter.j = { }
    tp.letter.j[1] = 1
    tp.letter.j[2] = 8
    tp.letter.j[3] = 10
    tp.letter.j[4] = 5
    tp.letter.k = { }
    tp.letter.k[1] = 8
    tp.letter.k[2] = 9
    tp.letter.k[3] = 11
    tp.letter.k[4] = 13
    tp.letter["l"] = { }
    tp.letter.l[1] = 2
    tp.letter.l[2] = 5
    tp.letter.l[3] = 7
    tp.letter.m = { }
    tp.letter.m[1] = 2
    tp.letter.m[2] = 3
    tp.letter.m[3] = 5
    tp.letter.m[4] = 6
    tp.letter.m[5] = 12
    tp.letter.m[6] = 11
    tp.letter["n"] = { }
    tp.letter.n[1] = 2
    tp.letter.n[2] = 3
    tp.letter.n[3] = 5
    tp.letter.n[4] = 6
    tp.letter.n[5] = 12
    tp.letter.n[6] = 13
    tp.letter["o"] = { }
    tp.letter.o[1] = 1
    tp.letter.o[2] = 2
    tp.letter.o[3] = 3
    tp.letter.o[4] = 5
    tp.letter.o[5] = 6
    tp.letter.o[6] = 7
    tp.letter.p = { }
    tp.letter.p[1] = 1
    tp.letter.p[2] = 2
    tp.letter.p[3] = 3
    tp.letter.p[4] = 4
    tp.letter.p[5] = 5
    tp.letter.q = { }
    tp.letter.q[1] = 1
    tp.letter.q[2] = 2
    tp.letter.q[3] = 3
    tp.letter.q[4] = 5
    tp.letter.q[5] = 6
    tp.letter.q[6] = 7
    tp.letter.q[7] = 13
    tp.letter["r"] = { }
    tp.letter.r[1] = 1
    tp.letter.r[2] = 2
    tp.letter.r[3] = 3
    tp.letter.r[4] = 4
    tp.letter.r[5] = 5
    tp.letter.r[6] = 13
    tp.letter.s = { }
    tp.letter.s[1] = 1
    tp.letter.s[2] = 12
    tp.letter.s[3] = 13
    tp.letter.s[4] = 7
    tp.letter["t"] = { }
    tp.letter.t[1] = 1
    tp.letter.t[2] = 8
    tp.letter.t[3] = 9
    tp.letter["u"] = { }
    tp.letter.u[1] = 2
    tp.letter.u[2] = 3
    tp.letter.u[3] = 5
    tp.letter.u[4] = 6
    tp.letter.u[5] = 7
    tp.letter.v = { }
    tp.letter.v[1] = 2
    tp.letter.v[2] = 5
    tp.letter.v[3] = 10
    tp.letter.v[4] = 11
    tp.letter["w"] = { }
    tp.letter.w[1] = 2
    tp.letter.w[2] = 3
    tp.letter.w[3] = 5
    tp.letter.w[4] = 6
    tp.letter.w[5] = 10
    tp.letter.w[6] = 13
    tp.letter.x = { }
    tp.letter.x[1] = 10
    tp.letter.x[2] = 11
    tp.letter.x[3] = 12
    tp.letter.x[4] = 13
    tp.letter.y = { }
    tp.letter.y[1] = 9
    tp.letter.y[2] = 11
    tp.letter.y[3] = 12
    tp.letter.z = { }
    tp.letter.z[1] = 1
    tp.letter.z[2] = 7
    tp.letter.z[3] = 10
    tp.letter.z[4] = 11
    tp.window_offset = { }
    tp.window_offset[1] = { }
    tp.window_offset[1].x = 198
    tp.window_offset[1].y = 211
    tp.window_offset[2] = { }
    tp.window_offset[2].x = 214
    tp.window_offset[2].y = 211
    tp.window_offset[3] = { }
    tp.window_offset[3].x = 320
    tp.window_offset[3].y = 256
    tp.window_offset[4] = { }
    tp.window_offset[4].x = 336
    tp.window_offset[4].y = 256
    tp.window_offset[5] = { }
    tp.window_offset[5].x = 352
    tp.window_offset[5].y = 256
    tp.window_offset[6] = { }
    tp.window_offset[6].x = 453
    tp.window_offset[6].y = 211
    tp.window_offset[7] = { }
    tp.window_offset[7].x = 469
    tp.window_offset[7].y = 211
    tp.daystr = { }
    tp.daystr[1] = "/tptx189/"
    tp.daystr[2] = "/tptx190/"
    tp.daystr[3] = "/tptx191/"
    tp.daystr[4] = "/tptx192/"
    tp.daystr[5] = "/tptx193/"
    tp.daystr[6] = "/tptx194/"
    tp.daystr[7] = "/tptx195/"
end
tp.enter = function(arg1) -- line 613
    NewObjectState(tp_tckcu, OBJSTATE_OVERLAY, "print_ticket.bm")
    tp.stub:set_object_state("tp_stub.cos")
    tp.init_number_tables()
    if not mannys_hands then
        mannys_hands = Actor:create(nil, nil, nil, "/sytx188/")
    end
    mannys_hands:set_costume("tp_interface.cos")
    mannys_hands:put_in_set(tp)
    mannys_hands:moveto(-0.029, 0.002, 0)
    mannys_hands:setrot(0, 180, 0)
    tp.current_button = tp.RACE
    tp.text_color_bright = MakeColor(255, 150, 0)
    tp.text_color_dim = MakeColor(80, 80, 0)
    week_field = Led:create("week")
    week_field:add_digit(tp.window_offset[1].x, tp.window_offset[1].y)
    week_field:add_digit(tp.window_offset[2].x, tp.window_offset[2].y)
    week_field:display_number(1)
    tp.week = 1
    cn.ticket.week = 1
    day_field = Led:create("day")
    day_field:add_digit(tp.window_offset[3].x, tp.window_offset[3].y)
    day_field:add_digit(tp.window_offset[4].x, tp.window_offset[4].y)
    day_field:add_digit(tp.window_offset[5].x, tp.window_offset[5].y)
    day_field:display_str(tp.daystr[1])
    tp.day = 1
    cn.ticket.day = 1
    race_field = Led:create("race")
    race_field:add_digit(tp.window_offset[6].x, tp.window_offset[6].y)
    race_field:add_digit(tp.window_offset[7].x, tp.window_offset[7].y)
    race_field:display_number(1)
    tp.race = 1
    cn.ticket.race = 1
end
tp.exit = function(arg1) -- line 656
    mannys_hands:free()
    week_field:destroy()
    race_field:destroy()
    day_field:destroy()
end
tp.switch_to_set = function(arg1) -- line 664
    if IsMoviePlaying() then
        StopMovie()
    else
        system.loopingMovie = nil
    end
    system.lastSet = system.currentSet
    LockSet(system.currentSet.setFile)
    inventory_save_set = system.currentSet
    arg1:CommonEnter()
    MakeCurrentSet(arg1.setFile)
    arg1:enter()
    system.currentSet = tp
    if system.ambientLight then
        SetAmbientLight(system.ambientLight)
    end
end
tp.return_to_set = function(arg1, arg2) -- line 685
    START_CUT_SCENE()
    if arg2 then
        tp.stub:play_chore(0)
        tp.stub:wait_for_chore()
    end
    END_CUT_SCENE()
    tp:exit()
    system.currentSet = inventory_save_set
    UnLockSet(inventory_save_set.setFile)
    MakeCurrentSet(inventory_save_set.setFile)
    system.buttonHandler = inventory_save_handler
    if system.loopingMovie and type(system.loopingMovie) == "table" then
        play_movie_looping(system.loopingMovie.name, system.loopingMovie.x, system.loopingMovie.y)
    end
    if arg2 then
        START_CUT_SCENE()
        put_away_held_item()
        shrinkBoxesEnabled = FALSE
        open_inventory(TRUE, TRUE)
        manny.is_holding = cn.ticket
        start_script(close_inventory)
        if GlobalShrinkEnabled then
            shrinkBoxesEnabled = TRUE
            shrink_box_toggle()
        end
        END_CUT_SCENE()
    end
end
tpButtonHandler = function(arg1, arg2, arg3) -- line 724
    shiftKeyDown = GetControlState(LSHIFTKEY) or GetControlState(RSHIFTKEY)
    altKeyDown = GetControlState(LALTKEY) or GetControlState(RALTKEY)
    controlKeyDown = GetControlState(LCONTROLKEY) or GetControlState(RCONTROLKEY)
    if control_map.OVERRIDE[arg1] and arg2 then
        single_start_script(tp.close_printer)
    elseif control_map.TURN_RIGHT[arg1] and arg2 and cutSceneLevel <= 0 then
        single_start_script(tp.move_right)
    elseif control_map.TURN_LEFT[arg1] and arg2 and cutSceneLevel <= 0 then
        single_start_script(tp.move_left)
    elseif control_map.LOOK_AT[arg1] and arg2 and cutSceneLevel <= 0 or (control_map.USE[arg1] and arg2 and cutSceneLevel <= 0) then
        single_start_script(cn.printer.lookAt, cn.printer)
    elseif control_map.MOVE_BACKWARD[arg1] and arg2 and cutSceneLevel <= 0 then
        single_start_script(tp.push_down)
    elseif control_map.MOVE_FORWARD[arg1] and arg2 and cutSceneLevel <= 0 then
        single_start_script(tp.push_up)
    else
        CommonButtonHandler(arg1, arg2, arg3)
    end
end
tp.move_left = function() -- line 747
    local local1
    while get_generic_control_state("TURN_LEFT") do
        if tp.current_button == tp.RACE then
            tp.current_button = tp.DAY
            mannys_hands:moveto(-0.015, 0.0020000001, 0)
        elseif tp.current_button == tp.DAY then
            tp.current_button = tp.WEEK
            mannys_hands:moveto(-0.001, 0.0020000001, 0)
        elseif tp.current_button == tp.WEEK then
            tp.current_button = tp.PRINT
            mannys_hands:moveto(-0.015, -0.02, 0)
        elseif tp.current_button == tp.PRINT then
            tp.current_button = tp.RACE
            mannys_hands:moveto(-0.028999999, 0.0020000001, 0)
        end
        mannys_hands:wait_for_actor()
        local1 = 0
        while local1 < 500 and get_generic_control_state("TURN_LEFT") do
            break_here()
            local1 = local1 + system.frameTime
        end
    end
end
tp.move_right = function() -- line 777
    local local1
    while get_generic_control_state("TURN_RIGHT") do
        if tp.current_button == tp.WEEK then
            tp.current_button = tp.DAY
            mannys_hands:moveto(-0.015, 0.0020000001, 0)
        elseif tp.current_button == tp.DAY then
            tp.current_button = tp.RACE
            mannys_hands:moveto(-0.028999999, 0.0020000001, 0)
        elseif tp.current_button == tp.RACE then
            tp.current_button = tp.PRINT
            mannys_hands:moveto(-0.015, -0.02, 0)
        elseif tp.current_button == tp.PRINT then
            tp.current_button = tp.WEEK
            mannys_hands:moveto(-0.001, 0.0020000001, 0)
        end
        mannys_hands:wait_for_actor()
        local1 = 0
        while local1 < 500 and get_generic_control_state("TURN_RIGHT") do
            break_here()
            local1 = local1 + system.frameTime
        end
    end
end
tp.close_printer = function() -- line 807
    tp.return_to_set()
end
tp.push_up = function() -- line 811
    START_CUT_SCENE()
    mannys_hands:play_chore(tp_interface_press_up)
    sleep_for(100)
    if tp.current_button == tp.RACE then
        tp.race = tp.race + 1
        if tp.race > 15 then
            tp.race = 1
        end
        cn.ticket.race = tp.race
        start_sfx("prntBtn1.wav", 100, 80)
        race_field:display_number(tp.race)
    elseif tp.current_button == tp.DAY then
        tp.day = tp.day + 1
        if tp.day > 7 then
            tp.day = 1
        end
        cn.ticket.day = tp.day
        start_sfx("prntBtn2.wav", 100, 80)
        day_field:display_str(tp.daystr[tp.day])
    elseif tp.current_button == tp.WEEK then
        tp.week = tp.week + 1
        if tp.week > 32 then
            tp.week = 1
        end
        cn.ticket.week = tp.week
        start_sfx("prntBtn3.wav", 100, 80)
        week_field:display_number(tp.week)
    elseif tp.current_button == tp.PRINT then
        start_sfx("prntPrnt.wav")
        cn.ticket:get()
        tp:return_to_set(TRUE)
    end
    mannys_hands:wait_for_chore()
    END_CUT_SCENE()
end
tp.push_down = function() -- line 853
    START_CUT_SCENE()
    if tp.current_button == tp.PRINT then
        mannys_hands:play_chore(tp_interface_press_up)
    else
        mannys_hands:play_chore(tp_interface_press_down)
    end
    sleep_for(100)
    if tp.current_button == tp.RACE then
        tp.race = tp.race - 1
        if tp.race < 1 then
            tp.race = 15
        end
        cn.ticket.race = tp.race
        start_sfx("prntBtn1.wav", 100, 80)
        race_field:display_number(tp.race)
    elseif tp.current_button == tp.DAY then
        tp.day = tp.day - 1
        if tp.day < 1 then
            tp.day = 7
        end
        cn.ticket.day = tp.day
        start_sfx("prntBtn2.wav", 100, 80)
        day_field:display_str(tp.daystr[tp.day])
    elseif tp.current_button == tp.WEEK then
        tp.week = tp.week - 1
        if tp.week < 1 then
            tp.week = 32
        end
        cn.ticket.week = tp.week
        start_sfx("prntBtn3.wav", 100, 80)
        week_field:display_number(tp.week)
    elseif tp.current_button == tp.PRINT then
        start_sfx("prntPrnt.wav")
        cn.ticket:get()
        tp:return_to_set(TRUE)
    end
    mannys_hands:wait_for_chore()
    END_CUT_SCENE()
end
tp.stub = Object:create(tp, "", 0, 0, 0, { range = 0 })
tp_stub_Chore0 = 0
tr_bulges_no_bulges = 0
tr_bulges_bulge1 = 1
tr_bulges_bulge2 = 2
tr_bulges_bulge3 = 3
tr_bulges_bulge4 = 4
tree_top_left_pump_on = 0
tree_top_left_pump_off = 1
tree_btm_left_pump_on = 2
tree_btm_left_pump_off = 3
tree_top_rt_pump_on = 4
tree_top_rt_pump_off = 5
tree_btm_rt_pump_on = 6
tree_btm_rt_pump_off = 7
tree_abnormal_gl = 8
tree_abnormal_no_gl = 9
tree_xab_gl = 10
tree_xab_no_gl = 11
tree_normal = 12
tree_normal_gl = 13
tree_start_spin_gl = 14
tree_start_spin_no_gl = 15
tree_stop_spin_gl = 16
tree_stop_spin_no_gl = 17
tree_hide_gl = 18
tree_no_spin_shake = 19
tr_lever_switch_up = 0
tr_lever_switch_down = 1
tr_rubble_Chore0 = 0
CheckFirstTime("ts.lua")
ts = Set:create("ts.set", "track stairs", { ts_crdws = 0, ts_overhead = 1 })
ts.fade_crowd = function() -- line 18
    fade_sfx("tkCrowd.IMU", 1000, 50)
end
ts.enter = function(arg1) -- line 22
    start_script(play_movie_looping, "ts_crowd.snm", 88, 0)
    start_script(tb.off_screen_kittys)
    start_sfx("tkCrowd.IMU", IM_LOW_PRIORITY, 0)
    start_script(ts.fade_crowd)
    ts:add_ambient_sfx({ "tkCheer1.wav", "tkCheer2.wav", "tkCheer3.wav", "tkCheer4.wav" }, { min_delay = 6000, max_delay = 10000, min_volume = 80, max_volume = 127 })
end
ts.exit = function(arg1) -- line 31
    StopMovie()
    stop_script(ts.fade_crowd)
    stop_script(tb.off_screen_kittys)
    stop_sound("tkCrowd.IMU")
end
ts.crowd1 = Object:create(ts, "/tstx001/crowd", 3.12817, -0.0023149999, 0.12, { range = 1.75 })
ts.crowd1.use_pnt_x = 1.3667001
ts.crowd1.use_pnt_y = 0.20277999
ts.crowd1.use_pnt_z = 0
ts.crowd1.use_rot_x = 0
ts.crowd1.use_rot_y = -98.857399
ts.crowd1.use_rot_z = 0
ts.crowd1.lookAt = function(arg1) -- line 51
    soft_script()
    manny:say_line("/tsma002/")
    if not ts.grossed then
        manny:wait_for_message()
        manny:say_line("/tsma003/")
        manny:wait_for_message()
        manny:say_line("/tsma004/")
        manny:shrug_gesture()
    end
end
ts.crowd1.run_from = function(arg1) -- line 63
    START_CUT_SCENE()
    manny:head_look_at(nil)
    start_script(manny.walkto, manny, arg1)
    arg1:lookAt()
    manny:wait_for_message()
    END_CUT_SCENE()
    if not ts.grossed then
        ts.grossed = TRUE
        manny:say_line("/tsma005/")
        manny:twist_head_gesture()
    end
end
ts.crowd1.walkOut = function(arg1) -- line 77
    arg1:run_from()
end
ts.crowd2 = Object:create(ts, "/tstx006/crowd", 3.12817, -0.0023149999, 0.12, { range = 1.75 })
ts.crowd2.use_pnt_x = 1.34399
ts.crowd2.use_pnt_y = -0.224216
ts.crowd2.use_pnt_z = 0
ts.crowd2.use_rot_x = 0
ts.crowd2.use_rot_y = -84.819099
ts.crowd2.use_rot_z = 0
ts.crowd2.parent = ts.crowd1
ts.tb_door = Object:create(ts, "/tstx007/door", -0.41182801, -0.0023149999, 0.89999998, { range = 0 })
ts.tb_door.use_pnt_x = 0.0879535
ts.tb_door.use_pnt_y = -0.18852299
ts.tb_door.use_pnt_z = 0.39476901
ts.tb_door.use_rot_x = 0
ts.tb_door.use_rot_y = 95.641197
ts.tb_door.use_rot_z = 0
ts.tb_door.out_pnt_x = -0.30000001
ts.tb_door.out_pnt_y = -0.235337
ts.tb_door.out_pnt_z = 0.54900002
ts.tb_door.out_rot_x = 0
ts.tb_door.out_rot_y = 96.262001
ts.tb_door.out_rot_z = 0
ts.tb_door.walkOut = function(arg1) -- line 112
    if not tb.seen_intro then
        tb.needs_intro = TRUE
    end
    tb:come_out_door(tb.ts_door)
end
ts.tx_door = Object:create(ts, "/tstx008/stairs", 1.12817, 1.29769, 0.12, { range = 0.84792501 })
ts.tx_door.use_pnt_x = 1.12906
ts.tx_door.use_pnt_y = 0.56028402
ts.tx_door.use_pnt_z = 0
ts.tx_door.use_rot_x = 0
ts.tx_door.use_rot_y = -8.9064798
ts.tx_door.use_rot_z = 0
ts.tx_door.lookAt = function(arg1) -- line 127
    manny:say_line("/tsma009/")
end
ts.tx_door.walkOut = function(arg1) -- line 131
    tx:come_out_door(ts.tx_door)
end
ts.kh_door = Object:create(ts, "/tstx010/hallway", 0.87589401, -1.41167, 0.40000001, { range = 0.62 })
ts.kh_door.use_pnt_x = 1.02468
ts.kh_door.use_pnt_y = -1.0228601
ts.kh_door.use_pnt_z = 0
ts.kh_door.use_rot_x = 0
ts.kh_door.use_rot_y = -195.175
ts.kh_door.use_rot_z = 0
ts.kh_door.out_pnt_x = 0.94876403
ts.kh_door.out_pnt_y = -1.30316
ts.kh_door.out_pnt_z = 0
ts.kh_door.out_rot_x = 0
ts.kh_door.out_rot_y = -195.175
ts.kh_door.out_rot_z = 0
ts.kh_door.walkOut = function(arg1) -- line 151
    kh:come_out_door(kh.ts_door)
end
ts.kh_door.lookAt = function(arg1) -- line 155
    manny:say_line("/tsma011/")
end
tu_canister_pass_through = 0
tu_canister_stop = 1
tu_canister_stop_loop = 2
tu_canister_go = 3
tu_deadbolt_unlock = 0
tu_deadbolt_lock = 1
tu_deadbolt_here = 2
tu_deadbolt_gone = 3
tu_deadbolt_here_unlocked = 4
tu_fans_spin = 0
tu_fans_spin_door_open = 1
tu_fans_static = 2
tu_fire_sparks = 0
CheckFirstTime("tu.lua")
dofile("ma_operate_bolt.lua")
dofile("brennis_fix_idle.lua")
dofile("brennis_on_fire.lua")
dofile("tu_fans.lua")
dofile("tu_switcher_door.lua")
dofile("tu_deadbolt.lua")
dofile("tu_switcher.lua")
dofile("tu_canister.lua")
dofile("tu_fire.lua")
dofile("ma_tube_action.lua")
tu = Set:create("tu.set", "Tube Room", { tu_dorcu = 0, tu_dorcu2 = 0, tu_redcu = 1, tu_swiha = 2, tu_swiha2 = 2, tu_swiha3 = 2, tu_tubws = 3, tu_tubws2 = 3, tu_swicu = 4, overhead = 5, tu_swopn = 6 })
tu.shrinkable = 0.029
tu.chem_state = "no chem"
tu.door_state = "closed"
tu.fan_volume = 30
tu.switcher_volume = 40
tu.set_up_switcher_door = function(arg1) -- line 32
    local local1
    local1 = tu.switcher_door.hObjectState
    tu.switcher_door.interest_actor:put_in_set(tu)
    tu.switcher_door:complete_chore(tu_switcher_door_gone, "tu_switcher_door.cos")
    ForceRefresh()
    if tu.door_state == "open" then
        tu.switcher_door.hObjectState = tu:add_object_state(tu_dorcu, "TU_0_DORCU_door_open.bm", "tu_dor_door_open.zbm", OBJSTATE_STATE)
        tu.switcher_door:complete_chore(tu_switcher_door_open, "tu_switcher_door.cos")
    elseif tu.door_state == "closed" then
        tu.switcher_door.hObjectState = tu:add_object_state(tu_dorcu, "TU_0_DORCU_door_close.bm", "tu_dor_door_close.zbm", OBJSTATE_STATE)
        tu.switcher_door:complete_chore(tu_switcher_door_closed, "tu_switcher_door.cos")
    else
        tu.switcher_door.hObjectState = tu:add_object_state(tu_dorcu, "TU_0_DORCU_door_ajar.bm", "TU_0_DORCU_door_ajar.zbm", OBJSTATE_STATE)
        tu.switcher_door:complete_chore(tu_switcher_door_ajar, "tu_switcher_door.cos")
    end
    SendObjectToBack(tu.switcher_door.hObjectState)
    if local1 then
        FreeObjectState(local1)
    end
    SendObjectToFront(tu.open_bolt.hObjectState)
end
tu.set_up_actors = function(arg1) -- line 57
    if tu.chem_state == "both chem" then
        brennis:default()
        brennis:put_in_set(tu)
        brennis:setpos(0.27442, -0.4735, 0)
        brennis:setrot(0, 31.834, 0)
        brennis:set_mumble_chore(brennis_fix_idle_mumble)
        brennis:set_talk_chore(1, brennis_fix_idle_stop_talk)
        brennis:set_talk_chore(2, brennis_fix_idle_a)
        brennis:set_talk_chore(3, brennis_fix_idle_c)
        brennis:set_talk_chore(4, brennis_fix_idle_e)
        brennis:set_talk_chore(5, brennis_fix_idle_f)
        brennis:set_talk_chore(6, brennis_fix_idle_l)
        brennis:set_talk_chore(7, brennis_fix_idle_m)
        brennis:set_talk_chore(8, brennis_fix_idle_o)
        brennis:set_talk_chore(9, brennis_fix_idle_t)
        brennis:set_talk_chore(10, brennis_fix_idle_u)
        single_start_script(brennis.idle, brennis)
        if not brennis.burnt then
            preload_sfx("brSpark.WAV")
            preload_sfx("brExplo.WAV")
            preload_sfx("brFire.IMU")
        end
    else
        brennis:put_in_set(nil)
    end
    tu.extinguisher:set_object_state("extinguisher.cos")
    if tu.extinguisher.touchable then
        tu.extinguisher.interest_actor:play_chore(0)
    else
        tu.extinguisher.interest_actor:play_chore(1)
    end
end
tu.set_up_states = function(arg1) -- line 96
    if tu.chem_state == "both chem" then
        MakeSectorActive("switcher_box1", FALSE)
        MakeSectorActive("switcher_box2", FALSE)
        MakeSectorActive("switcher_box3", FALSE)
        tu.door_wheel:make_untouchable()
        tu.closed_bolt:make_untouchable()
        tu.open_bolt:make_touchable()
        tu.open_wheel:make_touchable()
        tu.brennis_obj:make_touchable()
        tu.door_state = "open"
    else
        tu.brennis_obj:make_untouchable()
        if tu.door_state == "open" then
            MakeSectorActive("switcher_box1", TRUE)
            MakeSectorActive("switcher_box2", TRUE)
            MakeSectorActive("switcher_box3", TRUE)
            tu.door_wheel:make_untouchable()
            tu.closed_bolt:make_untouchable()
            tu.open_bolt:make_touchable()
            tu.open_wheel:make_touchable()
        else
            MakeSectorActive("switcher_box1", NIL)
            MakeSectorActive("switcher_box2", NIL)
            MakeSectorActive("switcher_box3", NIL)
            tu.door_wheel:make_touchable()
            tu.closed_bolt:make_touchable()
            tu.open_bolt:make_untouchable()
            tu.open_wheel:make_untouchable()
        end
    end
    tu.fans:make_untouchable()
    tu.fans.interest_actor:stop_chore()
    if tu.chem_state == "both chem" then
        tu.fans.interest_actor:play_chore(tu_fans_static, "tu_fans.cos")
    else
        if tu.door_state == "open" then
            tu.fans.interest_actor:play_chore_looping(tu_fans_spin_door_open, "tu_fans.cos")
        else
            tu.fans.interest_actor:play_chore_looping(tu_fans_spin, "tu_fans.cos")
        end
        single_start_sfx("tuFanLp.IMU", nil, tu.fan_volume)
    end
    tu.switcher.interest_actor:stop_chore()
    if tu.chem_state == "both chem" then
        stop_sound("tuSwtch.IMU")
        if tu.door_state == "open" then
            tu.switcher.interest_actor:play_chore(tu_switcher_still_door_open, "tu_switcher.cos")
        else
            tu.switcher.interest_actor:play_chore(tu_switcher_still, "tu_switcher.cos")
        end
    else
        if tu.door_state == "open" then
            tu.switcher.interest_actor:play_chore_looping(tu_switcher_switch_door_open, "tu_switcher.cos")
        else
            tu.switcher.interest_actor:play_chore_looping(tu_switcher_switch, "tu_switcher.cos")
        end
        single_start_sfx("tuSwtch.IMU", nil, tu.switcher_volume)
    end
    tu.switcher_door:set_object_state("tu_switcher_door.cos")
    tu.switcher_door.hObjectState = nil
    tu:set_up_switcher_door()
    if tu.door_state == "open" then
        MakeSectorActive("open_box_1", TRUE)
        MakeSectorActive("open_box_2", TRUE)
        MakeSectorActive("open_box_23", TRUE)
        MakeSectorActive("open_box_3", TRUE)
        MakeSectorActive("open_box_4", TRUE)
        MakeSectorActive("closed_box_11", FALSE)
        MakeSectorActive("closed_box_112", FALSE)
        MakeSectorActive("closed_box_1", FALSE)
        MakeSectorActive("closed_box_2", FALSE)
        MakeSectorActive("closed_box_3", FALSE)
    else
        MakeSectorActive("open_box_1", FALSE)
        MakeSectorActive("open_box_2", FALSE)
        MakeSectorActive("open_box_3", FALSE)
        MakeSectorActive("open_box_4", FALSE)
        MakeSectorActive("closed_box_1", TRUE)
        MakeSectorActive("closed_box_2", TRUE)
        MakeSectorActive("closed_box_3", TRUE)
    end
    if tu.door_state == "open" then
        if tu.open_bolt:is_locked() then
            tu.open_bolt:play_chore(tu_deadbolt_here)
        else
            tu.open_bolt:play_chore(tu_deadbolt_here_unlocked)
        end
    end
end
tu.set_up_object_states = function(arg1) -- line 202
    tu:add_object_state(tu_dorcu, "tu_door_fan1.bm", nil, OBJSTATE_UNDERLAY)
    tu:add_object_state(tu_dorcu, "tu_door_fan2.bm", nil, OBJSTATE_UNDERLAY)
    tu:add_object_state(tu_tubws, "tu_fan_test.bm", nil, OBJSTATE_UNDERLAY)
    tu:add_object_state(tu_tubws, "tu_floor_fans1.bm", nil, OBJSTATE_UNDERLAY)
    tu:add_object_state(tu_tubws, "tu_floor_fans2.bm", nil, OBJSTATE_UNDERLAY)
    tu:add_object_state(tu_swopn, "tu_swi_fans.bm", nil, OBJSTATE_UNDERLAY)
    tu:add_object_state(tu_swopn, "tu_swi_fans2.bm", nil, OBJSTATE_UNDERLAY)
    tu:add_object_state(tu_swiha, "tu_swi_fans.bm", nil, OBJSTATE_UNDERLAY)
    tu:add_object_state(tu_swiha, "tu_swi_fans2.bm", nil, OBJSTATE_UNDERLAY)
    tu.fans:set_object_state("tu_fans.cos")
    tu:add_object_state(tu_tubws, "tu_tub_switcher.bm", nil, OBJSTATE_UNDERLAY)
    tu:add_object_state(tu_dorcu, "tu_dor_switcher.bm", nil, OBJSTATE_UNDERLAY)
    tu:add_object_state(tu_dorcu, "tu_dor_switcher_dopen.bm", nil, OBJSTATE_UNDERLAY)
    tu.switcher:set_object_state("tu_switcher.cos")
    tu.open_bolt.hObjectState = tu:add_object_state(tu_dorcu, "tu_turn_bolt.bm", "tu_turn_bolt.zbm", OBJSTATE_STATE)
    tu.open_bolt:set_object_state("tu_deadbolt.cos")
    tu:add_object_state(tu_tubws, "tu_3_bolt.bm", nil, OBJSTATE_UNDERLAY)
    tu:add_object_state(tu_redcu, "tu_can_go.bm", nil, OBJSTATE_UNDERLAY)
    tu:add_object_state(tu_redcu, "tu_can_stop.bm", nil, OBJSTATE_UNDERLAY)
    tu.red_tube:set_object_state("tu_canister.cos")
    tu:add_object_state(tu_tubws, "TU_3_TUBWS_doropn.bm", nil, OBJSTATE_UNDERLAY)
    if not brennis.burnt then
        LoadCostume("brennis_on_fire.cos")
    end
end
tu.send_balloon = function(arg1, arg2) -- line 240
    local local1 = arg2.chem
    START_CUT_SCENE()
    ExpireText()
    arg2.source_balloon.owner = clown
    arg2:free()
    arg2.owner = pk
    cur_puzzle_state[4] = TRUE
    tu.closed_bolt:unlock()
    tu.open_bolt:unlock()
    brennis.seen_working_this_time = FALSE
    eva.talked_server = FALSE
    set_override(tu.skip_send_balloon, tu)
    ImSetState(STATE_NULL)
    break_here()
    if not tu.sent_balloon then
        tu.sent_balloon = TRUE
    end
    stop_sound("tuSwtch.IMU")
    if tu.chem_state == "no chem" then
        if local1 == 1 then
            tu.chem_state = "chem 1"
            RunFullscreenMovie("swtchuns.snm")
        else
            tu.chem_state = "chem 2"
            RunFullscreenMovie("swtchuns.snm")
        end
    elseif tu.chem_state == "chem 1" then
        if local1 == 1 then
            RunFullscreenMovie("swtchuns.snm")
        else
            tu.chem_state = "both chem"
            RunFullscreenMovie("swtchsuc.snm")
        end
    elseif tu.chem_state == "chem 2" then
        if local1 == 1 then
            tu.chem_state = "both chem"
            RunFullscreenMovie("swtchsuc.snm")
        else
            RunFullscreenMovie("swtchuns.snm")
        end
    elseif tu.chem_state == "both chem" then
    end
    wait_for_message()
    sleep_for(500)
    stop_sound("tuSwtch.IMU")
    ImSetState(stateMO)
    if tu.chem_state == "both chem" then
        start_sfx("tusqueal.IMU")
        sleep_for(1500)
        if not tu.ever_jammed then
            tu.ever_jammed = TRUE
            manny:say_line("/tuma048/")
        else
            manny:say_line("/tuma049/")
        end
        manny:wait_for_message()
        fade_sfx("tusqueal.IMU", 1500)
    end
    END_CUT_SCENE()
end
tu.skip_send_balloon = function(arg1) -- line 322
    kill_override()
    stop_sound("tusqueal.IMU")
    tu.ever_jammed = TRUE
end
tu.send_bread = function(arg1, arg2) -- line 329
    START_CUT_SCENE()
    ExpireText()
    tu.closed_bolt:unlock()
    tu.open_bolt:unlock()
    brennis.seen_working_this_time = FALSE
    eva.talked_server = FALSE
    ImSetState(STATE_NULL)
    break_here()
    stop_sound("tuSwtch.IMU")
    RunFullscreenMovie("swtchbrd.snm")
    wait_for_message()
    sleep_for(500)
    stop_sound("tuSwtch.IMU")
    ImSetState(stateMO)
    END_CUT_SCENE()
end
tu.send_canister_through = function(arg1) -- line 360
    sleep_for(rndint(150, 1000))
    start_sfx("tubCnPas.WAV")
    sleep_for(100)
    tu.red_tube:play_chore(tu_canister_pass_through)
end
brennis.burn = function(arg1, arg2) -- line 367
    local local1, local2, local3
    brennis.burnt = TRUE
    START_CUT_SCENE()
    cameraman_disabled = TRUE
    stop_script(brennis.idle)
    stop_script(brennis.stop_idle)
    if not arg2 then
        tu:add_object_state(tu_swopn, "tu_sparks.bm", nil, OBJSTATE_OVERLAY, TRUE)
        tu.flames:set_object_state("tu_fire.cos")
        tu:current_setup(tu_swopn)
        brennis:set_costume("brennis_on_fire.cos")
        brennis:set_mumble_chore(brennis_on_fire_mumble)
        brennis:set_talk_chore(1, brennis_on_fire_stop_talk)
        brennis:set_talk_chore(2, brennis_on_fire_a)
        brennis:set_talk_chore(3, brennis_on_fire_c)
        brennis:set_talk_chore(4, brennis_on_fire_e)
        brennis:set_talk_chore(5, brennis_on_fire_f)
        brennis:set_talk_chore(6, brennis_on_fire_l)
        brennis:set_talk_chore(7, brennis_on_fire_m)
        brennis:set_talk_chore(8, brennis_on_fire_o)
        brennis:set_talk_chore(9, brennis_on_fire_t)
        brennis:set_talk_chore(10, brennis_on_fire_u)
        brennis:play_chore(brennis_on_fire_on_fire, "brennis_on_fire.cos")
        brennis:wait_for_chore(brennis_on_fire_on_fire, "brennis_on_fire.cos")
    else
        brennis:stop_chore()
        brennis:set_costume("brennis_on_fire.cos")
        brennis:set_mumble_chore(brennis_on_fire_mumble)
        brennis:set_talk_chore(1, brennis_on_fire_stop_talk)
        brennis:set_talk_chore(2, brennis_on_fire_a)
        brennis:set_talk_chore(3, brennis_on_fire_c)
        brennis:set_talk_chore(4, brennis_on_fire_e)
        brennis:set_talk_chore(5, brennis_on_fire_f)
        brennis:set_talk_chore(6, brennis_on_fire_l)
        brennis:set_talk_chore(7, brennis_on_fire_m)
        brennis:set_talk_chore(8, brennis_on_fire_o)
        brennis:set_talk_chore(9, brennis_on_fire_t)
        brennis:set_talk_chore(10, brennis_on_fire_u)
        brennis:say_line("/tubs050/")
        manny:face_entity(tu.brennis_obj)
    end
    brennis:play_chore(brennis_on_fire_pat_flames, "brennis_on_fire.cos")
    start_sfx("brSpark.WAV")
    tu.flames:play_chore(tu_fire_sparks, "tu_fire.cos")
    sleep_for(200)
    start_sfx("brExplo.WAV")
    tu.flames.interest_actor:wait_for_chore(tu_fire_sparks, "tu_fire.cos")
    if not arg2 then
        brennis:say_line("/tubs050/")
    end
    sleep_for(150)
    start_sfx("brFire.IMU")
    brennis:wait_for_message()
    fade_sfx("brFire.IMU", 1500)
    if bd.extinguisher.owner ~= manny then
        tu:current_setup(tu_tubws)
        if not arg2 then
            manny:setpos(1.44547, -0.40514901, 0)
            manny:setrot(0, 32.306999, 0)
            manny:head_look_at(nil)
        end
        manny:runto(tu.extinguisher.use_pnt_x, tu.extinguisher.use_pnt_y, tu.extinguisher.use_pnt_z, tu.extinguisher.use_rot_x, tu.extinguisher.use_rot_y, tu.extinguisher.use_rot_z)
        manny:wait_for_actor()
        manny:set_time_scale(3)
        start_sfx("tuGetExt.wav")
        tu.extinguisher:pickUp()
        manny:set_time_scale(1)
        start_script(manny.runto, manny, 1.44547, -0.40514901, 0)
        sleep_for(1000)
        tu:current_setup(tu_dorcu)
        manny:put_at_object(tu.brennis_obj)
        manny:set_run(FALSE)
    else
        tu:current_setup(0)
        if proximity(manny.hActor, tu.brennis_obj.use_pnt_x, tu.brennis_obj.use_pnt_y, tu.brennis_obj.use_pnt_z) > 0.1 then
            manny:runto(tu.brennis_obj.use_pnt_x, tu.brennis_obj.use_pnt_y, tu.brennis_obj.use_pnt_z)
            manny:wait_for_actor()
        else
            manny:put_at_object(tu.brennis_obj)
            sleep_for(400)
        end
        manny:head_look_at(nil)
        if manny.is_holding ~= bd.extinguisher then
            manny:setrot(0, 172.51601, 0, TRUE)
            manny:pull_out_item(bd.extinguisher)
        end
        manny:setrot(tu.brennis_obj.use_rot_x, tu.brennis_obj.use_rot_y, tu.brennis_obj.use_rot_z, TRUE)
    end
    brennis:play_chore(brennis_on_fire_stop_manny, "brennis_on_fire.cos")
    brennis:say_line("/tubs051/")
    brennis:wait_for_message()
    brennis:say_line("/tubs052/")
    brennis:wait_for_message()
    brennis:say_line("/tubs053/")
    brennis:wait_for_message()
    local1, local2, local3 = GetActorNodeLocation(system.currentActor.hActor, 12)
    manny:head_look_at_point(local1, local2, local3)
    brennis:say_line("/tubs054/")
    brennis:wait_for_message()
    manny:head_look_at(nil)
    manny:say_line("/tuma055/")
    manny:wait_for_message()
    brennis:say_line("/tubs056/")
    sleep_for(500)
    brennis:play_chore(brennis_on_fire_turn_around, "brennis_on_fire.cos")
    brennis:wait_for_message()
    manny:stop_chore(ms_hold, "ms.cos")
    manny:play_chore(ms_putback_big, "ms.cos")
    manny:wait_for_chore(ms_putback_big, "ms.cos")
    manny:stop_chore(ms_putback_big, "ms.cos")
    manny:stop_chore(ms_activate_extinguisher, "ms.cos")
    manny:play_chore(ms_putback_done, "ms.cos")
    manny:wait_for_chore(ms_putback_done, "ms.cos")
    manny:stop_chore(ms_putback_done, "ms.cos")
    manny.is_holding = nil
    brennis:wait_for_chore(brennis_on_fire_turn_around, "brennis_on_fire.cos")
    brennis:set_costume("brennis_fix_idle.cos")
    brennis:set_mumble_chore(brennis_fix_idle_mumble)
    brennis:set_talk_chore(1, brennis_fix_idle_stop_talk)
    brennis:set_talk_chore(2, brennis_fix_idle_a)
    brennis:set_talk_chore(3, brennis_fix_idle_c)
    brennis:set_talk_chore(4, brennis_fix_idle_e)
    brennis:set_talk_chore(5, brennis_fix_idle_f)
    brennis:set_talk_chore(6, brennis_fix_idle_l)
    brennis:set_talk_chore(7, brennis_fix_idle_m)
    brennis:set_talk_chore(8, brennis_fix_idle_o)
    brennis:set_talk_chore(9, brennis_fix_idle_t)
    brennis:set_talk_chore(10, brennis_fix_idle_u)
    tu:current_setup(tu_dorcu)
    cameraman_disabled = FALSE
    END_CUT_SCENE()
    start_script(brennis.idle, brennis)
end
brennis.leave = function(arg1) -- line 528
    START_CUT_SCENE()
    tu.chem_state = "no chem"
    tu:current_setup(tu_dorcu)
    brennis:stop_idle()
    tu:current_setup(tu_redcu)
    manny:set_visibility(FALSE)
    brennis:set_costume("br_grab_card.cos")
    brennis:setpos(0, 0, 0)
    brennis:setrot(0, 180, 0)
    brennis:play_chore(0, "br_grab_card.cos")
    brennis:wait_for_chore(0, "br_grab_card.cos")
    tu:current_setup(tu_dorcu)
    tu.switcher.interest_actor:play_chore(tu_switcher_still, "tu_switcher.cos")
    brennis:set_costume(nil)
    brennis:default()
    brennis:put_in_set(tu)
    brennis:setpos(0.27442, -0.4735, 0)
    brennis:setrot(0, 31.834, 0)
    brennis:set_mumble_chore(brennis_fix_idle_mumble)
    brennis:set_talk_chore(1, brennis_fix_idle_stop_talk)
    brennis:set_talk_chore(2, brennis_fix_idle_a)
    brennis:set_talk_chore(3, brennis_fix_idle_c)
    brennis:set_talk_chore(4, brennis_fix_idle_e)
    brennis:set_talk_chore(5, brennis_fix_idle_f)
    brennis:set_talk_chore(6, brennis_fix_idle_l)
    brennis:set_talk_chore(7, brennis_fix_idle_m)
    brennis:set_talk_chore(8, brennis_fix_idle_o)
    brennis:set_talk_chore(9, brennis_fix_idle_t)
    brennis:set_talk_chore(10, brennis_fix_idle_u)
    brennis:play_chore(brennis_fix_idle_exit_tube_room, "brennis_fix_idle.cos")
    sleep_for(300)
    start_sfx("tuFanOn.WAV", nil, 90)
    tu.fans.interest_actor:play_chore_looping(tu_fans_spin_door_open, "tu_fans.cos")
    wait_for_sound("tuFanOn.WAV")
    single_start_sfx("tuFanLp.IMU", nil, tu.fan_volume)
    single_start_sfx("tuSwtch.IMU", nil, tu.switcher_volume)
    brennis:say_line("/tubs057/")
    sleep_for(5000)
    if tu.open_bolt:is_locked() then
        tu.door_state = "ajar"
        tu:set_up_switcher_door()
        play_movie("tu_db.snm", 2, 16)
        wait_for_movie()
    else
        tu.door_state = "closed"
        tu:set_up_switcher_door()
        play_movie("tu_dwb.snm", 66, 16)
        wait_for_movie()
    end
    if tu.open_bolt:is_locked() then
        tu.switcher_door:play_chore(tu_switcher_door_ajar)
    else
        tu.switcher_door:play_chore(tu_switcher_door_closed)
    end
    tu.switcher.interest_actor:play_chore_looping(tu_switcher_switch, "tu_switcher.cos")
    brennis:wait_for_message()
    brennis:wait_for_chore(brennis_fix_idle_exit_tube_room, "brennis_fix_idle.cos")
    manny:set_visibility(TRUE)
    END_CUT_SCENE()
    tu:set_up_states()
end
brennis.idle = function(arg1) -- line 605
    arg1.turned_to_talk = FALSE
    while TRUE do
        arg1.is_scratching = FALSE
        arg1:play_chore(brennis_fix_idle_fix_idle, "brennis_fix_idle.cos")
        arg1:wait_for_chore(brennis_fix_idle_fix_idle, "brennis_fix_idle.cos")
        if rnd(8) then
            arg1.is_scratching = TRUE
            arg1:play_chore(brennis_fix_idle_buttscratch, "brennis_fix_idle.cos")
            arg1:wait_for_chore(brennis_fix_idle_buttscratch, "brennis_fix_idle.cos")
        end
    end
end
brennis.stop_idle = function(arg1) -- line 619
    if find_script(brennis.stop_talking) then
        wait_for_script(brennis.stop_talking)
    end
    stop_script(arg1.idle)
    arg1:wait_for_chore()
end
brennis.start_talking = function(arg1) -- line 627
    if not arg1.turned_to_talk then
        arg1:stop_idle()
        arg1:play_chore(brennis_fix_idle_to_talk, "brennis_fix_idle.cos")
        arg1:wait_for_chore(brennis_fix_idle_to_talk, "brennis_fix_idle.cos")
        arg1:play_chore_looping(brennis_fix_idle_talk_hold, "brennis_fix_idle.cos")
        arg1.turned_to_talk = TRUE
    end
end
brennis.stop_talking = function(arg1) -- line 637
    if arg1.turned_to_talk then
        arg1:stop_chore(brennis_fix_idle_talk_hold, "brennis_fix_idle.cos")
        arg1:play_chore(brennis_fix_idle_back_to_fix_idle, "brennis_fix_idle.cos")
        arg1:wait_for_chore(brennis_fix_idle_back_to_fix_idle, "brennis_fix_idle.cos")
        arg1.turned_to_talk = FALSE
        single_start_script(arg1.idle, arg1)
    end
end
tu.enter = function(arg1) -- line 654
    tu.burn_box.triggered = FALSE
    tu.switcher_door:make_untouchable()
    tu.fans:make_untouchable()
    tu.flames:make_untouchable()
    tu:set_up_object_states()
    tu:set_up_actors()
    tu:set_up_states()
    tu:camerachange(nil, tu:current_setup())
    LoadCostume("ma_operate_bolt.cos")
    LoadCostume("ma_wheel_stuck.cos")
    LoadCostume("ma_tube_action.cos")
    LoadCostume("brennis_fix_idle.cos")
end
tu.exit = function(arg1) -- line 672
    stop_script(brennis.idle)
    stop_script(brennis.stop_idle)
    brennis:free()
    stop_sound("tuFanLp.IMU")
    stop_sound("tuFanOn.WAV")
    stop_sound("tuFanOff.WAV")
    stop_sound("tubAirNb.IMU")
    stop_sound("tubAirPb.IMU")
    stop_sound("tubAirFb.IMU")
    stop_sound("tubCnVib.IMU")
    stop_sound("tuSwtch.IMU")
end
tu.camerachange = function(arg1, arg2, arg3) -- line 686
    tu.switcher:make_touchable()
    tu.red_tube:make_touchable()
    if arg3 == tu_dorcu then
        tu.switcher:make_untouchable()
        brennis.seen_working_this_time = TRUE
    elseif arg3 == tu_redcu then
        tu.switcher:make_untouchable()
    elseif arg3 == tu_swiha or arg3 == tu_swopn then
        tu.switcher:inside_use_point()
    elseif arg3 == tu_tubws then
        tu.switcher:side_use_point()
    elseif arg3 == tu_swicu then
        tu.switcher:inside_use_point()
        tu.red_tube:make_untouchable()
    end
    if arg3 == tu_redcu and tu.chem_state ~= "both chem" then
        single_start_sfx("tubAirNb.IMU")
    else
        stop_sound("tubAirNb.IMU")
    end
    if arg3 == tu_dorcu then
        if tu.open_bolt.locked and tu.door_state == "open" then
            tu.open_bolt:play_chore(tu_deadbolt_here)
        end
    end
end
tu.cameraman = function(arg1) -- line 720
    local local1, local2
    local local3
    local local4
    if cameraman_disabled == FALSE and arg1:current_setup() ~= arg1.setups.overhead then
        local4 = system.currentActor:find_sector_name(tostring(cameraman_box_name))
        if not local4 or arg1 ~= cameraman_watching_set then
            arg1.cameraChange = TRUE
            cameraman_watching_set = arg1
            local1, cameraman_box_name, local2 = system.currentActor:find_sector_type(CAMERA)
            local3 = arg1.setups[tostring(cameraman_box_name)]
            if local3 == tu_swiha and tu.door_state == "open" then
                local3 = tu_swopn
            end
            arg1:current_setup(local3)
        else
            arg1.cameraChange = FALSE
        end
    end
end
tu.update_music_state = function(arg1) -- line 747
    if tu.chem_state == "both chem" then
        return stateTU_BRENNIS
    else
        return stateTU
    end
end
tu.manny_lock_deadbolt = function(arg1, arg2) -- line 755
    manny:push_costume("ma_operate_bolt.cos")
    if arg2 then
        tu.open_bolt:play_chore(tu_deadbolt_here_unlocked)
        manny:play_chore(ma_operate_bolt_lock_bolt, "ma_operate_bolt.cos")
        sleep_for(533)
        tu.open_bolt:play_chore(tu_deadbolt_lock, "tu_deadbolt.cos")
    else
        tu.open_bolt:play_chore(tu_deadbolt_here)
        manny:play_chore(ma_operate_bolt_unlock_bolt, "ma_operate_bolt.cos")
        sleep_for(533)
        tu.open_bolt:play_chore(tu_deadbolt_unlock, "tu_deadbolt.cos")
    end
    manny:wait_for_chore()
    manny:pop_costume()
end
tu.door_wheel = Object:create(tu, "/tutx058/wheel", 0.61358398, -0.835706, 0.31, { range = 0.5 })
tu.door_wheel.use_pnt_x = 0.80013198
tu.door_wheel.use_pnt_y = -0.93841499
tu.door_wheel.use_pnt_z = 0
tu.door_wheel.use_rot_x = 0
tu.door_wheel.use_rot_y = 52.717899
tu.door_wheel.use_rot_z = 0
tu.door_wheel.lookAt = function(arg1) -- line 788
    manny:say_line("/tuma059/")
end
tu.door_wheel.use = function(arg1) -- line 792
    local local1
    if tu.door_state == "ajar" then
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        manny:push_costume("ma_wheel_stuck.cos")
        manny:play_chore(ma_wheel_stuck_hand_on_tu, "ma_wheel_stuck.cos")
        manny:wait_for_chore(ma_wheel_stuck_hand_on_tu, "ma_wheel_stuck.cos")
        manny:set_walk_chore(ms_back_off, manny.base_costume)
        manny:set_walk_rate(-0.11)
        play_movie("tu_dob.snm", 2, 16)
        local1 = 0
        while local1 < 1300 do
            WalkActorForward(manny.hActor)
            break_here()
            local1 = local1 + system.frameTime
        end
        StopMovie()
        manny:set_walk_backwards(FALSE)
        manny:stop_chore(ma_wheel_stuck_hand_on_tu, "ma_wheel_stuck.cos")
        manny:pop_costume()
        tu.door_state = "open"
        tu.open_bolt.locked = TRUE
        FreeObjectState(tu.switcher_door.hObjectState)
        tu.switcher_door.hObjectState = nil
        tu:set_up_states()
        SendObjectToFront(tu.open_bolt.hObjectState)
        tu.open_bolt:complete_chore(tu_deadbolt_here, "tu_deadbolt.cos")
        tu:current_setup(tu_swopn)
        manny:setpos(0.97562599, -1.18225, 0)
        manny:setrot(0, 358.32401, 0)
        manny:head_look_at(nil)
        sleep_for(500)
        manny:walkto(0.44540301, -0.66003799, 0, 0, 46.101501, 0)
        manny:wait_for_actor()
        END_CUT_SCENE()
    else
        START_CUT_SCENE()
        manny:walkto_object(arg1)
        manny:push_costume("ma_wheel_stuck.cos")
        manny:play_chore(ma_wheel_stuck_hand_on_tu, "ma_wheel_stuck.cos")
        manny:wait_for_chore(ma_wheel_stuck_hand_on_tu, "ma_wheel_stuck.cos")
        manny:play_chore(ma_wheel_stuck_turn_tu, "ma_wheel_stuck.cos")
        manny:play_sound_at("valvtwst.wav")
        manny:wait_for_chore(ma_wheel_stuck_turn_tu, "ma_wheel_stuck.cos")
        manny:play_chore(ma_wheel_stuck_hand_off_tu, "ma_wheel_stuck.cos")
        manny:wait_for_chore(ma_wheel_stuck_hand_off_tu, "ma_wheel_stuck.cos")
        manny:pop_costume()
        manny:say_line("/tuma060/")
        manny:wait_for_message()
        if not tu.closed_bolt:is_locked() then
            manny:say_line("/tuma061/")
        end
        END_CUT_SCENE()
    end
end
tu.closed_bolt = Object:create(tu, "/tutx062/deadbolt", 0.473584, -0.955706, 0.36000001, { range = 0.5 })
tu.closed_bolt.use_pnt_x = 0.62627202
tu.closed_bolt.use_pnt_y = -1.05899
tu.closed_bolt.use_pnt_z = 0
tu.closed_bolt.use_rot_x = 0
tu.closed_bolt.use_rot_y = 90.141098
tu.closed_bolt.use_rot_z = 0
tu.closed_bolt.lookAt = function(arg1) -- line 865
    if arg1:is_locked() then
        manny:say_line("/tuma063/")
    else
        manny:say_line("/tuma064/")
    end
end
tu.closed_bolt.use = function(arg1) -- line 874
    if tu.door_state == "ajar" then
        manny:say_line("/tuma065/")
    else
        system.default_response("with what")
    end
end
tu.closed_bolt:lock()
tu.open_bolt = Object:create(tu, "/tutx067/dead bolt", 1.05984, -0.93449301, 0.38, { range = 0.5 })
tu.open_bolt.use_pnt_x = 0.84163702
tu.open_bolt.use_pnt_y = -1.0251
tu.open_bolt.use_pnt_z = 0
tu.open_bolt.use_rot_x = 0
tu.open_bolt.use_rot_y = 327.87601
tu.open_bolt.use_rot_z = 0
tu.open_bolt.lookAt = function(arg1) -- line 893
    tu.closed_bolt.lookAt(arg1)
end
tu.open_bolt.use = function(arg1) -- line 897
    if arg1:is_locked() then
        START_CUT_SCENE()
        cur_puzzle_state[5] = FALSE
        manny:walkto_object(arg1)
        arg1:unlock()
        tu.closed_bolt:unlock()
        tu:manny_lock_deadbolt(FALSE)
        END_CUT_SCENE()
    else
        START_CUT_SCENE()
        cur_puzzle_state[5] = TRUE
        manny:walkto_object(arg1)
        arg1:lock()
        tu.closed_bolt:lock()
        tu:manny_lock_deadbolt(TRUE)
        if not arg1.ever_locked then
            arg1.ever_locked = TRUE
            manny:say_line("/tuma068/")
            wait_for_message()
            manny:say_line("/tuma069/")
        end
        END_CUT_SCENE()
    end
end
tu.open_bolt:unlock()
tu.open_bolt.make_untouchable = function(arg1) -- line 925
    arg1:play_chore(tu_deadbolt_gone, "tu_deadbolt.cos")
    Object.make_untouchable(arg1)
end
tu.open_bolt.make_touchable = function(arg1) -- line 931
    if arg1:is_locked() then
        arg1:play_chore(tu_deadbolt_here_unlocked, "tu_deadbolt.cos")
    else
        arg1:play_chore(tu_deadbolt_here, "tu_deadbolt.cos")
    end
    Object.make_touchable(arg1)
end
tu.open_wheel = Object:create(tu, "/tutx070/wheel", 0.83358401, -0.77570599, 0.23999999, { range = 0.5 })
tu.open_wheel.use_pnt_x = 0.80046499
tu.open_wheel.use_pnt_y = -1.03627
tu.open_wheel.use_pnt_z = 0
tu.open_wheel.use_rot_x = 0
tu.open_wheel.use_rot_y = 325.18799
tu.open_wheel.use_rot_z = 0
tu.open_wheel.lookAt = function(arg1) -- line 952
    manny:say_line("/tuma071/")
end
tu.open_wheel.use = function(arg1) -- line 956
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:push_costume("ma_wheel_stuck.cos")
    manny:play_chore(ma_wheel_stuck_hand_on_tu, "ma_wheel_stuck.cos")
    manny:wait_for_chore(ma_wheel_stuck_hand_on_tu, "ma_wheel_stuck.cos")
    manny:play_chore(ma_wheel_stuck_turn_tu, "ma_wheel_stuck.cos")
    manny:play_sound_at("valvtwst.wav")
    manny:wait_for_chore(ma_wheel_stuck_turn_tu, "ma_wheel_stuck.cos")
    manny:play_chore(ma_wheel_stuck_hand_off_tu, "ma_wheel_stuck.cos")
    manny:wait_for_chore(ma_wheel_stuck_hand_off_tu, "ma_wheel_stuck.cos")
    manny:pop_costume()
    manny:say_line("/tuma072/")
    END_CUT_SCENE()
end
tu.brennis_obj = Object:create(tu, "/tutx073/repairman", 0.39063501, -0.48363599, 0.40000001, { range = 0.89999998 })
tu.brennis_obj.use_pnt_x = 0.71560103
tu.brennis_obj.use_pnt_y = -0.89723903
tu.brennis_obj.use_pnt_z = 0
tu.brennis_obj.use_rot_x = 0
tu.brennis_obj.use_rot_y = 56.1894
tu.brennis_obj.use_rot_z = 0
tu.brennis_obj.lookAt = function(arg1) -- line 982
    manny:say_line("/tuma074/")
end
tu.brennis_obj.use = function(arg1) -- line 986
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    END_CUT_SCENE()
    if br1 then
        br1:init()
    else
        result = dofile("dlg_brennis.lua")
        if not result then
            br1:init()
        else
            brennis:leave()
        end
    end
end
tu.red_tube = Object:create(tu, "/tutx075/red tube", 0.64748901, -0.162466, 0.36000001, { range = 0.80000001 })
tu.red_tube.use_pnt_x = 0.55390501
tu.red_tube.use_pnt_y = -0.298289
tu.red_tube.use_pnt_z = 0
tu.red_tube.use_rot_x = 0
tu.red_tube.use_rot_y = 4.2853999
tu.red_tube.use_rot_z = 0
tu.red_tube.closeup_use_pnt_x = 0.55000001
tu.red_tube.closeup_use_pnt_y = -0.29300001
tu.red_tube.closeup_use_pnt_z = 0
tu.red_tube.closeup_use_rot_x = 0
tu.red_tube.closeup_use_rot_y = 2164.27
tu.red_tube.closeup_use_rot_z = 0
tu.red_tube.lookAt = function(arg1) -- line 1025
    local local1
    START_CUT_SCENE()
    local1 = tu:current_setup()
    tu:current_setup(tu_redcu)
    if rnd(5) and tu.chem_state ~= "both chem" then
        start_script(tu.send_canister_through, tu)
    end
    if arg1.seen and not arg1.pondered then
        arg1.pondered = TRUE
        arg1:ponder()
    else
        arg1.seen = TRUE
        manny:say_line("/tuma076/")
    end
    manny:wait_for_message()
    tu:current_setup(local1)
    END_CUT_SCENE()
end
tu.red_tube.use = function(arg1) -- line 1048
    if tu.door_state == "open" and tu.chem_state ~= "both chem" then
        if not tu.red_tube.seen_locked then
            if manny:walkto_object(arg1) then
                tu.red_tube.seen_locked = TRUE
                START_CUT_SCENE()
                manny:walkto_object(tu.red_tube)
                tu:current_setup(tu_redcu)
                if rnd(5) then
                    start_script(tu.send_canister_through, tu)
                end
                manny:ignore_boxes()
                manny:setpos(0.521, -0.31933, 0.0120163)
                manny:setrot(0, 4.68058, 0)
                manny:push_costume("ma_tube_action.cos")
                manny:play_chore(ma_tube_action_handle_shake, "ma_tube_action.cos")
                manny:wait_for_chore()
                manny:pop_costume()
                manny:follow_boxes()
                manny:put_at_object(tu.red_tube)
                tu:current_setup(tu_swopn)
                END_CUT_SCENE()
                system.default_response("locked")
            end
        else
            system.default_response("locked")
        end
    else
        system.default_response("reach")
    end
end
tu.red_tube.use_card = function(arg1, arg2) -- line 1080
    if tu.door_state ~= "open" or tu.chem_state == "both chem" then
        system.default_response("reach")
    else
        arg2:free()
        manny:stop_chore(ms_hold_card, "ms.cos")
        manny:stop_chore(ms_activate_hole_card, "ms.cos")
        manny.is_holding = nil
        if arg2.punched then
            cur_puzzle_state[6] = TRUE
            START_CUT_SCENE()
            tu:current_setup(tu_redcu)
            manny:ignore_boxes()
            manny:stop_chore(ms_hold, "ms.cos")
            manny:setpos(0.485339, -0.311661, 0)
            manny:setrot(0, 359.564, 0)
            manny:stop_chore(ms_hold, "ms.cos")
            manny:stop_chore(ms_hold_card, "ms.cos")
            manny:push_costume("ma_tube_action.cos")
            manny:play_chore(ma_tube_action_canister_stop, "ma_tube_action.cos")
            sleep_for(1000)
            stop_sound("tubAirNb.IMU")
            start_sfx("tubAirPb.IMU")
            sleep_for(3600)
            tu.red_tube:play_chore(tu_canister_stop, "tu_canister.cos")
            tu.red_tube.interest_actor:wait_for_chore()
            start_sfx("tubCnVib.IMU")
            tu.red_tube.interest_actor:play_chore_looping(tu_canister_stop_loop, "tu_canister.cos")
            manny:wait_for_chore(ma_tube_action_canister_stop, "ma_tube_action.cos")
            manny:play_chore_looping(ma_tube_action_canister_hold, "ma_tube_action.cos")
            manny:say_line("/tuma078/")
            wait_for_message()
            manny:say_line("/tuma079/")
            wait_for_message()
            manny:say_line("/tuma080/")
            wait_for_message()
            manny:say_line("/tuma081/")
            wait_for_message()
            manny:stop_chore(ma_tube_action_canister_hold, "ma_tube_action.cos")
            manny:play_chore(ma_tube_action_canister_letgo, "ma_tube_action.cos")
            sleep_for(200)
            start_sfx("tubCnPas.WAV")
            sleep_for(400)
            stop_sound("tubCnVib.IMU")
            tu.red_tube.interest_actor:stop_chore(tu_canister_stop_loop, "tu_canister.cos")
            tu.red_tube.interest_actor:play_chore(tu_canister_go, "tu_canister.cos")
            stop_sound("tubAirPb.IMU")
            start_sfx("tubAirNb.IMU")
            manny:wait_for_chore()
            manny:pop_costume()
            manny:follow_boxes()
            manny:put_at_object(tu.red_tube)
            tu:current_setup(tu_swopn)
            break_here()
            manny:say_line("/tuma082/")
            wait_for_message()
            tu:current_setup(tu_dorcu)
            manny:say_line("/tuma083/")
            manny:walkto(1.2208, -1.16499, 0, 0, 351.67, 0)
            manny:wait_for_message()
            break_here()
            stop_sound("tuFanLp.IMU")
            stop_sound("tubAirPb.IMU")
            stop_sound("tubAirNb.IMU")
            stop_sound("tubCnVib.IMU")
            stop_sound("tuSwtch.IMU")
            END_CUT_SCENE()
            start_script(cut_scene.bonewgn)
        else
            START_CUT_SCENE()
            tu:current_setup(tu_redcu)
            manny:ignore_boxes()
            manny:setpos(0.485339, -0.311661, 0)
            manny:setrot(0, 359.564, 0)
            manny:stop_chore(ms_hold, "ms.cos")
            manny:stop_chore(ms_hold_card, "ms.cos")
            manny:push_costume("ma_tube_action.cos")
            manny:play_chore(ma_tube_action_lose_card, "ma_tube_action.cos")
            sleep_for(1200)
            stop_sound("tubAirNb.IMU")
            start_sfx("tubAirFb.IMU")
            sleep_for(800)
            tu.red_tube.interest_actor:play_chore(tu_canister_stop, "tu_canister.cos")
            tu.red_tube.interest_actor:wait_for_chore(tu_canister_stop, "tu_canister.cos")
            tu.red_tube.interest_actor:play_chore(tu_canister_stop_loop, "tu_canister.cos")
            tu.red_tube.interest_actor:wait_for_chore(tu_canister_stop_loop, "tu_canister.cos")
            start_sfx("tubCdLos.wav")
            wait_for_sound("tubCdLos.wav")
            start_sfx("tubCnPas.WAV")
            tu.red_tube.interest_actor:play_chore(tu_canister_stop_loop, "tu_canister.cos")
            tu.red_tube.interest_actor:wait_for_chore(tu_canister_stop_loop, "tu_canister.cos")
            tu.red_tube.interest_actor:play_chore(tu_canister_go, "tu_canister.cos")
            tu.red_tube.interest_actor:wait_for_chore(tu_canister_stop_loop, "tu_canister.cos")
            tu.red_tube.interest_actor:play_chore(tu_canister_stop_loop, "tu_canister.cos")
            tu.red_tube.interest_actor:wait_for_chore(tu_canister_stop_loop, "tu_canister.cos")
            tu.red_tube.interest_actor:play_chore(tu_canister_go, "tu_canister.cos")
            tu.red_tube.interest_actor:wait_for_chore(tu_canister_go, "tu_canister.cos")
            stop_sound("tubAirFb.IMU")
            start_sfx("tubAirNb.IMU")
            manny:wait_for_chore(ma_tube_action_lose_card, "ma_tube_action.cos")
            manny:pop_costume()
            manny:follow_boxes()
            manny:put_at_object(tu.red_tube)
            tu:current_setup(tu_swopn)
            break_here()
            manny:say_line("/tuma085/")
            END_CUT_SCENE()
        end
    end
end
tu.red_tube.ponder = function(arg1) -- line 1208
    manny:say_line("/tuma093/")
    manny:wait_for_message()
    manny:say_line("/tuma094/")
end
tu.red_tube.use_cards = function(arg1) -- line 1214
    if tu.door_state ~= "open" or tu.chem_state == "both chem" then
        system.default_response("reach")
    else
        mo.cards:switch_to_one()
        tu.red_tube:use_card(mo.one_card)
    end
end
tu.switcher = Object:create(tu, "/tutx086/switcher", 0.0035840999, 0.014294, 0.55000001, { range = 1.5 })
tu.switcher.inside_use_point = function(arg1) -- line 1226
    tu.switcher.use_pnt_x = 0.431
    tu.switcher.use_pnt_y = -0.397
    tu.switcher.use_pnt_z = 0
    tu.switcher.use_rot_x = 0
    tu.switcher.use_rot_y = 2211.66
    tu.switcher.use_rot_z = 0
end
tu.switcher.side_use_point = function(arg1) -- line 1235
    tu.switcher.use_pnt_x = 0.812
    tu.switcher.use_pnt_y = 0.819
    tu.switcher.use_pnt_z = 0
    tu.switcher.use_rot_x = 0
    tu.switcher.use_rot_y = 2323.98
    tu.switcher.use_rot_z = 0
end
tu.switcher.front_use_point = function(arg1) -- line 1244
    tu.switcher.use_pnt_x = 1.158
    tu.switcher.use_pnt_y = -0.106
    tu.switcher.use_pnt_z = 0
    tu.switcher.use_rot_x = 0
    tu.switcher.use_rot_y = 2243.52
    tu.switcher.use_rot_z = 0
end
tu.switcher:side_use_point()
tu.switcher.lookAt = function(arg1) -- line 1255
    if tu.chem_state == "chem 1" then
        manny:say_line("/tuma087/")
    elseif tu.chem_state == "chem 2" then
        manny:say_line("/tuma088/")
    elseif tu.chem_state == "both chem" then
        manny:say_line("/tuma089/")
    else
        manny:say_line("/tuma090/")
    end
end
tu.switcher.use = function(arg1) -- line 1267
    manny:say_line("/tuma091/")
end
tu.fans = Object:create(tu, "fans", 0, 0, 0, { range = 0 })
tu.switcher_door = Object:create(tu, "switcher door", 1, -1, 0, { range = 0 })
tu.flames = Object:create(tu, "flames", 0.0035840999, 0.014294, 0.55000001, { range = 0 })
tu.extinguisher = Object:create(tu, "/bdtx018/fire extinguisher", 1.24414, 1.46034, 0.31990001, { range = 0.60000002 })
tu.extinguisher.string_name = "extinguisher"
tu.extinguisher.big = TRUE
tu.extinguisher.wav = "getMetl.wav"
tu.extinguisher.use_pnt_x = 1.32596
tu.extinguisher.use_pnt_y = 1.24541
tu.extinguisher.use_pnt_z = 0
tu.extinguisher.use_rot_x = 0
tu.extinguisher.use_rot_y = 30.280001
tu.extinguisher.use_rot_z = 0
tu.extinguisher.lookAt = function(arg1) -- line 1298
    manny:say_line("/vima035/")
end
tu.extinguisher.pickUp = function(arg1) -- line 1302
    if manny:walkto_object(arg1) then
        START_CUT_SCENE()
        manny:play_chore(ms_hand_on_obj, "ms.cos")
        manny:wait_for_chore()
        sleep_for(100 / GetActorTimeScale(manny.hActor))
        arg1:make_disappear()
        bd.extinguisher:get()
        manny:stop_chore(ms_hand_on_obj, "ms.cos")
        start_sfx("tuGetExt.wav")
        manny:play_chore(ms_activate_extinguisher, "ms.cos")
        manny:play_chore(ms_hand_off_obj, "ms.cos")
        sleep_for(400 / GetActorTimeScale(manny.hActor))
        manny:stop_chore(ms_hand_off_obj, "ms.cos")
        manny:play_chore(ms_hold, "ms.cos")
        manny.is_holding = bd.extinguisher
        manny.hold_chore = ms_activate_extinguisher
        END_CUT_SCENE()
    end
end
tu.extinguisher.use = tu.extinguisher.pickUp
tu.extinguisher.make_disappear = function(arg1) -- line 1325
    arg1.interest_actor:play_chore(1)
    arg1:make_untouchable()
end
tu.lo_door = Object:create(tu, "/tutx092/door", 1.57358, 1.8042901, 0.5, { range = 0.5 })
tu.tu_lo_box = tu.lo_door
tu.lo_door.use_pnt_x = 1.5089999
tu.lo_door.use_pnt_y = 1.286
tu.lo_door.use_pnt_z = 0
tu.lo_door.use_rot_x = 0
tu.lo_door.use_rot_y = 718.34698
tu.lo_door.use_rot_z = 0
tu.lo_door.out_pnt_x = 1.58289
tu.lo_door.out_pnt_y = 1.74386
tu.lo_door.out_pnt_z = 0
tu.lo_door.out_rot_x = 0
tu.lo_door.out_rot_y = 712.00201
tu.lo_door.out_rot_z = 0
tu.lo_door.walkOut = function(arg1) -- line 1354
    if tu.chem_state == "both chem" and brennis.seen_working_this_time then
        brennis:leave()
    end
    lo:come_out_door(lo.tu_door)
end
tu.burn_box = { }
tu.burn_box.name = "burn box"
tu.burn_box.triggered = FALSE
tu.burn_box.walkOut = function(arg1) -- line 1365
    if not arg1.triggered then
        arg1.triggered = TRUE
    elseif tu.chem_state == "both chem" and not brennis.burnt then
        brennis:burn(TRUE)
    end
end
tumbler_here = 0
turbanman_base_pose = 0
turbanman_sips_wine = 1
turbanman_big_drink = 2
turbanman_raise_arm = 3
turbanman_look_table = 4
tu_switcher_door_open = 0
tu_switcher_door_closed = 1
tu_switcher_door_ajar = 2
tu_switcher_door_gone = 3
tu_switcher_switch = 0
tu_switcher_switch_door_open = 1
tu_switcher_still = 2
tu_switcher_still_door_open = 3
tu_switcher_gone = 4
CheckFirstTime("tw.lua")
tw = Set:create("tw.set", "track window", { tw_trkvw = 0, tw_overhead = 1 })
tw.enter = function(arg1) -- line 18
    start_script(tb.off_screen_kittys)
end
tw.exit = function(arg1) -- line 22
    stop_script(tb.off_screen_kittys)
end
tw.track = Object:create(tw, "track", 1.48673, -0.12816, 0, { range = 1.5 })
tw.track.use_pnt_x = 1.11973
tw.track.use_pnt_y = -0.047159601
tw.track.use_pnt_z = 0
tw.track.use_rot_x = 0
tw.track.use_rot_y = -86.362198
tw.track.use_rot_z = 0
tw.track.lookAt = function(arg1) -- line 40
    manny:say_line("/tbma054/")
    manny:nod_head_gesture()
end
tw.track.use = function(arg1) -- line 45
    manny:say_line("/slma243/")
end
tw.tb_door = Object:create(tw, "/twtx001/door", -4.0999999, 0, 1.8, { range = 0.60000002 })
tw.tb_door.use_pnt_x = 0
tw.tb_door.use_pnt_y = 0
tw.tb_door.use_pnt_z = 0
tw.tb_door.use_rot_x = 0
tw.tb_door.use_rot_y = 0
tw.tb_door.use_rot_z = 0
tw.tb_door.out_pnt_x = 0
tw.tb_door.out_pnt_y = 0
tw.tb_door.out_pnt_z = 0
tw.tb_door.out_rot_x = 0
tw.tb_door.out_rot_y = 0
tw.tb_door.out_rot_z = 0
tw.tb1_box = tw.tb_door
tw.tb_door.walkOut = function(arg1) -- line 74
    local local1, local2, local3
    START_CUT_SCENE()
    local1, local2, local3 = GetActorPos(system.currentActor.hActor)
    tb:switch_to_set()
    tb:current_setup(tb_strws)
    PutActorInSet(system.currentActor.hActor, tb.setFile)
    manny:setpos(0.76057202, 0.74956697, 0)
    END_CUT_SCENE()
end
tw.tb1_door = Object:create(tw, "/twtx002/door", -4.0999999, 0, 1.8, { range = 0.60000002 })
tw.tb1_door.use_pnt_x = 0
tw.tb1_door.use_pnt_y = 0
tw.tb1_door.use_pnt_z = 0
tw.tb1_door.use_rot_x = 0
tw.tb1_door.use_rot_y = 0
tw.tb1_door.use_rot_z = 0
tw.tb1_door.out_pnt_x = 0
tw.tb1_door.out_pnt_y = 0
tw.tb1_door.out_pnt_z = 0
tw.tb1_door.out_rot_x = 0
tw.tb1_door.out_rot_y = 0
tw.tb1_door.out_rot_z = 0
tw.tb2_box = tw.tb1_door
tw.tb1_door.walkOut = function(arg1) -- line 102
    START_CUT_SCENE()
    tb:switch_to_set()
    tb:current_setup(tb_fotws)
    PutActorInSet(system.currentActor.hActor, tb.setFile)
    manny:setpos(0.777762, -0.786979, 0)
    END_CUT_SCENE()
end
CheckFirstTime("tx.lua")
tx = Set:create("tx.set", "track base", { tx_strws = 0 })
tx.enter = function(arg1) -- line 18
    xb.bridge.extended = TRUE
end
tx.xb_door = Object:create(tx, "/txtx001/door", 3.6120999, 0.82800001, 0.40000001, { range = 0.60000002 })
tx.xb_door.use_pnt_x = 3.20103
tx.xb_door.use_pnt_y = 0.64020598
tx.xb_door.use_pnt_z = 0
tx.xb_door.use_rot_x = 0
tx.xb_door.use_rot_y = -55.054798
tx.xb_door.use_rot_z = 0
tx.xb_door.out_pnt_x = 3.41837
tx.xb_door.out_pnt_y = 0.79211003
tx.xb_door.out_pnt_z = 0
tx.xb_door.out_rot_x = 0
tx.xb_door.out_rot_y = -55.054798
tx.xb_door.out_rot_z = 0
tx.xb_box = tx.xb_door
tx.xb_door.walkOut = function(arg1) -- line 52
    xb:come_out_door(xb.tx_door)
end
tx.ts_door = Object:create(tx, "/txtx002/door", 1.0121, -0.071999997, 0.40000001, { range = 0.60000002 })
tx.ts_door.use_pnt_x = -0.192009
tx.ts_door.use_pnt_y = -0.32122499
tx.ts_door.use_pnt_z = 0.544182
tx.ts_door.use_rot_x = 0
tx.ts_door.use_rot_y = -261.61499
tx.ts_door.use_rot_z = 0
tx.ts_door.out_pnt_x = -0.36461401
tx.ts_door.out_pnt_y = -0.34440401
tx.ts_door.out_pnt_z = 0.61000001
tx.ts_door.out_rot_x = 0
tx.ts_door.out_rot_y = -261.61499
tx.ts_door.out_rot_z = 0
tx.ts_door:make_untouchable()
tx.ts_box = tx.ts_door
tx.ts_door.walkOut = function(arg1) -- line 75
    ts:come_out_door(ts.tx_door)
end
CheckFirstTime("ul.lua")
ul = Set:create("ul.set", "undernath the Lola", { ul_dock = 0, ul_ocean = 1 })
dofile("ul_port_anchor.lua")
dofile("ul_star_anchor.lua")
dofile("ul_prop.lua")
go_under_lola = function() -- line 30
    ul:switch_to_set()
    if ei.boat_state == "pier" then
        ul:current_setup(ul_dock)
        NewObjectState(ul_dock, OBJSTATE_OVERLAY, "ul_P_L_prop.bm")
        NewObjectState(ul_dock, OBJSTATE_OVERLAY, "ul_P_R_prop.bm")
        NewObjectState(ul_dock, OBJSTATE_OVERLAY, "ul_P_left_AWAY.bm", nil, TRUE)
        NewObjectState(ul_dock, OBJSTATE_OVERLAY, "ul_P_left_down.bm", nil, TRUE)
        NewObjectState(ul_dock, OBJSTATE_OVERLAY, "ul_P_right_AWAY.bm", nil, TRUE)
        NewObjectState(ul_dock, OBJSTATE_OVERLAY, "ul_P_right_down.bm", nil, TRUE)
        NewObjectState(ul_dock, OBJSTATE_OVERLAY, "ul_P_solution.bm", nil, TRUE)
        NewObjectState(ul_dock, OBJSTATE_OVERLAY, "ul_P_ripped.bm", nil, TRUE)
        NewObjectState(ul_dock, OBJSTATE_OVERLAY, "ul_P_tight.bm", nil, TRUE)
        NewObjectState(ul_dock, OBJSTATE_OVERLAY, "ul_O_right_AWAYx.bm", nil, TRUE)
        StartMovie("ul_p.snm")
    else
        ul:current_setup(ul_ocean)
        NewObjectState(ul_ocean, OBJSTATE_OVERLAY, "ul_O_L_prop.bm")
        NewObjectState(ul_ocean, OBJSTATE_OVERLAY, "ul_O_R_prop.bm")
        NewObjectState(ul_ocean, OBJSTATE_OVERLAY, "ul_O_left_AWAY.bm", nil, TRUE)
        NewObjectState(ul_ocean, OBJSTATE_OVERLAY, "ul_O_left_down.bm", nil, TRUE)
        NewObjectState(ul_ocean, OBJSTATE_OVERLAY, "ul_O_right_AWAY.bm", nil, TRUE)
        NewObjectState(ul_ocean, OBJSTATE_OVERLAY, "ul_O_right_down.bm", nil, TRUE)
        NewObjectState(ul_ocean, OBJSTATE_OVERLAY, "ul_O_solution.bm", nil, TRUE)
        NewObjectState(ul_ocean, OBJSTATE_OVERLAY, "ul_O_tight.bm", nil, TRUE)
        NewObjectState(ul_ocean, OBJSTATE_OVERLAY, "ul_O_ripped.bm", nil, TRUE)
        NewObjectState(ul_ocean, OBJSTATE_OVERLAY, "ul_P_left_AWAYx.bm", nil, TRUE)
        StartMovie("ul_o.snm")
    end
    if ul.props_running then
        start_sfx("lolawatr.imu")
        ul.props:play_chore_looping(ul_prop_full_ahead)
    else
        ul.props:play_chore_looping(ul_prop_all_stop)
    end
    if ei.sa.state == "out" then
        ul.star_anchor:play_chore(ul_star_anchor_out)
    elseif ei.sa.state == "straight" then
        ul.star_anchor:play_chore(ul_star_anchor_down)
    elseif ei.sa.state == "under" then
        if ei.boat_state == "pier" then
            ul.star_anchor:play_chore(ul_star_anchor_out)
        else
            ul.star_anchor:play_chore(ul_star_anchor_under)
        end
    else
        ul.star_anchor:play_chore(ul_star_anchor_up)
    end
    if ei.pa.state == "out" then
        ul.port_anchor:play_chore(ul_port_anchor_out)
    elseif ei.pa.state == "straight" then
        ul.port_anchor:play_chore(ul_port_anchor_down)
    elseif ei.pa.state == "under" then
        PrintDebug(ei.pa.state)
        if ei.boat_state == "pier" then
            ul.port_anchor:play_chore(ul_port_anchor_under)
        else
            ul.port_anchor:play_chore(ul_port_anchor_out)
        end
    else
        ul.port_anchor:play_chore(ul_port_anchor_up)
    end
    if ei.sa.state == "drawn" or ei.sa.state == "portholed" then
        ul.port_anchor:play_chore(ul_port_anchor_hooked)
        ul.star_anchor:play_chore(ul_star_anchor_hooked)
    elseif ei.pa.state == "drawn" or ei.pa.state == "portholed" then
        ul.star_anchor:play_chore(ul_port_anchor_hooked)
        ul.port_anchor:play_chore(ul_star_anchor_hooked)
    end
    if ei.ship_ripped then
        ul.tear:play_chore(0)
    end
    wait_for_movie()
    ul.props_running = FALSE
    stop_sound("lolawatr.imu")
    ul:return_to_set()
end
ul.enter = function(arg1) -- line 124
    ul.props:set_object_state("ul_prop.cos")
    ul.star_anchor:set_object_state("ul_star_anchor.cos")
    ul.port_anchor:set_object_state("ul_port_anchor.cos")
    ul.tear:set_object_state("ul_tear.cos")
end
ul.exit = function(arg1) -- line 132
end
ul.switch_to_set = function(arg1) -- line 136
    system.lastSet = system.currentSet
    LockSet(system.currentSet.setFile)
    inventory_save_set = system.currentSet
    arg1:CommonEnter()
    MakeCurrentSet(arg1.setFile)
    arg1:enter()
    system.currentSet = ul
    if system.ambientLight then
        SetAmbientLight(system.ambientLight)
    end
    inventory_save_handler = system.buttonHandler
end
ul.return_to_set = function(arg1) -- line 151
    ul:exit()
    system.currentSet = inventory_save_set
    UnLockSet(inventory_save_set.setFile)
    MakeCurrentSet(inventory_save_set.setFile)
    system.buttonHandler = inventory_save_handler
end
ul.props = Object:create(ul, "propellers", 0, 0, 0, { range = 0 })
ul.star_anchor = Object:create(ul, "anchor", 0, 0, 0, { range = 0 })
ul.port_anchor = Object:create(ul, "anchor", 0, 0, 0, { range = 0 })
ul.tear = Object:create(ul, "anchor", 0, 0, 0, { range = 0 })
ul_port_anchor_up = 0
ul_port_anchor_down = 1
ul_port_anchor_out = 2
ul_port_anchor_hooked = 3
ul_port_anchor_under = 4
ul_prop_full_ahead = 0
ul_prop_all_stop = 1
ul_star_anchor_up = 0
ul_star_anchor_down = 1
ul_star_anchor_out = 2
ul_star_anchor_hooked = 3
ul_star_anchor_under = 4
ul_tear_ripped = 0
unicycle_man_roll = 0
unicycle_man_idles = 1
unicycle_man_crawl_slot = 2
unicycle_man_out_slot = 3
unicycle_man_c = 4
unicycle_man_m = 5
unicycle_man_f = 6
unicycle_man_e = 7
unicycle_man_u = 8
unicycle_man_l = 9
unicycle_man_a = 10
unicycle_man_o = 11
unicycle_man_no_talk = 12
unicycle_man_mumble = 13
unicycle_man_hide_body = 14
unicycle_man_show_body = 15
unicycle_man_out_slot_no_grab = 16
unicycle_man_end_out_slot = 17
unicycle_man_t = 18
vault_wheel_here = 0
vd_handle_Chore0 = 0
vd_handle_Chore1 = 1
vd_handle_Chore2 = 2
vd_jam_Chore0 = 0
vd_jam_Chore1 = 1
vd_jam_Chore2 = 2
CheckFirstTime("vd.lua")
vd = Set:create("vd.set", "vault door", { vd_top = 0, vd_safex = 1, vd_safex1 = 1, vd_safcu = 2 })
vd.shrinkable = 0.04
vd.wheel_vol = 30
dofile("mn_open_safe.lua")
dofile("mn_scythe_door.lua")
vd.meches_muffled_cries = function() -- line 19
    while 1 do
        meche:say_line(pick_one_of({ "/vdmc001/", "/vdmc002/", "/vdmc003/", "/vdmc004/", "/vdmc005/", "/vdmc006/", "/vdmc007/", "/vdmc008/", "/vdmc009/", "/vdmc010/", "/vdmc011/", "/vdmc012/", "/vdmc013/", "/vdmc014/", "/vdmc015/", "/vdmc016/", "/vdmc017/", "/vdmc018/", "/vdmc019/" }), { background = TRUE, skip_log = TRUE })
        sleep_for(5000)
    end
end
vd.scythe_fall = function() -- line 45
    local local1 = 0
    local local2 = { }
    local local3 = start_script(vd.scythe_sideways)
    start_sfx("scythfal.wav")
    repeat
        local1 = local1 + PerSecond(5)
        if local1 > 90 then
            local1 = 90
        end
        local2 = door_scythe:getrot()
        door_scythe:setrot(local2.x, local2.y, local2.z - local1)
        break_here()
        local2 = door_scythe:getrot()
    until local2.z <= -90
    door_scythe:setrot(local2.x, local2.y, -90)
    wait_for_script(local3)
end
vd.scythe_sideways = function() -- line 65
    local local1 = { }
    local local2 = 0.0099999998
    repeat
        local1 = door_scythe:getpos()
        local2 = local2 + PerSecond(0.0049999999)
        door_scythe:setpos(local1.x + local2, local1.y, local1.z)
        break_here()
    until local1.x >= 0.223141
    door_scythe:setpos(0.223141, local1.y, local1.z)
end
vd.open_safe = function() -- line 77
    local local1
    cur_puzzle_state[39] = TRUE
    START_CUT_SCENE()
    manny:play_chore(ms_hand_on_obj, manny.base_costume)
    manny:wait_for_chore()
    vd.handle:play_chore(2)
    manny:play_chore(ms_hand_off_obj, manny.base_costume)
    vd.handle:wait_for_chore()
    vd.handle:play_chore(0)
    vd.door_jam:play_chore(1)
    vd.safe_door:free()
    StartMovie("vd.snm", nil, 233, 119)
    local1 = start_script(vd.scythe_fall)
    wait_for_movie()
    music_state:set_sequence(seqOpenVault)
    vd.door_jam:play_chore(2)
    vd.door_open = TRUE
    music_state:update()
    wait_for_script(local1)
    manny:walkto(-0.105456, 0.34172001, 0, 0, -11.4314, 0)
    manny:play_chore(50, manny.base_costume)
    mn2_event = FALSE
    repeat
        break_here()
    until mn2_event
    door_scythe:free()
    mo.scythe:get()
    MakeSectorActive("scythe_here", TRUE)
    vd.tumblers.secured = FALSE
    manny:wait_for_chore()
    manny.is_holding = mo.scythe
    open_inventory(TRUE, TRUE)
    vd.tumblers.name = "tumblers"
    vd.tumblers:make_untouchable()
    vd.wheel:make_untouchable()
    vd.handle:make_untouchable()
    vd.vo_door:make_touchable()
    MakeSectorActive("safe_passage", TRUE)
    if not vd.cracked_safe then
        vd.cracked_safe = TRUE
        wait_for_message()
        manny:say_line("/vdma020/")
        wait_for_message()
        manny:say_line("/vdma021/")
        wait_for_message()
        sleep_for(750)
        manny:say_line("/vdma022/")
        manny:tilt_head_gesture()
    end
    END_CUT_SCENE()
end
system.tumblerTemplate = { name = "<unnamed>", actor = nil, pos = nil, rot = nil, lock = nil, lock_val = nil, lock_pin = nil }
Tumbler = system.tumblerTemplate
Tumbler.create = function(arg1, arg2, arg3) -- line 148
    local local1 = { }
    local1.parent = Tumbler
    local1.name = arg2
    local1.actor = Actor:create(nil, nil, nil, arg2)
    local1.rot = rndint(0, 359)
    local1.lock_val = local1.rot
    local1.pos = arg3
    local1.lock = FALSE
    local1.lock_pin = rndint(0, 359)
    return local1
end
Tumbler.set_up_actor = function(arg1) -- line 164
    arg1.actor:set_costume("tumbler.cos")
    arg1.actor:play_chore_looping(0)
    arg1.actor:put_in_set(vd)
    arg1.actor:setrot(0, arg1.rot, 0)
    arg1.actor:set_softimage_pos(arg1.pos.x, arg1.pos.y, arg1.pos.z)
    arg1:reset_lock_value()
    start_script(arg1.monitor_rot, arg1)
    start_script(arg1.make_noise, arg1)
end
Tumbler.monitor_rot = function(arg1) -- line 175
    while 1 do
        arg1.actor:setrot(0, arg1.rot, 0)
        break_here()
    end
end
Tumbler.make_noise = function(arg1) -- line 182
    local local1 = { }
    local local2, local3
    while 1 do
        local1 = arg1.actor:getrot()
        if abs(arg1.rot - local1.y) > 15 then
            if vd:current_setup() == vd_safcu then
                local3 = rndint(50, 80)
            else
                local3 = rndint(10, 40)
            end
            local2 = pick_one_of({ "vdTmbl1.wav", "vdTmbl2.wav", "vdTmbl3.wav", "vdTmbl4.wav" })
            start_sfx(local2, IM_LOW_PRIORITY, local3)
            wait_for_sound(local2)
        else
            break_here()
        end
    end
end
Tumbler.reset_lock_value = function(arg1) -- line 204
    local local1 = arg1.actor:get_positive_rot()
    arg1.lock = FALSE
    arg1.lock_val = local1.y + arg1.lock_pin
    if arg1.lock_val >= 360 then
        arg1.lock_val = arg1.lock_val - 360
    end
end
Tumbler.scramble = function(arg1, arg2) -- line 217
    local local1 = 100
    local local2 = rnd()
    local local3 = { }
    repeat
        if local2 then
            arg1.rot = arg1.rot - local1
        else
            arg1.rot = arg1.rot + local1
        end
        local1 = local1 - PerSecond(15)
        break_here()
    until local1 <= 0
    local3 = arg1.actor:get_positive_rot()
    arg1.rot = floor(local3.y)
    arg1:reset_lock_value()
    if arg2 then
        arg1.lock = TRUE
    end
end
Tumbler.free = function(arg1) -- line 238
    arg1.actor:free()
    stop_script(arg1.monitor_rot)
    stop_script(arg1.make_noise)
end
system.safeTemplate = { name = "<unnamed>", tumblers = nil, wheel = nil, current_setting = nil, direction = nil }
Safe = system.safeTemplate
Safe.create = function(arg1, arg2) -- line 252
    local local1 = { }
    local1.parent = Safe
    local1.name = arg2
    local1.tumblers = { }
    local1.wheel = { }
    local1.current_setting = 0
    local1.direction = CLOCKWISE
    local1.tumblers[1] = Tumbler:create("t1", { x = 1.1426001, y = 3.0685, z = -6.4158001 })
    local1.tumblers[2] = Tumbler:create("t2", { x = 1.1426001, y = 3.2776999, z = -6.4158001 })
    local1.tumblers[3] = Tumbler:create("t3", { x = 1.1426001, y = 3.4872999, z = -6.4158001 })
    local1.tumblers[4] = Tumbler:create("t4", { x = 1.1426001, y = 3.7004001, z = -6.4158001 })
    local1.wheel = Actor:create(nil, nil, nil, "wheel")
    return local1
end
Safe.set_up_actors = function(arg1) -- line 274
    arg1.tumblers[1]:set_up_actor()
    arg1.tumblers[2]:set_up_actor()
    arg1.tumblers[3]:set_up_actor()
    arg1.tumblers[4]:set_up_actor()
    if meche.locked_up or cur_puzzle_state[41] == TRUE then
        arg1.wheel:set_costume("vault_wheel.cos")
        arg1.wheel:put_in_set(vd)
        arg1.wheel:set_softimage_pos(-0.6378, 3.4855, -6.3778)
        arg1.wheel:setrot(0, 180, 0)
    end
    arg1.tumblers[1].lock = TRUE
    start_script(arg1.monitor_lock, arg1)
    start_script(arg1.monitor_tumblers, arg1)
end
CLOCKWISE = 0
C_CLOCKWISE = 1
Safe.monitor_lock = function(arg1) -- line 298
    arg1.direction = CLOCKWISE
    while 1 do
        while arg1.direction == CLOCKWISE do
            break_here()
        end
        arg1.tumblers[2]:reset_lock_value()
        arg1.tumblers[3]:reset_lock_value()
        arg1.tumblers[4]:reset_lock_value()
        while arg1.direction == C_CLOCKWISE do
            break_here()
        end
        arg1.tumblers[2]:reset_lock_value()
        arg1.tumblers[3]:reset_lock_value()
        arg1.tumblers[4]:reset_lock_value()
    end
end
Safe.monitor_tumblers = function(arg1) -- line 320
    while 1 do
        if arg1.tumblers[1].rot >= 248 and arg1.tumblers[1].rot <= 290 and (arg1.tumblers[2].rot >= 248 and arg1.tumblers[2].rot <= 290) and (arg1.tumblers[3].rot >= 248 and arg1.tumblers[3].rot <= 290) and (arg1.tumblers[4].rot >= 248 and arg1.tumblers[4].rot <= 290) then
            vd.tumblers.alligned = TRUE
        else
            vd.tumblers.alligned = FALSE
        end
        break_here()
    end
end
Safe.scramble = function(arg1) -- line 335
    start_script(arg1.tumblers[1].scramble, arg1.tumblers[1], TRUE)
    start_script(arg1.tumblers[2].scramble, arg1.tumblers[2])
    start_script(arg1.tumblers[3].scramble, arg1.tumblers[3])
    arg1.tumblers[4]:scramble()
end
Safe.spin_tumblers_right = function(arg1) -- line 342
    if not find_script(arg1.scramble) then
        if arg1.tumblers[1].lock then
            arg1.tumblers[1].rot = arg1.tumblers[1].rot + 1
            if arg1.tumblers[1].rot == 360 then
                arg1.tumblers[1].rot = 0
            end
            if arg1.tumblers[1].rot == arg1.tumblers[2].lock_val and arg1.tumblers[2].lock == FALSE then
                arg1.tumblers[2].lock = TRUE
            end
        end
        if arg1.tumblers[2].lock then
            arg1.tumblers[2].rot = arg1.tumblers[2].rot + 1
            if arg1.tumblers[2].rot == 360 then
                arg1.tumblers[2].rot = 0
            end
            if arg1.tumblers[2].rot == arg1.tumblers[3].lock_val and arg1.tumblers[3].lock == FALSE then
                arg1.tumblers[3].lock = TRUE
            end
        end
        if arg1.tumblers[3].lock then
            arg1.tumblers[3].rot = arg1.tumblers[3].rot + 1
            if arg1.tumblers[3].rot == 360 then
                arg1.tumblers[3].rot = 0
            end
            if arg1.tumblers[3].rot == arg1.tumblers[4].lock_val and arg1.tumblers[4].lock == FALSE then
                arg1.tumblers[4].lock = TRUE
            end
        end
        if arg1.tumblers[4].lock then
            arg1.tumblers[4].rot = arg1.tumblers[4].rot + 1
            if arg1.tumblers[4].rot == 360 then
                arg1.tumblers[4].rot = 0
            end
        end
    end
end
Safe.spin_tumblers_left = function(arg1) -- line 386
    if not find_script(arg1.scramble) then
        if arg1.tumblers[1].lock then
            arg1.tumblers[1].rot = arg1.tumblers[1].rot - 1
            if arg1.tumblers[1].rot == -1 then
                arg1.tumblers[1].rot = 359
            end
            if arg1.tumblers[1].rot == arg1.tumblers[2].lock_val and arg1.tumblers[2].lock == FALSE then
                arg1.tumblers[2].lock = TRUE
            end
        end
        if arg1.tumblers[2].lock then
            arg1.tumblers[2].rot = arg1.tumblers[2].rot - 1
            if arg1.tumblers[2].rot == -1 then
                arg1.tumblers[2].rot = 359
            end
            if arg1.tumblers[2].rot == arg1.tumblers[3].lock_val and arg1.tumblers[3].lock == FALSE then
                arg1.tumblers[3].lock = TRUE
            end
        end
        if arg1.tumblers[3].lock then
            arg1.tumblers[3].rot = arg1.tumblers[3].rot - 1
            if arg1.tumblers[3].rot == -1 then
                arg1.tumblers[3].rot = 359
            end
            if arg1.tumblers[3].rot == arg1.tumblers[4].lock_val and arg1.tumblers[4].lock == FALSE then
                arg1.tumblers[4].lock = TRUE
            end
        end
        if arg1.tumblers[4].lock then
            arg1.tumblers[4].rot = arg1.tumblers[4].rot - 1
            if arg1.tumblers[4].rot == -1 then
                arg1.tumblers[4].rot = 359
            end
        end
    end
end
vd.play_wheel_sfx = function() -- line 430
    if not sound_playing("vdWeel1.wav") or sound_playing("vdWeel2.wav") or sound_playing("vdWeel3.wav") or sound_playing("vdWeel4.wav") then
        sfx = pick_from_nonweighted_table({ "vdWeel1.wav", "vdWeel2.wav", "vdWeel3.wav", "vdWeel4.wav" })
        start_sfx(pick_one_of({ "vdWeel1.wav", "vdWeel2.wav", "vdWeel3.wav", "vdWeel4.wav" }), IM_MED_PRIORITY, vd.wheel_vol)
    end
end
Safe.spin_left = function(arg1, arg2) -- line 439
    local local1
    arg1.direction = C_CLOCKWISE
    vd.play_wheel_sfx()
    arg1.current_setting = arg1.current_setting + arg2
    if arg1.current_setting >= 360 then
        arg1.current_setting = arg1.current_setting - 360
    end
    arg1.wheel:setrot(0, 180, arg1.current_setting)
end
Safe.spin_right = function(arg1, arg2) -- line 450
    local local1
    arg1.direction = CLOCKWISE
    vd.play_wheel_sfx()
    arg1.current_setting = arg1.current_setting - arg2
    if arg1.current_setting <= 0 then
        arg1.current_setting = arg1.current_setting + 360
    end
    arg1.wheel:setrot(0, 180, arg1.current_setting)
end
Safe.free = function(arg1) -- line 463
    arg1.tumblers[1]:free()
    arg1.tumblers[2]:free()
    arg1.tumblers[3]:free()
    arg1.tumblers[4]:free()
    arg1.wheel:free()
    stop_script(arg1.monitor_lock)
    stop_script(arg1.monitor_tumblers)
end
vd.hide_actors = function() -- line 476
    vd.safe_door.tumblers[1].actor:set_visibility(FALSE)
    vd.safe_door.tumblers[2].actor:set_visibility(FALSE)
    vd.safe_door.tumblers[3].actor:set_visibility(FALSE)
    vd.safe_door.tumblers[4].actor:set_visibility(FALSE)
    while not vd.door_busted do
        if vd.cameraChange then
            if vd:current_setup() == vd_safex then
                vd.safe_door.tumblers[1].actor:set_visibility(FALSE)
                vd.safe_door.tumblers[2].actor:set_visibility(FALSE)
                vd.safe_door.tumblers[3].actor:set_visibility(FALSE)
                vd.safe_door.tumblers[4].actor:set_visibility(FALSE)
            else
                vd.safe_door.tumblers[1].actor:set_visibility(TRUE)
                vd.safe_door.tumblers[2].actor:set_visibility(TRUE)
                vd.safe_door.tumblers[3].actor:set_visibility(TRUE)
                vd.safe_door.tumblers[4].actor:set_visibility(TRUE)
            end
        end
        break_here()
    end
    vd.safe_door.tumblers[1].actor:set_visibility(TRUE)
    vd.safe_door.tumblers[2].actor:set_visibility(TRUE)
    vd.safe_door.tumblers[3].actor:set_visibility(TRUE)
    vd.safe_door.tumblers[4].actor:set_visibility(TRUE)
end
vd.safe_fun = function() -- line 503
    START_CUT_SCENE()
    if vd.door_busted then
        vd:current_setup(vd_safcu)
        manny:walkto(-0.0345833, 0.276218, 0, 0, 10.5, 0)
        manny:wait_for_actor()
        manny:set_rest_chore(-1)
        manny:play_chore(18, manny.base_costume)
        manny:wait_for_chore()
    else
        manny:walkto(0.00651957, 0.218281, 0, 0, 0, 0)
        manny:wait_for_actor()
        manny:push_costume("mn_open_safe.cos")
        manny:play_chore(mn_open_safe_hand_on_wheel)
        manny:wait_for_chore()
        manny:play_chore(mn_open_safe_hold_wheel)
    end
    inventory_save_handler = system.buttonHandler
    system.buttonHandler = vd.buttonHandler
    END_CUT_SCENE()
end
vd.turn_clockwise = function() -- line 526
    local local1 = 5
    local local2 = 0
    START_CUT_SCENE()
    if vd.door_busted then
        manny:play_chore_looping(49, manny.base_costume)
        while get_generic_control_state("TURN_RIGHT") do
            vd.safe_door:spin_right(local1)
            local2 = 0
            repeat
                vd.safe_door:spin_tumblers_right()
                local2 = local2 + 1
            until local2 == local1
            local1 = local1 + 3
            if local1 >= 20 then
                local1 = 20
            end
            vd.play_wheel_sfx()
            break_here()
        end
        manny:set_chore_looping(49, FALSE, manny.base_costume)
        manny:wait_for_chore(49, manny.base_costume)
    else
        manny:play_chore(mn_open_safe_turn_right)
        start_script(vd.safe_door.spin_right, vd.safe_door, 45)
        manny:wait_for_chore()
        manny:play_chore(mn_open_safe_hold_wheel)
    end
    END_CUT_SCENE()
end
vd.turn_counterclockwise = function() -- line 561
    local local1 = 5
    local local2
    START_CUT_SCENE()
    if vd.door_busted then
        manny:play_chore_looping(49, manny.base_costume)
        while get_generic_control_state("TURN_LEFT") do
            vd.safe_door:spin_left(local1)
            local2 = 0
            repeat
                vd.safe_door:spin_tumblers_left()
                local2 = local2 + 1
            until local2 == local1
            local1 = local1 + 3
            if local1 >= 20 then
                local1 = 20
            end
            vd.play_wheel_sfx()
            break_here()
        end
        manny:set_chore_looping(49, FALSE, manny.base_costume)
        manny:wait_for_chore(49, manny.base_costume)
    else
        manny:play_chore(mn_open_safe_turn_left)
        start_script(vd.safe_door.spin_right, vd.safe_door, 45)
        manny:wait_for_chore()
        manny:play_chore(mn_open_safe_hold_wheel)
    end
    END_CUT_SCENE()
end
vd.back_off = function() -- line 596
    START_CUT_SCENE()
    if vd.door_busted then
        vd:current_setup(vd_safex)
        manny:stop_chore(mn2_use, manny.base_costume)
        manny:stop_chore(mn2_hand_on_obj, manny.base_costume)
        manny:play_chore(mn2_hand_off_obj, manny.base_costume)
        manny:wait_for_chore()
        manny:stop_chore(mn2_hand_off_obj, manny.base_costume)
        manny:set_rest_chore(ms_rest, "mn2.cos")
    else
        manny:play_chore(mn_open_safe_done_turn)
        manny:wait_for_chore()
        manny:pop_costume()
    end
    END_CUT_SCENE()
    system.buttonHandler = inventory_save_handler
end
vd.buttonHandler = function(arg1, arg2, arg3) -- line 616
    if arg1 == EKEY and controlKeyDown and arg2 then
        start_script(execute_user_command)
        bHandled = TRUE
    elseif control_map.TURN_RIGHT[arg1] and arg2 and cutSceneLevel <= 0 then
        single_start_script(vd.turn_clockwise)
    elseif control_map.TURN_LEFT[arg1] and arg2 and cutSceneLevel <= 0 then
        single_start_script(vd.turn_counterclockwise)
    elseif control_map.OVERRIDE[arg1] and arg2 and cutSceneLevel <= 0 then
        single_start_script(vd.back_off)
    elseif control_map.MOVE_BACKWARD[arg1] and arg2 and cutSceneLevel <= 0 then
        single_start_script(vd.back_off)
    else
        CommonButtonHandler(arg1, arg2, arg3)
    end
end
vd.update_music_state = function(arg1) -- line 638
    if meche.locked_up and not vd.door_open then
        return stateVD
    else
        return stateFH
    end
end
vd.enter = function(arg1) -- line 648
    NewObjectState(vd_safex, OBJSTATE_UNDERLAY, "vd_1_lock.bm")
    NewObjectState(vd_safex, OBJSTATE_UNDERLAY, "vd_handle.bm")
    NewObjectState(vd_safex, OBJSTATE_UNDERLAY, "vd_safe_open.bm")
    vd.door_jam:set_object_state("vd_jam.cos")
    vd.handle:set_object_state("vd_handle.cos")
    if not vd.door_open then
        if vd.door_busted then
            vd.door_jam:play_chore(0)
        else
            vd.door_jam:play_chore(1)
        end
        vd.handle:play_chore(0)
        if not vd.safe_door then
            vd.safe_door = Safe:create("safe")
        end
        vd.safe_door:set_up_actors()
        start_script(vd.hide_actors)
    else
        vd.door_jam:play_chore(2)
        vd.handle:play_chore(0)
    end
    MakeSectorActive("safe_passage", FALSE)
    if meche.locked_up and not meche_freed then
        vd.heard_meche = TRUE
        if vd.door_open then
            vd.wheel:make_untouchable()
            vd.handle:make_untouchable()
            vd.door_jam:make_untouchable()
            MakeSectorActive("safe_passage", TRUE)
        elseif vd.door_busted then
            vd.wheel:make_touchable()
            vd.handle:make_touchable()
            vd.door_jam:make_untouchable()
            vd.tumblers:make_touchable()
        else
            start_script(vd.meches_muffled_cries)
            vd.wheel:make_touchable()
            vd.handle:make_touchable()
            vd.door_jam:make_touchable()
        end
    elseif cur_puzzle_state[41] == TRUE then
        vd.wheel:make_touchable()
        vd.handle:make_touchable()
        vd.door_jam:make_untouchable()
        vd.tumblers:make_touchable()
    else
        MakeSectorActive("vd_safcu", FALSE)
        vd.wheel:make_untouchable()
        vd.handle:make_untouchable()
        vd.handle:make_untouchable()
        NewObjectState(vd_safex, OBJSTATE_UNDERLAY, "vd_1_wall.bm")
        vd.handle:set_object_state("vd_wall.cos")
        vd.handle:play_chore(0)
    end
    if vd.tumblers.secured then
        MakeSectorActive("scythe_here", FALSE)
        door_scythe:set_costume("scythe_scythe_door.cos")
        door_scythe:put_in_set(vd)
        door_scythe:setpos(0.0055, 0.33717, 0)
        door_scythe:setrot(0, -6.211, 0)
        door_scythe:play_chore_looping(0)
    end
end
vd.exit = function(arg1) -- line 721
    vd.safe_door:free()
    if door_scythe then
        door_scythe:free()
    end
    stop_script(vd.hide_actors)
    stop_script(vd.meches_muffled_cries)
end
vd.wheel = Object:create(vd, "/vdtx023/wheel", -0.071915798, 0.65689498, 0.34, { range = 0.60000002 })
vd.wheel.use_pnt_x = -0.092005402
vd.wheel.use_pnt_y = 0.44999999
vd.wheel.use_pnt_z = 0
vd.wheel.use_rot_x = 0
vd.wheel.use_rot_y = 8.8126001
vd.wheel.use_rot_z = 0
vd.wheel:make_untouchable()
vd.wheel.lookAt = function(arg1) -- line 745
    soft_script()
    manny:say_line("/vdma024/")
    manny:wait_for_message()
    manny:say_line("/vdma025/")
end
vd.wheel.use = function(arg1) -- line 752
    vd.wheel.tried = TRUE
    if meche_freed then
        system.default_response("not now")
    elseif vd.door_busted then
        if vd.tumblers.alligned then
            if vd.tumblers.secured then
                manny:walkto(0.00651957, 0.218281, 0, 0, 0, 0)
                manny:wait_for_actor()
                manny:push_costume("mn_open_safe.cos")
                manny:play_chore(mn_open_safe_hand_on_wheel)
                manny:wait_for_chore()
                manny:play_chore(mn_open_safe_hold_wheel)
                manny:say_line("/vdma026/")
                wait_for_message()
                manny:play_chore(mn_open_safe_done_turn)
                manny:wait_for_chore()
                manny:pop_costume()
                manny:say_line("/vdma027/")
            else
                start_script(vd.safe_fun)
            end
        else
            start_script(vd.safe_fun)
        end
    else
        start_script(vd.safe_fun)
    end
end
vd.wheel.pickUp = vd.wheel.use
vd.wheel.use_chisel = function(arg1) -- line 784
    manny:say_line("/vdma028/")
end
vd.handle = Object:create(vd, "/vdtx029/handle", -0.320117, 0.57889301, 0.38, { range = 0.60000002 })
vd.handle.use_pnt_x = -0.125559
vd.handle.use_pnt_y = 0.33589101
vd.handle.use_pnt_z = 0
vd.handle.use_rot_x = 0
vd.handle.use_rot_y = 416.95801
vd.handle.use_rot_z = 0
vd.handle:make_untouchable()
vd.handle.lookAt = function(arg1) -- line 800
    manny:say_line("/vdma030/")
end
vd.handle.pickUp = function(arg1) -- line 804
    system.default_response("attached")
end
vd.handle.use = function(arg1) -- line 808
    if meche_freed then
        system.default_response("not now")
    else
        START_CUT_SCENE()
        manny:set_rest_chore(-1)
        manny:walkto_object(arg1)
        manny:wait_for_actor()
        if vd.tumblers.alligned then
            if vd.tumblers.secured then
                vd.open_safe()
            else
                manny:play_chore(ms_hand_on_obj, manny.base_costume)
                manny:wait_for_chore()
                arg1:play_chore(1)
                start_script(vd.safe_door.scramble, vd.safe_door)
                manny:play_chore(ms_hand_off_obj, manny.base_costume)
                manny:wait_for_chore()
                manny:say_line("/vdma031/")
                wait_for_message()
                manny:say_line("/vdma032/")
            end
        else
            manny:play_chore(ms_hand_on_obj, manny.base_costume)
            manny:wait_for_chore()
            arg1:play_chore(1)
            if not vd.tumblers_secured then
                start_script(vd.safe_door.scramble, vd.safe_door)
            end
            manny:play_chore(ms_hand_off_obj, manny.base_costume)
            manny:wait_for_chore()
            if vd.wheel.tried then
                manny:say_line("/vdma033/")
            else
                vd.wheel.tried = TRUE
                vd.wheel:lookAt()
            end
        end
        manny:set_rest_chore(ms_rest, manny.base_costume)
        END_CUT_SCENE()
    end
end
vd.handle.use_chisel = function(arg1) -- line 851
    manny:say_line("/vdma034/")
end
vd.door_jam = Object:create(vd, "/vdtx035/door jam", 0.127995, 0.63, 0.34999999, { range = 0.60000002 })
vd.door_jam.use_pnt_x = 0.057923201
vd.door_jam.use_pnt_y = 0.449918
vd.door_jam.use_pnt_z = 0
vd.door_jam.use_rot_x = 0
vd.door_jam.use_rot_y = -12.8311
vd.door_jam.use_rot_z = 0
vd.door_jam:make_untouchable()
vd.door_jam.lookAt = function(arg1) -- line 867
    soft_script()
    manny:say_line("/vdma036/")
    wait_for_message()
    manny:say_line("/vdma037/")
end
vd.door_jam.use = vd.door_jam.lookAt
vd.door_jam.use_scythe = function(arg1) -- line 876
    soft_script()
    manny:say_line("/vdma038/")
end
vd.door_jam.use_hammer = function(arg1) -- line 881
    manny:say_line("/vdma039/")
end
vd.door_jam.use_chisel = function(arg1) -- line 885
    START_CUT_SCENE()
    vd.door_jam:make_untouchable()
    vd.tumblers:make_touchable()
    manny:walkto(-0.0135804, 0.218281, 0, 0, 0, 0)
    manny:wait_for_actor()
    manny:push_costume("mn_open_safe.cos")
    manny:play_chore(mn_open_safe_drill_prep)
    manny:wait_for_chore()
    manny:stop_chore(mn_open_safe_drill_prep)
    manny:play_chore(mn_open_safe_drill)
    sleep_for(3000)
    StartMovie("safecrak.snm", nil, 152, 0)
    sleep_for(600)
    manny:say_line("/vdma040/")
    manny:stop_chore(mn_open_safe_drill)
    manny:play_chore(mn_open_safe_drill_done)
    wait_for_movie()
    arg1:play_chore(0)
    vd.door_busted = TRUE
    manny:wait_for_chore()
    manny:pop_costume()
    wait_for_message()
    manny:say_line("/vdma041/")
    wait_for_message()
    manny:say_line("/vdma042/")
    END_CUT_SCENE()
    stop_script(vd.meches_muffled_cries)
end
vd.tumblers = Object:create(vd, "/vdtx043/tumblers", 0.127995, 0.63, 0.34999999, { range = 0.60000002 })
vd.tumblers.use_pnt_x = 0.057923201
vd.tumblers.use_pnt_y = 0.449918
vd.tumblers.use_pnt_z = 0
vd.tumblers.use_rot_x = 0
vd.tumblers.use_rot_y = -12.8311
vd.tumblers.use_rot_z = 0
vd.tumblers:make_untouchable()
vd.tumblers.lookAt = function(arg1) -- line 927
    if vd.tumblers.alligned then
        if vd.tumblers.secured then
            manny:say_line("/vdma044/")
        else
            manny:say_line("/vdma045/")
        end
    else
        manny:say_line("/vdma046/")
    end
end
vd.tumblers.use_chisel = function(arg1) -- line 939
    if vd.tumblers.secured or vd.door_open then
        system.default_response("not now")
    elseif meche_freed then
        system.default_response("not now")
    else
        START_CUT_SCENE()
        manny:walkto(-0.0135804, 0.218281, 0, 0, 0, 0)
        manny:wait_for_actor()
        manny:push_costume("mn_open_safe.cos")
        manny:play_chore(mn_open_safe_drill_prep)
        manny:wait_for_chore()
        manny:stop_chore(mn_open_safe_drill_prep)
        manny:play_chore(mn_open_safe_drill)
        sleep_for(500)
        start_script(vd.safe_door.scramble, vd.safe_door)
        sleep_for(3100)
        manny:stop_chore(mn_open_safe_drill)
        manny:play_chore(mn_open_safe_drill_done)
        manny:wait_for_chore()
        manny:pop_costume()
        manny:say_line("/vdma047/")
        END_CUT_SCENE()
    end
end
vd.tumblers.use = function(arg1) -- line 967
    if arg1.secured then
        arg1:pickUp()
    else
        START_CUT_SCENE()
        manny:say_line("/vdma048/")
        wait_for_message()
        END_CUT_SCENE()
        start_script(Sentence, "use", vd_wheel)
    end
end
vd.tumblers.pickUp = function(arg1) -- line 979
    if meche_freed then
        system.default_response("not now")
    else
        START_CUT_SCENE()
        if vd.tumblers.secured then
            manny:walkto(0.0055, 0.33717, 0, 0, -6.211, 0)
            manny:wait_for_actor()
            manny:push_costume("mn_scythe_door.cos")
            door_scythe:free()
            manny:play_chore(mn_scythe_door_scythe_out_door)
            manny:wait_for_chore()
            mo.scythe:get()
            manny.is_holding = mo.scythe
            manny.hold_chore = ms_hold_scythe
            manny:play_chore_looping(mn2_hold_scythe, manny.base_costume)
            vd.tumblers.secured = FALSE
            arg1.name = "tumblers"
            manny:pop_costume()
            MakeSectorActive("scythe_here", TRUE)
        else
            manny:say_line("/vdma049/")
        end
        END_CUT_SCENE()
    end
end
vd.tumblers.use_scythe = function(arg1) -- line 1006
    if meche_freed then
        system.default_response("not now")
    else
        START_CUT_SCENE()
        manny:walkto(0.0055, 0.33717, 0, 0, -6.211, 0)
        manny:wait_for_actor()
        manny:push_costume("mn_scythe_door.cos")
        manny:play_chore(mn_scythe_door_scythe_in_door)
        manny:wait_for_chore()
        if vd.tumblers.alligned then
            mo.scythe:free()
            manny.is_holding = nil
            manny:stop_chore(manny.hold_chore, manny.base_costume)
            manny.hold_chore = nil
            vd.tumblers.secured = TRUE
            arg1.name = "scythe in tumblers"
            if not door_scythe then
                door_scythe = Actor:create(nil, nil, nil, "door scythe")
            end
            door_scythe:set_costume("scythe_scythe_door.cos")
            door_scythe:put_in_set(vd)
            door_scythe:setpos(0.0055, 0.33717, 0)
            door_scythe:setrot(0, -6.211, 0)
            door_scythe:play_chore_looping(0)
            manny:say_line("/vdma050/")
            manny:pop_costume()
            MakeSectorActive("scythe_here", FALSE)
        else
            manny:play_chore(mn_scythe_door_scythe_out_door)
            manny:wait_for_chore()
            manny:pop_costume()
            mo.scythe.owner = manny
            manny.is_holding = mo.scythe
            manny.hold_chore = ms_activate_scythe
            manny:play_chore_looping(manny.hold_chore, manny.base_costume)
            manny:say_line("/vdma051/")
        end
        END_CUT_SCENE()
    end
end
vd.fh_door = Object:create(vd, "door", -0.186533, -0.231243, 0.44999999, { range = 0.60000002 })
vd.fh_door.use_pnt_x = -0.186533
vd.fh_door.use_pnt_y = -0.231243
vd.fh_door.use_pnt_z = 0
vd.fh_door.use_rot_x = 0
vd.fh_door.use_rot_y = -170.83299
vd.fh_door.use_rot_z = 0
vd.fh_door.out_pnt_x = -0.186533
vd.fh_door.out_pnt_y = -0.231243
vd.fh_door.out_pnt_z = 0
vd.fh_door.out_rot_x = 0
vd.fh_door.out_rot_y = -170.83299
vd.fh_door.out_rot_z = 0
vd.fh_box = vd.fh_door
vd.fh_door.touchable = FALSE
vd.fh_door.walkOut = function(arg1) -- line 1070
    fh:come_out_door(fh.vd_door)
end
vd.vo_door = Object:create(vd, "door", -0.0449185, 0.82523298, 0.49399999, { range = 0.60000002 })
vd.vo_door.use_pnt_x = -0.0449185
vd.vo_door.use_pnt_y = 0.474233
vd.vo_door.use_pnt_z = 0
vd.vo_door.use_rot_x = 0
vd.vo_door.use_rot_y = -5035.4102
vd.vo_door.use_rot_z = 0
vd.vo_door.out_pnt_x = -0.112959
vd.vo_door.out_pnt_y = 0.64996803
vd.vo_door.out_pnt_z = 0
vd.vo_door.out_rot_x = 0
vd.vo_door.out_rot_y = -356.367
vd.vo_door.out_rot_z = 0
vd.vo_door:make_untouchable()
vd.vo_door.walkOut = function(arg1) -- line 1096
    vo:come_out_door(vo.vd_door)
end
vd.vo_door.lookAt = function(arg1) -- line 1100
    manny:say_line("/vdma053/")
end
vd.ar_door = Object:create(vd, "door", 0.50083399, 2.45, 0, { range = 0.60000002 })
vd.ar_door.use_pnt_x = 0.47602099
vd.ar_door.use_pnt_y = 2.0909801
vd.ar_door.use_pnt_z = 0
vd.ar_door.use_rot_x = 0
vd.ar_door.use_rot_y = 185.078
vd.ar_door.use_rot_z = 0
vd.ar_door.out_pnt_x = 0.50083399
vd.ar_door.out_pnt_y = 2.45
vd.ar_door.out_pnt_z = 0
vd.ar_door.out_rot_x = 0
vd.ar_door.out_rot_y = -373.83701
vd.ar_door.out_rot_z = 0
vd.ar_box = vd.ar_door
vd.ar_door.comeOut = function(arg1) -- line 1121
    vd:current_setup(vd_safex)
    Object.come_out_door(arg1)
end
vd.ar_door.walkOut = function(arg1) -- line 1126
    ar:come_out_door(ar.vd_door)
end
vd.ar_door.lookAt = function(arg1) -- line 1130
    if dr.reunited then
        manny:say_line("/vdma054/")
    else
        manny:say_line("/vdma055/")
    end
end
vd_open_Chore0 = 0
vd_open_Chore1 = 1
vd_wall_Chore0 = 0
ve_hauls_ma_walk = 0
velasco_idles_up_on_toes = 0
velasco_idles_tilt_up = 1
velasco_idles_tilt_left = 2
velasco_idles_tilt_hold = 3
velasco_idles_standing = 4
velasco_idles_rocking = 5
velasco_idles_on_toes = 6
velasco_idles_looks_right = 7
velasco_idles_looks_hold = 8
velasco_idles_looks_forward = 9
velasco_idles_hold_down = 10
velasco_idles_down_from_toes = 11
velasco_idles_bending_up = 12
velasco_idles_bending_down = 13
velasco_idles_give_logbook = 14
velasco_idles_back_to_rest = 15
velasco_idles_stop_give_logbook = 16
velasco_mumble = 0
velasco_m = 1
velasco_f = 2
velasco_e = 3
velasco_u = 4
velasco_a = 5
velasco_o = 6
velasco_t = 7
velasco_c = 8
velasco_stop_talk = 9
velasco_stand = 10
velasco_walk = 11
velasco_l = 12
ve_talks_to_ma_lookdown_idle = 0
ve_talks_to_ma_turn_around = 1
ve_talks_to_ma_talk2 = 2
ve_talks_to_ma_talk_idle = 3
ve_talks_to_ma_thinking = 4
ve_talks_to_ma_return_back = 5
ve_talks_to_ma_face_manny = 6
ve_talks_to_ma_tinker = 7
ve_talks_to_ma_back_and_tinker = 8
ve_talks_to_ma_stop_tinker = 9
ve_talk_to_membrillo_phone = 0
ve_talk_to_membrillo_hangup = 1
ve_talk_to_membrillo_fix_model = 2
ve_talk_to_membrillo_what = 3
ve_talk_to_membrillo_how = 4
ve_talk_to_membrillo_sprouted = 5
ve_talk_to_membrillo_hell = 6
ve_talk_to_membrillo_sailor = 7
ve_talk_to_membrillo_sigh = 8
CheckFirstTime("vi.lua")
dofile("mn_suitcase.lua")
vi = Set:create("vi.set", "vault interior", { vi_top = 0, vi_intla = 1 })
vi.additional_water_droplets = function(arg1) -- line 13
    while 1 do
        sleep_for(rndint(400, 1500))
        single_start_sfx(pick_one_of({ "swrDrop1.wav", "swrDrop2.wav", "swrDrop3.wav", "swrDrop4.wav" }), IM_LOW_PRIORITY, rndint(80, 127))
        break_here()
    end
end
vi.start_sprinkler = function() -- line 22
    START_CUT_SCENE()
    meche_idle_ok = FALSE
    vi.sprinklers_going = TRUE
    vi.sprinkler:play_chore_looping(0)
    start_sfx("viSprink.imu")
    start_script(vi.additional_water_droplets)
    if not vi.tried_sprinklers then
        vi.tried_sprinklers = TRUE
        manny:say_line("/vima001/")
        wait_for_message()
        IrisDown(355, 245, 1000)
        sleep_for(1500)
        IrisUp(215, 280, 1000)
        vi.valve:play_chore(1)
        manny:say_line("/vima002/")
        wait_for_message()
        meche:say_line("/vimc003/")
        wait_for_message()
        music_state:set_sequence(seqSprinkler)
    else
        sleep_for(500)
        meche:say_line("/vimc004/")
        wait_for_message()
        music_state:set_sequence(seqSprinkler)
        IrisDown(355, 245, 1000)
        sleep_for(500)
        IrisUp(215, 280, 1000)
        vi.valve:play_chore(1)
    end
    meche_idle_ok = TRUE
    END_CUT_SCENE()
end
vi.stop_sprinkler = function() -- line 58
    START_CUT_SCENE()
    meche_idle_ok = FALSE
    vi.sprinklers_going = FALSE
    vi.sprinkler:stop_chore(0)
    vi.sprinkler:play_chore(1)
    stop_sound("viSprink.imu")
    stop_script(vi.additional_water_droplets)
    vi.valve:play_chore(2)
    meche:say_line("/vimc005/")
    StartMovie("vi.snm", nil, 40, 305)
    start_sfx("viSprnOf.wav")
    wait_for_movie()
    meche_idle_ok = TRUE
    END_CUT_SCENE()
end
vi.bicker = function() -- line 75
    vi.bickered = TRUE
    meche_idle_ok = FALSE
    break_here()
    meche:say_line("/vimc006/")
    meche:wait_for_message()
    meche:say_line("/vimc007/")
    meche:wait_for_message()
    meche_idle_ok = TRUE
end
vi.reconcile = function() -- line 86
    START_CUT_SCENE()
    meche_idle_ok = FALSE
    manny:say_line("/vima008/")
    wait_for_message()
    meche:say_line("/vimc009/")
    wait_for_message()
    meche:say_line("/vimc010/")
    wait_for_message()
    meche:say_line("/vimc011/")
    meche_idle_ok = TRUE
    END_CUT_SCENE()
end
vi.meche_lookat_manny = function() -- line 102
    while 1 do
        meche:head_look_at_manny()
        break_here()
    end
end
vi.discover_tickets = function() -- line 109
    vi.suitcases.seen = TRUE
    meche_idle_ok = FALSE
    START_CUT_SCENE()
    MakeSectorActive("suitcase_box", TRUE)
    start_script(manny.walkto, manny, -1.09908, -0.465614, 0, 0, 31.61, 0)
    manny:say_line("/vima012/")
    wait_for_message()
    meche:say_line("/vimc013/")
    meche:play_chore_looping(meche_in_vi_walk)
    while TurnActorTo(meche.hActor, -1.09908, -0.465614, 0) do
        break_here()
    end
    meche:stop_chore(meche_in_vi_walk)
    wait_for_message()
    manny:wait_for_actor()
    manny:push_costume("mn_suitcase.cos")
    manny:play_chore(0, "mn_suitcase.cos")
    sleep_for(1500)
    music_state:set_sequence(seqDeadTix)
    suitcase3:set_visibility(FALSE)
    start_script(vi.meche_lookat_manny)
    meche:say_line("/vimc014/")
    wait_for_message()
    meche:say_line("/vimc015/")
    wait_for_message()
    meche:say_line("/vimc016/")
    wait_for_message()
    manny:say_line("/vima017/")
    manny:play_chore(mn_suitcase_close, "mn_suitcase.cos")
    wait_for_message()
    meche:say_line("/vimc018/")
    manny:wait_for_chore()
    wait_for_message()
    manny:pop_costume()
    suitcase3:set_visibility(TRUE)
    if find_script(vi.escape_safe) then
        manny:walkto(-0.904647, -0.474899, 0, 0, -440, 0)
    else
        manny:walkto(-0.727755, -0.176263, 0, 0, 33, 0)
    end
    manny:say_line("/vima019/")
    wait_for_message()
    manny:wait_for_actor()
    manny:say_line("/vima020/")
    manny:push_costume("mn_gestures.cos")
    manny:play_chore(manny_gestures_hand_gesture)
    wait_for_message()
    manny:say_line("/vima021/")
    wait_for_message()
    meche:say_line("/vimc022/")
    wait_for_message()
    manny:say_line("/vima023/")
    manny:play_chore(manny_gestures_head_nod)
    manny:wait_for_chore()
    manny:play_chore(manny_gestures_pointing)
    wait_for_message()
    manny:wait_for_chore()
    manny:say_line("/vima024/")
    manny:play_chore(manny_gestures_shrug)
    wait_for_message()
    manny:say_line("/vima025/")
    wait_for_message()
    MakeSectorActive("suitcase_box", TRUE)
    manny:pop_costume()
    vi.suitcases:lookAt()
    stop_script(vi.meche_lookat_manny)
    meche:head_look_at(nil)
    END_CUT_SCENE()
    meche_idle_ok = TRUE
end
vi.break_tile = function() -- line 182
    meche_idle_ok = FALSE
    START_CUT_SCENE()
    vi.tile_broken = TRUE
    vi.valve:play_chore(0)
    vi.valve:wait_for_chore()
    END_CUT_SCENE()
end
vi.escape_safe = function() -- line 192
    meche_freed = TRUE
    cur_puzzle_state[41] = TRUE
    START_CUT_SCENE()
    MakeSectorActive("suitcase_box", TRUE)
    manny:walkto(0.101501, -0.338144, 0, 0, -270.681, 0)
    manny:wait_for_actor()
    meche:follow_boxes()
    manny:say_line("/vima026/")
    manny:hand_gesture()
    wait_for_message()
    meche:say_line("/vimc027/")
    meche:play_chore_looping(meche_in_vi_walk)
    local local1 = start_script(meche.walkto, meche, -0.24616, -0.21772, 0, 0, 180, 0)
    wait_for_script(local1)
    meche:stop_chore(meche_in_vi_walk)
    meche:play_chore(meche_in_vi_hands_down_hold)
    wait_for_message()
    if not vi.suitcases.seen then
        vi.discover_tickets()
        wait_for_message()
        manny:say_line("/vima028/")
        manny:shrug_gesture()
        meche:play_chore_looping(meche_in_vi_walk)
        local local2 = start_script(meche.walkto, meche, -0.24616, -0.21772, 0, 0, 180, 0)
        wait_for_script(local2)
        meche:stop_chore(meche_in_vi_walk)
    else
        manny:say_line("/vima029/")
        manny:shrug_gesture()
    end
    wait_for_message()
    manny:say_line("/vima030/")
    manny:twist_head_gesture()
    wait_for_message()
    manny:say_line("/vima031/")
    wait_for_message()
    meche:play_chore(meche_in_vi_slide)
    meche:wait_for_chore()
    meche:free()
    stop_sound("viSprink.imu")
    stop_script(vi.additional_water_droplets)
    music_state:set_sequence(seqYr3Iris)
    IrisDown(355, 245, 1000)
    sleep_for(1500)
    stop_script(vo.exit_with_axe)
    vo_axe:free()
    END_CUT_SCENE()
    if raised_lamancha then
        start_script(bl.everybodys_here)
    else
        start_script(bl.passengers_before_boat)
    end
end
vi.meche_hold = function(arg1, arg2) -- line 250
    local local1 = rnd(arg1, arg2)
    if meche_idle_ok then
        repeat
            local1 = local1 - PerSecond(1)
            break_here()
            if not meche_idle_ok then
                local1 = 0
            end
        until local1 <= 0
    end
end
vi.meche_head_idle = function() -- line 263
    meche_idle_ok = TRUE
    while not vi.tile_broken do
        while meche_idle_ok do
            if manny_has_axe then
                meche:head_look_at_manny()
                while manny_has_axe do
                    break_here()
                end
            else
                meche:head_look_at_point({ x = -0.539173, y = 0.482942, z = 0.276 })
                vi.meche_hold(0.5, 5)
                meche:head_look_at_point({ x = -0.607073, y = 0.219642, z = 0.6374 })
                vi.meche_hold(0.5, 5)
                meche:head_look_at_point({ x = -0.813073, y = 0.219642, z = 0.4295 })
                vi.meche_hold(0.5, 5)
                meche:head_look_at_point({ x = -0.753373, y = 0.247742, z = 0.5051 })
                vi.meche_hold(0.5, 5)
                meche:head_look_at_point({ x = -0.994773, y = 0.288742, z = 0.244 })
                vi.meche_hold(0.5, 5)
            end
        end
        meche:head_look_at_manny()
        while not meche_idle_ok do
            break_here()
        end
    end
    meche:head_look_at(nil)
end
vi.meche_arm_idle = function() -- line 294
    meche:play_chore(meche_in_vi_xarms)
    meche:wait_for_chore()
    while not vi.tile_broken do
        while meche_idle_ok do
            meche:play_chore(meche_in_vi_drop_hands)
            meche:wait_for_chore()
            vi.meche_hold(5, 9)
            meche:play_chore(meche_in_vi_xarms)
            meche:wait_for_chore()
            vi.meche_hold(5, 9)
        end
        break_here()
    end
    meche:play_chore(meche_in_vi_xarms)
    meche:wait_for_chore()
end
vi.set_up_actors = function(arg1) -- line 314
    if not suitcase1 then
        suitcase1 = Actor:create(nil, nil, nil, "case")
    end
    suitcase1:set_costume("mn_suitcase.cos")
    suitcase1:put_in_set(vi)
    suitcase1:setpos(-1.06803, -0.238608, -0.139)
    suitcase1:setrot(0, 75.6, 0)
    suitcase1:play_chore(mn_suitcase_suitcase_only)
    if not suitcase2 then
        suitcase2 = Actor:create(nil, nil, nil, "case")
    end
    suitcase2:set_costume("mn_suitcase.cos")
    suitcase2:put_in_set(vi)
    suitcase2:setpos(-1.14757, -0.4833, -0.064)
    suitcase2:setrot(0, 16.6, 0)
    suitcase2:play_chore(mn_suitcase_suitcase_only)
    if not suitcase3 then
        suitcase3 = Actor:create(nil, nil, nil, "case")
    end
    suitcase3:set_costume("mn_suitcase.cos")
    suitcase3:put_in_set(vi)
    suitcase3:setpos(-1.09908, -0.465614, 0)
    suitcase3:setrot(0, 31.61, 0)
    suitcase3:play_chore(mn_suitcase_suitcase_only)
    meche:set_costume("meche_in_vi.cos")
    meche:set_mumble_chore(meche_in_vi_mumble)
    meche:set_talk_chore(1, meche_in_vi_stop_talk)
    meche:set_talk_chore(2, meche_in_vi_a)
    meche:set_talk_chore(3, meche_in_vi_c)
    meche:set_talk_chore(4, meche_in_vi_e)
    meche:set_talk_chore(5, meche_in_vi_f)
    meche:set_talk_chore(6, meche_in_vi_l)
    meche:set_talk_chore(7, meche_in_vi_m)
    meche:set_talk_chore(8, meche_in_vi_o)
    meche:set_talk_chore(9, meche_in_vi_t)
    meche:set_talk_chore(10, meche_in_vi_u)
    meche:set_head(5, 5, 5, 165, 28, 80)
    meche:set_look_rate(200)
    meche:put_in_set(vi)
    meche:ignore_boxes()
    meche:setpos(-0.829475, 0.313889, 0)
    meche:setrot(0, 213, 0)
    meche.footsteps = footsteps.reverb
    start_script(vi.meche_head_idle)
    start_script(vi.meche_arm_idle)
end
vi.enter = function(arg1) -- line 372
    MakeSectorActive("suitcase_box", FALSE)
    vi:current_setup(vi_intla)
    vi:set_up_actors()
    if not vi.bickered and not find_script(slide_show) then
        start_script(vi.bicker)
    end
    NewObjectState(vi_intla, OBJSTATE_UNDERLAY, "vi_tile.bm")
    NewObjectState(vi_intla, OBJSTATE_UNDERLAY, "vi_water_tile.bm")
    vi.valve:set_object_state("vi_tile.cos")
    NewObjectState(vi_intla, OBJSTATE_UNDERLAY, "vi_sprinkler.bm")
    vi.sprinkler:set_object_state("vi_sprinkler.cos")
    if vi.sprinklers_going then
        vi.valve:play_chore(1)
        vi.sprinkler:play_chore_looping(0)
        start_script(vi.additional_water_droplets)
        start_sfx("viSprink.imu")
    else
        vi.valve:play_chore(2)
        vi.sprinkler:play_chore(1)
    end
    MakeSectorActive("meche_box", FALSE)
    if manny_has_axe then
        MakeSectorActive("noax1", FALSE)
        MakeSectorActive("noax2", FALSE)
        MakeSectorActive("noax3", FALSE)
    else
        MakeSectorActive("noax1", TRUE)
        MakeSectorActive("noax2", TRUE)
        MakeSectorActive("noax3", TRUE)
    end
    if vo_axe.currentSet == system.currentSet then
        vo_axe:put_in_set(vi)
        vo_axe:setpos(vo_axe.pos_x, vo_axe.pos_y, vo_axe.pos_z)
        vo_axe:setrot(vo_axe.rot_x, vo_axe.rot_y, vo_axe.rot_z)
        vo_axe:set_costume("mn_lift_ax.cos")
        vo_axe:play_chore(3)
    end
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, -0.7, 0.2, 3.2)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(meche.hActor, 0)
    SetActorShadowPoint(meche.hActor, -0.7, 0.2, 3.2)
    SetActorShadowPlane(meche.hActor, "shadow1")
    AddShadowPlane(meche.hActor, "shadow1")
end
vi.exit = function(arg1) -- line 429
    meche:free()
    suitcase1:free()
    suitcase2:free()
    suitcase3:free()
    stop_script(vi.meche_head_idle)
    stop_script(vi.meche_arm_idle)
    stop_script(vi.additional_water_droplets)
    stop_sound("viSprink.imu")
    KillActorShadows(manny.hActor)
    KillActorShadows(meche.hActor)
end
vi.suitcases = Object:create(vi, "/vitx032/suitcases", -1.3056901, -0.404212, 0.27000001, { range = 0.60000002 })
vi.suitcases.use_pnt_x = -1.01569
vi.suitcases.use_pnt_y = -0.53421199
vi.suitcases.use_pnt_z = 0
vi.suitcases.use_rot_x = 0
vi.suitcases.use_rot_y = -279.534
vi.suitcases.use_rot_z = 0
vi.suitcases.lookAt = function(arg1) -- line 457
    if not arg1.seen then
        start_script(vi.discover_tickets)
    else
        manny:say_line("/vima033/")
    end
end
vi.suitcases.pickUp = vi.suitcases.lookAt
vi.suitcases.use = vi.suitcases.lookAt
vi.valve = Object:create(vi, "/vitx034/valve", -0.192596, -1.20491, 0.31, { range = 0.60000002 })
vi.valve.use_pnt_x = -0.385097
vi.valve.use_pnt_y = -1.23524
vi.valve.use_pnt_z = 0
vi.valve.use_rot_x = 0
vi.valve.use_rot_y = -436.32101
vi.valve.use_rot_z = 0
vi.valve.opened = TRUE
vi.valve.lookAt = function(arg1) -- line 479
    manny:say_line("/vima035/")
end
vi.valve.open = function(arg1) -- line 483
    arg1.opened = TRUE
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:set_rest_chore(nil)
    manny:play_chore(mn2_reach_med, manny.base_costume)
    start_sfx("viValve.wav", nil, 90)
    manny:wait_for_chore()
    manny:set_rest_chore(mn2_rest, manny.base_costume)
    END_CUT_SCENE()
    if vi.sprinkler_activated then
        start_script(vi.start_sprinkler)
    end
end
vi.valve.close = function(arg1) -- line 499
    arg1.opened = FALSE
    START_CUT_SCENE()
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:set_rest_chore(nil)
    manny:play_chore(mn2_reach_med, manny.base_costume)
    start_sfx("viValve.wav", nil, 90)
    manny:wait_for_chore()
    manny:set_rest_chore(mn2_rest, manny.base_costume)
    END_CUT_SCENE()
    if vi.sprinkler_activated then
        start_script(vi.stop_sprinkler)
    end
end
vi.valve.use = function(arg1) -- line 515
    if arg1:is_open() then
        arg1:close()
    else
        arg1:open()
    end
end
vi.meche_obj = Object:create(vi, "/vitx036/Meche", -0.811068, 0.30837601, 0.52029997, { range = 0.69999999 })
vi.meche_obj.use_pnt_x = -0.77146798
vi.meche_obj.use_pnt_y = -0.128224
vi.meche_obj.use_pnt_z = 0
vi.meche_obj.use_rot_x = 0
vi.meche_obj.use_rot_y = 44.716599
vi.meche_obj.use_rot_z = 0
vi.meche_obj.lookAt = function(arg1) -- line 531
    if vi.sprinklers_going then
        manny:say_line("/vima037/")
    elseif not vi.reconciled then
        manny:say_line("/vima038/")
    else
        arg1:use()
    end
end
vi.meche_obj.pickUp = function(arg1) -- line 543
    START_CUT_SCENE()
    manny:say_line("/vima039/")
    wait_for_message()
    meche:say_line("/vimc040/")
    meche:wait_for_message()
    manny:say_line("/vima040b/")
    END_CUT_SCENE()
end
vi.meche_obj.use = function(arg1) -- line 553
    if not vi.reconciled then
        vi.reconciled = TRUE
        start_script(vi.reconcile)
    else
        START_CUT_SCENE()
        manny:say_line("/vima041/")
        wait_for_message()
        meche:say_line("/vimc042/")
        END_CUT_SCENE()
    end
end
vi.drain = Object:create(vi, "/vitx043/drain", -0.47740099, -0.653943, 0, { range = 0.60000002 })
vi.drain.use_pnt_x = -0.25740099
vi.drain.use_pnt_y = -0.52394301
vi.drain.use_pnt_z = 0
vi.drain.use_rot_x = 0
vi.drain.use_rot_y = -966.367
vi.drain.use_rot_z = 0
vi.drain:make_untouchable()
vi.vent = Object:create(vi, "/vitx044/vent", -0.85521197, 0.46798399, 1.21, { range = 1.5 })
vi.vent.use_pnt_x = -0.41288999
vi.vent.use_pnt_y = 0.16989399
vi.vent.use_pnt_z = 0
vi.vent.use_rot_x = 0
vi.vent.use_rot_y = -1026.98
vi.vent.use_rot_z = 0
vi.vent.lookAt = function(arg1) -- line 585
    manny:say_line("/vima045/")
end
vi.vent.use = function(arg1) -- line 589
    START_CUT_SCENE()
    manny:say_line("/vima046/")
    if not arg1.tried then
        arg1.tried = TRUE
        wait_for_message()
        meche:say_line("/vimc047/")
        wait_for_message()
        manny:say_line("/vima048/")
    end
    END_CUT_SCENE()
end
vi.vent.use_scythe = function(arg1) -- line 602
    manny:say_line("/vima049/")
end
vi.sprinkler = Object:create(vi, "/vitx050/sprinkler", -0.14229301, 0.264732, 1.02, { range = 1.3 })
vi.sprinkler.use_pnt_x = -0.246362
vi.sprinkler.use_pnt_y = -0.056466099
vi.sprinkler.use_pnt_z = 0
vi.sprinkler.use_rot_x = 0
vi.sprinkler.use_rot_y = 117.803
vi.sprinkler.use_rot_z = 0
vi.sprinkler.lookAt = function(arg1) -- line 615
    manny:say_line("/vima051/")
end
vi.sprinkler.use = function(arg1) -- line 619
    manny:say_line("/vima052/")
end
vi.sprinkler.use_chisel = vi.sprinkler.use
vi.sprinkler.use_scythe = function(arg1) -- line 625
    manny:walkto_object(arg1)
    manny:wait_for_actor()
    manny:push_costume("mn_scythe_sprinkler.cos")
    manny:play_chore(0)
    sleep_for(2200)
    start_sfx("viChop.wav")
    manny:wait_for_chore()
    manny:pop_costume()
    vi.sprinkler_activated = TRUE
    if vi.valve.opened then
        wait_for_message()
        start_script(vi.start_sprinkler)
    end
end
vi.broadaxe = Object:create(vi, "axe", 0, 0, 0, { range = 1 })
vi.broadaxe.use_pnt_x = 0
vi.broadaxe.use_pnt_y = 0
vi.broadaxe.use_pnt_z = 0
vi.broadaxe.use_rot_x = 0
vi.broadaxe.use_rot_y = 0
vi.broadaxe.use_rot_z = 0
vi.broadaxe:make_untouchable()
vi.broadaxe.lookAt = function(arg1) -- line 652
    manny:say_line("/voma044/")
end
vi.broadaxe.pickUp = function(arg1) -- line 657
    vo.get_axe()
end
vi.broadaxe.use = function(arg1) -- line 661
    vo.get_axe()
end
vi.broadaxe.default_response = vi.broadaxe.use
vi.vo_door = Object:create(vi, "/vitx053/secret door", 2.00371, -0.26364201, 0.47, { range = 0.69999999 })
vi.vo_door.use_pnt_x = 1.2337101
vi.vo_door.use_pnt_y = -0.26364201
vi.vo_door.use_pnt_z = 0
vi.vo_door.use_rot_x = 0
vi.vo_door.use_rot_y = -455.82001
vi.vo_door.use_rot_z = 0
vi.vo_door.out_pnt_x = 1.6
vi.vo_door.out_pnt_y = -0.30083799
vi.vo_door.out_pnt_z = 0
vi.vo_door.out_rot_x = 0
vi.vo_door.out_rot_y = -455.82001
vi.vo_door.out_rot_z = 0
vi.vo_door.walkOut = function(arg1) -- line 688
    if manny_has_axe then
        vo:switch_to_set()
        manny:setpos(-1.01436, 1.01177, 0)
        manny:setrot(0, -280, 0)
        manny:put_in_set(vo)
        vo_axe:put_in_set(vo)
        vi.broadaxe:make_untouchable()
        vo.broadaxe:make_touchable()
    else
        vo:come_out_door(vo.secret_door)
    end
end
vi.vo_door.lookAt = function(arg1) -- line 702
    manny:say_line("/vima054/")
end
vi_sprinkler_Chore0 = 0
vi_sprinkler_Chore1 = 1
vi_tile_Chore0 = 0
vi_tile_Chore1 = 1
vi_tile_Chore2 = 2
vo_door_Chore0 = 0
vo_door_Chore1 = 1
CheckFirstTime("vo.lua")
dofile("mn_lift_ax.lua")
dofile("meche_in_vi.lua")
vo = Set:create("vo.set", "outer vault", { vo_overhead = 0, vo_intha = 1, vo_amrms = 2 })
vault_meche_init = function() -- line 15
    meche:set_walk_chore(meche_in_vi_walk, "meche_in_vi.cos")
    meche:set_rest_chore(meche_in_vi_hands_down_hold, "meche_in_vi.cos")
end
aa = function() -- line 21
    start_script(vo.open_secret_door)
end
vo.open_secret_door = function() -- line 25
    local local1
    cur_puzzle_state[40] = TRUE
    START_CUT_SCENE()
    manny:walkto(-0.079352997, 0.39862201, 0, 0, -86.685699, 0)
    manny:wait_for_actor()
    manny:push_costume("mn_scythe_door.cos")
    manny:stop_chore(mn2_hold_scythe, "mn2.cos")
    manny:play_chore(mn_scythe_door_to_scythe_short)
    manny:wait_for_chore()
    StartMovie("vo_vault.snm", nil, 320, 90)
    vo.secret_door:make_touchable()
    vo.secret_door.opened = TRUE
    vo:update_states()
    manny:play_chore(mn_scythe_door_stop_scythe_short)
    manny:wait_for_chore()
    manny:pop_costume()
    manny:play_chore_looping(mn2_hold_scythe, "mn2.cos")
    wait_for_movie()
    wait_for_message()
    meche:set_costume("meche_sit.cos")
    meche:set_mumble_chore(meche_sit_mumble)
    meche:set_talk_chore(1, meche_sit_no_talk)
    meche:set_talk_chore(2, meche_sit_a)
    meche:set_talk_chore(3, meche_sit_c)
    meche:set_talk_chore(4, meche_sit_e)
    meche:set_talk_chore(5, meche_sit_f)
    meche:set_talk_chore(6, meche_sit_l)
    meche:set_talk_chore(7, meche_sit_m)
    meche:set_talk_chore(8, meche_sit_o)
    meche:set_talk_chore(9, meche_sit_t)
    meche:set_talk_chore(10, meche_sit_u)
    meche:push_costume("meche_in_vi.cos")
    meche:put_in_set(vo)
    meche:setpos(-1.47453, 1.4645, 0)
    meche:setrot(0, -152.509, 0)
    meche:set_walk_rate(0.30000001)
    meche:follow_boxes()
    meche.footsteps = footsteps.reverb
    meche:play_chore_looping(meche_in_vi_walk, "meche_in_vi.cos")
    local local2 = start_script(meche.walkto, meche, -1.27968, 1.1593, 0, 0, -129.48, 0)
    wait_for_script(local2)
    meche:stop_chore(meche_in_vi_walk, "meche_in_vi.cos")
    meche:play_chore(meche_in_vi_hands_down_hold, "meche_in_vi.cos")
    manny:head_look_at(nil)
    manny:turn_right(180)
    meche:say_line("/vomc001/")
    wait_for_message()
    meche:say_line("/vomc003/")
    meche:play_chore(meche_in_vi_xarms)
    meche:wait_for_chore()
    wait_for_message()
    manny:say_line("/voma004/")
    wait_for_message()
    manny:say_line("/voma005/")
    meche:play_chore(meche_in_vi_drop_hands)
    meche:wait_for_chore()
    meche:play_chore_looping(meche_in_vi_walk)
    meche:walkto(-1.47453, 1.4645, 0)
    wait_for_message()
    meche:say_line("/vomc006/")
    wait_for_message()
    meche:free()
    END_CUT_SCENE()
end
vo.close_safe = function() -- line 94
    START_CUT_SCENE()
    vd.door_open = FALSE
    vd.tumblers.alligned = FALSE
    vd.tumblers.secured = FALSE
    vd.tumblers:make_touchable()
    vd.wheel:make_touchable()
    vd.handle:make_touchable()
    vo.vd_door:lock()
    manny:walkto_object(vo.open_door)
    manny:wait_for_actor()
    manny:set_rest_chore(-1)
    manny:play_chore(ms_hand_on_obj, "mn2.cos")
    manny:wait_for_chore()
    manny:play_chore(ms_hand_off_obj, "mn2.cos")
    StartMovie("vo_safe.snm", nil, 0, 120)
    wait_for_movie()
    vo:update_states()
    manny:wait_for_actor()
    manny:set_rest_chore(ms_rest, "mn2.cos")
    manny:say_line("/voma007/")
    wait_for_message()
    manny:say_line("/voma008/")
    wait_for_message()
    manny:say_line("/voma009/")
    END_CUT_SCENE()
end
vo.get_axe = function() -- line 122
    START_CUT_SCENE()
    start_script(vo.lockup_watcher)
    if system.currentSet == vo then
        manny:walkto_object(vo.broadaxe)
        MakeSectorActive("noax1", FALSE)
        MakeSectorActive("noax2", FALSE)
        MakeSectorActive("noax3", FALSE)
        MakeSectorActive("noax4", FALSE)
        MakeSectorActive("noax5", FALSE)
        MakeSectorActive("noax6", FALSE)
        MakeSectorActive("noax7", FALSE)
        MakeSectorActive("noax8", FALSE)
        MakeSectorActive("noax9", FALSE)
        MakeSectorActive("noax10", FALSE)
        MakeSectorActive("noax11", FALSE)
        MakeSectorActive("under_door", FALSE)
        if not vd.door_open then
            MakeSectorActive("door_open", TRUE)
            MakeSectorActive("door_open2", TRUE)
        else
            MakeSectorActive("door_open", FALSE)
            MakeSectorActive("door_open2", FALSE)
        end
        if vo.secret_door.opened then
            MakeSectorActive("axe_exit", TRUE)
            MakeSectorActive("secret_pass1", FALSE)
            MakeSectorActive("secret_pass2", FALSE)
        else
            MakeSectorActive("axe_exit", FALSE)
        end
    else
        manny:walkto_object(vi.broadaxe)
        MakeSectorActive("noax1", FALSE)
        MakeSectorActive("noax2", FALSE)
        MakeSectorActive("noax3", FALSE)
        MakeSectorActive("noax4", FALSE)
    end
    manny:wait_for_actor()
    manny:follow_boxes()
    manny.base_costume = "mn2.cos"
    manny.gesture_costume = "mn_gestures.cos"
    manny:set_costume(manny.base_costume)
    manny:set_walk_rate(0.4)
    manny:set_mumble_chore(mn2_mumble)
    manny:set_talk_chore(1, mn2_stop_talk)
    manny:set_talk_chore(2, mn2_a)
    manny:set_talk_chore(3, mn2_c)
    manny:set_talk_chore(4, mn2_e)
    manny:set_talk_chore(5, mn2_f)
    manny:set_talk_chore(6, mn2_l)
    manny:set_talk_chore(7, mn2_m)
    manny:set_talk_chore(8, mn2_o)
    manny:set_talk_chore(9, mn2_t)
    manny:set_talk_chore(9, mn2_u)
    manny:set_turn_rate(85)
    manny.talk_chore = ms_talk
    manny.stop_talk_chore = ms_stop_talk
    manny:push_costume("mn_lift_ax.cos")
    manny:play_chore(mn_lift_ax_lift_ax)
    sleep_for(1300)
    start_sfx("voAxGet.wav")
    vo_axe:set_visibility(FALSE)
    SetActorReflection(manny.hActor, 90)
    manny:wait_for_chore()
    END_CUT_SCENE()
    manny.idles_allowed = FALSE
    manny_has_axe = TRUE
    inventory_disabled = TRUE
    inventory_save_handler = system.buttonHandler
    system.buttonHandler = axeButtonHandler
    vo.broadaxe:make_untouchable()
    vi.broadaxe:make_untouchable()
    manny:set_walk_chore(nil)
    manny:set_rest_chore(nil)
    manny:stop_chore(mn_lift_ax_lift_ax, "mn_lift_ax.cos")
    manny:play_chore_looping(mn_lift_ax_hold_ax, "mn_lift_ax.cos")
    if vo.secret_door.opened then
        PrintDebug("constraining")
        start_script(vo.exit_with_axe)
    end
end
vo.lower_axe = function() -- line 213
    local local1 = { }
    local local2 = { }
    local local3 = { x = 0.0103, y = 0.3971, z = 0 }
    local local4 = { }
    START_CUT_SCENE()
    vo.stop_turn()
    vo.stop_walk()
    manny:stop_chore(mn_lift_ax_hold_ax)
    manny:play_chore(mn_lift_ax_lower_ax)
    sleep_for(1000)
    local1 = manny:getpos()
    local2 = manny:get_positive_rot()
    vo_axe:setpos(local1)
    vo_axe:setrot(local2)
    vo_axe.pos_x = local1.x
    vo_axe.pos_y = local1.y
    vo_axe.pos_z = local1.z
    vo_axe.rot_x = local2.x
    vo_axe.rot_y = local2.y
    vo_axe.rot_z = local2.z
    vo_axe.currentSet = system.currentSet
    vo_axe:set_visibility(TRUE)
    vo_axe:put_in_set(system.currentSet)
    local4 = RotateVector(local3, local2)
    local4.x = local4.x + local1.x
    local4.y = local4.y + local1.y
    local4.z = local4.z + local1.z
    if system.currentSet == vo then
        vo.broadaxe:make_touchable()
        vo.broadaxe.interest_actor:put_in_set(vo)
        vo.broadaxe.obj_x = local4.x
        vo.broadaxe.obj_y = local4.y
        vo.broadaxe.obj_z = local4.z
        vo.broadaxe.interest_actor:setpos(local4)
        vo.broadaxe.use_pnt_x = local1.x
        vo.broadaxe.use_pnt_y = local1.y
        vo.broadaxe.use_pnt_z = local1.z
        vo.broadaxe.use_rot_x = local2.x
        vo.broadaxe.use_rot_y = local2.y
        vo.broadaxe.use_rot_z = local2.z
    else
        vi.broadaxe:make_touchable()
        vi.broadaxe.interest_actor:put_in_set(vi)
        vi.broadaxe.obj_x = local4.x
        vi.broadaxe.obj_y = local4.y
        vi.broadaxe.obj_z = local4.z
        vi.broadaxe.interest_actor:setpos(local4)
        vi.broadaxe.use_pnt_x = local1.x
        vi.broadaxe.use_pnt_y = local1.y
        vi.broadaxe.use_pnt_z = local1.z
        vi.broadaxe.use_rot_x = local2.x
        vi.broadaxe.use_rot_y = local2.y
        vi.broadaxe.use_rot_z = local2.z
    end
    manny_has_axe = FALSE
    if system.currentSet == vo then
        MakeSectorActive("noax1", TRUE)
        MakeSectorActive("noax2", TRUE)
        MakeSectorActive("noax3", TRUE)
        MakeSectorActive("noax4", TRUE)
        MakeSectorActive("noax5", TRUE)
        MakeSectorActive("noax6", TRUE)
        MakeSectorActive("noax7", TRUE)
        MakeSectorActive("noax8", TRUE)
        MakeSectorActive("noax9", TRUE)
        MakeSectorActive("noax10", TRUE)
        MakeSectorActive("noax11", TRUE)
        vo:update_states()
    else
        MakeSectorActive("noax1", TRUE)
        MakeSectorActive("noax2", TRUE)
        MakeSectorActive("noax3", TRUE)
        MakeSectorActive("noax4", TRUE)
    end
    manny:wait_for_chore()
    manny:default("nautical")
    manny:follow_boxes()
    END_CUT_SCENE()
    manny.idles_allowed = TRUE
    SetActorReflection(manny.hActor, 60)
    inventory_disabled = FALSE
    system.buttonHandler = inventory_save_handler
    manny:head_look_at(nil)
end
vo.turn_left = function() -- line 313
    local local1 = { }
    manny:play_chore_looping(mn_lift_ax_drag_ax, "mn_lift_ax.cos")
    start_sfx("voAxTDrg.imu")
    while 1 do
        local1 = manny:getrot()
        manny:setrot(local1.x, local1.y + 10, local1.z, TRUE)
        break_here()
    end
end
vo.turn_right = function() -- line 326
    local local1 = { }
    manny:play_chore_looping(mn_lift_ax_drag_ax, "mn_lift_ax.cos")
    start_sfx("voAxTDrg.imu")
    while 1 do
        local1 = manny:getrot()
        manny:setrot(local1.x, local1.y - 10, local1.z, TRUE)
        break_here()
    end
end
vo.walk_backward = function() -- line 338
    manny:set_walk_rate(-0.2)
    manny:play_chore_looping(mn_lift_ax_drag_ax, "mn_lift_ax.cos")
    start_sfx("voAxBDrg.imu")
    while 1 do
        manny:walk_forward()
        break_here()
    end
end
vo.stop_turn = function() -- line 348
    stop_script(vo.turn_left)
    stop_script(vo.turn_right)
    stop_sound("voAxTDrg.imu")
    if not find_script(vo.walk_backward) then
        manny:stop_chore(mn_lift_ax_drag_ax, "mn_lift_ax.cos")
        manny:play_chore_looping(mn_lift_ax_hold_ax, "mn_lift_ax.cos")
    end
end
vo.stop_walk = function() -- line 358
    stop_script(vo.walk_backward)
    stop_sound("voAxBDrg.imu")
    if not find_script(vo.turn_left) and not find_script(vo.turn_right) then
        manny:stop_chore(mn_lift_ax_drag_ax, "mn_lift_ax.cos")
        manny:play_chore_looping(mn_lift_ax_hold_ax, "mn_lift_ax.cos")
    end
end
vo.exit_with_axe = function() -- line 367
    while manny_has_axe do
        repeat
            break_here()
        until manny:find_sector_name("axe_exit")
        vo.manny_exiting = TRUE
        vo.stop_turn()
        if system.currentSet == vo then
            vo.secret_door:use()
        else
            vi.vo_door:walkOut()
        end
        while manny:find_sector_name("axe_exit") do
            break_here()
        end
        vo.manny_exiting = FALSE
    end
end
vo.lockup_watcher = function() -- line 386
    while manny_has_axe do
        if manny:find_sector_name("secret_door") then
            vo.secret_door:walkOut()
        elseif manny:find_sector_name("vo_door") then
            vi.vo_door:walkOut()
        end
    end
end
axeButtonHandler = function(arg1, arg2, arg3) -- line 396
    shiftKeyDown = GetControlState(LSHIFTKEY) or GetControlState(RSHIFTKEY)
    altKeyDown = GetControlState(LALTKEY) or GetControlState(RALTKEY)
    controlKeyDown = GetControlState(LCONTROLKEY) or GetControlState(RCONTROLKEY)
    if arg1 == EKEY and controlKeyDown and arg2 then
        single_start_script(execute_user_command)
        bHandled = TRUE
    elseif control_map.OVERRIDE[arg1] and arg2 and curSceneLevel <= 0 then
        single_start_script(vo.lower_axe)
    elseif control_map.TURN_RIGHT[arg1] and cutSceneLevel <= 0 and not vo.manny_exiting then
        if arg2 then
            single_start_script(vo.turn_right)
        else
            single_start_script(vo.stop_turn)
        end
    elseif control_map.TURN_LEFT[arg1] and cutSceneLevel <= 0 and not vo.manny_exiting then
        if arg2 then
            single_start_script(vo.turn_left)
        else
            single_start_script(vo.stop_turn)
        end
    elseif control_map.LOOK_AT[arg1] and arg2 and cutSceneLevel <= 0 then
        single_start_script(vo.broadaxe.lookAt, vo.broadaxe)
    elseif control_map.MOVE_BACKWARD[arg1] and cutSceneLevel <= 0 then
        if arg2 then
            single_start_script(vo.walk_backward)
        else
            single_start_script(vo.stop_walk)
        end
    elseif control_map.USE[arg1] and arg2 and cutSceneLevel <= 0 and not vo.manny_exiting then
        single_start_script(vo.drop_axe)
    elseif control_map.PICK_UP[arg1] and arg2 and cutSceneLevel <= 0 and not vo.manny_exiting then
        single_start_script(vo.lower_axe)
    else
        CommonButtonHandler(arg1, arg2, arg3)
    end
end
drop_test = function() -- line 436
    local local1 = { x = -0.236279, y = -0.387934, z = 0 }
    local local2 = { }
    local local3 = { }
    local local4 = manny:getpos()
    local local5
    local local6 = sqrt((local4.x - local1.x) ^ 2 + (local4.y - local1.y) ^ 2 + (local4.z - local1.z) ^ 2)
    local2.x = local1.x - local4.x
    local2.y = local1.y - local4.y
    local2.z = local1.z - local4.z
    local3.x, local3.y, local3.z = GetActorPuckVector(manny.hActor)
    local2 = normalize_vector(local2)
    local3 = normalize_vector(local3)
    local5 = GetAngleBetweenVectors(local3, local2)
    if system.currentSet == vi and local6 > 0.15000001 and local6 < 0.43000001 and local5 <= 30 then
        return TRUE
    end
end
vo.drop_axe = function() -- line 458
    local local1 = { }
    local local2 = { }
    local local3 = { x = 0.0103, y = 0.3971, z = 0 }
    local local4 = { }
    local local5 = { x = -0.236279, y = -0.387934, z = 0 }
    START_CUT_SCENE()
    vo.stop_turn()
    vo.stop_walk()
    manny:stop_chore(mn_lift_ax_hold_ax)
    manny:play_chore(mn_lift_ax_pickup_ax)
    manny:say_line("/voma010/")
    sleep_for(3500)
    local1 = manny:getpos()
    local2 = manny:get_positive_rot()
    vo_axe:setpos(local1)
    vo_axe:setrot(local2)
    vo_axe.pos_x = local1.x
    vo_axe.pos_y = local1.y
    vo_axe.pos_z = local1.z
    vo_axe.rot_x = local2.x
    vo_axe.rot_y = local2.y
    vo_axe.rot_z = local2.z
    vo_axe:put_in_set(system.currentSet)
    vo_axe.currentSet = system.currentSet
    local4 = RotateVector(local3, local2)
    local4.x = local4.x + local1.x
    local4.y = local4.y + local1.y
    local4.z = local4.z + local1.z
    if system.currentSet == vo then
        vo.broadaxe:make_touchable()
        vo.broadaxe.interest_actor:put_in_set(vo)
        vo.broadaxe.obj_x = local4.x
        vo.broadaxe.obj_y = local4.y
        vo.broadaxe.obj_z = local4.z
        vo.broadaxe.interest_actor:setpos(local4)
        vo.broadaxe.use_pnt_x = local1.x
        vo.broadaxe.use_pnt_y = local1.y
        vo.broadaxe.use_pnt_z = local1.z
        vo.broadaxe.use_rot_x = local2.x
        vo.broadaxe.use_rot_y = local2.y
        vo.broadaxe.use_rot_z = local2.z
    else
        vi.broadaxe:make_touchable()
        vi.broadaxe.interest_actor:put_in_set(vi)
        vi.broadaxe.obj_x = local4.x
        vi.broadaxe.obj_y = local4.y
        vi.broadaxe.obj_z = local4.z
        vi.broadaxe.interest_actor:setpos(local4)
        vi.broadaxe.use_pnt_x = local1.x
        vi.broadaxe.use_pnt_y = local1.y
        vi.broadaxe.use_pnt_z = local1.z
        vi.broadaxe.use_rot_x = local2.x
        vi.broadaxe.use_rot_y = local2.y
        vi.broadaxe.use_rot_z = local2.z
    end
    local local6 = drop_test()
    sleep_for(500)
    if local6 then
        start_sfx("voAxBrk.wav")
        vi.break_tile()
    else
        start_sfx("voAxDrop.wav")
    end
    manny:wait_for_chore()
    vo_axe:set_visibility(TRUE)
    manny:default("nautical")
    manny_has_axe = FALSE
    manny.idles_allowed = TRUE
    inventory_disabled = FALSE
    system.buttonHandler = inventory_save_handler
    SetActorReflection(manny.hActor, 60)
    if system.currentSet == vo then
        MakeSectorActive("noax1", TRUE)
        MakeSectorActive("noax2", TRUE)
        MakeSectorActive("noax3", TRUE)
        MakeSectorActive("noax4", TRUE)
        MakeSectorActive("noax5", TRUE)
        MakeSectorActive("noax6", TRUE)
        MakeSectorActive("noax7", TRUE)
        MakeSectorActive("noax8", TRUE)
        MakeSectorActive("noax9", TRUE)
        MakeSectorActive("noax10", TRUE)
        MakeSectorActive("noax11", TRUE)
        vo:update_states()
    else
        MakeSectorActive("noax1", TRUE)
        MakeSectorActive("noax2", TRUE)
        MakeSectorActive("noax3", TRUE)
        MakeSectorActive("noax4", TRUE)
    end
    END_CUT_SCENE()
    if local6 then
        START_CUT_SCENE()
        vo.get_axe()
        manny:set_walk_rate(-0.2)
        manny:play_chore_looping(mn_lift_ax_drag_ax, "mn_lift_ax.cos")
        local local7 = 0.30000001
        start_sfx("voAxBDrg.imu")
        repeat
            manny:walk_forward()
            local7 = local7 - PerSecond(0.2)
            if local7 < 0 then
                local7 = 0
            end
            break_here()
        until local7 == 0
        stop_sound("voAxBDrg.imu")
        manny:stop_chore(mn_lift_ax_drag_ax, "mn_lift_ax.cos")
        manny:play_chore_looping(mn_lift_ax_hold_ax, "mn_lift_ax.cos")
        vo.lower_axe()
        start_script(vi.escape_safe)
        END_CUT_SCENE()
    else
        START_CUT_SCENE()
        wait_for_message()
        manny:say_line("/voma011/")
        if not vo.broadaxe.dropped then
            vo.broadaxe.dropped = TRUE
            wait_for_message()
            manny:say_line("/voma012/")
        end
        END_CUT_SCENE()
    end
    manny:follow_boxes()
end
vo.update_states = function(arg1) -- line 602
    if vd.door_open then
        vo.open_door:make_touchable()
        MakeSectorActive("safe_passage", TRUE)
        MakeSectorActive("under_door", FALSE)
        vo.open_door:play_chore(1)
    else
        vo.open_door:make_untouchable()
        MakeSectorActive("safe_passage", FALSE)
        MakeSectorActive("under_door", TRUE)
        vo.open_door:play_chore(0)
    end
    if vo.secret_door.opened then
        vo.secret_door:make_touchable()
        vo.drawers3.parent = Object
        vo.drawers3:make_untouchable()
        MakeSectorActive("secret_pass1", TRUE)
        MakeSectorActive("secret_pass2", TRUE)
        vo.secret_door:play_chore(0)
    else
        MakeSectorActive("axe_exit", FALSE)
        vo.secret_door:make_untouchable()
        vo.drawers3:make_touchable()
        MakeSectorActive("secret_pass1", FALSE)
        MakeSectorActive("secret_pass2", FALSE)
        vo.secret_door:play_chore(1)
    end
    if manny_has_axe then
        MakeSectorActive("noax1", FALSE)
        MakeSectorActive("noax2", FALSE)
        MakeSectorActive("noax3", FALSE)
        MakeSectorActive("noax4", FALSE)
        MakeSectorActive("noax5", FALSE)
        MakeSectorActive("noax6", FALSE)
        MakeSectorActive("noax7", FALSE)
        MakeSectorActive("noax8", FALSE)
        MakeSectorActive("noax9", FALSE)
        MakeSectorActive("noax10", FALSE)
        MakeSectorActive("noax11", FALSE)
        MakeSectorActive("under_door", FALSE)
        if not vd.door_open then
            MakeSectorActive("door_open", TRUE)
            MakeSectorActive("door_open2", TRUE)
        else
            MakeSectorActive("door_open", FALSE)
            MakeSectorActive("door_open2", FALSE)
        end
        if vo.secret_door.opened then
            MakeSectorActive("axe_exit", TRUE)
            MakeSectorActive("secret_pass1", FALSE)
            MakeSectorActive("secret_pass2", FALSE)
        else
            MakeSectorActive("axe_exit", FALSE)
        end
    else
        MakeSectorActive("noax1", TRUE)
        MakeSectorActive("noax2", TRUE)
        MakeSectorActive("noax3", TRUE)
        MakeSectorActive("noax4", TRUE)
        MakeSectorActive("noax5", TRUE)
        MakeSectorActive("noax6", TRUE)
        MakeSectorActive("noax7", TRUE)
        MakeSectorActive("noax8", TRUE)
        MakeSectorActive("noax9", TRUE)
        MakeSectorActive("noax10", TRUE)
        MakeSectorActive("noax11", TRUE)
    end
end
vo.enter = function(arg1) -- line 681
    NewObjectState(vo_intha, OBJSTATE_STATE, "vo_safe.bm", "vo_safe.zbm")
    vo.open_door:set_object_state("vo_door.cos")
    NewObjectState(vo_intha, OBJSTATE_STATE, "vo_secret.bm", "vo_secret.zbm")
    vo.secret_door:set_object_state("vo_secret.cos")
    if not vo_axe then
        vo_axe = Actor:create(nil, nil, nil, "axe")
        vo_axe.pos_x = -0.57863
        vo_axe.pos_y = 1.52808
        vo_axe.pos_z = 0
        vo_axe.rot_x = 0
        vo_axe.rot_y = 320
        vo_axe.rot_z = 0
        vo_axe.currentSet = system.currentSet
    end
    if vo_axe.currentSet == system.currentSet then
        vo_axe:put_in_set(vo)
        vo_axe:setpos(vo_axe.pos_x, vo_axe.pos_y, vo_axe.pos_z)
        vo_axe:setrot(vo_axe.rot_x, vo_axe.rot_y, vo_axe.rot_z)
        vo_axe:set_costume("mn_lift_ax.cos")
        vo_axe:play_chore(3)
    end
    vo:update_states()
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 6000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
end
vo.exit = function(arg1) -- line 718
    meche:free()
    KillActorShadows(manny.hActor)
end
vo.open_door = Object:create(vo, "/votx013/vault door", -0.35592201, 0.36448601, 0.3461, { range = 0.60000002 })
vo.open_door.use_pnt_x = -0.48652199
vo.open_door.use_pnt_y = 0.61648601
vo.open_door.use_pnt_z = 0
vo.open_door.use_rot_x = 0
vo.open_door.use_rot_y = 216.981
vo.open_door.use_rot_z = 0
vo.open_door.lookAt = function(arg1) -- line 737
    manny:say_line("/voma014/")
end
vo.open_door.use = function(arg1) -- line 741
    vo.close_safe()
end
vo.open_door.use_chisel = function(arg1) -- line 745
    manny:say_line("/voma015/")
end
vo.wall_tab = Object:create(vo, "/votx016/metal tab", 0.14598399, 0.031533599, 0.58999997, { range = 0.80000001 })
vo.wall_tab.use_pnt_x = 0.095983997
vo.wall_tab.use_pnt_y = 0.15153401
vo.wall_tab.use_pnt_z = 0
vo.wall_tab.use_rot_x = 0
vo.wall_tab.use_rot_y = -6996.23
vo.wall_tab.use_rot_z = 0
vo.wall_tab.lookAt = function(arg1) -- line 757
    soft_script()
    if vd.door_open then
        manny:say_line("/voma017/")
    else
        manny:say_line("/voma018/")
    end
end
vo.wall_tab.use = function(arg1) -- line 767
    soft_script()
    manny:say_line("/voma019/")
    wait_for_message()
    manny:say_line("/voma020/")
end
vo.wall_tab.use_chisel = function(arg1) -- line 774
    manny:say_line("/voma021/")
end
vo.wall_tab.pickUp = vo.wall_tab.use
vo.wall_tab.use_scythe = function(arg1) -- line 780
    if vd.door_open then
        START_CUT_SCENE()
        manny:walkto(-0.079353, 0.398622, 0, 0, -86.6857, 0)
        manny:wait_for_actor()
        manny:push_costume("mn_scythe_door.cos")
        manny:stop_chore(mn2_hold_scythe, "mn2.cos")
        manny:play_chore(mn_scythe_door_to_scythe_short)
        manny:wait_for_chore()
        manny:play_chore(mn_scythe_door_stop_scythe_short)
        manny:wait_for_chore()
        manny:pop_costume()
        manny:play_chore_looping(mn2_hold_scythe, "mn2.cos")
        END_CUT_SCENE()
    elseif vo.secret_door.opened then
        system.default_response("shed light")
    else
        start_script(vo.open_secret_door)
    end
end
vo.drawers1 = Object:create(vo, "/votx022/drawers", -1.2701401, 0.224554, 0.41, { range = 0.69999999 })
vo.drawers1.use_pnt_x = -1.32014
vo.drawers1.use_pnt_y = 0.59455401
vo.drawers1.use_pnt_z = 0
vo.drawers1.use_rot_x = 0
vo.drawers1.use_rot_y = -5622.98
vo.drawers1.use_rot_z = 0
vo.drawers1.lookAt = function(arg1) -- line 811
    soft_script()
    manny:say_line("/voma023/")
    wait_for_message()
    manny:say_line("/voma024/")
end
vo.drawers1.use = function(arg1) -- line 818
    soft_script()
    manny:say_line("/voma025/")
    wait_for_message()
    manny:say_line("/voma026/")
end
vo.drawers1.pickUp = vo.drawers1.use
vo.drawers1.use_scythe = function(arg1) -- line 827
    soft_script()
    manny:say_line("/voma028/")
end
vo.drawers1.use_chisel = function(arg1) -- line 832
    START_CUT_SCENE()
    manny:walkto(-1.32288, 0.557319, 0, 0, 120, 0)
    manny:wait_for_actor()
    mn.chisel:use()
    manny:say_line("/voma029/")
    wait_for_message()
    manny:say_line("/voma030/")
    END_CUT_SCENE()
end
vo.drawers2 = Object:create(vo, "/votx031/drawers", -1.57014, 0.59455401, 0.80000001, { range = 1 })
vo.drawers2.use_pnt_x = -1.32014
vo.drawers2.use_pnt_y = 0.59455401
vo.drawers2.use_pnt_z = 0
vo.drawers2.use_rot_x = 0
vo.drawers2.use_rot_y = -5622.98
vo.drawers2.use_rot_z = 0
vo.drawers2.parent = vo.drawers1
vo.drawers3 = Object:create(vo, "/votx032/drawers", -1.61014, 0.94455397, 0.47999999, { range = 0.80000001 })
vo.drawers3.use_pnt_x = -1.32014
vo.drawers3.use_pnt_y = 0.59455401
vo.drawers3.use_pnt_z = 0
vo.drawers3.use_rot_x = 0
vo.drawers3.use_rot_y = -5677.6802
vo.drawers3.use_rot_z = 0
vo.drawers3.parent = vo.drawers1
vo.drawers4 = Object:create(vo, "/votx033/drawers", -1.23141, 2.04703, 0.40000001, { range = 0.69999999 })
vo.drawers4.use_pnt_x = -1.08946
vo.drawers4.use_pnt_y = 1.77124
vo.drawers4.use_pnt_z = 0
vo.drawers4.use_rot_x = 0
vo.drawers4.use_rot_y = 1146.3
vo.drawers4.use_rot_z = 0
vo.drawers4.parent = vo.drawers1
vo.suit = Object:create(vo, "/votx034/suit of armor", 0.041497, 1.7197, 0.68000001, { range = 0.80000001 })
vo.suit.use_pnt_x = -0.338503
vo.suit.use_pnt_y = 1.7596999
vo.suit.use_pnt_z = 0
vo.suit.use_rot_x = 0
vo.suit.use_rot_y = -5499.7402
vo.suit.use_rot_z = 0
vo.suit.lookAt = function(arg1) -- line 883
    manny:say_line("/voma035/")
end
vo.suit.pickUp = function(arg1) -- line 887
    manny:say_line("/voma036/")
end
vo.suit.use = function(arg1) -- line 891
    if arg1.has_axe then
        vo.get_axe()
    elseif not vo.secret_door.opened then
        START_CUT_SCENE()
        soft_script()
        manny:walkto(-0.0789884, 1.60599, 0, 0, -43, 0)
        manny:wait_for_actor()
        manny:knock_on_door_anim()
        manny:say_line("/voma037/")
        wait_for_message()
        manny:say_line("/voma038/")
        wait_for_message()
        manny:say_line("/voma039/")
        END_CUT_SCENE()
    else
        manny:say_line("/voma040/")
    end
end
vo.suit.use_scythe = function(arg1) -- line 913
    START_CUT_SCENE()
    manny:walkto(-0.361878, 1.74097, 0, 0, -60, 0)
    manny:play_chore(mn2_use_obj, "mn2.cos")
    manny:say_line("/voma041/")
    manny:wait_for_chore()
    manny:stop_chore(mn2_use_obj, "mn2.cos")
    END_CUT_SCENE()
end
vo.suit.use_chisel = function(arg1) -- line 923
    manny:say_line("/voma042/")
end
vo.broadaxe = Object:create(vo, "/votx043/broadaxe", -0.57862997, 1.52808, 0, { range = 0.5 })
vo.broadaxe.use_pnt_x = -0.57862997
vo.broadaxe.use_pnt_y = 1.52808
vo.broadaxe.use_pnt_z = 0
vo.broadaxe.use_rot_x = 0
vo.broadaxe.use_rot_y = 320
vo.broadaxe.use_rot_z = 0
vo.broadaxe.lookAt = function(arg1) -- line 935
    manny:say_line("/voma044/")
end
vo.broadaxe.pickUp = function(arg1) -- line 940
    vo.get_axe()
end
vo.broadaxe.use = function(arg1) -- line 944
    vo.get_axe()
end
vo.broadaxe.put_away = vo.broadaxe.use
vo.broadaxe.default_response = vo.broadaxe.use
vo.vd_door = Object:create(vo, "/votx045/door", -0.0043929298, -0.53289002, 0.41999999, { range = 0.80000001 })
vo.vd_door.use_pnt_x = 0.0096925097
vo.vd_door.use_pnt_y = 0.103199
vo.vd_door.use_pnt_z = 0
vo.vd_door.use_rot_x = 0
vo.vd_door.use_rot_y = -7021.1201
vo.vd_door.use_rot_z = 0
vo.vd_door.out_pnt_x = 0.0057194601
vo.vd_door.out_pnt_y = -0.1
vo.vd_door.out_pnt_z = 0
vo.vd_door.out_rot_x = 0
vo.vd_door.out_rot_y = -7021.1201
vo.vd_door.out_rot_z = 0
vo.vd_box = vo.vd_door
vo.vd_door.walkOut = function(arg1) -- line 974
    if vd.door_open then
        vd:come_out_door(vd.vo_door)
        vd:current_setup(vd_safex)
    else
        arg1:locked_out()
    end
end
vo.vd_door.locked_out = function(arg1) -- line 983
    manny:say_line("/voma046/")
end
vo.vd_door.lookAt = function(arg1) -- line 987
    if vd.door_open then
        manny:say_line("/voma047/")
    else
        arg1:locked_out()
    end
end
vo.secret_door = Object:create(vo, "/votx048/secret door", -1.64437, 1.08671, 0.47, { range = 0.60000002 })
vo.secret_door.use_pnt_x = -1.40437
vo.secret_door.use_pnt_y = 1.06671
vo.secret_door.use_pnt_z = 0
vo.secret_door.use_rot_x = 0
vo.secret_door.use_rot_y = -274.26501
vo.secret_door.use_rot_z = 0
vo.secret_door.out_pnt_x = -1.675
vo.secret_door.out_pnt_y = 1.03729
vo.secret_door.out_pnt_z = 0
vo.secret_door.out_rot_x = 0
vo.secret_door.out_rot_y = -273.17499
vo.secret_door.out_rot_z = 0
vo.secret_door:make_untouchable()
vo.secret_door.lookAt = function(arg1) -- line 1012
    manny:say_line("/voma049/")
end
vo.secret_door.use = function(arg1) -- line 1017
    if manny_has_axe then
        vi:switch_to_set()
        manny:setpos(0.403806, -0.296262, 0)
        manny:setrot(0, -810, 0)
        manny:put_in_set(vi)
        vo_axe:put_in_set(vi)
        vo.broadaxe:make_untouchable()
        vi.broadaxe:make_touchable()
    else
        vi:come_out_door(vi.vo_door)
    end
end
vo.secret_door.walkOut = vo.secret_door.use
vo_secret_Chore0 = 0
vo_secret_Chore1 = 1
waiter_idles_idle = 0
waiter_idles_start_walk = 1
waiter_idles_walk_cycle = 2
waiter_idles_end_walk = 3
waiter_idles_pickup_hooka = 4
waiter_idles_putdown_hooka = 5
waiter_idles_swivel_left = 6
waiter_idles_swivel_right = 7
waiter_idles_idle_hooka = 8
waiter_idles_activate_shooters = 9
waiter_idles_activate_tray = 10
waiter_idles_activate_hooka = 11
waiter_idles_pre_pickup_hooka = 12
waiter_idles_activate_hook_on_tray = 13
waiter_idles_idle_shooters = 14
waiter_mumble = 0
waiter_a = 1
waiter_c = 2
waiter_f = 3
waiter_l = 4
waiter_m = 5
waiter_o = 6
waiter_u = 7
waiter_stop_talk = 8
waiter_t = 9
waiter_e = 10
waiter_shooters_idle_shooters = 0
waiter_shooters_toss_tray = 1
waiter_shooters_idle2 = 2
waiter_shooters_tray_end = 3
waiter_shooters_bowl_start = 4
waiter_shooters_pour = 5
waiter_shooters_talk = 6
waiter_shooters_kitchen_action = 7
waiter_shooters_shooters_start = 8
waiter_shooters_bowl_end = 9
waiter_shooters_hooka_lid_start = 10
waiter_shooters_hooka_lid_end = 11
waiter_shooters_pickup_bowl = 12
waiter_shooters_hide_counter_shooters = 13
waiter_shooters_lid_toss = 14
waiter_shooters_hooka_down = 15
waiter_shooters_pickup_hooka = 16
waiter_shooters_shake = 17
wc_door_open = 0
wc_door_close = 1
wc_door_set_open = 2
wc_door_set_closed = 3
CheckFirstTime("wc.lua")
dofile("wc_door.lua")
KevTest = function() -- line 11
    de.forklift_actor:update_object()
    wc.lever:use()
end
wc = Set:create("wc.set", "wine cellar", { wc_frkha = 0, wc_ovrhd = 1 })
prop_forklift.wc_pt = { x = 1.55391, y = 0.952362, z = 0 }
prop_forklift.default_wc = function(arg1) -- line 20
    local local1
    arg1:free()
    arg1:set_costume("forklift.cos")
    arg1:put_in_set(wc)
    arg1:setpos(arg1.wc_pt.x, arg1.wc_pt.y, arg1.wc_pt.z)
    local1 = de.forklift_actor:getrot()
    arg1:setrot(local1.x, local1.y + 90, local1.z)
    if de.forklift_actor.blades_up then
        arg1:play_chore(forklift_up_hold)
    else
        arg1:play_chore(forklift_down_hold)
    end
    arg1:set_collision_mode(COLLISION_BOX, 1)
end
wc.manny_cask = Actor:create(nil, nil, nil, "Mannys cask")
wc.manny_cask.default = function(arg1) -- line 39
    arg1:set_costume("cask.cos")
    arg1:put_in_set(wc)
    arg1:setpos(-0.0913699, -1.12098, 0.4234)
    arg1:setrot(90, 325, 0)
    SetActorPitch(arg1.hActor, 90)
end
wc.cask_actor = Actor:create(nil, nil, nil, "Other cask")
wc.cask_actor.default = function(arg1) -- line 49
    arg1:set_costume("cask.cos")
    arg1:put_in_set(wc)
    arg1:setpos(-1.36187, -1.58688, -0.289399)
    arg1:setrot(0, 268.437, 0)
end
wc.set_up_actors = function(arg1) -- line 57
    wc.manny_cask:default()
    wc.manny_cask:complete_chore(cask_show)
    wc.cask_actor:default()
    wc.cask_actor:complete_chore(cask_show)
end
wc.drive_in = function(arg1) -- line 65
    local local1
    START_CUT_SCENE()
    wc:switch_to_set()
    de.forklift_actor:put_in_set(wc)
    de.forklift_actor:setpos(1.42453, 0.593548, 0)
    de.forklift_actor:face_entity(1.36286, -1.11754, 0)
    wc.de_door:play_chore(wc_door_open)
    wc.de_door:wait_for_chore()
    wc.de_door:open()
    de.forklift_actor:driveto(1.36286, -1.11754, 0)
    de.forklift_actor.currentSet = wc
    de.forklift_actor.current_pos = { x = 1.36286, y = -1.11754, z = 0 }
    END_CUT_SCENE()
end
wc.drive_out = function(arg1) -- line 82
    START_CUT_SCENE()
    de.forklift_actor:setrot(0, 0, 0, TRUE)
    while not de.forklift_actor:find_sector_name("fork_box3") do
        de.forklift_actor:set_walk_chore(-1)
        de.forklift_actor:set_turn_chores(-1, -1)
        de.forklift_actor:set_walk_rate(0.4)
        WalkActorForward(de.forklift_actor.hActor)
        break_here()
    end
    wc.de_door:play_chore(wc_door_close)
    wc.de_door:wait_for_chore()
    wc.de_door:close()
    de.forklift_actor.currentSet = de
    END_CUT_SCENE()
    de:drive_in()
end
wc.activate_forklift_boxes = function(arg1, arg2) -- line 100
    local local1, local2
    local1 = 1
    while local1 <= 9 do
        local2 = "box" .. local1
        MakeSectorActive(local2, not arg2)
        local1 = local1 + 1
    end
    local1 = 1
    while local1 <= 3 do
        local2 = "fork_box" .. local1
        MakeSectorActive(local2, arg2)
        local1 = local1 + 1
    end
    MakeSectorActive("fork_de_trigger", arg2)
    if arg2 then
        MakeSectorActive("wc_de_psg", FALSE)
    elseif wc.de_door:is_open() then
        MakeSectorActive("wc_de_psg", TRUE)
    else
        MakeSectorActive("wc_de_psg", FALSE)
    end
end
wc.enter = function(arg1) -- line 135
    NewObjectState(wc_frkha, OBJSTATE_STATE, "wc_door.bm", "wc_door.zbm")
    wc.de_door:set_object_state("wc_door.cos")
    if wc.de_door:is_open() then
        wc.de_door:play_chore(wc_door_set_open)
    else
        wc.de_door:play_chore(wc_door_set_closed)
    end
    he.elevator:unlock()
    de.forklift_actor:initialize()
    if de.forklift_actor.currentSet == wc then
        wc.forklift:make_touchable()
        wc.lever:make_touchable()
        de.forklift_actor:default()
        de.forklift_actor:put_in_set(wc)
        de.forklift_actor:setpos(de.forklift_actor.current_pos.x, de.forklift_actor.current_pos.y, de.forklift_actor.current_pos.z)
        de.forklift_actor:setrot(de.forklift_actor.current_rot.x, de.forklift_actor.current_rot.y, de.forklift_actor.current_rot.z)
    else
        wc.forklift:make_untouchable()
        wc.lever:make_untouchable()
        if not manny.is_driving then
            prop_forklift:default_wc()
        end
    end
    wc:activate_forklift_boxes(manny.is_driving)
    wc:set_up_actors()
    manny:set_collision_mode(COLLISION_SPHERE, 0.35)
    if manny.is_driving then
        manny.say_line = manny.forklift_say_line
        start_sfx("forkIdle.IMU")
    end
    single_start_script(de.forklift_actor.monitor_objects, de.forklift_actor)
    SetShadowColor(10, 10, 10)
    SetActiveShadow(manny.hActor, 0)
    SetActorShadowPoint(manny.hActor, 0, 0, 6000)
    SetActorShadowPlane(manny.hActor, "shadow1")
    AddShadowPlane(manny.hActor, "shadow1")
    SetActiveShadow(de.forklift_actor.hActor, 0)
    SetActorShadowPoint(de.forklift_actor.hActor, 0, 0, 6000)
    SetActorShadowPlane(de.forklift_actor.hActor, "shadow1")
    AddShadowPlane(de.forklift_actor.hActor, "shadow1")
end
wc.exit = function(arg1) -- line 190
    stop_sound("forkIdle.IMU")
    stop_sound("forkDriv.IMU")
    stop_sound("forkBkup.IMU")
    stop_sound("hkCaskRl.imu")
    manny:set_collision_mode(COLLISION_OFF)
    prop_forklift:free()
    stop_script(de.forklift_actor.monitor_objects)
    KillActorShadows(manny.hActor)
    KillActorShadows(de.forklift_actor.hActor)
end
wc.keg1 = Object:create(wc, "/wctx001/casks", 2.7376299, -3.98564, 3.1800001, { range = 0.60000002 })
wc.keg1.use_pnt_x = 2.4576299
wc.keg1.use_pnt_y = -3.05564
wc.keg1.use_pnt_z = 1.7
wc.keg1.use_rot_x = 0
wc.keg1.use_rot_y = -137.00999
wc.keg1.use_rot_z = 0
wc.keg1.lookAt = function(arg1) -- line 219
    manny:say_line("/wcma002/")
end
wc.keg1.pickUp = wc.keg1.lookAt
wc.keg1.use = wc.keg1.lookAt
wc.keg2 = Object:create(wc, "/wctx003/casks", 3.39763, -3.4256401, 3.1800001, { range = 0.60000002 })
wc.keg2.use_pnt_x = 2.4576299
wc.keg2.use_pnt_y = -3.05564
wc.keg2.use_pnt_z = 1.7
wc.keg2.use_rot_x = 0
wc.keg2.use_rot_y = -137.00999
wc.keg2.use_rot_z = 0
wc.keg2.parent = wc.keg1
wc.keg3 = Object:create(wc, "/wctx004/casks", 0.91763401, -3.2156401, 1.8200001, { range = 0.60000002 })
wc.keg3.use_pnt_x = 1.67123
wc.keg3.use_pnt_y = -2.9198501
wc.keg3.use_pnt_z = 1.7
wc.keg3.use_rot_x = 0
wc.keg3.use_rot_y = -231.541
wc.keg3.use_rot_z = 0
wc.keg3.parent = wc.keg1
wc.keg4 = Object:create(wc, "/wctx005/casks", 0.69763398, -2.4156401, 2.1600001, { range = 0.60000002 })
wc.keg4.use_pnt_x = 1.67123
wc.keg4.use_pnt_y = -2.9198501
wc.keg4.use_pnt_z = 1.7
wc.keg4.use_rot_x = 0
wc.keg4.use_rot_y = -231.541
wc.keg4.use_rot_z = 0
wc.keg4.parent = wc.keg1
wc.forklift = Object:create(wc, "/wctx006/forklift", 0.80051398, -2.07038, 0.36399999, { range = 1 })
wc.forklift.use_pnt_x = 1.37956
wc.forklift.use_pnt_y = -2.4616301
wc.forklift.use_pnt_z = 0
wc.forklift.use_rot_x = 0
wc.forklift.use_rot_y = 102
wc.forklift.use_rot_z = 0
wc.forklift.in_set = wc
wc.forklift.lookAt = function(arg1) -- line 266
    manny:say_line("/wcma007/")
end
wc.forklift.use = function(arg1) -- line 270
    start_script(de.forklift_actor.mount, de.forklift_actor)
end
wc.forklift.lower_blades = function(arg1) -- line 274
    de.forklift:lower_blades()
end
wc.forklift.raise_blades = function(arg1) -- line 278
    de.forklift:raise_blades()
end
wc.forklift.pickUp = function(arg1) -- line 282
    manny:say_line("/wcma008/")
end
wc.lever = Object:create(wc, "/wctx009/lever", 1.58596, -2.5836999, 2.0899999, { range = 0.80000001 })
wc.lever.use_pnt_x = 0.51390499
wc.lever.use_pnt_y = -2.29303
wc.lever.use_pnt_z = 0
wc.lever.use_rot_x = 0
wc.lever.use_rot_y = 281.76801
wc.lever.use_rot_z = 0
wc.lever.lookAt = function(arg1) -- line 295
    manny:say_line("/wcma010/")
end
wc.lever.use = function(arg1) -- line 299
    if de.forklift_actor.blades_up then
        wc.forklift:lower_blades()
    else
        wc.forklift:raise_blades()
    end
end
wc.de_door = Object:create(wc, "/wctx011/door", 1.61893, -0.304995, 1, { range = 0.60000002 })
wc.de_door.use_pnt_x = 1.31914
wc.de_door.use_pnt_y = -0.68162102
wc.de_door.use_pnt_z = 0
wc.de_door.use_rot_x = 0
wc.de_door.use_rot_y = 7.5090699
wc.de_door.use_rot_z = 0
wc.de_door.out_pnt_x = 1.27844
wc.de_door.out_pnt_y = 0.037629001
wc.de_door.out_pnt_z = 0
wc.de_door.out_rot_x = 0
wc.de_door.out_rot_y = 7.5090699
wc.de_door.out_rot_z = 0
wc.de_door.passage = { "wc_de_psg" }
wc.de_box = wc.de_door
wc.de_door.touchable = FALSE
wc.de_door.walkOut = function(arg1) -- line 333
    if manny.is_driving then
        start_script(wc.drive_out, wc)
    else
        wc.de_door:play_chore(wc_door_close)
        wc.de_door:wait_for_chore()
        wc.de_door:close()
        de:come_out_door(de.grating)
    end
end
wc.de_door.open = function(arg1) -- line 344
    local local1
    local1 = Object.open(arg1)
    if manny.is_driving then
        box_off("wc_de_psg")
    end
    return local1
end
wc.wc_de_trigger = { name = "wc_de_trigger" }
wc.wc_de_trigger.walkOut = function(arg1) -- line 356
    if not wc.de_door:is_open() then
        wc.de_door:play_chore(wc_door_open)
        wc.de_door:wait_for_chore()
        wc.de_door:open()
        de.grating:open()
    end
end
wc.fork_de_trigger = { name = "fork_de_trigger" }
wc.fork_de_trigger.walkOut = function(arg1) -- line 367
    if manny.is_driving then
        START_CUT_SCENE()
        wc.wc_de_trigger:walkOut()
        start_script(wc.drive_out, wc)
        END_CUT_SCENE()
    end
end
wheelbarrow_ma_start_walk = 0
wheelbarrow_ma_walk = 1
wheelbarrow_ma_stop_walk = 2
wheelbarrow_ma_lift = 3
wheelbarrow_ma_hold = 4
wheelbarrow_ma_drop = 5
wheelbarrow_gl_wheels = 6
wheelbarrow_show_weight = 7
wheelbarrow_hide_weight = 8
xb_jb_Chore0 = 0
xb_jello_jello = 0
xb_jello_frozen = 1
xb_jello_gone = 2
CheckFirstTime("xb.lua")
xb = Set:create("xb.set", "extend o bridge", { xb_docws = 0, xb_overhead = 1, xb_newcu = 2, xb_newws = 3, xb_trkws = 4 })
dofile("xbridge.lua")
dofile("mc_bridge.lua")
harbor_ambience_list = { "EkoBell1.wav", "EkoBell2.wav", "EkoBell3.wav", "EkoHorn1.wav", "EkoHorn2.wav" }
harbor_ambience_parm_list = { min_delay = 12000, max_delay = 24000, min_volume = 80, max_volume = 110 }
xb.set_up_actors = function(arg1) -- line 19
    local local1 = 0
    if not xbridge then
        xbridge = Actor:create()
    end
    xbridge:put_in_set(xb)
    xbridge:set_costume("xbridge.cos")
    xbridge:set_softimage_pos(286.75562, 10.0125, 113.5474)
    xbridge:setrot(0, 306.73831, 0)
    if xb.bridge.extended then
        box_on("bridge_box")
        xbridge:play_chore(xbridge_extended)
    else
        box_off("bridge_box")
        xbridge:play_chore(xbridge_retracted)
    end
    repeat
        local1 = local1 + 1
        if not table_actor[local1] then
            table_actor[local1] = Actor:create(nil, nil, nil, "table" .. local1)
        end
        table_actor[local1]:set_costume("x_spot.cos")
        table_actor[local1]:set_visibility(FALSE)
        table_actor[local1]:put_in_set(xb)
        table_actor[local1]:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(table_actor[local1].hActor, 0.2)
        if local1 == 1 then
            table_actor[local1]:free()
        elseif local1 == 2 then
            table_actor[local1]:free()
        elseif local1 == 3 then
            table_actor[local1]:setpos(28.159901, -11.87, 1.3252)
        elseif local1 == 4 then
            table_actor[local1]:setpos(28.343599, -12.3121, 1.3252)
        elseif local1 == 5 then
            table_actor[local1]:setpos(28.3428, -14.0969, 1.3252)
        elseif local1 == 6 then
            table_actor[local1]:setpos(27.8255, -14.0969, 1.3252)
        elseif local1 == 7 then
            table_actor[local1]:setpos(28.3214, -15.2278, 1.3252)
        elseif local1 == 8 then
            table_actor[local1]:setpos(28.365601, -15.8559, 1.3252)
        elseif local1 == 9 then
            table_actor[local1]:setpos(27.768, -15.8463, 1.3252)
        elseif local1 == 10 then
            table_actor[local1]:setpos(28.638901, -13.3773, 1.01983)
            SetActorCollisionScale(table_actor[local1].hActor, 0.050000001)
        elseif local1 == 11 then
            table_actor[local1]:setpos(28.671499, -12.9782, 1.01983)
            SetActorCollisionScale(table_actor[local1].hActor, 0.050000001)
        end
    until local1 == 11
end
xb.lighthouse = function(arg1) -- line 76
    while 1 do
        if xb:current_setup() == xb_trkws then
            if not find_script(cut_scene.coffrock) then
                StartMovie("sd_li.snm", TRUE, 320, 169)
            end
            while xb:current_setup() == xb_trkws do
                break_here()
            end
            StopMovie()
        end
        break_here()
    end
end
xb.pop_actors = function(arg1) -- line 91
    local local1 = { }
    while 1 do
        if xb:current_setup() == xb_newws then
            local1 = xbridge:getpos()
            xbridge:setpos(local1.x, local1.y, local1.z - 0.14)
            if in_year_four then
                local1 = glottis:getpos()
                glottis:setpos(local1.x, local1.y, local1.z - 0.14)
                local1 = meche:getpos()
                meche:setpos(local1.x, local1.y, local1.z - 0.14)
            end
            while xb:current_setup() == xb_newws do
                break_here()
            end
            local1 = xbridge:getpos()
            xbridge:setpos(local1.x, local1.y, local1.z + 0.14)
            if in_year_four then
                local1 = glottis:getpos()
                glottis:setpos(local1.x, local1.y, local1.z + 0.14)
                local1 = meche:getpos()
                meche:setpos(local1.x, local1.y, local1.z + 0.14)
            end
        else
            break_here()
        end
    end
end
xb.meche_arm_idle = function() -- line 120
    meche:set_rest_chore(nil)
    while 1 do
        meche:play_chore(meche_ruba_drop_hands)
        meche:wait_for_chore()
        sleep_for(rnd(1500, 3000))
        meche:play_chore(meche_ruba_xarms)
        meche:wait_for_chore()
        sleep_for(rnd(1500, 3000))
        break_here()
    end
end
xb.glottis_look_meche = function() -- line 134
    while 1 do
        glottis:head_look_at(meche)
        sleep_for(rnd(1500, 3000))
        glottis:head_look_at(nil)
        sleep_for(rnd(1500, 3000))
    end
end
locate = function() -- line 148
    local local1 = { }
    local local2 = { }
    local local3 = { }
    local local4 = { x = -0.01163, y = 0.77678001, z = 0 }
    local1 = glottis:getrot()
    local3 = RotateVector(local4, local1)
    local2 = glottis:getpos()
    local3.x = local3.x + local2.x
    local3.y = local3.y + local2.y
    local3.z = local3.z + local2.z
    manny:setpos(local3.x, local3.y, local3.z)
end
xb.camerachange = function(arg1, arg2, arg3) -- line 162
    if arg3 == xb_newws then
        start_sfx("blimp.imu", IM_HIGH_PRIORITY, 4)
    elseif sound_playing("blimp.imu") then
        fade_sfx("blimp.imu", 500, 0)
    end
end
xb.update_music_state = function(arg1) -- line 173
    if in_year_four then
        return stateXB_YEAR4
    else
        return stateXB
    end
end
xb.enter = function(arg1) -- line 183
    manny:set_collision_mode(COLLISION_SPHERE)
    if xb.triggered_track then
        MakeSectorActive("track_trigger", FALSE)
    end
    if in_year_four then
        meche:set_costume("meche_snow.cos")
        meche:set_mumble_chore(meche_ruba_mumble)
        meche:set_talk_chore(1, meche_ruba_stop_talk)
        meche:set_talk_chore(2, meche_ruba_a)
        meche:set_talk_chore(3, meche_ruba_c)
        meche:set_talk_chore(4, meche_ruba_e)
        meche:set_talk_chore(5, meche_ruba_f)
        meche:set_talk_chore(6, meche_ruba_l)
        meche:set_talk_chore(7, meche_ruba_m)
        meche:set_talk_chore(8, meche_ruba_o)
        meche:set_talk_chore(9, meche_ruba_t)
        meche:set_talk_chore(10, meche_ruba_u)
        meche:set_head(5, 5, 5, 165, 28, 80)
        meche:set_walk_chore(meche_ruba_walk)
        meche:set_rest_chore(meche_ruba_hands_down_hold)
        meche:set_look_rate(200)
        meche:ignore_boxes()
        meche:put_in_set(xb)
        meche:setpos({ x = 28.2727, y = -13.8664, z = 1 })
        meche:setrot(0, 0, 0)
        meche:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(meche.hActor, 0.35)
        NewObjectState(xb_docws, OBJSTATE_UNDERLAY, "xb_0_open.bm")
        jello = NewObjectState(xb_docws, OBJSTATE_UNDERLAY, "xb_0_jello.bm")
        xb.jb_door:set_object_state("xb_jb.cos")
        xb.jb_door:play_chore(0)
        xb.jello:set_object_state("xb_jello.cos")
        SendObjectToFront(jello)
        if jb.frozen then
            xb.jello:play_chore(1)
        elseif jb.poured then
            xb.jello:play_chore(0)
        else
            xb.jello:play_chore(2)
        end
        box_on("jb_door")
        xb.jb_door.walkOut = xb.jb_door.year_four_walkOut
        xb.meche_obj:make_touchable()
        xb.glottis_obj:make_touchable()
        xb.bridge.extended = FALSE
        xb.glottis_obj.parent = jb.glottis_obj
        glottis:default()
        glottis:put_in_set(xb)
        glottis:setpos(28.7635, -13.2831, 1)
        if glottis.nauseated and not jb.poured then
            glottis:setrot(0, 180, 0)
            start_sfx("glNausea.WAV")
            xb.glottis_obj.obj_x = 28.8643
            xb.glottis_obj.obj_y = -13.7211
            xb.glottis_obj.obj_z = 1.83774
            xb.glottis_obj.interest_actor:setpos({ x = 28.8643, y = -13.7211, z = 1.83774 })
            xb.glottis_obj:make_touchable()
            xb.glottis_obj.interest_actor:put_in_set(xb)
        else
            glottis:setrot(0, 90, 0)
            xb.glottis_obj.obj_x = 28.029
            xb.glottis_obj.obj_y = -13.0451
            xb.glottis_obj.obj_z = 1.66
            xb.glottis_obj.interest_actor:setpos(28.029, -13.0451, 1.66)
        end
        glottis:play_chore_looping(glottis_flip_ears)
        glottis:set_head(3, 4, 4, 165, 28, 80)
        glottis:set_mumble_chore(glottis_mumble)
        glottis:set_talk_chore(1, glottis_stop_talk)
        glottis:set_talk_chore(2, glottis_a)
        glottis:set_talk_chore(3, glottis_c)
        glottis:set_talk_chore(4, glottis_e)
        glottis:set_talk_chore(5, glottis_f)
        glottis:set_talk_chore(6, glottis_l)
        glottis:set_talk_chore(7, glottis_m)
        glottis:set_talk_chore(8, glottis_o)
        glottis:set_talk_chore(9, glottis_t)
        glottis:set_talk_chore(10, glottis_u)
        glottis:push_costume("gl_fastwalk.cos")
        glottis:head_look_at(nil)
        glottis:set_walk_chore(0, "gl_sailor_fastwalk.cos")
        glottis:set_walk_rate(0.5)
        glottis:set_turn_rate(0.2)
        if lm.bottle.owner == manny then
            LoadCostume("msb_shooter.cos")
            LoadCostume("gl_shooter.cos")
            LoadCostume("gl_shake.cos")
        end
        glottis:set_collision_mode(COLLISION_SPHERE)
        SetActorCollisionScale(glottis.hActor, 0.5)
        SetActorCollisionScale(manny.hActor, 0.35)
        if glottis.nauseated and not jb.poured then
            start_script(jb.glottis_nauseated_reminder)
        end
        if not find_script(cut_scene.coffrock) then
            start_script(xb.meche_arm_idle)
            start_script(xb.glottis_look_meche)
        end
    else
        xb.meche_obj:make_untouchable()
        xb.glottis_obj:make_untouchable()
        SetActorCollisionScale(manny.hActor, 1)
        box_off("jb_door")
    end
    LoadCostume("mc_bridge.cos")
    xb:set_up_actors()
    start_script(foghorn_sfx)
    start_script(xb.lighthouse)
    start_script(xb.pop_actors)
    xb:add_ambient_sfx(harbor_ambience_list, harbor_ambience_parm_list)
    if xb:current_setup() == xb_newws then
        start_sfx("blimp.imu", IM_HIGH_PRIORITY, 4)
    end
end
xb.exit = function(arg1) -- line 317
    stop_script(foghorn_sfx)
    local local1 = 0
    repeat
        local1 = local1 + 1
        table_actor[local1]:free()
    until local1 == 11
    stop_script(xb.lighthouse)
    stop_script(xb.pop_actors)
    glottis:free()
    meche:free()
    manny:set_collision_mode(COLLISION_OFF)
    meche:set_collision_mode(COLLISION_OFF)
    glottis:set_collision_mode(COLLISION_OFF)
    if glottis.nauseated and not jb.poured then
        stop_script(jb.glottis_nauseated_reminder)
    end
    stop_sound("glNausea.WAV")
    if in_year_four then
        stop_script(xb.meche_arm_idle)
        stop_script(xb.glottis_look_meche)
    end
    stop_sound("blimp.imu")
    xbridge:free()
end
xb.jello = Object:create(xb, "jello", 0, 0, 0, { range = 0 })
xb.gate = Object:create(xb, "/xbtx001/gate", 27.656099, -16.4168, 1.5, { range = 0.69999999 })
xb.gate.use_pnt_x = 27.9979
xb.gate.use_pnt_y = -16.420099
xb.gate.use_pnt_z = 1
xb.gate.use_rot_x = 0
xb.gate.use_rot_y = 107.867
xb.gate.use_rot_z = 0
xb.gate.lookAt = function(arg1) -- line 360
    if not in_year_four then
        START_CUT_SCENE()
        manny:say_line("/xbma002/")
        wait_for_message()
        manny:say_line("/xbma003/")
        END_CUT_SCENE()
    else
        manny:say_line("/xbma009/")
    end
end
xb.gate.pickUp = xb.gate.lookAt
xb.gate.use = function(arg1) -- line 374
    START_CUT_SCENE()
    manny:say_line("/xbma004/")
    wait_for_message()
    END_CUT_SCENE()
    arg1:lookAt()
end
xb.gate.use_key = function(arg1) -- line 382
    manny:say_line("/xbma005/")
end
xb.glottis_obj = Object:create(xb, "/xbtx010/Glottis", 28.028999, -13.0451, 1.66, { range = 1.5 })
xb.glottis_obj.use_pnt_x = 28.149
xb.glottis_obj.use_pnt_y = -13.3851
xb.glottis_obj.use_pnt_z = 1
xb.glottis_obj.use_rot_x = 0
xb.glottis_obj.use_rot_y = -349.40799
xb.glottis_obj.use_rot_z = 0
xb.meche_obj = Object:create(xb, "/xbtx011/Meche", 28.184, -13.722, 1.48, { range = 0.60000002 })
xb.meche_obj.use_pnt_x = 28.214001
xb.meche_obj.use_pnt_y = -13.442
xb.meche_obj.use_pnt_z = 1
xb.meche_obj.use_rot_x = 0
xb.meche_obj.use_rot_y = -171.696
xb.meche_obj.use_rot_z = 0
xb.meche_obj.lookAt = function(arg1) -- line 404
    manny:say_line("/xbma012/")
end
xb.meche_obj.pickUp = function(arg1) -- line 408
    system.default_response("not now")
end
xb.meche_obj.use = function(arg1) -- line 412
    soft_script()
    if not xb.meche_obj.talked_dom then
        xb.meche_obj.talked_dom = TRUE
        START_CUT_SCENE()
        manny:say_line("/xbma013/")
        wait_for_message()
        meche:say_line("/xbmc014/")
        wait_for_message()
        manny:say_line("/xbma015/")
        END_CUT_SCENE()
    else
        soft_script()
        manny:say_line("/xbma016/")
        wait_for_message()
        meche:say_line("/xbmc017/")
    end
end
xb.bridge = Object:create(xb, "/xbtx025/extendo bridge", 28.829, -11.1978, 1.226, { range = 1.6 })
xb.bridge.use_pnt_x = 28.6756
xb.bridge.use_pnt_y = -11.3651
xb.bridge.use_pnt_z = 1
xb.bridge.use_rot_x = 0
xb.bridge.use_rot_y = -53.2281
xb.bridge.use_rot_z = 0
xb.bridge.extended = FALSE
xb.bridge.lookAt = function(arg1) -- line 443
    soft_script()
    manny:say_line("/xbma018/")
    if in_year_four then
        wait_for_message()
        manny:say_line("/xbma019/")
    end
end
xb.bridge.use = function(arg1) -- line 452
    if arg1.extended then
        arg1:retract()
    else
        arg1:extend()
    end
end
xb.bridge.extend = function(arg1) -- line 460
    if manny:walkto(arg1) then
        START_CUT_SCENE()
        manny:wait_for_actor()
        if in_year_four then
            arg1.extended = FALSE
            manny:push_costume("msb_bridge.cos")
            break_here()
            manny:play_chore(mc_bridge_pull_level, "msb_bridge.cos")
            xbridge:run_chore(xbridge_pull_and_return, "xbridge.cos")
            start_sfx("xbGrind.wav")
            sleep_for(2500)
            manny:pop_costume()
            start_script(manny.backup, manny, 1000)
            manny:say_line("/xbma020/")
        else
            manny:push_costume("mc_bridge.cos")
            break_here()
            manny:play_chore(mc_bridge_pull_level, "mc_bridge.cos")
            arg1.extended = TRUE
            xbridge:run_chore(xbridge_lever_pull, "xbridge.cos")
            manny:pop_costume()
            start_script(manny.backup, manny, 1000)
            xbridge:run_chore(xbridge_extend, "xbridge.cos")
            box_on("bridge_box")
        end
        END_CUT_SCENE()
    end
end
xb.bridge.retract = function(arg1) -- line 490
    if manny:walkto_object(arg1) then
        arg1.extended = FALSE
        START_CUT_SCENE()
        manny:setrot(0, 259.565, 0, TRUE)
        manny:wait_for_actor()
        manny:run_chore(mc_reach_med, "mc.cos")
        start_script(manny.walk_and_face, manny, 28.7311, -11.8849, 1, 0, 197.307, 0)
        xbridge:run_chore(xbridge_retract, "xbridge.cos")
        box_off("bridge_box")
        END_CUT_SCENE()
    end
end
xb.track = Object:create(xb, "", 36.164501, -13.1014, 2.87784, { range = 10 })
xb.track.use_pnt_x = 37.019501
xb.track.use_pnt_y = -13.7274
xb.track.use_pnt_z = 1.54784
xb.track.use_rot_x = 0
xb.track.use_rot_y = 9.6220303
xb.track.use_rot_z = 0
xb.track:make_untouchable()
xb.track_trigger = xb.track
xb.track.walkOut = function(arg1) -- line 517
    xb.triggered_track = TRUE
    MakeSectorActive("track_trigger", FALSE)
    if not in_year_four then
        START_CUT_SCENE()
        xb.track:make_touchable()
        manny:walkto_object(arg1)
        manny:wait_for_actor()
        manny:head_look_at_point(36.1645, -13.1014, 2.87784)
        manny:say_line("/sdma003/")
        manny:wait_for_message()
        manny:say_line("/sdma004/")
        manny:wait_for_message()
        manny:head_look_at(nil)
        xb.track:make_untouchable()
        END_CUT_SCENE()
    end
end
xb.hb_door = Object:create(xb, "/xbtx007/bridge", 30.6709, -17.761999, 2.0699999, { range = 0 })
xb.hb_door.use_pnt_x = 30.6035
xb.hb_door.use_pnt_y = -17.2269
xb.hb_door.use_pnt_z = 1.607
xb.hb_door.use_rot_x = 0
xb.hb_door.use_rot_y = 192.12801
xb.hb_door.use_rot_z = 0
xb.hb_door.out_pnt_x = 30.683599
xb.hb_door.out_pnt_y = -17.6
xb.hb_door.out_pnt_z = 1.607
xb.hb_door.out_rot_x = 0
xb.hb_door.out_rot_y = 192.12801
xb.hb_door.out_rot_z = 0
xb.hb_box = xb.hb_door
xb.hb_door:make_untouchable()
xb.hb_door.walkOut = function(arg1) -- line 561
    hb:come_out_door(hb.xb_door)
end
xb.tx_door = Object:create(xb, "/xbtx026/bridge", 28.6411, -9.2664099, 1.47, { range = 0 })
xb.tx_door.use_pnt_x = 28.6411
xb.tx_door.use_pnt_y = -10.132
xb.tx_door.use_pnt_z = 1
xb.tx_door.use_rot_x = 0
xb.tx_door.use_rot_y = -360.832
xb.tx_door.use_rot_z = 0
xb.tx_door.out_pnt_x = 28.654301
xb.tx_door.out_pnt_y = -9.2025099
xb.tx_door.out_pnt_z = 1
xb.tx_door.out_rot_x = 0
xb.tx_door.out_rot_y = -360.832
xb.tx_door.out_rot_z = 0
xb.tx_box = xb.tx_door
xb.tx_door:make_untouchable()
xb.tx_door.walkOut = function(arg1) -- line 586
    tx:come_out_door(tx.xb_door)
end
xb.jb_door = Object:create(xb, "/xbtx021/doors", 27.549999, -13.1334, 1.61, { range = 1 })
xb.jb_door.use_pnt_x = 27.8496
xb.jb_door.use_pnt_y = -13.132
xb.jb_door.use_pnt_z = 1
xb.jb_door.use_rot_x = 0
xb.jb_door.use_rot_y = 77.278099
xb.jb_door.use_rot_z = 0
xb.jb_door.lookAt = function(arg1) -- line 599
    if in_year_four then
        manny:say_line("/xbma022/")
    else
        manny:say_line("/xbma023/")
    end
end
xb.jb_door.use = function(arg1) -- line 607
    manny:say_line("/xbma024/")
end
xb.jb_door.year_four_walkOut = function(arg1) -- line 611
    jb:come_out_door(jb.xb_door)
end
xb.se_door = Object:create(xb, "door", 40.260502, -12.8684, 1.01, { range = 0 })
xb.se_box = xb.se_door
xb.se_door.use_pnt_x = 39.785599
xb.se_door.use_pnt_y = -12.877
xb.se_door.use_pnt_z = 1.01
xb.se_door.use_rot_x = 0
xb.se_door.use_rot_y = 261.487
xb.se_door.use_rot_z = 0
xb.se_door.out_pnt_x = 41.291901
xb.se_door.out_pnt_y = -12.85
xb.se_door.out_pnt_z = 0.68217498
xb.se_door.out_rot_x = 0
xb.se_door.out_rot_y = -89.106697
xb.se_door.out_rot_z = 0
xb.se_door.touchable = FALSE
xb.se_door.walkOut = function(arg1) -- line 635
    START_CUT_SCENE()
    manny:walkto(arg1.out_pnt_x, arg1.out_pnt_y, arg1.out_pnt_z)
    manny:wait_for_actor()
    END_CUT_SCENE()
    se:come_out_door(se.sd_door)
end
xb.sd_start = Object:create(xb, "", 38.625, -13.65, 1, { range = 0 })
xb.sd_start.use_pnt_x = 38.625
xb.sd_start.use_pnt_y = -13.65
xb.sd_start.use_pnt_z = 1
xb.sd_start.use_rot_x = 0
xb.sd_start.use_rot_y = -431.17499
xb.sd_start.use_rot_z = 0
xb.sd_start:make_untouchable()
xb.sd_exit = Object:create(xb, "", 38.919201, -13.5496, 1, { range = 0 })
xb.sd_exit.use_pnt_x = 38.919201
xb.sd_exit.use_pnt_y = -13.5496
xb.sd_exit.use_pnt_z = 1
xb.sd_exit.use_rot_x = 0
xb.sd_exit.use_rot_y = -431.17499
xb.sd_exit.use_rot_z = 0
xb.sd_exit:make_untouchable()
xb.sd_ws1 = xb.sd_exit
xb.sd_ws2 = xb.sd_exit
xb.sd_ws3 = xb.sd_exit
xb.sd_exit.walkOut = function(arg1) -- line 672
    START_CUT_SCENE()
    manny:setpos(xb.ws_start.use_pnt_x, xb.ws_start.use_pnt_y, xb.ws_start.use_pnt_z)
    manny:setrot(0, xb.ws_exit.use_rot_y + 180, 0)
    xb:current_setup(xb_newws)
    manny:walkto(xb.ws_exit.use_pnt_x, xb.ws_exit.use_pnt_y, xb.ws_exit.use_pnt_z)
    manny:wait_for_actor()
    END_CUT_SCENE()
end
xb.ws_start = Object:create(xb, "", 39.849998, -13.3752, 1.8200001, { range = 0 })
xb.ws_start.use_pnt_x = 39.849998
xb.ws_start.use_pnt_y = -13.3752
xb.ws_start.use_pnt_z = 1.8200001
xb.ws_start.use_rot_x = 0
xb.ws_start.use_rot_y = -629.64801
xb.ws_start.use_rot_z = 0
xb.ws_start:make_untouchable()
xb.ws_exit = Object:create(xb, "", 39.365501, -13.3811, 1.77341, { range = 0 })
xb.ws_exit.use_pnt_x = 39.365501
xb.ws_exit.use_pnt_y = -13.3811
xb.ws_exit.use_pnt_z = 1.77341
xb.ws_exit.use_rot_x = 0
xb.ws_exit.use_rot_y = -629.64801
xb.ws_exit.use_rot_z = 0
xb.ws_exit:make_untouchable()
xb.ws_sd_box = xb.ws_exit
xb.ws_exit.walkOut = function(arg1) -- line 703
    START_CUT_SCENE()
    manny:setpos(xb.sd_start.use_pnt_x, xb.sd_start.use_pnt_y, xb.sd_start.use_pnt_z)
    manny:setrot(0, xb.sd_exit.use_rot_y + 180, 0)
    xb:current_setup(xb_trkws)
    manny:walkto(xb.sd_exit.use_pnt_x, xb.sd_exit.use_pnt_y, xb.sd_exit.use_pnt_z)
    manny:wait_for_actor()
    END_CUT_SCENE()
end
xb.ws_far_start = Object:create(xb, "", 34.650002, -13.8858, 1.3200001, { range = 0 })
xb.ws_far_start.use_pnt_x = 34.650002
xb.ws_far_start.use_pnt_y = -13.8858
xb.ws_far_start.use_pnt_z = 1.3200001
xb.ws_far_start.use_rot_x = 0
xb.ws_far_start.use_rot_y = -453.60501
xb.ws_far_start.use_rot_z = 0
xb.ws_far_start:make_untouchable()
xb.ws_far_exit = Object:create(xb, "", 34.9631, -13.9057, 1.3501101, { range = 0 })
xb.ws_far_exit.use_pnt_x = 34.9631
xb.ws_far_exit.use_pnt_y = -13.9057
xb.ws_far_exit.use_pnt_z = 1.3501101
xb.ws_far_exit.use_rot_x = 0
xb.ws_far_exit.use_rot_y = -453.60501
xb.ws_far_exit.use_rot_z = 0
xb.ws_far_exit:make_untouchable()
xb.ws_ns_box = xb.ws_far_exit
xb.ws_far_exit.walkOut = function(arg1) -- line 735
    START_CUT_SCENE()
    manny:setpos(xb.ns_start.use_pnt_x, xb.ns_start.use_pnt_y, xb.ns_start.use_pnt_z)
    manny:setrot(0, xb.ns_start.use_rot_y + 180, 0)
    xb:current_setup(xb_docws)
    manny:walkto(xb.ns_exit.use_pnt_x, xb.ns_exit.use_pnt_y, xb.ns_exit.use_pnt_z)
    manny:wait_for_actor()
    END_CUT_SCENE()
end
xb.ns_start = Object:create(xb, "", 31.127199, -13.2817, 1, { range = 0 })
xb.ns_start.use_pnt_x = 31.127199
xb.ns_start.use_pnt_y = -13.2817
xb.ns_start.use_pnt_z = 1
xb.ns_start.use_rot_x = 0
xb.ns_start.use_rot_y = -285.87601
xb.ns_start.use_rot_z = 0
xb.ns_start:make_untouchable()
xb.ns_exit = Object:create(xb, "", 31.0802, -13.8597, 1, { range = 0 })
xb.ns_exit.use_pnt_x = 31.0802
xb.ns_exit.use_pnt_y = -13.8597
xb.ns_exit.use_pnt_z = 1
xb.ns_exit.use_rot_x = 0
xb.ns_exit.use_rot_y = -252.892
xb.ns_exit.use_rot_z = 0
xb.ns_exit:make_untouchable()
xb.ns_ws_box = xb.ns_exit
xb.ns_exit.walkOut = function(arg1) -- line 767
    START_CUT_SCENE()
    manny:setpos(xb.ws_far_start.use_pnt_x, xb.ws_far_start.use_pnt_y, xb.ws_far_start.use_pnt_z)
    manny:setrot(0, xb.ws_far_start.use_rot_y + 180, 0)
    xb:current_setup(xb_newws)
    manny:walkto(xb.ws_far_exit.use_pnt_x, xb.ws_far_exit.use_pnt_y, xb.ws_far_exit.use_pnt_z)
    manny:wait_for_actor()
    END_CUT_SCENE()
end
xbridge_extend = 0
xbridge_retracted = 1
xbridge_extended = 2
xbridge_lever_pull = 3
xbridge_retract = 4
xbridge_lever_push = 5
xbridge_pull_and_return = 6
CheckFirstTime("year_0.lua")
BundleResource("dfltroom.bm")
BundleResource("dflt.mat")
BundleResource("shadow.cmp")
BundleResource("shadow.mat")
BundleResource("splash.bm")
BundleResource("wait.bm")
BundleResource("fs3mtrl1.WAV")
BundleResource("fs3mtrl2.WAV")
BundleResource("fs3mtrr1.WAV")
BundleResource("fs3mtrr2.WAV")
BundleResource("fs3mtstp.WAV")
BundleResource("fs3mtwl1.WAV")
BundleResource("fs3mtwl2.WAV")
BundleResource("fs3mtwl3.WAV")
BundleResource("fs3mtwl4.WAV")
BundleResource("fs3mtwr1.WAV")
BundleResource("fs3mtwr2.WAV")
BundleResource("fs3mtwr3.WAV")
BundleResource("fs3mtwr4.WAV")
BundleResource("fsconrl1.WAV")
BundleResource("fsconrl2.WAV")
BundleResource("fsconrl3.WAV")
BundleResource("fsconrl4.WAV")
BundleResource("fsconrr1.WAV")
BundleResource("fsconrr2.WAV")
BundleResource("fsconrr3.WAV")
BundleResource("fsconrr4.WAV")
BundleResource("fsconstp.WAV")
BundleResource("fsconwl1.WAV")
BundleResource("fsconwl2.WAV")
BundleResource("fsconwl3.WAV")
BundleResource("fsconwl4.WAV")
BundleResource("fsconwr1.WAV")
BundleResource("fsconwr2.WAV")
BundleResource("fsconwr3.WAV")
BundleResource("fsconwr4.WAV")
BundleResource("fscrkrl1.WAV")
BundleResource("fscrkrl2.WAV")
BundleResource("fscrkrr1.WAV")
BundleResource("fscrkrr2.WAV")
BundleResource("fscrkstp.WAV")
BundleResource("fscrkwl1.WAV")
BundleResource("fscrkwl2.WAV")
BundleResource("fscrkwr1.WAV")
BundleResource("fscrkwr2.WAV")
BundleResource("fsdrtrl1.WAV")
BundleResource("fsdrtrl2.WAV")
BundleResource("fsdrtrl3.WAV")
BundleResource("fsdrtrl4.WAV")
BundleResource("fsdrtrr1.WAV")
BundleResource("fsdrtrr2.WAV")
BundleResource("fsdrtrr3.WAV")
BundleResource("fsdrtrr4.WAV")
BundleResource("fsdrtstp.WAV")
BundleResource("fsdrtwl1.WAV")
BundleResource("fsdrtwl2.WAV")
BundleResource("fsdrtwl3.WAV")
BundleResource("fsdrtwl4.WAV")
BundleResource("fsdrtwr1.WAV")
BundleResource("fsdrtwr2.WAV")
BundleResource("fsdrtwr3.WAV")
BundleResource("fsdrtwr4.WAV")
BundleResource("fsekorl1.WAV")
BundleResource("fsekorl2.WAV")
BundleResource("fsekorl3.WAV")
BundleResource("fsekorl4.WAV")
BundleResource("fsekorr1.WAV")
BundleResource("fsekorr2.WAV")
BundleResource("fsekorr3.WAV")
BundleResource("fsekorr4.WAV")
BundleResource("fsekowl1.WAV")
BundleResource("fsekowl2.WAV")
BundleResource("fsekowl3.WAV")
BundleResource("fsekowl4.WAV")
BundleResource("fsekowr1.WAV")
BundleResource("fsekowr2.WAV")
BundleResource("fsekowr3.WAV")
BundleResource("fsekowr4.WAV")
BundleResource("fsflwrl1.WAV")
BundleResource("fsflwrl2.WAV")
BundleResource("fsflwrr1.WAV")
BundleResource("fsflwrr2.WAV")
BundleResource("fsflwwl1.WAV")
BundleResource("fsflwwl2.WAV")
BundleResource("fsflwwr1.WAV")
BundleResource("fsflwwr2.WAV")
BundleResource("fsGltWL1.WAV")
BundleResource("fsGltWL2.WAV")
BundleResource("fsGltWR1.WAV")
BundleResource("fsGltWR2.WAV")
BundleResource("fsgrvrl1.WAV")
BundleResource("fsgrvrl2.WAV")
BundleResource("fsgrvrl3.WAV")
BundleResource("fsgrvrl4.WAV")
BundleResource("fsgrvrr1.WAV")
BundleResource("fsgrvrr2.WAV")
BundleResource("fsgrvrr3.WAV")
BundleResource("fsgrvrr4.WAV")
BundleResource("fsgrvwl1.WAV")
BundleResource("fsgrvwl2.WAV")
BundleResource("fsgrvwl3.WAV")
BundleResource("fsgrvwl4.WAV")
BundleResource("fsgrvwr1.WAV")
BundleResource("fsgrvwr2.WAV")
BundleResource("fsgrvwr3.WAV")
BundleResource("fsgrvwr4.WAV")
BundleResource("fsJllWL1.WAV")
BundleResource("fsJllWL2.WAV")
BundleResource("fsJllWR1.WAV")
BundleResource("fsJllWR2.WAV")
BundleResource("fslad_l1.WAV")
BundleResource("fslad_l2.WAV")
BundleResource("fslad_r1.WAV")
BundleResource("fslad_r2.WAV")
BundleResource("fsmarrl1.WAV")
BundleResource("fsmarrl2.WAV")
BundleResource("fsmarrr1.WAV")
BundleResource("fsmarrr2.WAV")
BundleResource("fsmarstp.WAV")
BundleResource("fsmarwl1.WAV")
BundleResource("fsmarwl2.WAV")
BundleResource("fsmarwr1.WAV")
BundleResource("fsmarwr2.WAV")
BundleResource("fsmetrl1.WAV")
BundleResource("fsmetrl2.WAV")
BundleResource("fsmetrl3.WAV")
BundleResource("fsmetrl4.WAV")
BundleResource("fsmetrr1.WAV")
BundleResource("fsmetrr2.WAV")
BundleResource("fsmetrr3.WAV")
BundleResource("fsmetrr4.WAV")
BundleResource("fsmetstp.WAV")
BundleResource("fsmetwl1.WAV")
BundleResource("fsmetwl2.WAV")
BundleResource("fsmetwl3.WAV")
BundleResource("fsmetwl4.WAV")
BundleResource("fsmetwr1.WAV")
BundleResource("fsmetwr2.WAV")
BundleResource("fsmetwr3.WAV")
BundleResource("fsmetwr4.WAV")
BundleResource("fsnicwl1.WAV")
BundleResource("fsnicwl2.WAV")
BundleResource("fsnicwr1.WAV")
BundleResource("fsnicwr2.WAV")
BundleResource("fspavrl1.WAV")
BundleResource("fspavrl2.WAV")
BundleResource("fspavrl3.WAV")
BundleResource("fspavrl4.WAV")
BundleResource("fspavrr1.WAV")
BundleResource("fspavrr2.WAV")
BundleResource("fspavrr3.WAV")
BundleResource("fspavrr4.WAV")
BundleResource("fspavstp.WAV")
BundleResource("fspavwl1.WAV")
BundleResource("fspavwl2.WAV")
BundleResource("fspavwl3.WAV")
BundleResource("fspavwl4.WAV")
BundleResource("fspavwr1.WAV")
BundleResource("fspavwr2.WAV")
BundleResource("fspavwr3.WAV")
BundleResource("fspavwr4.WAV")
BundleResource("fsrugrl1.WAV")
BundleResource("fsrugrl2.WAV")
BundleResource("fsrugrl3.WAV")
BundleResource("fsrugrl4.WAV")
BundleResource("fsrugrr1.WAV")
BundleResource("fsrugrr2.WAV")
BundleResource("fsrugrr3.WAV")
BundleResource("fsrugrr4.WAV")
BundleResource("fsrugwl1.WAV")
BundleResource("fsrugwl2.WAV")
BundleResource("fsrugwl3.WAV")
BundleResource("fsrugwl4.WAV")
BundleResource("fsrugwr1.WAV")
BundleResource("fsrugwr2.WAV")
BundleResource("fsrugwr3.WAV")
BundleResource("fsrugwr4.WAV")
BundleResource("fsrvbrl1.WAV")
BundleResource("fsrvbrl2.WAV")
BundleResource("fsrvbrr1.WAV")
BundleResource("fsrvbrr2.WAV")
BundleResource("fsrvbwl1.WAV")
BundleResource("fsrvbwl2.WAV")
BundleResource("fsrvbwr1.WAV")
BundleResource("fsrvbwr2.WAV")
BundleResource("fssndrl1.WAV")
BundleResource("fssndrl2.WAV")
BundleResource("fssndrl3.WAV")
BundleResource("fssndrl4.WAV")
BundleResource("fssndrr1.WAV")
BundleResource("fssndrr2.WAV")
BundleResource("fssndrr3.WAV")
BundleResource("fssndrr4.WAV")
BundleResource("fssndstp.WAV")
BundleResource("fssndwl1.WAV")
BundleResource("fssndwl2.WAV")
BundleResource("fssndwl3.WAV")
BundleResource("fssndwl4.WAV")
BundleResource("fssndwr1.WAV")
BundleResource("fssndwr2.WAV")
BundleResource("fssndwr3.WAV")
BundleResource("fssndwr4.WAV")
BundleResource("fssnorl1.WAV")
BundleResource("fssnorl2.WAV")
BundleResource("fssnorl3.WAV")
BundleResource("fssnorl4.WAV")
BundleResource("fssnorr1.WAV")
BundleResource("fssnorr2.WAV")
BundleResource("fssnorr3.WAV")
BundleResource("fssnorr4.WAV")
BundleResource("fssnostp.WAV")
BundleResource("fssnowl1.WAV")
BundleResource("fssnowl2.WAV")
BundleResource("fssnowl3.WAV")
BundleResource("fssnowl4.WAV")
BundleResource("fssnowr1.WAV")
BundleResource("fssnowr2.WAV")
BundleResource("fssnowr3.WAV")
BundleResource("fssnowr4.WAV")
BundleResource("fstrprl1.wav")
BundleResource("fstrprr1.wav")
BundleResource("fstrpwl1.wav")
BundleResource("fstrpwr1.wav")
BundleResource("fsWetRL1.WAV")
BundleResource("fsWetRL2.WAV")
BundleResource("fsWetRR1.WAV")
BundleResource("fsWetRR2.WAV")
BundleResource("fsWetWL1.WAV")
BundleResource("fsWetWL2.WAV")
BundleResource("fsWetWR1.WAV")
BundleResource("fsWetWR2.WAV")
BundleResource("fsmvbwl1.wav")
BundleResource("fsmvbwl2.wav")
BundleResource("fsmvbwr1.wav")
BundleResource("fsmvbwr2.wav")
BundleResource("fsflwwl1.wav")
BundleResource("fsflwwl2.wav")
BundleResource("fsflwwr1.wav")
BundleResource("fsflwwr2.wav")
BundleResource("fsflwrl1.wav")
BundleResource("fsflwrl2.wav")
BundleResource("fsflwrr1.wav")
BundleResource("fsflwrr2.wav")
BundleResource("fsgltwl1.wav")
BundleResource("fsgltwl2.wav")
BundleResource("fsgltwr1.wav")
BundleResource("fsgltwr2.wav")
BundleResource("fsjllwl1.wav")
BundleResource("fsjllwl2.wav")
BundleResource("fsjllwr1.wav")
BundleResource("fsjllwr2.wav")
BundleResource("fswtrwl1.wav")
BundleResource("fswtrwl2.wav")
BundleResource("fswtrwl3.wav")
BundleResource("fswtrwr1.wav")
BundleResource("fswtrwr2.wav")
BundleResource("fswtrwr3.wav")
BundleResource("fswtrrl1.wav")
BundleResource("fswtrrl2.wav")
BundleResource("fswtrrr1.wav")
BundleResource("fswtrrr2.wav")
BundleResource("fsbcnwl1.wav")
BundleResource("fsbcnwl2.wav")
BundleResource("fsbcnwl3.wav")
BundleResource("fsbcnwr1.wav")
BundleResource("fsbcnwr2.wav")
BundleResource("sggl011.wav")
BundleResource("sggl012.wav")
BundleResource("sggl013.wav")
BundleResource("sggl014.wav")
BundleResource("sggl015.wav")
BundleResource("sggl016.wav")
BundleResource("sggl017.wav")
BundleResource("sggl018.wav")
BundleResource("sggl019.wav")
BundleResource("sggl020.wav")
BundleResource("bdma006B.wav")
BundleResource("sugl165.wav")
BundleResource("bl_lam_ocean.snm")
BundleResource("bl_ocean.snm")
BundleResource("cb_water.snm")
BundleResource("cu_cy.snm")
BundleResource("cv_bf.snm")
BundleResource("cv_br.snm")
BundleResource("cy_w.snm")
BundleResource("dd_lx.snm")
BundleResource("ew_w.snm")
BundleResource("lu.snm")
BundleResource("se_water.snm")
BundleResource("ts_crowd.snm")
BundleResource("ly_sheet_toss.snm")
BundleResource("ly_getup.snm")
BundleResource("ly_win.snm")
BundleResource("cam_cyc.snm")
CheckFirstTime("year_1.lua")
cut_scene.intro = function(arg1) -- line 8
    START_CUT_SCENE()
    manny.idles_allowed = FALSE
    manny:setpos(1.39601, 1.48653, 0)
    manny:setrot(0, 50.3818, 0)
    mo:current_setup(mo_ddtws)
    set_override(cut_scene.intro_override, cut_scene)
    cutscene_menu:enable_cutscene("intro")
    RunFullscreenMovie("intro.snm")
    start_script(manny.walk_and_face, manny, 1.32737, 1.59881, 0, 0, 50.3818, 0)
    EngineDisplay(FALSE)
    break_here()
    EngineDisplay(TRUE)
    StartMovie("mo_ts.snm", nil, 0, 256)
    wait_for_movie()
    music_state:update(system.currentSet)
    wait_for_script(manny.walk_and_face)
    END_CUT_SCENE()
    manny:say_line("/intma39/")
    manny.idles_allowed = TRUE
end
cut_scene.intro_override = function(arg1) -- line 32
    kill_override()
    manny:setpos(1.32737, 1.59881, 0)
    manny:setrot(0, 50.3818, 0)
    EngineDisplay(TRUE)
    manny.idles_allowed = TRUE
    ImSetState(stateMO)
end
cut_scene.lol = function(arg1) -- line 43
    ga.work_order:free()
    mo.tube.contains = nil
    mo.memo:free()
    cutscene_menu:enable_cutscene("lol")
    stop_script(run_idle)
    eva:stop_chore()
    eva:free()
    stop_sound("keyboard.imu")
    set_override(cut_scene.lol_override, cut_scene)
    START_CUT_SCENE()
    RunFullscreenMovie("lol.snm")
    END_CUT_SCENE()
    set_override(nil)
    start_script(lr.walk_in)
end
cut_scene.lol_override = function(arg1) -- line 63
    kill_override()
    music_state:unpause()
    single_start_script(lr.walk_in)
end
cut_scene.brunopk = function(arg1) -- line 69
    reaped_bruno = TRUE
    inventory_disabled = FALSE
    cutscene_menu:enable_cutscene("brunopk")
    START_CUT_SCENE("no head")
    lo:switch_to_set()
    lo:current_setup(lo_pckws)
    manny:put_in_set(lo)
    manny:setpos(2.19, -1.81481, 0)
    manny:setrot(0, 82.9565, 0)
    set_override(cut_scene.brunopk_override, cut_scene)
    RunFullscreenMovie("brunopk.snm")
    END_CUT_SCENE()
    start_script(cut_scene.brunopk_override)
end
cut_scene.brunopk_override = function(arg1, arg2) -- line 91
    if arg2 then
        PrintDebug("brunopk override hit!\n")
        kill_override()
    end
    START_CUT_SCENE()
    EngineDisplay(FALSE)
    lo:switch_to_set()
    lo:current_setup(lo_pckws)
    manny:put_in_set(lo)
    manny:setpos(2.19, -1.81481, 0)
    manny:setrot(0, 82.9565, 0)
    break_here()
    start_script(manny.walkto, manny, 0.68697, -2.93948, 0, 0, 170, 0)
    EngineDisplay(TRUE)
    sleep_for(500)
    manny:say_line("/syma218/")
    wait_for_message()
    manny:wait_for_actor()
    manny:say_line("/syma219/")
    manny:wait_for_message()
    EngineDisplay(FALSE)
    stop_script(manny.walkto)
    manny:stop_walk()
    manny:stop_chore()
    ha:switch_to_set()
    manny:put_in_set(ha)
    manny:setpos(ha.lo_door.out_pnt_x, ha.lo_door.out_pnt_y, ha.lo_door.out_pnt_z)
    manny:setrot(ha.lo_door.out_rot_x, ha.lo_door.out_rot_y + 180, ha.lo_door.out_rot_z)
    break_here()
    EngineDisplay(TRUE)
    ha.lo_door:open()
    END_CUT_SCENE()
    manny:walkto(7.12676, 2.55694, 0)
end
cut_scene.bonewgn = function(arg1) -- line 143
    reaped_bruno = TRUE
    reaped_meche = TRUE
    fe.balloons.balloon1:put_in_limbo()
    fe.balloons.balloon2:put_in_limbo()
    fe.balloons.balloon3:put_in_limbo()
    fe.balloons.balloon4:put_in_limbo()
    fe.balloons.balloon5:put_in_limbo()
    pk.balloons.balloon1:put_in_limbo()
    pk.balloons.balloon2:put_in_limbo()
    pk.balloons.balloon3:put_in_limbo()
    pk.balloons.balloon4:put_in_limbo()
    pk.balloons.balloon5:put_in_limbo()
    cutscene_menu:enable_cutscene("repmec1c")
    START_CUT_SCENE()
    set_override(cut_scene.bonewgn_override)
    RunFullscreenMovie("repmec1c.snm")
    END_CUT_SCENE()
    start_script(mo.manny_meche_dialog)
end
cut_scene.bonewgn_override = function() -- line 166
    kill_override()
    music_state:unpause()
    single_start_script(mo.manny_meche_dialog)
end
cut_scene.reapmec3 = function(arg1) -- line 172
    reaped_bruno = TRUE
    reaped_meche = TRUE
    cutscene_menu:enable_cutscene("repmec3c")
    START_CUT_SCENE()
    set_override(cut_scene.reapmec3_override)
    system:unlock_display()
    RunFullscreenMovie("repmec3c.snm")
    END_CUT_SCENE()
    stop_script(run_idle)
    eva:stop_chore()
    eva:free()
    single_start_script(gs.set_up_prison)
end
cut_scene.reapmec3_override = function() -- line 191
    kill_override()
    music_state:unpause()
    stop_script(run_idle)
    eva:stop_chore()
    eva:free()
    single_start_script(gs.set_up_prison)
end
cut_scene.lsahq = function() -- line 200
    START_CUT_SCENE()
    gs.is_jail = FALSE
    reaped_bruno = TRUE
    reaped_meche = TRUE
    cutscene_menu:enable_cutscene("lsahq")
    set_override(cut_scene.lsahq_override)
    RunFullscreenMovie("lsahq.snm")
    EngineDisplay(FALSE)
    hq:switch_to_set()
    manny:put_in_set(hq)
    manny:setpos(0.608613, -0.19144, 0)
    manny:setrot(0, 88.8016, 0)
    hq:init_hq()
    salvador:setpos(-0.861, -0.201, 0)
    salvador:setrot(0, 272.255, 0)
    EngineDisplay(TRUE)
    start_script(hq.salvador_walks)
    wait_for_script(hq.salvador_walks)
    eva:setpos(-0.563042, -0.421926, -0.08)
    eva:setrot(0, 177, 0)
    END_CUT_SCENE()
    start_script(hq.demo_opening_override)
end
cut_scene.lsahq_override = function() -- line 234
    if override_hit then
        StopMovie()
    else
        kill_override()
    end
    music_state:unpause()
    hq:switch_to_set()
    manny:put_in_set(hq)
    EngineDisplay(TRUE)
    start_script(hq.demo_opening_override)
end
cut_scene.stump = function(arg1) -- line 247
    mo.cards:put_in_limbo()
    mo.one_card:put_in_limbo()
    fe.balloon_cat:put_in_limbo()
    fe.balloon_dingo:put_in_limbo()
    fe.balloon_frost:put_in_limbo()
    fe.breads.bread1:put_in_limbo()
    fe.breads.bread2:put_in_limbo()
    fe.breads.bread3:put_in_limbo()
    fe.breads.bread4:put_in_limbo()
    fe.breads.bread5:put_in_limbo()
    fe.balloons.balloon1:put_in_limbo()
    fe.balloons.balloon2:put_in_limbo()
    fe.balloons.balloon3:put_in_limbo()
    fe.balloons.balloon4:put_in_limbo()
    fe.balloons.balloon5:put_in_limbo()
    pk.balloons.balloon1:put_in_limbo()
    pk.balloons.balloon2:put_in_limbo()
    pk.balloons.balloon3:put_in_limbo()
    pk.balloons.balloon4:put_in_limbo()
    pk.balloons.balloon5:put_in_limbo()
    if bd.extinguisher.owner ~= manny then
        bd.extinguisher:get()
    end
    cutscene_menu:enable_cutscene("stump1c")
    START_CUT_SCENE()
    set_override(cut_scene.skip_stump, cut_scene)
    RunFullscreenMovie("stump1c.snm")
    END_CUT_SCENE()
    cut_scene:skip_stump()
end
cut_scene.skip_stump = function(arg1, arg2) -- line 283
    if arg2 then
        kill_override()
        StopMovie()
    end
    manny.costume_state = "action"
    sm:climb_out_stump()
end
cut_scene.glotlive = function(arg1) -- line 294
    glottis.ripped_heart = TRUE
    glottis.heartless = TRUE
    if bd.extinguisher.owner ~= manny then
        bd.extinguisher:get()
    end
    sg:switch_to_set()
    sg:current_setup(sg_spdws)
    manny:put_in_set(sg)
    manny:put_at_interest()
    start_script(sg.replace_heart)
end
cut_scene.sp06a = function(arg1) -- line 307
    cutscene_menu:enable_cutscene("stump3c")
    START_CUT_SCENE()
    set_override(cut_scene.skip_sp06a, cut_scene)
    RunFullscreenMovie("stump3c.snm")
    sg:switch_to_set()
    sg:current_setup(sg_spdws)
    sp.web.contains = sp.heart
    sg:current_setup(sg_gltoh)
    END_CUT_SCENE()
end
cut_scene.skip_sp06a = function(arg1) -- line 322
    kill_override()
    music_state:unpause()
    sg:switch_to_set()
    sg:current_setup(sg_spdws)
    sp.web.contains = sp.heart
    sg:current_setup(sg_gltoh)
end
cut_scene.copaldie = function(arg1) -- line 333
    cutscene_menu:enable_cutscene("copaldie")
    reaped_bruno = TRUE
    reaped_meche = TRUE
    START_CUT_SCENE()
    set_override(cut_scene.skip_copaldie, cut_scene)
    le:switch_to_set()
    le:current_setup(le_rufla)
    manny:set_visibility(FALSE)
    IrisUp(320, 240, 1000)
    sleep_for(3000)
    RunFullscreenMovie("copaldie.snm")
    END_CUT_SCENE()
    arg1:skip_copaldie()
end
cut_scene.skip_copaldie = function(arg1, arg2) -- line 354
    if arg2 then
        kill_override()
    end
    sg:switch_to_set()
    sg:current_setup(sg_sgnha)
    glottis:put_in_set(sg)
    manny:put_in_set(sg)
    manny:set_visibility(TRUE)
    start_script(sg.get_in_BW, sg)
end
cut_scene.puzl19c = function(arg1) -- line 368
    tr:switch_to_set()
    tr:set_up_aftermath()
    cutscene_menu:enable_cutscene("getshcks")
    START_CUT_SCENE()
    set_override(cut_scene.skip_puzl19c, cut_scene)
    RunFullscreenMovie("getshcks.snm")
    END_CUT_SCENE()
    tr:solve_mod()
end
cut_scene.skip_puzl19c = function(arg1) -- line 382
    kill_override()
    music_state:unpause()
    tr:solve_mod()
end
cut_scene.puzl16c = function(arg1) -- line 388
    if not bd.bone_wagon.touchable then
        sg.bone_wagon:make_untouchable()
        na.bone_wagon:make_untouchable()
        lb.bone_wagon:make_untouchable()
        bd.bone_wagon:make_touchable()
    end
    START_CUT_SCENE()
    bd:switch_to_set()
    print_temporary("anim: manny runs out on fire, Glottis sprays him with a fire extinguisher.")
    wait_for_message()
    manny:say_line("/syma092/")
    wait_for_message()
    manny:say_line("/syma093/")
    wait_for_message()
    glottis:say_line("/sygl094/")
    wait_for_message()
    manny:say_line("/syma095/")
    END_CUT_SCENE()
    bd.extinguisher:get()
end
cut_scene.outofpf = function(arg1) -- line 412
    if not bd.all_beavers_dead then
        bd.all_beavers_dead = TRUE
        bv:switch_to_set()
        break_here()
    end
    set_override(cut_scene.skip_outofpf, cut_scene)
    START_CUT_SCENE()
    IrisDown(320, 200, 1000)
    bd:switch_to_set()
    bd:current_setup(bd_damha)
    manny:push_costume("bonewagon_gl.cos")
    manny:put_in_set(bd)
    manny:set_walk_rate(0.2)
    manny:play_chore(bonewagon_gl_stay_up)
    manny:play_chore(bonewagon_gl_ma_sit)
    manny:play_chore(bonewagon_gl_gl_drive)
    manny:setpos(4.51662, 0.58792, 0.13)
    manny:setrot(0, -91.5959, 0)
    start_script(bd.leave_drive)
    start_script(bd.set_roll)
    start_script(bd.set_pitch)
    start_sfx("bwIdle.IMU", IM_HIGH_PRIORITY, 80)
    IrisUp(320, 200, 1000)
    sleep_for(800)
    glottis:say_line("/bdgl012/")
    wait_for_message()
    manny:say_line("/bdma013/")
    wait_for_message()
    glottis:say_line("/bdgl014/")
    wait_for_message()
    manny:say_line("/bdma015/")
    wait_for_message()
    manny:say_line("/bdma016/")
    wait_for_message()
    glottis:say_line("/bdgl017/")
    wait_for_message()
    END_CUT_SCENE()
    manny:pop_costume()
    stop_sound("bwIdle.IMU")
    stop_script(bd.leave_drive)
    stop_script(bd.set_roll)
    stop_script(bd.set_pitch)
    manny.is_holding = nil
    manny:stop_chore(manny.hold_chore, manny.base_costume)
    manny:stop_chore(ms_hold, manny.base_costume)
    manny.hold_chore = nil
    bd.extinguisher:free()
    sp.bones.bone1:free()
    sp.bones.bone2:free()
    sp.bones.bone3:free()
    sp.bones.bone4:free()
    sp.bones.bone5:free()
    lb.key:free()
    cut_scene:heloruba()
end
cut_scene.skip_outofpf = function(arg1) -- line 475
    kill_override()
    manny:default("action")
    stop_sound("bwIdle.IMU")
    stop_script(bd.leave_drive)
    stop_script(bd.set_roll)
    stop_script(bd.set_pitch)
    manny.is_holding = nil
    manny:stop_chore(manny.hold_chore, manny.base_costume)
    manny:stop_chore(ms_hold, manny.base_costume)
    manny.hold_chore = nil
    bd.extinguisher:free()
    sp.bones.bone1:free()
    sp.bones.bone2:free()
    sp.bones.bone3:free()
    sp.bones.bone4:free()
    sp.bones.bone5:free()
    lb.key:free()
    cut_scene:heloruba()
end
cut_scene.heloruba = function(arg1) -- line 496
    cutscene_menu:enable_cutscene("heloruba")
    START_CUT_SCENE()
    set_override(cut_scene.skip_heloruba, cut_scene)
    fc:switch_to_set()
    RunFullscreenMovie("heloruba.snm")
    re:switch_to_set()
    re:current_setup(re_lotws)
    END_CUT_SCENE()
    start_script(re.heloruba_outro)
end
cut_scene.skip_heloruba = function(arg1) -- line 512
    kill_override()
    music_state:unpause()
    re:switch_to_set()
    re:current_setup(re_lotws)
    single_start_script(re.heloruba_outro, re)
end
cut_scene.plunge = function(arg1) -- line 520
    cutscene_menu:enable_cutscene("plunge")
    START_CUT_SCENE()
    set_override(cut_scene.skip_plunge, cut_scene)
    RunFullscreenMovie("plunge.snm")
    re:switch_to_set()
    END_CUT_SCENE()
    start_script(re.velasco_intro)
end
cut_scene.skip_plunge = function(arg1) -- line 532
    kill_override()
    music_state:unpause()
    single_start_script(re.velasco_intro)
end
cut_scene.year2int = function(arg1) -- line 538
    re.logbook:put_in_limbo()
    ri.photo:put_in_limbo()
    cutscene_menu:enable_cutscene("yr2intro")
    START_CUT_SCENE()
    set_override(cut_scene.skip_year2int, cut_scene)
    RunFullscreenMovie("yr2intro.snm")
    END_CUT_SCENE()
    cut_scene:skip_year2int(FALSE)
end
cut_scene.skip_year2int = function(arg1, arg2) -- line 553
    if arg2 then
        kill_override()
        music_state:unpause()
    end
    manny:free()
    NukeResources()
    GetSystemFonts()
    CheckForCD("bi.set", TRUE)
    cb:switch_to_set()
    cb:current_setup(cb_intha)
    manny:put_in_set(cb)
    manny:setpos(-0.154667, -0.453814, 1.77)
    manny:setrot(0, 251.954, 0)
    if not track_announcer then
        track_announcer = Actor:create(nil, nil, nil, "announcer")
    end
    track_announcer:set_talk_color(Red)
    if not find_script(tb.track_announcer) then
        tb.init_cat_names()
        start_script(tb.track_announcer)
        start_script(announcer_volume_setting)
    end
    start_script(cb.alex_derek_and_steves_idea)
end
BundleResource("sv_in_hq.cos")
BundleResource("eva_sec.cos")
BundleResource("brennis_fix_idle.cos")
BundleResource("pigeon1.WAV")
BundleResource("pigeon2.WAV")
BundleResource("pigeon3.WAV")
BundleResource("pigeon4.WAV")
BundleResource("pigeon5.WAV")
BundleResource("pigeon6.WAV")
BundleResource("pigeon7.WAV")
BundleResource("pigeon8.WAV")
BundleResource("wingfly1.WAV")
BundleResource("wingfly2.WAV")
BundleResource("wingfly3.WAV")
BundleResource("wingfly4.WAV")
BundleResource("wingfly5.WAV")
BundleResource("wings1.WAV")
BundleResource("wings2.WAV")
BundleResource("wings3.WAV")
BundleResource("wings4.WAV")
BundleResource("wings5.WAV")
BundleResource("wings6.WAV")
BundleResource("wings7.WAV")
BundleResource("wings8.WAV")
BundleResource("suit_inv.set")
BundleResource("action_inv.set")
CheckFirstTime("year_2.lua")
cut_scene.shanghai = function(arg1) -- line 9
    cutscene_menu:enable_cutscene("shanghai")
    START_CUT_SCENE()
    set_override(cut_scene.skip_shanghai, cut_scene)
    ce:switch_to_set()
    RunFullscreenMovie("shanghai.snm")
    EngineDisplay(FALSE)
    lm:switch_to_set()
    manny:put_in_set(lm)
    manny:setpos(-0.191064, -2.65641, 0.015)
    manny:setrot(0, 142.729, 0)
    lm:current_setup(lm_gngms)
    velasco:face_manny()
    EngineDisplay(TRUE)
    break_here()
    velasco:say_line("/syve096/")
    wait_for_message()
    velasco:say_line("/syve097/")
    manny:head_look_at_point(manny:getpos(), 120)
    wait_for_message()
    manny:say_line("/syma098/")
    wait_for_message()
    manny:say_line("/syma099/")
    manny:head_look_at(nil, 120)
    wait_for_message()
    velasco:say_line("/syve100/")
    wait_for_message()
    velasco:say_line("/syve101/")
    wait_for_message()
    velasco:say_line("/syve102/")
    wait_for_message()
    manny:say_line("/syma103/")
    manny:head_look_at(lm.velasco_obj)
    start_script(manny.turn_left, manny, 90)
    wait_for_message()
    manny:say_line("/syma104/")
    manny:head_look_at(lm.limbo, 140)
    wait_for_message()
    manny:head_look_at(lm.velasco_obj, 140)
    start_script(velasco.face_bottle, velasco)
    velasco:say_line("/syve105/")
    END_CUT_SCENE()
end
cut_scene.skip_shanghai = function(arg1) -- line 58
    kill_override()
    lm:switch_to_set()
    lm:current_setup(lm_gngms)
    single_start_script(velasco.face_bottle, velasco)
    manny:put_in_set(lm)
    manny:setpos(-0.191064, -2.65641, 0.015)
    manny:setrot(0, 142.729, 0)
    manny:head_look_at(lm.velasco_obj)
end
cut_scene.snapshot = function(arg1) -- line 69
    bi:snapshot()
end
dofile("toto_drop_na.lua")
cut_scene.passout = function(arg1) -- line 75
    si:switch_to_set()
    si.naranja_out = TRUE
    toto:stop_chore()
    naranja:stop_chore()
    si.booze_actor:play_chore(1)
    stop_script(si.naranja_drink)
    stop_script(si.toto_controller)
    si.booze:make_untouchable()
    si.naranja_obj:make_untouchable()
    preload_sfx("siNaDrop.wav")
    preload_sfx("siNaFeet.wav")
    START_CUT_SCENE("no head")
    manny:setpos(1.17039, -1.2139, 0)
    manny:setrot(0, 280.656, 0)
    manny:head_look_at(si.cot)
    toto:setpos(1.12828, -0.837, 0)
    toto:setrot(0, 180, 0)
    toto:set_costume("toto_drop_na.cos")
    toto:set_mumble_chore(toto_drop_na_mumble)
    toto:set_talk_chore(1, toto_drop_na_no_talk)
    toto:set_talk_chore(2, toto_drop_na_a)
    toto:set_talk_chore(3, toto_drop_na_c)
    toto:set_talk_chore(4, toto_drop_na_e)
    toto:set_talk_chore(5, toto_drop_na_f)
    toto:set_talk_chore(6, toto_drop_na_l)
    toto:set_talk_chore(7, toto_drop_na_m)
    toto:set_talk_chore(8, toto_drop_na_o)
    toto:set_talk_chore(9, toto_drop_na_t)
    toto:set_talk_chore(10, toto_drop_na_u)
    toto:play_chore(0)
    naranja:push_costume("na_on_cot.cos")
    naranja:setpos(1.36044, -0.6715, 0.117)
    naranja:setrot(90, 0, 0)
    naranja:play_chore(0)
    naranja:play_chore(naranja_stop_talk, "naranja.cos")
    manny:play_chore(mc_reach_low, "mc.cos")
    toto:say_line("/psots04a/")
    start_sfx("siNaDrop.wav")
    wait_for_sound("siNaDrop.wav")
    start_sfx("siNaFeet.wav")
    toto:wait_for_message()
    toto:say_line("/psots04b/")
    sleep_for(1000)
    manny:head_look_at(toto)
    toto:wait_for_message()
    toto:say_line("/psots07/")
    sleep_for(3000)
    manny:head_look_at(si.cot)
    manny:stop_chore(nil, "mc.cos")
    start_script(manny.walk_and_face, manny, 1.16449, -0.978787, 0, 0, 257.166, 0)
    wait_for_script(manny.walk_and_face)
    manny:push_costume("mc_wait_idles.cos")
    manny:run_chore(0, "mc_wait_idles.cos")
    manny:pop_costume()
    manny:stop_chore()
    toto:wait_for_message()
    END_CUT_SCENE()
    if cutSceneLevel > 0 then
        cutSceneLevel = 0
    end
    si:set_up_actors()
end
cut_scene.idcorpse = function(arg1) -- line 148
    made_vacancy = TRUE
    START_CUT_SCENE()
    lm:switch_to_set("noenter")
    if not ship_bottle_actor then
        ship_bottle_actor = Actor:create(nil, nil, nil, "bottle")
    end
    ship_bottle_actor:set_costume("ship_bottle.cos")
    ship_bottle_actor:put_in_set(lm)
    ship_bottle_actor:setpos(0.379959, -3.12955, 0.2457)
    ship_bottle_actor:setrot(89, 270, 0)
    lm.water.hObjectState = lm:add_object_state(lm_gngms, "lm_water1.bm", nil, OBJSTATE_UNDERLAY)
    lm.water:set_object_state("lm_water.cos")
    lm.water:play_chore_looping(0)
    lm:current_setup(lm_gngms)
    velasco:default()
    velasco:put_in_set(lm)
    velasco:push_costume("ve_talk_to_membrillo.cos")
    velasco:setpos(0.42548, -2.86345, 0.01439)
    velasco:setrot(0, 169.005, 0)
    system_prefs:set_voice_effect("OFF")
    velasco:play_chore(ve_talk_to_membrillo_fix_model, "ve_talk_to_membrillo.cos")
    sleep_for(4000)
    start_sfx("phonRing.WAV")
    set_pan("phonRing.WAV", 100)
    velasco:wait_for_chore(ve_talk_to_membrillo_fix_model, "ve_talk_to_membrillo.cos")
    velasco:play_chore(ve_talk_to_membrillo_phone, "ve_talk_to_membrillo.cos")
    sleep_for(2800)
    velasco:say_line("/idcvl01/")
    velasco:wait_for_chore(ve_talk_to_membrillo_phone, "ve_talk_to_membrillo.cos")
    velasco:wait_for_message()
    mg:switch_to_set("noenter")
    mg:current_setup(1)
    system_prefs:set_voice_effect("Basic Reverb")
    manny:default("cafe")
    manny:put_in_set(mg)
    manny:setpos(-0.0111617, 0.279955, 0.55)
    manny:setrot(0, 199.947, 0)
    membrillo:default()
    membrillo:put_in_set(mg)
    membrillo:setpos(0.0687, -0.3218, 0.55)
    membrillo:setrot(0, 160.024, 0)
    membrillo:push_costume("membrillo_talk_to_ve.cos")
    membrillo:play_chore(membrillo_hide_tool, "membrillo.cos")
    membrillo:play_chore(membrillo_talk_to_ve_start, "membrillo_talk_to_ve.cos")
    membrillo:say_line("/idcmb02a/")
    membrillo:wait_for_message()
    membrillo:say_line("/idcmb02b/")
    membrillo:wait_for_message()
    membrillo:wait_for_chore(membrillo_talk_to_ve_start, "membrillo_talk_to_ve.cos")
    membrillo:play_chore(membrillo_talk_to_ve_middle, "membrillo_talk_to_ve.cos")
    membrillo:say_line("/idcmb02c/")
    membrillo:wait_for_message()
    membrillo:wait_for_chore(membrillo_talk_to_ve_middle, "membrillo_talk_to_ve.cos")
    membrillo:play_chore(membrillo_talk_to_ve_end, "membrillo_talk_to_ve.cos")
    membrillo:say_line("/idcmb02d/")
    membrillo:wait_for_message()
    membrillo:wait_for_chore(membrillo_talk_to_ve_end, "membrillo_talk_to_ve.cos")
    lm:switch_to_set("noenter")
    lm:current_setup(lm_gngms)
    ship_bottle_actor:set_costume("ship_bottle.cos")
    ship_bottle_actor:put_in_set(lm)
    ship_bottle_actor:setpos(0.379959, -3.12955, 0.2457)
    ship_bottle_actor:setrot(89, 270, 0)
    lm.water.hObjectState = lm:add_object_state(lm_gngms, "lm_water1.bm", nil, OBJSTATE_UNDERLAY)
    lm.water:set_object_state("lm_water.cos")
    lm.water:play_chore_looping(0)
    system_prefs:set_voice_effect("OFF")
    velasco:default()
    velasco:put_in_set(lm)
    velasco:push_costume("ve_talk_to_membrillo.cos")
    velasco:setpos(0.42548, -2.86345, 0.01439)
    velasco:setrot(0, 169.005, 0)
    velasco:play_chore(ve_talk_to_membrillo_what, "ve_talk_to_membrillo.cos")
    velasco:say_line("/idcvl03a/")
    velasco:wait_for_message()
    velasco:wait_for_chore(ve_talk_to_membrillo_what, "ve_talk_to_membrillo.cos")
    velasco:play_chore(ve_talk_to_membrillo_how, "ve_talk_to_membrillo.cos")
    velasco:say_line("/idcvl03b/")
    velasco:wait_for_message()
    velasco:wait_for_chore(ve_talk_to_membrillo_how, "ve_talk_to_membrillo.cos")
    velasco:play_chore(ve_talk_to_membrillo_sprouted, "ve_talk_to_membrillo.cos")
    velasco:say_line("/idcvl03c/")
    velasco:wait_for_message()
    velasco:wait_for_chore(ve_talk_to_membrillo_sprouted, "ve_talk_to_membrillo.cos")
    velasco:play_chore(ve_talk_to_membrillo_hell, "ve_talk_to_membrillo.cos")
    velasco:say_line("/idcvl03d/")
    velasco:wait_for_message()
    velasco:wait_for_chore(ve_talk_to_membrillo_hell, "ve_talk_to_membrillo.cos")
    velasco:play_chore(ve_talk_to_membrillo_sailor, "ve_talk_to_membrillo.cos")
    velasco:say_line("/idcvl03e/")
    velasco:wait_for_message()
    sleep_for(1000)
    velasco:say_line("/idcvl03f/")
    velasco:wait_for_chore(ve_talk_to_membrillo_sailor, "ve_talk_to_membrillo.cos")
    velasco:play_chore(ve_talk_to_membrillo_hangup, "ve_talk_to_membrillo.cos")
    velasco:wait_for_message()
    velasco:wait_for_chore(ve_talk_to_membrillo_hangup, "ve_talk_to_membrillo.cos")
    velasco:play_chore(ve_talk_to_membrillo_sigh, "ve_talk_to_membrillo.cos")
    velasco:say_line("/idcvl04/")
    velasco:wait_for_message()
    velasco:wait_for_chore(ve_talk_to_membrillo_sigh, "ve_talk_to_membrillo.cos")
    velasco:pop_costume()
    mg:switch_to_set("noenter")
    mg:current_setup(1)
    system_prefs:set_voice_effect("Basic Reverb")
    manny:default("cafe")
    manny:put_in_set(mg)
    manny:setpos(-0.0111617, 0.279955, 0.55)
    manny:setrot(0, 199.947, 0)
    membrillo:default()
    membrillo:put_in_set(mg)
    membrillo:setpos(mg.corpse_2.mem_pnt[0].x, mg.corpse_2.mem_pnt[0].y, mg.corpse_2.mem_pnt[0].z)
    membrillo:setrot(mg.corpse_2.mem_pnt[0].pitch, mg.corpse_2.mem_pnt[0].yaw, mg.corpse_2.mem_pnt[0].roll)
    membrillo:play_chore(membrillo_hide_tool, "membrillo.cos")
    membrillo:play_chore(membrillo_stop_talk, "membrillo.cos")
    membrillo:play_chore(membrillo_rest_to_lkma, "membrillo.cos")
    membrillo:say_line("/idcmb05a/")
    membrillo:wait_for_chore(membrillo_rest_to_lkma, "membrillo.cos")
    membrillo:stop_chore(membrillo_rest_to_lkma, "membrillo.cos")
    membrillo:play_chore_looping(membrillo_lookat_manny, "membrillo.cos")
    membrillo:wait_for_message()
    membrillo:say_line("/idcmb05b/")
    membrillo:wait_for_message()
    membrillo:say_line("/idcmb05c/")
    membrillo:wait_for_message()
    membrillo:say_line("/idcmb05d/")
    membrillo:wait_for_message()
    membrillo:say_line("/idcmb05e/")
    membrillo:wait_for_message()
    membrillo:say_line("/idcmb05f/")
    membrillo:stop_chore(membrillo_lookat_manny, "membrillo.cos")
    membrillo:play_chore(membrillo_lkma_to_rest, "membrillo.cos")
    membrillo:wait_for_message()
    END_CUT_SCENE()
    membrillo:free()
    velasco:free()
    lm.water:free_object_state()
    ship_bottle_actor:free()
    pc:come_out_door(pc.mg_door)
end
cut_scene.normarae = function(arg1) -- line 298
    dd.terry_arrested = TRUE
    dd:switch_to_set()
    cutscene_menu:enable_cutscene("normarae")
    START_CUT_SCENE()
    set_override(cut_scene.skip_normarae, cut_scene)
    RunFullscreenMovie("normarae.snm")
    manny:put_in_set(dd)
    dd:current_setup(dd_estws)
    dd:set_up_barrel_bees()
    terry:free()
    manny:setpos(2.43258, -3.10048, 0)
    manny:setrot(0, 294.916, 0)
    manny:head_look_at(nil)
    manny:walkto(3.85481, -2.86843, 0, 271.475, 0)
    END_CUT_SCENE()
end
cut_scene.skip_normarae = function(arg1) -- line 320
    kill_override()
    StopMovie()
    manny:put_in_set(dd)
    dd:current_setup(dd_estws)
    dd:set_up_barrel_bees()
    terry:free()
    manny:setpos(3.85481, -2.86843, 0)
    manny:setrot(0, 271.475, 0)
end
cut_scene.loladies = function(arg1) -- line 332
    START_CUT_SCENE()
    bi.seen_kiss = TRUE
    hl.nick_gone = TRUE
    hl.virago_obj:make_untouchable()
    hl.case:make_untouchable()
    hl.case:free()
    sl.bomb_detonated = TRUE
    sl.key:get()
    lx:switch_to_set()
    lx.seen_lola = TRUE
    cur_puzzle_state[29] = TRUE
    cutscene_menu:enable_cutscene("loladies")
    set_override(cut_scene.skip_loladies)
    stop_sound("liteHse.imu")
    stop_script(foghorn_sfx)
    RunFullscreenMovie("loladies.snm")
    start_script(foghorn_sfx)
    start_script(lx.camerachange, lx, nil, lx_extoh)
    lx:come_out_door(lx.top)
    manny:say_line("/lxma011/")
    manny:twist_head_gesture()
    wait_for_message()
    manny:head_look_at({ x = 0.0492827, y = 1.15038, z = 3.03 })
    sleep_for(500)
    manny:play_chore(mc_reach_low, "mc.cos")
    sleep_for(500)
    manny:generic_pickup(lx.lengua)
    manny:wait_for_chore(mc_reach_low, "mc.cos")
    manny:stop_chore(mc_reach_low, "mc.cos")
    manny:wait_for_message()
    look_at_item_in_hand()
    manny:wait_for_message()
    IrisDown(320, 240, 1000)
    sleep_for(1000)
    manny:setpos(-10.8367, -14.7376, 0)
    manny:setrot(0, 113, 0)
    IrisUp(320, 240, 1000)
    END_CUT_SCENE()
end
cut_scene.skip_loladies = function(arg1) -- line 379
    kill_override()
    StopMovie()
    start_script(foghorn_sfx)
    start_script(lx.camerachange, lx, nil, lx_dokla)
    lx.lengua:get()
    manny:setpos(-10.8367, -14.7376, 0)
    manny:setrot(0, 113, 0)
    IrisUp(0, 0, 1)
end
cut_scene.puzl39 = function() -- line 393
    dd.strike_on = TRUE
    tb.blackmail_photo:put_in_limbo()
    START_CUT_SCENE()
    manny:ignore_boxes()
    terry:ignore_boxes()
    virago:ignore_boxes()
    pc:switch_to_set()
    manny:put_in_set(pc)
    virago:put_in_set(pc)
    terry:put_in_set(pc)
    terry:default()
    terry:push_costume("tm_IDPHOTO.cos")
    manny:push_costume("ma_IDPHOTO.cos")
    virago:set_costume("nick_idles.cos")
    virago:set_mumble_chore(nick_idles_mumble)
    virago:set_talk_chore(1, nick_idles_no_talk)
    virago:set_talk_chore(2, nick_idles_a)
    virago:set_talk_chore(3, nick_idles_c)
    virago:set_talk_chore(4, nick_idles_e)
    virago:set_talk_chore(5, nick_idles_f)
    virago:set_talk_chore(6, nick_idles_l)
    virago:set_talk_chore(7, nick_idles_m)
    virago:set_talk_chore(8, nick_idles_o)
    virago:set_talk_chore(9, nick_idles_t)
    virago:set_talk_chore(10, nick_idles_u)
    virago:push_costume("nv_IDPHOTO.cos")
    terry:setpos(0, 0, 0)
    terry:setrot(0, 180, 0)
    manny:set_softimage_pos(5.8562, 0, -1.9891)
    manny:setrot(0, 180, 0)
    virago:set_softimage_pos(8.7324, 0, -1.412)
    virago:setrot(0, 180, 0)
    pc:current_setup(pc_3_idfoto)
    terry:play_chore(tm_IDPHOTO_terry_free)
    manny:play_chore(ma_IDPHOTO_terry_free)
    virago:play_chore(nv_IDPHOTO_terry_free)
    terry:say_line("/p39tm06/")
    terry:wait_for_message()
    sleep_for(2000)
    start_sfx("beewing.imu")
    set_pan("beewing.imu", 64)
    fade_pan_sfx("beewing.imu", 1000, 0)
    fade_sfx("beewing.imu", 2000, 0)
    terry:wait_for_chore()
    manny:wait_for_chore()
    virago:wait_for_chore()
    terry:free()
    pc:current_setup(pc_4_idfoto)
    manny:play_chore(ma_IDPHOTO_nick_fold)
    virago:play_chore(nv_IDPHOTO_nick_fold)
    sleep_for(2000)
    virago:say_line("/p39vi07/")
    virago:wait_for_message()
    manny:wait_for_chore()
    pc:current_setup(pc_5_idfoto)
    manny:setpos(-0.0222798, -0.81329, 0)
    manny:play_chore(ma_IDPHOTO_almost)
    manny:say_line("/p39ma08/")
    manny:wait_for_message()
    manny:wait_for_chore()
    pc:current_setup(pc_6_idfoto)
    manny:set_softimage_pos(5.8562, 0, -1.9891)
    music_state:set_sequence(seqNickPunchout)
    music_state:set_state(stateNT)
    manny:play_chore(ma_IDPHOTO_manny_punch)
    virago:play_chore(nv_IDPHOTO_manny_punch)
    sleep_for(1500)
    manny:say_line("/p39ma11/")
    manny:wait_for_message()
    virago:say_line("/p39vi07b/")
    virago:wait_for_message()
    manny:wait_for_chore()
    pc:current_setup(pc_7_idfoto)
    manny:play_chore(ma_IDPHOTO_punch2)
    virago:say_line("/p39vi09/")
    manny:wait_for_chore()
    pc:current_setup(pc_8_idfoto)
    virago:wait_for_message()
    manny:play_chore(ma_IDPHOTO_manny_talk1)
    manny:say_line("/p39ma10a/")
    manny:wait_for_chore()
    manny:play_chore(ma_IDPHOTO_manny_talk2)
    manny:wait_for_message()
    virago:play_chore(nv_IDPHOTO_nick_up)
    manny:say_line("/p39ma10b/")
    manny:wait_for_message()
    virago:say_line("/p39vi09b/")
    virago:wait_for_message()
    manny:wait_for_chore()
    pc:current_setup(pc_9_idfoto)
    virago:set_visibility(FALSE)
    manny:play_chore(ma_IDPHOTO_nick_leave)
    virago:say_line("/p39vi09c/")
    virago:wait_for_message()
    pc:current_setup(pc_10_idfoto)
    virago:set_visibility(TRUE)
    virago:play_chore(nv_IDPHOTO_nick_leave2)
    manny:play_chore(ma_IDPHOTO_p39_end)
    virago:say_line("/p39vi09d/")
    virago:wait_for_chore()
    virago:play_chore(nv_IDPHOTO_nick_leave3)
    virago:wait_for_message()
    virago:wait_for_chore()
    END_CUT_SCENE()
    music_state:update()
    virago:free()
    terry:free()
    manny:pop_costume()
    manny:setpos(-2.19, 1.33, 11.8)
    manny:setrot(0, 180, 0)
    pc:current_setup(pc_estws)
    manny:follow_boxes()
end
cut_scene.getcard = function(arg1) -- line 543
    dh.suitcase:put_in_limbo()
    hh.showed_pass = TRUE
    hl.glottis_gambling = TRUE
    stop_script(cn.charlie_idles)
    START_CUT_SCENE()
    hh:switch_to_set()
    manny:put_in_set(hh)
    MakeSectorActive("hl_door_trigger", FALSE)
    MakeSectorActive("hl_box", FALSE)
    MakeSectorActive("getcard_box", TRUE)
    manny:ignore_boxes()
    manny:setpos(0, 0.9, 0)
    manny:setrot(0, 180, 0)
    charlie:put_in_set(hh)
    charlie:set_costume("ccharlie.cos")
    charlie:set_mumble_chore(ccharlie_mumble)
    charlie:set_talk_chore(1, ccharlie_no_talk)
    charlie:set_talk_chore(2, ccharlie_a)
    charlie:set_talk_chore(3, ccharlie_c)
    charlie:set_talk_chore(4, ccharlie_e)
    charlie:set_talk_chore(5, ccharlie_f)
    charlie:set_talk_chore(6, ccharlie_l)
    charlie:set_talk_chore(7, ccharlie_m)
    charlie:set_talk_chore(8, ccharlie_o)
    charlie:set_talk_chore(9, ccharlie_t)
    charlie:set_talk_chore(10, ccharlie_u)
    charlie:push_costume("cc_getcard.cos")
    charlie:ignore_boxes()
    charlie:setpos({ x = -0.336, y = -1.216, z = 0 })
    charlie:setrot(0, 1.0546, 0)
    manny:push_costume("mc_GETCARD.cos")
    SetActorFrustrumCull(manny.hActor, FALSE)
    SetActorFrustrumCull(charlie.hActor, FALSE)
    hh.hl_door:play_chore(0)
    manny:play_chore(mc_GETCARD_walk_out)
    sleep_for(7102)
    hh.hl_door:play_chore(1)
    manny:wait_for_chore(mc_GETCARD_walk_out, "mc_GETCARD.cos")
    music_state:set_state(stateHF)
    charlie:play_chore(cc_getcard_alright)
    manny:play_chore(mc_GETCARD_hands_up)
    sleep_for(1000)
    charlie:say_line("/gtccc01/")
    charlie:wait_for_message()
    charlie:wait_for_chore(cc_getcard_alright, "cc_getcard.cos")
    hh:current_setup(hh_gtc2)
    manny:setpos({ x = 0, y = 1.085, z = 0 })
    charlie:setpos({ x = -0.185, y = -1, z = 0 })
    charlie:play_chore(cc_getcard_case)
    sleep_for(1200)
    charlie:say_line("/gtccc02/")
    charlie:wait_for_message()
    manny:play_chore(mc_GETCARD_bargain_line)
    manny:say_line("/gtcma03/")
    manny:wait_for_chore(mc_GETCARD_bargain_line, "mc_GETCARD.cos")
    charlie:wait_for_chore(cc_getcard_case, "cc_getcard.cos")
    manny:wait_for_message()
    hh:current_setup(hh_gtc3)
    charlie:say_line("/gtccc04/")
    charlie:play_chore(cc_getcard_muscle)
    charlie:wait_for_chore(cc_getcard_muscle, "cc_getcard.cos")
    charlie:wait_for_message()
    hh:current_setup(hh_gtc4)
    manny:play_chore(mc_GETCARD_chuck)
    manny:say_line("/gtcma05/")
    manny:wait_for_chore(mc_GETCARD_chuck, "mc_GETCARD.cos")
    manny:wait_for_message()
    manny:play_chore(mc_GETCARD_goons)
    manny:say_line("/gtcma06/")
    manny:wait_for_chore(mc_GETCARD_goons, "mc_GETCARD.cos")
    manny:wait_for_message()
    hh:current_setup(hh_gtc5)
    charlie:play_chore(cc_getcard_goons)
    manny:play_chore(mc_GETCARD_hands_up2)
    charlie:say_line("/gtccc07/")
    manny:wait_for_chore(mc_GETCARD_hands_up2, "mc_GETCARD.cos")
    manny:play_chore(mc_GETCARD_boss)
    charlie:wait_for_message()
    manny:say_line("/gtcma08/")
    charlie:wait_for_chore(cc_getcard_goons, "cc_getcard.cos")
    manny:wait_for_chore(mc_GETCARD_boss, "mc_GETCARD.cos")
    manny:wait_for_message()
    manny:play_chore(mc_GETCARD_card)
    manny:say_line("/gtcma09/")
    manny:wait_for_message()
    manny:wait_for_chore(mc_GETCARD_card, "mc_GETCARD.cos")
    manny:play_chore(mc_GETCARD_get_card)
    sleep_for(134)
    charlie:play_chore(cc_getcard_give_card)
    sleep_for(700)
    charlie:say_line("/gtccc10/")
    charlie:wait_for_chore(cc_getcard_give_card, "cc_getcard.cos")
    charlie:set_visibility(FALSE)
    charlie:wait_for_message()
    charlie:set_visibility(TRUE)
    charlie:free()
    SetActorFrustrumCull(manny.hActor, TRUE)
    SetActorFrustrumCull(charlie.hActor, TRUE)
    manny:setpos({ x = 0, y = -0.138, z = 0 })
    manny:pop_costume()
    wait_for_message()
    manny:say_line("/gtcma11/")
    hh:current_setup(hh_estla)
    manny:wait_for_message()
    END_CUT_SCENE()
    music_state:update()
    MakeSectorActive("hl_door_trigger", TRUE)
    MakeSectorActive("hl_box", TRUE)
    hh.union_card:get()
    manny:follow_boxes()
end
cut_scene.byeruba = function(arg1) -- line 679
    stop_script(tb.track_announcer)
    stop_script(announcer_volume_setting)
    stop_script(tb.cat_race_simulator)
    stop_script(tb.pre_race_timer)
    stop_script(tb.cat_paws)
    stop_script(announcer_volume_setting)
    stop_script(cn.charlie_idles)
    cf.letters:free()
    hk.turkey_baster:free()
    si.dog_tags:free()
    ci.liqueur:free()
    sl.detector:free()
    hl.case:free()
    bi.book:free()
    ks.opener:free()
    cc.anchor_paper:free()
    cc.jacket:free()
    lx.lengua:free()
    si.photofinish:free()
    sl.key:free()
    tb.blackmail_photo:free()
    cn.ticket:free()
    cn.printer:free()
    cn.pass:free()
    dh.suitcase:free()
    hh.union_card:free()
    cutscene_menu:enable_cutscene("byeruba")
    set_override(cut_scene.skip_byeruba, cut_scene)
    START_CUT_SCENE()
    RunFullscreenMovie("byeruba.snm")
    NukeResources()
    GetSystemFonts()
    CheckForCD("vd.set", TRUE)
    kill_override()
    lz:switch_to_set()
    manny:put_in_set(lz)
    manny:setpos(3.46457, 6.075, 3.56)
    manny:setrot(0, -181.391, 0)
    break_here()
    END_CUT_SCENE()
end
cut_scene.skip_byeruba = function(arg1) -- line 730
    kill_override()
    StopMovie()
    NukeResources()
    GetSystemFonts()
    CheckForCD("vd.set", TRUE)
    lz:switch_to_set()
    manny:put_in_set(lz)
    manny:setpos(3.46457, 6.075, 3.56)
    manny:setrot(0, -181.391, 0)
    break_here()
end
BundleResource("olivia_idles.cos")
BundleResource("cafe_inv.cos")
BundleResource("cafe_inv.set")
CheckFirstTime("year_3.lua")
hitsquad_wait_for_glottis = function() -- line 8
    sleep_for(4800)
    glottis:set_visibility(TRUE)
end
cut_scene.hitsquad = function(arg1) -- line 13
    START_CUT_SCENE()
    set_override(cut_scene.hitsquad_override)
    preload_sfx("ei_htopn.wav")
    preload_sfx("glgrbmn2.wav")
    manny:walkto(0.469071, -2.51173, 0, 0, -30.8321, 0)
    manny:wait_for_actor()
    manny:head_look_at_point(0.909082, -1.7247, 0.15)
    manny:say_line("/ilma009/")
    manny:head_look_at(nil)
    manny:wait_for_message()
    glottis:put_in_set(il)
    glottis:set_costume("glottis_sailor.cos")
    glottis:setpos(1.14078, 0.289687, -0.0201)
    glottis:setrot(0, 165, 0)
    glottis:push_costume("gl_HITMAN.cos")
    glottis:set_visibility(FALSE)
    il.hitsquad[1]:play_chore(0)
    il.hitsquad[2]:play_chore(0)
    il.hitsquad[3]:play_chore(0)
    music_state:set_sequence(seqHitMen)
    sleep_for(900)
    skinny_hit_man:say_line("/htssm01/")
    manny:push_costume("mn_HITMAN.cos")
    manny:play_chore(1)
    manny:setpos(0.469071, -2.51173, 0)
    manny:setrot(0, -30.8321, 0)
    manny:play_chore(0)
    glottis:play_chore(0)
    start_script(hitsquad_wait_for_glottis)
    skinny_hit_man:wait_for_message()
    large_hit_man:say_line("/htslm02/")
    sleep_for(1500)
    start_sfx("ei_htopn.wav")
    sleep_for(1800)
    start_sfx("glgrbmn2.wav")
    manny:wait_for_chore()
    manny:set_visibility(FALSE)
    glottis:set_visibility(FALSE)
    il.hitsquad[1]:wait_for_chore()
    il.hitsquad[2]:wait_for_chore()
    il.hitsquad[3]:wait_for_chore()
    ei:switch_to_set()
    NewObjectState(ei_intha, OBJSTATE_UNDERLAY, "ei_door.bm")
    glottis:set_visibility(TRUE)
    ei.il_door:set_object_state("ei_door.cos")
    ei.il_door:play_chore(1)
    glottis:setpos(0.430727, 0.889038, 0)
    glottis:setrot(0, 9.42226, 0)
    glottis:pop_costume()
    glottis:stop_chore()
    glottis:push_costume("gl_rescue_mn.cos")
    glottis:play_chore(0)
    sleep_for(1139)
    ei.il_door:play_chore(0)
    sleep_for(400)
    start_sfx("eiDorBng.wav")
    sleep_for(350)
    large_hit_man:say_line("/sylh106/")
    glottis:wait_for_chore()
    glottis:free()
    glottis:set_costume("glottis_sailor.cos")
    glottis:set_talk_color(Orange)
    glottis:set_visibility(TRUE)
    glottis:set_head(3, 4, 4, 165, 28, 80)
    glottis:set_mumble_chore(glottis_sailor_mumble)
    glottis:set_talk_chore(1, glottis_sailor_stop_talk)
    glottis:set_talk_chore(2, glottis_sailor_a)
    glottis:set_talk_chore(3, glottis_sailor_c)
    glottis:set_talk_chore(4, glottis_sailor_e)
    glottis:set_talk_chore(5, glottis_sailor_f)
    glottis:set_talk_chore(6, glottis_sailor_l)
    glottis:set_talk_chore(7, glottis_sailor_m)
    glottis:set_talk_chore(8, glottis_sailor_o)
    glottis:set_talk_chore(9, glottis_sailor_t)
    glottis:set_talk_chore(10, glottis_sailor_u)
    glottis:put_in_set(ei)
    glottis:setpos({ x = 0.575511, y = 0.750909, z = 0 })
    glottis:setrot(0, 456.801, 0)
    glottis:push_costume("gl_sailor_fastwalk.cos")
    glottis:head_look_at(nil)
    glottis:set_walk_chore(0, "gl_sailor_fastwalk.cos")
    glottis:set_walk_rate(0.5)
    glottis:follow_boxes()
    manny:pop_costume()
    manny:set_visibility(TRUE)
    manny:put_in_set(ei)
    manny:setpos({ x = 0.280511, y = 0.160909, z = 0 })
    manny:setrot(0, 471.342, 0)
    glottis:fade_in_chore("glottis_sailor_home_pose", "glottis_sailor.cos", 750)
    manny:head_look_at_point({ x = -0.1092, y = 1.1768, z = 0.406 })
    glottis:head_look_at_point({ x = -0.1092, y = 1.1768, z = 0.406 })
    wait_for_message()
    skinny_hit_man:say_line("/htssm04/")
    wait_for_message()
    manny:head_look_at_point({ x = 0.575511, y = 0.750909, z = 1 })
    glottis:head_look_at_manny()
    start_script(glottis.walkto, glottis, 0.507027, 0.975, 0, 0, 880, 0)
    glottis:say_line("/sygl109/")
    wait_for_message()
    glottis:say_line("/sygl110/")
    wait_for_message()
    large_hit_man:say_line("/sylh111/")
    glottis:head_look_at(ei.il_door)
    manny:head_look_at(ei.il_door)
    wait_for_message()
    glottis:play_chore(glottis_sailor_eyes_bulging, "glottis_sailor.cos")
    manny:head_look_at_point({ x = -0.1092, y = 1.1768, z = 0.406 })
    glottis:head_look_at_point({ x = -0.1092, y = 1.1768, z = 0.406 })
    manny:head_look_at(nil)
    start_script(ei.glottis_look_at_manny)
    glottis:pop_costume()
    glottis:play_chore_looping(glottis_sailor_flip_ears)
    ei.seen_hitman = TRUE
    glottis:set_collision_mode(COLLISION_SPHERE)
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(manny.hActor, 0.35)
    SetActorCollisionScale(glottis.hActor, 0.5)
    END_CUT_SCENE()
    ei.il_door:make_untouchable()
end
cut_scene.hitsquad_override = function() -- line 145
    kill_override()
    shut_up_everybody()
    music_state:unpause()
    ei:switch_to_set()
    glottis:set_costume("glottis_sailor.cos")
    glottis:set_talk_color(Orange)
    glottis:set_visibility(TRUE)
    glottis:set_head(3, 4, 4, 165, 28, 80)
    glottis:set_mumble_chore(glottis_sailor_mumble)
    glottis:set_talk_chore(1, glottis_sailor_stop_talk)
    glottis:set_talk_chore(2, glottis_sailor_a)
    glottis:set_talk_chore(3, glottis_sailor_c)
    glottis:set_talk_chore(4, glottis_sailor_e)
    glottis:set_talk_chore(5, glottis_sailor_f)
    glottis:set_talk_chore(6, glottis_sailor_l)
    glottis:set_talk_chore(7, glottis_sailor_m)
    glottis:set_talk_chore(8, glottis_sailor_o)
    glottis:set_talk_chore(9, glottis_sailor_t)
    glottis:set_talk_chore(10, glottis_sailor_u)
    glottis:put_in_set(ei)
    glottis:setpos(0.507027, 0.975, 0)
    glottis:setrot(0, 880, 0)
    manny:default("nautical")
    manny:set_visibility(TRUE)
    manny:put_in_set(ei)
    manny:setpos({ x = 0.280511, y = 0.160909, z = 0 })
    manny:setrot(0, 471.342, 0)
    glottis:play_chore("glottis_sailor_home_pose", "glottis_sailor.cos")
    manny:head_look_at(nil)
    start_script(ei.glottis_look_at_manny)
    glottis:play_chore_looping(glottis_sailor_flip_ears)
    glottis:play_chore(glottis_sailor_eyes_bulging, "glottis_sailor.cos")
    ei.seen_hitman = TRUE
    glottis:set_collision_mode(COLLISION_SPHERE)
    manny:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(manny.hActor, 0.35)
    SetActorCollisionScale(glottis.hActor, 0.5)
    ei.il_door:make_untouchable()
    IrisUp(0, 0, 1)
end
cut_scene.hydrfoil = function() -- line 190
    cutscene_menu:enable_cutscene("escape")
    op.anchor:free_object_state()
    ul.props:set_object_state()
    ul.star_anchor:free_object_state()
    ul.port_anchor:free_object_state()
    ul.tear:free_object_state()
    manny:free()
    START_CUT_SCENE()
    cur_puzzle_state[33] = TRUE
    set_override(cut_scene.skip_hyrofoil, cut_scene)
    RunFullscreenMovie("escape.snm")
    su:switch_to_set()
    END_CUT_SCENE()
end
cut_scene.skip_hydrofoil = function(arg1) -- line 210
    kill_override()
    su:switch_to_set()
end
cut_scene.thepearl = function() -- line 215
    START_CUT_SCENE()
    ps:switch_to_set()
    manny:put_in_set(ps)
    glottis:put_in_set(ps)
    ps:current_setup(ps_intro)
    glottis:setpos(6.9415, 11.4531, 2.52)
    glottis:setrot(0, -180, 0)
    manny:setpos(7.79724, 10.4291, 2.52)
    manny:setrot(0, -180, 0)
    start_script(manny.walkto, manny, 7.7906, 8.16991, 2.52, 0, -187, 0)
    start_script(glottis.walkto, glottis, 6.30801, 9.10757, 2.52, 0, -182, 0)
    IrisUp(355, 245, 1000)
    manny:wait_for_actor()
    glottis:wait_for_actor()
    MakeSectorActive("off_box", FALSE)
    glottis:say_line("/sygl112/")
    glottis:play_chore(3)
    sleep_for(1800)
    chepito:default()
    chepito:put_in_set(ps)
    chepito:follow_boxes()
    chepito:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(chepito.hActor, 0.28)
    chepito:set_walk_rate(0.45)
    chepito:setpos({ x = 6.80601, y = 8.97257, z = 2.52 })
    chepito:setrot(0, -180, 0)
    glottis:pop_costume()
    glottis:set_walk_chore(0, "gl_sailor_fastwalk.cos")
    glottis:set_rest_chore(nil)
    ps:current_setup(ps_widha)
    chepito:say_line("/sych113/")
    chepito:blend(chepito_base, chepito_exclaim, 500)
    wait_for_message()
    chepito:say_line("/sych114/")
    chepito:blend(chepito_exclaim, chepito_2conv, 500)
    wait_for_message()
    chepito:say_line("/sych115/")
    chepito:blend(chepito_2conv, chepito_exclaim, 500)
    wait_for_message()
    chepito:say_line("/sych116/")
    chepito:blend(chepito_exclaim, chepito_2conv, 500)
    wait_for_message()
    play_movie("ps.snm", 168, 0)
    manny:say_line("/syma117/")
    chepito:blend(chepito_base, chepito_exclaim, 500)
    wait_for_message()
    manny:say_line("/syma118/")
    wait_for_message()
    glottis:say_line("/sygl119/")
    wait_for_message()
    glottis:say_line("/sygl120/")
    wait_for_message()
    ps:current_setup(ps_intro)
    RunFullscreenMovie("thepearl.snm")
    sleep_for(3000)
    manny:twist_head_gesture()
    manny:say_line("/syma121/")
    manny:wait_for_message()
    ps:current_setup(ps_widha)
    ps.octo_here = TRUE
    StartMovie("ps_0.snm", TRUE, 168, 161)
    if not octoeye then
        octoeye = Actor:create(nil, nil, nil, "octoeye")
    end
    octoeye:set_costume("octo_eye.cos")
    octoeye:put_in_set(ps)
    octoeye:follow_boxes()
    octoeye:play_chore_looping(0)
    SetActorScale(octoeye.hActor, 0.7)
    octoeye:ignore_boxes()
    octoeye:set_softimage_pos(-29.2413, 6.8701, 26.8876)
    octoeye:setrot(2.7954, 0, -1.2836)
    start_script(ps.octo_watch_manny)
    END_CUT_SCENE()
    start_script(ps.glottis_follow_manny)
    start_script(ps.chepito_follow_manny)
    start_script(ps.chepito_light)
end
cut_scene.subjacked = function() -- line 302
    local local1 = { }
    cur_puzzle_state[35] = TRUE
    cutscene_menu:enable_cutscene("subsaway")
    START_CUT_SCENE()
    ps:current_setup(ps_subla)
    set_override(cut_scene.skip_subjacked, cut_scene)
    RunFullscreenMovie("subsaway.snm")
    END_CUT_SCENE()
    kill_override()
    start_script(ea.arrive, ea)
end
cut_scene.skip_subjacked = function() -- line 317
    kill_override()
    StopMovie()
    start_script(ea.arrive, ea)
end
cut_scene.reunion = function() -- line 323
    manny:clear_hands()
    dr.reunited = TRUE
    cutscene_menu:enable_cutscene("reunion")
    set_override(cut_scene.reunion_override)
    START_CUT_SCENE("no head")
    IrisDown(0, 0, 1)
    RunFullscreenMovie("reunion.snm")
    fo:switch_to_set()
    fo:current_setup(fo_berws)
    manny:put_in_set(fo)
    manny:set_softimage_pos(0.0989, 0, 10.0346)
    manny:setrot(0, 251.047, 0)
    manny:head_look_at(nil)
    manny:push_costume("mn_wakeup.cos")
    manny:play_chore(1)
    sleep_for(2000)
    IrisUp(125, 370, 1000)
    sleep_for(2000)
    manny:play_chore(0)
    break_here()
    sleep_for(2000)
    pugsy:say_line("/sypu122/")
    wait_for_message()
    pugsy:say_line("/sypu123/")
    manny:wait_for_chore(0, "mn_wakeup.cos")
    manny:pop_costume()
    END_CUT_SCENE()
end
cut_scene.reunion_override = function() -- line 358
    kill_override()
    shut_up_everybody()
    music_state:unpause()
    fo:switch_to_set()
    manny:put_in_set(fo)
    manny:set_softimage_pos(0.0989, 0, 10.0346)
    manny:setrot(0, 251.047, 0)
    manny:head_look_at(nil)
    if manny:get_costume() == "mn_wakeup.cos" then
        manny:pop_costume()
    end
    IrisUp(0, 0, 1)
end
cut_scene.leg = function() -- line 371
    ar:switch_to_set()
    cutscene_menu:enable_cutscene("stocking")
    set_override(cut_scene.leg_override, cut_scene)
    START_CUT_SCENE()
    RunFullscreenMovie("stocking.snm")
    END_CUT_SCENE()
end
cut_scene.leg_override = function() -- line 381
    kill_override()
    StopMovie()
    shut_up_everybody()
    IrisUp(0, 0, 1)
end
cut_scene.hostage = function() -- line 389
    cutscene_menu:enable_cutscene("hostage")
    system:lock_display()
    manny:clear_hands()
    dr:switch_to_set()
    dr.talked_out = FALSE
    meche.locked_up = TRUE
    mn.gun:free()
    manny:put_in_set(dr)
    manny:setpos(0.362641, -0.0488605, 0)
    manny:setrot(0, 53.0956, 0)
    system:unlock_display()
    START_CUT_SCENE()
    set_override(cut_scene.hostage_override)
    RunFullscreenMovie("hostage.snm")
    END_CUT_SCENE()
    dr:current_setup(dr_winws)
    sleep_for(500)
    manny:walkto(0.308138, -0.46322, 0)
end
cut_scene.hostage_override = function() -- line 487
    kill_override()
    music_state:unpause()
    shut_up_everybody()
    manny:setpos(0.308138, -0.46322, 0)
    manny:setrot(0, 171.203, 0)
    dr:current_setup(dr_winws)
    IrisUp(0, 0, 1)
end
cut_scene.lamancha = function() -- line 497
    cutscene_menu:enable_cutscene("lamancha")
    set_override(cut_scene.skip_lamancha)
    START_CUT_SCENE()
    RunFullscreenMovie("lamancha.snm")
    END_CUT_SCENE()
    gh:come_out_door(gh.ac_door)
    IrisUp(609, 314, 1000)
end
cut_scene.skip_lamancha = function() -- line 510
    kill_override()
    gh:come_out_door(gh.ac_door)
    IrisUp(609, 314, 1000)
end
cut_scene.posidon = function() -- line 516
    cutscene_menu:enable_cutscene("poseidon")
    cur_puzzle_state[42] = TRUE
    cur_puzzle_state[44] = TRUE
    raised_lamancha = TRUE
    START_CUT_SCENE()
    set_override(cut_scene.skip_poseidon, cut_scene)
    RunFullscreenMovie("poseidon.snm")
    END_CUT_SCENE()
    cut_scene:skip_poseidon()
end
cut_scene.skip_poseidon = function(arg1, arg2) -- line 532
    if arg2 then
        kill_override()
    end
    if meche_freed then
        bl.talked_kids = TRUE
        start_script(bl.everybodys_here)
    else
        start_script(bl.boat_before_passengers)
    end
end
cut_scene.exodus = function() -- line 545
    cutscene_menu:enable_cutscene("exodus")
    cur_puzzle_state[45] = TRUE
    manny:clear_hands()
    mn.chisel:put_in_limbo()
    START_CUT_SCENE()
    bl:switch_to_set()
    set_override(cut_scene.skip_exodus, cut_scene)
    RunFullscreenMovie("exodus.snm")
    END_CUT_SCENE()
    cut_scene:skip_exodus()
end
cut_scene.skip_exodus = function(arg1, arg2) -- line 561
    if arg2 then
        kill_override()
    end
    lu:switch_to_set()
    break_here()
end
cut_scene.bloodeye = function() -- line 571
    cutscene_menu:enable_cutscene("crushed")
    cur_puzzle_state[46] = TRUE
    stop_sound("lu.imu")
    manny.is_holding = nil
    manny:stop_chore(ms_hold_scythe, "mn2.cos")
    manny.hold_chore = nil
    set_override(cut_scene.skip_bloodeye, cut_scene)
    START_CUT_SCENE()
    RunFullscreenMovie("crushed.snm")
    NukeResources()
    GetSystemFonts()
    CheckForCD("at.set", TRUE)
    END_CUT_SCENE()
    start_script(cut_scene.post_bloodeye)
end
cut_scene.skip_bloodeye = function() -- line 592
    kill_override()
    StopMovie()
    NukeResources()
    CheckForCD("at.set", TRUE)
    start_script(cut_scene.post_bloodeye)
end
cut_scene.post_bloodeye = function() -- line 601
    START_CUT_SCENE()
    bs:switch_to_set()
    doorman_in_hot_box = TRUE
    bs:come_out_door(bs.tg_door)
    sleep_for(500)
    manny:say_line("/syma156/")
    wait_for_message()
    END_CUT_SCENE()
    manny:say_line("/syma157/")
end
BundleResource("chepito.cos")
BundleResource("hm1_hitman.cos")
BundleResource("hm2_hitman.cos")
BundleResource("hm3_hitman.cos")
BundleResource("nautical_inv.set")
BundleResource("binoplug.snm")
CheckFirstTime("year_4.lua")
dofile("bruno_coffin.lua")
dofile("msb_coffin.lua")
dofile("msb_bone_trail.lua")
cut_scene.helltrain = function() -- line 12
    cutscene_menu:enable_cutscene("heltrain")
    START_CUT_SCENE()
    set_override(cut_scene.skip_helltrain, cut_scene)
    tg:switch_to_set()
    seen_hell_train = TRUE
    manny:put_in_set(tg)
    manny:setpos(-1.71745, 32.6743, 17.13)
    manny:setrot(0, 233.769, 0)
    RunFullscreenMovie("heltrain.snm")
    sleep_for(1000)
    manny:setrot(0, 329.78, 0, TRUE)
    manny:head_look_at(gate_keeper)
    gate_keeper:shake_cycle()
    sleep_for(1000)
    gate_keeper:stop_shake()
    manny:head_look_at(nil)
    END_CUT_SCENE()
end
cut_scene.skip_helltrain = function(arg1) -- line 34
    kill_override()
    seen_hell_train = TRUE
    tg:switch_to_set()
    manny:put_in_set(tg)
    manny:setpos(-1.71745, 32.6743, 17.13)
    manny:setrot(0, 329.78, 0)
    manny:head_look_at(nil)
end
cut_scene.brunoup = function() -- line 45
    in_year_four = TRUE
    if not bruno then
        bruno = Actor:create(nil, nil, nil, "/lrtx001/")
    end
    bruno.resurrected = TRUE
    td.mug:get()
    td:switch_to_set()
    START_CUT_SCENE()
    set_override(cut_scene.skip_brunoup, cut_scene)
    bruno:set_costume(nil)
    bruno:set_costume("bruno_coffin.cos")
    bruno:set_talk_color(Blue)
    bruno:set_mumble_chore(bruno_coffin_mumble)
    bruno:set_talk_chore(1, bruno_coffin_stop_talk)
    bruno:set_talk_chore(2, bruno_coffin_a)
    bruno:set_talk_chore(3, bruno_coffin_c)
    bruno:set_talk_chore(4, bruno_coffin_e)
    bruno:set_talk_chore(5, bruno_coffin_f)
    bruno:set_talk_chore(6, bruno_coffin_l)
    bruno:set_talk_chore(7, bruno_coffin_m)
    bruno:set_talk_chore(8, bruno_coffin_o)
    bruno:set_talk_chore(9, bruno_coffin_t)
    bruno:set_talk_chore(10, bruno_coffin_u)
    bruno:put_in_set(td)
    bruno:setpos(0.0778102, -1.3232, 0.0496999)
    bruno:setrot(90, 208, 0)
    bruno.saylineTable.x = 450
    bruno.saylineTable.y = 30
    manny:put_in_set(td)
    manny:put_at_object(td.coffin)
    manny:push_costume("msb_coffin.cos")
    manny:play_chore(msb_coffin_open, "msb_coffin.cos")
    start_sfx("tdCofOp2.wav")
    music_state:set_sequence(seqPopBrunoCasket)
    bruno:play_chore(bruno_coffin_open, "bruno_coffin.cos")
    sleep_for(1200)
    td.coffin:play_chore(td_coffin_open)
    manny:wait_for_chore(msb_coffin_open, "msb_coffin.cos")
    manny:play_chore(msb_coffin_bruno, "msb_coffin.cos")
    bruno:play_chore(bruno_coffin_bruno, "bruno_coffin.cos")
    manny:say_line("/bruma01a/")
    manny:wait_for_message()
    manny:say_line("/bruma01b/")
    manny:wait_for_message()
    manny:wait_for_chore(msb_coffin_bruno, "msb_coffin.cos")
    manny:play_chore(msb_coffin_you, "msb_coffin.cos")
    bruno:play_chore(bruno_coffin_you, "bruno_coffin.cos")
    bruno:say_line("/brubo02a/")
    bruno:wait_for_message()
    manny:wait_for_chore(msb_coffin_you, "msb_coffin.cos")
    manny:play_chore(msb_coffin_magazine, "msb_coffin.cos")
    bruno:play_chore(bruno_coffin_magazine, "bruno_coffin.cos")
    bruno:say_line("/brubo02b/")
    bruno:wait_for_message()
    manny:wait_for_chore(msb_coffin_magazine, "msb_coffin.cos")
    manny:play_chore(msb_coffin_mug, "msb_coffin.cos")
    bruno:play_chore(bruno_coffin_mug, "bruno_coffin.cos")
    bruno:say_line("/brubo02c/")
    bruno:wait_for_message()
    sleep_for(500)
    bruno:say_line("/brubo03a/")
    bruno:wait_for_message()
    manny:wait_for_chore(msb_coffin_mug, "msb_coffin.cos")
    bruno:say_line("/brubo03b/")
    sleep_for(1700)
    manny:play_chore(msb_coffin_phooey, "msb_coffin.cos")
    bruno:play_chore(bruno_coffin_phooey, "bruno_coffin.cos")
    bruno:wait_for_message()
    bruno:say_line("/brubo04/")
    bruno:wait_for_chore(bruno_coffin_phooey, "bruno_coffin.cos")
    manny:wait_for_chore(msb_coffin_phooey, "msb_coffin.cos")
    td:current_setup(td_mnycu)
    manny:pop_costume()
    manny:setpos(0.440972, -0.942085, -0.02)
    manny:setrot(0, 119.663, 0)
    manny:generic_pickup(td.mug)
    bruno:wait_for_message()
    bruno:free()
    look_at_item_in_hand(TRUE)
    sleep_for(1500)
    manny:head_look_at_point(1.71346, -3.65615, 1.069)
    sleep_for(3000)
    manny:head_look_at(nil)
    sleep_for(1000)
    td:current_setup(td_tdiha)
    END_CUT_SCENE()
end
cut_scene.skip_brunoup = function(arg1) -- line 136
    kill_override()
    bruno:free()
    if manny:get_costume() == "msb_coffin.cos" then
        manny:pop_costume()
    end
    manny:stop_chore()
    manny:generic_pickup(td.mug)
    manny:setpos(0.440972, -0.942085, -0.02)
    manny:setrot(0, 119.663, 0)
    if td.mug.owner ~= manny then
        td.mug:get()
    end
end
cut_scene.coffrock = function(arg1) -- line 151
    in_year_four = TRUE
    if tg.note.owner ~= manny then
        tg.note:get()
    end
    gate_keeper:free()
    mechanic1:free()
    mechanic2:free()
    mk.fire_actor:free()
    mk.mug_rack_actor:free()
    mk.mug_actor:free()
    cutscene_menu:enable_cutscene("coffrock")
    START_CUT_SCENE()
    td.mug:free()
    mk.rag:free()
    my.oily_rag:free()
    set_override(cut_scene.skip_coffrock, cut_scene)
    RunFullscreenMovie("coffrock.snm")
    xb:switch_to_set()
    xb:current_setup(xb_trkws)
    StartMovie("sd_g.snm", nil, 320, 176)
    wait_for_movie()
    StartMovie("sd_li.snm", TRUE, 320, 169)
    manny:put_in_set(xb)
    manny:setpos(41.4727, -12.7593, 0.617559)
    manny:setrot(0, 90, 0)
    manny:play_chore(msb_hat_off, "msb.cos")
    manny:stop_chore(msb_hat_on, "msb.cos")
    meche:setpos(41.1594, -12.9213, 0.729545)
    meche:setrot(0, 90, 0)
    meche:follow_boxes()
    manny:follow_boxes()
    start_script(meche.walkto, meche, 39.334, -12.8581, 1, 0, -37, 0)
    start_script(manny.walkto, manny, 39.9684, -12.7403, 1, 0, -317, 0)
    glottis:put_in_set(xb)
    glottis:setpos(39.398, -12.2811, 1)
    glottis:setrot(0, 146, 0)
    glottis:set_costume("gl_climb_dock.cos")
    glottis:play_chore(0)
    glottis:wait_for_chore()
    glottis:setpos(39.3957, -12.2492, 1)
    glottis:setrot(0, 135.863, 0)
    glottis:set_costume("glottis.cos")
    glottis:set_head(3, 4, 4, 165, 28, 80)
    glottis:set_mumble_chore(glottis_mumble)
    glottis:set_talk_chore(1, glottis_stop_talk)
    glottis:set_talk_chore(2, glottis_a)
    glottis:set_talk_chore(3, glottis_c)
    glottis:set_talk_chore(4, glottis_e)
    glottis:set_talk_chore(5, glottis_f)
    glottis:set_talk_chore(6, glottis_l)
    glottis:set_talk_chore(7, glottis_m)
    glottis:set_talk_chore(8, glottis_o)
    glottis:set_talk_chore(9, glottis_t)
    glottis:set_talk_chore(10, glottis_u)
    meche:wait_for_actor()
    manny:wait_for_actor()
    glottis:head_look_at_point(39.9684, -12.7403, 1)
    glottis:fade_in_chore(glottis_home_pose, "glottis.cos", 800)
    glottis:say_line("/cfrgl12/")
    glottis:wait_for_message()
    manny:head_look_at_point(39.3957, -12.2492, 2)
    manny:say_line("/cfrma13/")
    manny:push_costume("msb_gestures.cos")
    manny:push_chore(2)
    manny:wait_for_message()
    glottis:say_line("/cfrgl14/")
    glottis:push_chore(glottis_look_down, "glottis.cos")
    glottis:wait_for_message()
    manny:pop_costume()
    manny:head_look_at(xbridge)
    glottis:head_look_at(xbridge)
    sleep_for(2000)
    StopMovie()
    xb:current_setup(xb_docws)
    meche:setpos({ x = 28.2727, y = -13.8664, z = 1 })
    meche:setrot(0, 0, 0)
    glottis:default()
    glottis:put_in_set(xb)
    glottis:setpos(28.7635, -13.2831, 1)
    glottis:setrot(0, 90, 0)
    glottis:play_chore_looping(glottis_flip_ears)
    glottis:set_head(3, 4, 4, 165, 28, 80)
    glottis:set_mumble_chore(glottis_mumble)
    glottis:set_talk_chore(1, glottis_stop_talk)
    glottis:set_talk_chore(2, glottis_a)
    glottis:set_talk_chore(3, glottis_c)
    glottis:set_talk_chore(4, glottis_e)
    glottis:set_talk_chore(5, glottis_f)
    glottis:set_talk_chore(6, glottis_l)
    glottis:set_talk_chore(7, glottis_m)
    glottis:set_talk_chore(8, glottis_o)
    glottis:set_talk_chore(9, glottis_t)
    glottis:set_talk_chore(10, glottis_u)
    glottis:push_costume("gl_fastwalk.cos")
    glottis:head_look_at(nil)
    glottis:set_walk_chore(0, "gl_sailor_fastwalk.cos")
    glottis:set_walk_rate(0.5)
    glottis:set_turn_rate(0.2)
    glottis:set_collision_mode(COLLISION_SPHERE)
    SetActorCollisionScale(glottis.hActor, 0.5)
    SetActorCollisionScale(manny.hActor, 0.35)
    manny:setpos(27.8672, -13.136, 1)
    manny:setrot(0, 77, 0)
    manny:say_line("/syma189/")
    wait_for_message()
    glottis:say_line("/sygl190/")
    wait_for_message()
    jb:switch_to_set()
    manny:put_in_set(jb)
    manny:setpos(0.577154, -1.64949, 0.1)
    manny:setrot(0, -1806.61, 0)
    break_here()
    END_CUT_SCENE()
    start_script(jb.see_trap)
end
cut_scene.skip_coffrock = function(arg1) -- line 283
    kill_override()
    jb:switch_to_set()
    manny:put_in_set(jb)
    manny:setpos(0.577154, -1.64949, 0.1)
    manny:setrot(0, -1806.61, 0)
    manny:stop_chore(msb_hat_on, "msb.cos")
    manny:play_chore(msb_hat_off, "msb.cos")
end
cut_scene.vivamaro = function() -- line 293
    cutscene_menu:enable_cutscene("vivamaro")
    if tg.note.owner ~= manny then
        tg.note:get()
    end
    START_CUT_SCENE()
    set_override(cut_scene.skip_vivamaro, cut_scene)
    RunFullscreenMovie("vivamaro.snm")
    manny:default("siberian")
    lw:vivamaro_fix()
    nq:switch_to_set()
    manny:put_in_set(nq)
    manny:setpos(0.56648, 0.607994, 0)
    manny:setrot(0, 162.288, 0)
    END_CUT_SCENE()
end
cut_scene.skip_vivamaro = function(arg1) -- line 312
    kill_override()
    stop_script(lw.vivamaro_fix)
    salvador:free()
    olivia:free()
    nq:switch_to_set()
    manny:put_in_set(nq)
    manny:default("siberian")
    manny:setpos(0.56648, 0.607994, 0)
    manny:setrot(0, 162.288, 0)
end
cut_scene.eatbird = function() -- line 325
    cutscene_menu:enable_cutscene("eatbird")
    cur_puzzle_state[51] = TRUE
    bowlsley_in_hiding = TRUE
    nq:switch_to_set()
    START_CUT_SCENE()
    set_override(cut_scene.skip_eatbird, cut_scene)
    RunFullscreenMovie("eatbird.snm")
    END_CUT_SCENE()
end
cut_scene.skip_eatbird = function(arg1) -- line 338
    kill_override()
end
cut_scene.albinizod = function() -- line 343
    local local1 = { }
    local local2 = FALSE
    uncovered_trail = TRUE
    START_CUT_SCENE()
    manny:clear_hands()
    set_override(cut_scene.skip_albinizod, cut_scene)
    manny:say_line("/syma201/")
    wait_for_message()
    system:lock_display()
    at:switch_to_set("noenter")
    glottis:set_costume("bonewagon_gl.cos")
    glottis:put_in_set(at)
    glottis:set_visibility(TRUE)
    glottis:set_mumble_chore(bonewagon_gl_gl_mumble)
    glottis:set_talk_chore(1, bonewagon_gl_stop_talk)
    glottis:set_talk_chore(2, bonewagon_gl_a)
    glottis:set_talk_chore(3, bonewagon_gl_c)
    glottis:set_talk_chore(4, bonewagon_gl_e)
    glottis:set_talk_chore(5, bonewagon_gl_f)
    glottis:set_talk_chore(6, bonewagon_gl_l)
    glottis:set_talk_chore(7, bonewagon_gl_m)
    glottis:set_talk_chore(8, bonewagon_gl_o)
    glottis:set_talk_chore(9, bonewagon_gl_t)
    glottis:set_talk_chore(10, bonewagon_gl_u)
    glottis:play_chore(bonewagon_gl_gl_drive)
    glottis:ignore_boxes()
    glottis:setpos({ x = -0.2, y = 11.875, z = 0 })
    glottis:setrot(0, 180, 0)
    MakeSectorActive("zw_door", FALSE)
    manny:ignore_boxes()
    manny:put_in_set(at)
    manny:setpos(-0.2, 8.77244, 0)
    manny:setrot(0, -196.21201, 0)
    if manny.fancy then
        manny:push_costume("mcc_bone_trail.cos")
    else
        manny:push_costume("msb_bone_trail.cos")
    end
    manny:play_chore_looping(msb_bone_trail_walk_grind)
    break_here()
    start_sfx("bwIdle.IMU", IM_HIGH_PRIORITY, 80)
    system:unlock_display()
    at:current_setup(0)
    manny:head_look_at(nil)
    repeat
        local1 = manny:getpos()
        local1.y = local1.y - PerSecond(0.30000001)
        if local1.y < 8 and not local2 then
            local2 = TRUE
            glottis:say_line("/sygl202/")
        end
        if local1.y < 7 then
            local1.y = 7
        end
        manny:setpos(local1)
        break_here()
    until local1.y == 7
    at:current_setup(at_albcu)
    glottis:set_visibility(FALSE)
    manny:set_visibility(FALSE)
    manny:pop_costume()
    if manny.fancy then
        manny:play_chore_looping(mcc_thunder_takeout_grinder_full, "mcc_thunder.cos")
    else
        manny:play_chore_looping(msb_activate_grinder_full, "msb.cos")
    end
    manny:play_chore_looping(msb_hold, manny.base_costume)
    wait_for_message()
    manny:say_line("/syma203/")
    wait_for_message()
    at:current_setup(0)
    glottis:set_visibility(TRUE)
    manny:set_visibility(TRUE)
    glottis:say_line("/sygl204/")
    wait_for_message()
    RunFullscreenMovie("albinizod.snm")
    at.manny_state = IN_BW
    glottis.bonewagon_up = FALSE
    if manny.fancy then
        manny:stop_chore(mcc_thunder_takeout_grinder_full, "mcc_thunder.cos")
    else
        manny:stop_chore(msb_activate_grinder_full, "msb.cos")
    end
    manny:stop_chore(msb_hold, manny.base_costume)
    stop_sound("bwIdle.imu")
    manny:put_in_set(at)
    at:current_setup(at_intbw)
    at:enter()
    END_CUT_SCENE()
    sh.remote.raised = FALSE
    glottis.in_at = TRUE
    manny:set_visibility(TRUE)
    MakeSectorActive("zw_door", TRUE)
end
cut_scene.skip_albinizod = function() -- line 449
    kill_override()
    local local1 = FALSE
    uncovered_trail = TRUE
    sh.remote.raised = FALSE
    glottis.in_at = TRUE
    manny:set_visibility(TRUE)
    MakeSectorActive("zw_door", TRUE)
    manny:default()
    at.manny_state = IN_BW
    glottis.bonewagon_up = FALSE
    if manny.fancy then
        manny:stop_chore(mcc_thunder_takeout_grinder_full, "mcc_thunder.cos")
    else
        manny:stop_chore(msb_activate_grinder_full, "msb.cos")
    end
    manny:stop_chore(msb_hold, manny.base_costume)
    stop_sound("bwIdle.imu")
    manny:put_in_set(at)
    at:current_setup(at_intbw)
    at:enter()
    at:switch_to_set()
end
cut_scene.oldjob = function() -- line 473
    cutscene_menu:enable_cutscene("oldjob")
    cutscene_menu:enable_cutscene("falling")
    fi.gun:get()
    fi.sproutella:get()
    si.nitrogen:get()
    th.grinder:get()
    th.grinder.has_bone = TRUE
    bowlsley_in_hiding = FALSE
    sh.remote:free()
    START_CUT_SCENE()
    nl:switch_to_set()
    nl:current_setup(nl_legla)
    set_override(cut_scene.skip_oldjob, cut_scene)
    RunFullscreenMovie("oldjob.snm")
    RunFullscreenMovie("falling.snm")
    manny:put_in_set(nl)
    manny:setpos(-3.51269, -0.128288, -0.02)
    manny:setrot(0, 253.729, 0)
    manny:runto(0.162631, -0.0302194, -0.02, 0, 288.649, 0)
    manny:wait_for_actor()
    manny:set_run(FALSE)
    END_CUT_SCENE()
end
cut_scene.skip_oldjob = function(arg1) -- line 503
    kill_override()
    manny:put_in_set(nl)
    manny:setpos(0.162631, -0.0302194, -0.02)
    manny:setrot(0, 288.649, 0)
    manny:set_run(FALSE)
end
cut_scene.eldepot = function() -- line 512
    cutscene_menu:enable_cutscene("eldepot")
    fi.gun:put_in_limbo()
    fi.sproutella:put_in_limbo()
    START_CUT_SCENE()
    set_override(cut_scene.skip_eldepot, cut_scene)
    RunFullscreenMovie("eldepot.snm")
    END_CUT_SCENE()
    start_script(me.meadow_setup)
end
cut_scene.skip_eldepot = function(arg1) -- line 526
    kill_override()
    single_start_script(me.meadow_setup)
end
cut_scene.greenhse = function() -- line 532
    cutscene_menu:enable_cutscene("greenhse")
    set_override(cut_scene.greenhse_override)
    START_CUT_SCENE()
    RunFullscreenMovie("greenhse.snm")
    END_CUT_SCENE()
    start_script(mf.setup_suffering)
end
cut_scene.greenhse_override = function() -- line 542
    kill_override()
    start_script(mf.setup_suffering)
end
cut_scene.cut_flowers = function() -- line 547
    cutscene_menu:enable_cutscene("mnyctufl")
    START_CUT_SCENE()
    set_override(kill_override)
    RunFullscreenMovie("mnycutfl.snm")
    END_CUT_SCENE()
end
cut_scene.hecgetit = function() -- line 555
    cutscene_menu:enable_cutscene("hecgetit")
    START_CUT_SCENE()
    set_override(cut_scene.skip_hecgetit, cut_scene)
    RunFullscreenMovie("hecgetit.snm")
    END_CUT_SCENE()
end
cut_scene.skip_hecgetit = function(arg1) -- line 564
    kill_override()
end
cut_scene.hecdie = function() -- line 568
    cutscene_menu:enable_cutscene("hecdie")
    START_CUT_SCENE()
    set_override(cut_scene.skip_hecdie, cut_scene)
    me:current_setup(me_rerws)
    RunFullscreenMovie("hecdie.snm")
    END_CUT_SCENE()
end
cut_scene.skip_hecdie = function(arg1) -- line 578
    kill_override()
end
cut_scene.byebye = function() -- line 582
    cutscene_menu:enable_cutscene("byebye")
    START_CUT_SCENE()
    set_override(cut_scene.skip_byebye, cut_scene)
    me:current_setup(me_rerws)
    break_here()
    ForceRefresh()
    RunFullscreenMovie("byebye.snm")
    END_CUT_SCENE()
    music_state:set_state(STATE_NULL)
    sleep_for(1750)
    start_script(cut_scene.end_credits, cut_scene)
end
cut_scene.skip_byebye = function(arg1) -- line 600
    kill_override()
    start_script(cut_scene.end_credits, cut_scene)
end
cut_scene.end_credits = function() -- line 605
    set_override(cut_scene.skip_credits, cut_scene)
    START_CUT_SCENE()
    me:current_setup(me_rerws)
    credits_menu.hicolor = MakeColor(222, 180, 81)
    credits_menu.locolor = MakeColor(125, 127, 200)
    start_script(credits_menu.run, credits_menu, "endgame.txt", TRUE)
    wait_for_script(credits_menu.run)
    credits_menu:cancel()
    main_menu:free_logo()
    END_CUT_SCENE()
    exit_the_game()
end
cut_scene.skip_credits = function() -- line 626
    kill_override()
    stop_script(credits_menu.run)
    stop_script(credits_menu.end_credits_hook)
    stop_script(credits_menu.fade_in_logo)
    main_menu:free_logo()
    exit_the_game()
end
BundleResource("sv_in_hq.cos")
BundleResource("chepito.cos")
BundleResource("olivia_idles.cos")
BundleResource("brennis_fix_idle.cos")
BundleResource("siberian_inv.set")
BundleResource("death_inv.set")
BundleResource("syma156.wav")
BundleResource("syma157.wav")
CheckFirstTime("zw.lua")
zw = Set:create("zw.set", "sewer maze", { zw_intws = 0, zw_ovrhd = 1 })
zw.talk_bowlsley = function() -- line 12
    zw.talked_bowlsley = TRUE
    sleep_for(1000)
    manny:say_line("/zwma003/")
end
zw.afraid_of_the_dark = function() -- line 18
    START_CUT_SCENE()
    lw.alligator_roar()
    wait_for_message()
    sleep_for(500)
    manny:walkto(2.96139, 1.1807, 0)
    manny:wait_for_actor()
    if not bowlsley_in_hiding then
        manny:say_line("/zwma004/")
    else
        manny:say_line("/zwma005/")
        wait_for_message()
        manny:say_line("/zwma006/")
    end
    END_CUT_SCENE()
end
zw.exclaim_tears = function() -- line 36
    local local1
    START_CUT_SCENE()
    MakeSectorActive("sh_door", FALSE)
    MakeSectorActive("sprout_sector", TRUE)
    manny:setpos(-0.74887198, 7.41676, 0.47)
    manny:setrot(0, -159, 0)
    if manny.is_holding ~= th.grinder then
        open_inventory(TRUE, TRUE)
        manny.is_holding = th.grinder
        close_inventory()
    end
    local1 = start_script(manny_grind)
    wait_for_script(local1)
    manny:walkto(-0.61283201, 6.8979402, 0.47, 0, -181, 0)
    manny:wait_for_actor()
    local1 = start_script(manny_grind)
    wait_for_script(local1)
    manny:walkto(-0.69373399, 5.1929798, 0.47, 0, -527, 0)
    manny:wait_for_actor()
    MakeSectorActive("sh_door", TRUE)
    MakeSectorActive("sprout_sector", FALSE)
    END_CUT_SCENE()
end
zw.enter = function(arg1) -- line 66
    zw:add_ambient_sfx({ "alDstGrl.wav" }, { min_pan = 10, max_pan = 117, min_delay = 15000, max_delay = 30000 })
    start_script(sewer_drip)
    if trail_actor then
        start_script(sh.set_up_flowers)
    end
    MakeSectorActive("sprout_sector", FALSE)
    if exclaimed_tears and not zw.talked_flowers then
        zw.talked_flowers = TRUE
        if not uncovered_trail then
            start_script(zw.exclaim_tears)
        end
    end
    if not exclaimed_tears then
        zw.trail_of_tears:make_untouchable()
    else
        zw.trail_of_tears:make_touchable()
    end
end
zw.exit = function(arg1) -- line 90
    local local1 = 1
    stop_script(sewer_drip)
    if trail_actor.i > 0 then
        repeat
            trail_actor.instances[local1].actor:free()
            local1 = local1 + 1
        until local1 > trail_actor.i
    end
    trail_actor:free()
end
zw.hole1 = Object:create(zw, "/zwtx007/grating", -0.43904299, -0.963108, 0.13, { range = 0.80000001 })
zw.hole1.use_pnt_x = -0.33904299
zw.hole1.use_pnt_y = -1.46311
zw.hole1.use_pnt_z = 0
zw.hole1.use_rot_x = 0
zw.hole1.use_rot_y = -703.26099
zw.hole1.use_rot_z = 0
zw.hole1.parent = lw.hole
zw.hole2 = Object:create(zw, "/zwtx008/grating", 0.60697001, -1.2159899, 0, { range = 0.80000001 })
zw.hole2.use_pnt_x = 0.216971
zw.hole2.use_pnt_y = -1.28599
zw.hole2.use_pnt_z = 0
zw.hole2.use_rot_x = 0
zw.hole2.use_rot_y = -814.78003
zw.hole2.use_rot_z = 0
zw.hole2.parent = lw.hole
zw.hole3 = Object:create(zw, "/zwtx009/drain", -1.2687, -2.98229, 0.89999998, { range = 2 })
zw.hole3.use_pnt_x = -0.78869599
zw.hole3.use_pnt_y = -2.24229
zw.hole3.use_pnt_z = 0
zw.hole3.use_rot_x = 0
zw.hole3.use_rot_y = -933.48199
zw.hole3.use_rot_z = 0
zw.hole3.parent = lw.hole
zw.hole4 = Object:create(zw, "/zwtx010/grating", -2.48985, -1.58794, 0.047280099, { range = 1 })
zw.hole4.use_pnt_x = -1.85985
zw.hole4.use_pnt_y = -1.93794
zw.hole4.use_pnt_z = 0.047280099
zw.hole4.use_rot_x = 0
zw.hole4.use_rot_y = -987.08502
zw.hole4.use_rot_z = 0
zw.hole4.parent = lw.hole
zw.trail_of_tears = Object:create(zw, "/zwtx011/trail of baby tears", 1.78713, 0.534778, 0, { range = 0.60000002 })
zw.trail_of_tears.use_pnt_x = 1.66605
zw.trail_of_tears.use_pnt_y = 0.21121401
zw.trail_of_tears.use_pnt_z = 0
zw.trail_of_tears.use_rot_x = 0
zw.trail_of_tears.use_rot_y = 40.312698
zw.trail_of_tears.use_rot_z = 0
zw.trail_of_tears.lookAt = function(arg1) -- line 160
    manny:say_line("/zwma012/")
end
zw.trail_of_tears.pickUp = function(arg1) -- line 164
    system.default_response("mittens")
end
zw.trail_of_tears.use = zw.trail_of_tears.pickUp
zw.sh_door = Object:create(zw, "/zwtx001/door", -0.407727, 10.9327, 0.47, { range = 2 })
zw.sh_door.use_pnt_x = -0.657727
zw.sh_door.use_pnt_y = 7.32265
zw.sh_door.use_pnt_z = 0.47
zw.sh_door.use_rot_x = 0
zw.sh_door.use_rot_y = -733.05298
zw.sh_door.use_rot_z = 0
zw.sh_door.out_pnt_x = -0.449186
zw.sh_door.out_pnt_y = 8.8277702
zw.sh_door.out_pnt_z = 0.47
zw.sh_door.out_rot_x = 0
zw.sh_door.out_rot_y = -727.63202
zw.sh_door.out_rot_z = 0
zw.sh_door.walkOut = function(arg1) -- line 189
    sh:come_out_door(sh.zw_door)
end
zw.at_door = Object:create(zw, "/zwtx002/door", 2.9249301, 1.10021, 0.34999999, { range = 1 })
zw.at_door.use_pnt_x = 2.4960499
zw.at_door.use_pnt_y = 0.81119001
zw.at_door.use_pnt_z = 0
zw.at_door.use_rot_x = 0
zw.at_door.use_rot_y = -418.44299
zw.at_door.use_rot_z = 0
zw.at_door.out_pnt_x = 2.92488
zw.at_door.out_pnt_y = 1.10035
zw.at_door.out_pnt_z = 0
zw.at_door.out_rot_x = 0
zw.at_door.out_rot_y = -412.13101
zw.at_door.out_rot_z = 0
zw.at_door.lookAt = function(arg1) -- line 208
    manny:say_line("/zwma013/")
end
zw.at_exit = Object:create(zw, "/zwtx002/exit", 2.9249301, 1.10021, 0.34999999, { range = 0 })
zw.at_exit.use_pnt_x = 2.4960499
zw.at_exit.use_pnt_y = 0.81119001
zw.at_exit.use_pnt_z = 0
zw.at_exit.use_rot_x = 0
zw.at_exit.use_rot_y = -418.44299
zw.at_exit.use_rot_z = 0
zw.at_exit.out_pnt_x = 2.92488
zw.at_exit.out_pnt_y = 1.10035
zw.at_exit.out_pnt_z = 0
zw.at_exit.out_rot_x = 0
zw.at_exit.out_rot_y = -412.13101
zw.at_exit.out_rot_z = 0
zw.at_exit:make_untouchable()
zw.at_exit.walkOut = function(arg1) -- line 230
    if uncovered_trail then
        if albinizod_pinned then
            if fi.gun.owner == manny then
                START_CUT_SCENE()
                manny:walkto(2.96139, 1.1807, 0)
                manny:wait_for_actor()
                manny:say_line("/ksma013/")
                END_CUT_SCENE()
            else
                START_CUT_SCENE()
                IrisDown(320, 240, 1000)
                sleep_for(1000)
                at.manny_state = ON_LEDGE
                at:switch_to_set()
                manny:put_in_set(at)
                manny:setpos(0.597137, 6.13825, 1.3)
                start_script(manny.walkto, manny, 0.575701, 4.78142, 1.3, 0, -900.22, 0)
                IrisUp(320, 240, 1000)
                manny:wait_for_actor()
                END_CUT_SCENE()
            end
        else
            START_CUT_SCENE()
            IrisDown(320, 240, 1000)
            sleep_for(1000)
            at.manny_state = ON_GROUND
            manny:stop_chore()
            manny:put_in_set(at)
            at:current_setup(at_intbw)
            at:switch_to_set()
            IrisUp(320, 240, 1000)
            END_CUT_SCENE()
        end
    else
        start_script(zw.afraid_of_the_dark)
    end
end
