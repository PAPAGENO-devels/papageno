 *  add the string beginning and end terminator to the generator, remove cruft in opp.c/get_precedence
 *  the list used to rebuild the RHS is at most as long as the RHS (known at generation time): 
    remove the list structure, substitute with an array with generation-time-known size
 *  "rewrite" integer array in rewrite_rules is actually the array of LHS, expressed with their corresponding int
    change the name and remove the generative cruft
 * Fix test/src/parallel_lex_test so that it handles missing input parameters: e.g. invoking
 ./opp_parallel_lex namefile causes an abort trap without explanations on the error.
 * correct the fact that parsing_ctx moves around variables which should be compile time definitions (node realloc multiplier, for instance)
 * cleanup rewrite_to_axiom

//---

 * Allocate in advance strings for the semantic values of the tokens, so that malloc requests of the different lexing threads are not serialized, with negative serious consequences in the execution time of the lexing phase
 * It should be possible to reuse lex thread arguments used for the first phase of lexing also as thread arguments for the second phase of lexing. This should lead to a little gain in execution time (avoid time for malloc thread arguments).
 * optimization for comments in file par_in_lua.l: Crea una tabella hash che memorizza le classi di simboli di commenti chiusi (identificati dal numero di '=') gia' incontrati dall'inizio del chunk.Tiene traccia di una stack dei simboli di commento multilinea aperti pendenti nel chunk gia' scandito e, se incontra un simbolo di commento chiuso con un numero di '=' per cui non ci sono commenti aperti pendenti e il cui numero di = era gia' nella tabella hash dei simboli di commento chiusi incontrati dall'inizio del chunk, allora interrompe la scansione andando nello stato commentOrError. (hashtable per confrontare il numero di = del simbolo di commento pendente con quelli gia' letti). Il vantaggio di usare l'ottimizzazione e' che, alla lettura del commento chiuso che soddisfa queste condizioni, si puo' evitare di andare nello stato INITIAL e invece andare direttamente in commentOrError.
